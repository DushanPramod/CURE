rank: 1
score: 99.958740234375
patch: Iterator iter = res . entries . iterator ( ) ;
rank: 1
score: 99.81712646484375
patch: Iterator iter = res . entries ( ) ;
rank: 1
score: 99.7958984375
patch: Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 1
score: 99.79314575195312
patch: Iterator iter = res . iterator ( ) ;
rank: 2
score: 99.71959577287946
patch: Iterator iter = res . entries . entries . iterator ( ) ;
rank: 2
score: 99.70499674479167
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 3
score: 99.70082600911458
patch: Iterator iter = res . entries . size ( ) ;
rank: 3
score: 99.69817504882812
patch: Iterator iter = v . iterator ( ) ;
rank: 3
score: 99.68941243489583
patch: Iterator iter = v . entries . iterator ( ) ;
rank: 3
score: 99.68812561035156
patch: Iterator iter = res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 3
score: 99.6644287109375
patch: Iterator iter = res . entries . iter ( ) ;
rank: 3
score: 99.642626953125
patch: Iterator < String > iter = res . entries . iterator ( ) ;
rank: 3
score: 99.62861772017045
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 4
score: 99.67982313368056
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 4
score: 99.63694661458334
patch: final Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 4
score: 99.52793782552084
patch: Iterator < ] > iter = res . entries . iterator ( ) ;
rank: 5
score: 99.6561279296875
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( ) ;
rank: 5
score: 99.63635864257813
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 5
score: 99.62457953559027
patch: Iterator iter = res . entries ( ) . entries ( ) . iterator ( ) ;
rank: 5
score: 99.62128448486328
patch: Iterator iter = res . get . entries ( ) . iterator ( ) ;
rank: 5
score: 99.61539713541667
patch: Iterator iter = res . list . iterator ( ) ;
rank: 5
score: 99.58922758556548
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 5
score: 99.52670288085938
patch: Iterator iter = res . get CaMeL Properties ( ) . iterator ( ) ;
rank: 6
score: 99.65382295496323
patch: Iterator < Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 6
score: 99.59621018629808
patch: final Iterator iter = res . entries . iterator ( ) ;
rank: 6
score: 99.50023651123047
patch: Iterator iter = res . get CaMeL Classes ( ) . iterator ( ) ;
rank: 7
score: 99.67031860351562
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ;
rank: 7
score: 99.59963989257812
patch: Iterator iter = res . iterator . iterator ( ) ;
rank: 7
score: 99.55174671519886
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 8
score: 99.6218505859375
patch: Iterator iter = entries . iterator ( ) ;
rank: 8
score: 99.59818812779018
patch: Iterator iter = v . entries ( ) . iterator ( ) ;
rank: 8
score: 99.59186197916667
patch: Iterator < Object > iter = res . entries . iterator ( ) ;
rank: 8
score: 99.57689208984375
patch: Iterator iter = res . size ( ) ;
rank: 8
score: 99.52806555706522
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 8
score: 99.51282269021739
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 8
score: 99.49571126302084
patch: Iterator iter = res . entries ( $NUMBER$ ) . iterator ( ) ;
rank: 9
score: 99.58956298828124
patch: Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 9
score: 99.58349609375
patch: Iterator < String > iter = res . entries ( ) . iterator ( ) ;
rank: 9
score: 99.49572172619048
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 9
score: 99.4891357421875
patch: Iterator iter = res . entries . entries ( ) ;
rank: 10
score: 99.58072238498264
patch: Iterator iter = res . get ( ) . entries ( ) . iterator ( ) ;
rank: 10
score: 99.5757344563802
patch: Iterator iter = this . entries . iterator ( ) ;
rank: 10
score: 99.5703125
patch: Iterator iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 10
score: 99.48592435396634
patch: Iterator iter = res . entries . iterator ( ) ; ;
rank: 11
score: 99.56803131103516
patch: Iterator iter = res . entries . entries . entries . iterator ( ) ;
rank: 11
score: 99.50557277513587
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries . iterator ( ) ;
rank: 11
score: 99.49873046875
patch: Iterator iter = v . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 11
score: 99.49158824573864
patch: Iterator iter = v . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 11
score: 99.48434448242188
patch: Iterator iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 11
score: 99.46969784007354
patch: synchronized ( res ) { Iterator iter = res . entries . iterator ( ) ;
rank: 12
score: 99.60596466064453
patch: Iterator iter = res . get CaMeL Dimension ( ) . size ( ) ;
rank: 12
score: 99.56807708740234
patch: Iterator iter = v . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 12
score: 99.55369737413194
patch: while ( res . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 12
score: 99.47977120535714
patch: Iterator iter = this . res . entries . iterator ( ) ;
rank: 12
score: 99.46846771240234
patch: Iterator iter = res . to CaMeL Array ( ) . iterator ( ) ;
rank: 12
score: 99.46348266601562
patch: Iterator iter = v . entries ( ) ;
rank: 13
score: 99.54062906901042
patch: Iterator iter = res . entries . to CaMeL Array ( ) . iterator ( ) ;
rank: 13
score: 99.53673444475446
patch: Iterator iter = res . entries ( ) . iter ( ) ;
rank: 13
score: 99.49336242675781
patch: Iterator iter = res . entries ( ) . entries . iterator ( ) ;
rank: 14
score: 99.56004503038194
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries . size ( ) ;
rank: 14
score: 99.55976019965277
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . entries . iterator ( ) ;
rank: 14
score: 99.535595703125
patch: Iterator < int > iter = res . entries . iterator ( ) ;
rank: 14
score: 99.47449602399554
patch: Iterator iter = res . entries . iter . iterator ( ) ;
rank: 14
score: 99.4633076985677
patch: int iter = res . entries . iterator ( ) ;
rank: 14
score: 99.44688197544643
patch: Iterator iterator = res . entries ( ) . iterator ( ) ;
rank: 15
score: 99.53363444010417
patch: Iterator < ? > iter = res . entries . iterator ( ) ;
rank: 15
score: 99.52286105685764
patch: while ( v . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 15
score: 99.48330206620066
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 15
score: 99.46765667459239
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 15
score: 99.45956655649039
patch: Iterator < ] > iter = res . entries ( ) ;
rank: 15
score: 99.44065348307292
patch: Iterator iter = v . iterator . iterator ( ) ;
rank: 16
score: 99.54871961805556
patch: Real CaMeL Vector v = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 16
score: 99.53169519761029
patch: Iterator < Object > iter = res . entries ( ) . iterator ( ) ;
rank: 16
score: 99.47115071614583
patch: Iterator iterator = res . entries . iterator ( ) ;
rank: 16
score: 99.44990234375
patch: Iterator < T > iter = res . entries . iterator ( ) ;
rank: 16
score: 99.43756103515625
patch: / * Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 17
score: 99.54717339409723
patch: Iterator iter = v . entries ( ) . entries ( ) . iterator ( ) ;
rank: 17
score: 99.5280029296875
patch: Iterator < Iterator > iter = res . entries . iterator ( ) ;
rank: 17
score: 99.51512145996094
patch: Iterator iter = res . next ( ) . entries . iterator ( ) ;
rank: 17
score: 99.47093616832386
patch: iter = res . entries . iterator ( ) ;
rank: 17
score: 99.44963836669922
patch: Iterator iter = res . entries ( - 1 ) . iterator ( ) ;
rank: 17
score: 99.4327392578125
patch: try { Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 18
score: 99.50611877441406
patch: final Iterator < String > iter = res . entries . iterator ( ) ;
rank: 18
score: 99.46448471966912
patch: Iterator iter = res . entries . = res . entries . iterator ( ) ;
rank: 18
score: 99.45704287574405
patch: iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 18
score: 99.449462890625
patch: int iter = res . entries ( ) . size ( ) ;
rank: 18
score: 99.42704264322917
patch: Iterator iter = res . iterator ( ) ; while . has CaMeL Next ( ) ;
rank: 19
score: 99.52414957682292
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 19
score: 99.51148817274306
patch: Iterator iter = v . get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 19
score: 99.4627685546875
patch: Iterator < Entry > iter = res . entries . iterator ( ) ;
rank: 19
score: 99.45420619419643
patch: Iterator iter = res . list ( ) . iterator ( ) ;
rank: 19
score: 99.44802856445312
patch: Iterator iter = res . map . iterator ( ) ;
rank: 20
score: 99.52396647135417
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( ) ;
rank: 20
score: 99.5049336751302
patch: Iterator iter = entries . entries . iterator ( ) ;
rank: 20
score: 99.50204806857639
patch: Iterator iter = res . entries ( ) . entries ( ) . entries ( ) ;
rank: 20
score: 99.50098266601563
patch: Iterator iter = res . get CaMeL Parent ( ) . entries ( ) . iterator ( ) ;
rank: 20
score: 99.4609375
patch: Iterator iter = res . get ( 0 ) . iterator ( ) ;
rank: 20
score: 99.41905517578125
patch: Iterator iterator = res . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 21
score: 99.51797921316964
patch: Iterator iter = res . entries . iterator ( ) ; for (
rank: 21
score: 99.503662109375
patch: Iterator iter = res . get CaMeL Data ( ) . entries . iterator ( ) ;
rank: 21
score: 99.48097059461806
patch: Iterator iter = res . next ( ) . entries ( ) . iterator ( ) ;
rank: 21
score: 99.46210007440476
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = v . entries . iterator ( ) ;
rank: 21
score: 99.4466885653409
patch: Iterator iter = v . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 21
score: 99.43729654947917
patch: Iterator < E > iter = res . entries . iterator ( ) ;
rank: 21
score: 99.41710069444444
patch: Iterator iter = res . iterator ( ) ; iterator . has CaMeL Next ( ) ;
rank: 22
score: 99.50293686810662
patch: Iterator < Real CaMeL Vector > iter = v . entries . iterator ( ) ;
rank: 22
score: 99.49398040771484
patch: Iterator iter = res . get CaMeL Entries ( ) . iterator ( ) ;
rank: 22
score: 99.46110704210069
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) ;
rank: 22
score: 99.44650268554688
patch: Iterator iter = new Iterator ( res . entries . iterator ( ) ) ;
rank: 22
score: 99.44199625651042
patch: Iterator iter = res . entries ; while ( iter . has CaMeL Next ( ) )
rank: 22
score: 99.40908203125
patch: Iterator iter = res . entries ( res ) . iterator ( ) ;
rank: 23
score: 99.50454711914062
patch: Iterator iter = v . entries . entries ( ) . iterator ( ) ;
rank: 23
score: 99.48924345128677
patch: Iterator < Iterator > iter = res . entries ( ) . iterator ( ) ;
rank: 23
score: 99.48567708333333
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = new Real CaMeL Vector ( this ) ;
rank: 23
score: 99.47320556640625
patch: Iterator iter = res . entries . entries . entries ( ) . iterator ( ) ;
rank: 23
score: 99.44497680664062
patch: Iterator iter = res . entries ( ) ; iterator . iterator ( ) ;
rank: 23
score: 99.40557391826923
patch: Iterator iter = res . iterator ( ) ; while ( )
rank: 24
score: 99.49898587740384
patch: Iterator iter = res . entries . iterator ( ) ; }
rank: 24
score: 99.48575846354167
patch: Iterator < Integer > iter = res . entries . iterator ( ) ;
rank: 24
score: 99.46932220458984
patch: Iterator iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 24
score: 99.45608084542411
patch: Iterator iter = this . entries . entries . iterator ( ) ;
rank: 24
score: 99.4386474609375
patch: Iterator iter = res . entries . iterator ( ) ; = null ;
rank: 24
score: 99.42734781901042
patch: Iterator iter = res . value . iterator ( ) ;
rank: 24
score: 99.40313313802083
patch: Iterator iter = res . entries ( ) . iterator ( ) ; ;
rank: 25
score: 99.49465506417411
patch: Iterator iter = res . entries ( ) . size ( ) ;
rank: 25
score: 99.48540387834821
patch: Iterator iter = res . get ( ) . entries ( ) ;
rank: 25
score: 99.48141276041666
patch: Iterator iter = res . entries . ( ) . iterator ( ) ;
rank: 25
score: 99.44171463815789
patch: Iterator < Real CaMeL Vector > iter = res . entries . entries . iterator ( ) ;
rank: 25
score: 99.43418255974265
patch: Iterator iter = Math . iterator ( res . entries . iterator ( ) ) ;
rank: 25
score: 99.41827862079327
patch: res . entries = res . entries . iterator ( ) ;
rank: 25
score: 99.39640299479167
patch: Iterator iter = res . entries ( ) ) . iterator ( ) ;
rank: 26
score: 99.49013264973958
patch: Iterator iter = res . has CaMeL Next ( ) ;
rank: 26
score: 99.48384363511029
patch: Iterator < ? > iter = res . entries ( ) . iterator ( ) ;
rank: 26
score: 99.47993687220982
patch: for ( Iterator iter = res . entries . iterator ( ) ;
rank: 26
score: 99.43681066176471
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) {
rank: 26
score: 99.43076782226562
patch: Iterator iter = list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 26
score: 99.41750662667411
patch: Iterator iter = res . entries = res . iterator ( ) ;
rank: 27
score: 99.48287963867188
patch: Iterator iter = res . entries . iterator ( ) ; iter . has CaMeL Next ( ) ;
rank: 27
score: 99.47591145833333
patch: Iterator iter = res . entries ( ) . entries ( ) . size ( ) ;
rank: 27
score: 99.46462673611111
patch: Iterator iter < Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 27
score: 99.43173363095238
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this . entries . iterator ( ) ;
rank: 27
score: 99.4230487530048
patch: Iterator iter = res . entries . iterator ( ) ; iterator
rank: 27
score: 99.41488647460938
patch: Iterator iter = res . get CaMeL Properties ( ) . entries ( ) ;
rank: 28
score: 99.49296061197917
patch: Iterator iter = res [ 0 ] . entries . iterator ( ) ;
rank: 28
score: 99.48148803710937
patch: Iterator iter = res . get CaMeL Classes ( ) . entries ( ) . iterator ( ) ;
rank: 28
score: 99.42755998883929
patch: Iterator iter = v . entries . entries . iterator ( ) ;
rank: 28
score: 99.4217529296875
patch: Iterator iter = v . list . iterator ( ) ;
rank: 28
score: 99.42169596354167
patch: Iterator iter = res . entries . iterator ( ) ; iterator ++ ;
rank: 28
score: 99.41209309895834
patch: Iterator iter = res . entries ( 1 ) . iterator ( ) ;
rank: 28
score: 99.39408365885417
patch: Iterator iter = res . entries ( ) ; iterator . has CaMeL Next ( ) ;
rank: 29
score: 99.48121948242188
patch: Iterator iter = res . get CaMeL Data ( ) . entries ( ) . iterator ( ) ;
rank: 29
score: 99.47163660386029
patch: Iterator < Real CaMeL Vector > iter = res . entries . size ( ) ;
rank: 29
score: 99.41883916440217
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this . res . entries . iterator ( ) ;
rank: 29
score: 99.4185458096591
patch: Iterator iterator = res . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 29
score: 99.4103644875919
patch: Iterator < ] > iter = res . entries ( ) . iterator ( ) ;
rank: 29
score: 99.39259168836806
patch: Iterator iter = res . entries ( ) ; while . has CaMeL Next ( ) ;
rank: 30
score: 99.4913558959961
patch: int iter = res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 30
score: 99.47881317138672
patch: Iterator iter = res . get ( ) . entries . iterator ( ) ;
rank: 30
score: 99.45528157552083
patch: Iterator iter = res . get CaMeL Entry ( ) . entries . iterator ( ) ;
rank: 30
score: 99.42010091145833
patch: Iterator iter = ( Iterator ) res . entries . iterator ( ) ;
rank: 30
score: 99.412109375
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this . entries . entries . iterator ( ) ;
rank: 30
score: 99.39161028180804
patch: Iterator iter = res . iterator ( ) . iterator ( ) ;
rank: 31
score: 99.47508544921875
patch: boolean iter = res . entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 31
score: 99.46877034505208
patch: while ( iter . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 31
score: 99.46592881944444
patch: Iterator iter = res . entries . entries . entries . entries . iterator ( ) ;
rank: 31
score: 99.41969299316406
patch: Iterator iter = res . entries . iterator ( ) ; iterator = null ;
rank: 31
score: 99.4120849609375
patch: Iterator iter = entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 31
score: 99.40871018629808
patch: Iterator < String > iter = res . entries ( ) ;
rank: 31
score: 99.38798217773437
patch: Iterator iter = res . entries . iterator ( ) ; while . has CaMeL Next ( ) ;
rank: 32
score: 99.46672821044922
patch: Iterator iter = res . get CaMeL Dimension ( ) . iter ( ) ;
rank: 32
score: 99.41145463423295
patch: Iterator iter = this . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 32
score: 99.40731811523438
patch: Iterator iter ? res . entries . entries . iterator ( ) . has CaMeL Next ( ) ;
rank: 32
score: 99.40386962890625
patch: synchronized ( res ) { iter = res . entries . iterator ( ) ;
rank: 32
score: 99.3848388671875
patch: Iterator iterator = v . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 33
score: 99.48590409128289
patch: final Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 33
score: 99.4738410500919
patch: final Iterator iter = res . get . entries ( ) . iterator ( ) ;
rank: 33
score: 99.4652099609375
patch: Iterator iter = res . get CaMeL Dimension ( ) ;
rank: 33
score: 99.41524505615234
patch: Iterator iter = res . entries . iterator ( ) ; iterator = 0 ;
rank: 33
score: 99.40403053977273
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 33
score: 99.38063557942708
patch: res . entries = res . entries ; Iterator iter = v . iterator ( ) ;
rank: 34
score: 99.47864532470703
patch: Iterator iter = res != null : res . entries . iterator ( ) ;
rank: 34
score: 99.4608154296875
patch: Iterator iter = res . entries ( ) . entries ( ) ;
rank: 34
score: 99.44544135199652
patch: Iterator iter = get CaMeL Dimension ( ) . entries ( ) . iterator ( ) ;
rank: 34
score: 99.40603637695312
patch: Iterator iter = this . res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 34
score: 99.40187377929688
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries . entries . iterator ( ) ;
rank: 34
score: 99.400634765625
patch: int iter = res . entries ( ) ;
rank: 34
score: 99.37984890407986
patch: Iterator iter = res . entries ( ) . iterator ( ) . iterator ( ) ;
rank: 35
score: 99.4048602764423
patch: Iterator iter = res . entries . . iterator ( ) ;
rank: 35
score: 99.39838409423828
patch: Iterator iter = res . entries = res . entries . iterator ( ) ;
rank: 36
score: 99.47555106026786
patch: Iterator iter = iter . entries ( ) . iterator ( ) ;
rank: 36
score: 99.46910807291667
patch: Iterator < Class > iter = res . entries . iterator ( ) ;
rank: 36
score: 99.39741654829545
patch: Iterator iter = res . entries . Open CaMeL Map CaMeL Real CaMeL Vector ( ) . iterator ( ) ;
rank: 36
score: 99.37797037760417
patch: Iterator iter = res . entries ( ) . iterator ( ) ) ;
rank: 37
score: 99.46248779296874
patch: Iterator iter = res . get CaMeL Class ( ) . entries ( ) . iterator ( ) ;
rank: 37
score: 99.45746527777777
patch: Iterator iter = res . get CaMeL Type ( ) . entries . iterator ( ) ;
rank: 37
score: 99.43149142795139
patch: Iterator iter = iter . next ( ) . entries ( ) . iterator ( ) ;
rank: 37
score: 99.39688773777173
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ( ) . iterator ( ) ;
rank: 37
score: 99.3768310546875
patch: Iterator iter = res . get CaMeL Interfaces ( ) . iterator ( ) ;
rank: 38
score: 99.46913364955357
patch: Iterator iter = entries . entries ( ) . iterator ( ) ;
rank: 38
score: 99.46082153320313
patch: Iterator iter = res . entries . iterator ( ) ; iterator . has CaMeL Next ( ) ;
rank: 38
score: 99.45650227864583
patch: Iterator iter = res . entries . iterator ( ) ; has CaMeL Next ( ) ;
rank: 38
score: 99.43136257595486
patch: Iterator iter = this . get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 38
score: 99.39940296519886
patch: Iterator iter = data . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 38
score: 99.39514741443452
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = res . entries . iterator ( ) ;
rank: 38
score: 99.39178873697917
patch: Iterator iter = res . entries ( null ) . iterator ( ) ;
rank: 38
score: 99.37665758634868
patch: Iterator iter = res . entries ( res . entries ( ) ) . iterator ( ) ;
rank: 39
score: 99.458642578125
patch: int entries = res . entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 39
score: 99.39391072591145
patch: Iterator iter = res . get . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 39
score: 99.38961791992188
patch: int iter = res . entries . size ( ) ;
rank: 39
score: 99.37612575954861
patch: res . entries = res . entries ; Iterator iter = res . iterator ( ) ;
rank: 40
score: 99.45757184709821
patch: Iterator iter = res . get ( ) . iterator ( ) ;
rank: 40
score: 99.44605928308823
patch: Iterator < Real CaMeL Vector > res = res . entries . iterator ( ) ;
rank: 40
score: 99.44061957465277
patch: Iterator iter = res . entries . next ( ) . entries . iterator ( ) ;
rank: 40
score: 99.39799281529018
patch: Iterator iter = res . entries . iter . iter ( ) ;
rank: 40
score: 99.39183508831522
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = v . entries . entries . iterator ( ) ;
rank: 40
score: 99.39139404296876
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( ) . iterator ( ) ;
rank: 40
score: 99.38701629638672
patch: Iterator iter = res . get CaMeL Fields ( ) . iterator ( ) ;
rank: 40
score: 99.373779296875
patch: Iterator iter = v . iterator ( ) ; while . has CaMeL Next ( ) ;
rank: 41
score: 99.45411682128906
patch: final Iterator < Object > iter = res . entries . iterator ( ) ;
rank: 41
score: 99.44501495361328
patch: Iterator iter = res . get CaMeL Value ( ) . iterator ( ) ;
rank: 41
score: 99.39475661057692
patch: Iterator iter = ( Iterator ) res . entries ( ) ;
rank: 41
score: 99.39181518554688
patch: Iterator iter = this . res . entries . entries . iterator ( ) ;
rank: 41
score: 99.39026988636364
patch: Iterator iter = res . map . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 41
score: 99.38648570667614
patch: final Iterator iter = res . entries ( ) ;
rank: 41
score: 99.3724300986842
patch: Iterator iter = res . iterator ( ) ; while ( . has CaMeL Next ( ) )
rank: 42
score: 99.46429802389706
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 42
score: 99.45350952148438
patch: int size = res . entries . iterator ( ) . iterator ( ) . size ( ) ;
rank: 42
score: 99.39357622931985
patch: Iterator iter = res . get ( res . entries . iterator ( ) ) ;
rank: 42
score: 99.39044596354167
patch: Iterator < Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 42
score: 99.38811577690973
patch: Iterator iter = res . iterator ( ) ; iter . has CaMeL Next ( ) ;
rank: 42
score: 99.38628743489583
patch: final int iter = res . entries ( ) . size ( ) ;
rank: 42
score: 99.3698974609375
patch: Iterator iter = res . iterator . ) ; while ( iter . has CaMeL Next ( ) )
rank: 43
score: 99.46334075927734
patch: Iterator iter = res == null : res . entries . iterator ( ) ;
rank: 43
score: 99.44959106445313
patch: Iterator iter = res . get CaMeL Method ( ) . entries ( ) . iterator ( ) ;
rank: 43
score: 99.38724190848214
patch: Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 43
score: 99.38556671142578
patch: Iterator iter = res . to CaMeL String ( ) . iterator ( ) ;
rank: 44
score: 99.46151733398438
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( ) ;
rank: 44
score: 99.43790108816964
patch: try { Iterator iter = res . entries . iterator ( ) ;
rank: 44
score: 99.41353352864583
patch: Iterator iter = res . entries . iterator ( ) : res . iterator ( ) ;
rank: 44
score: 99.39109173943015
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = 0 ;
rank: 44
score: 99.3869295987216
patch: Iterator iter = res . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 44
score: 99.38337053571429
patch: Iterator iter = res . entries = res . entries ( ) ;
rank: 45
score: 99.46126980251736
patch: Iterator iter = res . entries . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 45
score: 99.43919270833334
patch: Iterator < Real CaMeL Vector > iter = entries . iterator ( ) ;
rank: 45
score: 99.43632289341518
patch: Iterator iter = res . entries . entries . size ( ) ;
rank: 45
score: 99.4125264485677
patch: Iterator entries = res . entries . iterator ( ) ;
rank: 45
score: 99.38692220052083
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 45
score: 99.37889753069196
patch: Iterator iter = res . this . entries . iterator ( ) ;
rank: 45
score: 99.36832682291667
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) )
rank: 46
score: 99.44699096679688
patch: Iterator iter = res . get CaMeL Properties ( ) . entries ( ) . iterator ( ) ;
rank: 46
score: 99.43251546223958
patch: Iterator iter = res . entries . to CaMeL Array ( ) . entries ( ) ;
rank: 46
score: 99.41153293185764
patch: Iterator iter = res . entries . iterator ( ) : entries . iterator ( ) ;
rank: 46
score: 99.36766764322917
patch: Iterator iter = res . iterator ( res . size ( ) ) ;
rank: 47
score: 99.45914713541667
patch: Iterator iter = res . entries . entries ( ) . entries . iterator ( ) ;
rank: 47
score: 99.44557818244485
patch: Iterator < int > iter = res . entries ( ) . iterator ( ) ;
rank: 47
score: 99.38359069824219
patch: Iterator iter = res . iterator ( ) ; iterator . iterator ( ) ;
rank: 47
score: 99.37776453354779
patch: final int entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 47
score: 99.37564086914062
patch: Iterator iter = res . Open CaMeL Map CaMeL Real CaMeL Vector ( ) . iterator ( ) ;
rank: 47
score: 99.36445886948529
patch: if ( res . entries != null ) res . entries = res . entries ;
rank: 48
score: 99.44069213867188
patch: Iterator iter = res . get . entries ( ) . entries ( ) . iterator ( ) ;
rank: 48
score: 99.41986846923828
patch: Iterator iter = res . entries . entries ( ) . entries ( ) ;
rank: 48
score: 99.41141086154514
patch: Iterator iter = res . remove ( ) . entries ( ) . iterator ( ) ;
rank: 48
score: 99.38294982910156
patch: for ( Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 48
score: 99.38048299153645
patch: Iterator iter = res . map . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 48
score: 99.37741088867188
patch: Iterator iter = res . get CaMeL Classes ( ) . entries ( ) ;
rank: 48
score: 99.37428114149306
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ( ) )
rank: 48
score: 99.36390177408855
patch: Iterator iter = res . iterator . entries ( ) ;
rank: 49
score: 99.42985534667969
patch: Iterator iter = res . entries . trim ( ) . iterator ( ) ;
rank: 49
score: 99.40696806066177
patch: Iterator iter = res . ( ) . entries ( ) . iterator ( ) ;
rank: 49
score: 99.3794937133789
patch: Iterator iter = res . get CaMeL Bytes ( ) . iterator ( ) ;
rank: 49
score: 99.37409057617188
patch: Iterator iter = res . entries . entries . to CaMeL Array ( ) . iterator ( ) ;
rank: 49
score: 99.35954204358552
patch: Iterator iter = res . entries ( res . size ( ) ) . iterator ( ) ;
rank: 50
score: 99.43961181640626
patch: int entries = res . entries . iterator ( ) . iterator ( ) . size ( ) ;
rank: 50
score: 99.38059488932292
patch: Iterator iter = res . entries . next ( ) ;
rank: 50
score: 99.37846042798913
patch: for ( Iterator iter = res . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 50
score: 99.37452697753906
patch: Iterator iter = res . get CaMeL Instance ( ) . entries ( ) ;
rank: 50
score: 99.3729248046875
patch: Iterator iter = res . entries . to CaMeL Array ( ) . entries . iterator ( ) ;
rank: 50
score: 99.358251953125
patch: Iterator iterator = res . entries ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 51
score: 99.44915771484375
patch: Iterator iter = res . entries = res . entries ( ) . iterator ( ) ;
rank: 51
score: 99.43922334558823
patch: Iterator < Class > iter = res . entries ( ) . iterator ( ) ;
rank: 51
score: 99.42829895019531
patch: Iterator iter = v . get CaMeL Dimension ( ) . entries ( ) ;
rank: 51
score: 99.41421847873264
patch: Iterator iter = res . entries . to CaMeL Array ( ) . size ( ) ;
rank: 51
score: 99.4010009765625
patch: Iterator iter = res . entries . iterator ( ) : res . size ( ) ;
rank: 51
score: 99.37997436523438
patch: Iterator iter = res . res . entries ( ) . iterator ( ) ;
rank: 51
score: 99.37757568359375
patch: Iterator iter = list . iterator ( ) ;
rank: 51
score: 99.37284342447917
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res ) {
rank: 51
score: 99.37264310396634
patch: Iterator < T > iter = res . entries ( ) ;
rank: 51
score: 99.35790297564338
patch: Iterator iter = res . entries ( ) . iterator ( ) ; while ( )
rank: 52
score: 99.447998046875
patch: Iterator iter = res . entries [ 0 ] . iterator ( ) ;
rank: 52
score: 99.438525390625
patch: Iterator iter = res . get CaMeL V ( ) . entries ( ) . iterator ( ) ;
rank: 52
score: 99.42816162109375
patch: Iterator iter = res . entries . has CaMeL Next ( ) ;
rank: 52
score: 99.41364288330078
patch: Iterator iter = res . entries . entries ( ) . size ( ) ;
rank: 52
score: 99.40075005425348
patch: Iterator iter = res . trim ( ) . entries ( ) . iterator ( ) ;
rank: 52
score: 99.37618885869566
patch: Iterator iter = v . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 52
score: 99.3741455078125
patch: Iterator iter = res . get CaMeL Row ( ) . iterator ( ) ;
rank: 52
score: 99.37046185661765
patch: Iterator < String > iter = res . entries . entries . iterator ( ) ;
rank: 52
score: 99.36978853665866
patch: Iterator < E > iter = res . entries ( ) ;
rank: 52
score: 99.3574551669034
patch: Iterator iter = res . iterator ( ) ; ;
rank: 53
score: 99.44343118106617
patch: Iterator iter = res . entries [ 0 ] . entries . iterator ( ) ;
rank: 53
score: 99.3748550415039
patch: Iterator iter = res ; while ( iter . has CaMeL Next ( ) )
rank: 53
score: 99.37226213727679
patch: Iterator iter . iter = res . entries . iterator ( ) ;
rank: 53
score: 99.3680908203125
patch: final Iterator iter = res . entries . entries . iterator ( ) ;
rank: 53
score: 99.36787553267045
patch: Iterator iter = res . entries ( null ) ;
rank: 53
score: 99.35533142089844
patch: Iterator iter = res . entries ( ) . iterator . iterator ( ) ;
rank: 54
score: 99.42344970703125
patch: Iterator iter = entries . size ( ) ;
rank: 54
score: 99.40782335069444
patch: while ( res . has CaMeL Next ( ) ) { res . advance ( ) ;
rank: 54
score: 99.37474476207386
patch: Iterator iter = res . get . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 54
score: 99.37193196614584
patch: Iterator iter = res . get ( 0 ) . entries ( ) ;
rank: 54
score: 99.35441080729167
patch: Iterator iter = res . entries ( res . size ( ) ) ;
rank: 55
score: 99.42322387695313
patch: Iterator iter = res . entries . length ;
rank: 55
score: 99.40633816189236
patch: while ( entries . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 55
score: 99.37104348575367
patch: Iterator iter = res . entries [ null ] . entries . iterator ( ) ;
rank: 55
score: 99.3534923735119
patch: for ( Iterator iter = res . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 56
score: 99.44121350740132
patch: Iterator < Real CaMeL Vector > iter = res . entries ( ) . iterator ( ) ;
rank: 56
score: 99.40560574001736
patch: Iterator iter = res . entries . [ 0 ] . entries . iterator ( ) ;
rank: 56
score: 99.3705810546875
patch: Iterator iter = res . entries . = res . iterator ( ) ;
rank: 56
score: 99.36753336588542
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 57
score: 99.42083740234375
patch: Iterator iter = v . entries . size ( ) ;
rank: 57
score: 99.40493774414062
patch: Iterator iter = res . get CaMeL Value ( ) . size ( ) ;
rank: 57
score: 99.36296735491071
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries ( ) ;
rank: 57
score: 99.36285400390625
patch: Iterator iter = res . get CaMeL Parent ( ) . entries ( ) ;
rank: 57
score: 99.35294015066964
patch: / * Iterator iter = res . entries . iterator ( ) ;
rank: 58
score: 99.43576531661184
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ( ) ) {
rank: 58
score: 99.43292236328125
patch: final Iterator < ? > iter = res . entries . iterator ( ) ;
rank: 58
score: 99.36622256324405
patch: Iterator iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 58
score: 99.36272116268383
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries ) {
rank: 58
score: 99.362451171875
patch: res . entries ( ) . iterator ( ) . iterator ( ) ;
rank: 59
score: 99.4332275390625
patch: Iterator iter = this . res . entries ( ) . iterator ( ) ;
rank: 59
score: 99.43197631835938
patch: Iterator iter = res . get . get ( ) . entries ( ) . iterator ( ) ;
rank: 59
score: 99.418212890625
patch: Iterator iter = res . entries . iterator ( ) ; ) {
rank: 59
score: 99.36817278180804
patch: Iterator iter = res . res . entries . iterator ( ) ;
rank: 59
score: 99.35145874023438
patch: res . entries = res . entries ; Iterator iter = res . entries . iterator ( ) ;
rank: 60
score: 99.42953055245536
patch: Iterator iter = res . copy ( ) . iterator ( ) ;
rank: 60
score: 99.40008185891544
patch: Iterator iter = res . entries Real CaMeL Vector ( ) . iterator ( ) ;
rank: 60
score: 99.38944498697917
patch: Iterator iter = res . size ( ) : res . entries . iterator ( ) ;
rank: 60
score: 99.36173930921052
patch: Iterator < Open CaMeL Map CaMeL Entry > iter = res . entries . iterator ( ) ;
rank: 60
score: 99.36172087296195
patch: Iterator iter = res . entries . iterator ( ) ; ; while ( iter . has CaMeL Next ( ) )
rank: 60
score: 99.35067545572916
patch: if ( res != null ) res . entries = res . entries ;
rank: 61
score: 99.43282741970486
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( v ) ;
rank: 61
score: 99.4287173622533
patch: Iterator iter = res . get ( 0 ) . entries ( ) . iterator ( ) ;
rank: 61
score: 99.41464412913604
patch: Iterator < Real CaMeL Vector > iter = this . entries . iterator ( ) ;
rank: 61
score: 99.39995260799633
patch: Iterator iter = res . index CaMeL Of ( $STRING$ ) . iterator ( ) ;
rank: 61
score: 99.38717215401786
patch: Iterator entries = res . entries ( ) . iterator ( ) ;
rank: 61
score: 99.34914822048611
patch: Iterator iter = v . iterator ( ) ; iterator . has CaMeL Next ( ) ;
rank: 62
score: 99.43247884114584
patch: Iterator iter = res [ 1 ] . entries . iterator ( ) ;
rank: 62
score: 99.42798569623162
patch: final Iterator iter = res . entries . entries ( ) . iterator ( ) ;
rank: 62
score: 99.3936767578125
patch: if ( iter . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 62
score: 99.36117350260416
patch: Iterator iter = res . entries . iterator ( ) ; iter ++ ;
rank: 62
score: 99.36072887073864
patch: Iterator iter = res . get . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 62
score: 99.36064147949219
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries )
rank: 62
score: 99.35693359375
patch: int iter . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 63
score: 99.41300455729167
patch: Iterator res = res . entries . iterator ( ) ;
rank: 63
score: 99.38739691840277
patch: Iterator iter = v . entries ( ) . entries ( ) . entries ( ) ;
rank: 63
score: 99.36079915364583
patch: Iterator iter = res . entries . iterator ( ) ; iterator -- ;
rank: 63
score: 99.35826044497283
patch: Iterator iter = v . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 63
score: 99.3573467548077
patch: Iterator iter = ! res . entries . iterator ( ) ;
rank: 64
score: 99.42733154296874
patch: Iterator iter = res . get CaMeL VT ( ) . entries ( ) . iterator ( ) ;
rank: 64
score: 99.41188677619485
patch: Iterator < Real CaMeL Vector >> iter = res . entries . iterator ( ) ;
rank: 64
score: 99.37903510199652
patch: Iterator iter = res . entries ( ) . entries ( ) . iter ( ) ;
rank: 64
score: 99.36075846354167
patch: Iterator iter = res . entries . Iterator ( ) ;
rank: 65
score: 99.42787388392857
patch: Real CaMeL Vector res = new Real CaMeL Vector ( this ) ;
rank: 65
score: 99.37152099609375
patch: Iterator iter = res = res . entries . iterator ( ) ;
rank: 65
score: 99.36055501302083
patch: Iterator iter ; Iterator iter = res . entries . iterator ( ) ;
rank: 65
score: 99.35659644717262
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iterator = res . entries . iterator ( ) ;
rank: 65
score: 99.35336303710938
patch: Iterator iter = res . clone ( ) . entries . iterator ( ) ;
rank: 65
score: 99.35227966308594
patch: Iterator iter = res . this . res . entries . iterator ( ) ;
rank: 66
score: 99.4110107421875
patch: Iterator iter = res . get CaMeL Name ( ) . iterator ( ) ;
rank: 66
score: 99.37053765190973
patch: Iterator iter = entries . entries ( ) . entries ( ) . iterator ( ) ;
rank: 66
score: 99.3596420288086
patch: Iterator iter = res . entries . iterator ( ) ; iterator return res ;
rank: 66
score: 99.35303844105114
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 66
score: 99.35276100852273
patch: for ( iter = res . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 66
score: 99.34315795898438
patch: Iterator iter = res . iterator . iterator ( ) ; while . has CaMeL Next ( ) ;
rank: 67
score: 99.42468939887152
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( iter ) ;
rank: 67
score: 99.42427368164063
patch: Iterator iter = res . entries . iterator ( ) ; res . has CaMeL Next ( ) ;
rank: 67
score: 99.40630340576172
patch: Iterator iter = res . get CaMeL Dimension ( ) . next ( ) ;
rank: 67
score: 99.35276100852273
patch: Iterator iter = res . Open CaMeL Map CaMeL Real CaMeL Vector ( ) . entries . iterator ( ) ;
rank: 67
score: 99.35240589488636
patch: Iterator iter = map . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 67
score: 99.35023850661058
patch: final int iter = res . entries . iterator ( ) ;
rank: 68
score: 99.42266486672794
patch: Iterator iter = res [ 0 ] . entries ( ) . iterator ( ) ;
rank: 68
score: 99.4033915201823
patch: int iter = res . get CaMeL Dimension ( ) ;
rank: 68
score: 99.37877699908088
patch: Iterator iter = res . index CaMeL Of ( $STRING$ ) . entries ( ) ;
rank: 68
score: 99.35622151692708
patch: Iterator iter = res . get . entries ( ) ;
rank: 68
score: 99.35001273777173
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 68
score: 99.3492431640625
patch: Iterator iter = res . get . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 69
score: 99.42345473345588
patch: Iterator < Integer > iter = res . entries ( ) . iterator ( ) ;
rank: 69
score: 99.42205810546875
patch: Iterator iter = iter . iterator ( ) ;
rank: 69
score: 99.365478515625
patch: synchronized ( this ) { Iterator iter = res . entries . iterator ( ) ;
rank: 69
score: 99.35000128495066
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = v . iterator ( ) ;
rank: 69
score: 99.3497314453125
patch: int entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 69
score: 99.3487881747159
patch: Iterator iter = res . iter . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 69
score: 99.34030151367188
patch: res . res = res ; Iterator iter = res . iterator ( ) ;
rank: 70
score: 99.4219741821289
patch: Iterator iter = res . entries ( ) . iterator ( ) ; for (
rank: 70
score: 99.37660127527573
patch: Iterator iter = res . entries ( ) . ( ) . iterator ( ) ;
rank: 70
score: 99.36524115668402
patch: Iterator iter = res == new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 70
score: 99.35546003069196
patch: Iterator iter = res . entries . entries . iter ( ) ;
rank: 70
score: 99.3486328125
patch: Iterator iter = res . get ( res . get CaMeL Dimension ( ) ) . iterator ( ) ;
rank: 70
score: 99.33951009114584
patch: Iterator iter = res . entries . iterator ( ) ; while ( )
rank: 71
score: 99.3995361328125
patch: final Iterator iter = res . get CaMeL Dimension ( ) . entries ( ) ;
rank: 71
score: 99.37607421875
patch: Iterator iter = res . entries . index CaMeL Of ( 0 ) ;
rank: 71
score: 99.3647232055664
patch: Iterator iter < String > iter = res . entries . iterator ( ) ;
rank: 71
score: 99.35486711774554
patch: Iterator iter = res . entries . iterator . iterator ( ) ;
rank: 71
score: 99.34882269965277
patch: iter = res . entries ( ) ;
rank: 71
score: 99.34840087890625
patch: Iterator iter = v . get CaMeL Dimension ( ) . entries ( ) . iterator ( ) ;
rank: 71
score: 99.33789672851563
patch: Iterator iter . has CaMeL Next ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 72
score: 99.42093698601974
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector (
rank: 72
score: 99.39898681640625
patch: Iterator iter = iter . has CaMeL Next ( ) ;
rank: 72
score: 99.37501356336806
patch: Iterator iter = res . get CaMeL Dimension ( ) . has CaMeL Next ( ) ;
rank: 72
score: 99.36443413628473
patch: Real CaMeL Vector entries = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 72
score: 99.35483685661765
patch: Iterator iter = res . get ( 0 ) . entries . iterator ( ) ;
rank: 72
score: 99.34679361979167
patch: Iterator iter = res . entries ( true ) . iterator ( ) ;
rank: 72
score: 99.33544921875
patch: for ( Iterator iter = v . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 73
score: 99.37445831298828
patch: Iterator iter = res . entries . next ( ) . entries ( ) ;
rank: 73
score: 99.36422390407986
patch: Iterator iter = res . to CaMeL Array ( ) . entries . iterator ( ) ;
rank: 73
score: 99.35459899902344
patch: Iterator iter = res . entries . iter ( ) . iterator ( ) ;
rank: 73
score: 99.34568277994792
patch: Iterator iter : res . entries . iterator ( ) ;
rank: 73
score: 99.34548117897727
patch: iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 74
score: 99.42063395182292
patch: int iter = res . get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 74
score: 99.36418321397569
patch: Iterator iter = res . copy ( ) . entries ( ) . iterator ( ) ;
rank: 74
score: 99.3544692993164
patch: Iterator iter = res . iterator ( ) ; res . iterator ( ) ;
rank: 74
score: 99.33358154296874
patch: Iterator iterator = res . iterator ( ) ;
rank: 75
score: 99.42008972167969
patch: Iterator iter = res . entries . iterator ( ) ; for ( for (
rank: 75
score: 99.41563110351562
patch: Iterator iter = res . get CaMeL Instance ( ) . entries ( ) . iterator ( ) ;
rank: 75
score: 99.3952277688419
patch: final Iterator iter = res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 75
score: 99.37181899126838
patch: Iterator iter = res . entries . entries . ( ) . iterator ( ) ;
rank: 75
score: 99.36214447021484
patch: Iterator iter = get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 75
score: 99.35395364200367
patch: Iterator iter = ( Iterator ) res . entries ( ) . iterator ( ) ;
rank: 75
score: 99.33239164806548
patch: Iterator iter = res . entries . iterator ( ) ; while ( . has CaMeL Next ( ) )
rank: 76
score: 99.42008463541667
patch: Iterator iter = iter . entries ( ) . entries ( ) . iterator ( ) ;
rank: 76
score: 99.37109375
patch: for ( Iterator iter = res . entries . entries . iterator ( ) ;
rank: 76
score: 99.34115780101104
patch: Iterator iter = res . value CaMeL Of ( $STRING$ ) . iterator ( ) ;
rank: 77
score: 99.41954888237848
patch: Iterator iter = res . entries . ebe CaMeL Multiply ( ) . iterator ( ) ;
rank: 77
score: 99.414404296875
patch: Iterator iter = res . entries ( ) . iterator ( ) ; else
rank: 77
score: 99.3892593383789
patch: Iterator iter = res . get CaMeL Data ( ) . iterator ( ) ;
rank: 77
score: 99.359619140625
patch: Iterator iter = iter . next ( ) . entries . iterator ( ) ;
rank: 77
score: 99.35321044921875
patch: res . Iterator iter = res . entries . iterator ( ) ;
rank: 77
score: 99.34358978271484
patch: Iterator iter = v . get CaMeL Classes ( ) . iterator ( ) ;
rank: 77
score: 99.34033203125
patch: Iterator iter = res . copy ( ) ;
rank: 77
score: 99.34016927083333
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector >= iter = res . entries . iterator ( ) ;
rank: 78
score: 99.41773986816406
patch: res . set CaMeL Entry ( v . get CaMeL Entry ( ) ) ;
rank: 78
score: 99.4135498046875
patch: Iterator iter = res . get CaMeL Superclass ( ) . entries ( ) . iterator ( ) ;
rank: 78
score: 99.3876953125
patch: Iterator iter = res . get CaMeL Name ( ) . size ( ) ;
rank: 78
score: 99.35296630859375
patch: Iterator iter = entries . iterator ( ) ; iterator . iterator ( ) ;
rank: 78
score: 99.34218052455357
patch: Iterator iter = res . clone ( ) . iterator ( ) ;
rank: 78
score: 99.33977593315973
patch: Iterator iter = res . entries ( ) . entries . entries . iterator ( ) ;
rank: 78
score: 99.32769012451172
patch: Iterator iter ; try { iter = res . entries . iterator ( ) ;
rank: 79
score: 99.38648274739583
patch: Iterator < boolean > iter = res . entries . iterator ( ) ;
rank: 79
score: 99.3663818359375
patch: Iterator iter = res . entries . index CaMeL Of ( this ) ;
rank: 79
score: 99.35065056295956
patch: Iterator iter = res . entries . iterator ( ) ; . iterator ( ) ;
rank: 79
score: 99.3418201264881
patch: Iterator iter = list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 79
score: 99.33947035845588
patch: final int iter . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 79
score: 99.33931732177734
patch: Iterator iter = this . entries . entries . entries . iterator ( ) ;
rank: 79
score: 99.3255615234375
patch: Iterator iter = v . iterator ( ) ; while ( )
rank: 80
score: 99.349658203125
patch: Iterator iter = res . entries . iterator ( ) ; = $NUMBER$ ;
rank: 80
score: 99.34126613451087
patch: Iterator iter = Integer . value CaMeL Of ( res . entries . size ( ) ) . iterator ( ) ;
rank: 80
score: 99.33933327414773
patch: entries = res . entries . iterator ( ) ;
rank: 80
score: 99.338623046875
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector ? ( Open CaMeL Map CaMeL Real CaMeL Vector )
rank: 81
score: 99.40815734863281
patch: Iterator iter = res . entries . list ( ) . iterator ( ) ;
rank: 81
score: 99.3803482055664
patch: Iterator iter = res . get CaMeL Type ( ) . entries ( ) ;
rank: 81
score: 99.35710797991071
patch: Iterator iter = res . trim ( ) . iterator ( ) ;
rank: 81
score: 99.3408733865489
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) )
rank: 81
score: 99.3382568359375
patch: final Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 81
score: 99.33595275878906
patch: Iterator iter = res . entries ( - $NUMBER$ ) . iterator ( ) ;
rank: 81
score: 99.32293991815476
patch: Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) )
rank: 82
score: 99.41385226779514
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector . size ( ) ;
rank: 82
score: 99.40736389160156
patch: final Iterator < Iterator > iter = res . entries . iterator ( ) ;
rank: 82
score: 99.37877604166667
patch: Iterator < Real CaMeL Vector > iter = res . size ( ) ;
rank: 82
score: 99.3654073079427
patch: Vector iter = res . entries . iterator ( ) ;
rank: 82
score: 99.34075927734375
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 82
score: 99.335888671875
patch: Iterator iter = res . get ( null ) . iterator ( ) ;
rank: 83
score: 99.41327868009868
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = create CaMeL Real CaMeL Vector ( this ) ;
rank: 83
score: 99.3396883877841
patch: Iterator iter = res . split . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 83
score: 99.33680791440217
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) . entries . iterator ( ) ;
rank: 83
score: 99.33565521240234
patch: Iterator iter = ( res . entries ( ) . iterator ( ) ) ;
rank: 83
score: 99.32069749098558
patch: Iterator iter = res . entries ( ) ; while ( )
rank: 84
score: 99.40938023158482
patch: Iterator iter = res != null . entries . iterator ( ) ;
rank: 84
score: 99.40491400824652
patch: Iterator iter = res . entries . iterator ( ) ; iterator . iterator ( ) ;
rank: 84
score: 99.37684631347656
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries . length ;
rank: 84
score: 99.36461046006944
patch: Iterator iter = res . ebe CaMeL Multiply ( ) . entries . iterator ( ) ;
rank: 84
score: 99.3542709350586
patch: int iter = res . get CaMeL Dimension ( ) . size ( ) ;
rank: 84
score: 99.34592572380515
patch: Iterator iter = res . add ( res . entries . iterator ( ) ) ;
rank: 84
score: 99.33933327414773
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 84
score: 99.33558872767857
patch: int iter = res . entries ( ) . iterator ( ) ;
rank: 84
score: 99.32003079927884
patch: Iterator < String > iter = res . iterator ( ) ;
rank: 85
score: 99.40907796223958
patch: Iterator iter = this . res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 85
score: 99.4009521484375
patch: Iterator iter = res . get CaMeL Priority ( ) . entries ( ) . iterator ( ) ;
rank: 85
score: 99.37659409466912
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries . ( ) ;
rank: 85
score: 99.34941948784723
patch: Iterator iter = res . read ( ) . entries ( ) . iterator ( ) ;
rank: 85
score: 99.33929443359375
patch: Iterator iter = res . set . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 85
score: 99.33516652960526
patch: Iterator < Real CaMeL Vector > iter = this . res . entries . iterator ( ) ;
rank: 86
score: 99.34531860351562
patch: Iterator iter = $STRING$ . iterator ( ) ;
rank: 86
score: 99.33434244791667
patch: synchronized ( res ) { Iterator iter = res . entries ( ) ;
rank: 86
score: 99.31793534128289
patch: Iterator iter = v . iterator ( ) ; while ( . has CaMeL Next ( ) )
rank: 87
score: 99.4004150390625
patch: Iterator < ) > iter = res . entries . iterator ( ) ;
rank: 87
score: 99.37307559742646
patch: Iterator iter = res . get CaMeL Dimension ( ) . iterator ( ) ; ;
rank: 87
score: 99.3379239169034
patch: Iterator iter = res . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 87
score: 99.32938639322917
patch: Iterator < ] > iterator = res . entries . iterator ( ) ;
rank: 87
score: 99.3172607421875
patch: res . res = res . entries . iterator ( ) . next ( ) ;
rank: 88
score: 99.40609580592105
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries ( ) ) {
rank: 88
score: 99.37022489659927
patch: Iterator < Real CaMeL Vector > iter = res . get CaMeL Dimension ( ) ;
rank: 88
score: 99.34615325927734
patch: Iterator iter < Object > iter = res . entries . iterator ( ) ;
rank: 88
score: 99.33679962158203
patch: Iterator iter = 0 ; while ( iter . has CaMeL Next ( ) )
rank: 88
score: 99.33051990327381
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . iterator ( ) ) {
rank: 88
score: 99.31678989955357
patch: Iterator iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) ) )
rank: 89
score: 99.40597195095486
patch: Iterator iter = this . res . entries . entries ( ) . iterator ( ) ;
rank: 89
score: 99.39859169407895
patch: Iterator < String > iter = res . get . entries ( ) . iterator ( ) ;
rank: 89
score: 99.34537760416667
patch: Iterator iter = res . entries . iterator ( ) : res . entries ( ) ;
rank: 89
score: 99.342041015625
patch: Iterator < Entry > iter = res . entries . entries . iterator ( ) ;
rank: 89
score: 99.3286865234375
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) ; ) ;
rank: 89
score: 99.31615048363095
patch: if ( res != null && res . entries . iterator ( ) . has CaMeL Next ( ) )
rank: 90
score: 99.39574381510417
patch: final Iterator iter = res . entries ( ) . iter ( ) ;
rank: 90
score: 99.35752868652344
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . size ( ) ;
rank: 90
score: 99.34332275390625
patch: Iterator iter = res != null ? res . entries . iterator ( ) : null ;
rank: 90
score: 99.34130096435547
patch: Iterator iter = res . entries . entries ( ) . iter ( ) ;
rank: 90
score: 99.32815684442934
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = res . entries . entries . iterator ( ) ;
rank: 90
score: 99.32581380208333
patch: Iterator < ] >> iter = res . entries . iterator ( ) ;
rank: 90
score: 99.31438802083333
patch: Iterator Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 91
score: 99.40584019252232
patch: Iterator iter = res == null . entries . iterator ( ) ;
rank: 91
score: 99.340380859375
patch: Iterator iter = res . get ( res . iterator ( ) ) ;
rank: 91
score: 99.332763671875
patch: Iterator iterator = res . list . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 91
score: 99.32809012276786
patch: Iterator iter = ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . entries . iterator ( ) ;
rank: 91
score: 99.32460530598958
patch: Iterator iter = data . entries . iterator ( ) ;
rank: 91
score: 99.31391737196181
patch: if ( res != null ) res . ) res . entries = res . entries ;
rank: 92
score: 99.40562679893092
patch: Iterator iter = res . entries . ebe CaMeL Multiply ( this ) . iterator ( ) ;
rank: 92
score: 99.39537353515625
patch: Iterator iter = res . get CaMeL Entries ( ) . entries ( ) . iterator ( ) ;
rank: 92
score: 99.36709158761161
patch: Iterator iter = res . get CaMeL Dimension ( ) . length ;
rank: 92
score: 99.34026544744319
patch: iterator = res . entries . iterator ( ) ;
rank: 92
score: 99.33239215353261
patch: iter = res . entries . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 92
score: 99.3236572265625
patch: Enumeration iter = res . entries ( ) ;
rank: 92
score: 99.31339721679687
patch: if ( res . entries . iterator ( ) . has CaMeL Next ( ) ) return res ;
rank: 93
score: 99.39468722873264
patch: Iterator iter = res . get CaMeL Method . entries ( ) . iterator ( ) ;
rank: 93
score: 99.3670654296875
patch: Iterator iter = ebe CaMeL Multiply . entries . iterator ( ) ;
rank: 93
score: 99.34255642361111
patch: Iterator iter = res . clone ( ) . entries ( ) . iterator ( ) ;
rank: 93
score: 99.34020057091347
patch: Iterator iter = res . entries . iterator ( ) ) ;
rank: 93
score: 99.31327056884766
patch: if ( res != null ) res . entries . add ( res ) ;
rank: 94
score: 99.36581420898438
patch: Iterator iter = v . get CaMeL Dimension ( ) . size ( ) ;
rank: 94
score: 99.3221435546875
patch: Iterator iter = res . entries ( . iterator ( ) ) ;
rank: 95
score: 99.4023373252467
patch: Iterator iter = res . ebe CaMeL Multiply ( this ) . entries . iterator ( ) ;
rank: 95
score: 99.36443732766544
patch: Iterator iter = res . get CaMeL Dimension ( ) . iterator ( ) ; }
rank: 95
score: 99.34125434027777
patch: Iterator iter = res != null ? res . entries . iterator ( ) : 0 ;
rank: 95
score: 99.33985137939453
patch: Iterator iter = res . entries . iterator ( ) ; iterator = $NUMBER$ ;
rank: 95
score: 99.32357627467105
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . iterator ( ) ) {
rank: 95
score: 99.32179170496323
patch: Iterator < T > iter = res . entries ( ) . iterator ( ) ;
rank: 96
score: 99.40193684895833
patch: Iterator iter = this . res . iterator ( ) ;
rank: 96
score: 99.39335552014802
patch: Iterator < String > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 96
score: 99.3406753540039
patch: Iterator iter = v . entries . entries . entries . iterator ( ) ;
rank: 96
score: 99.33842917049633
patch: Iterator iter = Math . list ( res . entries . iterator ( ) ) ;
rank: 96
score: 99.33072509765626
patch: Iterator iter = iter . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 96
score: 99.32350755774456
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector == null ? null : res . entries . iterator ( ) ;
rank: 96
score: 99.32149832589286
patch: Iterator iter = res . entries ( ) ; next ( ) ;
rank: 96
score: 99.31126767113095
patch: if ( res . res != null ) res . res . res . res = res . res ;
rank: 97
score: 99.40129089355469
patch: Iterator iter = res . entries ( ) != null . iterator ( ) ;
rank: 97
score: 99.36046549479167
patch: Iterator < long > iter = res . entries . iterator ( ) ;
rank: 97
score: 99.33994427849265
patch: Iterator iter = res == new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 97
score: 99.33821927584134
patch: Iterator iter iter = res . entries . iterator ( ) ;
rank: 97
score: 99.3302001953125
patch: Iterator iter = this . res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 97
score: 99.32309977213542
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . iterator ( ) )
rank: 98
score: 99.40070936414931
patch: Iterator iter = res == null . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 98
score: 99.39097764756944
patch: final Iterator < String > iter = res . entries ( ) . iterator ( ) ;
rank: 98
score: 99.36033630371094
patch: Iterator iter = res . get CaMeL Type ( ) . iterator ( ) ;
rank: 98
score: 99.35073513454861
patch: Iterator iter = v . entries ( ) . entries ( ) . size ( ) ;
rank: 98
score: 99.33980984157986
patch: Iterator iter += res . get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 98
score: 99.33004628057066
patch: Iterator iter = Integer . parse CaMeL Int ( res . get CaMeL Dimension ( ) ) . iterator ( ) ;
rank: 98
score: 99.31033485814145
patch: Iterator iter = res . entries ( ) ; while ( . has CaMeL Next ( ) )
rank: 99
score: 99.400390625
patch: Iterator iter = ( ( Real CaMeL Vector ) res . entries . iterator ( ) ) ;
rank: 99
score: 99.33688151041666
patch: Iterator iter = new ( res . entries . iterator ( ) ) ;
rank: 99
score: 99.33684624565973
patch: Iterator iter = res != new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 99
score: 99.3286365327381
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 99
score: 99.3150390625
patch: Iterator iter = res . entries ( this ) . iterator ( ) ;
rank: 99
score: 99.30989213423295
patch: Iterator iter = res . iterator ( ) ) ;
rank: 100
score: 99.38620229867789
patch: Iterator < Object > iter = res . entries ( ) ;
rank: 100
score: 99.35027313232422
patch: Iterator iter = res . get CaMeL Type ( ) . size ( ) ;
rank: 100
score: 99.33678521050348
patch: Iterator iter = res . close ( ) . entries ( ) . iterator ( ) ;
rank: 100
score: 99.33556111653645
patch: Iterator iter = res . res . iterator ( ) ;
rank: 100
score: 99.32040405273438
patch: Iterator iter = v . entries ( ) . entries . iterator ( ) ;
rank: 100
score: 99.31458740234375
patch: Iterator iter = res . clone ( ) ;
rank: 100
score: 99.30974578857422
patch: res . res = res ; Iterator iter = v . iterator ( ) ;
rank: 101
score: 99.39913940429688
patch: Iterator iter = res . ebe CaMeL Multiply ( ) . iterator ( ) ;
rank: 101
score: 99.38486735026042
patch: Iterator iter = res . get . get . entries ( ) . iterator ( ) ;
rank: 101
score: 99.33646886488971
patch: Iterator iter = res . add ( v . get CaMeL Dimension ( ) ) ;
rank: 101
score: 99.3200439453125
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . iterator ( ) )
rank: 101
score: 99.3125
patch: Iterator iter = res . entries ( ) . to CaMeL Array ( res ) ;
rank: 101
score: 99.30855305989583
patch: Iterator iter = v . entries ( ) ; while . has CaMeL Next ( ) ;
rank: 102
score: 99.38472900390624
patch: Iterator iter = System . get CaMeL Instance ( ) . entries ( ) . iterator ( ) ;
rank: 102
score: 99.34453667534723
patch: Iterator iter = res . entries . entries . entries ( ) . entries ( ) ;
rank: 102
score: 99.33375651041666
patch: Iterator iter = res . get ( $NUMBER$ ) . iterator ( ) ;
rank: 102
score: 99.32726372612848
patch: Iterator iter = res . get ; while ( iter . has CaMeL Next ( ) )
rank: 102
score: 99.31986999511719
patch: Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 102
score: 99.31124877929688
patch: Iterator iter = res . get CaMeL Cause ( ) . entries ( ) ;
rank: 103
score: 99.39751838235294
patch: Iterator iter = res . entries [ 1 ] . entries . iterator ( ) ;
rank: 103
score: 99.3552715594952
patch: Iterator iter = res . entries . iterator ( ) ; {
rank: 103
score: 99.34369659423828
patch: check CaMeL Vector CaMeL Dimensions ( res . get CaMeL Dimension ( ) ) ;
rank: 103
score: 99.3271993001302
patch: Iterator iter = v . map . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 103
score: 99.31951583059211
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) ; )
rank: 103
score: 99.3108901977539
patch: Iterator iter = entries . to CaMeL Array ( ) . iterator ( ) ;
rank: 103
score: 99.30837530838816
patch: Iterator iter = res . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 104
score: 99.38334147135417
patch: Iterator iter = res . get = res . entries ( ) . iterator ( ) ;
rank: 104
score: 99.3550516764323
patch: Iterator iter = res . length . iterator ( ) ;
rank: 104
score: 99.34323120117188
patch: List iter = res . entries . iterator ( ) ;
rank: 104
score: 99.31011555989583
patch: Iterator < ] > iter = res . map . iterator ( ) ;
rank: 104
score: 99.30774739583333
patch: synchronized ( res ) { Iterator iter = res . iterator ( ) ;
rank: 105
score: 99.38316514756944
patch: Iterator iter = res . get CaMeL Instance . entries ( ) . iterator ( ) ;
rank: 105
score: 99.34312608506944
patch: Iterator iter = res . entries . Real CaMeL Vector ( ) . iterator ( ) ;
rank: 105
score: 99.33103942871094
patch: Iterator iter = res . entries . next ( ) . iterator ( ) ;
rank: 105
score: 99.31766183035714
patch: Iterator < Real CaMeL Vector > iter = res . entries . entries . entries . iterator ( ) ;
rank: 106
score: 99.39609888980263
patch: final Real CaMeL Vector v = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 106
score: 99.38225555419922
patch: Iterator iter = res . get . entries ( ) . iter ( ) ;
rank: 106
score: 99.3529914407169
patch: final Iterator iter = res . get CaMeL Dimension ( ) . size ( ) ;
rank: 106
score: 99.34292941623264
patch: Iterator iter = res . next ( ) . entries . entries . iterator ( ) ;
rank: 106
score: 99.33053385416666
patch: Iterator iter = res . entries . iterator ( ) ; return res ;
rank: 106
score: 99.31696633731617
patch: Iterator < Object > iter = res . entries . entries . iterator ( ) ;
rank: 107
score: 99.39576822916666
patch: Iterator iter = res . entries [ 1 ] . iterator ( ) ;
rank: 107
score: 99.3822021484375
patch: Iterator iter = res . get CaMeL T ( ) . entries ( ) . iterator ( ) ;
rank: 107
score: 99.35297393798828
patch: Iterator iter = res . get CaMeL Dimension ( ) . Iterator ( ) ;
rank: 107
score: 99.34269496372768
patch: Iterator iter = res . v . entries . iterator ( ) ;
rank: 107
score: 99.33266977163461
patch: Iterator Iterator iter = res . entries . iterator ( ) ;
rank: 107
score: 99.33049011230469
patch: Iterator iter = res . entries ( ) ; res . iterator ( ) ;
rank: 107
score: 99.31689453125
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( v ) ;
rank: 107
score: 99.30799153645833
patch: Iterator iter = res . entries ( $NUMBER$ ) . next ( ) ;
rank: 107
score: 99.29968843005952
patch: Iterator iter = res . entries ( res . entries . size ( ) ) . iterator ( ) ;
rank: 108
score: 99.35234723772321
patch: Iterator iter = res . iter . has CaMeL Next ( ) ;
rank: 108
score: 99.34250057444854
patch: Iterator iter = res . contains ( v . get CaMeL Dimension ( ) ) ;
rank: 108
score: 99.33030790441177
patch: Iterator iter = 0 ; Iterator iter = res . entries . iterator ( ) ;
rank: 108
score: 99.32569376627605
patch: System . arraycopy ( res . entries , 0 , res . entries , 0 , res . entries . length ) ;
rank: 108
score: 99.31666395399306
patch: Iterator iter = res . get CaMeL Value ( ) . entries . iterator ( ) ;
rank: 108
score: 99.29966107536765
patch: res . entries = new Iterator [ res . entries . size ( ) ] ;
rank: 109
score: 99.39345415900735
patch: Iterator iter = res . ebe CaMeL Multiply ( this ) . iterator ( ) ;
rank: 109
score: 99.38003305288461
patch: Iterator iter = res . entries . iterator ( ) ; else
rank: 109
score: 99.3414306640625
patch: Iterator iter = v . entries ( ) . entries ( ) ;
rank: 109
score: 99.3283462524414
patch: Iterator iter = res . clone ( ) ; iterator . iterator ( ) ;
rank: 109
score: 99.3244295987216
patch: Iterator iter = this . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 109
score: 99.31620861235119
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . size ( ) ;
rank: 109
score: 99.3069580078125
patch: Iterator iter = res . entries ( $STRING$ ) . iterator ( ) ;
rank: 109
score: 99.29951307508681
patch: res . res = res ; Iterator iter = res . entries . iterator ( ) ;
rank: 110
score: 99.35159505208334
patch: iter . has CaMeL Next ( ) ; iter . advance ( ) ;
rank: 110
score: 99.34136555989583
patch: Iterator iter = res . entries . index CaMeL Of ( $STRING$ ) ;
rank: 110
score: 99.32767486572266
patch: Iterator iter = res . get CaMeL Inverse ( ) . iterator ( ) ;
rank: 110
score: 99.32400512695312
patch: Iterator iter = res . entries . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 110
score: 99.31619395380434
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) this ) . entries . iterator ( ) ;
rank: 110
score: 99.30653599330357
patch: Iterator iter = res . entries ( ) . copy ( ) ;
rank: 110
score: 99.29905072380515
patch: Iterator iter = res . entries ( res . entries . iterator ( ) ) ;
rank: 111
score: 99.37945556640625
patch: Iterator iter = res . get ( ) . entries ( ) . iter ( ) ;
rank: 111
score: 99.33880615234375
patch: Iterator iter = res . data . entries . iterator ( ) ;
rank: 111
score: 99.32672882080078
patch: Iterator < ) . Iterator iter = res . entries . iterator ( ) ;
rank: 111
score: 99.31589869449013
patch: Iterator < Real CaMeL Vector > iter = v . entries . entries . iterator ( ) ;
rank: 111
score: 99.30570220947266
patch: Iterator iter = res . get CaMeL Properties ( ) . size ( ) ;
rank: 111
score: 99.29865373883929
patch: Iterator iter = v . iterator ( ) . iterator ( ) ;
rank: 112
score: 99.3920036764706
patch: iter = res . get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 112
score: 99.37900262129934
patch: final Iterator iter = res . get ( ) . entries ( ) . iterator ( ) ;
rank: 112
score: 99.35027669270833
patch: Iterator < Long > iter = res . entries . iterator ( ) ;
rank: 112
score: 99.3296127319336
patch: Iterator iter = this . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 112
score: 99.32553335336539
patch: Iterator iter = res . entries . iterator ( ) ; iter
rank: 112
score: 99.32322184244792
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 112
score: 99.31562243009868
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ( ) ;
rank: 112
score: 99.30428314208984
patch: Iterator iter = res . get CaMeL Chars ( ) . iterator ( ) ;
rank: 112
score: 99.2978515625
patch: Iterator iter = res . get CaMeL Methods ( ) . iterator ( ) ;
rank: 113
score: 99.37781479779412
patch: if ( res != null ) iter = res . entries . iterator ( ) ;
rank: 113
score: 99.33863022748162
patch: Iterator iter = res . index CaMeL Of ( $STRING$ ) . size ( ) ;
rank: 113
score: 99.32260311351104
patch: Iterator iter = res . get ( this ) . entries . iterator ( ) ;
rank: 113
score: 99.31492213199013
patch: Iterator < Real CaMeL Vector > iter = this . entries . entries . iterator ( ) ;
rank: 113
score: 99.30418395996094
patch: Iterator iter = res . value CaMeL Of ( ) . iterator ( ) ;
rank: 113
score: 99.296337890625
patch: Iterator iterator = v . entries ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 114
score: 99.37742396763393
patch: Iterator iter = res . get . entries . iterator ( ) ;
rank: 114
score: 99.34780704273896
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries iterator ( ) ;
rank: 114
score: 99.32448323567708
patch: iter iter = res . entries . iterator ( ) ;
rank: 114
score: 99.30400534237133
patch: Iterator iter = res . entries ( null , null ) . iterator ( ) ;
rank: 114
score: 99.29597778320313
patch: Iterator iter = res . iterator ( ) ; if ( iter . has CaMeL Next ( ) )
rank: 115
score: 99.37643093532986
patch: Iterator iter = res . entries . iterator ( ) ; entries . iterator ( ) ;
rank: 115
score: 99.34614780970982
patch: Iterator iter = res . entries . iterator ( ) ; while (
rank: 115
score: 99.33791097005208
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries . entries ( ) ;
rank: 115
score: 99.3140869140625
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries ( ) )
rank: 115
score: 99.30381673177084
patch: Iterator < String > iter = res . map . iterator ( ) ;
rank: 115
score: 99.29377826891448
patch: if ( res . entries != null ) res . entries = res . entries . entries ;
rank: 116
score: 99.34542083740234
patch: Iterator iter = res . get CaMeL Id ( ) . iterator ( ) ;
rank: 116
score: 99.33712768554688
patch: check CaMeL Vector CaMeL Dimensions ( v . get CaMeL Dimension ( ) ) ;
rank: 116
score: 99.32811628069196
patch: Iterator iter = res : res . entries . iterator ( ) ;
rank: 116
score: 99.321240234375
patch: Iterator iter = res . clone ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 116
score: 99.31196424696181
patch: Iterator iter . has CaMeL Next ( ) ; ) { iter . advance ( ) ;
rank: 116
score: 99.29302368164062
patch: Iterator iter = res . size ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 117
score: 99.38931274414062
patch: int iter = v . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 117
score: 99.3448845358456
patch: Iterator < Real CaMeL Vector > iter = entries . entries . iterator ( ) ;
rank: 117
score: 99.32689557756696
patch: Iterator iter = res . remove ( ) . iterator ( ) ;
rank: 117
score: 99.3205630653783
patch: res . set CaMeL Length ( 0 ) ; res . set CaMeL Length ( 0 ) ;
rank: 117
score: 99.32042020909927
patch: Iterator iter = res . entries . = res . entries . iter ( ) ;
rank: 117
score: 99.31082589285714
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this . res . iterator ( ) ;
rank: 117
score: 99.30216761997768
patch: Iterator iter = res . entries ( ) . trim ( ) ;
rank: 117
score: 99.29252544202302
patch: Iterator iter = res . iterator ( ) ; while . has CaMeL Next ( ) ; )
rank: 118
score: 99.37599583675987
patch: Iterator iter = res . get ( $NUMBER$ ) . entries ( ) . iterator ( ) ;
rank: 118
score: 99.33548736572266
patch: Iterator iter = res . v . entries ( ) . iterator ( ) ;
rank: 118
score: 99.32027762276786
patch: Iterator iter = res . entries . iterator ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 118
score: 99.32022530691964
patch: Iterator iter = res . entries . iterator ( ) ; ) ;
rank: 118
score: 99.30156598772321
patch: Iterator iter = res . entries ( ) . next ( ) ;
rank: 118
score: 99.29112025669643
patch: Iterator iterator = v . entries ( ) . iterator ( ) ;
rank: 119
score: 99.37517632378473
patch: Iterator iter = res . get ( ) . list ( ) . iterator ( ) ;
rank: 119
score: 99.34324645996094
patch: Iterator iter = res . next ( ) . entries . size ( ) ;
rank: 119
score: 99.335302734375
patch: entries = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 119
score: 99.32498508029514
patch: Iterator iter = res . entries . iterator ( ) : v . iterator ( ) ;
rank: 119
score: 99.3200152853261
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 119
score: 99.31988525390625
patch: Iterator iter = res . entries . iterator ( ) ; ; return res ;
rank: 119
score: 99.3102794828869
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . list . iterator ( ) ;
rank: 119
score: 99.29985495174633
patch: res . entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 119
score: 99.29058227539062
patch: Iterator iter = res . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 120
score: 99.342529296875
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( 0 ) ;
rank: 120
score: 99.33515930175781
patch: Iterator iter = res . [ 0 ] . entries . iterator ( ) ;
rank: 120
score: 99.32333034939236
patch: Iterator iter = res == null ? null : res . entries . iterator ( ) ;
rank: 120
score: 99.31988525390625
patch: Iterator iter = res . get CaMeL Method ( ) . iterator ( ) ;
rank: 120
score: 99.2987530048077
patch: Iterator < ] > iter = res . iterator ( ) ;
rank: 120
score: 99.29015395220588
patch: Iterator iter = res . entries ( res . entries . size ( ) ) ;
rank: 121
score: 99.3419189453125
patch: Iterator iter = res . get CaMeL Data ( ) . size ( ) ;
rank: 121
score: 99.33389282226562
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = null ;
rank: 121
score: 99.3196662454044
patch: Iterator iter = res . get ( res . entries . size ( ) ) ;
rank: 121
score: 99.3091457201087
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . entries . iterator ( ) ) ;
rank: 121
score: 99.29825032552084
patch: entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 121
score: 99.28960860402961
patch: if ( res . entries != null && res . entries . size ( ) > 0 )
rank: 122
score: 99.38678448016827
patch: Iterator iter = res . entries . iterator ( ) ; *
rank: 122
score: 99.37464904785156
patch: Iterator < Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 122
score: 99.34178969439338
patch: Iterator iter = res . Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 122
score: 99.3331298828125
patch: Iterator iter = res . entries . to CaMeL Array ( ) . iter ( ) ;
rank: 122
score: 99.31954251802884
patch: Iterator iter = res . entries . iterator ( ) ; .
rank: 122
score: 99.31865692138672
patch: Iterator iter = v . get CaMeL Properties ( ) . iterator ( ) ;
rank: 122
score: 99.30875651041667
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter : res . entries . iterator ( ) ;
rank: 122
score: 99.28836763822116
patch: Iterator < Integer > iter = res . iterator ( ) ;
rank: 123
score: 99.37464599609375
patch: Iterator iter = res . get CaMeL Index ( ) . entries ( ) . iterator ( ) ;
rank: 123
score: 99.33278111049107
patch: Iterator iter = res . next ( ) . entries ( ) ;
rank: 123
score: 99.31855912642045
patch: Iterator list = res . entries . iterator ( ) ; while ( list . has CaMeL Next ( ) )
rank: 123
score: 99.31812286376953
patch: Iterator iter = res . get = res . entries . iterator ( ) ;
rank: 123
score: 99.30704752604167
patch: Iterator iter = v . entries . to CaMeL Array ( ) . iterator ( ) ;
rank: 123
score: 99.29720633370536
patch: Iterator iter = res . entries ( ) . clone ( ) ;
rank: 123
score: 99.288330078125
patch: Iterator iter = res . entries ( ) . iterator ( ) - 1 ;
rank: 124
score: 99.38533100328948
patch: Iterator iter . has CaMeL Next ( ) ; && iter . has CaMeL Next ( ) ;
rank: 124
score: 99.37409125434027
patch: Iterator iter = res . get CaMeL Data . entries ( ) . iterator ( ) ;
rank: 124
score: 99.34052590762867
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( ) ; ;
rank: 124
score: 99.31801060267857
patch: Iterator iter = res . entries . iterator ( ) ; ++ iter . has CaMeL Next ( ) ;
rank: 124
score: 99.31782531738281
patch: Iterator iter = res . entries . iterator ( ) ; iter = 0 ;
rank: 124
score: 99.29714786305146
patch: Iterator < E > iter = res . entries ( ) . iterator ( ) ;
rank: 124
score: 99.28572591145833
patch: Iterator iter = res . iterator . iterator ( ) ; while ( . has CaMeL Next ( ) )
rank: 125
score: 99.34042794363839
patch: Iterator iter = res . has CaMeL Next ( ) ; ) {
rank: 125
score: 99.33161163330078
patch: Iterator iter = res . entries . iterator ( ) . size ( ) ;
rank: 125
score: 99.32058536305146
patch: Iterator iter = Math . iterator ( res . get CaMeL Dimension ( ) ) ;
rank: 125
score: 99.3177490234375
patch: / ; Iterator iter = res . entries . iterator ( ) ;
rank: 125
score: 99.3165283203125
patch: Iterator iter = res . set . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 125
score: 99.3059612771739
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = this . res . entries . iterator ( ) ;
rank: 125
score: 99.29683685302734
patch: Iterator iter = res . entries = this . entries . iterator ( ) ;
rank: 125
score: 99.28544311523437
patch: Iterator iter = res . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 126
score: 99.38395182291667
patch: Real CaMeL Vector v = new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 126
score: 99.3401107788086
patch: Iterator iter = res . get CaMeL Value ( ) . entries ( ) ;
rank: 126
score: 99.31993865966797
patch: Iterator iter = res . get CaMeL Entry ( ) . iterator ( ) ;
rank: 126
score: 99.31689453125
patch: Iterator iter = Math . iter ( res . entries . iterator ( ) ) ;
rank: 126
score: 99.30572219122024
patch: Enumeration < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 126
score: 99.29668782552083
patch: final int iter = res . entries ( ) . iterator ( ) ;
rank: 127
score: 99.37213745117188
patch: int entries . iterator ( ) . iterator ( ) . iterator ( ) . next ( ) ;
rank: 127
score: 99.31643240792411
patch: Iterator iter = v . list ( ) . iterator ( ) ;
rank: 127
score: 99.31474752987133
patch: Iterator < ? > iter = res . entries . entries . iterator ( ) ;
rank: 127
score: 99.29459635416667
patch: final int iterator = res . entries ( ) . size ( ) ;
rank: 128
score: 99.37096354166667
patch: Iterator < String > iterator = res . entries . iterator ( ) ;
rank: 128
score: 99.33844463641827
patch: final Iterator iter = res . entries . size ( ) ;
rank: 128
score: 99.31548751027961
patch: Iterator iter = res . entries ; while ( iter . has CaMeL Next ( ) ) {
rank: 128
score: 99.29304504394531
patch: for ( ) { Iterator iter = res . entries . iterator ( ) ;
rank: 128
score: 99.28462219238281
patch: if ( res . entries . size ( ) == 0 ) return res ;
rank: 129
score: 99.36931694878473
patch: Iterator iter = res . get CaMeL Field . entries ( ) . iterator ( ) ;
rank: 129
score: 99.31847466362848
patch: Iterator iter = res . min ( ) . entries ( ) . iterator ( ) ;
rank: 129
score: 99.3151622953869
patch: iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 129
score: 99.29258728027344
patch: res . entries ( ) ; Iterator iter = res . entries ( ) ;
rank: 130
score: 99.36858053768383
patch: final int entries = res . entries . iterator ( ) . iterator ( ) ;
rank: 130
score: 99.33513997395833
patch: Iterator iter = res . ( ) . entries . iterator ( ) ;
rank: 130
score: 99.31297200520834
patch: Iterator < void > iter = res . entries . iterator ( ) ;
rank: 130
score: 99.30409307065217
patch: Iterator < Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 130
score: 99.289892578125
patch: Iterator iter = res . get ( null ) . entries ( ) ;
rank: 131
score: 99.38046264648438
patch: Iterator iter = res . entries ( ) . length . iterator ( ) ;
rank: 131
score: 99.3170166015625
patch: Iterator iter = res . iter ( ) ;
rank: 131
score: 99.31409976356908
patch: synchronized ( res ) { res . entries = res . entries . iterator ( ) ; }
rank: 132
score: 99.37944030761719
patch: Iterator iter = ebe CaMeL Multiply . entries ( ) . iterator ( ) ;
rank: 132
score: 99.36789838005515
patch: Iterator < String > iter = res . entries ( ) . iter ( ) ;
rank: 132
score: 99.33403463924633
patch: Iterator iter = res . entries . get ( 0 ) . iterator ( ) ;
rank: 132
score: 99.32343207465277
patch: Iterator iter = res . get CaMeL Context ( ) . entries . iterator ( ) ;
rank: 132
score: 99.31365645559211
patch: Iterator iter = Integer . parse CaMeL Int ( res . get CaMeL Dimension ( ) ) ;
rank: 132
score: 99.31138509114584
patch: Iterator iter = res . entries [ null ] . iterator ( ) ;
rank: 132
score: 99.30260649181548
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = v . entries . iterator ( ) ;
rank: 132
score: 99.28917694091797
patch: Iterator iter = res . entries ( ) ; super . entries ( ) ;
rank: 132
score: 99.28326009114583
patch: Iterator iter = res . entries ( res . entries ( ) ) ;
rank: 133
score: 99.3311408547794
patch: Iterator iter = res . get CaMeL Dimension ( iter ) . iterator ( ) ;
rank: 133
score: 99.3232062844669
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = new Real CaMeL Vector ( ) ;
rank: 133
score: 99.31186930338542
patch: Iterator iter = res . [ 0 ] . entries ( ) . iterator ( ) ;
rank: 133
score: 99.2891357421875
patch: Iterator < ] : res . entries ( ) . iterator ( ) ;
rank: 133
score: 99.2825419108073
patch: / * Iterator iter = res . iterator ( ) ;
rank: 134
score: 99.37741088867188
patch: int iterator = res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 134
score: 99.3673095703125
patch: Iterator < synchronized > iter = res . entries . iterator ( ) ;
rank: 134
score: 99.33101160386029
patch: Iterator iter = res . get CaMeL Dimension ( ) . . iterator ( ) ;
rank: 134
score: 99.31339757582721
patch: synchronized ( res ) { iter = res . entries . iterator ( ) ; }
rank: 134
score: 99.31183539496527
patch: Iterator iter = res . parse ( ) . entries ( ) . iterator ( ) ;
rank: 134
score: 99.288330078125
patch: Iterator iter = res . get CaMeL Classes ( ) . size ( ) ;
rank: 134
score: 99.28225473257211
patch: Iterator < E > iter = res . iterator ( ) ;
rank: 135
score: 99.37712659333882
patch: Iterator iter = res . entries . iterator ( v . get CaMeL Dimension ( ) ) ;
rank: 135
score: 99.367041015625
patch: Iterator < String > iter = res . entries . iter ( ) ;
rank: 135
score: 99.31278228759766
patch: Iterator iter = res . map . entries ( ) . iterator ( ) ;
rank: 135
score: 99.31172943115234
patch: Iterator iter = entries . entries . entries ( ) . iterator ( ) ;
rank: 135
score: 99.31023297991071
patch: Iterator iter = res . entries . iterator ( ) ; break ;
rank: 135
score: 99.30122514204545
patch: Iterator iter < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 135
score: 99.28212603400735
patch: if ( res != null ) res . entries = res . entries . entries ;
rank: 136
score: 99.3658935546875
patch: Iterator < res > iter = res . entries . iterator ( ) ;
rank: 136
score: 99.3279278094952
patch: Iterator iter = res . . entries . iterator ( ) ;
rank: 136
score: 99.32262311662946
patch: return new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 136
score: 99.31256658380681
patch: Iterator iter = res . iterator . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 136
score: 99.31159803602431
patch: Iterator iter = res . get CaMeL Entry . entries ( ) . iterator ( ) ;
rank: 136
score: 99.30996907552084
patch: Iterator iter = res . get ( 1 ) . iterator ( ) ;
rank: 136
score: 99.30088454026442
patch: Iterator iter = res . index CaMeL Of ( $STRING$ ) ;
rank: 137
score: 99.37483215332031
patch: Iterator iter = res != null . entries ( ) . iterator ( ) ;
rank: 137
score: 99.31212269176136
patch: List iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 137
score: 99.30995178222656
patch: Iterator iter = res . entries . map ( ) . iterator ( ) ;
rank: 137
score: 99.29810631793478
patch: for ( iter = res . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; ) {
rank: 137
score: 99.28627232142857
patch: Iterator iter = res . map ( ) . iterator ( ) ;
rank: 137
score: 99.28025817871094
patch: try { Iterator iter = v . entries ( ) . iterator ( ) ;
rank: 138
score: 99.36283365885417
patch: Iterator iter = res . entries = res . list ( ) . iterator ( ) ;
rank: 138
score: 99.32225036621094
patch: Iterator iter = res . entries . entries . entries . size ( ) ;
rank: 138
score: 99.31139264787946
patch: Iterator iter = res . map . entries . iterator ( ) ;
rank: 138
score: 99.30915832519531
patch: Iterator iter = res . get CaMeL Instance ( ) . iterator ( ) ;
rank: 138
score: 99.29768880208333
patch: Enumeration iter = res . entries . iterator ( ) ;
rank: 138
score: 99.28586989182692
patch: Iterator < ] > iter = entries . iterator ( ) ;
rank: 138
score: 99.28007238051471
patch: Iterator iter = res . iterator ( res . entries . size ( ) ) ;
rank: 139
score: 99.37371504934211
patch: Iterator iter = ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . iterator ( ) ;
rank: 139
score: 99.36143391927084
patch: Iterator iter = res . entries ( ) . iterator ( ) ; }
rank: 139
score: 99.3214111328125
patch: Iterator iter = res . entries . next ( ) . entries . entries ( ) ;
rank: 139
score: 99.30995244565217
patch: Iterator iter = res . map . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 139
score: 99.30815573299633
patch: Iterator iter = Math . next ( res . entries . iterator ( ) ) ;
rank: 139
score: 99.28557942708333
patch: Iterator < String >> iter = res . entries . iterator ( ) ;
rank: 139
score: 99.27952938988095
patch: Iterator iter = res . iterator ( ) ; while ( ; iter . has CaMeL Next ( ) )
rank: 140
score: 99.37353515625
patch: Iterator iter = res . get CaMeL Dimension ( ) . length . iterator ( ) ;
rank: 140
score: 99.36121368408203
patch: int entries = res . entries . iterator ( ) . iterator ( ) ;
rank: 140
score: 99.32046169704861
patch: while ( v . has CaMeL Next ( ) ) { res . advance ( ) ;
rank: 140
score: 99.30833604600694
patch: Iterator iter = v . next ( ) . entries ( ) . iterator ( ) ;
rank: 140
score: 99.30770670572916
patch: Iterator iter = res . entries . iterator ( ) ; = 1 ;
rank: 140
score: 99.28529357910156
patch: Iterator iter = res . entries ( ) ; list . iterator ( ) ;
rank: 141
score: 99.37298990885417
patch: Iterator iter = ! res . entries ( ) . iterator ( ) ;
rank: 141
score: 99.36092529296874
patch: Iterator iter = res . get CaMeL Value ( ) . entries ( ) . iterator ( ) ;
rank: 141
score: 99.30911387567934
patch: Iterator iterator = res . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 141
score: 99.30743408203125
patch: Iterator iter = res . next ( ) . entries ( ) . entries ( ) ;
rank: 141
score: 99.3071517944336
patch: Iterator iter = res . entries . iterator ( ) . iter ( ) ;
rank: 141
score: 99.27759507123162
patch: Iterator iter = res . entries ( ) [ 0 ] . iterator ( ) ;
rank: 142
score: 99.37281558388158
patch: Iterator iter = res . entries . index CaMeL Of ( $STRING$ ) . iterator ( ) ;
rank: 142
score: 99.32413330078126
patch: Iterator iter = res . length ( ) ;
rank: 142
score: 99.30815197172619
patch: Iterator iter = res . for . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 142
score: 99.30696375229779
patch: Iterator iter = res . entries . split ( $STRING$ ) . iterator ( ) ;
rank: 142
score: 99.2968517485119
patch: Iterator < Open CaMeL Map CaMeL Entry > iter = res . entries . entries . iterator ( ) ;
rank: 142
score: 99.28461456298828
patch: Iterator iter = res . entries ( ) ; iterator . next ( ) ;
rank: 142
score: 99.27696940104167
patch: if ( v != null ) res . entries = res . entries ;
rank: 143
score: 99.30805969238281
patch: Iterator iter = v . get . entries ( ) . iterator ( ) ;
rank: 143
score: 99.30708582261029
patch: Iterator iter = res . get CaMeL Entry ( 0 ) . iterator ( ) ;
rank: 143
score: 99.30591583251953
patch: Iterator iter = res . entries . iterator ( ) ; iter = null ;
rank: 143
score: 99.29659901494566
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = this . entries . entries . iterator ( ) ;
rank: 143
score: 99.28199005126953
patch: Iterator iter = res . get CaMeL Resources ( ) . iterator ( ) ;
rank: 144
score: 99.37260219029018
patch: Iterator iter = list . entries ( ) . iterator ( ) ;
rank: 144
score: 99.35935465494792
patch: Iterator iter = res . get ( ) . entries ( ) . size ( ) ;
rank: 144
score: 99.32172707950367
patch: Iterator < Real CaMeL Vector >= iter = res . entries . iterator ( ) ;
rank: 144
score: 99.3075663248698
patch: res . Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 144
score: 99.30697292751736
patch: Iterator iter = this . entries . entries . entries ( ) . iterator ( ) ;
rank: 144
score: 99.30547332763672
patch: Iterator iter = res . entries . iterator ( ) ; iterator < ) ;
rank: 144
score: 99.29571242559524
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = this . entries . iterator ( ) ;
rank: 144
score: 99.27686982996323
patch: if ( v . entries != null ) res . entries = res . entries ;
rank: 145
score: 99.37232208251953
patch: Iterator iter = res . entries ( ) == null . iterator ( ) ;
rank: 145
score: 99.32133932674633
patch: Iterator < Real CaMeL Vector > iterator = res . entries . iterator ( ) ;
rank: 145
score: 99.31869167751736
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( ) . length ;
rank: 145
score: 99.30710856119792
patch: Iterator iter = res . set . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 145
score: 99.28165690104167
patch: int iter = res . entries ( ) . length ;
rank: 145
score: 99.27651977539062
patch: Object res = res . entries . iterator ( ) . next ( ) ;
rank: 146
score: 99.37212775735294
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = ebe CaMeL Multiply ( res ) ;
rank: 146
score: 99.35886101973684
patch: Iterator < Object > iter = res . get . entries ( ) . iterator ( ) ;
rank: 146
score: 99.31839752197266
patch: Iterator iter = res . to CaMeL Array ( ) . entries ( ) ;
rank: 146
score: 99.30376325334821
patch: Iterator iter = res . next ( ) . iterator ( ) ;
rank: 146
score: 99.29317043138587
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = v . entries ( ) . iterator ( ) ;
rank: 146
score: 99.27611541748047
patch: assert res != null : $STRING$ + res . get CaMeL Dimension ( ) ;
rank: 147
score: 99.35796042049633
patch: Iterator < Iterator < ? > iter = res . entries . iterator ( ) ;
rank: 147
score: 99.31768329326923
patch: Iterator iter = res . entries . size ( ) ; ;
rank: 147
score: 99.3053487141927
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) ; )
rank: 147
score: 99.30203450520834
patch: Iterator iter = res . entries . iterator ( ) ; iter -- ;
rank: 147
score: 99.29299926757812
patch: Iterator iter = res . entries : res . entries . iterator ( ) ;
rank: 147
score: 99.2807861328125
patch: res . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 147
score: 99.27580430772569
patch: if ( res != null ) res . Iterator iter = res . iterator ( ) ;
rank: 148
score: 99.35758666992187
patch: int entries . iterator ( ) . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 148
score: 99.31634114583333
patch: Iterator iter = res . entries . ( ) . size ( ) ;
rank: 148
score: 99.30479847301136
patch: Iterator iter = res . list . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 148
score: 99.29160378196023
patch: Iterator iter = res . entries ( ) . Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( ) ;
rank: 148
score: 99.28012264476104
patch: Iterator iter = res . get ( null ) . entries . iterator ( ) ;
rank: 149
score: 99.35757107204861
patch: Iterator iter = res . entries . iterator ( ) ; iter . iterator ( ) ;
rank: 149
score: 99.30420735677083
patch: res . entries = res . entries . entries . iterator ( ) ;
rank: 149
score: 99.27535247802734
patch: Iterator iter ; res . entries = res . entries . iterator ( ) ;
rank: 150
score: 99.36975775824652
patch: Iterator iter = res . get CaMeL Dimension ( ) . iterator ( ) ; for (
rank: 150
score: 99.35629272460938
patch: int size = res . entries . iterator ( ) . size ( ) ;
rank: 150
score: 99.3170525045956
patch: Iterator < Real CaMeL Vector > iter = v . entries . size ( ) ;
rank: 150
score: 99.31564670138889
patch: Iterator iter = res . entries . entries . entries ( ) . size ( ) ;
rank: 150
score: 99.3036397298177
patch: Iterator iter = this . get . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 150
score: 99.29833984375
patch: Iterator iter = res . entries ( ) . iterator ( ) ; iterator
rank: 150
score: 99.29150390625
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = entries . iterator ( ) ;
rank: 150
score: 99.27950032552083
patch: Iterator < / >> iter = res . entries . iterator ( ) ;
rank: 151
score: 99.36968524639423
patch: Iterator iter = res [ 0 ] . iterator ( ) ;
rank: 151
score: 99.35615539550781
patch: final Iterator < Entry > iter = res . entries . iterator ( ) ;
rank: 151
score: 99.3153076171875
patch: Iterator iter = res . entries . index CaMeL Of ( null ) ;
rank: 151
score: 99.30443657769098
patch: Iterator iter = res . load ( ) . entries ( ) . iterator ( ) ;
rank: 151
score: 99.30239035866477
patch: Iterator res = res . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 151
score: 99.2791519165039
patch: Iterator iter = res . entries ( ) . to CaMeL Array ( ) ;
rank: 151
score: 99.27483053768383
patch: Iterator iter = res . iterator ( res . get CaMeL Dimension ( ) ) ;
rank: 152
score: 99.3695068359375
patch: Iterator iter = res != null . iterator ( ) ;
rank: 152
score: 99.31678873697916
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter
rank: 152
score: 99.31492396763393
patch: Iterator iter = v . entries ( ) . size ( ) ;
rank: 152
score: 99.30237579345703
patch: Iterator iter = null ; while ( iter . has CaMeL Next ( ) )
rank: 152
score: 99.29823303222656
patch: Iterator iter = res . entries ( ) ; iter . iterator ( ) ;
rank: 152
score: 99.28976236979166
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res ) {
rank: 152
score: 99.27890625
patch: Iterator iterator = res . entries ( ) ;
rank: 152
score: 99.27307710193452
patch: final Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 153
score: 99.36939912683823
patch: Iterator iter = res [ 1 ] . entries ( ) . iterator ( ) ;
rank: 153
score: 99.35557645909927
patch: Iterator iter = res . get ) . entries ( ) . iterator ( ) ;
rank: 153
score: 99.3150634765625
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( ) ; }
rank: 153
score: 99.3145751953125
patch: Iterator iter = res . entries . ( ) . entries ( ) ;
rank: 153
score: 99.30418565538194
patch: Iterator iter = res . name ( ) . entries ( ) . iterator ( ) ;
rank: 153
score: 99.30165608723958
patch: Iterator iter = res . data . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 153
score: 99.28855298913044
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iterator = res . entries . entries . iterator ( ) ;
rank: 153
score: 99.278271484375
patch: Iterator iter = res . . entries ( ) . iterator ( ) ;
rank: 154
score: 99.3139877319336
patch: Iterator iter = res . to CaMeL Array ( ) . size ( ) ;
rank: 154
score: 99.30365668402777
patch: Iterator iter < Real CaMeL Vector > iter = v . entries . iterator ( ) ;
rank: 154
score: 99.30141194661458
patch: if ( res == null ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 154
score: 99.29768880208333
patch: Iterator iter = Math . iterator ( res . entries ( ) ) ;
rank: 154
score: 99.28841359991776
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . size ( ) ;
rank: 154
score: 99.27791922433036
patch: Iterator * ] iter = res . entries . iterator ( ) ;
rank: 154
score: 99.2727115028783
patch: Iterator iter = res . iterator ( ) ; Iterator iter = v . iterator ( ) ;
rank: 155
score: 99.31397840711806
patch: Iterator iter = res . get CaMeL State ( ) . entries . iterator ( ) ;
rank: 155
score: 99.3034896850586
patch: Iterator iter += res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 155
score: 99.30113636363636
patch: Iterator iter = res . has CaMeL Next ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 155
score: 99.2969970703125
patch: Iterator iter = res . split ( res . entries . iterator ( ) ) ;
rank: 155
score: 99.2883533296131
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > v = res . entries . iterator ( ) ;
rank: 156
score: 99.35488891601562
patch: final Iterator < Integer > iter = res . entries . iterator ( ) ;
rank: 156
score: 99.31318495008681
patch: Iterator iter = res . entries ( ) . entries ( ) . next ( ) ;
rank: 156
score: 99.3127212524414
patch: Iterator iter = res . entries . has CaMeL Next ( ) ; ) {
rank: 156
score: 99.30099826388889
patch: Iterator iter = res . list ; while ( iter . has CaMeL Next ( ) )
rank: 156
score: 99.29679870605469
patch: Iterator iter = res . entries . iterator ( ) ; iterator = 1 ;
rank: 156
score: 99.27218862680289
patch: if ( res != null ) res . res = res ;
rank: 157
score: 99.30293104383681
patch: Iterator iter |= res . get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 157
score: 99.30036926269531
patch: Object [ ] data = res . entries . to CaMeL Array ( ) ;
rank: 157
score: 99.29603576660156
patch: Iterator iter = res . entries . iterator ( ) ; iterator != null ;
rank: 157
score: 99.28714425223214
patch: Iterator < Real CaMeL Vector > iter = this . res . entries . entries . iterator ( ) ;
rank: 157
score: 99.2711181640625
patch: Iterator iter = res ) . entries ( ) . iterator ( ) ;
rank: 158
score: 99.35430908203125
patch: Iterator iter = ( res . entries . iterator ( ) ) ;
rank: 158
score: 99.3002596768466
patch: res . Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 158
score: 99.2943448153409
patch: Iterator iter = res . entries iterator ( ) ;
rank: 158
score: 99.27440643310547
patch: Iterator iter = res . entries . iterator ( ) ; next ( ) ;
rank: 158
score: 99.27096557617188
patch: / * Iterator iter = v . entries ( ) . iterator ( ) ;
rank: 159
score: 99.3531135110294
patch: Iterator < Entry > iter = res . entries ( ) . iterator ( ) ;
rank: 159
score: 99.31232048483456
patch: Iterator iter = res . add ( this ) . entries . iterator ( ) ;
rank: 159
score: 99.30160183376736
patch: Iterator iter = v . entries . entries . entries ( ) . iterator ( ) ;
rank: 159
score: 99.3002398947011
patch: Iterator iter = res . get . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 159
score: 99.28614501953125
patch: Iterator iter = res . entries ( ) . to CaMeL Array ( ) . iterator ( ) ;
rank: 159
score: 99.27417864118304
patch: synchronized ( res ) { iter = res . entries ( ) ;
rank: 159
score: 99.27063598632813
patch: for ( res . entries . iterator ( ) ; res . has CaMeL Next ( ) ; )
rank: 160
score: 99.31219841452206
patch: Iterator iter = res . entries Real CaMeL Vector ( ) . entries ( ) ;
rank: 160
score: 99.31172943115234
patch: iter . has CaMeL Next ( ) ; { iter . advance ( ) ;
rank: 160
score: 99.30015497622283
patch: for ( Iterator iter = res . list . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 160
score: 99.29378255208333
patch: Iterator < ? > iter = res . entries . iter ( ) ;
rank: 160
score: 99.28604888916016
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries )
rank: 160
score: 99.27394205729166
patch: Iterator < Float > iter = res . entries . iterator ( ) ;
rank: 161
score: 99.3626349954044
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = ebe CaMeL Multiply ( this ) ;
rank: 161
score: 99.3528823852539
patch: Iterator iter = res . entries . iterator ( ) ; else return null ;
rank: 161
score: 99.3115463256836
patch: Iterator iter = res . entries . trim ( ) . size ( ) ;
rank: 161
score: 99.310791015625
patch: Iterator iter = res . entries ) . iterator ( ) ;
rank: 161
score: 99.29970703125
patch: Iterator iter = res . list ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 161
score: 99.2934814453125
patch: Iterator iter = res . entries . iterator ( ) ; ) / /
rank: 161
score: 99.28572591145833
patch: Iterator < String > iter = v . entries . iterator ( ) ;
rank: 161
score: 99.27393341064453
patch: final Iterator < ] > iter = res . entries . iterator ( ) ;
rank: 161
score: 99.26898193359375
patch: Iterator iter = res . Iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 162
score: 99.3528060913086
patch: int entries = res . entries . iterator ( ) . size ( ) ;
rank: 162
score: 99.31110382080078
patch: Iterator res = res . get CaMeL Dimension ( ) . entries ( ) ;
rank: 162
score: 99.31005859375
patch: Iterator iter = res . entries . Real CaMeL Vector ( ) . entries ( ) ;
rank: 162
score: 99.30080837673611
patch: Iterator iter = res . list ( ) . entries ( ) . iterator ( ) ;
rank: 162
score: 99.29339599609375
patch: Iterator iter = res . get CaMeL Method ( ) . entries ( ) ;
rank: 162
score: 99.28341471354166
patch: Iterator < iter > iter = res . entries . iterator ( ) ;
rank: 162
score: 99.27323644301471
patch: Iterator iter = ( ( int ) res . entries . iterator ( ) ) ;
rank: 162
score: 99.26894962086396
patch: if ( res . entries . iterator ( ) . has CaMeL Next ( ) )
rank: 163
score: 99.3522590188419
patch: final int entries = res . entries . iterator ( ) . size ( ) ;
rank: 163
score: 99.31082356770834
patch: Iterator iter = res . get CaMeL Dimension ( ) . ( ) ;
rank: 163
score: 99.30973815917969
patch: Iterator iter = res . get CaMeL Id ( ) . size ( ) ;
rank: 163
score: 99.29881702769886
patch: Iterator iter = res . get CaMeL Entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 163
score: 99.29235026041667
patch: Iterator iter . Iterator iter = res . entries . iterator ( ) ;
rank: 163
score: 99.26800537109375
patch: if ( res != null ) res . Iterator iter = res . entries . iterator ( ) ;
rank: 164
score: 99.36050575657895
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this , ) ;
rank: 164
score: 99.35223029641544
patch: final Iterator iter = res . get CaMeL Classes ( ) . iterator ( ) ;
rank: 164
score: 99.31078338623047
patch: Iterator iter = res . get CaMeL Entry ( ) . size ( ) ;
rank: 164
score: 99.30907524956598
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . entries . size ( ) ;
rank: 164
score: 99.29941693474265
patch: Iterator iter = res . entries . iterator ( v . size ( ) ) ;
rank: 164
score: 99.29872349330357
patch: Iterator iter = entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 164
score: 99.29229266826923
patch: Iterator iter = res . entries . iter ( ) ; ;
rank: 164
score: 99.28193010602679
patch: Iterator iter = res . entries [ ) . iterator ( ) ;
rank: 164
score: 99.26754557291666
patch: Iterator iter = res . iterator . iterator ( ) ; while ( )
rank: 165
score: 99.35123443603516
patch: Iterator iter = $NUMBER$ * res . entries ( ) . iterator ( ) ;
rank: 165
score: 99.30898030598958
patch: Iterator iter = res . entries . entries . iterator ( ) . iterator ( ) ;
rank: 165
score: 99.29857288707386
patch: Iterator iter = res . entries . iterator ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 165
score: 99.29193115234375
patch: Iterator iter = res . entries . iterator ( ) ; entries = null ;
rank: 165
score: 99.28172665550595
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries . iterator ( ) ) {
rank: 165
score: 99.27223557692308
patch: final int iter = res . entries . size ( ) ;
rank: 165
score: 99.26720428466797
patch: if ( res != null ) res . ) res . res = res ;
rank: 166
score: 99.35957166883681
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . length . iterator ( ) ;
rank: 166
score: 99.35112847222223
patch: Iterator iter = res . get CaMeL Parent ( ) . entries . iterator ( ) ;
rank: 166
score: 99.30878762637867
patch: Iterator iter = res . entries . substring ( 1 ) . iterator ( ) ;
rank: 166
score: 99.29927825927734
patch: Iterator iter < boolean > iter = res . entries . iterator ( ) ;
rank: 166
score: 99.28126927425987
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries ) {
rank: 166
score: 99.2721306295956
patch: res . get CaMeL Name ( ) . iterator ( ) . iterator ( ) ;
rank: 166
score: 99.26683044433594
patch: Iterator iter = res . iterator . entries ( ) . iterator ( ) ;
rank: 167
score: 99.35954284667969
patch: int iter = res . get CaMeL Dimension ( ) . entries ( ) ;
rank: 167
score: 99.35088500976562
patch: int 1 = res . entries . iterator ( ) . iterator ( ) . size ( ) ;
rank: 167
score: 99.30769348144531
patch: for ( for ( Iterator iter = res . entries . iterator ( ) ;
rank: 167
score: 99.29794456845238
patch: Iterator iter = v . get ( res . get CaMeL Dimension ( ) ) . iterator ( ) ;
rank: 167
score: 99.29120744977679
patch: Iterator iter = res . entries . res . iterator ( ) ;
rank: 167
score: 99.28101348876953
patch: Iterator iter = this . entries . entries ( ) . iterator ( ) ;
rank: 167
score: 99.26678059895833
patch: Object res = res . entries ( ) . get ( 0 ) ;
rank: 168
score: 99.35060424804688
patch: boolean iter = res . entries . iterator ( ) . iterator ( ) . size ( ) ;
rank: 168
score: 99.30882161458334
patch: Iterator iter = res . entries . entries . iterator ( ) ; ;
rank: 168
score: 99.30717917049633
patch: Iterator iter = res . to CaMeL Array ( this ) . iterator ( ) ;
rank: 168
score: 99.29119873046875
patch: Iterator iter = res . entries . start . iterator ( ) ;
rank: 168
score: 99.2808902138158
patch: Iterator iter = res . entries [ 0 ] . entries . entries . iterator ( ) ;
rank: 168
score: 99.2710712139423
patch: Iterator < ? > iter = res . entries ( ) ;
rank: 168
score: 99.26668294270833
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) ;
rank: 169
score: 99.30872344970703
patch: Iterator iter = res . get CaMeL Name ( ) . entries ( ) ;
rank: 169
score: 99.29690712376645
patch: Iterator iter = res . entries ) ; while ( iter . has CaMeL Next ( ) )
rank: 169
score: 99.291015625
patch: Iterator iter = res . entries . iterator ( ) ; / /
rank: 169
score: 99.26613362630208
patch: res . entries = res . entries ; Iterator iter = res . entries ( ) ;
rank: 170
score: 99.34945913461539
patch: Iterator < String > iter = entries . iterator ( ) ;
rank: 170
score: 99.29679731889205
patch: Iterator iter = this . res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 170
score: 99.2909423828125
patch: Iterator iter = res . next ( ) ;
rank: 170
score: 99.27930850074405
patch: Iterator < Real CaMeL Vector < Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 170
score: 99.269580078125
patch: Iterator iter = res . entries ( 0 ) . iterator ( ) ;
rank: 170
score: 99.26563936121323
patch: / * * Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 171
score: 99.29656427556819
patch: List list = res . entries . iterator ( ) ; while ( list . has CaMeL Next ( ) )
rank: 171
score: 99.27804361979166
patch: Iterator iter = ! res . entries . entries . iterator ( ) ;
rank: 171
score: 99.26920776367187
patch: Vector iter = res . entries ( ) ;
rank: 171
score: 99.26481359145221
patch: if ( res != null && res . entries . size ( ) > 0 )
rank: 172
score: 99.3057861328125
patch: Iterator iter = res . next ( ) . get CaMeL Dimension ( ) ;
rank: 172
score: 99.2956012228261
patch: Iterator iter = res . entries . iterator ( ) ; while ( ; iter . has CaMeL Next ( ) )
rank: 172
score: 99.2907355813419
patch: Iterator iter = res . parse ( res . entries . iterator ( ) ) ;
rank: 172
score: 99.26807358685662
patch: Iterator iter = res [ null ] . entries ( ) . iterator ( ) ;
rank: 172
score: 99.26350911458333
patch: try { Iterator iter = res . iterator ( ) ;
rank: 173
score: 99.35694885253906
patch: Vector iter = res . get CaMeL Dimension ( ) . entries ( ) ;
rank: 173
score: 99.34892442491319
patch: Iterator iter = res . get . get CaMeL Classes ( ) . iterator ( ) ;
rank: 173
score: 99.30561065673828
patch: Iterator iter = res . class . entries ( ) . iterator ( ) ;
rank: 173
score: 99.2956073467548
patch: Iterator iter = res . entries . iterator ( ) 1 ;
rank: 173
score: 99.29527216372283
patch: Iterator iter = this . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 173
score: 99.29059244791667
patch: Iterator iter = res . entries . iterator ( ) ; iterator else ;
rank: 173
score: 99.27694847470238
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector > }
rank: 173
score: 99.26775045955883
patch: Iterator iter = res . to CaMeL Array ( res ) . iterator ( ) ;
rank: 173
score: 99.26309204101562
patch: Iterator iterator = v . iterator ( ) ;
rank: 174
score: 99.34793893914474
patch: Iterator iter = res . get ( true ) . entries ( ) . iterator ( ) ;
rank: 174
score: 99.29519653320312
patch: Iterator iter = list . entries . iterator ( ) ;
rank: 174
score: 99.29003034319196
patch: Iterator iter = res . entries . min . iterator ( ) ;
rank: 174
score: 99.275634765625
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector >= iter = res . entries . entries . iterator ( ) ;
rank: 174
score: 99.26767202524039
patch: Iterator < ] : res . entries . iterator ( ) ;
rank: 175
score: 99.35608628216912
patch: Iterator iter = res . get CaMeL Dimension ( $STRING$ ) . iterator ( ) ;
rank: 175
score: 99.30502658420139
patch: Iterator iter = res . get CaMeL Data ( ) . entries . size ( ) ;
rank: 175
score: 99.2935101052989
patch: Iterator iter = res . get ( res . get CaMeL Dimension ( ) ) . entries . iterator ( ) ;
rank: 175
score: 99.28987884521484
patch: Iterator iter = res . entries . iterator ( ) ; iter return res ;
rank: 175
score: 99.2745361328125
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries . iterator ( ) )
rank: 175
score: 99.26758530560662
patch: Iterator iter = res . entries ( $NUMBER$ - 1 ) . iterator ( ) ;
rank: 175
score: 99.2624740600586
patch: res . Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 176
score: 99.35587565104167
patch: Iterator iter = res . entries ( ) . . iterator ( ) ;
rank: 176
score: 99.34769694010417
patch: Iterator < Throwable > iter = res . entries . iterator ( ) ;
rank: 176
score: 99.30492485894098
patch: Iterator iter = v . get CaMeL Data ( ) . entries . iterator ( ) ;
rank: 176
score: 99.29505157470703
patch: int size = res . get CaMeL Dimension ( ) . size ( ) ;
rank: 176
score: 99.29311116536458
patch: Iterator iter = res . entries . iterator . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 176
score: 99.27412632533482
patch: Iterator iter > iter = res . entries . iterator ( ) ;
rank: 176
score: 99.26197102864583
patch: Iterator iter = res . entries ( res . iterator ( ) ) ;
rank: 177
score: 99.34709930419922
patch: final Iterator < T > iter = res . entries . iterator ( ) ;
rank: 177
score: 99.30419158935547
patch: Iterator iter = v . next ( ) . entries . iterator ( ) ;
rank: 177
score: 99.27405366443452
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = entries . entries . iterator ( ) ;
rank: 178
score: 99.30345243566177
patch: Iterator iter = res . get CaMeL Dimension ( iter . size ( ) ) ;
rank: 178
score: 99.29491509331598
patch: Iterator iter = res . entries . iterator ( ) : list . iterator ( ) ;
rank: 178
score: 99.2919209798177
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) break ;
rank: 178
score: 99.289306640625
patch: Iterator iter = res . entries ( ) . iterator ( ) ; ) ;
rank: 178
score: 99.2737453294837
patch: Iterator iter = ( Open CaMeL Map CaMeL Real CaMeL Vector ) this . res . entries . iterator ( ) ;
rank: 178
score: 99.26618194580078
patch: Iterator iter = ( res . entries ( ) ) . iterator ( ) ;
rank: 178
score: 99.26048642113095
patch: for ( Iterator iter = res . entries ( ) ; iter . has CaMeL Next ( ) ; )
rank: 179
score: 99.3544692993164
patch: Vector iter = res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 179
score: 99.30464680989583
patch: Iterator iter = res . entries . [ 1 ] . entries . iterator ( ) ;
rank: 179
score: 99.30318196614583
patch: Iterator iter = res . entries . entries . iterator ( ) ; }
rank: 179
score: 99.2913818359375
patch: for ( Iterator iter = res . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; ) {
rank: 179
score: 99.28877766927083
patch: Iterator < Entry > iter = res . entries . iter ( ) ;
rank: 179
score: 99.27366129557292
patch: Iterator iter += res . entries . iterator ( ) ;
rank: 179
score: 99.25934801603618
patch: if ( res . res != null && res . res . res . res != null )
rank: 180
score: 99.30313110351562
patch: Iterator iter = res . entries . get ( ) . iterator ( ) ;
rank: 180
score: 99.29090118408203
patch: Iterator iter = res . list . iterator ( ) . iterator ( ) ;
rank: 180
score: 99.2589111328125
patch: if ( res . entries != null && res . entries . length > 0 )
rank: 181
score: 99.35384971217105
patch: Iterator iter = res . ebe CaMeL Multiply ( v . get CaMeL Dimension ( ) ) ;
rank: 181
score: 99.3443603515625
patch: final Iterator < Object > iter = res . entries ( ) . iterator ( ) ;
rank: 181
score: 99.2945556640625
patch: Iterator iter < Integer > iter = res . entries . iterator ( ) ;
rank: 181
score: 99.29002844769022
patch: Iterator iter = data . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 181
score: 99.2637939453125
patch: Iterator iter = res . entries = res . map . iterator ( ) ;
rank: 181
score: 99.25843570106908
patch: Iterator iter = v . iterator ( ) ; while . has CaMeL Next ( ) ; )
rank: 182
score: 99.34407312729779
patch: final Iterator iter = res . to CaMeL Array ( ) . iterator ( ) ;
rank: 182
score: 99.3034439086914
patch: Iterator iter = res . Real CaMeL Vector ( ) . iterator ( ) ;
rank: 182
score: 99.30185953776042
patch: Iterator iter = res . entries > iterator ( ) ;
rank: 182
score: 99.28816223144531
patch: Iterator iter = res . entries . iterator ( ) ; ) return res ;
rank: 182
score: 99.26372821514423
patch: Iterator < Integer > iter = res . entries ( ) ;
rank: 182
score: 99.25814016241776
patch: if ( v . get CaMeL Dimension ( ) != res . get CaMeL Dimension ( ) )
rank: 183
score: 99.34274526742789
patch: Iterator < Iterator > iter = res . entries ( ) ;
rank: 183
score: 99.30318450927734
patch: Iterator iter = res . entries . index CaMeL Of ( - 1 ) ;
rank: 183
score: 99.30172909007354
patch: Iterator < Real CaMeL Vector > entries = res . entries . iterator ( ) ;
rank: 183
score: 99.29365539550781
patch: Iterator iter = v . to CaMeL Array ( ) . iterator ( ) ;
rank: 183
score: 99.2881103515625
patch: Iterator < / > iter = res . entries . iterator ( ) ;
rank: 183
score: 99.26324462890625
patch: res . entries . Iterator iter = res . entries . iterator ( ) ;
rank: 183
score: 99.25763617621527
patch: Iterator iter ; try { iter = res . entries ( ) . iterator ( ) ;
rank: 184
score: 99.30243598090277
patch: Open CaMeL Map CaMeL Real CaMeL Vector ( v . get CaMeL Dimension ( ) ) ;
rank: 184
score: 99.30152180989583
patch: Iterator iter = res . entries . iterator ( ) ; for ( (
rank: 184
score: 99.2923583984375
patch: Iterator iter = entries . entries . entries . iterator ( ) ;
rank: 184
score: 99.28915405273438
patch: Iterator iter = v . get . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 184
score: 99.28750375600961
patch: Iterator iter iterator = res . entries . iterator ( ) ;
rank: 184
score: 99.26319885253906
patch: int iter = res . get CaMeL Classes ( ) . size ( ) ;
rank: 184
score: 99.2569247159091
patch: Iterator iter = v . iterator ( ) ; ;
rank: 185
score: 99.35251871744792
patch: Vector iter = res . get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 185
score: 99.34226989746094
patch: Iterator iter = res . get CaMeL Actions ( ) . iterator ( ) ;
rank: 185
score: 99.30130208333334
patch: Iterator < Short > iter = res . entries . iterator ( ) ;
rank: 185
score: 99.30106295072116
patch: Iterator iter advance = res . entries . iterator ( ) ;
rank: 185
score: 99.29214816623264
patch: Iterator iter = res . iterator ( ) : res . entries . iterator ( ) ;
rank: 185
score: 99.28885323660714
patch: iter = v . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 185
score: 99.25689290364583
patch: Iterator iter = v . entries ( res ) . iterator ( ) ;
rank: 186
score: 99.35243733723958
patch: Iterator iter = res . entries . iterator ( ) * v . iterator ( ) ;
rank: 186
score: 99.34099663628473
patch: Iterator iter = res . get CaMeL V . entries ( ) . iterator ( ) ;
rank: 186
score: 99.30060221354167
patch: Iterator < Real CaMeL Vector > iter = res . entries ( ) ;
rank: 186
score: 99.28814142400569
patch: Iterator iter = super . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 186
score: 99.25626627604167
patch: if ( res != null ) res . res = res . entries . entries . iterator ( ) ;
rank: 187
score: 99.35239083426339
patch: Iterator iter = res . entries . length . iterator ( ) ;
rank: 187
score: 99.34056260850694
patch: Iterator iter = res . entries ( ) ; iter . has CaMeL Next ( ) ;
rank: 187
score: 99.30054428998162
patch: Iterator iter = res . get CaMeL Dimension ( ) ) . iterator ( ) ;
rank: 187
score: 99.3002217610677
patch: Iterator iter = res . get CaMeL Index ( ) ;
rank: 187
score: 99.28811645507812
patch: Iterator iter = v . get CaMeL Fields ( ) . iterator ( ) ;
rank: 187
score: 99.2714510830966
patch: final Iterator iter = res . iterator ( ) ;
rank: 187
score: 99.2614990234375
patch: int < ] > iter = res . entries . iterator ( ) ;
rank: 188
score: 99.35166829427084
patch: Iterator iter = res [ $NUMBER$ ] . entries . iterator ( ) ;
rank: 188
score: 99.30024719238281
patch: Iterator iter = res . [ 1 ] . entries . iterator ( ) ;
rank: 188
score: 99.30008951822917
patch: Iterator iter = res . get CaMeL Format ( ) . entries . iterator ( ) ;
rank: 188
score: 99.2861687155331
patch: Iterator iter = res . entries . iterator ( ) ; . iterator = null ;
rank: 188
score: 99.26979662024456
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iter . iterator ( ) ;
rank: 188
score: 99.26128387451172
patch: Iterator [ ] res . entries = res . entries . iterator ( ) ;
rank: 188
score: 99.2555908203125
patch: Iterator iter = v . entries ( ) ) . iterator ( ) ;
rank: 189
score: 99.33985053168402
patch: if ( res != null ) Iterator iter = res . entries . iterator ( ) ;
rank: 189
score: 99.30003255208334
patch: Iterator iter = res . entries . index CaMeL Of ( false ) ;
rank: 189
score: 99.28970675998264
patch: Iterator iter = res instanceof Real CaMeL Vector : res . entries . iterator ( ) ;
rank: 189
score: 99.28727452895221
patch: Iterator iter = res ; while ( iter . has CaMeL Next ( ) ) {
rank: 189
score: 99.26968204273896
patch: Iterator < Integer > iter = res . entries . entries . iterator ( ) ;
rank: 189
score: 99.25501924402573
patch: if ( res . res != null ) res . res = res . res ;
rank: 190
score: 99.35084364149306
patch: Iterator iter = res . Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( ) ;
rank: 190
score: 99.33955891927083
patch: Iterator iter = res . get CaMeL Row . entries ( ) . iterator ( ) ;
rank: 190
score: 99.29967651367187
patch: Iterator iter = v . size ( ) ;
rank: 190
score: 99.28968811035156
patch: Iterator iter += res . get CaMeL Dimension ( ) . size ( ) ;
rank: 190
score: 99.28704833984375
patch: Iterator iter = map . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 190
score: 99.2694424715909
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector != null ;
rank: 190
score: 99.2607891376202
patch: final int iterator = res . entries . iterator ( ) ;
rank: 190
score: 99.25501773231908
patch: Iterator iter = res . entries ( ) ; while . has CaMeL Next ( ) ; )
rank: 191
score: 99.299560546875
patch: Iterator iter = res . ( ) . iterator ( ) ;
rank: 191
score: 99.29792131696429
patch: Iterator iter = res . entries . data . iterator ( ) ;
rank: 191
score: 99.2682772549716
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = ! res . entries . iterator ( ) ;
rank: 191
score: 99.2603271484375
patch: Iterator iter = res . list ( ) ;
rank: 191
score: 99.25490851151316
patch: if ( res . res != null ) res . res . res = res . res ;
rank: 192
score: 99.33751005284927
patch: final Iterator iter = res . get ( ) . entries . iterator ( ) ;
rank: 192
score: 99.29931640625
patch: Iterator iter = res . entries . size ( ) . iterator ( ) ;
rank: 192
score: 99.29686821831598
patch: while ( iterator . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 192
score: 99.2861328125
patch: for ( Iterator iterator = res . entries . iterator ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 192
score: 99.26790718410327
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries . iterator ( ) ) {
rank: 192
score: 99.2599365234375
patch: Iterator < ] > entries = res . entries . iterator ( ) ;
rank: 193
score: 99.34840223524306
patch: Iterator iter = res . entries != null : res . entries . iterator ( ) ;
rank: 193
score: 99.33638269761029
patch: final int iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 193
score: 99.29921587775735
patch: Iterator iter = res . get CaMeL Dimension ( ) . size ( ) ; ;
rank: 193
score: 99.29653751148896
patch: Iterator iter = res . entries ( ) . index CaMeL Of ( $STRING$ ) ;
rank: 193
score: 99.28743743896484
patch: Iterator iter = res , res = res . entries . iterator ( ) ;
rank: 193
score: 99.2860107421875
patch: int size = res . entries . size ( ) ;
rank: 193
score: 99.259521484375
patch: int iter = res . entries . trim ( ) . size ( ) ;
rank: 193
score: 99.2540283203125
patch: Object res = res . entries . get ( 0 ) ;
rank: 194
score: 99.34835476345486
patch: Iterator iter = v . get CaMeL Entry ( ) . entries . iterator ( ) ;
rank: 194
score: 99.3359375
patch: Iterator < String > iterator = res . entries ( ) . iterator ( ) ;
rank: 194
score: 99.29881286621094
patch: Iterator res = res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 194
score: 99.29591369628906
patch: Iterator iter = res . entries . data . entries . iterator ( ) ;
rank: 194
score: 99.28707885742188
patch: Iterator iter = res != null ? res . entries . iterator ( ) ;
rank: 194
score: 99.28574625651042
patch: System . Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 194
score: 99.2835693359375
patch: Iterator iter = ( Iterator ) res . iterator ( ) ;
rank: 194
score: 99.25936889648438
patch: Iterator iter = res . map . size ( ) ;
rank: 194
score: 99.25360107421875
patch: if ( res . entries . size ( ) > 0 ) return res ;
rank: 195
score: 99.33575760690789
patch: Iterator < Object > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 195
score: 99.2958514873798
patch: Iterator iter = res . entries entries . iterator ( ) ;
rank: 195
score: 99.26605779474431
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . . iterator ( ) ;
rank: 195
score: 99.25359030330883
patch: if ( res != null ) { Iterator iter = res . iterator ( ) ;
rank: 196
score: 99.33517020089286
patch: Iterator iter = in . entries ( ) . iterator ( ) ;
rank: 196
score: 99.29779052734375
patch: Iterator iter = entries . next ( ) . entries . iterator ( ) ;
rank: 196
score: 99.28632948133681
patch: Iterator entries = res . entries ( ) . entries ( ) . iterator ( ) ;
rank: 196
score: 99.28517659505208
patch: Iterator iter = res . split . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 196
score: 99.2830059344952
patch: Iterator iter = res . entries . add ( res ) ;
rank: 196
score: 99.26528532608695
patch: Enumeration < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries . iterator ( ) ;
rank: 196
score: 99.25859832763672
patch: Iterator iter = res . get CaMeL Modifiers ( ) . iterator ( ) ;
rank: 196
score: 99.25252492804276
patch: if ( res != null ) return ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ;
rank: 197
score: 99.34718081825658
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . ebe CaMeL Multiply ( res ) ;
rank: 197
score: 99.33447943793402
patch: Iterator iter = res . entries . iterator ( ) ; res . iterator ( ) ;
rank: 197
score: 99.28605143229167
patch: int iter = res . get CaMeL Dimension ( ) . entries . size ( ) ;
rank: 197
score: 99.28458305027173
patch: Iterator iter = res . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 197
score: 99.28287447415866
patch: Iterator iter ( res . entries . iterator ( ) ) ;
rank: 197
score: 99.26514434814453
patch: super . ebe CaMeL Multiply ( v . get CaMeL Dimension ( ) ) ;
rank: 197
score: 99.25192057291666
patch: Iterator iter = res . iterator ( res . entries ( ) ) ;
rank: 198
score: 99.34699164496527
patch: Iterator iter = ( iter . has CaMeL Next ( ) ) . iterator ( ) ;
rank: 198
score: 99.33382161458333
patch: Iterator iter = res . entries entries ( ) . iterator ( ) ;
rank: 198
score: 99.29698270909927
patch: Iterator < Real CaMeL Vector > res = v . entries . iterator ( ) ;
rank: 198
score: 99.28565889246323
patch: Iterator iter = res . get CaMeL Entry ( 1 ) . iterator ( ) ;
rank: 198
score: 99.28448195684524
patch: iterator = res . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 198
score: 99.28270612444196
patch: Iterator iter = new Iterator ( res . entries ( ) ) ;
rank: 198
score: 99.26513061523437
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) ; ) {
rank: 198
score: 99.2578876201923
patch: res . entries . iterator ( ) . iterator ( ) ;
rank: 198
score: 99.25174753289474
patch: synchronized ( res ) { Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 199
score: 99.34630062705592
patch: Real CaMeL Vector res . set CaMeL Entry ( v . get CaMeL Entry ( ) ) ;
rank: 199
score: 99.33287048339844
patch: Iterator < String > iter = res . entries . iterator ( ) ; else
rank: 199
score: 99.29689654181985
patch: Iterator iter = res . get CaMeL Dimension ( ) . contains ( $STRING$ ) ;
rank: 199
score: 99.28341238839286
patch: Iterator iter = res . iterator ( ) ; ; while ( iter . has CaMeL Next ( ) )
rank: 199
score: 99.28237479073661
patch: Iterator iter Iterator iter = res . entries . iterator ( ) ;
rank: 199
score: 99.25776223575367
patch: res . value = res . entries . iterator ( ) . next ( ) ;
rank: 199
score: 99.25141737196181
patch: if ( v != null ) res . ) res . entries = res . entries ;
rank: 200
score: 99.2966778094952
patch: Iterator iter = res . entries . size ( ) ; }
rank: 200
score: 99.2921142578125
patch: Iterator iter = res . get CaMeL Dimension ( ) . get CaMeL Index ( ) ;
rank: 200
score: 99.28235626220703
patch: Iterator iter = res . iterator ( ) ; iter . iterator ( ) ;
rank: 200
score: 99.26412963867188
patch: Iterator iter ? res . entries . iterator ( ) . advance ( ) ;
rank: 200
score: 99.25084686279297
patch: Iterator iter = res . iterator . iterator ( ) . iterator ( ) ;
rank: 201
score: 99.34598117404514
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ; for (
rank: 201
score: 99.33001349954044
patch: Iterator iter = res . get ( $NUMBER$ ) . entries . iterator ( ) ;
rank: 201
score: 99.28292713994566
patch: for ( Iterator iter = v . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 201
score: 99.2823127297794
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ; ;
rank: 201
score: 99.26330035665761
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . list . iterator ( ) ;
rank: 201
score: 99.25606863839286
patch: int iterator = res . entries ( ) . size ( ) ;
rank: 202
score: 99.32954915364583
patch: Iterator < Object > iter = res . entries . iter ( ) ;
rank: 202
score: 99.29542541503906
patch: Iterator iter = res . copy ( ) . entries . iterator ( ) ;
rank: 202
score: 99.28281471946023
patch: Iterator iterator = v . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 202
score: 99.28168487548828
patch: Iterator iter = res . get CaMeL Class ( ) . entries ( ) ;
rank: 202
score: 99.26326851222827
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) { iter . advance ( ) ;
rank: 202
score: 99.2559814453125
patch: Iterator < ] > entries = res . entries ( ) ;
rank: 202
score: 99.250341796875
patch: Iterator iter = res . iterator ( res . iterator ( ) ) ;
rank: 203
score: 99.32923889160156
patch: boolean iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 203
score: 99.28268432617188
patch: Iterator iter = v . get CaMeL Entries ( ) . iterator ( ) ;
rank: 203
score: 99.28077697753906
patch: Iterator iter = res . entries . iterator ( ) ; iterator = false ;
rank: 203
score: 99.26224557976974
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = res . iterator ( ) ;
rank: 203
score: 99.25588809742646
patch: res . value = res . entries . iterator ( ) . size ( ) ;
rank: 203
score: 99.25003051757812
patch: Iterator iter = res . entries ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 204
score: 99.34492710658482
patch: res . set CaMeL Entry ( iter . advance ( ) ) ;
rank: 204
score: 99.32888357979911
patch: Iterator iter = res . get ( ) . size ( ) ;
rank: 204
score: 99.29512845552884
patch: Iterator iter = res . entries . iterator ( 0 ) ;
rank: 204
score: 99.28414481026786
patch: Iterator iter = this . v . entries . iterator ( ) ;
rank: 204
score: 99.28261311848958
patch: Iterator iter = res . list . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 204
score: 99.27992876838235
patch: Iterator iter = res . load ( res . entries . iterator ( ) ) ;
rank: 204
score: 99.26188441685268
patch: Iterator iter = res . entries . iterator ( ) - 1 ;
rank: 204
score: 99.25546061197916
patch: Iterator iter = res . entries ( false ) . iterator ( ) ;
rank: 204
score: 99.24996948242188
patch: Iterator iter = res . get CaMeL Annotations ( ) . iterator ( ) ;
rank: 205
score: 99.34446207682292
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = res . get CaMeL Dimension ( ) ;
rank: 205
score: 99.28405043658088
patch: Iterator iter = res . index CaMeL Of ( get CaMeL Dimension ( ) ) ;
rank: 205
score: 99.27930405560662
patch: Iterator iter = res . entries . split ( res . iterator ( ) ) ;
rank: 205
score: 99.2616656759511
patch: Iterator iter = ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . entries . entries . iterator ( ) ;
rank: 205
score: 99.25517578125
patch: Iterator iter = res [ null ] . entries . iterator ( ) ;
rank: 206
score: 99.34426443917411
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector ;
rank: 206
score: 99.32783777573529
patch: Iterator < Object > iter = res . entries ( ) . iter ( ) ;
rank: 206
score: 99.28230794270833
patch: Iterator iter = res . res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 206
score: 99.2613858309659
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector + v . get CaMeL Dimension ( ) ;
rank: 206
score: 99.25493829900569
patch: Iterator iter = res . entries ( true ) ;
rank: 206
score: 99.24923502604166
patch: final Iterator iter = v . entries ( ) . iterator ( ) ;
rank: 207
score: 99.2890625
patch: for ( Iterator iter = res . entries . entries . entries . iterator ( ) ;
rank: 207
score: 99.28303358289931
patch: Iterator iter = res . entries . iterator ( ) : v . entries ( ) ;
rank: 207
score: 99.26124790736607
patch: Iterator iter = res . entries . entries . entries ( ) ;
rank: 207
score: 99.2485107421875
patch: / * * Iterator iter = res . entries . iterator ( ) ;
rank: 208
score: 99.327197265625
patch: List res . iterator ( ) . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 208
score: 99.29462747012867
patch: Iterator iter = res . get CaMeL Dimension ( ) . size ( ) ; }
rank: 208
score: 99.27775065104167
patch: Iterator < ) = res . entries ( ) . iterator ( ) ;
rank: 208
score: 99.26100376674107
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res )
rank: 208
score: 99.25380045572916
patch: Iterator < Boolean > iter = res . entries . iterator ( ) ;
rank: 209
score: 99.29377092633929
patch: Iterator iter = res . read ( ) . iterator ( ) ;
rank: 209
score: 99.28804524739583
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries . iter ( ) ;
rank: 209
score: 99.28219265407986
patch: Iterator iter = res . entries . iterator ( ) : v . size ( ) ;
rank: 209
score: 99.2773078469669
patch: Iterator iter = res . entries . add ( res . entries ( ) ) ;
rank: 209
score: 99.26041666666667
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . iterator ( ) )
rank: 209
score: 99.247509765625
patch: Iterator iter = v . entries ( ) . iterator ( ) ; ;
rank: 210
score: 99.34243435329861
patch: Real CaMeL Vector iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 210
score: 99.32704671223958
patch: final Iterator < ? > iter = res . entries ( ) . iterator ( ) ;
rank: 210
score: 99.28794232536765
patch: Iterator iter = res . entries . iterator ( v . entries ( ) ) ;
rank: 210
score: 99.2815300436581
patch: synchronized ( v ) { Iterator iter = res . entries . iterator ( ) ;
rank: 210
score: 99.28125
patch: Iterator iter = res . list . iterator ( ) ; ;
rank: 210
score: 99.246826171875
patch: if ( res . size ( ) == 0 ) return res ;
rank: 211
score: 99.34242757161458
patch: int iter = v . get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 211
score: 99.32694702148437
patch: boolean entries = res . entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 211
score: 99.2877426147461
patch: Iterator iter = res . entries . next ( ) . size ( ) ;
rank: 211
score: 99.28077334449405
patch: Iterator iter = res . get ( res . get CaMeL Id ( ) ) . iterator ( ) ;
rank: 211
score: 99.28070746527777
patch: Iterator iter = in . entries ( ) . entries ( ) . iterator ( ) ;
rank: 211
score: 99.27703387920673
patch: Iterator < ) = res . entries . iterator ( ) ;
rank: 211
score: 99.2598186990489
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . res . entries . iterator ( ) ;
rank: 211
score: 99.25272042410714
patch: Iterator iter = res . entries . iterator ( ) ; try {
rank: 211
score: 99.24639571340461
patch: if ( res . entries != null ) res . res . entries = res . entries ;
rank: 212
score: 99.32648468017578
patch: Iterator iter = res . entries ( ) = res . entries ( ) ;
rank: 212
score: 99.2927017211914
patch: Iterator iter = res . Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 212
score: 99.28724670410156
patch: Iterator iter = res . ebe CaMeL Multiply . entries . iterator ( ) ;
rank: 212
score: 99.28026234019886
patch: Iterator iter = list . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 212
score: 99.259765625
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . iterator ( ) ) {
rank: 212
score: 99.25233459472656
patch: Iterator iter = res . get CaMeL Prefix ( ) . iterator ( ) ;
rank: 213
score: 99.341552734375
patch: Open CaMeL Map CaMeL Real CaMeL Vector Iterator iter = res . entries . iterator ( ) ;
rank: 213
score: 99.28716571514423
patch: Open CaMeL Map CaMeL Real CaMeL Vector res ( res ) ;
rank: 213
score: 99.27937825520833
patch: Iterator iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 213
score: 99.25975341796875
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries ( ) )
rank: 213
score: 99.24545084635416
patch: Iterator iter = res . entries ( ) . iterator ( ) ; )
rank: 214
score: 99.34145636307566
patch: iter = res . get CaMeL Dimension ( ) . entries ( ) . iterator ( ) ;
rank: 214
score: 99.32618815104166
patch: Iterator < Object > iterator = res . entries . iterator ( ) ;
rank: 214
score: 99.28703477647569
patch: Iterator iter = res . entries . get ( ) . entries . iterator ( ) ;
rank: 214
score: 99.27916124131944
patch: Iterator iter = res . get . get CaMeL Properties ( ) . iterator ( ) ;
rank: 214
score: 99.27902560763889
patch: Iterator iter = res . max ( ) . entries ( ) . iterator ( ) ;
rank: 214
score: 99.27637481689453
patch: Iterator iter = res . entries . reverse ( ) . iterator ( ) ;
rank: 214
score: 99.25963745117187
patch: Iterator iter ? res . entries ( ) . iterator ( ) . has CaMeL Next ( ) ;
rank: 214
score: 99.24533081054688
patch: Iterator iter . has CaMeL Next ( ) ;
rank: 215
score: 99.34137369791667
patch: Iterator iter = res . entries [ $NUMBER$ ] . iterator ( ) ;
rank: 215
score: 99.32607693142361
patch: boolean iter = res . entries . iterator ( ) . iterator ( ) != null ;
rank: 215
score: 99.28696017795139
patch: Open CaMeL Map CaMeL Real CaMeL Vector v = new Real CaMeL Vector ( this ) ;
rank: 215
score: 99.27895220588235
patch: res . entries = res . entries . iterator ( ) . next ( ) ;
rank: 215
score: 99.27884928385417
patch: Iterator iter = res . value ( ) . entries ( ) . iterator ( ) ;
rank: 215
score: 99.2763671875
patch: Iterator iter = super . entries . iterator ( ) ;
rank: 215
score: 99.25914091222427
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : v . entries ) {
rank: 215
score: 99.24532277960526
patch: if ( res != null ) { Iterator iter = res . entries . iterator ( ) ;
rank: 216
score: 99.34133429276316
patch: Iterator iter = ( ( Real CaMeL Vector ) res . entries ) . iterator ( ) ;
rank: 216
score: 99.32603352864584
patch: Iterator < Byte > iter = res . entries . iterator ( ) ;
rank: 216
score: 99.27882215711806
patch: Iterator iter = res . entries . iterator ( ) : iter . advance ( ) ;
rank: 216
score: 99.27840523097827
patch: Iterator iter = res . list . iterator ( ) ; ; while ( iter . has CaMeL Next ( ) )
rank: 216
score: 99.27627563476562
patch: Iterator iter = res . get CaMeL Parent ( ) . iterator ( ) ;
rank: 216
score: 99.25886753627232
patch: Iterator < int ) = res . entries . iterator ( ) ;
rank: 216
score: 99.24424984580592
patch: if ( res != null ) res . res = res . entries . size ( ) ;
rank: 217
score: 99.34112548828125
patch: Iterator iter = res . list . entries ( ) . iterator ( ) ;
rank: 217
score: 99.29100545247395
patch: Iterator iter = res . data . iterator ( ) ;
rank: 217
score: 99.28640407986111
patch: Iterator iter = res . next ( ) . entries ( ) . size ( ) ;
rank: 217
score: 99.27619171142578
patch: Iterator iter = 0 ; iter = res . entries . iterator ( ) ;
rank: 217
score: 99.25093587239583
patch: for ( Iterator iter = res . entries . iterator ( ) ; }
rank: 217
score: 99.24421129728618
patch: if ( res != null ) res . res = res . entries . iterator ( ) ;
rank: 218
score: 99.34059544613487
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . ebe CaMeL Multiply ( this ) ;
rank: 218
score: 99.32536764705883
patch: Iterator < Iterator < String > iter = res . entries . iterator ( ) ;
rank: 218
score: 99.29072840073529
patch: Iterator iter = res . add ( v . get CaMeL Entry ( ) ) ;
rank: 218
score: 99.28620461856617
patch: else check CaMeL Vector CaMeL Dimensions ( v . get CaMeL Dimension ( ) ) ;
rank: 218
score: 99.27780018682066
patch: Iterator iter = res . get ( res . entries . size ( ) - 1 ) . iterator ( ) ;
rank: 218
score: 99.27452087402344
patch: Iterator iter . iter = res . entries ( ) . iterator ( ) ;
rank: 218
score: 99.25007629394531
patch: synchronized ( res ) { entries = res . entries . iterator ( ) ;
rank: 218
score: 99.243798828125
patch: Iterator < String > iter = res . iterator . iterator ( ) ;
rank: 219
score: 99.32467651367188
patch: Iterator iter = res . get ( ) . list . iterator ( ) ;
rank: 219
score: 99.27729034423828
patch: Object [ ] list = res . entries . to CaMeL Array ( ) ;
rank: 219
score: 99.24967193603516
patch: int iter = res . get CaMeL Properties ( ) . size ( ) ;
rank: 219
score: 99.2426693564967
patch: if ( res != null ) res . entries = res . entries . iterator ( ) ;
rank: 220
score: 99.3403256064967
patch: Iterator iter = ( ( Real CaMeL Vector ) v . entries . iterator ( ) ) ;
rank: 220
score: 99.28948974609375
patch: Iterator iter = entries . entries . size ( ) ;
rank: 220
score: 99.27647333559783
patch: Iterator iter = res . iter . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 220
score: 99.27327786959134
patch: / Iterator iter = res . entries . iterator ( ) ;
rank: 220
score: 99.24952189127605
patch: Iterator iter = res . res . entries ( ) ;
rank: 221
score: 99.28925637637867
patch: Iterator iter = res . while ( iter . has CaMeL Next ( ) ) {
rank: 221
score: 99.28464762369792
patch: Iterator iter = res . get CaMeL Name ( ) . entries . iterator ( ) ;
rank: 221
score: 99.27625621448864
patch: System . arraycopy ( res . entries . to CaMeL Array ( ) , 0 , res . entries ) ;
rank: 221
score: 99.27325439453125
patch: / ; Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 221
score: 99.25728934151786
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries ( ) ) {
rank: 221
score: 99.24235026041667
patch: Iterator iter = v . iterator ( res . size ( ) ) ;
rank: 222
score: 99.32404641544117
patch: Iterator < ) > iter = res . entries ( ) . iterator ( ) ;
rank: 222
score: 99.28891888786765
patch: Iterator iter = res . get CaMeL Dimension ( 0 ) . iterator ( ) ;
rank: 222
score: 99.28462219238281
patch: Iterator iter = res . entries ( ) . has CaMeL Next ( ) ;
rank: 222
score: 99.27544696514423
patch: Iterator iter = res . entries . iterator ( 1 ) ;
rank: 222
score: 99.27318115234375
patch: Iterator iter = res . read ( ) ;
rank: 222
score: 99.24908806295956
patch: Iterator iter = entries . to CaMeL Array ( res ) . iterator ( ) ;
rank: 223
score: 99.33965386284723
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( $STRING$ ) ;
rank: 223
score: 99.32388305664062
patch: final Iterator < E > iter = res . entries . iterator ( ) ;
rank: 223
score: 99.27446056547619
patch: Iterator iter = res . entries [ res . entries . size ( ) ] . iterator ( ) ;
rank: 223
score: 99.27315521240234
patch: Iterator iter = res . get CaMeL Long ( ) . iterator ( ) ;
rank: 223
score: 99.25562686011905
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iter . iterator ( ) ;
rank: 223
score: 99.2490463256836
patch: Iterator iter = res . entries . iterator ( ) ; int < ] :
rank: 223
score: 99.24159749348958
patch: Iterator iterator = res . iterator . iterator ( ) ;
rank: 224
score: 99.33945719401042
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( false ) ;
rank: 224
score: 99.32364908854167
patch: Iterator < String > iter = res . entries . size ( ) ;
rank: 224
score: 99.28863525390625
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ;
rank: 224
score: 99.27443440755208
patch: Iterator iter = res . get . iterator ( ) ;
rank: 224
score: 99.27261555989584
patch: Iterator iter = res . entries . iterator ( ) ; = 0 ;
rank: 224
score: 99.2555621603261
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter : res . entries . entries . iterator ( ) ;
rank: 224
score: 99.24898274739583
patch: int iterator = res . entries . iterator ( ) ;
rank: 224
score: 99.24110107421875
patch: Iterator iter = v . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 225
score: 99.322998046875
patch: Iterator iter = res . name . entries ( ) . iterator ( ) ;
rank: 225
score: 99.2816162109375
patch: Iterator iter = res . get CaMeL Id ( ) . entries . iterator ( ) ;
rank: 225
score: 99.27434747869319
patch: Iterator iter = v . map . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 225
score: 99.27391815185547
patch: int iterator = res . get CaMeL Dimension ( ) . size ( ) ;
rank: 225
score: 99.2726058959961
patch: Iterator iter = res . length ; iterator = res . iterator ( ) ;
rank: 225
score: 99.24898035386029
patch: synchronized ( res ) { Iterator iter = res . map . iterator ( ) ;
rank: 225
score: 99.24051706414474
patch: if ( res != null ) res . res = res . get CaMeL Dimension ( ) ;
rank: 226
score: 99.33786349826389
patch: Iterator iter = res . entries . entries ( ) != null . iterator ( ) ;
rank: 226
score: 99.32262573242187
patch: int size = res . entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 226
score: 99.2809066772461
patch: try { Iterator iter = res . entries . entries . iterator ( ) ;
rank: 226
score: 99.27357991536458
patch: Iterator iter = res . v . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 226
score: 99.27191162109375
patch: Iterator iter = res . entries ( ) . iterator ( ) ; ) {
rank: 226
score: 99.25541759672619
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iter ( ) ;
rank: 226
score: 99.24866485595703
patch: Iterator iter = res . get CaMeL Suffix ( ) . iterator ( ) ;
rank: 226
score: 99.2400146484375
patch: res . res = res ; Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 227
score: 99.33687337239583
patch: iter = res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 227
score: 99.32168579101562
patch: Iterator iter = res . entries == null ? null : res . entries . iterator ( ) ;
rank: 227
score: 99.28641510009766
patch: else iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 227
score: 99.28026665581598
patch: Iterator iter = v . entries . entries . entries . entries . iterator ( ) ;
rank: 227
score: 99.27314685639881
patch: synchronized ( res ) { res . entries = res . entries . entries . iterator ( ) ; }
rank: 227
score: 99.27296278211806
patch: Iterator iter = new Real CaMeL Vector ( res . get CaMeL Dimension ( ) ) ;
rank: 227
score: 99.27188313802084
patch: Iterator iter = res . = res . entries . iterator ( ) ;
rank: 227
score: 99.255126953125
patch: final Iterator < Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 227
score: 99.24820709228516
patch: Iterator iter = res . value . entries ( ) . iterator ( ) ;
rank: 227
score: 99.23954264322917
patch: Iterator iter = res . iterator ( ) ; while . has CaMeL Next ( ) )
rank: 228
score: 99.33675986842105
patch: Iterator < Array CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 228
score: 99.32157135009766
patch: int iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 228
score: 99.27965590533088
patch: Iterator iter = res . entries Real CaMeL Vector ( ) . size ( ) ;
rank: 228
score: 99.27284458705357
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( )
rank: 228
score: 99.27122497558594
patch: Iterator iter = res . get CaMeL Integer ( ) . iterator ( ) ;
rank: 229
score: 99.33664279513889
patch: Iterator iter = list . entries ( ) . entries ( ) . iterator ( ) ;
rank: 229
score: 99.3213882446289
patch: Iterator iter = res . get CaMeL Threshold ( ) . iterator ( ) ;
rank: 229
score: 99.28474695542279
patch: Iterator < Real CaMeL Vector > iter = res . entries . iter ( ) ;
rank: 229
score: 99.27828640407986
patch: Iterator iter = res . Real CaMeL Vector ( ) . entries . iterator ( ) ;
rank: 229
score: 99.27275085449219
patch: Iterator iter = res . this . entries . entries . iterator ( ) ;
rank: 229
score: 99.27241734095982
patch: Iterator iter = res . clone ( ) . entries ( ) ;
rank: 229
score: 99.2701056985294
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = null ;
rank: 229
score: 99.25392844460227
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries . iterator ( ) )
rank: 229
score: 99.24677068536931
patch: Iterator iter = res . entries ( false ) ;
rank: 229
score: 99.23890516493056
patch: Iterator iter = res . iterator ; while ( iter . has CaMeL Next ( ) )
rank: 230
score: 99.32135416666667
patch: Iterator < Iterator > iter = res . entries . iter ( ) ;
rank: 230
score: 99.28472430889423
patch: Iterator iter = v . entries . iterator ( ) ; ;
rank: 230
score: 99.27216254340277
patch: Iterator iter = new Real CaMeL Vector ( v . get CaMeL Dimension ( ) ) ;
rank: 230
score: 99.25355360243056
patch: Iterator iter = res . entries . iterator ( ) ; iterator . advance ( ) ;
rank: 230
score: 99.23853478064903
patch: iter = res . entries ( ) . iterator ( ) ;
rank: 231
score: 99.3361880653783
patch: Iterator iter = res . get CaMeL Dimension ( this ) . entries . iterator ( ) ;
rank: 231
score: 99.27036354758523
patch: Iterator iter = in . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 231
score: 99.26940104166667
patch: Iterator iter = res . entries . iter ( ) ; = null ;
rank: 231
score: 99.2458267211914
patch: Iterator * ] res . entries = res . entries . iterator ( ) ;
rank: 231
score: 99.23848783052884
patch: Iterator iter ; Iterator iter = res . iterator ( ) ;
rank: 232
score: 99.335205078125
patch: int v [ ] = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 232
score: 99.32094116210938
patch: int iter . iterator ( ) . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 232
score: 99.27693684895833
patch: Iterator iter = res . entries . iterator ( ) ; res . advance ( ) ;
rank: 232
score: 99.27173529730902
patch: Iterator iter = res . get CaMeL Dimension ( ) . v . iterator ( ) ;
rank: 232
score: 99.26955247961956
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) )
rank: 232
score: 99.26922607421875
patch: Iterator iter = res . entries . map . iterator ( ) ;
rank: 232
score: 99.25275621916118
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = list . iterator ( ) ;
rank: 232
score: 99.2453972311581
patch: Iterator iter = res . entries ( - - 1 ) . iterator ( ) ;
rank: 232
score: 99.23814697265625
patch: if ( res != null ) res . ) res . entries = res . entries . entries ;
rank: 233
score: 99.33481852213542
patch: Iterator iter = res . entries . length : res . entries . iterator ( ) ;
rank: 233
score: 99.28160807291667
patch: Iterator < double > iter = res . entries . iterator ( ) ;
rank: 233
score: 99.27616664341518
patch: for ( Iterator iter = v . entries . iterator ( ) ;
rank: 233
score: 99.26851160386029
patch: Iterator iter = null ; Iterator iter = res . entries . iterator ( ) ;
rank: 233
score: 99.25206938244048
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) . iterator ( ) ;
rank: 233
score: 99.24503326416016
patch: res . set CaMeL Name ( res . get CaMeL Name ( ) ) ;
rank: 234
score: 99.32067108154297
patch: final Iterator < int > iter = res . entries . iterator ( ) ;
rank: 234
score: 99.27149200439453
patch: Iterator iter < Long > iter = res . entries . iterator ( ) ;
rank: 234
score: 99.26847076416016
patch: Object [ ] entries = res . entries . to CaMeL Array ( ) ;
rank: 234
score: 99.23802490234375
patch: Iterator iter = v . iterator ( ) ; if ( iter . has CaMeL Next ( ) )
rank: 235
score: 99.33397565569196
patch: Iterator iter = get CaMeL Dimension ( ) . iterator ( ) ;
rank: 235
score: 99.32037353515625
patch: final Iterator < Iterator > iter = res . entries ( ) . iterator ( ) ;
rank: 235
score: 99.2665546123798
patch: Iterator < ? > iter = res . iterator ( ) ;
rank: 235
score: 99.25192260742188
patch: Iterator iter . has CaMeL Next ( ) ; ) {
rank: 236
score: 99.32001604352679
patch: Iterator iter = out . entries ( ) . iterator ( ) ;
rank: 236
score: 99.27967071533203
patch: Iterator iter = res . get CaMeL Dimension ( ) . remove ( ) ;
rank: 236
score: 99.2681376139323
patch: Iterator iter = res . list . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 236
score: 99.266259765625
patch: Iterator iter = res . entries ( ) . iterator ( ) ; Iterator
rank: 236
score: 99.25133696056548
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = list . entries . iterator ( ) ;
rank: 236
score: 99.24355899586396
patch: res . value = res . entries . iterator ( ) . iterator ( ) ;
rank: 236
score: 99.23656116832386
patch: Iterator iter = res . entries ( ) ; ;
rank: 237
score: 99.31981608072917
patch: Iterator iter = res . get ( entries . iterator ( ) ) ;
rank: 237
score: 99.27893880208333
patch: Iterator < float > iter = res . entries . iterator ( ) ;
rank: 237
score: 99.26997884114583
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL
rank: 237
score: 99.26725463867187
patch: Iterator iter = res . iter ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 237
score: 99.2427978515625
patch: Iterator end = res . entries ( ) . iterator ( ) ;
rank: 238
score: 99.27857208251953
patch: Iterator iter = res . get CaMeL Dimension ( ) . clone ( ) ;
rank: 238
score: 99.26700492527173
patch: Iterator iter = res . iterator ( ) ; while ( iter . ; iter . has CaMeL Next ( ) )
rank: 238
score: 99.2425765991211
patch: Iterator iter = res . get CaMeL Properties ( ) . iter ( ) ;
rank: 238
score: 99.23568725585938
patch: if ( v . entries . iterator ( ) . has CaMeL Next ( ) ) return res ;
rank: 239
score: 99.33079769736842
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . set CaMeL Entry ( iter . key ) ;
rank: 239
score: 99.27363804408482
patch: Iterator iter = res . entries . iterator ( ) ( ) ;
rank: 239
score: 99.26959228515625
patch: Iterator iter = res . remove ( ) . entries . iterator ( ) ;
rank: 239
score: 99.26487821691177
patch: Iterator iter = new Object > ( res . entries . iterator ( ) ) ;
rank: 239
score: 99.24238137637867
patch: Iterator < ] >> iter = res . entries ( ) . iterator ( ) ;
rank: 239
score: 99.23554229736328
patch: res . set CaMeL Value ( res . get CaMeL Value ( ) ) ;
rank: 240
score: 99.27818298339844
patch: Iterator iter = res . get CaMeL Dimension ( ) . copy ( ) ;
rank: 240
score: 99.26466279871323
patch: Iterator iter = res . get ( res . get CaMeL Type ( ) ) ;
rank: 240
score: 99.25081734035327
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . list . entries . iterator ( ) ;
rank: 240
score: 99.24217224121094
patch: res . iterator ( ) ; Iterator iter = res . entries ( ) ;
rank: 240
score: 99.23530883789063
patch: Iterator iter = v . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 241
score: 99.3303581686581
patch: Iterator iter = res [ 0 ] . entries . entries . iterator ( ) ;
rank: 241
score: 99.27320692274306
patch: for ( Iterator iter = res . entries . entries ( ) . iterator ( ) ;
rank: 241
score: 99.26559012276786
patch: Iterator iterator = res . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 241
score: 99.249267578125
patch: Iterator iter = ( Open CaMeL Map CaMeL Real CaMeL Vector ) this . entries . iterator ( ) ;
rank: 242
score: 99.27731323242188
patch: while ( res . has CaMeL Next ( ) ) {
rank: 242
score: 99.27320692274306
patch: Iterator iter = res . abs ( ) . entries ( ) . iterator ( ) ;
rank: 242
score: 99.2655258178711
patch: Iterator iter = res . get . list ( ) . iterator ( ) ;
rank: 242
score: 99.23445638020833
patch: Iterator iter = res . entries ( entries . iterator ( ) ) ;
rank: 243
score: 99.32872178819444
patch: Iterator iter = res . entries == null : res . entries . iterator ( ) ;
rank: 243
score: 99.27702985491071
patch: Iterator iter = ( iter . has CaMeL Next ( ) ) ;
rank: 243
score: 99.26549183238636
patch: for ( Iterator iter = res . iterator ( ) ; iter . has CaMeL Next ( ) ; ) {
rank: 243
score: 99.26412760416666
patch: Iterator iter = res . get ( false ) . iterator ( ) ;
rank: 243
score: 99.23439427425987
patch: if ( res != null ) res . res = res . entries . clone ( ) ;
rank: 244
score: 99.32865636488971
patch: Iterator iter = res . entries [ $NUMBER$ ] . entries . iterator ( ) ;
rank: 244
score: 99.31644694010417
patch: Iterator < Iterator > iterator = res . entries . iterator ( ) ;
rank: 244
score: 99.26725769042969
patch: Iterator entries = res . get CaMeL Dimension ( ) . entries ( ) ;
rank: 244
score: 99.26542331861413
patch: Iterator iter = res . entries . iterator ( ) ; while ( Iterator iter . has CaMeL Next ( ) )
rank: 244
score: 99.26396484375
patch: Iterator iter = res . load ( res . entries ( ) ) ;
rank: 244
score: 99.24839274088542
patch: Iterator iter . advance ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 245
score: 99.26526409646739
patch: Iterator iter = res . list . iterator ( ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 245
score: 99.26396484375
patch: Iterator iter iter = res . entries ( ) . iterator ( ) ;
rank: 245
score: 99.24837820870536
patch: Iterator iter = res . list . entries . iterator ( ) ;
rank: 245
score: 99.23399000901442
patch: Iterator < T > iter = res . iterator ( ) ;
rank: 246
score: 99.32769454152961
patch: final Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 246
score: 99.31603285845588
patch: final Iterator iter = res . entries = res . entries . iterator ( ) ;
rank: 246
score: 99.27683919270834
patch: Iterator < Character > iter = res . entries . iterator ( ) ;
rank: 246
score: 99.27030675551471
patch: Iterator iter = res . entries ( ) . entries ( ) . ( ) ;
rank: 246
score: 99.26641167534723
patch: Iterator iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this , this ) ;
rank: 246
score: 99.264892578125
patch: Iterator iter = res . entries . iterator ( ) ; )
rank: 246
score: 99.24819607204861
patch: for ( final Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) {
rank: 246
score: 99.24105834960938
patch: Iterator entries = res . entries ( ) ;
rank: 246
score: 99.23298950195313
patch: Iterator iter = res . entries ( ) ; while ( res . has CaMeL Next ( ) )
rank: 247
score: 99.32713971819196
patch: Iterator iter = v . entries . iterator ( ) ; for (
rank: 247
score: 99.31589642693015
patch: final int size = res . entries . iterator ( ) . size ( ) ;
rank: 247
score: 99.26460404829545
patch: Iterator iter = get . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 247
score: 99.2474949048913
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries . entries ( ) ;
rank: 247
score: 99.24083709716797
patch: / * ] res . entries = res . entries . iterator ( ) ;
rank: 248
score: 99.32705849095395
patch: Iterator iter = res . get CaMeL Dimension ( v . get CaMeL Dimension ( ) ) ;
rank: 248
score: 99.2765884399414
patch: for ( Iterator iter = res . has CaMeL Next ( ) ; ) {
rank: 248
score: 99.2640713778409
patch: Iterator v = res . entries . iterator ( ) ; while ( v . has CaMeL Next ( ) )
rank: 248
score: 99.26217886117789
patch: iter = res . entries . entries . iterator ( ) ;
rank: 248
score: 99.24699321546052
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : this . res . entries ) {
rank: 248
score: 99.23202514648438
patch: Iterator iter = res . iterator ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 249
score: 99.32689144736842
patch: Iterator iter = ( ( Real CaMeL Vector ) res ) . entries . iterator ( ) ;
rank: 249
score: 99.31546020507812
patch: Iterator < String > iter = res . entries . iterator ( ) ; }
rank: 249
score: 99.27463666130515
patch: Iterator iter = res . get CaMeL Entry ( 0 ) . size ( ) ;
rank: 249
score: 99.26399500229779
patch: if ( res == null ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 249
score: 99.26140998391544
patch: Iterator iter = res . entries . put ( res . iterator ( ) ) ;
rank: 249
score: 99.24696260340073
patch: for ( ) { iter = res . entries . entries . iterator ( ) ;
rank: 249
score: 99.23194037543402
patch: Iterator iter ; while ( iter . has CaMeL Next ( ) ) { res . )
rank: 250
score: 99.31486960018383
patch: Iterator < Throwable > iter = res . entries ( ) . iterator ( ) ;
rank: 250
score: 99.27360983455883
patch: Iterator < Real CaMeL Vector > iter = iter . has CaMeL Next ( ) ;
rank: 250
score: 99.26380504261364
patch: Iterator iter = res . entries . iter ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 250
score: 99.24694061279297
patch: Iterator iter += res . entries . iterator ( ) . iterator ( ) ;
rank: 251
score: 99.32645670572917
patch: Iterator iter = res . get CaMeL Dimension ( ) != null . iterator ( ) ;
rank: 251
score: 99.31483811598558
patch: Iterator < String > entries = res . entries ( ) ;
rank: 251
score: 99.26552327473958
patch: Iterator iter = get CaMeL Dimension ( ) . entries ( ) . entries ( ) ;
rank: 251
score: 99.26376342773438
patch: Disposer . Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 251
score: 99.26128743489583
patch: Iterator iter = res . get ( 0 ) . iter ( ) ;
rank: 251
score: 99.24684544613487
patch: Iterator iter = res . entries . to CaMeL Array ( 0 ) . iterator ( ) ;
rank: 251
score: 99.23868815104167
patch: Iterator < Number > iter = res . entries . iterator ( ) ;
rank: 251
score: 99.23142603824013
patch: Iterator iter = res . entries ( ) ; Iterator iter = res . iterator ( ) ;
rank: 252
score: 99.32542419433594
patch: Iterator iter = res != null : v . entries . iterator ( ) ;
rank: 252
score: 99.3145687705592
patch: final Iterator iter = res . entries ( ) . entries ( ) . iterator ( ) ;
rank: 252
score: 99.27219645182292
patch: Iterator iter = res . get CaMeL Dimension ( ) .
rank: 252
score: 99.2636489868164
patch: Iterator iter = v . clone ( ) . entries . iterator ( ) ;
rank: 252
score: 99.2466351052989
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( null ) ;
rank: 252
score: 99.23863807091347
patch: Iterator < ] >> iter = res . entries ( ) ;
rank: 252
score: 99.23130396792763
patch: synchronized ( res . entries ) { Iterator iter = res . entries . iterator ( ) ;
rank: 253
score: 99.31427965666118
patch: boolean < ? > iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 253
score: 99.27202606201172
patch: Iterator iter = res . get CaMeL Dimension ( ) . read ( ) ;
rank: 253
score: 99.26785098805146
patch: Iterator iter = res . entries ( ) . ( ) . size ( ) ;
rank: 253
score: 99.26371002197266
patch: Iterator iter = res . length . entries ( ) . iterator ( ) ;
rank: 253
score: 99.2465591430664
patch: Iterator iter . has CaMeL Next ( ) ; iter . advance ( ) ;
rank: 253
score: 99.23808288574219
patch: Iterator * ] iter = res . entries ( ) . iterator ( ) ;
rank: 253
score: 99.23037923177084
patch: Iterator iter = res . split ( $STRING$ ) . iterator ( ) ;
rank: 254
score: 99.32497989430146
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = ebe CaMeL Multiply ( v ) ;
rank: 254
score: 99.27202292049633
patch: Iterator iter = res . get CaMeL Dimension ( ) . . entries ( ) ;
rank: 254
score: 99.26067038143383
patch: Iterator iter = res . entries . iterator ( ) ; . iterator = 0 ;
rank: 254
score: 99.24628295898438
patch: ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) . set CaMeL Entry ( ) ;
rank: 254
score: 99.23808288574219
patch: Iterator iter = res . entries . iterator = res . iterator ( ) ;
rank: 254
score: 99.2303466796875
patch: res . entries = new Iterator [ v . entries . size ( ) ] ;
rank: 255
score: 99.26066371372768
patch: Iterator iter = res . entries . name . iterator ( ) ;
rank: 255
score: 99.23679896763393
patch: Iterator iter = res . entries ( ) . close ( ) ;
rank: 255
score: 99.2302001953125
patch: Iterator iter = res . entries ( ) ; if ( iter . has CaMeL Next ( ) )
rank: 256
score: 99.32450358072917
patch: Iterator iter = res . entries . get CaMeL Dimension ( ) . entries ( ) ;
rank: 256
score: 99.26268421519886
patch: Iterator iter = res . list . iter ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 256
score: 99.24575407608695
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries . size ( ) ;
rank: 256
score: 99.23655700683594
patch: Iterator iter = new String [ res . entries . iterator ( ) ] ;
rank: 257
score: 99.32418823242188
patch: Iterator iter = v != null : res . entries . iterator ( ) ;
rank: 257
score: 99.26917317708333
patch: Iterator < Double > iter = res . entries . iterator ( ) ;
rank: 257
score: 99.2628885904948
patch: Iterator iter = res . iter . iterator ( ) ;
rank: 257
score: 99.26263427734375
patch: Iterator iter = v . entries ; while ( iter . has CaMeL Next ( ) )
rank: 257
score: 99.2600830078125
patch: Iterator iter = res . entries . = entries . iterator ( ) ;
rank: 257
score: 99.24526145241477
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries . entries ( ) . iterator ( ) ;
rank: 257
score: 99.23648071289062
patch: Iterator iter = res . to CaMeL Array ( ) . iter ( ) ;
rank: 257
score: 99.23001861572266
patch: Object [ ] res = res . entries . to CaMeL Array ( ) ;
rank: 258
score: 99.31131744384766
patch: Iterator iter = res . get . entries ( ) . entries ( ) ;
rank: 258
score: 99.26859777113971
patch: iter . has CaMeL Next ( ) ; iter . has CaMeL Next ( ) ;
rank: 258
score: 99.26236979166667
patch: Iterator iter = res . trim ( ) . entries ( ) . entries ( ) ;
rank: 258
score: 99.25977501502403
patch: final Iterator iter = res . entries . iter ( ) ;
rank: 258
score: 99.24468122209821
patch: Iterator iter += res . entries . entries . iterator ( ) ;
rank: 258
score: 99.2359619140625
patch: Iterator iter = res . to CaMeL String ( ) . entries ( ) ;
rank: 258
score: 99.22856903076172
patch: this . res = res ; Iterator iter = res . iterator ( ) ;
rank: 259
score: 99.31125217013889
patch: Iterator iter = res . get ( ) . entries ( ) . entries ( ) ;
rank: 259
score: 99.2621837797619
patch: Iterator iter = res . list . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 259
score: 99.26175362723214
patch: Iterator iter = res . size ( ) . iterator ( ) ;
rank: 259
score: 99.2445652173913
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = v . entries . entries . iterator ( ) ;
rank: 259
score: 99.22847254136029
patch: Iterator iter ; Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 260
score: 99.32398332868304
patch: Iterator iter = res != null : res . iterator ( ) ;
rank: 260
score: 99.31062586167279
patch: Iterator < res > iter = res . entries ( ) . iterator ( ) ;
rank: 260
score: 99.26701354980469
patch: for ( Iterator iter = res . entries ( ) . size ( ) ;
rank: 260
score: 99.2620849609375
patch: Iterator iter = res . entries . iterator ( ) ; if ( iter . has CaMeL Next ( ) )
rank: 260
score: 99.26107025146484
patch: Iterator iter = v . get CaMeL Dimension ( ) . iter ( ) ;
rank: 260
score: 99.25870513916016
patch: Iterator iter = res . is CaMeL Array ( ) . iterator ( ) ;
rank: 260
score: 99.24410306490384
patch: Iterator < Object > iter = res . iterator ( ) ;
rank: 260
score: 99.235791015625
patch: Iterator iter = res . entries = ( ) . iterator ( ) ;
rank: 260
score: 99.22811889648438
patch: Iterator res = res . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 261
score: 99.26695251464844
patch: Iterator iter = res . entries ( ) . entries ( ) . length ;
rank: 261
score: 99.2619269875919
patch: Iterator iter = res . get CaMeL Bytes ( 0 ) . iterator ( ) ;
rank: 261
score: 99.24372944078948
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iter ( ) ;
rank: 261
score: 99.23566750919117
patch: final int iterator . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 261
score: 99.22809159128289
patch: Iterator iter = v . entries ( ) ; while ( . has CaMeL Next ( ) )
rank: 262
score: 99.32294379340277
patch: Iterator iter = res != null : res . entries . entries . iterator ( ) ;
rank: 262
score: 99.26620047433036
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries .
rank: 262
score: 99.26171875
patch: Iterator iter = res . get ( res . get CaMeL Dimension ( ) ) . entries ( ) ;
rank: 262
score: 99.25779724121094
patch: Iterator iter = res . entries . iterator ( ) ; iterator = true ;
rank: 262
score: 99.24358452690973
patch: Iterator iter . has CaMeL Next ( ) ; ) ; iter . advance ( ) ;
rank: 262
score: 99.23561401367188
patch: Iterator iter = entries . entries ( ) ;
rank: 262
score: 99.22801106770834
patch: Iterator iter = res . entries ( ) . iterator ( res ) ;
rank: 263
score: 99.30907485064338
patch: Iterator < Iterator > iter = res . entries ( ) . iter ( ) ;
rank: 263
score: 99.26616354549633
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( this ) ;
rank: 263
score: 99.26102941176471
patch: Iterator iter = System . get CaMeL Property ( $STRING$ ) . iterator ( ) ;
rank: 263
score: 99.2576904296875
patch: Iterator iter = res . entries . put ( ) . iterator ( ) ;
rank: 263
score: 99.22705078125
patch: / * Iterator iter = res . iterator . iterator ( ) ;
rank: 264
score: 99.32200792100694
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . entries . entries ( ) ;
rank: 264
score: 99.3087387084961
patch: Iterator iter = res . entries ( ) = res . iterator ( ) ;
rank: 264
score: 99.26606750488281
patch: int value = v . get CaMeL Entry ( ) . size ( ) ;
rank: 264
score: 99.26002502441406
patch: Iterator iter = res . size ( ) : res . iterator ( ) ;
rank: 264
score: 99.25763346354167
patch: Iterator iter = res . entries . iterator ( ) ; iterator / /
rank: 264
score: 99.24313151041666
patch: Iterator < Real CaMeL Vector > iter = v . iterator ( ) ;
rank: 264
score: 99.22584935238487
patch: if ( res . res != null ) res . res . res . res = res ;
rank: 265
score: 99.32179090711806
patch: Iterator iter = res == null : res . entries . entries . iterator ( ) ;
rank: 265
score: 99.26012465533088
patch: Iterator iter = res . get CaMeL Bytes ( $STRING$ ) . iterator ( ) ;
rank: 265
score: 99.2571029663086
patch: Iterator iter = res . entries . iterator ( ) ; iterator = ) ;
rank: 265
score: 99.24289422286184
patch: Iterator < String > iter = res . entries . entries . entries . iterator ( ) ;
rank: 265
score: 99.23448181152344
patch: Iterator iter = res . get CaMeL Entries ( ) . entries ( ) ;
rank: 265
score: 99.224853515625
patch: Iterator < ) : res . entries ( ) . iterator ( ) ;
rank: 266
score: 99.32143683182566
patch: Iterator < Real CaMeL Vector > iter = v . entries ( ) . iterator ( ) ;
rank: 266
score: 99.2657001201923
patch: new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 266
score: 99.25994551809211
patch: Iterator iter = res . iterator ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 266
score: 99.25958251953125
patch: Iterator iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this , iter ) ;
rank: 266
score: 99.2566276999081
patch: Iterator iter = res ; Iterator iter = res . entries . iterator ( ) ;
rank: 266
score: 99.24253778872283
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > v = res . entries . entries . iterator ( ) ;
rank: 266
score: 99.2335205078125
patch: Iterator iter = res . entries = entries . iterator ( ) ;
rank: 267
score: 99.32137722439236
patch: res . set CaMeL Entry ( $STRING$ , v . get CaMeL Entry ( ) ) ;
rank: 267
score: 99.26443301930146
patch: Iterator < Real CaMeL Vector > iter = res . has CaMeL Next ( ) ;
rank: 267
score: 99.259521484375
patch: synchronized ( this ) { iter = res . entries . iterator ( ) ; }
rank: 267
score: 99.25645228794643
patch: Iterator iter = res . entries . iter . entries ( ) ;
rank: 267
score: 99.23234049479167
patch: Iterator < T > iterator = res . entries . iterator ( ) ;
rank: 267
score: 99.22334289550781
patch: if ( v != null ) res . entries . add ( res ) ;
rank: 268
score: 99.32123879825367
patch: Iterator iter = ! res . entries . entries ( ) . iterator ( ) ;
rank: 268
score: 99.30740559895834
patch: final Iterator iter = res . entries = res . iterator ( ) ;
rank: 268
score: 99.26527235243056
patch: Iterator iter = res . entries . next ( ) . entries . size ( ) ;
rank: 268
score: 99.25630405970982
patch: Iterator iter = res . entries . iterator ( ) ; iterator .
rank: 268
score: 99.24122155230978
patch: Iterator iter = ( Open CaMeL Map CaMeL Real CaMeL Vector ) this . entries . entries . iterator ( ) ;
rank: 268
score: 99.23220389229911
patch: Iterator [ ] res . entries = res . entries ( ) ;
rank: 268
score: 99.222900390625
patch: Iterator iter = res . entries ( ) [ res . size ( ) ] ;
rank: 269
score: 99.30714175575658
patch: Iterator < String > iter = res . get CaMeL Value ( ) . iterator ( ) ;
rank: 269
score: 99.25929768880208
patch: Iterator iter = iter . next ( ) . entries ( ) . entries ( ) ;
rank: 269
score: 99.25919835707721
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . )
rank: 269
score: 99.25628662109375
patch: Iterator iter = res . get CaMeL Column ( ) . iterator ( ) ;
rank: 269
score: 99.240869140625
patch: list = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 269
score: 99.22286283052884
patch: Iterator iter ; Iterator iter = v . iterator ( ) ;
rank: 270
score: 99.31894259982639
patch: Iterator iter = v . entries . entries ( ) . entries . iterator ( ) ;
rank: 270
score: 99.262939453125
patch: iter . has CaMeL Next ( ) ;
rank: 270
score: 99.25886674360795
patch: Iterator iter = res . value . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 270
score: 99.25576782226562
patch: Iterator iter = res . entries . Short ( ) . iterator ( ) ;
rank: 270
score: 99.23200988769531
patch: Iterator iter = res . entries ( ) . value . iterator ( ) ;
rank: 271
score: 99.31884765625
patch: Open CaMeL Map CaMeL Real CaMeL Vector ( res . get CaMeL Dimension ( ) ) ;
rank: 271
score: 99.30635892427884
patch: Iterator < Iterator > iter = res . iterator ( ) ;
rank: 271
score: 99.26491135817308
patch: Iterator iter = res . entries . iterator iterator ( ) ;
rank: 271
score: 99.26275634765625
patch: Iterator iter = iter . has CaMeL Next ( ) ; ) {
rank: 271
score: 99.25877743675595
patch: Iterator iter = res . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 271
score: 99.2557014016544
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = 1 ;
rank: 271
score: 99.2405517578125
patch: for ( ) { iter = res . entries . iterator ( ) ;
rank: 271
score: 99.23177083333333
patch: Iterator < int >> iter = res . entries . iterator ( ) ;
rank: 271
score: 99.22234497070312
patch: Iterator list = res . iterator ( ) ; while ( list . has CaMeL Next ( ) )
rank: 272
score: 99.25563151041666
patch: Iterator iter = Math . iterator ( res . iterator ( ) ) ;
rank: 272
score: 99.23942057291667
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = v . entries . entries ( ) ;
rank: 272
score: 99.23115808823529
patch: synchronized ( res ) { Iterator iter = res . value . iterator ( ) ;
rank: 272
score: 99.22230931332237
patch: Iterator iter = v . iterator ( ) ; Iterator iter = v . iterator ( ) ;
rank: 273
score: 99.30565643310547
patch: Iterator iter = res . entries = res . list . iterator ( ) ;
rank: 273
score: 99.26401774088542
patch: Iterator iter = res . entries . entries . entries . entries . size ( ) ;
rank: 273
score: 99.2623291015625
patch: Iterator < Real CaMeL Vector > iter = res . entries . length ;
rank: 273
score: 99.25856526692708
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) continue ;
rank: 273
score: 99.25685029871323
patch: Iterator iter = res . index CaMeL Of ( int . size ( ) ) ;
rank: 273
score: 99.25556945800781
patch: Iterator iter = res . entries . key ( ) . iterator ( ) ;
rank: 273
score: 99.23104095458984
patch: int iter = res . get CaMeL Name ( ) . size ( ) ;
rank: 273
score: 99.21957194010416
patch: Iterator < Integer > iter = res . iterator . iterator ( ) ;
rank: 274
score: 99.31882052951389
patch: Real CaMeL Vector v = new Open CaMeL Map CaMeL Real CaMeL Vector ( v ) ;
rank: 274
score: 99.26226806640625
patch: Iterator iter = res . iter . has CaMeL Next ( ) ; ) {
rank: 274
score: 99.25723266601562
patch: Iterator iter = res . entries . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 274
score: 99.239013671875
patch: Iterator < Real CaMeL Vector > iter = res . get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 274
score: 99.23086751302084
patch: this . res . entries = res . entries . iterator ( ) ;
rank: 274
score: 99.219189453125
patch: if ( v != null ) res . ) res . res . res . res . ) ;
rank: 275
score: 99.31867532169117
patch: Iterator iter = ( ( Real CaMeL Vector ) res ) . iterator ( ) ;
rank: 275
score: 99.30557250976562
patch: Iterator iter = res . get CaMeL Classes ( ) . iter ( ) ;
rank: 275
score: 99.26190185546875
patch: for ( Iterator iter = v . entries ( ) . iterator ( ) ;
rank: 275
score: 99.25502115885416
patch: Iterator iter = res . entries . iterator ( ) ; iterator * /
rank: 275
score: 99.23070179332386
patch: res . entries = res . entries ( ) ;
rank: 275
score: 99.21903686523437
patch: Iterator iter = res . entries . iterator ( ) ; while . has CaMeL Next ( ) )
rank: 276
score: 99.31842362253289
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this + ) ;
rank: 276
score: 99.25686645507812
patch: Iterator iter = v . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 276
score: 99.2545654296875
patch: Iterator iter = res . entries . = res . entries ( ) ;
rank: 276
score: 99.23756045386905
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter . has CaMeL Next ( ) ; ) {
rank: 276
score: 99.2305908203125
patch: Iterator < E > iterator = res . entries . iterator ( ) ;
rank: 276
score: 99.2183368389423
patch: Iterator < res > iter = res . iterator ( ) ;
rank: 277
score: 99.30401290090461
patch: Iterator < ? > iter = res . get . entries ( ) . iterator ( ) ;
rank: 277
score: 99.25684703480114
patch: Iterator iter = res . map . size ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 277
score: 99.25568983289931
patch: Iterator iter = this . Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( ) ;
rank: 277
score: 99.23053385416667
patch: Iterator iter = res . entries ( ) . remove ( null ) ;
rank: 277
score: 99.21820427389706
patch: synchronized ( res ) { Iterator iter = res . iterator . iterator ( ) ;
rank: 278
score: 99.31692504882812
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector . length ;
rank: 278
score: 99.30392456054688
patch: Iterator iter = res . get CaMeL V ( ) . iterator ( ) ;
rank: 278
score: 99.26127624511719
patch: Iterator iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 278
score: 99.25566864013672
patch: Iterator iter = this . get CaMeL Dimension ( ) . entries ( ) ;
rank: 278
score: 99.254150390625
patch: entries . Iterator iter = res . entries . iterator ( ) ;
rank: 278
score: 99.23044259207589
patch: for ( ) { Iterator iter = res . entries ( ) ;
rank: 278
score: 99.21790161132813
patch: Iterator iter = data . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 279
score: 99.31681100945724
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( ) . iterator ( )
rank: 279
score: 99.2611796061198
patch: Iterator iter = this . entries . size ( ) ;
rank: 279
score: 99.25603693181819
patch: Iterator iter = res . list . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 279
score: 99.25556182861328
patch: Iterator iter = get CaMeL Entry ( ) . entries . iterator ( ) ;
rank: 279
score: 99.25405447823661
patch: Iterator iter = res . parse ( ) . iterator ( ) ;
rank: 279
score: 99.23654610770089
patch: Iterator iter : res . entries ( ) . iterator ( ) ;
rank: 279
score: 99.22938121448864
patch: entries . iterator ( ) . iterator ( ) ;
rank: 279
score: 99.21767290900735
patch: if ( res == null ) throw new Null CaMeL Pointer CaMeL Exception ( ) ;
rank: 280
score: 99.316796875
patch: iter = res . get CaMeL Dimension ( ) . entries ( ) ;
rank: 280
score: 99.303271484375
patch: if ( res . entries . iterator ( ) . has CaMeL Next ( ) ) throw null ;
rank: 280
score: 99.26078796386719
patch: Iterator iter = res . read ( ) . entries . iterator ( ) ;
rank: 280
score: 99.25556640625
patch: Iterator iter = res . get ( res ) . iterator ( ) ;
rank: 280
score: 99.25386555989583
patch: Iterator iter = res . get ( $STRING$ ) . iterator ( ) ;
rank: 280
score: 99.22935485839844
patch: entries . put ( res . get CaMeL Name ( ) , res ) ;
rank: 280
score: 99.21759033203125
patch: res . entries = res . entries ;
rank: 281
score: 99.31614774816177
patch: Real CaMeL Vector v = new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 281
score: 99.30279862253289
patch: Iterator < int > iter = res . get . entries ( ) . iterator ( ) ;
rank: 281
score: 99.26059139476104
patch: Iterator iter = res . get CaMeL Dimension ( ) . iterator ( 0 ) ;
rank: 281
score: 99.25975206163194
patch: while ( res . has CaMeL Next ( ) ) { v . advance ( ) ;
rank: 281
score: 99.25541856553819
patch: Iterator iter = res . get . get CaMeL Entries ( ) . iterator ( ) ;
rank: 281
score: 99.25384114583333
patch: Iterator iter = ( Iterator ) res . entries . entries ( ) ;
rank: 281
score: 99.23511352539063
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter . has CaMeL Next ( ) ; )
rank: 281
score: 99.22930908203125
patch: Iterator < ? ] : res . entries ( ) . iterator ( ) ;
rank: 282
score: 99.31591796875
patch: Iterator iter = res . entries ( ) : res . entries . iterator ( ) ;
rank: 282
score: 99.30243791852679
patch: Iterator res = res . entries ( ) . iterator ( ) ;
rank: 282
score: 99.26044060202206
patch: Iterator < Real CaMeL Vector > res = res . entries . size ( ) ;
rank: 282
score: 99.25929170496323
patch: Iterator iter = res . entries ebe CaMeL Multiply ( ) . iterator ( ) ;
rank: 282
score: 99.2554043856534
patch: Iterator iter = res . for . iterator ( ) ; iter . has CaMeL Next ( ) ; ) {
rank: 282
score: 99.25492858886719
patch: Iterator iter = res . size ( ) : res . size ( ) ;
rank: 282
score: 99.25349426269531
patch: Iterator iter = res . entries . split ( ) . iterator ( ) ;
rank: 282
score: 99.23486328125
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) v ) . entries . iterator ( ) ;
rank: 282
score: 99.22923583984375
patch: List iter = res . entries ( ) ;
rank: 282
score: 99.2168438251202
patch: if ( res != null && res . entries != null )
rank: 283
score: 99.25447162828948
patch: Iterator iter = res . entries [ res . size ( ) ] . iterator ( ) ;
rank: 283
score: 99.2522723858173
patch: Iterator iter = res . entries . iterator ( ) ; Iterator
rank: 283
score: 99.234716796875
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : v ) {
rank: 283
score: 99.228857421875
patch: Iterator < ] > iter = res . value . iterator ( ) ;
rank: 283
score: 99.21681123621323
patch: if ( v != null ) res . entries = res . entries . entries ;
rank: 284
score: 99.26021902901786
patch: Iterator iter = res . entries . size ( ) ; for (
rank: 284
score: 99.25430961277173
patch: for ( int iterator = res . entries . size ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 284
score: 99.23422580295139
patch: Iterator iter ? res . iterator ( ) . has CaMeL Next ( ) ; ) ;
rank: 285
score: 99.30210248161765
patch: Iterator < String > iter = res . get ( ) . iterator ( ) ;
rank: 285
score: 99.25440216064453
patch: Iterator iter < Class > iter = res . entries . iterator ( ) ;
rank: 285
score: 99.25394870923913
patch: Iterator iterator = res . list . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 285
score: 99.25197190504808
patch: Iterator iter . = res . entries . iterator ( ) ;
rank: 285
score: 99.21645682198661
patch: Iterator iter ; try { iter = res . iterator ( ) ;
rank: 286
score: 99.31538660386029
patch: Iterator iter = res . entries [ v . get CaMeL Dimension ( ) ] ;
rank: 286
score: 99.26012369791667
patch: Iterator < short > iter = res . entries . iterator ( ) ;
rank: 286
score: 99.25768229166667
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 286
score: 99.25412884880515
patch: Iterator iter = res . entries . iterator < Real CaMeL Vector > ( ) ;
rank: 286
score: 99.25382856889205
patch: System . arraycopy ( res . entries , 0 , res . entries , 0 , res . size ) ;
rank: 286
score: 99.23404091282895
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iterator = res . iterator ( ) ;
rank: 286
score: 99.22635904947917
patch: Iterator iter ; int iter = res . entries . iterator ( ) ;
rank: 286
score: 99.2156623391544
patch: Iterator iter = v . entries ( ) . iterator ( ) ; while ( )
rank: 287
score: 99.30130440848214
patch: Iterator iter = map . entries ( ) . iterator ( ) ;
rank: 287
score: 99.25691441127232
patch: Iterator iter = res . next ( ) . size ( ) ;
rank: 287
score: 99.25380010190217
patch: Iterator iter = res . get . entries ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 287
score: 99.25015963040866
patch: Iterator < Entry > iter = res . iterator ( ) ;
rank: 287
score: 99.2259033203125
patch: Iterator iter = res . entries ( 1 ) . next ( ) ;
rank: 288
score: 99.31464700137867
patch: Iterator iter = res . get CaMeL Dimension ( this ) . iterator ( ) ;
rank: 288
score: 99.25620524088542
patch: Iterator iter = res . entries . entries . entries . entries . entries ( ) ;
rank: 288
score: 99.25352260044643
patch: Iterator iter = res . entries [ res . entries . length - 1 ] . iterator ( ) ;
rank: 288
score: 99.25301688058036
patch: Iterator iter = res . entries . iterator ( ) * 1 ;
rank: 288
score: 99.23326351768092
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this . iterator ( ) ;
rank: 288
score: 99.22537434895834
patch: Iterator < T > iter = res . map . iterator ( ) ;
rank: 288
score: 99.21407645089286
patch: try { Iterator iter = res . iterator . iterator ( ) ;
rank: 289
score: 99.31426680715461
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ]
rank: 289
score: 99.30096076516544
patch: Iterator iter = res . get . entries ( ) . iterator ( ) ; else
rank: 289
score: 99.25595703125
patch: Iterator iter = res . entries . index CaMeL Of ( true ) ;
rank: 289
score: 99.25341796875
patch: Iterator iter = map . entries . iterator ( ) ;
rank: 289
score: 99.25237358940973
patch: Iterator iter = v . entries . iterator ( ) : res . size ( ) ;
rank: 289
score: 99.2487284342448
patch: / iter = res . entries . iterator ( ) ;
rank: 289
score: 99.23307999320652
patch: Iterator < Real CaMeL Vector < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 289
score: 99.22442626953125
patch: Iterator iter = list . entries ( ) ;
rank: 289
score: 99.2140362079327
patch: res . entries = res . entries . size ( ) ;
rank: 290
score: 99.30084635416667
patch: final Iterator iter = res . get ( ) . iterator ( ) ;
rank: 290
score: 99.24821920955883
patch: Iterator iter = res . get . entries ( ) . iterator ( ) ; ;
rank: 290
score: 99.2243143717448
patch: Iterator iter = res . out . iterator ( ) ;
rank: 290
score: 99.21396355879934
patch: Iterator iter = v . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 291
score: 99.31363075657895
patch: Iterator iter = res . length ; while ( iter . has CaMeL Next ( ) ) {
rank: 291
score: 99.300537109375
patch: Iterator < int > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 291
score: 99.25868853400735
patch: Iterator iter = res . next ( ) . entries . iterator ( ) ; ;
rank: 291
score: 99.25232950846355
patch: Iterator iter = res . entries . iterator ( ) ; ; finally { iter . has CaMeL Next ( ) ; }
rank: 291
score: 99.25065104166667
patch: Iterator iter = v . entries . iterator ( ) : res . iterator ( ) ;
rank: 291
score: 99.24813079833984
patch: Iterator iter = new Iterator ( res . entries . iter ( ) ) ;
rank: 291
score: 99.2238037109375
patch: int < ] > entries = res . entries . iterator ( ) ;
rank: 292
score: 99.31305609809027
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector . iter ( ) ;
rank: 292
score: 99.30046844482422
patch: final final Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 292
score: 99.2550048828125
patch: else res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 292
score: 99.2521260579427
patch: Iterator iter = res . map . key . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 292
score: 99.25054059709821
patch: else { Iterator iter = res . entries . iterator ( ) ;
rank: 292
score: 99.24805501302083
patch: Iterator iter = res . entries . iterator ( ) ; iter else ;
rank: 292
score: 99.23274369673295
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector == null ;
rank: 292
score: 99.22337341308594
patch: Iterator iter = res . entries ( ) . replace CaMeL All ( ) ;
rank: 292
score: 99.21370697021484
patch: Iterator iter = res . entries ( ) . iterator ( ) + 1 ;
rank: 293
score: 99.30026245117188
patch: final Iterator < ) > iter = res . entries . iterator ( ) ;
rank: 293
score: 99.2578125
patch: Iterator < Real CaMeL Vector > iter = entries . size ( ) ;
rank: 293
score: 99.25493307674633
patch: Iterator iter = res . entries ( ) . index CaMeL Of ( 0 ) ;
rank: 293
score: 99.2519022623698
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . entries . has CaMeL Next ( ) )
rank: 293
score: 99.24727630615234
patch: Iterator iter = res . clone ( ) ; iter . iterator ( ) ;
rank: 293
score: 99.23196847098214
patch: Enumeration iter = res . entries . entries . iterator ( ) ;
rank: 293
score: 99.2123046875
patch: Iterator entries = res . iterator ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 294
score: 99.31223842075893
patch: Iterator iter = v . entries ( ) . iter ( ) ;
rank: 294
score: 99.29998458059211
patch: Iterator < String > iter = res . get CaMeL Classes ( ) . iterator ( ) ;
rank: 294
score: 99.25654153262867
patch: Iterator iter = res . get CaMeL Dimension ( iter ) . size ( ) ;
rank: 294
score: 99.25465223524306
patch: for ( Iterator iter = res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 294
score: 99.25133167613636
patch: Iterator iter = map . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 294
score: 99.25034586588542
patch: Iterator iter = res . entries . iterator ( ) : entries . entries ( ) ;
rank: 294
score: 99.24717712402344
patch: Iterator iter = entries . iterator ( ) ; iter . iterator ( ) ;
rank: 295
score: 99.31190400965073
patch: Iterator iter = ebe CaMeL Multiply ( this ) . entries . iterator ( ) ;
rank: 295
score: 99.29986213235294
patch: Iterator < boolean > iter = res . entries ( ) . iterator ( ) ;
rank: 295
score: 99.25614420572917
patch: Iterator iter = res . entries . iterator ( ) ; for ( else
rank: 295
score: 99.25096546519886
patch: Iterator iter = res . entries . Iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 295
score: 99.23121178668478
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = ebe CaMeL Multiply . entries . iterator ( ) ;
rank: 295
score: 99.22040264423077
patch: final int iter = res . entries ( ) . length ;
rank: 296
score: 99.31189727783203
patch: res . set CaMeL Entry ( iter . get CaMeL Entry ( ) ) ;
rank: 296
score: 99.29981231689453
patch: Iterator iter = res . get CaMeL Data ( ) . entries ( ) ;
rank: 296
score: 99.25430636935764
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries . next ( ) ;
rank: 296
score: 99.25058815696023
patch: Collection iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 296
score: 99.2494125366211
patch: Iterator iter < long > iter = res . entries . iterator ( ) ;
rank: 296
score: 99.22006405101104
patch: synchronized ( res ) { Iterator iterator = res . entries . iterator ( ) ;
rank: 296
score: 99.2109375
patch: Iterator iter = res . iterator ( ) ; this . res = res . iterator ( ) ;
rank: 297
score: 99.255810546875
patch: Iterator < Real CaMeL Vector = res . entries . iterator ( ) ;
rank: 297
score: 99.25405883789062
patch: Iterator iter = v . entries . entries ( ) . entries ( ) ;
rank: 297
score: 99.2483269186581
patch: Iterator iter = ( Real CaMeL Vector ) res . entries . iterator ( ) ;
rank: 297
score: 99.24673461914062
patch: Iterator iter = res . get CaMeL Entry ( ) . entries ( ) ;
rank: 297
score: 99.2310726768092
patch: Iterator < Open CaMeL Map CaMeL Entry > iter = v . entries . iterator ( ) ;
rank: 297
score: 99.2199478149414
patch: Iterator iter = res . entries ( - 1 ) . size ( ) ;
rank: 298
score: 99.31180148654514
patch: int iter = res . get CaMeL Dimension ( ) . get CaMeL Dimension ( ) ;
rank: 298
score: 99.29828350360577
patch: final int [ ] entries = res . entries ( ) ;
rank: 298
score: 99.25022194602273
patch: Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 298
score: 99.24647623697916
patch: Iterator iter = res . entries . iter ( ) ; iterator ++ ;
rank: 298
score: 99.23094985064338
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : this . res ) {
rank: 298
score: 99.2192138671875
patch: Iterator iter = res . entries ( ) . add ( res ) ;
rank: 298
score: 99.20975952148437
patch: if ( res . entries != null ) Iterator iter = res . entries . iterator ( ) ;
rank: 299
score: 99.29818905101104
patch: Iterator < synchronized > iter = res . entries ( ) . iterator ( ) ;
rank: 299
score: 99.25007430366848
patch: Iterator iter = Integer . parse CaMeL Int ( res . get CaMeL Dimension ( ) ) . entries ( ) ;
rank: 299
score: 99.23046875
patch: Iterator iter : res . entries . entries . iterator ( ) ;
rank: 299
score: 99.21918131510417
patch: Iterator iter = res . entries ( ) ; int iter = 0 ;
rank: 300
score: 99.31050109863281
patch: List iter = res . get CaMeL Dimension ( ) . entries ( ) ;
rank: 300
score: 99.24732123480902
patch: Iterator iter = res . entries . iterator ( ) : res . iter ( ) ;
rank: 300
score: 99.24577331542969
patch: Iterator iter = res . entries . iterator ( ) ; for ( ) {
rank: 300
score: 99.2300441576087
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) v . entries . iterator ( ) ) ;
rank: 300
score: 99.21895345052083
patch: Iterator < ] > iter = res . entries . size ( ) ;
rank: 300
score: 99.20928344726562
patch: Iterator entries = res . entries ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 301
score: 99.30973052978516
patch: Iterator iter = v == null : res . entries . iterator ( ) ;
rank: 301
score: 99.297314453125
patch: Iterator < String > entries = res . entries . iterator ( ) ;
rank: 301
score: 99.24950009300595
patch: Iterator iter = res . clone ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 301
score: 99.2472282858456
patch: Iterator iter = res . get CaMeL Entry ( $STRING$ ) . iterator ( ) ;
rank: 301
score: 99.24557931082589
patch: Iterator iter = res . next . entries . iterator ( ) ;
rank: 301
score: 99.22991388494319
patch: Iterator iter ? res . entries . entries . iterator ( ) . has CaMeL Next ( ) ; ) ;
rank: 301
score: 99.2188720703125
patch: Iterator iter = res . get CaMeL Property ( ) . entries ( ) ;
rank: 301
score: 99.20811462402344
patch: Iterator iter = res . entries ( ) . iterator ( ) ; null ;
rank: 302
score: 99.29698988970588
patch: Iterator iter = res . get . entries ( ) . . iterator ( ) ;
rank: 302
score: 99.25387573242188
patch: Iterator iter = res . get CaMeL Id ( ) . entries ( ) ;
rank: 302
score: 99.22970760569854
patch: Iterator iter ? res . iterator ( ) . has CaMeL Next ( ) ; )
rank: 302
score: 99.21871744791666
patch: Iterator < String > iter = res . value . iterator ( ) ;
rank: 302
score: 99.20761108398438
patch: Iterator map = res . iterator ( ) ; while ( map . has CaMeL Next ( ) )
rank: 303
score: 99.2966552734375
patch: Iterator < String > iter = res . entries . entries ( ) ;
rank: 303
score: 99.25066375732422
patch: Iterator iter = res . entries . trim ( ) . entries ( ) ;
rank: 303
score: 99.24893188476562
patch: res . entries = res . entries . iterator ( ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 303
score: 99.24504852294922
patch: Iterator iter = res . entries . iterator ( ) ; iterator : null ;
rank: 303
score: 99.22945731026786
patch: Iterator entries = res . entries . entries . iterator ( ) ;
rank: 303
score: 99.21854654947917
patch: List < String > iter = res . entries . iterator ( ) ;
rank: 303
score: 99.20643717447916
patch: Iterator iter = v . entries ( ) . iterator ( ) ) ;
rank: 304
score: 99.30952004825367
patch: Iterator iter = res . get CaMeL Dimension ( 1 ) . iterator ( ) ;
rank: 304
score: 99.29658777573529
patch: Iterator < Byte > iter = res . entries ( ) . iterator ( ) ;
rank: 304
score: 99.2523193359375
patch: Iterator iter = res . entries . [ 0 ] . iterator ( ) ;
rank: 304
score: 99.24880981445312
patch: Iterator iter = res . super . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 304
score: 99.24478585379464
patch: Iterator iter = res . entries . key . iterator ( ) ;
rank: 304
score: 99.22928873697917
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : v . entries ( ) )
rank: 304
score: 99.21852213541666
patch: / * ; Iterator iter = res . entries . iterator ( ) ;
rank: 304
score: 99.2052863625919
patch: if ( res != null && res . get CaMeL Dimension ( ) != null )
rank: 305
score: 99.3091812133789
patch: Iterator iter = res , iterator = res . entries . iterator ( ) ;
rank: 305
score: 99.29655187270221
patch: final boolean iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 305
score: 99.25220743815105
patch: Iterator iter = res . v . iterator ( ) ;
rank: 305
score: 99.25034466911765
patch: Iterator iter = res . entries ( ) . index CaMeL Of ( this ) ;
rank: 305
score: 99.24874745244566
patch: Iterator iter = res . split . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 305
score: 99.2447280883789
patch: Iterator iter = res . res . entries . entries . iterator ( ) ;
rank: 305
score: 99.24448067801339
patch: Iterator iter = res . entries . iterator ( ) ; iterator }
rank: 305
score: 99.22914341517857
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector == null ? null : res . iterator ( ) ;
rank: 305
score: 99.21841866629464
patch: Iterator iter = res . entries ( ) . start ( ) ;
rank: 305
score: 99.20492788461539
patch: Iterator iter = v . entries ( ) ; while ( )
rank: 306
score: 99.30907264122597
patch: Iterator iter = res [ 1 ] . iterator ( ) ;
rank: 306
score: 99.29654693603516
patch: Iterator iterator = res . get . entries ( ) . iterator ( ) ;
rank: 306
score: 99.24842418323864
patch: Iterator iter = v . has CaMeL Next ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 306
score: 99.21800944010417
patch: Iterator < ] > iter = res . entries . entries ( ) ;
rank: 306
score: 99.20452270507812
patch: if ( res . entries == null ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 307
score: 99.29643698299633
patch: Iterator < String > iter = entries . entries ( ) . iterator ( ) ;
rank: 307
score: 99.25117710658482
patch: Iterator [ ] res = res . entries . iterator ( ) ;
rank: 307
score: 99.24925321691177
patch: Iterator iter = res . substring ( 1 ) . entries . iterator ( ) ;
rank: 307
score: 99.24836168791118
patch: Iterator iter = Math . max ( 0 , res . entries . size ( ) ) ;
rank: 307
score: 99.24335793887867
patch: Iterator iter = res . add ( res . get CaMeL Dimension ( ) ) ;
rank: 307
score: 99.22866339432566
patch: return ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . get CaMeL Entry ( ) ;
rank: 307
score: 99.2178955078125
patch: Iterator < ? ] : res . entries . iterator ( ) ;
rank: 307
score: 99.2043392783717
patch: if ( res . entries . iterator ( ) . has CaMeL Next ( ) ) continue ;
rank: 308
score: 99.29578399658203
patch: Iterator iter = res . get CaMeL VT ( ) . iterator ( ) ;
rank: 308
score: 99.25094604492188
patch: while ( v . has CaMeL Next ( ) ) {
rank: 308
score: 99.24905056423611
patch: int value = v . get CaMeL Entry ( ) . get CaMeL Value ( ) ;
rank: 308
score: 99.2483418782552
patch: Iterator iter = res . map . map . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 308
score: 99.24331665039062
patch: Iterator iter = this . this . res . entries . iterator ( ) ;
rank: 308
score: 99.2286376953125
patch: while ( res . iterator ( ) . has CaMeL Next ( ) ) {
rank: 308
score: 99.21779378255208
patch: Iterator iter = res . value . size ( ) ;
rank: 308
score: 99.20417223478618
patch: res . entries [ res . size ( ) ] = res . entries [ 0 ] ;
rank: 309
score: 99.30759791324013
patch: Iterator iter = res . entries [ 0 ] . entries ( ) . iterator ( ) ;
rank: 309
score: 99.25092315673828
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( ) .
rank: 309
score: 99.24884033203125
patch: / * try { Iterator iter = res . entries . iterator ( ) ;
rank: 309
score: 99.2436882467831
patch: res . add ( res ) ; Iterator iter = res . entries ( ) ;
rank: 309
score: 99.22840465198864
patch: for ( iter = v . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 309
score: 99.21743774414062
patch: Iterator iter = res . entries ( - 1 ) . iter ( ) ;
rank: 309
score: 99.20410766601563
patch: if ( v != null ) res . Iterator iter = res . entries . iterator ( ) ;
rank: 310
score: 99.30750868055556
patch: Iterator iter = res . entries . entries ( ) == null . iterator ( ) ;
rank: 310
score: 99.25087603400735
patch: Iterator < Real CaMeL Vector > iter = res . entries . entries ( ) ;
rank: 310
score: 99.24805748980978
patch: Iterator iter = res . entries . iterator ( ) ) ; while ( iter . has CaMeL Next ( ) )
rank: 310
score: 99.22798488451087
patch: Iterator iter = res . entries . to CaMeL Array ( Open CaMeL Map CaMeL Real CaMeL Vector . length ) ;
rank: 310
score: 99.21717026654412
patch: Iterator < ] > iterator = res . entries ( ) . iterator ( ) ;
rank: 310
score: 99.2031021118164
patch: Iterator iter = res . entries ( ) . iterator ( ) ; * /
rank: 311
score: 99.2508056640625
patch: Iterator < byte > iter = res . entries . iterator ( ) ;
rank: 311
score: 99.24798583984375
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) ; )
rank: 311
score: 99.24795352711396
patch: Iterator iter = res . ( ) . entries ( ) . entries ( ) ;
rank: 311
score: 99.2432861328125
patch: Iterator iter = res . entries . remove ( ) ;
rank: 311
score: 99.21714680989584
patch: this . res . entries . iterator ( ) . iterator ( ) ;
rank: 311
score: 99.20307006835938
patch: Iterator iter = res . entries != null ? res . entries . iterator ( ) : null ;
rank: 312
score: 99.30703253495066
patch: synchronized ( res ) { res . set CaMeL Entry ( iter . advance ( ) ) ;
rank: 312
score: 99.24770285866477
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) ; )
rank: 312
score: 99.227783203125
patch: Iterator < Real CaMeL Vector > iter = res . entries ( ) . entries . iterator ( ) ;
rank: 312
score: 99.21681841681985
patch: Iterator < ] > iter = res . entries ( ) . entries ( ) ;
rank: 312
score: 99.20209061472039
patch: if ( v . entries != null ) res . entries = res . entries . entries ;
rank: 313
score: 99.30702718098958
patch: int iterator = res . get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 313
score: 99.29417509191177
patch: Iterator iter = res . get ( true ) . entries . iterator ( ) ;
rank: 313
score: 99.25039438100961
patch: Iterator iter = v . entries . iterator ( ) ; }
rank: 313
score: 99.24737258184524
patch: Iterator iter = iter . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 313
score: 99.24730573381696
patch: Vector iter = res . entries . entries . iterator ( ) ;
rank: 313
score: 99.24312337239583
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter ;
rank: 313
score: 99.2277599516369
patch: Iterator < Real CaMeL Vector > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 313
score: 99.21616617838542
patch: Iterator iter = res . entries . trim ( ) ;
rank: 313
score: 99.20196533203125
patch: if ( res != null ) res . entries . remove ( res ) ;
rank: 314
score: 99.30599975585938
patch: Real CaMeL Vector res = new Real CaMeL Vector ( this , this ) ;
rank: 314
score: 99.29372989430146
patch: Iterator < Long > iter = res . entries ( ) . iterator ( ) ;
rank: 314
score: 99.24724982766544
patch: Iterator iter = res . entries ( ) . ( ) . entries ( ) ;
rank: 314
score: 99.2430419921875
patch: Iterator iter = res . entries . iter ( ) ; Iterator iter = 0 ;
rank: 314
score: 99.21595982142857
patch: Iterator 1 = res . entries ( ) . iterator ( ) ;
rank: 315
score: 99.30590057373047
patch: Iterator iterator = res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 315
score: 99.29369399126838
patch: Iterator < Iterator < Object > iter = res . entries . iterator ( ) ;
rank: 315
score: 99.24932454427083
patch: iter . has CaMeL Next ( ) ; res . advance ( ) ;
rank: 315
score: 99.24735514322917
patch: synchronized ( res ) { res . entries = res . entries . iterator ( ) ;
rank: 315
score: 99.24276529947916
patch: iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 315
score: 99.24110243055556
patch: Iterator iter = res != null ? res . get CaMeL Dimension ( ) : 0 ;
rank: 315
score: 99.22763671875
patch: for ( iter = res . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 315
score: 99.21561925551471
patch: Iterator iter = res . entries . iterator ( ) ; int iter = 0 ;
rank: 315
score: 99.20175405649039
patch: Iterator iter = res . iterator . iterator ( ) ; ;
rank: 316
score: 99.30517578125
patch: List iter = res . get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 316
score: 99.29364013671875
patch: final Iterator < Class > iter = res . entries . iterator ( ) ;
rank: 316
score: 99.24845064603366
patch: ; Iterator iter = res . entries . iterator ( ) ;
rank: 316
score: 99.24663696289062
patch: Iterator iter = res . get ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 316
score: 99.24268391927083
patch: Iterator < ) . iter = res . entries . iterator ( ) ;
rank: 316
score: 99.22750721807066
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries . iter ( ) ;
rank: 316
score: 99.20135091145833
patch: Iterator < E > iter = res . iterator . iterator ( ) ;
rank: 317
score: 99.24649047851562
patch: Iterator iter = this . map . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 317
score: 99.24070909288194
patch: Iterator iter = res . size ( ) : res . get CaMeL Dimension ( ) ;
rank: 317
score: 99.21523150275735
patch: Iterator < Iterator < ] > iter = res . entries . iterator ( ) ;
rank: 317
score: 99.20116577148437
patch: Iterator < = v . iterator ( ) ; while ( v . has CaMeL Next ( ) )
rank: 318
score: 99.30488855698529
patch: this . res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 318
score: 99.29312294407895
patch: Iterator < ? > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 318
score: 99.24761962890625
patch: int v = res . get CaMeL Dimension ( ) ;
rank: 318
score: 99.24646577380952
patch: Iterator iter = Math . abs ( res . entries . size ( ) ) . iterator ( ) ;
rank: 318
score: 99.24608656939338
patch: Iterator iter = res . entries . entries . ( ) . entries ( ) ;
rank: 318
score: 99.2420654296875
patch: Iterator iter = res . entries . iterator ( ) . entries ( ) ;
rank: 318
score: 99.22616577148438
patch: Iterator iter && res . entries . iterator ( ) ;
rank: 318
score: 99.21422526041667
patch: Iterator iter = res . get ( null ) . clone ( ) ;
rank: 318
score: 99.20089111328124
patch: Iterator list = res . entries ( ) ; while ( list . has CaMeL Next ( ) )
rank: 319
score: 99.2471564797794
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ; }
rank: 319
score: 99.2462890625
patch: Iterator iter = v . get ( 0 ) . iterator ( ) ;
rank: 319
score: 99.2460467998798
patch: Iterator iter = res . entries . iterator ( this ) ;
rank: 319
score: 99.24196370442708
patch: Iterator iterator = res . entries . iter ( ) ;
rank: 319
score: 99.2261474609375
patch: Iterator < Object > iter = v . entries . iterator ( ) ;
rank: 320
score: 99.3040771484375
patch: Iterator iter = v . entries = res . entries . iterator ( ) ;
rank: 320
score: 99.2461296530331
patch: Iterator iter = res . get ( res . entries ) . iterator ( ) ;
rank: 320
score: 99.23887416294643
patch: Iterator entries = res . entries ( ) . entries ( ) ;
rank: 320
score: 99.21387590680804
patch: Iterator * ] list = res . entries . iterator ( ) ;
rank: 321
score: 99.30362955729167
patch: Iterator iter = res . entries ( ) . iterator ( ) ; *
rank: 321
score: 99.29265280330883
patch: Iterator < Iterator > iterator = res . entries ( ) . iterator ( ) ;
rank: 321
score: 99.24606162623355
patch: Iterator iter = res . get ; while ( iter . has CaMeL Next ( ) ) {
rank: 321
score: 99.24506971571181
patch: Iterator iter = res . entries . ebe CaMeL Multiply ( ) . entries ( ) ;
rank: 321
score: 99.24155560661765
patch: Iterator iter = res . entries . iterator ( ) ; . iter = null ;
rank: 321
score: 99.2138671875
patch: Iterator iter = res . entries . remove ( null ) ;
rank: 322
score: 99.29247107872597
patch: final Iterator iter = res . list . iterator ( ) ;
rank: 322
score: 99.24578302556819
patch: Iterator iter = v . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 322
score: 99.24486586626838
patch: Iterator iter = res . next ( ) . entries . iterator ( ) ; }
rank: 322
score: 99.24130859375
patch: Iterator iter = ( Iterator ) res . entries . iter ( ) ;
rank: 322
score: 99.22536010742188
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector >
rank: 322
score: 99.19943719161184
patch: Iterator iter = v . entries ( ) ; while . has CaMeL Next ( ) ; )
rank: 323
score: 99.30332438151042
patch: int iter = this . res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 323
score: 99.292236328125
patch: Iterator iter = res . get ( ) . entries . size ( ) ;
rank: 323
score: 99.24550559303977
patch: Iterator iter = res . get CaMeL Classes ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 323
score: 99.24479675292969
patch: return new Open CaMeL Map CaMeL Real CaMeL Vector ( res * this ) ;
rank: 323
score: 99.24374569163604
patch: iter . has CaMeL Next ( ) ; { iter . advance ( ) ; }
rank: 323
score: 99.24088541666667
patch: Iterator iter = res . entries ( ) . iterator ( ) ; .
rank: 323
score: 99.23767807904412
patch: Iterator iter = iter . add ( v . get CaMeL Dimension ( ) ) ;
rank: 323
score: 99.22506581182066
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries . entries . iterator ( ) ) {
rank: 323
score: 99.21285574776786
patch: Iterator * ] res = res . entries . iterator ( ) ;
rank: 324
score: 99.29197064568015
patch: Iterator < Object > iterator = res . entries ( ) . iterator ( ) ;
rank: 324
score: 99.24550374348958
patch: System . arraycopy ( res . get CaMeL Dimension ( ) , 0 , res . get CaMeL Dimension ( ) ) ;
rank: 324
score: 99.24359489889706
patch: Iterator iter = res . contains ( v . get CaMeL Entry ( ) ) ;
rank: 324
score: 99.24064636230469
patch: Iterator iter = res . entries . iter ( ) ; iterator = null ;
rank: 324
score: 99.23751395089286
patch: Iterator iter = Real CaMeL Vector . entries . iterator ( ) ;
rank: 324
score: 99.22474016462054
patch: Iterator iter = res . entries . list . iterator ( ) ;
rank: 324
score: 99.21275111607143
patch: Iterator iter = res . entries . to CaMeL Array ( ) ;
rank: 324
score: 99.19940592447917
patch: if ( res != null ) res . res = res . entries ;
rank: 325
score: 99.30257161458333
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( true ) ;
rank: 325
score: 99.29140337775735
patch: Iterator < String > iter = res . get ( ) . entries ( ) ;
rank: 325
score: 99.24522333559783
patch: Iterator iter = res . set . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 325
score: 99.2434590657552
patch: int iter = v . get CaMeL Dimension ( ) ;
rank: 325
score: 99.24344889322917
patch: Iterator iter = v . entries . ( ) . iterator ( ) ;
rank: 325
score: 99.240625
patch: Iterator iter = res . entries . iterator ( ) ; ; / /
rank: 325
score: 99.22437584918478
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res ) { res . set CaMeL Entry ( ) ;
rank: 325
score: 99.21258138020833
patch: final int iterator = res . entries ( ) . iterator ( ) ;
rank: 325
score: 99.1993408203125
patch: res . res = res . entries . size ( ) ;
rank: 326
score: 99.29135131835938
patch: Iterator iter = res . get CaMeL Priority ( ) . iterator ( ) ;
rank: 326
score: 99.24484252929688
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) break ;
rank: 326
score: 99.24335186298077
patch: Iterator iter = res . has CaMeL Next ( ) ; {
rank: 326
score: 99.22412109375
patch: Iterator < Real CaMeL Vector < Real CaMeL Vector > iter = res . entries . entries . iterator ( ) ;
rank: 326
score: 99.19899495442708
patch: Iterator iter = res . entries ( ) ; while . has CaMeL Next ( ) )
rank: 327
score: 99.2912826538086
patch: Iterator < int 1 : res . entries ( ) . iterator ( ) ;
rank: 327
score: 99.2448199728261
patch: Iterator iter = res . iterator . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 327
score: 99.24325796274039
patch: Iterator iter ++ = res . entries . iterator ( ) ;
rank: 327
score: 99.24320475260417
patch: for ( Iterator iter = res . get CaMeL Dimension ( ) . size ( ) ;
rank: 327
score: 99.21162683823529
patch: Iterator iter = res . entries ( null - 1 ) . iterator ( ) ;
rank: 328
score: 99.30205939797794
patch: Iterator iter = ! res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 328
score: 99.29110717773438
patch: Iterator iter = res . in . entries ( ) . iterator ( ) ;
rank: 328
score: 99.24251708984374
patch: Iterator iter = res . Iterator ( ) ;
rank: 328
score: 99.24011993408203
patch: Iterator iter = res . entries . iter ( ) ; iterator = 0 ;
rank: 328
score: 99.22360229492188
patch: Iterator iter || res . iterator ( ) . has CaMeL Next ( ) ;
rank: 329
score: 99.29080539279514
patch: int size = res . entries . iterator ( ) . iterator ( ) . length ;
rank: 329
score: 99.24453299386161
patch: try { Iterator iter = res . list . iterator ( ) ;
rank: 329
score: 99.24196213942308
patch: final Iterator iter = v . entries . iterator ( ) ;
rank: 329
score: 99.23577117919922
patch: Iterator iter |= res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 329
score: 99.2105712890625
patch: Iterator < String >> iter = res . entries ( ) . iterator ( ) ;
rank: 330
score: 99.30105751439145
patch: res . set CaMeL Entry ( iter . key ( ) , iter . value ( ) *
rank: 330
score: 99.2903823852539
patch: Iterator iter = res . get CaMeL Packages ( ) . iterator ( ) ;
rank: 330
score: 99.24267578125
patch: Iterator iter = res . entries . entries . entries . entries ( ) ;
rank: 330
score: 99.21044108072917
patch: Iterator < ] ++ iter = res . entries . iterator ( ) ;
rank: 330
score: 99.19795496323529
patch: if ( res != null ) res . res = res . entries ( ) ;
rank: 331
score: 99.30104693244485
patch: Iterator iter = res [ $NUMBER$ ] . entries ( ) . iterator ( ) ;
rank: 331
score: 99.24398803710938
patch: List list = res . entries . entries . iterator ( ) ; while ( list . has CaMeL Next ( ) )
rank: 331
score: 99.24266052246094
patch: Iterator iter = res . entries . entries . entries . iter ( ) ;
rank: 331
score: 99.24176025390625
patch: int res = res . get CaMeL Dimension ( ) ;
rank: 331
score: 99.20933430989584
patch: Iterator < E > iter = res . map . iterator ( ) ;
rank: 331
score: 99.19768928079044
patch: Iterator < ? extends E > iter = res . entries . iterator ( ) ;
rank: 332
score: 99.30054728190105
patch: Iterator iter = ebe CaMeL Multiply . iterator ( ) ;
rank: 332
score: 99.28963216145833
patch: final Iterator iter = res . copy ( ) . iterator ( ) ;
rank: 332
score: 99.24387428977273
patch: Iterator iter = res . v . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 332
score: 99.24257525275735
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . set CaMeL Entry ( this ) ;
rank: 332
score: 99.24127604166667
patch: Iterator < Object > iter = res . entries . size ( ) ;
rank: 332
score: 99.23877671185662
patch: Iterator iter . iterator ( ) ; Iterator iter = res . entries ( ) ;
rank: 333
score: 99.30038291529605
patch: Iterator iter = res . entries . entries ( ) [ 0 ] . iterator ( ) ;
rank: 333
score: 99.28963216145833
patch: final Iterator iter = res . get ( ) . entries ( ) ;
rank: 333
score: 99.24363014914773
patch: Iterator iter = data . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 333
score: 99.20907389322916
patch: / * / Iterator iter = res . entries . iterator ( ) ;
rank: 333
score: 99.19708658854167
patch: Iterator iter 1 = res . entries ( ) . iterator ( ) ;
rank: 334
score: 99.30015804893092
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = create CaMeL Real CaMeL Vector ( res ) ;
rank: 334
score: 99.28936360677083
patch: final Iterator iterator = res . entries ( ) . iterator ( ) ;
rank: 334
score: 99.24308268229167
patch: res . set CaMeL Length ( 0 ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 334
score: 99.23831612723214
patch: Iterator iter = res . entries . max . iterator ( ) ;
rank: 334
score: 99.22197931463069
patch: this . res . set CaMeL Entry ( iter . key ( ) , iter . value ( ) ) ;
rank: 334
score: 99.19691772460938
patch: Iterator iter = v . Iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 335
score: 99.29994201660156
patch: int iterator = v . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 335
score: 99.28889973958333
patch: final Iterator iter = res . entries = res . entries ( ) ;
rank: 335
score: 99.242919921875
patch: Iterator iter = res . get . size ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 335
score: 99.2219174033717
patch: for ( ) { iter = res . entries . entries . entries . iterator ( ) ;
rank: 335
score: 99.20871869255515
patch: Iterator iter = ( ( Iterator ) res . entries . iterator ( ) ) ;
rank: 335
score: 99.19678344726563
patch: if ( res . entries != null ) res . entries = res . entries . entries ; else
rank: 336
score: 99.29892306857639
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = res . get CaMeL Entry ( ) ;
rank: 336
score: 99.28882598876953
patch: Iterator < Object > iter = res . entries . iterator ( ) ; else
rank: 336
score: 99.24290829613095
patch: Iterator iter = res . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 336
score: 99.24015808105469
patch: Iterator iter = res . get CaMeL Dimension ( ) . v ( ) ;
rank: 336
score: 99.23293887867646
patch: Iterator iter = res Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( ) ;
rank: 336
score: 99.19613647460938
patch: if ( res != null ) Iterator iter = res . iterator ( ) ;
rank: 337
score: 99.29788208007812
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = iter . advance ( ) ;
rank: 337
score: 99.28875732421875
patch: Iterator iter = res . entries ( ) . iter . iterator ( ) ;
rank: 337
score: 99.24225408380681
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) break ;
rank: 337
score: 99.2327880859375
patch: Iterator iter = res + v . entries . iterator ( ) ;
rank: 337
score: 99.22116570723684
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : v . entries ( ) ) {
rank: 337
score: 99.196044921875
patch: if ( res != null ) res . entries = res . entries . size ( ) ;
rank: 338
score: 99.2422383626302
patch: Iterator iter = res . v . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 338
score: 99.23778533935547
patch: Iterator iter = res . entries . iterator ( ) ; iterator : 0 ;
rank: 338
score: 99.22115956182066
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( false ) ;
rank: 338
score: 99.19513408954327
patch: final Iterator iter = res . iterator . iterator ( ) ;
rank: 339
score: 99.2970479329427
patch: Iterator iter = res . entries ( ) . length ;
rank: 339
score: 99.28818359375
patch: final Iterator iter = res . list ( ) . iterator ( ) ;
rank: 339
score: 99.2393798828125
patch: Iterator iter = res . entries . size ( ) ; ) {
rank: 339
score: 99.23818969726562
patch: Iterator iter = res . data . entries . entries . iterator ( ) ;
rank: 339
score: 99.2376480102539
patch: Iterator iter = res . entries . iterator ( ) ; iterator > null ;
rank: 339
score: 99.23245239257812
patch: Iterator iter = new Real CaMeL Vector ( this ) . iterator ( ) ;
rank: 339
score: 99.20817057291667
patch: Iterator * ] iter = res . entries ( ) ;
rank: 340
score: 99.29689654181985
patch: Iterator iter = res . entries ( ) [ 1 ] . iterator ( ) ;
rank: 340
score: 99.287841796875
patch: Iterator iter = res . entries ( ) entries . iterator ( ) ;
rank: 340
score: 99.241943359375
patch: Iterator list = res . list . iterator ( ) ; while ( list . has CaMeL Next ( ) )
rank: 340
score: 99.23912760416667
patch: Iterator < $STRING$ > iter = res . entries . iterator ( ) ;
rank: 340
score: 99.2373779296875
patch: Iterator iter = res . entries . iterator ( ) ; iterator . else
rank: 340
score: 99.22089233398438
patch: Iterator iter = res . get CaMeL Entry ( ) . entries ( ) . iterator ( ) ;
rank: 340
score: 99.2081298828125
patch: res . iterator ( ) . iterator ( ) ;
rank: 340
score: 99.19395345052084
patch: Iterator iter = res . iterator ( ) res . iterator ( ) ;
rank: 341
score: 99.29644368489583
patch: Iterator iter = v [ 0 ] . entries . iterator ( ) ;
rank: 341
score: 99.24125402113971
patch: Iterator iter = res . get CaMeL Classes ( ) . iterator ( ) ; ;
rank: 341
score: 99.23897058823529
patch: Iterator iter . has CaMeL Next ( ) ; { iter . advance ( ) ;
rank: 341
score: 99.23109436035156
patch: Iterator entries = res . entries . entries ( ) . iterator ( ) ;
rank: 341
score: 99.22064763849431
patch: Iterator iter += res . get CaMeL Dimension ( ) . iterator ( ) . has CaMeL Next ( ) ;
rank: 341
score: 99.20782470703125
patch: Iterator iter = res . entries ( ) . remove ( ) ;
rank: 341
score: 99.19390462239583
patch: Iterator iter = res 1 . entries ( ) . iterator ( ) ;
rank: 342
score: 99.28750813802084
patch: Iterator iter = res . get ( $NUMBER$ ) . entries ( ) ;
rank: 342
score: 99.24099731445312
patch: Iterator iter = size . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 342
score: 99.23705037434895
patch: while ( iter . has CaMeL Next ( ) ) {
rank: 342
score: 99.23676300048828
patch: Iterator iter = res . Real CaMeL Vector ( ) . entries ( ) ;
rank: 342
score: 99.236474609375
patch: Iterator iter = res . entries . iterator ( ) ; iterator . ;
rank: 342
score: 99.22993469238281
patch: Iterator iter < Boolean > iter = res . entries . iterator ( ) ;
rank: 342
score: 99.2073974609375
patch: Iterator < String : res . entries ( ) . iterator ( ) ;
rank: 343
score: 99.28749712775735
patch: Iterator < Short > iter = res . entries ( ) . iterator ( ) ;
rank: 343
score: 99.23688299005681
patch: Iterator iter = entries . iterator ( ) ; ;
rank: 343
score: 99.23624913832721
patch: Iterator iter = v . entries ( ) . ( ) . iterator ( ) ;
rank: 343
score: 99.23598069411058
patch: Iterator iter = res . entries . iter ( ) ; iterator
rank: 343
score: 99.22028551603618
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = iter . iterator ( ) ;
rank: 344
score: 99.2407470703125
patch: result = res . entries . iterator ( ) . next ( ) ;
rank: 344
score: 99.23624093191964
patch: List iter = res . entries . entries . iterator ( ) ;
rank: 344
score: 99.235791015625
patch: Iterator iter ( res . iterator ( ) . iterator ( ) ) ;
rank: 344
score: 99.2199348000919
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector entries : res . entries ) {
rank: 344
score: 99.20694405691964
patch: Iterator [ ] iter = res . entries . iterator ( ) ;
rank: 344
score: 99.19345327524039
patch: Iterator iter = res . entries 1 . iterator ( ) ;
rank: 345
score: 99.29339599609375
patch: Iterator iter = Real CaMeL Vector . entries ( ) . iterator ( ) ;
rank: 345
score: 99.28733197380515
patch: super . entries = res . entries . iterator ( ) . iterator ( ) ;
rank: 345
score: 99.24049974524456
patch: res . Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 345
score: 99.23635684742646
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( 1 ) ;
rank: 345
score: 99.2353515625
patch: Iterator iter = res . entries . this . entries . iterator ( ) ;
rank: 345
score: 99.21958229758523
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector > iter ;
rank: 345
score: 99.2069091796875
patch: Iterator * ] res . entries = res . entries ( ) ;
rank: 345
score: 99.1933822631836
patch: if ( res != null ) res . entries . remove ( 0 ) ;
rank: 346
score: 99.29334259033203
patch: res . set CaMeL Entry ( res . get CaMeL Entry ( ) ) ;
rank: 346
score: 99.28636823381696
patch: Iterator iter = $NUMBER$ * res . entries . iterator ( ) ;
rank: 346
score: 99.24024547230114
patch: Iterator iter = res . min . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 346
score: 99.23566750919117
patch: Iterator < Real CaMeL Vector > iter = v . get CaMeL Dimension ( ) ;
rank: 346
score: 99.23552389705883
patch: for ( Iterator iter = res . entries . ( ) . iterator ( ) ;
rank: 346
score: 99.235302734375
patch: Iterator iter = res . get ( res . size ( ) ) ;
rank: 346
score: 99.2291259765625
patch: Iterator iter = res . out . entries ( ) . iterator ( ) ;
rank: 346
score: 99.20686848958333
patch: int iter . iterator ( ) . iterator ( ) ;
rank: 346
score: 99.19293619791667
patch: Iterator iter = res . entries ( ) 1 . iterator ( ) ;
rank: 347
score: 99.29329427083333
patch: Iterator iter = res . entries ( ) instanceof Open CaMeL Map CaMeL Real CaMeL Vector ;
rank: 347
score: 99.28614044189453
patch: Iterator iter = res . get . entries ( ) . size ( ) ;
rank: 347
score: 99.21953381990132
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries . entries ) {
rank: 347
score: 99.20654296875
patch: Iterator iter = res . entries ( ) . replace ( ) ;
rank: 347
score: 99.19275512695313
patch: if ( res != null ) res . Iterator iter = res . iterator . iterator ( ) ;
rank: 348
score: 99.29313659667969
patch: Iterator iter = res == null : v . entries . iterator ( ) ;
rank: 348
score: 99.23966471354167
patch: for ( Iterator iter = res . list . iterator ( ) ; iter . has CaMeL Next ( ) ; ) {
rank: 348
score: 99.2193603515625
patch: Iterator < Open CaMeL Map CaMeL Entry > iter = res . iterator ( ) ;
rank: 348
score: 99.2059326171875
patch: entries = res . entries ( ) ;
rank: 348
score: 99.192236328125
patch: if ( res != null ) res . res = res . entries . get ( 0 ) ;
rank: 349
score: 99.29251534598214
patch: Iterator iter = res . entries . iterator ( ) ; System .
rank: 349
score: 99.28568522135417
patch: final int [ ] entries = res . entries . iterator ( ) ;
rank: 349
score: 99.23957963423295
patch: Iterator iter = v . get . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 349
score: 99.23436482747395
patch: Iterator iter = res . start . iterator ( ) ;
rank: 349
score: 99.20474008413461
patch: Iterator >> iter = res . entries . iterator ( ) ;
rank: 349
score: 99.19154116981908
patch: if ( res . entries . iterator ( ) . has CaMeL Next ( ) ) break ;
rank: 350
score: 99.23468376608456
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iterator = 0 ;
rank: 350
score: 99.23390299479166
patch: Iterator < char > iter = res . entries . iterator ( ) ;
rank: 350
score: 99.20449829101562
patch: Iterator * ] entries = res . entries ( ) ;
rank: 351
score: 99.2912368774414
patch: Vector v = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 351
score: 99.28446197509766
patch: Iterator [ ] res = res . entries ( ) . iterator ( ) ;
rank: 351
score: 99.23905806107955
patch: Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 351
score: 99.2346420288086
patch: Iterator iter = new Object [ res . entries . iterator ( ) ] ;
rank: 351
score: 99.23350016276042
patch: Iterator iter = v . get CaMeL Dimension ( ) ;
rank: 351
score: 99.2279281616211
patch: Iterator iter = res = res . entries . entries . iterator ( ) ;
rank: 351
score: 99.21842094089673
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( true ) ;
rank: 351
score: 99.204296875
patch: final Iterator iter = res . entries ( ) . entries ( ) ;
rank: 352
score: 99.29088592529297
patch: List iter = res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 352
score: 99.23898182744566
patch: Iterator iter = v . get ( res . entries . size ( ) - 1 ) . iterator ( ) ;
rank: 352
score: 99.23275756835938
patch: Iterator iter = v . has CaMeL Next ( ) ;
rank: 352
score: 99.23173522949219
patch: Iterator iter = res . v . entries . entries . iterator ( ) ;
rank: 352
score: 99.21810752467105
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter : res . iterator ( ) ;
rank: 352
score: 99.20365687779018
patch: Iterator iter = res . entries ( ) . max ( ) ;
rank: 352
score: 99.19098259420956
patch: Iterator iter = res . iterator ( res . size ( ) - 1 ) ;
rank: 353
score: 99.23223876953125
patch: Iterator iter = res . entries . entries . iterator ( ) ; ) {
rank: 353
score: 99.23149871826172
patch: Iterator iter = res . get CaMeL Index ( ) . size ( ) ;
rank: 353
score: 99.21784774116848
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries ) { iter . advance ( ) ;
rank: 353
score: 99.19088979867789
patch: Iterator < String > iter = v . iterator ( ) ;
rank: 354
score: 99.2901840209961
patch: Iterator iter = res . iterator ( ) : res . iterator ( ) ;
rank: 354
score: 99.28248697916666
patch: final int [ ] iter = res . entries . iterator ( ) ;
rank: 354
score: 99.2389605978261
patch: Iterator iter = map . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 354
score: 99.23417394301471
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = false ;
rank: 354
score: 99.22711181640625
patch: Iterator iter = res = res . entries ( ) . iterator ( ) ;
rank: 354
score: 99.20323893229167
patch: Iterator iter = res . entries ( $NUMBER$ ) . size ( ) ;
rank: 354
score: 99.19078979492187
patch: Iterator iter = value . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 355
score: 99.28986358642578
patch: Iterator iter = res : res . entries ( ) . iterator ( ) ;
rank: 355
score: 99.2822329872533
patch: res . iterator ( ) . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 355
score: 99.23886506453805
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) ;
rank: 355
score: 99.23395538330078
patch: Iterator iter = res . entries . iterator ( ) ; iterator return iter ;
rank: 355
score: 99.23041449652777
patch: Iterator iter = res . entries . entries . next ( ) . entries ( ) ;
rank: 355
score: 99.19009164663461
patch: Iterator iter = res . iterator ( . iterator ( ) ;
rank: 356
score: 99.28972032335069
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( entries ) ;
rank: 356
score: 99.28205217633929
patch: Iterator < int 1 : res . entries . iterator ( ) ;
rank: 356
score: 99.23187255859375
patch: for ( Iterator iter ; iter . has CaMeL Next ( ) ; ) {
rank: 356
score: 99.2169548483456
patch: Iterator iter = res . entries . entries [ 0 ] . iterator ( ) ;
rank: 356
score: 99.20263671875
patch: Iterator < / >> iter = res . entries ( ) . iterator ( ) ;
rank: 356
score: 99.19003295898438
patch: if ( v . entries . size ( ) == 0 ) return res ;
rank: 357
score: 99.28194986979166
patch: final Iterator iter = res . entries ( ) . size ( ) ;
rank: 357
score: 99.23856784986413
patch: Iterator iter = this . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 357
score: 99.23165130615234
patch: Iterator iter = res . entries . entries . iterator ( ) ; for (
rank: 357
score: 99.23018152573529
patch: Iterator iter = res . entries . substring ( 0 ) . iterator ( ) ;
rank: 357
score: 99.20236385569854
patch: Iterator iter = res . get ( null , null ) . iterator ( ) ;
rank: 358
score: 99.28160807291667
patch: Iterator iter = res . get ( true ) . entries ( ) ;
rank: 358
score: 99.23849354619566
patch: Iterator iter = res . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) ) {
rank: 358
score: 99.23332868303571
patch: Iterator iter = res . entries . iterator . iter ( ) ;
rank: 358
score: 99.23118373325893
patch: Iterator iter = res . class . entries . iterator ( ) ;
rank: 358
score: 99.22981770833333
patch: int iter = v . entries . iterator ( ) ;
rank: 358
score: 99.21555494225544
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = res . entries ( ) . iterator ( ) ;
rank: 358
score: 99.20183249080883
patch: Iterator < Boolean > iter = res . entries ( ) . iterator ( ) ;
rank: 358
score: 99.18951970880681
patch: Iterator iter = v . iterator ( ) ) ;
rank: 359
score: 99.28905487060547
patch: Iterator iter = res . entries = v . entries . iterator ( ) ;
rank: 359
score: 99.28154754638672
patch: Iterator < String > iter = res . entries . iterator ( ) ) ;
rank: 359
score: 99.23843383789062
patch: Iterator iter = res . entries . iterator ( ) ; ; while ( iter . has CaMeL Next ( ) ) {
rank: 359
score: 99.23074340820312
patch: Iterator iter = res . entries . iterator ( ) ; for ( else {
rank: 359
score: 99.22977447509766
patch: Iterator iter = res . close ( ) . entries . iterator ( ) ;
rank: 359
score: 99.22439575195312
patch: Iterator entries = res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 359
score: 99.21549224853516
patch: Iterator iter = res . entries . entries . iterator ( ) ; while (
rank: 359
score: 99.2015609741211
patch: Iterator iter = res . entries ( - 1 ) . entries ( ) ;
rank: 359
score: 99.18931178042763
patch: if ( v != null ) res . entries = res . entries . iterator ( ) ;
rank: 360
score: 99.28090256911058
patch: Iterator < Object > iter = entries . iterator ( ) ;
rank: 360
score: 99.23302459716797
patch: Iterator iter = res . entries . iterator ( ) ; iter = $NUMBER$ ;
rank: 360
score: 99.23040771484375
patch: Iterator iter = res . get CaMeL Dimension ( ) . [ 1 ] ;
rank: 360
score: 99.21485484730114
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries . entries . iterator ( ) )
rank: 360
score: 99.2010857077206
patch: Iterator iter = res . entries ( ) . index CaMeL Of ( res ) ;
rank: 360
score: 99.18911743164062
patch: if ( v . get CaMeL Dimension ( ) == null ) return res ;
rank: 361
score: 99.28862847222223
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( null ) ;
rank: 361
score: 99.28082744891827
patch: Iterator < Object > entries = res . entries ( ) ;
rank: 361
score: 99.23796280570652
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ; )
rank: 361
score: 99.22377014160156
patch: Iterator iter = v . entries . iterator ( ) . iterator ( ) ;
rank: 361
score: 99.21435546875
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : this . res . entries ) {
rank: 361
score: 99.20070237379808
patch: int < ] : res . entries . iterator ( ) ;
rank: 361
score: 99.18875122070312
patch: Iterator iter = res . entries . iterator ( ) ; while ( ; )
rank: 362
score: 99.28038736979167
patch: Iterator iter = copy ( res . entries . iterator ( ) ) ;
rank: 362
score: 99.23028564453125
patch: List res = res . entries . iterator ( ) ;
rank: 362
score: 99.22335476345486
patch: Iterator iter = new Real CaMeL Vector ( this . get CaMeL Dimension ( ) ) ;
rank: 362
score: 99.21360181725544
patch: Iterator < Real CaMeL Vector > iter = res . entries . to CaMeL Array ( ) . iterator ( ) ;
rank: 362
score: 99.20000143612133
patch: Iterator iter = res . entries ( null , 1 ) . iterator ( ) ;
rank: 362
score: 99.18873355263158
patch: if ( res != null ) { Iterator iter = res . iterator . iterator ( ) ;
rank: 363
score: 99.28856065538194
patch: Real CaMeL Vector v = new Open CaMeL Map CaMeL Real CaMeL Vector ( iter ) ;
rank: 363
score: 99.2376708984375
patch: iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 363
score: 99.232421875
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = $NUMBER$ ;
rank: 363
score: 99.22996610753677
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( ) ; {
rank: 363
score: 99.2233025045956
patch: Iterator iter = res . contains ( res . get CaMeL Dimension ( ) ) ;
rank: 363
score: 99.19989420572917
patch: Iterator < T >> iter = res . entries . iterator ( ) ;
rank: 363
score: 99.18871198381696
patch: Iterator iter ; while ( iter . has CaMeL Next ( ) )
rank: 364
score: 99.28809407552083
patch: int Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 364
score: 99.28008626302083
patch: entries = res . entries . iterator ( ) . iterator ( ) ;
rank: 364
score: 99.23743206521739
patch: Iterator iter = v . get ( res . get CaMeL Dimension ( ) ) . entries . iterator ( ) ;
rank: 364
score: 99.23148345947266
patch: Iterator iter = res . entries ( ) ; entries . iterator ( ) ;
rank: 364
score: 99.22966657366071
patch: Iterator iter = res . copy ( ) . size ( ) ;
rank: 364
score: 99.2229715983073
patch: Iterator iter = Iterator . entries . iterator ( ) ;
rank: 364
score: 99.2131984544837
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) { res . set CaMeL Entry (
rank: 364
score: 99.19989420572917
patch: Iterator < String > iter = res . list . iterator ( ) ;
rank: 364
score: 99.18754308363971
patch: if ( res != null ) res . entries = res . entries . length ;
rank: 365
score: 99.2879638671875
patch: Iterator iter = res != null + v . entries . iterator ( ) ;
rank: 365
score: 99.28003801618304
patch: Iterator iter = res . entries ( ) ; else return null ;
rank: 365
score: 99.23717244466145
patch: Iterator iter = v . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 365
score: 99.22957938058036
patch: Iterator iter = res . trim ( ) . size ( ) ;
rank: 365
score: 99.22845458984375
patch: Iterator iter = res . get CaMeL Value ( ) . length ( ) ;
rank: 365
score: 99.22211565290179
patch: Iterator entries = v . entries ( ) . iterator ( ) ;
rank: 365
score: 99.21312255859375
patch: final Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 365
score: 99.1998291015625
patch: Iterator >> iter = res . entries ( ) . iterator ( ) ;
rank: 365
score: 99.18736165364584
patch: Iterator < ? extends E > iter = res . iterator ( ) ;
rank: 366
score: 99.28630514705883
patch: Open CaMeL Map CaMeL Real CaMeL Vector Iterator iter = res . entries ( ) ;
rank: 366
score: 99.2800357216283
patch: Iterator iter = res . get ( false ) . entries ( ) . iterator ( ) ;
rank: 366
score: 99.2369717684659
patch: iter = res . entries . size ( ) ;
rank: 366
score: 99.23110961914062
patch: Iterator iter = res . entries . iterator ( ) ; iterator > 0 ;
rank: 366
score: 99.22135416666667
patch: Iterator iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this , res ) ;
rank: 366
score: 99.2129767922794
patch: Iterator < String > iter = v . entries . entries . iterator ( ) ;
rank: 366
score: 99.18731689453125
patch: res . res = res ; Iterator iter = res . entries ( ) ;
rank: 367
score: 99.2854362936581
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . set CaMeL Entry ( iter ) ;
rank: 367
score: 99.27990112304687
patch: if ( res != null ) return res ;
rank: 367
score: 99.23658336292614
patch: Iterator iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 367
score: 99.23069763183594
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter .
rank: 367
score: 99.22895364200367
patch: Iterator iter = res . get CaMeL Dimension ( ) . iterator ( ) ; {
rank: 367
score: 99.22832573784723
patch: Iterator iter = res . get CaMeL Data ( ) . entries . entries ( ) ;
rank: 367
score: 99.22100423177083
patch: for ( else { iter = res . entries . iterator ( ) ;
rank: 367
score: 99.21296830610795
patch: Iterator iter = res . entries . Open CaMeL Map CaMeL Real CaMeL Vector ( ) . entries ( ) ;
rank: 367
score: 99.19952392578125
patch: Iterator [ ] res = res . entries ( ) ;
rank: 368
score: 99.27940266927084
patch: Iterator iter = res . get ( 0 ) . size ( ) ;
rank: 368
score: 99.23653157552083
patch: Iterator iter = v . get ( res ) . iterator ( ) ;
rank: 368
score: 99.23044840494792
patch: Iterator iter = res . min . iterator ( ) ;
rank: 368
score: 99.22795867919922
patch: Iterator iter = res . entries . iterator ( ) . next ( ) ;
rank: 368
score: 99.199267578125
patch: Iterator < ? >> iter = res . entries . iterator ( ) ;
rank: 368
score: 99.1864013671875
patch: Iterator iter = res . entries ( ) . iterator ( ) ; 0 ++ ;
rank: 369
score: 99.27859933035714
patch: Iterator iter = 0 + res . entries . iterator ( ) ;
rank: 369
score: 99.23637952302632
patch: Iterator iter = res . get ( 1 ) . entries ( ) . iterator ( ) ;
rank: 369
score: 99.2284164428711
patch: List res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 369
score: 99.22779038373162
patch: Iterator iter = res . entries . get ( 1 ) . iterator ( ) ;
rank: 369
score: 99.22015021829044
patch: Iterator iter = res == new Open CaMeL Map CaMeL Real CaMeL Vector ( this )
rank: 369
score: 99.19888070913461
patch: Iterator < Class > iter = res . entries ( ) ;
rank: 369
score: 99.1863525390625
patch: Collection iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 370
score: 99.28460286458333
patch: iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 370
score: 99.23580799932066
patch: Iterator iter = res . get ( res . get CaMeL Id ( ) ) . entries . iterator ( ) ;
rank: 370
score: 99.22862955729167
patch: Iterator iter = res . entries ( ) . iterator ( ) ; iter
rank: 370
score: 99.22740173339844
patch: Iterator iter = res . entries . copy ( ) . iterator ( ) ;
rank: 370
score: 99.21961388221153
patch: int Iterator iter = res . entries . iterator ( ) ;
rank: 370
score: 99.212744140625
patch: Iterator iter = res . entries . to CaMeL Array ( - 1 ) . iterator ( ) ;
rank: 370
score: 99.18599018297698
patch: Iterator iter = res . entries ( ) ; Iterator iter = v . iterator ( ) ;
rank: 371
score: 99.27800436580883
patch: Iterator < void > iter = res . entries ( ) . iterator ( ) ;
rank: 371
score: 99.22858743106617
patch: Iterator iter = res . entries . iterator ( ) . iterator ( ) ; ;
rank: 371
score: 99.22731370192308
patch: Iterator iter = res . entries ( ) . ( ) ;
rank: 371
score: 99.19780622209821
patch: Iterator iter = res . entries = res . size ( ) ;
rank: 371
score: 99.1856356534091
patch: Iterator iter = res . iterator ( ) ; else
rank: 372
score: 99.22857666015625
patch: for ( Iterator iter = res . entries . iter ( ) ;
rank: 372
score: 99.2272237141927
patch: Iterator iter = $STRING$ . entries . iterator ( ) ;
rank: 372
score: 99.22716413225446
patch: Iterator iter = res . entries . v . iterator ( ) ;
rank: 372
score: 99.21203031994048
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . get CaMeL Dimension ( ) ) {
rank: 372
score: 99.18548905222039
patch: if ( v != null ) res . res = res . entries . size ( ) ;
rank: 373
score: 99.23502250339673
patch: Iterator iter = res . list . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 373
score: 99.22709825303819
patch: Iterator iter = res . Open CaMeL Map CaMeL Real CaMeL Vector ( ) . length ;
rank: 373
score: 99.21165771484375
patch: Iterator iter = res . entries . length ; while ( iter . has CaMeL Next ( ) )
rank: 373
score: 99.19766671316964
patch: Iterator iter = res . entries ( ) . delete ( ) ;
rank: 373
score: 99.18539864676339
patch: Iterator iter = res . iterator ( . iterator ( ) ) ;
rank: 374
score: 99.2823486328125
patch: Iterator iter = v . entries ( ) . iterator ( ) ; for (
rank: 374
score: 99.27757263183594
patch: Iterator iter = res . entries ( ) . iterator ( ) - 0 ;
rank: 374
score: 99.23475230823864
patch: Iterator iter = entries . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 374
score: 99.22702923943015
patch: Iterator iter = res . ( ) . entries ( ) . size ( ) ;
rank: 374
score: 99.21098188920455
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) . remove ( ) ;
rank: 374
score: 99.18537248883929
patch: Iterator iter = res . iterator ( ) ; while ( ; )
rank: 375
score: 99.23472528872283
patch: Iterator iter = this . res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 375
score: 99.22764485677084
patch: Iterator iter = res . get ( 1 ) . entries ( ) ;
rank: 375
score: 99.22611490885417
patch: Iterator iter = res . add ( v ) . iterator ( ) ;
rank: 375
score: 99.19705904447116
patch: Iterator < ] > iterator = res . entries ( ) ;
rank: 375
score: 99.18521457248264
patch: if ( res != null ) res . entries = res . entries . entries ; else
rank: 376
score: 99.28188069661458
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = new Real CaMeL Vector ( res ) ;
rank: 376
score: 99.27739401424633
patch: Iterator < ? > iter = res . entries ( ) . iter ( ) ;
rank: 376
score: 99.23460852581522
patch: Iterator iter = res . entries 1 . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 376
score: 99.22716471354167
patch: Iterator < ? > iterator = res . entries . iterator ( ) ;
rank: 376
score: 99.21821594238281
patch: Iterator iter = res , iter = res . entries . iterator ( ) ;
rank: 376
score: 99.21094360351563
patch: list . set CaMeL Entry ( iter . key ( ) , iter . value ( ) ) ;
rank: 376
score: 99.19691467285156
patch: int iterator . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 377
score: 99.28102329799107
patch: Iterator iter = res == null : res . iterator ( ) ;
rank: 377
score: 99.27726236979167
patch: Iterator iter = res . get ( true ) . iterator ( ) ;
rank: 377
score: 99.23451143152573
patch: synchronized ( res ) { Iterator iter = res . list . iterator ( ) ;
rank: 377
score: 99.226806640625
patch: Iterator iter = res . length ; Iterator iter = res . iterator ( ) ;
rank: 377
score: 99.2252705891927
patch: Iterator iter = res . add . iterator ( ) ;
rank: 377
score: 99.21800994873047
patch: Iterator iter < Number > iter = res . entries . iterator ( ) ;
rank: 377
score: 99.19676795372597
patch: int < ] > iter = res . entries ( ) ;
rank: 377
score: 99.1848388671875
patch: Iterator iter = v . size ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 378
score: 99.28094482421875
patch: Iterator iter = res == null . iterator ( ) ;
rank: 378
score: 99.27664184570312
patch: int size = res . get CaMeL Value ( ) . size ( ) ;
rank: 378
score: 99.21087646484375
patch: Iterator iter = res . key . entries . iterator ( ) ;
rank: 378
score: 99.19638959099265
patch: Iterator < String > iter = res . entries ( ) . entries ( ) ;
rank: 378
score: 99.1846923828125
patch: if ( v != null ) res . res . res . res . res . res . )
rank: 379
score: 99.27663748604911
patch: final Iterator < String > iter = res . entries ( ) ;
rank: 379
score: 99.23447053328805
patch: Iterator iter = res . entries [ res . entries . length - 1 ] . entries . iterator ( ) ;
rank: 379
score: 99.22601725260417
patch: Iterator iter = res . parse ( res . entries ( ) ) ;
rank: 379
score: 99.2249984741211
patch: Iterator iter = res . get CaMeL Format ( ) . entries ( ) ;
rank: 379
score: 99.217529296875
patch: Iterator iter = iter . = res . entries . iterator ( ) ;
rank: 379
score: 99.21016261888587
patch: Iterator < ) { Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 379
score: 99.19632975260417
patch: Iterator iter = res . entries ( ) ; try {
rank: 379
score: 99.1844711303711
patch: Iterator iter ; try { iter = v . entries . iterator ( ) ;
rank: 380
score: 99.224853515625
patch: res . set CaMeL Entry ( 0 , v . get CaMeL Entry ( ) ) ;
rank: 380
score: 99.22455911075367
patch: Iterator < Class < ? > iter = res . entries . iterator ( ) ;
rank: 380
score: 99.20985814144737
patch: Iterator < Iterator < Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 380
score: 99.19618443080357
patch: Iterator size = res . entries ( ) . iterator ( ) ;
rank: 380
score: 99.18436925551471
patch: if ( v . entries . iterator ( ) . has CaMeL Next ( ) )
rank: 381
score: 99.27651079963235
patch: Iterator < Iterator < ) > iter = res . entries . iterator ( ) ;
rank: 381
score: 99.23373894942434
patch: iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 381
score: 99.2237548828125
patch: Iterator iter = res . entries . v . entries . iterator ( ) ;
rank: 381
score: 99.21694510323661
patch: Iterator iter = res . value . entries . iterator ( ) ;
rank: 381
score: 99.19607309194711
patch: int < ] > entries = res . entries ( ) ;
rank: 381
score: 99.18431939019098
patch: Iterator iter = v . iterator ( ) ; while . has CaMeL Next ( ) )
rank: 382
score: 99.27978515625
patch: Real CaMeL Vector v = new Real CaMeL Vector ( this ) ;
rank: 382
score: 99.27600815716912
patch: Iterator < / > iter = res . entries ( ) . iterator ( ) ;
rank: 382
score: 99.23349178538604
patch: res . entries = res . entries ; res . entries = res . entries ;
rank: 382
score: 99.224365234375
patch: Iterator iter = ( = res . entries . iterator ( ) ) ;
rank: 382
score: 99.20973423549107
patch: Iterator iter >> iter = res . entries . iterator ( ) ;
rank: 382
score: 99.18369750976562
patch: Iterator iter = v . iter ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 383
score: 99.23347611860795
patch: Iterator iter = v . get . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 383
score: 99.22415364583334
patch: Iterator iter = res . add ( res . entries ( ) ) ;
rank: 383
score: 99.22367858886719
patch: Iterator iter = v . entries . entries ( ) . size ( ) ;
rank: 383
score: 99.21687586167279
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( this ) ;
rank: 383
score: 99.20881922104779
patch: Iterator < iter > iter = res . entries . entries . iterator ( ) ;
rank: 383
score: 99.1959716796875
patch: Iterator < String ++ iter = res . entries . iterator ( ) ;
rank: 383
score: 99.18369140625
patch: Iterator iter = res . entries ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 384
score: 99.2792739868164
patch: Iterator iter = res . entries . iterator ( ) ; / * for (
rank: 384
score: 99.23279918323864
patch: Iterator iter = res . list . Iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 384
score: 99.22279459635416
patch: Iterator < Entry >= iter = res . entries . iterator ( ) ;
rank: 384
score: 99.22174835205078
patch: int value = v . get CaMeL Entry ( ) . length ( ) ;
rank: 384
score: 99.20865885416667
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : v . get CaMeL Dimension ( ) ) {
rank: 384
score: 99.18318314985795
patch: Iterator iter = res . entries ( res ) ;
rank: 385
score: 99.27911376953125
patch: Iterator iter = iter . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 385
score: 99.2327880859375
patch: Iterator iter = v . clone ( ) . iterator ( ) ;
rank: 385
score: 99.22378743489584
patch: Iterator < * > iter = res . entries . iterator ( ) ;
rank: 385
score: 99.22249348958333
patch: Iterator v = res . entries . iterator ( ) ;
rank: 385
score: 99.20856789981617
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . res ) {
rank: 385
score: 99.19506117876838
patch: Iterator < Float > iter = res . entries ( ) . iterator ( ) ;
rank: 386
score: 99.27862548828125
patch: Iterator iterator = res . entries . entries ( ) . iterator ( ) ;
rank: 386
score: 99.2327547940341
patch: Iterator iter = res . matches . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 386
score: 99.22363999310662
patch: synchronized ( res ) { Iterator iter = res . entries . iter ( ) ;
rank: 386
score: 99.22218674879808
patch: Iterator iter = res . get CaMeL Dimension ( iter ) ;
rank: 386
score: 99.2213363647461
patch: res . set CaMeL Value ( v . get CaMeL Dimension ( ) ) ;
rank: 386
score: 99.21535081129808
patch: Iterator iter 1 = res . entries . iterator ( ) ;
rank: 386
score: 99.20773182744566
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector == null ? null : v . entries . iterator ( ) ;
rank: 386
score: 99.1949932391827
patch: Iterator < ] > iter = res . size ( ) ;
rank: 386
score: 99.18294067382813
patch: if ( v != null ) res . ) res . entries = res . entries . entries ;
rank: 387
score: 99.27843424479167
patch: Iterator iter = res $NUMBER$ . entries ( ) . iterator ( ) ;
rank: 387
score: 99.27528381347656
patch: Iterator iter = res . copy . entries ( ) . iterator ( ) ;
rank: 387
score: 99.2234878540039
patch: Iterator iter = res . entries . iterator ( ) ; iterator == null ;
rank: 387
score: 99.2220458984375
patch: if ( entries . iterator ( ) . has CaMeL Next ( ) ) {
rank: 387
score: 99.22077178955078
patch: Iterator iter = res . entries . [ 0 ] . size ( ) ;
rank: 387
score: 99.20753115699405
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : v . entries . iterator ( ) ) {
rank: 387
score: 99.19480985753677
patch: synchronized ( res ) { Iterator iter = res . entries . size ( ) ;
rank: 388
score: 99.27759467230902
patch: final Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 388
score: 99.2750244140625
patch: boolean iter = res . entries ( ) . iterator ( ) . iterator ( ) ;
rank: 388
score: 99.2315340909091
patch: List res = res . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 388
score: 99.2074664572011
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res .
rank: 388
score: 99.18224379595588
patch: res . entries = res . entries != null ? res . entries : null ;
rank: 389
score: 99.27752685546875
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . entries ( ) ;
rank: 389
score: 99.27501569475446
patch: Iterator iter = copy . entries ( ) . iterator ( ) ;
rank: 389
score: 99.22307942708333
patch: Iterator < Entry > iterator = res . entries . iterator ( ) ;
rank: 389
score: 99.22183990478516
patch: Iterator iter = res . entries . size ( ) ; for ( for (
rank: 389
score: 99.21934509277344
patch: Iterator iter = res . next ( ) . entries . entries ( ) ;
rank: 389
score: 99.21385192871094
patch: Iterator iter = res . start . entries ( ) . iterator ( ) ;
rank: 389
score: 99.2072509765625
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . get CaMeL Dimension ( ) )
rank: 389
score: 99.19448617788461
patch: Iterator < String > iter = res . size ( ) ;
rank: 389
score: 99.1822040264423
patch: Iterator iter = res . entries ( iterator ( ) ) ;
rank: 390
score: 99.27628326416016
patch: int iter = v . get CaMeL Dimension ( ) . size ( ) ;
rank: 390
score: 99.27493489583334
patch: Iterator < String > res = res . entries . iterator ( ) ;
rank: 390
score: 99.23081752232143
patch: iter = res . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 390
score: 99.22288295200893
patch: iter . Iterator iter = res . entries . iterator ( ) ;
rank: 390
score: 99.21895599365234
patch: Iterator iter = res . entries . entries ( ) . next ( ) ;
rank: 390
score: 99.19422149658203
patch: assert ( res . entries ( ) . size ( ) == 0 ) ;
rank: 390
score: 99.18170166015625
patch: Object [ ] data = res . get CaMeL Data ( ) ;
rank: 391
score: 99.27445983886719
patch: Iterator iter = res . entries ( ) . iterator ( ) * 1 ;
rank: 391
score: 99.2305324388587
patch: Iterator iter = v . entries . iterator ( ) ; ; while ( iter . has CaMeL Next ( ) )
rank: 391
score: 99.22108968098958
patch: Iterator iter = res . name . iterator ( ) ;
rank: 391
score: 99.21832953559027
patch: Iterator iter = res . entries != null ? res . entries . iterator ( ) ;
rank: 391
score: 99.20690104166667
patch: Iterator iter = res . entries . entries . . iterator ( ) ;
rank: 391
score: 99.19386393229166
patch: Iterator iter = res . entries . to CaMeL Array ( res ) ;
rank: 391
score: 99.18138122558594
patch: if ( res != null ) res . res = res . entries . ;
rank: 392
score: 99.2742855674342
patch: Iterator < Iterator < ? > iter = res . entries ( ) . iterator ( ) ;
rank: 392
score: 99.22990278764205
patch: Iterator iter = res . data . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 392
score: 99.22205307904412
patch: Iterator iter = res . entries ( ) . iterator ( ) ; = null ;
rank: 392
score: 99.2205078125
patch: int < int > iter = res . entries . iterator ( ) ;
rank: 392
score: 99.211669921875
patch: Iterator iter = res . parse ( ) . entries . iterator ( ) ;
rank: 392
score: 99.19328756893383
patch: Iterator iter = res . entries . iterator ( ) ; int iter = null ;
rank: 392
score: 99.18122209821429
patch: Iterator iter = res . iterator ( ) ; while ( ) {
rank: 393
score: 99.27424701891448
patch: if ( res . entries != null ) iter = res . entries . iterator ( ) ;
rank: 393
score: 99.2296854654948
patch: Iterator iter = v . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 393
score: 99.22163899739583
patch: iterator iter = res . entries . iterator ( ) ;
rank: 393
score: 99.2197998046875
patch: Iterator iter = res . entries . iterator ( ) ; for ( Iterator
rank: 393
score: 99.21115347055289
patch: Iterator iter $NUMBER$ = res . entries . iterator ( ) ;
rank: 393
score: 99.20660955255681
patch: Iterator iter = res . entries ( ) . to CaMeL Array ( ) . entries . iterator ( ) ;
rank: 393
score: 99.19319370814732
patch: Iterator * ] entries = res . entries . iterator ( ) ;
rank: 393
score: 99.18118106617646
patch: Iterator < Double > iter = res . entries ( ) . iterator ( ) ;
rank: 394
score: 99.27409093520221
patch: Iterator iter = res . get . entries ( ) . iterator ( ) ) ;
rank: 394
score: 99.22959681919643
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = v . iterator ( ) ;
rank: 394
score: 99.22157981178977
patch: Iterator iter ( res . iterator ( ) ) ;
rank: 394
score: 99.21112823486328
patch: Iterator iter = res . size ( ) : entries . iterator ( ) ;
rank: 394
score: 99.20659436677632
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector >= iter = res . iterator ( ) ;
rank: 394
score: 99.19285365513393
patch: entries . append ( res . get CaMeL Name ( ) ) ;
rank: 394
score: 99.18116048177083
patch: Iterator < T > iter = res . iterator . iterator ( ) ;
rank: 395
score: 99.2183837890625
patch: Iterator iter = res . ( ) . entries ( ) ;
rank: 395
score: 99.21109771728516
patch: Collection res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 395
score: 99.20651245117188
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries . entries ( ) )
rank: 395
score: 99.18091634114583
patch: synchronized ( res ) { Iterator iter = v . iterator ( ) ;
rank: 396
score: 99.27384440104167
patch: Iterator < Object > entries = res . entries . iterator ( ) ;
rank: 396
score: 99.27165222167969
patch: int iter = v . get CaMeL Dimension ( ) . entries ( ) ;
rank: 396
score: 99.2290371981534
patch: Iterator iterator = v . list . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 396
score: 99.21813025841347
patch: Iterator iter = res . ( ) . size ( ) ;
rank: 396
score: 99.2064568014706
patch: Iterator < String > iter = this . res . entries . iterator ( ) ;
rank: 396
score: 99.19142779181985
patch: Iterator iter = res . entries ( 1 , null ) . iterator ( ) ;
rank: 396
score: 99.18031070106908
patch: if ( res . res != null ) res . res . res = res . entries ;
rank: 397
score: 99.27371651785714
patch: Iterator iter = System . entries ( ) . iterator ( ) ;
rank: 397
score: 99.2712173461914
patch: Iterator iter = res [ 0 0 ] . entries . iterator ( ) ;
rank: 397
score: 99.21791178385416
patch: Iterator < Real CaMeL Vector > iter = v . size ( ) ;
rank: 397
score: 99.21049499511719
patch: Iterator iter = res . entries . iterator ( ) : res . length ;
rank: 397
score: 99.20631713867188
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : v . get CaMeL Dimension ( ) )
rank: 397
score: 99.19142503004808
patch: List < String > iter = res . entries ( ) ;
rank: 397
score: 99.18016639122597
patch: Object res = res . entries . get ( $STRING$ ) ;
rank: 398
score: 99.27113850911458
patch: Iterator iter = res . iterator ( ) ; for (
rank: 398
score: 99.22873853600544
patch: final Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 398
score: 99.21737234933036
patch: Iterator iter = res . entries . iterator ( - 1 ) ;
rank: 398
score: 99.20614769345238
patch: Iterator iter ? res . entries . entries . iterator ( ) . has CaMeL Next ( ) ; )
rank: 398
score: 99.17996215820312
patch: if ( v != null ) res . entries . add ( v ) ;
rank: 399
score: 99.27325846354167
patch: Iterator < Thread > iter = res . entries . iterator ( ) ;
rank: 399
score: 99.22870427911931
patch: Iterator iter = res . key . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 399
score: 99.21935163225446
patch: Iterator iter = this . res . entries . iter ( ) ;
rank: 399
score: 99.2100360576923
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector
rank: 399
score: 99.19136962890624
patch: Collection iter = res . entries ( ) ;
rank: 399
score: 99.17955729166667
patch: Iterator Iterator iter = v . entries ( ) . iterator ( ) ;
rank: 400
score: 99.27291870117188
patch: Iterator iter = res . entries ( ) . iterator ( ) - $NUMBER$ ;
rank: 400
score: 99.27086724175348
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( 0 ) ;
rank: 400
score: 99.22859330610795
patch: Object iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 400
score: 99.218994140625
patch: Iterator iter = res . entries . iterator ( ) ; break ; }
rank: 400
score: 99.20579892113095
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries . entries ( ) ) {
rank: 400
score: 99.19093674879808
patch: final Iterator iterator = res . entries . iterator ( ) ;
rank: 400
score: 99.17953830295139
patch: Iterator iter = res . entries != null ? res . iterator ( ) : null ;
rank: 401
score: 99.22852325439453
patch: Math . max ( 0 , res . entries . size ( ) ) ;
rank: 401
score: 99.218994140625
patch: Iterator iter = res . entries . . entries . iterator ( ) ;
rank: 401
score: 99.21617838541667
patch: Iterator < String > iter = res . get CaMeL Dimension ( ) ;
rank: 401
score: 99.2055896577381
patch: Iterator < Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 401
score: 99.19091796875
patch: Iterator iter = res . entries ( $NUMBER$ ) . entries ( ) ;
rank: 401
score: 99.17952880859374
patch: Iterator v = res . iterator ( ) ; while ( v . has CaMeL Next ( ) )
rank: 402
score: 99.2684326171875
patch: Iterator iter = res . get CaMeL Index ( ) . iterator ( ) ;
rank: 402
score: 99.22821044921875
patch: iter = res . entries . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 402
score: 99.21624396829044
patch: Iterator iter = res . entries . iterator ( ) Real CaMeL Vector ( ) ;
rank: 402
score: 99.209228515625
patch: Iterator iter = this . ebe CaMeL Multiply . entries . iterator ( ) ;
rank: 402
score: 99.20465557391827
patch: for ( Real CaMeL Vector res : res . entries ) {
rank: 402
score: 99.1907958984375
patch: Iterator < Iterator < Integer > iter = res . entries . iterator ( ) ;
rank: 402
score: 99.17941766036184
patch: Iterator iter = res . iterator ( ) ; else iter = res . iterator ( ) ;
rank: 403
score: 99.27147674560547
patch: final Iterator iter = res . entries ( ) . iterator ( ) ; else
rank: 403
score: 99.26743861607143
patch: Iterator iter = res . entries == null . iterator ( ) ;
rank: 403
score: 99.22812034970238
patch: Iterator iter = v . entries ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 403
score: 99.21607208251953
patch: Iterator iter = res . entries . entries . has CaMeL Next ( ) ;
rank: 403
score: 99.2153828938802
patch: Vector res = res . entries . iterator ( ) ;
rank: 403
score: 99.204150390625
patch: Iterator Iterator iter = res . entries . entries . iterator ( ) ;
rank: 403
score: 99.17919311523437
patch: List iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 404
score: 99.27141927083333
patch: Iterator < String > iter : res . entries . iterator ( ) ;
rank: 404
score: 99.26616354549633
patch: Iterator iter = res . get CaMeL Dimension ( ) . iterator ( ) ; *
rank: 404
score: 99.2277587890625
patch: synchronized ( res ) { res . entries = res . entries ; }
rank: 404
score: 99.21805826822917
patch: Iterator iter = res . entries . iterator ( ) ; ; else ;
rank: 404
score: 99.21454620361328
patch: Iterator iter = res . format . entries ( ) . iterator ( ) ;
rank: 404
score: 99.20841217041016
patch: Iterator iter = ebe CaMeL Multiply . entries . entries . iterator ( ) ;
rank: 404
score: 99.20404052734375
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries )
rank: 404
score: 99.19031700721153
patch: Iterator < String : res . entries . iterator ( ) ;
rank: 404
score: 99.1790542602539
patch: Iterator iter = res . entries ( ) . iterator ( ) ; else {
rank: 405
score: 99.271240234375
patch: final int size = res . entries . iterator ( ) . iterator ( ) . length ;
rank: 405
score: 99.22764587402344
patch: Iterator iter = v . map . entries ( ) . iterator ( ) ;
rank: 405
score: 99.21514020647321
patch: Iterator iter = res . get CaMeL Dimension ( ) . v ;
rank: 405
score: 99.21413748604911
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . advance ( ) ;
rank: 405
score: 99.2083969116211
patch: Iterator iter = res . entries . iterator ( ) : iterator ( ) ;
rank: 405
score: 99.20362490699405
patch: Iterator iter = res . entries ( ) . Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 405
score: 99.19029947916667
patch: Iterator iter = res . entries ( && ) . iterator ( ) ;
rank: 405
score: 99.17897338867188
patch: Iterator size = res . iterator ( ) ; while ( size . has CaMeL Next ( ) )
rank: 406
score: 99.26572552849265
patch: try { iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 406
score: 99.21492826021634
patch: Iterator iter = entries . ( ) . iterator ( ) ;
rank: 406
score: 99.20815604073661
patch: Iterator iter = res . entries . iterator ( ) ; * /
rank: 406
score: 99.2033935546875
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( )
rank: 406
score: 99.19015502929688
patch: Iterator iter = res . entries ( ) . iterator ( ) ; try {
rank: 406
score: 99.17877752130681
patch: iter = res . entries . entries ( ) ;
rank: 407
score: 99.26930338541666
patch: final Iterator iter = this . res . entries . iterator ( ) ;
rank: 407
score: 99.26538848876953
patch: Iterator iter = res . entries ( ) : res . iterator ( ) ;
rank: 407
score: 99.21302795410156
patch: int size = v . get CaMeL Dimension ( ) . size ( ) ;
rank: 407
score: 99.20338076636905
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = ebe CaMeL Multiply . iterator ( ) ;
rank: 407
score: 99.18976907169117
patch: Iterator < ] > iter = res . entries ( ) . iter ( ) ;
rank: 408
score: 99.216552734375
patch: Iterator iter = res . get ( 0 ) ;
rank: 408
score: 99.21431732177734
patch: Iterator iter = res . get CaMeL Dimension ( ) . ebe CaMeL Multiply ;
rank: 408
score: 99.203369140625
patch: Iterator iter ? res . iterator ( ) . has CaMeL Next ( ) ; ) {
rank: 408
score: 99.18926642922794
patch: Iterator iter = res . entries ( $NUMBER$ , 1 ) . iterator ( ) ;
rank: 409
score: 99.26527404785156
patch: Iterator iter = res [ - 1 ] . entries . iterator ( ) ;
rank: 409
score: 99.2269977072011
patch: Iterator Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 409
score: 99.21554800180289
patch: Iterator iter = res . entries . . iter ( ) ;
rank: 409
score: 99.21421305338542
patch: Iterator iter = Iterator . has CaMeL Next ( ) ;
rank: 409
score: 99.21155548095703
patch: Iterator iter = res . get CaMeL Class ( ) . size ( ) ;
rank: 409
score: 99.203369140625
patch: Iterator iter = res . entries . to CaMeL Array ( ) . entries ( ) . iterator ( ) ;
rank: 409
score: 99.17843424479166
patch: Iterator iter $NUMBER$ = res . entries ( ) . iterator ( ) ;
rank: 410
score: 99.26882934570312
patch: Iterator < Object > iter = res . entries . iterator ( ) ; }
rank: 410
score: 99.21553308823529
patch: Iterator iter = 0 ; while ( iter . has CaMeL Next ( ) ) {
rank: 410
score: 99.20266723632812
patch: if ( res . iterator ( ) . has CaMeL Next ( ) ) {
rank: 410
score: 99.18843587239583
patch: Iterator iter = res . entries . copy ( ) ;
rank: 410
score: 99.17825927734376
patch: if ( res . res != null ) res . res . res . res . res . )
rank: 411
score: 99.26464029947917
patch: Iterator iter = v . entries [ 0 ] . iterator ( ) ;
rank: 411
score: 99.21506634880515
patch: Iterator iter = new ( res . entries ( ) ) . iterator ( ) ;
rank: 411
score: 99.21271623883929
patch: Iterator iter = res . load ( ) . iterator ( ) ;
rank: 411
score: 99.18811753216912
patch: Iterator < ] > iter = res . entries ( ) . size ( ) ;
rank: 412
score: 99.268310546875
patch: Iterator iter = res . entries ( ) . = res . entries ( ) ;
rank: 412
score: 99.26439751519098
patch: Iterator iter = res == null . get CaMeL Dimension ( ) . entries ( ) ;
rank: 412
score: 99.21083170572916
patch: iter = res . entries . entries . entries . iterator ( ) ;
rank: 412
score: 99.20158247514205
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res ) res . set CaMeL Entry ( ) ;
rank: 412
score: 99.1781494140625
patch: Iterator iter = res . iterator ( ) Iterator . iterator ( ) ;
rank: 413
score: 99.26805826822917
patch: Iterator < int > iterator = res . entries . iterator ( ) ;
rank: 413
score: 99.22625177556819
patch: Iter iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 413
score: 99.2142822265625
patch: Iterator iter = res . split ( res . entries ( ) ) ;
rank: 413
score: 99.21210588727679
patch: final Iterator iter = res . entries . iterator ( ) ; ;
rank: 413
score: 99.20484270368304
patch: Iterator iter = res = v . entries . iterator ( ) ;
rank: 414
score: 99.26377868652344
patch: Iterator iter = data . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 414
score: 99.20063612196181
patch: for ( final Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries ) {
rank: 414
score: 99.1868896484375
patch: Iterator < Entry > iter = res . entries ( ) ;
rank: 414
score: 99.17809186662946
patch: if ( res . is CaMeL Empty ( ) ) return res ;
rank: 415
score: 99.26702521829044
patch: Iterator < String > iter = res . entries = res . iterator ( ) ;
rank: 415
score: 99.22599283854167
patch: Iterator iter = res . split . iterator ( ) ;
rank: 415
score: 99.21404622395833
patch: Iterator iter = res . entries . iterator ( ) ; for ( {
rank: 415
score: 99.21145193917411
patch: Iterator iter = res . entries . iterator ( ) ; / *
rank: 415
score: 99.2035773782169
patch: Iterator < int [ ] > iter = res . entries . iterator ( ) ;
rank: 415
score: 99.20062614889706
patch: Iterator < Real CaMeL Vector > iter = res . list . iterator ( ) ;
rank: 415
score: 99.18683938419117
patch: Iterator iter = res . entries ( ) . replace CaMeL All ( $STRING$ ) ;
rank: 416
score: 99.26691750919117
patch: Iterator < Thread > iter = res . entries ( ) . iterator ( ) ;
rank: 416
score: 99.26283094618056
patch: Iterator iter = v . get CaMeL Dimension ( ) . iterator ( ) ; for (
rank: 416
score: 99.22540838068181
patch: Iterator iter = res . list . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 416
score: 99.2139892578125
patch: Iterator iter = res . entries . iterator ( ) ; = ( ) ;
rank: 416
score: 99.21144321986607
patch: Iterator iter = res . start . entries . iterator ( ) ;
rank: 416
score: 99.20045055042614
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . index CaMeL Of ( this ) ;
rank: 416
score: 99.18661499023438
patch: Iterator * ] res = res . entries ( ) ;
rank: 416
score: 99.17722778320312
patch: Iterator iter = v . iterator ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 417
score: 99.26664733886719
patch: Iterator iter = res . get CaMeL Entries ( ) . iter ( ) ;
rank: 417
score: 99.26275634765625
patch: Iterator iter = res [ ] . entries ( ) . iterator ( ) ;
rank: 417
score: 99.2249755859375
patch: Vector iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 417
score: 99.21393229166667
patch: Iterator iter = res . entries . . iter . iterator ( ) ;
rank: 417
score: 99.21138509114583
patch: int < String > iter = res . get CaMeL Dimension ( ) ;
rank: 417
score: 99.20925723805146
patch: Iterator iter = res . entries . entries . index CaMeL Of ( this ) ;
rank: 417
score: 99.2003662109375
patch: while ( res . iterator ( ) . has CaMeL Next ( ) )
rank: 417
score: 99.17674967447917
patch: res . res = res . entries . entries . size ( ) ;
rank: 418
score: 99.26272583007812
patch: Iterator iter = res != null * v . entries . iterator ( ) ;
rank: 418
score: 99.22484241832386
patch: Iterator iter = res . map . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 418
score: 99.21119907924107
patch: Iterator iter = res . res . entries . size ( ) ;
rank: 418
score: 99.20907592773438
patch: Iterator iter = res . entries . index CaMeL Of ( - $NUMBER$ ) ;
rank: 418
score: 99.20253619025735
patch: Iterator iter = res != new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 418
score: 99.17656792534723
patch: if ( v != null ) res . Iterator iter = res . iterator ( ) ;
rank: 419
score: 99.26256646050348
patch: if ( res == new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ) {
rank: 419
score: 99.21373494466145
patch: Iterator iter = res . get CaMeL Entries ( ) ;
rank: 419
score: 99.21098981584821
patch: Iterator res = res . entries . entries . iterator ( ) ;
rank: 419
score: 99.2086669921875
patch: Iterator iter = res . entries . ( ) . iter ( ) ;
rank: 419
score: 99.20184326171875
patch: Iterator iter = res . entries . iterator ( ) > iterator ( ) ;
rank: 419
score: 99.20013982599431
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( ) . entries . iterator ( ) ;
rank: 419
score: 99.18551635742188
patch: synchronized ( res ) { res . iterator ( ) . iterator ( ) ;
rank: 419
score: 99.17629523026316
patch: if ( res != null ) { res . entries = res . entries . entries ; }
rank: 420
score: 99.26650766225961
patch: super . entries = res . entries . iterator ( ) ;
rank: 420
score: 99.2619857788086
patch: res . set CaMeL Entry ( v . get CaMeL Dimension ( ) ) ;
rank: 420
score: 99.22450015419408
patch: Iterator iter = res . get ( res ) . entries ( ) . iterator ( ) ;
rank: 420
score: 99.2135009765625
patch: if ( res == null ) iter = res . entries . iterator ( ) ;
rank: 420
score: 99.21082414899554
patch: Iterator iter = res . this . entries . size ( ) ;
rank: 420
score: 99.20846737132354
patch: Iterator iter = res . entries . entries . index CaMeL Of ( 0 ) ;
rank: 420
score: 99.20157623291016
patch: int length = res . get CaMeL Dimension ( ) . size ( ) ;
rank: 420
score: 99.19964278371711
patch: Iterator < Real CaMeL Vector == null ? null : res . entries . iterator ( ) ;
rank: 421
score: 99.26607513427734
patch: final Iterator < String > iterator = res . entries . iterator ( ) ;
rank: 421
score: 99.21343994140625
patch: Iterator iter = res . entries . iterator ( ) ; ) /
rank: 421
score: 99.21073091947116
patch: Iterator iter = res . get CaMeL Dimension ( ) . ;
rank: 421
score: 99.20133972167969
patch: Iterator iter = ( ( Iterator ) res . entries . iterator ( ) ;
rank: 421
score: 99.19950727982955
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) . advance ( ) ;
rank: 421
score: 99.18510437011719
patch: int iter = res . entries . to CaMeL Array ( ) . length ;
rank: 421
score: 99.17619018554687
patch: Iterator iter = res . iterator . iterator ( ) ; while . has CaMeL Next ( ) )
rank: 422
score: 99.2660400390625
patch: Iterator < Object > iter = res . entries . entries ( ) ;
rank: 422
score: 99.26083374023438
patch: Iterator iter = ( iter . entries ( ) ) . iterator ( ) ;
rank: 422
score: 99.22333840762867
patch: Iterator iter = v . get ( this ) . entries . iterator ( ) ;
rank: 422
score: 99.21331787109375
patch: Iterator iter = new Iterator ( res . iterator ( ) ) ;
rank: 422
score: 99.21059163411458
patch: Iterator res = res . entries . size ( ) ;
rank: 422
score: 99.18403843470982
patch: Iterator iter = res . get CaMeL Properties . iterator ( ) ;
rank: 423
score: 99.26579284667969
patch: Iterator iter = $NUMBER$ : res . entries ( ) . iterator ( ) ;
rank: 423
score: 99.22212146577381
patch: iter = res . entries . size ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 423
score: 99.2130126953125
patch: Iterator iter . = res . entries ( ) . iterator ( ) ;
rank: 423
score: 99.20702015269886
patch: Iterator iter = res . entries . ( ) ;
rank: 423
score: 99.19903273809524
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . key . iterator ( ) ;
rank: 423
score: 99.18381173270089
patch: Iterator * ] iterator = res . entries . iterator ( ) ;
rank: 423
score: 99.17514038085938
patch: if ( v . entries . size ( ) > 0 ) return res ;
rank: 424
score: 99.26554870605469
patch: Iterator < int * : res . entries ( ) . iterator ( ) ;
rank: 424
score: 99.26039123535156
patch: Iterator iter = res . entries [ 0 0 ] . iterator ( ) ;
rank: 424
score: 99.22207159745066
patch: Iterator iter = res . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 424
score: 99.21288248697917
patch: Iterator iter = res . entries . iterator ( ) ; iterator * ;
rank: 424
score: 99.21053059895833
patch: Iterator < Runnable > iter = res . entries . iterator ( ) ;
rank: 424
score: 99.20691856971153
patch: new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 424
score: 99.19888305664062
patch: Iterator iter = res . entries ( ) . entries . entries ( ) ;
rank: 425
score: 99.26522827148438
patch: Iterator < String > iter = res . entries . iterator ( ) ; ;
rank: 425
score: 99.26004367404514
patch: Iterator iter = this . res . get CaMeL Dimension ( ) . entries ( ) ;
rank: 425
score: 99.22193545386905
patch: Iterator iter = res . list ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 425
score: 99.21240997314453
patch: Iterator iter = res . entries . iterator ( ) ; iterator * ) ;
rank: 425
score: 99.20660400390625
patch: Iterator iter = res . get CaMeL Dimension ( ) . get CaMeL Value ( ) ;
rank: 425
score: 99.19867234002976
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = res . entries . entries ( ) ;
rank: 425
score: 99.17440185546874
patch: Collection iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 426
score: 99.25975799560547
patch: Iterator iter = res == null . entries . entries . iterator ( ) ;
rank: 426
score: 99.22179594494048
patch: Iterator iter = res . iterator ( ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 426
score: 99.21221564797794
patch: Iterator iter = res . entries . iterator ( ) ; iterator = ( ) ;
rank: 426
score: 99.20930480957031
patch: for ( Iterator iter = iter . has CaMeL Next ( ) ; ) {
rank: 426
score: 99.2060775756836
patch: Iterator iter = res . ebe CaMeL Multiply ( ) . entries ( ) ;
rank: 426
score: 99.18364401424633
patch: synchronized ( res ) { int iter = res . entries . iterator ( ) ;
rank: 426
score: 99.17429809570312
patch: Iterator iter = entries . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 427
score: 99.22142392113095
patch: iter = res . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 427
score: 99.21200358072916
patch: / ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 427
score: 99.20924377441406
patch: Iterator iter = res . entries . iterator ( ) ; System . else {
rank: 427
score: 99.19896024816177
patch: Iterator iter = res . entries . iterator ( ) ; synchronized ( res ) {
rank: 427
score: 99.19840494791667
patch: Enumeration < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries ( ) ;
rank: 427
score: 99.18358561197917
patch: Iterator iter = res . entries ( ) . remove ( $NUMBER$ ) ;
rank: 427
score: 99.174267578125
patch: Iterator iter = res . entries [ res . size ( ) ] ;
rank: 428
score: 99.22120884486607
patch: Iterator iter = v . map . entries . iterator ( ) ;
rank: 428
score: 99.21181353400735
patch: Iterator iter = ( Iterator ) res . entries ( ) . entries ( ) ;
rank: 428
score: 99.20919095552884
patch: Iterator iter = ! res . has CaMeL Next ( ) ;
rank: 428
score: 99.2052993774414
patch: Iterator iter = res . v . entries ( ) . entries ( ) ;
rank: 428
score: 99.19834681919643
patch: Iterator iterator = res . entries . entries . iterator ( ) ;
rank: 428
score: 99.18340594951923
patch: Iterator < String >> iter = res . entries ( ) ;
rank: 428
score: 99.17391204833984
patch: if ( res . entries . size ( ) != 0 ) return res ;
rank: 429
score: 99.26218825120192
patch: this . entries = res . entries . iterator ( ) ;
rank: 429
score: 99.21181353400735
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . }
rank: 429
score: 99.208154296875
patch: Iterator iter = res . ! res . has CaMeL Next ( ) ;
rank: 429
score: 99.20527479383681
patch: Iterator iter = res . entries . Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 429
score: 99.18306477864583
patch: iterator = res . entries ( ) ;
rank: 429
score: 99.17371826171875
patch: Iterator entries = v . iterator ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 430
score: 99.26199776785714
patch: Iterator < int * : res . entries . iterator ( ) ;
rank: 430
score: 99.25784122242646
patch: synchronized ( iter ) { Iterator iter = res . entries . iterator ( ) ;
rank: 430
score: 99.2205810546875
patch: Iterator iter = exp . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 430
score: 99.21171061197917
patch: Collection iter = res . entries . iterator ( ) ;
rank: 430
score: 99.19773236443015
patch: Iterator < Real CaMeL Vector > iter : res . entries . iterator ( ) ;
rank: 430
score: 99.17364501953125
patch: Iterator iter ; try { iter = res . entries ( ) ;
rank: 431
score: 99.22006370907738
patch: for ( Iterator iter = list . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 431
score: 99.21129653033088
patch: res . add ( res ) ; Iterator iter = res . iterator ( ) ;
rank: 431
score: 99.20189557756696
patch: Iterator iter = $NUMBER$ : res . entries . iterator ( ) ;
rank: 431
score: 99.18291877297794
patch: Iterator < ] > iter = res . entries = res . entries ( ) ;
rank: 431
score: 99.17206169577206
patch: if ( res != null ) { res . entries = res . entries ; }
rank: 432
score: 99.26178385416667
patch: final Iterator iter = res . get . entries . iterator ( ) ;
rank: 432
score: 99.21891645951705
patch: Iterator iter = res . list . iterator ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 432
score: 99.2112325032552
patch: Iterator iter = res . max . iterator ( ) ;
rank: 432
score: 99.20095389229911
patch: Iterator iter = $STRING$ . entries ( ) . iterator ( ) ;
rank: 432
score: 99.19753099524456
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( $STRING$ ) ;
rank: 432
score: 99.17121717664931
patch: if ( res != null ) res . Iterator iter = v . iterator ( ) ;
rank: 433
score: 99.2613525390625
patch: Iterator iter = res . entries ( ) . iterator ( ) ; break ;
rank: 433
score: 99.25736999511719
patch: if ( iter . has CaMeL Next ( ) ) { return res ; }
rank: 433
score: 99.21884987571023
patch: Iterator iter = clone . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 433
score: 99.200927734375
patch: int size = res . get CaMeL Dimension ( ) ;
rank: 433
score: 99.19734700520833
patch: for ( iter = res . iterator ( ) ; iter . has CaMeL Next ( ) ; ) {
rank: 433
score: 99.18192291259766
patch: Iterator iter = new byte [ res . entries . iterator ( ) ] ;
rank: 433
score: 99.1706901999081
patch: synchronized ( res . entries ) { Iterator iter = res . iterator ( ) ;
rank: 434
score: 99.2613192471591
patch: final Iterator iter = entries . iterator ( ) ;
rank: 434
score: 99.25709533691406
patch: Iterator iter = new Iterator ( res . get CaMeL Dimension ( ) ) ;
rank: 434
score: 99.21875
patch: synchronized ( res ) { iter = res . entries . size ( ) ; }
rank: 434
score: 99.19704718338816
patch: Enumeration < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ( ) ;
rank: 434
score: 99.18156881893383
patch: Iterator iter = res . entries ( ) ; int iter . iterator ( ) ;
rank: 434
score: 99.17044830322266
patch: Iterator iter = res . entries ( ) . iterator ( ) ; 0 ;
rank: 435
score: 99.26131766183036
patch: Iterator iter = res . entries . size ( ) - 1 ;
rank: 435
score: 99.21851695667614
patch: Iterator iter = res . entries . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 435
score: 99.21060616629464
patch: Iterator iter = res . entries . Override . iterator ( ) ;
rank: 435
score: 99.2049051920573
patch: int res = v . get CaMeL Dimension ( ) ;
rank: 435
score: 99.19684709821429
patch: Iterator iter = res . entries : res . iterator ( ) ;
rank: 435
score: 99.1956787109375
patch: Iterator iter = in . entries . iterator ( ) ;
rank: 435
score: 99.18142700195312
patch: res . Iterator iter = res . entries ( ) ;
rank: 435
score: 99.17005333533653
patch: Object res = res . entries . get ( res ) ;
rank: 436
score: 99.2610595703125
patch: if ( res != null ) iter = res . entries ( ) ;
rank: 436
score: 99.21823556082589
patch: Iterator iter = this . res . list . iterator ( ) ;
rank: 436
score: 99.2047119140625
patch: Iterator iter = res . substring ( 1 ) . iterator ( ) ;
rank: 436
score: 99.19663492838542
patch: Iterator iter = res . entries . iterator ( ) ; System . iterator ( ) ;
rank: 436
score: 99.18063534007354
patch: Iterator iter = res . entries ( $NUMBER$ , null ) . iterator ( ) ;
rank: 436
score: 99.1699447631836
patch: Iterator iter = v ; while ( iter . has CaMeL Next ( ) )
rank: 437
score: 99.21791770241477
patch: Iterator entries = res . entries . iterator ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 437
score: 99.20993041992188
patch: Iterator iter = res . key . iterator ( ) ;
rank: 437
score: 99.20462036132812
patch: Iterator iter = res . true . iterator ( ) ;
rank: 437
score: 99.19999186197917
patch: Iterator iter = res . entries ) . entries . iterator ( ) ;
rank: 437
score: 99.1786750344669
patch: iter = res . entries ( ) ; iterator = res . entries ( ) ;
rank: 437
score: 99.169873046875
patch: synchronized ( this ) { Iterator iter = res . iterator ( ) ;
rank: 438
score: 99.25588553292411
patch: Iterator iter = res . entries . iterator ( ) ; else {
rank: 439
score: 99.20965576171875
patch: Iterator iter = res . entries . put . iterator ( ) ;
rank: 439
score: 99.2041015625
patch: Iterator iter = res . in . iterator ( ) ;
rank: 439
score: 99.19890485491071
patch: Iterator iter = res . copy ( ) . entries ( ) ;
rank: 439
score: 99.19633178710937
patch: Iterator iter = res . entries ( ) . Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 439
score: 99.19328756893383
patch: Iterator iter = res . entries . iterator ( ) ; synchronized ( this ) {
rank: 439
score: 99.17820111443015
patch: Iterator iter = false ; Iterator iter = res . entries . iterator ( ) ;
rank: 439
score: 99.16891043526786
patch: Iterator iter = res . iterator . iterator . iterator ( ) ;
rank: 440
score: 99.25519561767578
patch: v . set CaMeL Entry ( v . get CaMeL Entry ( ) ) ;
rank: 440
score: 99.21717180524554
patch: Iterator iter = res . get . list . iterator ( ) ;
rank: 440
score: 99.20949143629808
patch: Iterator iter = res . entries . iterator ( ) ; entries
rank: 440
score: 99.20402018229167
patch: Iterator < Real CaMeL Vector > res = entries . iterator ( ) ;
rank: 440
score: 99.19263712565105
patch: Iterator iter |= res . entries . iterator ( ) ;
rank: 441
score: 99.21715291341145
patch: Iterator iter = v . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 441
score: 99.2090705422794
patch: synchronized ( res ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 441
score: 99.20379231770833
patch: int < String > iter = res . entries . iterator ( ) ;
rank: 441
score: 99.19874482996323
patch: Iterator iter = res . entries . to CaMeL Array ( ) . ( ) ;
rank: 441
score: 99.19520635190217
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ( ) . entries ( ) ;
rank: 441
score: 99.19229125976562
patch: Iterator iter = res . iterator ( ) : res . entries ( ) ;
rank: 441
score: 99.17759602864584
patch: Iterator iter = res . entries ( ) ; copy ( res ) ;
rank: 441
score: 99.1686019897461
patch: Iterator iter ; try { iter = res . iterator . iterator ( ) ;
rank: 442
score: 99.25703648158482
patch: if ( res != null ) res . add ( res ) ;
rank: 442
score: 99.21707153320312
patch: res . set CaMeL Index ( res . get CaMeL Index ( ) ) ;
rank: 442
score: 99.20892740885417
patch: Iterator iter = ( > ) res . entries . iterator ( ) ;
rank: 442
score: 99.19838579963235
patch: Iterator iter = res . entries . index CaMeL Of ( $STRING$ ) . length ;
rank: 442
score: 99.19510904947917
patch: Iterator iter = out . entries . iterator ( ) ;
rank: 442
score: 99.17759076286765
patch: Iterator < / * ] > iter = res . entries . iterator ( ) ;
rank: 442
score: 99.1685726768092
patch: if ( res != null ) res = res . entries . entries . iterator ( ) ;
rank: 443
score: 99.25654153262867
patch: Iterator < String > iter = res . entries = res . entries ( ) ;
rank: 443
score: 99.21653238932292
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) continue ;
rank: 443
score: 99.20865631103516
patch: Iterator iter = res . entries . iterator ( ) ; iter < ) ;
rank: 443
score: 99.17697579520089
patch: Iterator iter = res . delete ( ) . iterator ( ) ;
rank: 443
score: 99.16834259033203
patch: if ( res . entries != null ) res . entries = new ) ;
rank: 444
score: 99.25406646728516
patch: Iterator iter = v . ebe CaMeL Multiply ( ) . iterator ( ) ;
rank: 444
score: 99.21628824869792
patch: Iterator iterator = res . list . iterator ( ) ;
rank: 444
score: 99.20818219866071
patch: / iter Iterator iter = res . entries . iterator ( ) ;
rank: 444
score: 99.20247395833333
patch: Set iter = res . entries . iterator ( ) ;
rank: 444
score: 99.19804382324219
patch: Iterator iter = res . get CaMeL Value ( ) . next ( ) ;
rank: 444
score: 99.1939697265625
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : v . entries . iterator ( ) )
rank: 444
score: 99.1915771484375
patch: Iterator iter = iter . advance ( ) ;
rank: 444
score: 99.17681415264423
patch: Iterator iter = res . entries ( ) ; case 1 :
rank: 444
score: 99.16817220052083
patch: if ( res != null ) res . Iterator iter = res . entries ( ) ;
rank: 445
score: 99.25404986213235
patch: Iterator iter = v [ 0 ] . entries ( ) . iterator ( ) ;
rank: 445
score: 99.21605160361842
patch: Iterator iter = res . list ; while ( iter . has CaMeL Next ( ) ) {
rank: 445
score: 99.19724527994792
patch: int value = v . get CaMeL Dimension ( ) ;
rank: 445
score: 99.1937255859375
patch: Iterator < String > iter = this . entries . iterator ( ) ;
rank: 445
score: 99.17633056640625
patch: Iterator < ] > iter = res . entries . iterator ( ) ; else
rank: 445
score: 99.16814108455883
patch: synchronized ( res ) { Iterator iter = v . entries . iterator ( ) ;
rank: 446
score: 99.25394984654018
patch: Iterator iter = res . entries . get . iterator ( ) ;
rank: 446
score: 99.2153564453125
patch: Iterator iter = res . remove ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 446
score: 99.20692661830357
patch: res . add ( res . entries . size ( ) ) ;
rank: 446
score: 99.19363536005434
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . entries ) . iterator ( ) ;
rank: 446
score: 99.17579752604166
patch: Iterator iter = res . entries ( ) . remove ( 0 ) ;
rank: 446
score: 99.16802509014423
patch: res . entries = res . get CaMeL Entries ( ) ;
rank: 447
score: 99.2558657997533
patch: entries . iterator ( ) . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 447
score: 99.25357055664062
patch: Iterator iter = res . entries ( ) [ ] . iterator ( ) ;
rank: 447
score: 99.20658052884616
patch: res . iterator = res . entries . iterator ( ) ;
rank: 447
score: 99.18988800048828
patch: Iterator iter = res . entries . iterator ( ) : res . entries ;
rank: 447
score: 99.17564392089844
patch: Iterator iter = res . get CaMeL Bytes ( ) . entries ( ) ;
rank: 447
score: 99.16794162326389
patch: if ( res == null ) throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ;
rank: 448
score: 99.25583783318015
patch: Iterator < Iterator < Iterator > iter = res . entries . iterator ( ) ;
rank: 448
score: 99.21485537574405
patch: for ( Iterator iterator = res . iterator ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 448
score: 99.20581772748162
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = res ;
rank: 448
score: 99.1964111328125
patch: Iterator iter = res . entries . entries . next ( ) ;
rank: 448
score: 99.19341750372024
patch: Iterator iter = ( Open CaMeL Map CaMeL Real CaMeL Vector ) this . res . iterator ( ) ;
rank: 448
score: 99.1753438313802
patch: Iterator [ ] entries = res . entries ( ) ;
rank: 448
score: 99.167529296875
patch: res . entries = new Iterator [ res . size ( ) ] ;
rank: 449
score: 99.25316619873047
patch: Iterator iter = res != null + v . get CaMeL Dimension ( ) ;
rank: 449
score: 99.21485392252605
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . res . has CaMeL Next ( ) )
rank: 449
score: 99.20566030649039
patch: Iterator iter = res . entries . iterator ( ) ; final
rank: 449
score: 99.20116315569196
patch: Iterator iter = res . length . entries . iterator ( ) ;
rank: 449
score: 99.17527262369792
patch: Iterator iter = value . entries . iterator ( ) ;
rank: 449
score: 99.16721062911184
patch: if ( res != null ) res . res = res . entries . get ( ) ;
rank: 450
score: 99.2551333778783
patch: Iterator iter = res . get ( res . entries . size ( ) - 1 ) ;
rank: 450
score: 99.25274658203125
patch: Iterator iter = v . entries . iterator ( ) ; for ( for (
rank: 450
score: 99.21448863636364
patch: Iterator iter = res . copy . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 450
score: 99.2049560546875
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = true ;
rank: 450
score: 99.20113118489583
patch: Iterator < ( > iter = res . entries . iterator ( ) ;
rank: 450
score: 99.1932373046875
patch: Iterator < Real CaMeL Vector > iter = this . res . iterator ( ) ;
rank: 450
score: 99.175048828125
patch: Iterator iter = res . entries ( ) ; -- iter . iterator ( ) ;
rank: 451
score: 99.251953125
patch: Iterator iter = v . entries ( ) != null . iterator ( ) ;
rank: 451
score: 99.20457356770834
patch: Iterator iter = this . res . entries . iterator ( ) ; ;
rank: 451
score: 99.2003662109375
patch: Iterator < Entry > iter = res . entries . size ( ) ;
rank: 451
score: 99.19572230747768
patch: Iterator iter = res . entries . 1 . iterator ( ) ;
rank: 451
score: 99.19321986607143
patch: iterator = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 451
score: 99.17474006204044
patch: Iterator < String > iter = res . entries ( ) . size ( ) ;
rank: 451
score: 99.1667121438419
patch: if ( res != null ) . Iterator iter = res . iterator ( ) ;
rank: 452
score: 99.25344412667411
patch: Iterator iter = res . entries . iterator ( ) - 0 ;
rank: 452
score: 99.21442205255681
patch: Iterator iter = res . read . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 452
score: 99.20320638020833
patch: Iterator iter iterator = res . entries ( ) . iterator ( ) ;
rank: 452
score: 99.20029296875
patch: Iterator iter = res . add ( res ) . iterator ( ) ;
rank: 452
score: 99.19491811899039
patch: Iterator iter = res ) . entries . iterator ( ) ;
rank: 452
score: 99.17447916666667
patch: Iterator size = res . entries . iterator ( ) ;
rank: 452
score: 99.1650390625
patch: Iterator iter 0 = res . entries ( ) . iterator ( ) ;
rank: 453
score: 99.25331025965073
patch: Iterator < Object > iter = res . get ( ) . entries ( ) ;
rank: 453
score: 99.25141457950367
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . entries ( this ) ;
rank: 453
score: 99.19306640625
patch: Iterator iter = res . entries . entries . iterator ( ) ; iterator . advance ( ) ;
rank: 453
score: 99.18772977941177
patch: Iterator iter = get CaMeL Dimension ( v . get CaMeL Dimension ( ) ) ;
rank: 453
score: 99.1739860983456
patch: Iterator < ] > iter = res . entries = res . iterator ( ) ;
rank: 453
score: 99.16483989514802
patch: if ( v != null ) { Iterator iter = res . entries . iterator ( ) ;
rank: 454
score: 99.25290814568015
patch: Iterator iter = res . get . entries ( ) . iterator ( ) ; }
rank: 454
score: 99.25132242838542
patch: Iterator iter = v . entries . entries ( ) ;
rank: 454
score: 99.21405584161931
patch: Iterator map = res . entries . iterator ( ) ; while ( map . has CaMeL Next ( ) )
rank: 454
score: 99.20161946614583
patch: Iterator iter = res . read . iterator ( ) ;
rank: 454
score: 99.19952799479167
patch: int < String > res = res . get CaMeL Dimension ( ) ;
rank: 454
score: 99.19342803955078
patch: return new Open CaMeL Map CaMeL Real CaMeL Vector ( res , this ) ;
rank: 454
score: 99.19291417738971
patch: Iterator < String > iter = this . entries . entries . iterator ( ) ;
rank: 454
score: 99.18719482421875
patch: Iterator iter = name . entries ( ) . iterator ( ) ;
rank: 454
score: 99.17342936197916
patch: Iterator iter = res . entries ( $NUMBER$ ) . close ( ) ;
rank: 454
score: 99.16470102163461
patch: Iterator < res . entries ( ) . iterator ( ) ;
rank: 455
score: 99.2521728515625
patch: final Iterator iter = entries . entries ( ) . iterator ( ) ;
rank: 455
score: 99.25079704733456
patch: Iterator iter = res . entries ( ) . entries ( ) . iterator ( )
rank: 455
score: 99.21393377130681
patch: Iterator iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 455
score: 99.19886997767857
patch: Iterator iter = v . entries . iterator ( ) ; ) {
rank: 455
score: 99.19271850585938
patch: int value = iter . Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 455
score: 99.19240851151316
patch: Iterator iter . advance ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 455
score: 99.1734149639423
patch: Iterator < T > iter = entries . iterator ( ) ;
rank: 455
score: 99.16468157087054
patch: Collection res = res . entries . entries . iterator ( ) ;
rank: 456
score: 99.21350815716912
patch: Iterator iter = res . get CaMeL Properties ( ) . iterator ( ) ; ;
rank: 456
score: 99.20139973958334
patch: Iterator iter = res . entries . iter ( ) ; iter ++ ;
rank: 456
score: 99.19877115885417
patch: int < int > res = res . entries . iterator ( ) ;
rank: 456
score: 99.19182942708333
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res .
rank: 456
score: 99.1646219889323
patch: Iterator iter = v . iterator . entries ( ) ;
rank: 457
score: 99.21344353170956
patch: Iterator iter = null ; while ( iter . has CaMeL Next ( ) ) {
rank: 457
score: 99.19827473958334
patch: Iterator < Integer > iter = res . entries . size ( ) ;
rank: 457
score: 99.19164225260417
patch: Iterator iter = res . entries $NUMBER$ ( ) . iterator ( ) ;
rank: 457
score: 99.17283412388393
patch: Iterator iter = res . entries ( ) . intern ( ) ;
rank: 457
score: 99.16447179457721
patch: Iterator iter = res [ res . size ( ) ] . iterator ( ) ;
rank: 458
score: 99.25152180989583
patch: final boolean iter = res . entries . iterator ( ) != null ;
rank: 458
score: 99.24964250837054
patch: Iterator iter = res . entries != null . iterator ( ) ;
rank: 458
score: 99.21343439275569
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) continue ;
rank: 458
score: 99.20125325520833
patch: for ( Iterator iter = res . iterator ( ) ;
rank: 458
score: 99.19146437872024
patch: Iterator < Open CaMeL Map CaMeL Entry > iter = res . entries ( ) . iterator ( ) ;
rank: 458
score: 99.16436089409723
patch: res . entries = new Iterator [ res . entries . size ( ) ] ; ;
rank: 459
score: 99.24867248535156
patch: res . set CaMeL Entry ( iter . has CaMeL Next ( ) ) ;
rank: 459
score: 99.2131680575284
patch: iter = res . list . iterator ( ) ;
rank: 459
score: 99.20100911458333
patch: Iterator iter ( res . entries ( ) . iterator ( ) ) ;
rank: 459
score: 99.19078153722427
patch: for ( while ( res . iterator ( ) . has CaMeL Next ( ) )
rank: 459
score: 99.1906494140625
patch: for ( final Iterator iter = res . entries . iterator ( ) ;
rank: 459
score: 99.16398540296052
patch: if ( v != null ) res . res = res . entries . iterator ( ) ;
rank: 460
score: 99.19071628736413
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( 0 ) ;
rank: 460
score: 99.19050598144531
patch: Iterator iter = res . entries . to CaMeL Array ( ) . length ;
rank: 460
score: 99.17155187270221
patch: Iterator < float < ] > iter = res . entries . iterator ( ) ;
rank: 460
score: 99.16365774054276
patch: synchronized ( this ) { Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 461
score: 99.21265811011905
patch: if ( res . entries != null ) { Iterator iter = res . entries . iterator ( ) ;
rank: 461
score: 99.19960239955357
patch: Iterator iter = res . entries . iterator ( ) ; continue ;
rank: 461
score: 99.1906405362216
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( 0 ) ;
rank: 461
score: 99.19010416666667
patch: Iterator iter = res . entries . entries ( ) . ( ) ;
rank: 461
score: 99.17152622767857
patch: Iterator iter = res . entries . value . iterator ( ) ;
rank: 461
score: 99.1633236533717
patch: Iterator iter = res . get CaMeL Classes ( ) . iterator ( ) ; while ( )
rank: 462
score: 99.24761352539062
patch: Iterator iter = iter . entries ( ) ;
rank: 462
score: 99.212646484375
patch: Iterator iter = list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 462
score: 99.19056114783653
patch: Iterator < iter = res . entries . iterator ( ) ;
rank: 462
score: 99.18338012695312
patch: Iterator entries = v . entries . iterator ( ) ;
rank: 462
score: 99.17146809895833
patch: Iterator * ] list = res . entries ( ) ;
rank: 462
score: 99.1629971590909
patch: Iterator iter = res . iterator ( ) ; )
rank: 463
score: 99.25084164268092
patch: final int entries = res . entries . iterator ( ) . iterator ( ) . length ;
rank: 463
score: 99.24726104736328
patch: try { res . set CaMeL Entry ( iter . advance ( ) ) ;
rank: 463
score: 99.21254475911458
patch: System . arraycopy ( res . entries , 0 , res . entries , 0 , v . entries . length ) ;
rank: 463
score: 99.19007873535156
patch: for ( final Open CaMeL Map CaMeL Real CaMeL Vector res : res ) {
rank: 463
score: 99.17132098858173
patch: Iterator < ] > iter = res . copy ( ) ;
rank: 463
score: 99.16260483685662
patch: if ( res . entries != null ) res . res = res . entries ;
rank: 464
score: 99.25083923339844
patch: Iterator iter = res . get . get ( ) . entries ( ) ;
rank: 464
score: 99.24716421274039
patch: Iterator iter = res . entries ( ) . iterator ( )
rank: 464
score: 99.2123690518466
patch: System . arraycopy ( res , 0 , res . entries , 0 , res . entries . length ) ;
rank: 464
score: 99.19829852764423
patch: Iterator iter = res . entries . iterator ( ) ; public
rank: 464
score: 99.19609375
patch: int < int > iter = res . get CaMeL Dimension ( ) ;
rank: 464
score: 99.19005237926136
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector > iter =
rank: 464
score: 99.18727111816406
patch: for ( Iterator iter = v . entries . entries . iterator ( ) ;
rank: 464
score: 99.18301156850961
patch: Iterator iter = res 1 . entries . iterator ( ) ;
rank: 464
score: 99.17125651041667
patch: Iterator iter = res . entries ( ) ; clone ( res ) ;
rank: 465
score: 99.24714660644531
patch: Iterator iter = res . has CaMeL Next ( ) . iterator ( ) ;
rank: 465
score: 99.19815266927084
patch: Iterator iter = res . entries . iterator ( ) ; / / ;
rank: 465
score: 99.19573974609375
patch: Iterator iter = res . iterator . has CaMeL Next ( ) ;
rank: 465
score: 99.1898883322011
patch: Iterator < Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = v . entries . iterator ( ) ;
rank: 465
score: 99.18290492466518
patch: Iterator iter >> res = res . entries . iterator ( ) ;
rank: 465
score: 99.17091587611607
patch: Iterator iter = res . reverse ( ) . iterator ( ) ;
rank: 465
score: 99.16220327524039
patch: Iterator iter = res . entries ( ) . iterator ( ;
rank: 466
score: 99.25077056884766
patch: Iterator iter = res . get CaMeL Priority ( ) . entries ( ) ;
rank: 466
score: 99.24574631911058
patch: Iterator iter = res [ $NUMBER$ ] . iterator ( ) ;
rank: 466
score: 99.19515991210938
patch: Iterator iter = res . res . size ( ) ;
rank: 466
score: 99.18979027157738
patch: Iterator < Real CaMeL Vector > iter = res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 466
score: 99.18707275390625
patch: int size = v . get CaMeL Dimension ( ) ;
rank: 466
score: 99.18275669642857
patch: int iter = res . get CaMeL Dimension ( ) . length ;
rank: 466
score: 99.16219753689236
patch: if ( v != null ) res . ) res . res . res . ) ;
rank: 467
score: 99.24416097005208
patch: Iterator iter = v . entries . iter ( ) ;
rank: 467
score: 99.19513811383929
patch: if ( res . get CaMeL Dimension ( ) != null ) {
rank: 467
score: 99.18958237591912
patch: Iterator < Long > iter = res . entries . entries . iterator ( ) ;
rank: 467
score: 99.1705322265625
patch: for ( Iterator iter : res . entries ( ) ) {
rank: 467
score: 99.16165597098214
patch: if ( v . is CaMeL Empty ( ) ) return res ;
rank: 468
score: 99.24979400634766
patch: Iterator < int > iter = res . entries . iterator ( ) ; else
rank: 468
score: 99.19509055397727
patch: Iterator iter = entries . iterator ( ) ; }
rank: 468
score: 99.18952287946429
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . Iterator ( ) ;
rank: 468
score: 99.18663611778847
patch: List Iterator iter = res . entries . iterator ( ) ;
rank: 468
score: 99.18228585379464
patch: Iterator iter = res . entries . iterator ( ) : res ;
rank: 468
score: 99.17046649639423
patch: Iterator < int > iter = res . entries ( ) ;
rank: 468
score: 99.16139131433823
patch: if ( res != null ) { Iterator iter = res . entries ( ) ;
rank: 469
score: 99.24971277573529
patch: Iterator < String > res = res . entries ( ) . iterator ( ) ;
rank: 469
score: 99.2431396484375
patch: Iterator iter = ebe CaMeL Multiply ( res ) . iterator ( ) ;
rank: 469
score: 99.19475446428571
patch: Iterator iter = ebe CaMeL Multiply . entries . size ( ) ;
rank: 469
score: 99.18950737847223
patch: Iterator iter = res . length ; while ( iter . has CaMeL Next ( ) )
rank: 469
score: 99.18650817871094
patch: Iterator iter = res . get CaMeL Index ( ) . entries ( ) ;
rank: 470
score: 99.24305943080357
patch: Iterator iter = res . entries = v . iterator ( ) ;
rank: 470
score: 99.21122602982955
patch: Collection res = res . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 470
score: 99.1889117697011
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this . res . entries . entries ( ) ;
rank: 470
score: 99.17034553079044
patch: synchronized ( res ) { Iterator iter = res . entries . entries ( ) ;
rank: 470
score: 99.16131232766544
patch: if ( res . res != null ) res . res = res . entries ;
rank: 471
score: 99.1884765625
patch: Iterator < boolean > iter = res . entries . entries . iterator ( ) ;
rank: 471
score: 99.16969401041666
patch: Iterator iter = res . entries ( $NUMBER$ ) . iter ( ) ;
rank: 471
score: 99.16103001644737
patch: if ( res . entries == null || res . entries . size ( ) == 0 )
rank: 472
score: 99.24232482910156
patch: Vector iter = v . get CaMeL Dimension ( ) . entries ( ) ;
rank: 472
score: 99.18488420758929
patch: do { Iterator iter = res . entries . iterator ( ) ;
rank: 472
score: 99.16928100585938
patch: Iterator iter = copy . entries . iterator ( ) ;
rank: 473
score: 99.24134063720703
patch: Vector entries = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 473
score: 99.21062622070312
patch: synchronized ( res ) { res . entries = res . entries . entries . iterator ( ) ;
rank: 473
score: 99.1884536743164
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this ) ;
rank: 473
score: 99.17887878417969
patch: Iterator iter = ( ( int ) res . entries . iterator ( ) ;
rank: 473
score: 99.16899557674633
patch: Iterator < ] < E > iter = res . entries . iterator ( ) ;
rank: 473
score: 99.16077532087054
patch: Collection res = res . iterator ( ) . next ( ) ;
rank: 474
score: 99.24861363002232
patch: boolean iter = res . entries . iterator ( ) != null ;
rank: 474
score: 99.24031066894531
patch: Iterator iter = res . entries ( ) . iterator ( ) ; System .
rank: 474
score: 99.21001642400569
patch: Iterator iter = res . add . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 474
score: 99.19498697916667
patch: Iterator iter = res . entries ( ) . iterator ( ) ; entries
rank: 474
score: 99.19295828683036
patch: int iter = res . entries . entries . iterator ( ) ;
rank: 474
score: 99.18816266741071
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = v . entries . size ( ) ;
rank: 474
score: 99.17861040900735
patch: Iterator iter = res . get CaMeL Entry ( iter . advance ( ) ) ;
rank: 474
score: 99.16050211588542
patch: Collection res = res . entries . iterator ( ) ;
rank: 475
score: 99.24857003348214
patch: final Iterator < Object > iter = res . entries ( ) ;
rank: 475
score: 99.23997497558594
patch: Iterator ( res . get CaMeL Dimension ( ) ) . iterator ( ) ;
rank: 475
score: 99.20976329985119
patch: Iterator iter = v . get ( res . get CaMeL Dimension ( ) ) . entries ( ) ;
rank: 475
score: 99.19370930989584
patch: Iterator < ) ; iterator = res . entries . iterator ( ) ;
rank: 475
score: 99.19254557291667
patch: int v = v . get CaMeL Dimension ( ) ;
rank: 475
score: 99.17826625279018
patch: Iterator iter = res . read ( ) . entries ( ) ;
rank: 475
score: 99.16865090762867
patch: Iterator iter = res . entries ( ) ; return res . entries ( ) ;
rank: 475
score: 99.1604755108173
patch: Iterator iter = res . iterator . iterator ( ) ) ;
rank: 476
score: 99.24823357077206
patch: Iterator < double > iter = res . entries ( ) . iterator ( ) ;
rank: 476
score: 99.23971993582589
patch: Iterator iter = res [ ] . entries . iterator ( ) ;
rank: 476
score: 99.20968191964286
patch: Iterator iter = res . size ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 476
score: 99.19348958333333
patch: Iterator iter = res . entries . iterator ( ) ; iterator else {
rank: 476
score: 99.17753383091518
patch: Iterator iter = iter . next ( ) . entries ( ) ;
rank: 476
score: 99.16863654641544
patch: Iterator < String < int > iter = res . entries . iterator ( ) ;
rank: 476
score: 99.16028941761364
patch: final Iterator iter = v . iterator ( ) ;
rank: 477
score: 99.2482048483456
patch: Iterator < ? > iterator = res . entries ( ) . iterator ( ) ;
rank: 477
score: 99.23924255371094
patch: Iterator iter = this . res . entries . iterator ( ) ; for (
rank: 477
score: 99.20953924005681
patch: iter = res . entries . iterator ( ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 477
score: 99.19339425223214
patch: Iterator iter = res . entries . matches . iterator ( ) ;
rank: 477
score: 99.19173990885416
patch: Iterator iter = res . entries . iterator ( ) ; return null ;
rank: 477
score: 99.18782766241776
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = res . entries ( ) ;
rank: 477
score: 99.18385416666666
patch: Iterator iter = , res = res . entries . iterator ( ) ;
rank: 477
score: 99.15943739149306
patch: if ( res != null ) res . ) res . res = res . entries ;
rank: 478
score: 99.24809713924633
patch: Iterator < long > iter = res . entries ( ) . iterator ( ) ;
rank: 478
score: 99.23834587545956
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ; *
rank: 478
score: 99.20932006835938
patch: Iterator iter = res . list . list ( ) . iterator ( ) ;
rank: 478
score: 99.19302571614584
patch: Iterator iter = res . entries ( ) ; Iterator iter = 0 ;
rank: 478
score: 99.18759591238839
patch: final final Iterator iter = res . entries . iterator ( ) ;
rank: 478
score: 99.1837870279948
patch: Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 478
score: 99.17717742919922
patch: Iterator iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( iter ) ;
rank: 478
score: 99.16794057992789
patch: Collection < String > iter = res . entries ( ) ;
rank: 478
score: 99.15932103207237
patch: if ( res . entries == null ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 479
score: 99.23773600260417
patch: Iterator iter = res != null ? res . entries . iterator ( )
rank: 479
score: 99.19298444475446
patch: Iterator iter . iterator = res . entries . iterator ( ) ;
rank: 479
score: 99.19071742466518
patch: Iterator iter = res . entries . iterator ( ) ; / :
rank: 479
score: 99.18755026424633
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : this . res ) {
rank: 479
score: 99.1675274188702
patch: Iterator iter = res . entries ( null , null ) ;
rank: 479
score: 99.1593081825658
patch: Iterator iter = res . iterator ( ) ; int size = res . size ( ) ;
rank: 480
score: 99.2472785500919
patch: Iterator < Character > iter = res . entries ( ) . iterator ( ) ;
rank: 480
score: 99.19051688058036
patch: Iterator iter = res . round . entries . iterator ( ) ;
rank: 480
score: 99.18753662109376
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector (
rank: 480
score: 99.17653111049107
patch: Iterator iter = res . min . entries . iterator ( ) ;
rank: 480
score: 99.16734967912946
patch: / * ] iter = res . entries . iterator ( ) ;
rank: 480
score: 99.15885416666667
patch: res . Iterator iter = res . iterator ( ) ;
rank: 481
score: 99.24686976841518
patch: Iterator iter = $NUMBER$ + res . entries . iterator ( ) ;
rank: 481
score: 99.23694661458333
patch: Iterator iter = res . equals ( $STRING$ ) . iterator ( ) ;
rank: 481
score: 99.2086181640625
patch: synchronized ( res . entries ) { iter = res . entries . iterator ( ) ; }
rank: 481
score: 99.18339029947917
patch: Iterator iter = res . entries . entries . length ;
rank: 481
score: 99.17613309972427
patch: Iterator iter = res . entries ( ) . entries ( ) . entries ( )
rank: 481
score: 99.1588134765625
patch: if ( res . entries . size ( ) > 0 )
rank: 482
score: 99.24651544744319
patch: final Iterator iter = res . size ( ) ;
rank: 482
score: 99.20836791992187
patch: Iterator iterator = list . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 482
score: 99.18252766927084
patch: Iterator iter = res . entries . entries ) . iterator ( ) ;
rank: 482
score: 99.17554728190105
patch: Iterator iter = iter . entries . iterator ( ) ;
rank: 482
score: 99.167236328125
patch: Iterator iter = res . entries ( ) ; break ;
rank: 482
score: 99.15863909040179
patch: Iterator iter = res . iterator ( ) ; synchronized ( res )
rank: 483
score: 99.2459357766544
patch: Iterator < Object > iter = res . get ( ) . iterator ( ) ;
rank: 483
score: 99.20818536931819
patch: Iterator iterator = this . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 483
score: 99.1897684733073
patch: Iterator iter = res . next . iterator ( ) ;
rank: 483
score: 99.18967110770089
patch: Iterator iter = res . entries . iterator ( ) ; do {
rank: 483
score: 99.18719773065476
patch: this . res . set CaMeL Entry ( iter . key ( ) , iter . value ( ) *
rank: 483
score: 99.15826885516827
patch: Iterator < ) > iter = res . iterator ( ) ;
rank: 484
score: 99.18662396599265
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : v . entries ) {
rank: 484
score: 99.18015834263393
patch: Iterator iter = res . add . entries . iterator ( ) ;
rank: 484
score: 99.17523956298828
patch: Iterator iter = res . size ( ) : res . entries ( ) ;
rank: 484
score: 99.165771484375
patch: Iterator iter = res . entries ( ) ; else
rank: 484
score: 99.15810546875
patch: if ( res != null && res . size ( ) > 0 )
rank: 485
score: 99.18954264322916
patch: Iterator iter = res . entries . has CaMeL Next ( ) ; {
rank: 485
score: 99.18625217013889
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) { {
rank: 485
score: 99.16537039620536
patch: Iterator value = res . entries ( ) . iterator ( ) ;
rank: 485
score: 99.15754917689732
patch: Iterator iter = res . entries ( . size ( ) ) ;
rank: 486
score: 99.24391392299107
patch: final Iterator < Iterator > iter = res . entries ( ) ;
rank: 486
score: 99.23440987723214
patch: int iter = this . res . entries . iterator ( ) ;
rank: 486
score: 99.18938802083333
patch: Iterator iter = res . get CaMeL Dimension ( iter . length ) ;
rank: 486
score: 99.18922526041666
patch: Iterator iter = res . entries . iterator ( ) ; / / /
rank: 486
score: 99.18577991832386
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector > entries ;
rank: 486
score: 99.17959415211396
patch: if ( false ) { Iterator iter = res . entries . iterator ( ) ;
rank: 486
score: 99.15719443873355
patch: Iterator iter = v . iterator ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 487
score: 99.23401692708333
patch: Iterator iter = v [ 1 ] . entries . iterator ( ) ;
rank: 487
score: 99.20773111979166
patch: Iterator iter = res . list ( 0 ) . iterator ( ) ;
rank: 487
score: 99.18912760416667
patch: Iterator iter = Math . list ( res . entries ( ) ) ;
rank: 487
score: 99.18907819475446
patch: Iterator iter = res . clone ( ) . size ( ) ;
rank: 487
score: 99.17909342447916
patch: Iterator iter = res . contains ( $STRING$ ) . iterator ( ) ;
rank: 487
score: 99.16512044270833
patch: Iterator end = res . entries . iterator ( ) ;
rank: 487
score: 99.15655876608456
patch: if ( res . res != null ) res . res . res = res ;
rank: 488
score: 99.24357335707721
patch: Iterator < float [ ] > iter = res . entries . iterator ( ) ;
rank: 488
score: 99.20771135602679
patch: Iterator iter = res . set . entries . iterator ( ) ;
rank: 488
score: 99.18842022235577
patch: Iterator > iter = res . entries . iterator ( ) ;
rank: 488
score: 99.18532396399456
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iterator = res . entries ( ) . iterator ( ) ;
rank: 488
score: 99.16502967247597
patch: Iterator iter = res . entries res . iterator ( ) ;
rank: 488
score: 99.15601695667614
patch: Iterator iter = res ) . iterator ( ) ;
rank: 489
score: 99.2430060891544
patch: Iterator < Number > iter = res . entries ( ) . iterator ( ) ;
rank: 489
score: 99.23371124267578
patch: int iterator = res . get CaMeL Dimension ( ) . entries ( ) ;
rank: 489
score: 99.20750517003677
patch: Iterator iter = res . entries [ res . entries . size ( ) ] ;
rank: 489
score: 99.18839518229167
patch: Iterator iter = res . end . iterator ( ) ;
rank: 489
score: 99.18754359654018
patch: Iterator iter = res . get = res . entries ( ) ;
rank: 489
score: 99.18520682198661
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res )
rank: 489
score: 99.16428920200893
patch: Iterator iter = res . entries ( ) ; for ( ) {
rank: 490
score: 99.24288736979166
patch: final int [ ] iterator = res . entries . iterator ( ) ;
rank: 490
score: 99.23353068033855
patch: Vector iter = res . get CaMeL Dimension ( ) ;
rank: 490
score: 99.20730590820312
patch: Iterator iter = v . clone ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 490
score: 99.18623046875
patch: Iterator iter = res . entries . iter ( ) ; = $NUMBER$ ;
rank: 490
score: 99.18446702223558
patch: for ( Real CaMeL Vector v : res . entries ) {
rank: 490
score: 99.17312186104911
patch: Iterator iter = res . min ( ) . iterator ( ) ;
rank: 490
score: 99.16426304408482
patch: int iterator = res . entries ( ) . iterator ( ) ;
rank: 490
score: 99.15541178385416
patch: Iterator < ? extends res > iter = res . iterator ( ) ;
rank: 491
score: 99.20720880681819
patch: Iterator iter = res . list . iterator ( ) ; if ( iter . has CaMeL Next ( ) )
rank: 491
score: 99.18731689453125
patch: iter . advance ( v . get CaMeL Dimension ( ) ) ;
rank: 491
score: 99.18584333147321
patch: Iterator iter = res . entries . iterator ( ) ; iterator *
rank: 491
score: 99.184326171875
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res ) { iter . advance ( ) ;
rank: 491
score: 99.17579752604166
patch: Iterator iter = res . . entries . entries . iterator ( ) ;
rank: 491
score: 99.17305210658482
patch: Iterator iter = this . this . entries . iterator ( ) ;
rank: 491
score: 99.16393229166667
patch: synchronized ( res ) { Iterator iter = entries . iterator ( ) ;
rank: 491
score: 99.1546630859375
patch: if ( v . entries != null && v . entries . size ( ) > 0 )
rank: 492
score: 99.24208984375
patch: Iterator < String > iter = entries . entries . iterator ( ) ;
rank: 492
score: 99.18553815569196
patch: Iterator iter = res . close ( ) . iterator ( ) ;
rank: 492
score: 99.18333899456522
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries [ ) . iterator ( ) ;
rank: 492
score: 99.17552274816177
patch: int value = ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 492
score: 99.17298177083333
patch: Iterator < Real CaMeL Vector : res . entries . iterator ( ) ;
rank: 492
score: 99.15465545654297
patch: res . entries [ res . entries . length - 1 ] = res ;
rank: 493
score: 99.23270961216518
patch: Iterator iter = data . entries ( ) . iterator ( ) ;
rank: 493
score: 99.20607688210227
patch: Iterator res = res . list . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 493
score: 99.18487141927083
patch: Iterator < ? > iter = res . entries . entries ( ) ;
rank: 493
score: 99.18319541529605
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = v . entries ( ) ;
rank: 493
score: 99.17544119698661
patch: Iterator iter = res . entries . entries ( ) . length ;
rank: 493
score: 99.1632941750919
patch: Iterator < ] < Iterator > iter = res . entries . iterator ( ) ;
rank: 494
score: 99.24152688419117
patch: Iterator < Class > iter = res . entries ( ) . iter ( ) ;
rank: 494
score: 99.20598810369319
patch: res . entries = res . entries . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 494
score: 99.18636380709134
patch: iter . iterator ( ) . has CaMeL Next ( ) ;
rank: 494
score: 99.18459647042411
patch: Iterator iter . iter = res . entries . iter ( ) ;
rank: 494
score: 99.1831287202381
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries ( ) .
rank: 494
score: 99.16288539341518
patch: final Iterator < ] > iter = res . entries ( ) ;
rank: 494
score: 99.15436662946429
patch: if ( res . size ( ) > 0 ) return res ;
rank: 495
score: 99.20573286576705
patch: Iterator iter = v . split . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 495
score: 99.18600027901786
patch: if ( v . get CaMeL Dimension ( ) != null ) {
rank: 496
score: 99.18397216796875
patch: Iterator iter = entries . iter ( ) ;
rank: 496
score: 99.17185872395834
patch: Iterator iter = res . index CaMeL Of ( int . length ) ;
rank: 496
score: 99.15320542279412
patch: if ( res != null ) { Iterator iter = v . iterator ( ) ;
rank: 497
score: 99.23070475260417
patch: Iterator iter = ebe CaMeL Multiply ( this ) . iterator ( ) ;
rank: 497
score: 99.20441228693181
patch: I iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 497
score: 99.18351236979167
patch: Iterator iter = res . entries . iter ( ) ; iterator -- ;
rank: 497
score: 99.18212018694196
patch: Iterator < float ) = res . entries . iterator ( ) ;
rank: 497
score: 99.1731689453125
patch: Iterator iter = res . entries entries . entries . iterator ( ) ;
rank: 497
score: 99.16245680588942
patch: this . entries . iterator ( ) . iterator ( ) ;
rank: 497
score: 99.15314592633929
patch: Collection res = res . entries ( ) . iterator ( ) ;
rank: 498
score: 99.24018012152777
patch: final Iterator < T > iter = res . entries ( ) . iterator ( ) ;
rank: 498
score: 99.23069661458334
patch: for ( Real CaMeL Vector res : res . entries ( ) ) {
rank: 498
score: 99.20414653577302
patch: Iterator iter = for . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 498
score: 99.18349783761161
patch: / / Iterator iter = res . entries . iterator ( ) ;
rank: 498
score: 99.1833251953125
patch: Iterator iter ; while ( iter . has CaMeL Next ( ) ) {
rank: 498
score: 99.18138363486842
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ( ) .
rank: 498
score: 99.15266498766448
patch: if ( res . entries != null && res . entries . size ( ) != 0 )
rank: 499
score: 99.2301025390625
patch: Iterator iter = res . entries . iterator ( ) ; finally {
rank: 499
score: 99.1832275390625
patch: Iterator iter ; Iterator iter = res . entries . iter ( ) ;
rank: 499
score: 99.1813495342548
patch: Iterator ( iter = res . entries . iterator ( ) ;
rank: 499
score: 99.16192626953125
patch: Iterator [ ] iter = res . entries ( ) ;
rank: 500
score: 99.23972865513393
patch: Iterator iter = 0 . entries ( ) . iterator ( ) ;
rank: 500
score: 99.229736328125
patch: Iterator iter = res . entries ( ) [ $NUMBER$ ] . iterator ( ) ;
rank: 500
score: 99.18260846819196
patch: Iterator iter = res . abs ( ) . iterator ( ) ;
rank: 500
score: 99.18075125558036
patch: Iterator iter = this . res . entries . size ( ) ;
rank: 500
score: 99.1713623046875
patch: Iterator iter = res . add ( this ) . iterator ( ) ;
rank: 500
score: 99.16188401442308
patch: Iterator < String > iter = res . copy ( ) ;
rank: 500
score: 99.15149943033855
patch: try { Iterator iter = v . iterator ( ) ;
rank: 501
score: 99.20299574908088
patch: Iterator iter = Math . abs ( res . entries . size ( ) ) ;
rank: 501
score: 99.18260091145834
patch: Iterator iter = 0 ; Iterator iter = res . entries ( ) ;
rank: 501
score: 99.18077328330592
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter . has CaMeL Next ( ) ;
rank: 501
score: 99.18072040264423
patch: entries . iterator ( ) . has CaMeL Next ( ) ;
rank: 501
score: 99.17088971819196
patch: for ( Iterator iter = res . entries . size ( ) ;
rank: 501
score: 99.15096609933036
patch: Iterator iter = res . iterator . iterator ( ) - 1 ;
rank: 502
score: 99.18257359095982
patch: Iterator iter ; iter = res . entries . iterator ( ) ;
rank: 502
score: 99.18069893973214
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . iterator ( ) ) ;
rank: 502
score: 99.16181497012867
patch: Iterator iter = res . load ( res . get CaMeL Name ( ) ) ;
rank: 502
score: 99.15060424804688
patch: Collection res = res . entries ( ) ;
rank: 503
score: 99.23857116699219
patch: Iterator iter = res . get CaMeL V ( ) . entries ( ) ;
rank: 503
score: 99.22879791259766
patch: Object iter = res . get CaMeL Dimension ( ) . entries ( ) ;
rank: 503
score: 99.18234487680289
patch: Iterator iter = ( Iterator ) res . next ( ) ;
rank: 503
score: 99.18047223772321
patch: Iterator iter = v . entries . has CaMeL Next ( ) ;
rank: 503
score: 99.16181291852679
patch: int iter = res . res . entries . iterator ( ) ;
rank: 503
score: 99.15057779947917
patch: Iterator < Iterator < E > iter = res . iterator ( ) ;
rank: 504
score: 99.23808208264802
patch: Iterator < Iterator < String > iter = res . entries ( ) . iterator ( ) ;
rank: 504
score: 99.22843715122768
patch: Iterator iter = res . entries . iterator ( ) ; * *
rank: 504
score: 99.18213762555804
patch: Iterator . Iterator iter = res . entries . iterator ( ) ;
rank: 504
score: 99.16156475360577
patch: Iterator iter ; Iterator iter = res . entries ( ) ;
rank: 505
score: 99.17985395951705
patch: Iterator iter = res . entries != null ? res . entries . entries . iterator ( ) : null ;
rank: 505
score: 99.17972237723214
patch: Iterator iter = entries . trim ( ) . iterator ( ) ;
rank: 505
score: 99.16785386029412
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( ) != null
rank: 505
score: 99.16136678059895
patch: / * Iterator iter = res . entries ( ) ;
rank: 505
score: 99.14976283482143
patch: Iterator iter = v . entries ( . iterator ( ) ) ;
rank: 506
score: 99.23712565104167
patch: List < Object > iter = res . entries . iterator ( ) ;
rank: 506
score: 99.22809196920956
patch: Iterator iter = ebe CaMeL Multiply ( v . get CaMeL Dimension ( ) ) ;
rank: 506
score: 99.20195456112133
patch: Iterator iter = res . get CaMeL Entries ( ) . iterator ( ) ; ;
rank: 506
score: 99.18048565204327
patch: Iterator iter = res . entries ( ) ; = null ;
rank: 506
score: 99.16751534598214
patch: Iterator iter = res . entries . iterator ( ) * $NUMBER$ ;
rank: 506
score: 99.16122000558036
patch: Iterator iter = res . entries ( ) ; trim ( ) ;
rank: 506
score: 99.1492919921875
patch: Iterator < ? extends Object > iter = res . iterator ( ) ;
rank: 507
score: 99.2275390625
patch: int iter = res . get CaMeL Dimension ( ) . entries . length ;
rank: 507
score: 99.20133463541667
patch: Iterator iter = res . get ( res . size ( ) - 1 ) . iterator ( ) ;
rank: 507
score: 99.170166015625
patch: try { Iterator iter = v . entries . iterator ( ) ;
rank: 507
score: 99.16642543247768
patch: int size = res . get CaMeL Dimension ( ) . length ;
rank: 507
score: 99.16099039713542
patch: Iterator next = res . entries . iterator ( ) ;
rank: 507
score: 99.14898212139423
patch: Iterator < Integer > iter = v . iterator ( ) ;
rank: 508
score: 99.22744315011161
patch: Iterator iter = key . entries ( ) . iterator ( ) ;
rank: 508
score: 99.20115152994792
patch: synchronized ( res . entries ) { iter = res . entries . iterator ( ) ;
rank: 508
score: 99.17795632102273
patch: Iterator iter = res . size ( ) ; ;
rank: 508
score: 99.16639709472656
patch: Iterator iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( v ) ;
rank: 508
score: 99.16094970703125
patch: Iterator iter = res . entries ( $NUMBER$ ) . iterator ( ) ; else
rank: 508
score: 99.14835611979167
patch: Iterator iter = res . iterator ( ) ; null ;
rank: 509
score: 99.23666221217105
patch: final boolean iter = res . entries . iterator ( ) . iterator ( ) != null ;
rank: 509
score: 99.20105997721355
patch: for ( Iterator iterator = res . entries . iterator ( ) ; iterator . has CaMeL Next ( ) ; ) {
rank: 509
score: 99.17971567007211
patch: Iterator iter = res . entries $NUMBER$ . iterator ( ) ;
rank: 509
score: 99.1770731608073
patch: Object res = res . get CaMeL Dimension ( ) ;
rank: 509
score: 99.1609219637784
patch: final int iter = res . entries ( ) ;
rank: 509
score: 99.1478271484375
patch: Iterator iter = res . entries ( ) . iterator ( ) ; int ;
rank: 510
score: 99.2254305752841
patch: Iterator iter = res . entries . iterator ( )
rank: 510
score: 99.2008565266927
patch: System . arraycopy ( res . entries . size ( ) , 0 , res . entries . size ( ) ) ;
rank: 510
score: 99.17660086495536
patch: Iterator iter = res . read . entries . iterator ( ) ;
rank: 510
score: 99.14776611328125
patch: Iterator iter = v . iterator ( ) ; while ( ; )
rank: 511
score: 99.22538757324219
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector [ ] ;
rank: 511
score: 99.20082600911458
patch: Iterator list = res . entries . iterator ( ) ;
rank: 511
score: 99.17823137555804
patch: Iterator iter = res . entries . iterator ( ) ; else ;
rank: 511
score: 99.17579752604166
patch: Iterator iter = res . entries . iterator ( ) ; for ( }
rank: 511
score: 99.16849190848214
patch: Iterator iter = v . entries . entries . size ( ) ;
rank: 511
score: 99.16567993164062
patch: Iterator iter = name . entries . iterator ( ) ;
rank: 511
score: 99.16013881138393
patch: final int < ] > entries = res . entries ( ) ;
rank: 512
score: 99.23607720269098
patch: final Iterator < Integer > iter = res . entries ( ) . iterator ( ) ;
rank: 512
score: 99.22451782226562
patch: Iterator iter = res . entries ( ) . iterator ( ) * 0 ;
rank: 512
score: 99.20068359375
patch: Iterator iter = res . map ; while ( iter . has CaMeL Next ( ) )
rank: 512
score: 99.1785198709239
patch: for ( iter = v . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; ) {
rank: 512
score: 99.17784772600446
patch: Iterator iter = res . entries . end . iterator ( ) ;
rank: 512
score: 99.17519705636161
patch: Iterator iter = res . check CaMeL Vector CaMeL Dimensions ( ) ;
rank: 512
score: 99.16794002757354
patch: if ( true ) { Iterator iter = res . entries . iterator ( ) ;
rank: 512
score: 99.16566685267857
patch: Iterator iter = res . max . entries . iterator ( ) ;
rank: 512
score: 99.15969848632812
patch: Iterator iter = res . entries ( - 1 ) ;
rank: 513
score: 99.22383626302083
patch: Iterator iter = entries [ 0 ] . entries . iterator ( ) ;
rank: 513
score: 99.17836626838235
patch: Enumeration < Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 513
score: 99.17576381138393
patch: Iterator iter = res . entries . iterator ( ) ; iter .
rank: 513
score: 99.17516072591145
patch: Iterator res = v . entries . iterator ( ) ;
rank: 513
score: 99.1675274188702
patch: for ( iter = res . entries . iterator ( ) ;
rank: 513
score: 99.14718288845486
patch: if ( res != null ) Iterator iter = res . iterator . iterator ( ) ;
rank: 514
score: 99.22356305803571
patch: Iterator iter = super . entries ( ) . iterator ( ) ;
rank: 514
score: 99.20005493164062
patch: Iterator iter = res . entries ; while ( iter . has CaMeL Next ( ) ) { )
rank: 514
score: 99.17814127604167
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries . entries ) {
rank: 514
score: 99.16321672712054
patch: Iterator iter = res . entries . iterator ( ) / 1 ;
rank: 514
score: 99.159619140625
patch: Iterator iter = res . entries ( ) ; int iter = null ;
rank: 514
score: 99.14678276909723
patch: if ( res . res != null ) res . res = res . entries . ;
rank: 515
score: 99.23525390625
patch: Iterator < int > iter = res . entries . iter ( ) ;
rank: 515
score: 99.22340393066406
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . iter ( ) ;
rank: 515
score: 99.1743672688802
patch: Iterator iter = entries . has CaMeL Next ( ) ;
rank: 515
score: 99.16301413143383
patch: Iterator iter = res [ 0 ] . entries ( ) . entries ( ) ;
rank: 515
score: 99.15935407366071
patch: res . load ( res . get CaMeL Name ( ) ) ;
rank: 515
score: 99.14666389016544
patch: if ( res . entries != null && res . entries . size ( ) ;
rank: 516
score: 99.23413899739583
patch: Iterator < int > iter = res . entries . size ( ) ;
rank: 516
score: 99.19908905029297
patch: synchronized ( this ) { iter = res . entries . iterator ( ) ;
rank: 516
score: 99.17739470108695
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( data ) ;
rank: 516
score: 99.17365264892578
patch: Iterator iter . iterator ( ) ;
rank: 516
score: 99.1663818359375
patch: Iterator iter = res * this . entries . iterator ( ) ;
rank: 516
score: 99.15933931790866
patch: Enumeration < ] > iter = res . entries ( ) ;
rank: 517
score: 99.23375746783088
patch: Iterator < Object > iter = res . entries = res . iterator ( ) ;
rank: 517
score: 99.2215576171875
patch: res . set CaMeL Entry ( iter . key ( ) ) ;
rank: 517
score: 99.17727793817934
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries . entries ( ) ) {
rank: 517
score: 99.17322794596355
patch: entries iter = res . entries . iterator ( ) ;
rank: 517
score: 99.16260782877605
patch: Iterator iter = res . is CaMeL Empty ( ) ;
rank: 517
score: 99.15883382161458
patch: try { Iterator iter = res . entries ( ) ;
rank: 518
score: 99.23369284237133
patch: Iterator < String > iter = res . copy ( ) . iterator ( ) ;
rank: 518
score: 99.1982177734375
patch: f = res . entries . iterator ( ) . next ( ) ;
rank: 518
score: 99.17320760091145
patch: Iterator iter = res . false . iterator ( ) ;
rank: 518
score: 99.17234584263393
patch: try ; Iterator iter = res . entries . iterator ( ) ;
rank: 518
score: 99.1644775390625
patch: Iterator iter advance = res . entries . entries . iterator ( ) ;
rank: 518
score: 99.1624755859375
patch: Iterator iter = res . name . entries . iterator ( ) ;
rank: 518
score: 99.15875651041667
patch: Iterator iter = res . entries ( ) . parse ( res ) ;
rank: 519
score: 99.23337227957589
patch: Iterator iter = res . entries . iterator ( ) - $NUMBER$ ;
rank: 519
score: 99.17307535807292
patch: Iterator iter = res . length . size ( ) ;
rank: 519
score: 99.16242327008929
patch: Iterator iter = start . entries ( ) . iterator ( ) ;
rank: 519
score: 99.15858968098958
patch: int entries . iterator ( ) . iterator ( ) ;
rank: 519
score: 99.14468819754464
patch: if ( res != null ) res . entries = new ) ;
rank: 520
score: 99.22025844029018
patch: Iterator iter = this . entries . iterator ( ) ; for (
rank: 520
score: 99.17682439630681
patch: Iterator iter = ! res . iterator ( ) ;
rank: 520
score: 99.17189243861607
patch: Iterator iter = res . entries . reverse . iterator ( ) ;
rank: 520
score: 99.16019694010417
patch: Iterator iter = res . entries . entries . iterator ( ) 1 ;
rank: 520
score: 99.143798828125
patch: if ( res != null ) res . entries = res . entries ( ) ;
rank: 521
score: 99.19642740885416
patch: Iterator iter = ( int ) res . entries . iterator ( ) ;
rank: 521
score: 99.17667882582721
patch: Iterator < Class > iter = res . entries . entries . iterator ( ) ;
rank: 521
score: 99.1707294170673
patch: iter Iterator iter = res . entries . iterator ( ) ;
rank: 521
score: 99.15814615885417
patch: Iterator iter = res . entries ( ) ; int iterator = 0 ;
rank: 521
score: 99.14351399739583
patch: Iterator iter = res . iterator . next ( ) ;
rank: 522
score: 99.17667388916016
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : v . entries )
rank: 522
score: 99.17139689127605
patch: Iterator iter = res . entries . clone ( ) ;
rank: 522
score: 99.17066446940105
patch: Iterator iter = res . entries . list ( ) ;
rank: 522
score: 99.16234479631696
patch: return new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 522
score: 99.1579948874081
patch: / * / Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 522
score: 99.14291817801339
patch: if ( v . size ( ) == 0 ) return res ;
rank: 523
score: 99.2322265625
patch: Iterator < Object > res = res . entries . iterator ( ) ;
rank: 523
score: 99.21908569335938
patch: Iterator iter = res != null . entries ( ) ;
rank: 523
score: 99.1953633626302
patch: Iterator iter = data . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 523
score: 99.17663043478261
patch: if ( res != null ) res . set CaMeL Entry ( Open CaMeL Map CaMeL Real CaMeL Vector . get CaMeL
rank: 523
score: 99.17135416666666
patch: Iterator iter = res . entries . iterator ( ) ; ) { {
rank: 523
score: 99.169921875
patch: Iterator iter = new res . entries . iterator ( ) ;
rank: 523
score: 99.16226196289062
patch: for ( Iterator iter = res . size ( ) ;
rank: 523
score: 99.15879911534927
patch: Iterator iter ++ ; while ( iter = res . entries . iterator ( ) ;
rank: 523
score: 99.15733924278847
patch: this . res . iterator ( ) . iterator ( ) ;
rank: 523
score: 99.14250352647569
patch: if ( res != null ) res . res = res . entries . entries . ;
rank: 524
score: 99.23187725360577
patch: Iterator < int > iter = entries . iterator ( ) ;
rank: 524
score: 99.17124245383523
patch: Iterator iter = res . iterator ( ) ; }
rank: 524
score: 99.16860727163461
patch: Iterator iter iter = res . entries . iter ( ) ;
rank: 524
score: 99.1619873046875
patch: Iterator iter = res . contains . iterator ( ) ;
rank: 524
score: 99.15732046274039
patch: final int iterator = res . entries . size ( ) ;
rank: 524
score: 99.14206764914773
patch: res . entries = res . entries . entries ;
rank: 525
score: 99.23082682291667
patch: Iterator < Object > iter : res . entries . iterator ( ) ;
rank: 525
score: 99.1949971516927
patch: for ( Iterator iter = v . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; ) {
rank: 525
score: 99.1765869140625
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = null ;
rank: 525
score: 99.17102922712054
patch: Iterator iter = v . this . entries . iterator ( ) ;
rank: 525
score: 99.1615966796875
patch: Open CaMeL Map CaMeL Real CaMeL Vector res ( res * this ) ;
rank: 525
score: 99.15838623046875
patch: * / Iterator iter = res . entries . iterator ( ) ;
rank: 525
score: 99.156494140625
patch: Iterator iter = res . entries ( $NUMBER$ ) ;
rank: 525
score: 99.141845703125
patch: if ( res . entries . iterator ( ) . has CaMeL Next ( ) ) { )
rank: 526
score: 99.21859305245536
patch: Iterator iter = $NUMBER$ . entries ( ) . iterator ( ) ;
rank: 526
score: 99.19388020833334
patch: Iterator iter = res . list ( 1 ) . iterator ( ) ;
rank: 526
score: 99.17648494944854
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector . Iterator ) ;
rank: 526
score: 99.17090782752403
patch: Iterator iter = res . entries . size ( ) ; {
rank: 526
score: 99.16737717848558
patch: Iterator iter = ( Iterator ) entries . iterator ( ) ;
rank: 526
score: 99.15607561383929
patch: Iterator iter = res . value ( ) . iterator ( ) ;
rank: 526
score: 99.14154459635417
patch: Iterator iter = v . entries . iterator ( ) ; while ( )
rank: 527
score: 99.21832682291667
patch: final Real CaMeL Vector res = new Real CaMeL Vector ( this ) ;
rank: 527
score: 99.17637567934783
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) this . res ) . iterator ( ) ;
rank: 527
score: 99.16714041573661
patch: Iterator iter = res . entries ( ) . Iterator ( ) ;
rank: 527
score: 99.1611328125
patch: for ( Iterator iter = this . entries . iterator ( ) ;
rank: 527
score: 99.15582744891827
patch: final Iterator iter = res . map . iterator ( ) ;
rank: 527
score: 99.14115825452302
patch: Iterator iter = v . entries ( ) ; Iterator iter = v . iterator ( ) ;
rank: 528
score: 99.22971017020089
patch: Iterator < Iterator iter = res . entries . iterator ( ) ;
rank: 528
score: 99.1704852764423
patch: Iterator iter = iter . has CaMeL Next ( ) ; {
rank: 528
score: 99.16070149739583
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . add ( res ) ;
rank: 528
score: 99.15512520926339
patch: Iterator iter = res . entries ( ) . list ( ) ;
rank: 528
score: 99.14071994357639
patch: int iter = res . entries . size ( ) ; while ( iter < iter )
rank: 529
score: 99.2296875
patch: Iterator < Exception > iter = res . entries . iterator ( ) ;
rank: 529
score: 99.2176005045573
patch: int iter = iter . has CaMeL Next ( ) ;
rank: 529
score: 99.19216918945312
patch: for ( int iterator = res . entries . size ( ) ; iterator . has CaMeL Next ( ) ; ) {
rank: 529
score: 99.17601860894098
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : v . entries ( ) )
rank: 529
score: 99.17042893629808
patch: Iterator ] res = res . entries . iterator ( ) ;
rank: 529
score: 99.16600545247395
patch: Iterator iter . iter = res . iterator ( ) ;
rank: 530
score: 99.2291971842448
patch: Iterator iter = res . entries ( ) != null ;
rank: 530
score: 99.19110107421875
patch: synchronized ( res ) { iter = res . entries . size ( ) ;
rank: 530
score: 99.17559259588069
patch: for ( iter = res . entries . entries ( ) ; iter . has CaMeL Next ( ) ; )
rank: 530
score: 99.1649169921875
patch: Iterator iter = res . entries . split ( ) ;
rank: 531
score: 99.22914033777573
patch: Iterator < Iterator < Entry > iter = res . entries . iterator ( ) ;
rank: 531
score: 99.18989643297698
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( )
rank: 531
score: 99.17524799547698
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . length ;
rank: 531
score: 99.16893659319196
patch: for ( while ( iter . has CaMeL Next ( ) ) {
rank: 531
score: 99.16477748325893
patch: iterator . Iterator iter = res . entries . iterator ( ) ;
rank: 531
score: 99.15998186383929
patch: Iterator iter = res . entries . ( ) . ( ) ;
rank: 531
score: 99.13983917236328
patch: Iterator iter = res . iterator ( ) ; this . res = res ;
rank: 532
score: 99.22901826746323
patch: Iterator < ) [ ] > iter = res . entries . iterator ( ) ;
rank: 532
score: 99.21473039899554
patch: Iterator iter = res . entries . iterator ( ) * 0 ;
rank: 532
score: 99.17486281622024
patch: Iterator iter = . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 532
score: 99.1643778483073
patch: for ( Iterator iter = res . entries ( ) ;
rank: 532
score: 99.15312194824219
patch: Iterator iter = res . entries . iterator ( ) ; boolean < ] :
rank: 532
score: 99.13981119791667
patch: Iterator < Iterator < Integer > iter = res . iterator ( ) ;
rank: 533
score: 99.17484907670455
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries . entries ( ) )
rank: 533
score: 99.16761192908653
patch: for ( iter . has CaMeL Next ( ) ; ) {
rank: 533
score: 99.15882286658653
patch: Iterator iter = res . index CaMeL Of ( 0 ) ;
rank: 533
score: 99.15365164620536
patch: Iterator iter ; iterator = res . entries . iterator ( ) ;
rank: 533
score: 99.15260532924107
patch: Iterator iter = res . round ( ) . iterator ( ) ;
rank: 533
score: 99.13979666573661
patch: Object [ ] res = new Object [ res . length ] ;
rank: 534
score: 99.22875162760417
patch: boolean < ? > iter = res . entries . iterator ( ) ;
rank: 534
score: 99.18944295247395
patch: Iterator iterator = res . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) { )
rank: 534
score: 99.17484714673913
patch: for ( ) { Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector (
rank: 534
score: 99.16733022836539
patch: while ( res . has CaMeL Next ( ) ) { {
rank: 534
score: 99.15874774639423
patch: Iterator iter = = res . entries . iterator ( ) ;
rank: 534
score: 99.13957868303571
patch: byte [ ] res = res . get CaMeL Bytes ( ) ;
rank: 535
score: 99.22816467285156
patch: final boolean < ? > iter = res . entries . iterator ( ) ;
rank: 535
score: 99.18858846028645
patch: Iterator iter = res . iterator ( ) ; while ( iter . ; iter . has CaMeL Next ( ) ) {
rank: 535
score: 99.1747577373798
patch: Iterator < iter : res . entries . iterator ( ) ;
rank: 535
score: 99.15325055803571
patch: Iterator iter > res = res . entries . iterator ( ) ;
rank: 535
score: 99.150830078125
patch: Iterator iter = res . entries . iterator ( ) ; case 1 :
rank: 535
score: 99.139404296875
patch: Iterator iter = res . entries ( ) ; while ( ; )
rank: 536
score: 99.2275634765625
patch: Iterator iter = res . entries . iterator ( ) ; else * /
rank: 536
score: 99.18856650904605
patch: Iterator iter = res . get ) ; while ( iter . has CaMeL Next ( ) )
rank: 536
score: 99.17454427083334
patch: Iterator < int + 1 : res . entries . iterator ( ) ;
rank: 536
score: 99.15011596679688
patch: Collection [ ] iter = res . entries ( ) ;
rank: 537
score: 99.22721862792969
patch: final Iterator iter = res . entries ( ) . iterator ( ) ; ;
rank: 537
score: 99.18841552734375
patch: Iterator iter = v . clone ( ) . entries ( ) ;
rank: 537
score: 99.17452842310855
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector entries : res . entries ( ) ) {
rank: 537
score: 99.161376953125
patch: Iterator iter = entries . entries . iter ( ) ;
rank: 537
score: 99.13863118489583
patch: Iterator iter = res . iterator ( ) ; while ( iter . )
rank: 538
score: 99.22689056396484
patch: final Iterator iter = res . entries ( ) . iterator ( ) ; }
rank: 538
score: 99.1875
patch: Iterator iter = res . list . iterator ( ) ; ; finally { iter . has CaMeL Next ( ) ; }
rank: 538
score: 99.17394488790761
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) this . entries ) . iterator ( ) ;
rank: 538
score: 99.16518930288461
patch: Iterator iter = res . get CaMeL Dimension ( ) . }
rank: 538
score: 99.15202985491071
patch: Iterator iter = value . entries ( ) . iterator ( ) ;
rank: 538
score: 99.14993051382211
patch: Iterator < E > iter = entries . iterator ( ) ;
rank: 538
score: 99.13858032226562
patch: Collection res = res . entries . entries ( ) ;
rank: 539
score: 99.15640462239584
patch: for ( Iterator Iterator iter = res . entries . iterator ( ) ;
rank: 539
score: 99.1488037109375
patch: int iter = res . entries . to CaMeL Array ( ) ;
rank: 539
score: 99.13822856702302
patch: if ( res != null ) res . entries = res . entries . entries ( ) ;
rank: 540
score: 99.22577311197917
patch: Iterator < String > iter = res . name . iterator ( ) ;
rank: 540
score: 99.17384643554688
patch: for ( iter = res . entries ( ) ; iter . has CaMeL Next ( ) ; )
rank: 540
score: 99.16489664713542
patch: while ( entries . has CaMeL Next ( ) ) {
rank: 540
score: 99.14762660435268
patch: Iterator iter = res . entries ( . entries ( ) ) ;
rank: 541
score: 99.21106770833333
patch: Iterator iter = res . entries . ebe CaMeL Multiply ( this ) ;
rank: 541
score: 99.18665907118056
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . ) {
rank: 541
score: 99.16447230747768
patch: final Iterator iter = res . entries . iterator ( ) ; }
rank: 541
score: 99.15564903846153
patch: Iterator iter = res . entries . entries iterator ( ) ;
rank: 541
score: 99.1380615234375
patch: res . entries = new Iterator [ v . size ( ) ] ;
rank: 542
score: 99.22511693050987
patch: Iterator iter = res . entries . iterator ( ) ; while . has CaMeL Next ( )
rank: 542
score: 99.18623352050781
patch: try { Iterator iter = res . list ( ) . iterator ( ) ;
rank: 542
score: 99.17311314174107
patch: Enumeration iter = res . entries ( ) . iterator ( ) ;
rank: 542
score: 99.16306715745192
patch: Iterator iter = entries . entries . iterator ( ) ; ;
rank: 542
score: 99.15970552884616
patch: / iter iter = res . entries . iterator ( ) ;
rank: 542
score: 99.15562220982143
patch: Iterator iter = res . entries . TRUE . iterator ( ) ;
rank: 542
score: 99.13724190848214
patch: if ( res != null ) res . ) res = res ;
rank: 543
score: 99.22508329503677
patch: Iterator < char [ ] > iter = res . entries . iterator ( ) ;
rank: 543
score: 99.21103515625
patch: res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 543
score: 99.16295514787946
patch: Iterator iter = res . entries . iterator ( ) ; ; ;
rank: 543
score: 99.14672088623047
patch: Iterator iter = res . get CaMeL Fields ( ) . entries ( ) ;
rank: 543
score: 99.13723958333334
patch: Iterator iter = v . iterator . iterator ( ) ; while ( )
rank: 544
score: 99.22503255208333
patch: List < Iterator > iter = res . entries . iterator ( ) ;
rank: 544
score: 99.16287667410714
patch: Iterator [ ] entries = res . entries . iterator ( ) ;
rank: 544
score: 99.15926688058036
patch: Iterator iter = res . intern ( ) . iterator ( ) ;
rank: 544
score: 99.1554931640625
patch: Iterator iter = res . entries . entries . iterator ( ) ) ;
rank: 544
score: 99.13654436383929
patch: List res = res . entries . entries . iterator ( ) ;
rank: 545
score: 99.22441755022321
patch: final Object res = res . entries . get ( 0 ) ;
rank: 545
score: 99.16274007161458
patch: Iterator iter = res . get CaMeL Id ( ) ;
rank: 545
score: 99.15611921037946
patch: Iterator iter = res . entries . iter . Iterator ( ) ;
rank: 545
score: 99.146484375
patch: Enumeration < String > iter = res . entries ( ) ;
rank: 545
score: 99.1358283547794
patch: if ( res != null && res . get CaMeL Dimension ( ) == null )
rank: 546
score: 99.22402774586396
patch: Iterator < Object > iter = res . entries = res . entries ( ) ;
rank: 546
score: 99.20999348958334
patch: Iterator iter = v . entries [ 1 ] . iterator ( ) ;
rank: 546
score: 99.17276161595395
patch: Iterator < iter . has CaMeL Next ( ) ; ) { iter . advance ( ) ;
rank: 546
score: 99.16203962053571
patch: Iterator iter = v . copy ( ) . iterator ( ) ;
rank: 546
score: 99.14647565569196
patch: Iterator iter = res . entries = res . copy ( ) ;
rank: 547
score: 99.20945638020834
patch: Iterator iter = v . entries ( ) . . iterator ( ) ;
rank: 547
score: 99.18504028320312
patch: Iterator iter = key . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 547
score: 99.16201346261161
patch: Vector res = res . entries . entries . iterator ( ) ;
rank: 547
score: 99.1558086688702
patch: iter . iter = res . entries . iterator ( ) ;
rank: 547
score: 99.14798409598214
patch: Real CaMeL Vector iter = res . entries . iterator ( ) ;
rank: 547
score: 99.13570731026786
patch: Iterator iter = res . iterator ( ) ; synchronized ( this )
rank: 548
score: 99.18433837890625
patch: Iterator iterator = entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 548
score: 99.15436260516827
patch: Iterator iter = res . entries . contains ( res ) ;
rank: 548
score: 99.14763532366071
patch: Iterator iter = res . exp . entries . iterator ( ) ;
rank: 548
score: 99.13519287109375
patch: do { Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 549
score: 99.2228252704327
patch: Iterator < int > iter = res . iterator ( ) ;
rank: 549
score: 99.17215304904514
patch: for ( int ) { iter = res . entries . entries . iterator ( ) ;
rank: 549
score: 99.16164725167411
patch: Iterator iter = res . trim ( ) . entries ( ) ;
rank: 549
score: 99.15406290690105
patch: Iterator iter = res . entries . Enum ( ) ;
rank: 549
score: 99.14695521763393
patch: Iterator iter = res . name ( ) . iterator ( ) ;
rank: 549
score: 99.13514468544408
patch: List iter = res . entries ( ) ; Iterator iter = iter . iterator ( ) ;
rank: 550
score: 99.17205047607422
patch: Iterator iter && res . iterator ( ) . has CaMeL Next ( ) ;
rank: 550
score: 99.16104561941964
patch: entries . Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 550
score: 99.15381731305804
patch: Iterator iter = res . split ( ) . iterator ( ) ;
rank: 550
score: 99.14993722098214
patch: Iterator iter = res . size ( ) . size ( ) ;
rank: 550
score: 99.14677211216518
patch: Iterator iter = res . join ( ) . iterator ( ) ;
rank: 550
score: 99.144287109375
patch: Iterator iter = res . entries ( ) ; clone = null ;
rank: 550
score: 99.13489532470703
patch: if ( res != null ) res . ) res = res . entries ;
rank: 551
score: 99.221826171875
patch: Iterator < int > entries = res . entries . iterator ( ) ;
rank: 551
score: 99.18360093060662
patch: Iterator iter = res . entries ; Iterator iter = res . iterator ( ) ;
rank: 551
score: 99.17199096679687
patch: Iterator iter = res . entries != null ? res . entries . iterator ( ) : 0 ;
rank: 551
score: 99.15993826729911
patch: try { Iterator iter = res . entries . size ( ) ;
rank: 551
score: 99.15274483816964
patch: Iterator iter = res . entries . remove . iterator ( ) ;
rank: 551
score: 99.14659830729167
patch: Iterator iter = res . entries . iterator ( ) ; * * /
rank: 552
score: 99.20797729492188
patch: Iterator iter = v . length . iterator ( ) ;
rank: 552
score: 99.18355066636029
patch: synchronized ( res ) { res . entries = res . entries . entries ; }
rank: 552
score: 99.17174183238636
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . ebe CaMeL Multiply ( ) )
rank: 552
score: 99.15857872596153
patch: final Iterator iter = res . get CaMeL Dimension ( ) ;
rank: 552
score: 99.1524658203125
patch: Iterator iter = res . entries . delete ( ) ;
rank: 552
score: 99.149169921875
patch: Iterator iter = res . entries . index CaMeL Of ( ) ;
rank: 552
score: 99.134033203125
patch: / * Iterator iter = v . iterator ( ) ;
rank: 553
score: 99.2216552734375
patch: Iterator < Package > iter = res . entries . iterator ( ) ;
rank: 553
score: 99.20738874162946
patch: Real CaMeL Vector res = res . get CaMeL Dimension ( ) ;
rank: 553
score: 99.15704345703125
patch: Iterator iter = res . false . entries . iterator ( ) ;
rank: 553
score: 99.15220424107143
patch: int iter . iterator = res . entries . iterator ( ) ;
rank: 553
score: 99.14152526855469
patch: Iterator iter = res . entries . iterator ( ) ; else * * /
rank: 554
score: 99.22141400505515
patch: Iterator < Object > iter = entries . entries ( ) . iterator ( ) ;
rank: 554
score: 99.1708984375
patch: if ( res . iterator ( ) . has CaMeL Next ( ) )
rank: 554
score: 99.15214320591518
patch: Iterator iter = 0 ; iter = res . entries ( ) ;
rank: 554
score: 99.14092145647321
patch: Iterator iter = res . entries ( ) ; clone ( ) ;
rank: 554
score: 99.13303629557292
patch: if ( res != null ) res . res = res . entries [ 0 ] ;
rank: 555
score: 99.22135656020221
patch: Iterator < int > iter = res . entries ( ) . iter ( ) ;
rank: 555
score: 99.18284205386513
patch: Iterator iter = res . entries ; ; while ( iter . has CaMeL Next ( ) )
rank: 555
score: 99.17063502261513
patch: synchronized ( res ) { Iterator iter = res . entries . entries . iterator ( ) ;
rank: 555
score: 99.15640694754464
patch: Iterator iter = res . entries . size ( ) ; while (
rank: 555
score: 99.15202985491071
patch: iter iter = res . entries . entries . iterator ( ) ;
rank: 555
score: 99.1470458984375
patch: new Open CaMeL Map CaMeL Real CaMeL Vector ( this , res ) ;
rank: 555
score: 99.1444091796875
patch: Iterator iter = res . out . entries . iterator ( ) ;
rank: 555
score: 99.14036342075893
patch: Iterator $NUMBER$ = res . entries ( ) . iterator ( ) ;
rank: 555
score: 99.13271077473958
patch: Iterator iter ; try { iter = v . entries ( ) . iterator ( ) ;
rank: 556
score: 99.22106255425348
patch: Iterator iter = res . entries ( ) . iterator ( ) ; else return null ;
rank: 556
score: 99.18216552734376
patch: Iterator iter = res . next ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 556
score: 99.17046760110294
patch: Iterator < Entry < ? > iter = res . entries . iterator ( ) ;
rank: 556
score: 99.15561349051339
patch: Iterator iter = res . entries . iterator ( ) ; if (
rank: 556
score: 99.15125383649554
patch: Iterator iter = res . res . entries . iter ( ) ;
rank: 556
score: 99.13992745535714
patch: synchronized ( res ) { iter = res . iterator ( ) ;
rank: 556
score: 99.13253784179688
patch: if ( res != null ) { res . entries = res . entries ;
rank: 557
score: 99.20584542410714
patch: Iterator iter = res . [ 0 ] . iterator ( ) ;
rank: 557
score: 99.1553485576923
patch: Iterator < Entry = res . entries . iterator ( ) ;
rank: 557
score: 99.13948880709134
patch: Iterator -- iter = res . entries . iterator ( ) ;
rank: 557
score: 99.13239489103618
patch: if ( v != null ) res . ) res . res . res . res . ;
rank: 558
score: 99.22035845588235
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ; else
rank: 558
score: 99.20028250558036
patch: Iterator iter = res != null : res . entries ( ) ;
rank: 558
score: 99.17034912109375
patch: Iterator iter < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 558
score: 99.155029296875
patch: Iterator iter = this . entries . iterator ( ) ; ;
rank: 558
score: 99.15071323939732
patch: Iterator iter = res . entries . iterator ( ) ; iter }
rank: 558
score: 99.13214789496527
patch: if ( v != null ) Iterator iter = res . entries . iterator ( ) ;
rank: 559
score: 99.21955702039931
patch: final Iterator < E > iter = res . entries ( ) . iterator ( ) ;
rank: 559
score: 99.18156127929687
patch: iter = res . entries . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 559
score: 99.16963334517045
patch: Iterator iter = res . entries [ 0 ] ;
rank: 559
score: 99.15048452524039
patch: Iterator iter = res . entries . iter ( ) ) ;
rank: 559
score: 99.14354705810547
patch: Iterator iter = res . entries ;
rank: 559
score: 99.13918050130208
patch: int entries = res . entries . iterator ( ) ;
rank: 559
score: 99.132080078125
patch: synchronized ( this ) { Iterator iter = res . iterator . iterator ( ) ;
rank: 560
score: 99.1695620888158
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : v . entries ( ) ) {
rank: 560
score: 99.15043422154018
patch: Iterator iter . entries = res . entries . iterator ( ) ;
rank: 560
score: 99.1439678485577
patch: Iterator iter = res . entries . iterator ( $NUMBER$ ) ;
rank: 560
score: 99.1389629657452
patch: Iterator < $STRING$ : res . entries . iterator ( ) ;
rank: 561
score: 99.1982666015625
patch: Iterator iter = res . get CaMeL Dimension ( ) . iterator ( )
rank: 561
score: 99.18117268880208
patch: Iterator iter = this . list . iterator ( ) ;
rank: 561
score: 99.16932024274554
patch: Iterator iter = this . entries ( ) . iterator ( ) ;
rank: 561
score: 99.15155584161931
patch: Iterator iter = res . size ( ) ; }
rank: 561
score: 99.14283098493304
patch: Iterator iter = res . size ( ) . entries ( ) ;
rank: 561
score: 99.13192313058036
patch: / * Iterator iter = v . entries . iterator ( ) ;
rank: 562
score: 99.15148053850446
patch: Iterator iter = res . remove ( ) . size ( ) ;
rank: 562
score: 99.1484375
patch: Iterator iter = res . entries . iterator ( ) ; /
rank: 562
score: 99.138671875
patch: int res . entries . iterator ( ) . iterator ( ) ;
rank: 562
score: 99.13159790039063
patch: if ( res == null ) return res ;
rank: 563
score: 99.19765061598558
patch: Iterator iter = res $NUMBER$ . entries . iterator ( ) ;
rank: 563
score: 99.18090209960937
patch: Iterator iter = in . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 563
score: 99.16887350643383
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector == null ? null : res .
rank: 563
score: 99.14818464006696
patch: Iterator iter = res . entries . Enum . iterator ( ) ;
rank: 563
score: 99.14226422991071
patch: Iterator iter = res * v . entries . iterator ( ) ;
rank: 563
score: 99.13915143694196
patch: Iterator iter = Iterator . entries ( ) . iterator ( ) ;
rank: 563
score: 99.13866373697917
patch: Iterator iter = res . entries ( ) ; add ( res ) ;
rank: 563
score: 99.13150728665866
patch: if ( v != null ) res . res = res ;
rank: 564
score: 99.18074798583984
patch: Iterator iter = v . get CaMeL Interfaces ( ) . iterator ( ) ;
rank: 564
score: 99.16805826822916
patch: Iterator iter = ! this . res . entries . iterator ( ) ;
rank: 564
score: 99.15114048549107
patch: int iter = res . get CaMeL Dimension ( ) . value ;
rank: 564
score: 99.14818464006696
patch: Iterator < ) . Iterator iter = res . entries ( ) ;
rank: 564
score: 99.138916015625
patch: Iterator iter = v = res . entries . iterator ( ) ;
rank: 564
score: 99.13856201171875
patch: Iterator iter = res . remove ( ) ;
rank: 564
score: 99.13134765625
patch: / * * Iterator iter = res . iterator ( ) ;
rank: 565
score: 99.19548688616071
patch: Iterator iter = v . entries = res . iterator ( ) ;
rank: 565
score: 99.1680549172794
patch: Iterator < Real CaMeL Vector > iter . has CaMeL Next ( ) ; ) {
rank: 565
score: 99.14682442801339
patch: Iterator iter = new = res . entries . iterator ( ) ;
rank: 565
score: 99.13827078683036
patch: Iterator iter = res . parse ( ) . entries ( ) ;
rank: 565
score: 99.13119942801339
patch: Iterator iter = res . iterator ( ) ; else return null ;
rank: 566
score: 99.19500732421875
patch: Iterator iter = iter . entries ( ) . entries ( ) ;
rank: 566
score: 99.1799560546875
patch: iter = new Iterator ( res . entries . iterator ( ) ) ;
rank: 566
score: 99.13983154296875
patch: ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 566
score: 99.13766915457589
patch: assert ( res . entries . size ( ) == 0 ) ;
rank: 566
score: 99.13078962053571
patch: Iterator iter = res . iterator ( . next ( ) ) ;
rank: 567
score: 99.21721055772569
patch: final Iterator < Entry > iter = res . entries ( ) . iterator ( ) ;
rank: 567
score: 99.16791062127976
patch: Iterator iter = res . entries ( v . get CaMeL Dimension ( ) ) . iterator ( ) ;
rank: 567
score: 99.1461893717448
patch: Iterator iter = res . list . iter ( ) ;
rank: 567
score: 99.13738544170673
patch: Iterator < ] > iter = res . clone ( ) ;
rank: 567
score: 99.1305643717448
patch: Iterator iterator = v . entries . iterator ( ) ;
rank: 568
score: 99.21717026654412
patch: Iterator < private > iter = res . entries ( ) . iterator ( ) ;
rank: 568
score: 99.17807904411765
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . )
rank: 568
score: 99.16777208116319
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector entries : res . entries ( ) )
rank: 568
score: 99.1455078125
patch: Iterator iter = res . entries . put ( res ) ;
rank: 568
score: 99.13816615513393
patch: Iterator iter = iter . next ( ) . iterator ( ) ;
rank: 568
score: 99.1302001953125
patch: Iterator iter = res . iterator . entries ( ) ; while ( )
rank: 569
score: 99.21541101792279
patch: Iterator < Iterator > iter = res . entries = res . iterator ( ) ;
rank: 569
score: 99.16720241970486
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . entries .
rank: 569
score: 99.14957972935268
patch: for ( while ( res . has CaMeL Next ( ) ) {
rank: 569
score: 99.14520263671875
patch: Iterator iter = res . entries . close ( ) ;
rank: 569
score: 99.13773890904018
patch: Iterator iter = v . trim ( ) . iterator ( ) ;
rank: 569
score: 99.13732299804687
patch: Iterator list = res . entries ( ) ;
rank: 569
score: 99.13592529296875
patch: Iterator iter = data . entries . entries . iterator ( ) ;
rank: 569
score: 99.12925889756944
patch: if ( res != null ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 570
score: 99.21537562779018
patch: int [ ] entries = res . entries . iterator ( ) ;
rank: 570
score: 99.19319661458333
patch: int iter = this . entries . iterator ( ) ;
rank: 570
score: 99.17643907335069
patch: Iterator iter = size ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 570
score: 99.1665283203125
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = 0 ;
rank: 570
score: 99.14853922526042
patch: Iterator iter = res . length . entries ( ) ;
rank: 570
score: 99.14500843394886
patch: Iterator iter = res . . iterator ( ) ;
rank: 570
score: 99.13655911959134
patch: List < String > entries = res . entries ( ) ;
rank: 570
score: 99.12913929332386
patch: Iterator Iterator iter = res . iterator ( ) ;
rank: 571
score: 99.16620744977679
patch: if ( res instanceof Open CaMeL Map CaMeL Real CaMeL Vector ) {
rank: 571
score: 99.14812360491071
patch: while ( res != null ) { iter . advance ( ) ;
rank: 571
score: 99.14458759014423
patch: Iterator iter = res . iterator ( ) ; iterator ++ ;
rank: 571
score: 99.13557652064732
patch: Iterator iter = res . entries . iterator > iterator ( ) ;
rank: 571
score: 99.13528006417411
patch: int iter = res . entries ( ) . trim ( ) ;
rank: 571
score: 99.12883843315973
patch: if ( v == null ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 572
score: 99.21435546875
patch: if ( res != null ) entries = res . entries . iterator ( ) ;
rank: 572
score: 99.19217354910714
patch: Vector iter = this . res . entries . iterator ( ) ;
rank: 572
score: 99.16596069335938
patch: Iterator iter = res . entries ( ) . entries ( ) . entries . iterator ( ) ;
rank: 572
score: 99.14799281529018
patch: Iterator iter = entries . entries ( ) . size ( ) ;
rank: 572
score: 99.14409930889423
patch: Iterator . iter = res . entries . iterator ( ) ;
rank: 572
score: 99.13520050048828
patch: Iterator iter = res . entries . iterator ( ) ; int * * /
rank: 573
score: 99.19170673076923
patch: Real CaMeL Vector res = new Real CaMeL Vector ( ) ;
rank: 573
score: 99.17545572916667
patch: res . entries [ 0 ] = res . entries [ 1 ] ;
rank: 573
score: 99.1658602627841
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector > < )
rank: 573
score: 99.14792306082589
patch: Iterator iter = res . entries . iterator ( ) ; ; }
rank: 573
score: 99.13582066127232
patch: Iterator iter , res = res . entries . iterator ( ) ;
rank: 573
score: 99.13457697088069
patch: Iterator < ] : res . entries ( ) ;
rank: 574
score: 99.21420467601104
patch: if ( res . entries . iterator ( ) . is CaMeL Empty ( ) )
rank: 574
score: 99.16585286458333
patch: Iterator < Real CaMeL Vector > iter = ! res . entries . iterator ( ) ;
rank: 574
score: 99.14392961774554
patch: Iterator iter . else = res . entries . iterator ( ) ;
rank: 574
score: 99.13391985212054
patch: Iterator iter = res , entries = res . entries ( ) ;
rank: 574
score: 99.1310283954327
patch: final Iterator entries = res . entries . iterator ( ) ;
rank: 574
score: 99.1283710186298
patch: Iterator < E > iter = v . iterator ( ) ;
rank: 575
score: 99.21418108258929
patch: final Iterator < ? > iter = res . entries ( ) ;
rank: 575
score: 99.19107491629464
patch: Real CaMeL Vector iter = res . get CaMeL Dimension ( ) ;
rank: 575
score: 99.16533868963069
patch: for ( iter = this . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 575
score: 99.14702899639423
patch: Iterator iter ( res . has CaMeL Next ( ) ) {
rank: 575
score: 99.14351029829545
patch: Iterator iter = res . add ( res ) ;
rank: 575
score: 99.13373357599431
patch: Iterator >> iter = res . entries ( ) ;
rank: 576
score: 99.21335177951389
patch: final Iterator < Class > iter = res . entries ( ) . iterator ( ) ;
rank: 576
score: 99.17197265625
patch: Iterator iter = res . list ( ) . iterator ( ) ; ;
rank: 576
score: 99.16480509440105
patch: Iterator iter = res > entries . iterator ( ) ;
rank: 576
score: 99.14528111049107
patch: if ( v . entries . size ( ) > 0 ) {
rank: 576
score: 99.13521902901786
patch: Iterator iter >> entries = res . entries . iterator ( ) ;
rank: 576
score: 99.1319580078125
patch: Iterator < String > iter = res . clone ( ) ;
rank: 576
score: 99.12804303850446
patch: Iterator iter = res . iterator . entries . iterator ( ) ;
rank: 577
score: 99.21305629185268
patch: final Iterator iter = res . entries . iterator ( ) ; else
rank: 577
score: 99.19002859933036
patch: Iterator iter = res . iterator ( ) ; for ( for (
rank: 577
score: 99.16441345214844
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res .
rank: 577
score: 99.14512282151442
patch: while ( v . has CaMeL Next ( ) ) { {
rank: 577
score: 99.14084694602273
patch: Iterator iter = res . entries ( ) ) ;
rank: 577
score: 99.13499232700893
patch: Iterator iter = v . data . entries . iterator ( ) ;
rank: 577
score: 99.12851388113839
patch: Iterator iter = res . entries . FALSE . iterator ( ) ;
rank: 577
score: 99.12800149356617
patch: if ( res == null || res . entries . size ( ) == 0 )
rank: 578
score: 99.14504568917411
patch: if ( res . entries . size ( ) > 0 ) {
rank: 578
score: 99.13998647836539
patch: res . entries . iterator ( ) . iterator ( ) .
rank: 578
score: 99.1313007061298
patch: Iterator < ? : res . entries . iterator ( ) ;
rank: 578
score: 99.12727573939732
patch: Iterator iter ; try { iter = v . iterator ( ) ;
rank: 579
score: 99.21201578776042
patch: Object iter = res . entries . iterator ( ) ;
rank: 579
score: 99.18951416015625
patch: res . set CaMeL Entry ( iter . key ) ;
rank: 579
score: 99.16361276726974
patch: list . set CaMeL Entry ( iter . key ( ) , iter . value ( ) *
rank: 579
score: 99.14485990084134
patch: Iterator Iterator iter = res . entries . size ( ) ;
rank: 579
score: 99.13780799278847
patch: Iterator iter = res . entries ( ) iterator ( ) ;
rank: 579
score: 99.13062462439903
patch: final int entries . iterator ( ) . iterator ( ) ;
rank: 580
score: 99.21166178385417
patch: Iterator < Class > iterator = res . entries . iterator ( ) ;
rank: 580
score: 99.1690204326923
patch: entries = res . entries . entries . iterator ( ) ;
rank: 580
score: 99.16319515830592
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) ; }
rank: 580
score: 99.1446533203125
patch: Iterator iter = res . floor ( ) . iterator ( ) ;
rank: 580
score: 99.13699340820312
patch: Iterator iter = res . matches . iterator ( ) ;
rank: 580
score: 99.1304931640625
patch: Iterator < Boolean > iter = res . entries ( ) ;
rank: 580
score: 99.12711275540866
patch: Iterator iter = res . entries . iterator ( v ) ;
rank: 581
score: 99.16895249310662
patch: Iterator iter = res . get CaMeL Fields ( ) . iterator ( ) ; ;
rank: 581
score: 99.16295776367187
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries iterator ( ) ;
rank: 581
score: 99.14459228515625
patch: Iterator iter = res . Math . iterator ( ) ;
rank: 581
score: 99.13668823242188
patch: long iter = res . entries . iterator ( ) ;
rank: 581
score: 99.13255208333334
patch: Iterator iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this )
rank: 581
score: 99.12667043585526
patch: Iterator iter = res . iterator ( ) ; Iterator iter = res . entries ( ) ;
rank: 582
score: 99.21135796440973
patch: if ( res == null ) Iterator iter = res . entries . iterator ( ) ;
rank: 582
score: 99.16830623851104
patch: for ( int iter = 0 ; iter . has CaMeL Next ( ) ; )
rank: 582
score: 99.14354596819196
patch: Iterator [ ] v = res . entries . iterator ( ) ;
rank: 582
score: 99.13624064127605
patch: Iterator iter = res . entries . read ( ) ;
rank: 582
score: 99.13225555419922
patch: Iterator iter = res . length ;
rank: 582
score: 99.12837357954545
patch: Iterator iter = res . . entries ( ) ;
rank: 583
score: 99.21089441636029
patch: Iterator < Object > iter = res . entries ( ) . entries ( ) ;
rank: 583
score: 99.16725667317708
patch: List list = res . entries . iterator ( ) ;
rank: 583
score: 99.16266276041667
patch: Iterator < Integer > iter = v . entries . iterator ( ) ;
rank: 583
score: 99.12651824951172
patch: res . entries [ res . entries . size ( ) ] = res ;
rank: 583
score: 99.1263427734375
patch: Vector < String > iter = res . entries ( ) ;
rank: 584
score: 99.21073190789474
patch: if ( res . entries . entries . iterator ( ) . has CaMeL Next ( ) )
rank: 584
score: 99.18574741908482
patch: Iterator iter = res : v . entries . iterator ( ) ;
rank: 585
score: 99.21038411458333
patch: Iterator iter = res . get ( false ) . entries ( ) ;
rank: 585
score: 99.18545968191964
patch: Iterator iter = v != null . entries . iterator ( ) ;
rank: 586
score: 99.2099673622533
patch: Iterator iter = res . entries ( ) ; Iterator iter = res . entries ( ) ;
rank: 586
score: 99.18507603236607
patch: res . set CaMeL Entry ( iter . value ( ) ) ;
rank: 586
score: 99.16220238095238
patch: if ( res instanceof Open CaMeL Map CaMeL Real CaMeL Vector ) res . set CaMeL Entry ( ) ;
rank: 586
score: 99.1427471454327
patch: Iterator ] iter = res . entries . iterator ( ) ;
rank: 586
score: 99.1338399251302
patch: / ; Iterator iter = res . entries ( ) ;
rank: 586
score: 99.12518988715277
patch: if ( res != null ) res . res = res . entries . iterator ( )
rank: 586
score: 99.1224873860677
patch: Iterator iter = res : entries . iterator ( ) ;
rank: 587
score: 99.209716796875
patch: final Object iter = res . entries . iterator ( ) ;
rank: 587
score: 99.16212047230114
patch: Iterator iter = res . entries . to CaMeL Array ( Open CaMeL Map CaMeL Real CaMeL Vector . get CaMeL
rank: 587
score: 99.14237758091518
patch: Iterator iter = res . entries . get CaMeL Dimension ( ) ;
rank: 587
score: 99.132568359375
patch: Iterator iter = res . entries . iter ( ) ; iter
rank: 587
score: 99.1302001953125
patch: Iterator iter = res . entries ( ) . iterator ( ) 1 ;
rank: 587
score: 99.12467687270221
patch: try { Iterator iter = res . entries ( ) . iterator ( ) ; ;
rank: 587
score: 99.1229960123698
patch: int iterator = res . entries . size ( ) ;
rank: 587
score: 99.12238420758929
patch: Iterator iter = res . index CaMeL Of ( - 1 ) ;
rank: 588
score: 99.20953728170956
patch: Iterator < byte [ ] > iter = res . entries . iterator ( ) ;
rank: 588
score: 99.1620861235119
patch: Iterator < Real CaMeL Vector == null ? null : res . entries . entries . iterator ( ) ;
rank: 588
score: 99.1309814453125
patch: Iterator iter = res . entries . iter ( ) ; .
rank: 588
score: 99.12415986902573
patch: Iterator iter = res . entries ( res . size ( ) - 1 ) ;
rank: 588
score: 99.12229817708334
patch: Iterator iter = v . entries . index CaMeL Of ( this ) ;
rank: 588
score: 99.12136840820312
patch: Iterator [ ] list = res . entries ( ) ;
rank: 589
score: 99.16207449776786
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) this ) . iterator ( ) ;
rank: 589
score: 99.13079833984375
patch: iter = res . entries . iterator ( ) ; ;
rank: 589
score: 99.12965611049107
patch: Iterator iter = 1 : res . entries . iterator ( ) ;
rank: 589
score: 99.12385639391448
patch: Collection res = res . entries ( ) ; Iterator iter = res . iterator ( ) ;
rank: 589
score: 99.12210083007812
patch: Iterator iter = res . entries . iterator ( ) }
rank: 590
score: 99.2093505859375
patch: Iterator < Iterator > iter = res . entries . size ( ) ;
rank: 590
score: 99.16203169389205
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this .
rank: 590
score: 99.14150565011161
patch: Iterator iter = res . entries . contains . iterator ( ) ;
rank: 590
score: 99.12928118024554
patch: Iterator iter = iter . next ( ) . size ( ) ;
rank: 590
score: 99.12921612079327
patch: Iterator iter = res . entries . compare ( res ) ;
rank: 590
score: 99.12351481119792
patch: Object res = res . entries . get ( ) ;
rank: 590
score: 99.11984487680289
patch: Iterator < Float > iter = res . entries ( ) ;
rank: 591
score: 99.20917825137867
patch: if ( res != null ) iter = res . entries . entries ( ) ;
rank: 591
score: 99.18412562779018
patch: Iterator iter = v . res . entries . iterator ( ) ;
rank: 591
score: 99.16166759672619
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res ) { res . set CaMeL Entry (
rank: 591
score: 99.1414794921875
patch: else Iterator iter = res . entries . iterator ( ) ;
rank: 592
score: 99.20917619977679
patch: Iterator iter = res . get ( ) . iter ( ) ;
rank: 592
score: 99.16465130974265
patch: synchronized ( this ) { iter = res . entries . size ( ) ; }
rank: 592
score: 99.12781633649554
patch: Iterator iter = res > res . entries . iterator ( ) ;
rank: 592
score: 99.12256798377403
patch: Iterator < res > iter = res . entries ( ) ;
rank: 592
score: 99.1205078125
patch: new Real CaMeL Vector ( v . get CaMeL Dimension ( ) ) ;
rank: 592
score: 99.1185811360677
patch: Iterator 1 = res . entries . iterator ( ) ;
rank: 593
score: 99.20879720052083
patch: Iterator iter = res . get ( res . entries . length ) ;
rank: 593
score: 99.16449381510417
patch: Iterator iter = res . list ( res . entries ( ) ) ;
rank: 593
score: 99.16123268821023
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ; }
rank: 593
score: 99.1403096516927
patch: if ( iter . has CaMeL Next ( ) ) {
rank: 593
score: 99.12761579241071
patch: Iterator iter = v : res . entries . iterator ( ) ;
rank: 593
score: 99.12254749644886
patch: Iterator iter = res . iterator ( res ) ;
rank: 594
score: 99.20840454101562
patch: int [ ] entries = res . entries ( ) ;
rank: 594
score: 99.18331298828124
patch: Open CaMeL Map CaMeL Real CaMeL Vector res ;
rank: 594
score: 99.16119384765625
patch: for ( int ) { iter = res . entries . iterator ( ) ;
rank: 594
score: 99.12853064903847
patch: final Iterator iter = res . entries . entries ( ) ;
rank: 594
score: 99.1276104266827
patch: Iterator iter = res . entries . iterator ( SIZE ) ;
rank: 594
score: 99.1177734375
patch: int entries = res . entries ( ) ;
rank: 595
score: 99.20815142463235
patch: Iterator iter = res . entries ( ) . iterator ( ) ; return res ;
rank: 595
score: 99.18287760416666
patch: Iterator iter = res . entries . entries ( ) [ 0 ] ;
rank: 595
score: 99.16093517485119
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) . entries ( ) ;
rank: 595
score: 99.14016287667411
patch: Iterator iter = res . entries . iterator ( ) ; while ;
rank: 595
score: 99.12823955829327
patch: Iterator iter entries = res . entries . iterator ( ) ;
rank: 595
score: 99.12727573939732
patch: Iterator iter = res . iter ( ) . iterator ( ) ;
rank: 595
score: 99.12144368489584
patch: Iterator < ? extends E > iter = res . entries ( ) ;
rank: 595
score: 99.1177490234375
patch: int iter = res . entries . length ;
rank: 596
score: 99.1609130859375
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = ! res . iterator ( ) ;
rank: 596
score: 99.1277606670673
patch: Iterator iter = res . iterator ( ) ; = null ;
rank: 596
score: 99.12643868582589
patch: Iterator iter = list . entries . entries . iterator ( ) ;
rank: 596
score: 99.12139892578125
patch: boolean iter = res . entries . size ( ) > 0 ;
rank: 596
score: 99.11697152944711
patch: Iterator < Integer > iter = entries . iterator ( ) ;
rank: 597
score: 99.20792933872768
patch: final Iterator < String > iter = res . iterator ( ) ;
rank: 597
score: 99.18182842548077
patch: Iterator iter = v . entries . iterator ( ) ; *
rank: 597
score: 99.16060965401786
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) v . iterator ( ) ) ;
rank: 597
score: 99.13901774088542
patch: int res = iter . has CaMeL Next ( ) ;
rank: 597
score: 99.12752075195313
patch: Iterator iter = res . close ( ) ;
rank: 597
score: 99.12574986049107
patch: Iterator iter = res . max ( ) . iterator ( ) ;
rank: 597
score: 99.12119012129934
patch: int iter = res . size ( ) ; Iterator iter = res . iterator ( ) ;
rank: 598
score: 99.20769856770833
patch: Iterator < Enum > iter = res . entries . iterator ( ) ;
rank: 598
score: 99.16163853236607
patch: Iterator iter = res . set . list . iterator ( ) ;
rank: 598
score: 99.16048177083333
patch: Iterator < String > iter = res . get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 598
score: 99.12569754464286
patch: Iterator iter = res . entries > entries . iterator ( ) ;
rank: 598
score: 99.12101527622768
patch: lock ( ) ; Iterator iter = res . iterator ( ) ;
rank: 599
score: 99.20742361886161
patch: int [ ] iter = res . entries . iterator ( ) ;
rank: 599
score: 99.16092936197917
patch: Iterator iter = res . set . iterator ( ) ;
rank: 599
score: 99.16042073567708
patch: for ( ) { Iterator iter = res . entries . entries . iterator ( ) ;
rank: 599
score: 99.13861955915179
patch: Iterator iter = res . advance . entries . iterator ( ) ;
rank: 599
score: 99.12560163225446
patch: Iterator iter = res . entries . iterator ( ) : 0 ;
rank: 599
score: 99.1205342610677
patch: Object res = res . get CaMeL Value ( ) ;
rank: 599
score: 99.1163330078125
patch: Iterator iter = res . entries ( ) ; }
rank: 600
score: 99.16055458470395
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . ) { ;
rank: 600
score: 99.16016909950658
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . index CaMeL Of (
rank: 600
score: 99.13853102463942
patch: final Iterator iter = res . has CaMeL Next ( ) ;
rank: 600
score: 99.12557279146634
patch: Iterator iter = ++ res . entries . iterator ( ) ;
rank: 600
score: 99.12041364397321
patch: if ( res != null ) res . entries = . entries ;
rank: 600
score: 99.11842564174107
patch: Iterator iter = res . format . entries . iterator ( ) ;
rank: 601
score: 99.20737176192434
patch: Iterator iter = res . get ( ) . entries ( ) . iterator ( ) ; else
rank: 601
score: 99.1377665201823
patch: Iterator iter = res . entries . max ( ) ;
rank: 601
score: 99.12601412259616
patch: Iterator iter = res . entries . remove ( 0 ) ;
rank: 601
score: 99.11590106670673
patch: Iterator iter = ( Iterator ) res . size ( ) ;
rank: 602
score: 99.20690046037946
patch: final Iterator < String > entries = res . entries ( ) ;
rank: 602
score: 99.16009812127976
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) v ) . iterator ( ) ;
rank: 602
score: 99.15945638020834
patch: Iterator iter = res . get ( this ) . iterator ( ) ;
rank: 602
score: 99.13714599609375
patch: Iterator iter = res . entries . iterator ( ) ; / ?
rank: 602
score: 99.12599690755208
patch: Iterator iter . iter = res . entries ( ) ;
rank: 602
score: 99.11890462239583
patch: Iterator < Iterator < Integer >> iter = res . iterator ( ) ;
rank: 602
score: 99.11679513113839
patch: Iterator iter = res . close ( ) . entries ( ) ;
rank: 602
score: 99.11564418247768
patch: synchronized ( res ) { res . add ( res ) ; }
rank: 603
score: 99.20639935661765
patch: Iterator < int * ? > iter = res . entries . iterator ( ) ;
rank: 603
score: 99.18011881510417
patch: Iterator iter = res . entries . entries ( ) . iterator ( )
rank: 603
score: 99.15978190104167
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector ) ;
rank: 603
score: 99.15944010416666
patch: Iterator iter ; Iterator iter = res . list . iterator ( ) ;
rank: 603
score: 99.13697228064903
patch: while ( iter . has CaMeL Next ( ) ) { {
rank: 603
score: 99.11860874720982
patch: final Iterator < Integer > iter = res . iterator ( ) ;
rank: 603
score: 99.1160888671875
patch: { Iterator iter = res . entries . iterator ( ) ;
rank: 604
score: 99.20595415900735
patch: Iterator < Integer > iter = res . entries ( ) . iter ( ) ;
rank: 604
score: 99.13579450334821
patch: Iterator iter = res . get CaMeL Dimension ( ) . has CaMeL
rank: 604
score: 99.12535511363636
patch: Iterator iter = res . get ( null ) ;
rank: 604
score: 99.11764705882354
patch: Iterator iter = res . entries ( ) [ 0 ] . entries ( ) ;
rank: 604
score: 99.11592320033482
patch: Iterator iter = $STRING$ . entries . entries . iterator ( ) ;
rank: 604
score: 99.11467950994319
patch: res . entries ( ) . iterator ( ) ;
rank: 605
score: 99.15959087171052
patch: Iterator < while . has CaMeL Next ( ) ; ) { iter . advance ( ) ;
rank: 605
score: 99.12449428013393
patch: Iterator iter = res . entries . iterator ( ) : null ;
rank: 605
score: 99.1174675436581
patch: if ( v != null ) { Iterator iter = res . iterator ( ) ;
rank: 605
score: 99.11568509615384
patch: Iterator iter = res . entries . entries . ( ) ;
rank: 605
score: 99.11451212565105
patch: Iterator iter = res . load . iterator ( ) ;
rank: 606
score: 99.17977469308036
patch: Iterator iter = v . entries . iterator . iterator ( ) ;
rank: 606
score: 99.15931611902573
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) .
rank: 606
score: 99.15653268914474
patch: Iterator iter = ( ( Iterator ) res . iterator ( ) ) . iterator ( ) ;
rank: 606
score: 99.135009765625
patch: Iterator iter = res . entries . Math . iterator ( ) ;
rank: 606
score: 99.12511189778645
patch: Iterator iter = res . entries . put ( ) ;
rank: 606
score: 99.12405831473214
patch: Iterator iter , iter = res . entries . iterator ( ) ;
rank: 606
score: 99.11693464006696
patch: Object res = res . entries ( ) . get ( ) ;
rank: 607
score: 99.12324741908482
patch: Iterator iter >> iterator = res . entries . iterator ( ) ;
rank: 607
score: 99.11663348858173
patch: Iterator < Comparable > iter = res . iterator ( ) ;
rank: 607
score: 99.11333759014423
patch: List < E > iter = res . entries ( ) ;
rank: 608
score: 99.15902889476104
patch: Iterator iter = res . entries ( v . get CaMeL Dimension ( ) ) ;
rank: 608
score: 99.12291608537946
patch: Iterator iter = ( v . entries . iterator ( ) ) ;
rank: 608
score: 99.11606270926339
patch: Iterator iter = res . iterator = res . iterator ( ) ;
rank: 608
score: 99.1127460186298
patch: List < ] > iter = res . entries ( ) ;
rank: 609
score: 99.20467703683036
patch: Iterator iter = entries . iterator ( ) . iterator ( ) ;
rank: 609
score: 99.17828369140625
patch: int iter = this . res . get CaMeL Dimension ( ) ;
rank: 609
score: 99.15896371694711
patch: Iterator iter = ( res . entries . iterator ( ) ;
rank: 609
score: 99.12216421274039
patch: Iterator iter = res . entries . matches ( res ) ;
rank: 609
score: 99.12177385602679
patch: Iterator iter = end . entries ( ) . iterator ( ) ;
rank: 609
score: 99.11554827008929
patch: Iterator iter ; res . entries = res . iterator ( ) ;
rank: 609
score: 99.11228434244792
patch: boolean iter = res . entries . iterator ( ) ;
rank: 610
score: 99.20445492393092
patch: Iterator < Iterator < Object > iter = res . entries ( ) . iterator ( ) ;
rank: 610
score: 99.17769077845982
patch: v . set CaMeL Entry ( iter . advance ( ) ) ;
rank: 610
score: 99.15794677734375
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries ( )
rank: 610
score: 99.1200439453125
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( )
rank: 610
score: 99.11461530412946
patch: Object iter = res . entries ( ) . iterator ( ) ;
rank: 610
score: 99.1103515625
patch: Iterator iter = res . entries ( ) ; copy ( entries ) ;
rank: 611
score: 99.17737688337054
patch: Iterator iter = res . length : res . iterator ( ) ;
rank: 611
score: 99.15284075055804
patch: res . entries [ res . size ( ) ] = res ;
rank: 611
score: 99.11957659040179
patch: Iterator iter = res . ebe CaMeL Multiply . iterator ( ) ;
rank: 611
score: 99.10967145647321
patch: int iter = res . get CaMeL Classes ( ) . length ;
rank: 612
score: 99.1575927734375
patch: Iterator < int ) { iter = res . entries . iterator ( ) ;
rank: 612
score: 99.15278843470982
patch: for ( ; iter . has CaMeL Next ( ) ; ) {
rank: 612
score: 99.1324462890625
patch: Iterator iter = entries . entries . iterator ( ) ; }
rank: 612
score: 99.11944110576923
patch: Iterator iter >> = res . entries . iterator ( ) ;
rank: 612
score: 99.10878342848558
patch: res . value = res . entries . iterator ( ) ;
rank: 613
score: 99.20399385340073
patch: synchronized ( res ) { entries = res . entries . iterator ( ) ; }
rank: 613
score: 99.15753728693181
patch: Iterator iter ? res . entries . entries . iterator ( ) . has CaMeL Next ( ) ; ) {
rank: 613
score: 99.119140625
patch: Iterator iter = res . entries . iter ( ) ; }
rank: 613
score: 99.1115214029948
patch: Vector iter = v . entries . iterator ( ) ;
rank: 613
score: 99.1085674579327
patch: final int iterator = res . entries ( ) . length ;
rank: 614
score: 99.20392166940789
patch: Iterator iter = res . get ( ) . entries ( ) . iterator ( ) ; }
rank: 614
score: 99.15738932291667
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) { res . set CaMeL
rank: 614
score: 99.11294119698661
patch: Object [ ] res = res . to CaMeL Array ( ) ;
rank: 614
score: 99.10840782752403
patch: Collection < String > entries = res . entries ( ) ;
rank: 615
score: 99.17442103794643
patch: Vector iter = res . entries ( ) . iterator ( ) ;
rank: 615
score: 99.15706010298295
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( length ) ;
rank: 615
score: 99.12795003255208
patch: Iterator iter = res . v . size ( ) ;
rank: 615
score: 99.1185302734375
patch: Iterator iter = this . v . iterator ( ) ;
rank: 615
score: 99.11780802408855
patch: / ; Iterator iter = res . iterator ( ) ;
rank: 615
score: 99.11269962086396
patch: if ( res == null || res . get CaMeL Dimension ( ) == null )
rank: 615
score: 99.10830891927084
patch: Iterator iter = res . entries ( ) ; Iterator iter = false ;
rank: 616
score: 99.17420305524554
patch: Iterator iter = iter . entries ( ) . size ( ) ;
rank: 616
score: 99.15687255859375
patch: Iterator iter : res . iterator ( ) ;
rank: 616
score: 99.1167743389423
patch: res . iter = res . entries . iterator ( ) ;
rank: 616
score: 99.11269962086396
patch: if ( v != null && v . get CaMeL Dimension ( ) != null )
rank: 616
score: 99.108154296875
patch: Iterator < ] >> entries = res . entries ( ) ;
rank: 617
score: 99.20318603515625
patch: final Iterator < Iterator > iter = res . iterator ( ) ;
rank: 617
score: 99.15626109730114
patch: Iterator iter . has CaMeL Next ( ) ; )
rank: 617
score: 99.11114032451923
patch: res . res = res . get CaMeL Dimension ( ) ;
rank: 618
score: 99.20274000901442
patch: Iterator < Iterator > iter = entries . iterator ( ) ;
rank: 618
score: 99.15581403459821
patch: synchronized ( res ) { res . set CaMeL Entry ( ) ;
rank: 618
score: 99.14894321986607
patch: Iterator iter = res . list = res . iterator ( ) ;
rank: 618
score: 99.10965169270834
patch: Iterator iter = v . entries ( ) . iterator ( ) ; else
rank: 618
score: 99.10936482747395
patch: int iter = v . entries . size ( ) ;
rank: 618
score: 99.10791954627403
patch: Iterator < / >> iter = res . entries ( ) ;
rank: 619
score: 99.20252143012152
patch: synchronized ( res ) { Iterator iter = res . entries . iterator ( ) ; }
rank: 619
score: 99.17266845703125
patch: Iterator iter = v . entries . length . iterator ( ) ;
rank: 619
score: 99.15460883246527
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : this . res . entries )
rank: 619
score: 99.1248309795673
patch: if ( res != null ) res . advance ( ) ;
rank: 619
score: 99.11800711495536
patch: Iterator iter > entries = res . entries . iterator ( ) ;
rank: 619
score: 99.11440022786458
patch: Iterator iter Iterator iter = res . iterator ( ) ;
rank: 619
score: 99.10765584309895
patch: Iterator iterator = v . iterator . iterator ( ) ;
rank: 619
score: 99.10760967548077
patch: Iterator < T : res . entries . iterator ( ) ;
rank: 620
score: 99.20228486902573
patch: Iterator iter = res . get CaMeL Classes ( ) . iterator ( ) ; else
rank: 620
score: 99.15443250868056
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ( )
rank: 620
score: 99.11434232271634
patch: iter else iter = res . entries . iterator ( ) ;
rank: 620
score: 99.10915701729911
patch: Iterator iter = v . next ( ) . entries ( ) ;
rank: 620
score: 99.10727163461539
patch: Vector < ] > iter = res . entries ( ) ;
rank: 620
score: 99.10721842447917
patch: Iterator iter = res . size . iterator ( ) ;
rank: 621
score: 99.20216721754808
patch: Iterator < Object > iter = res . size ( ) ;
rank: 621
score: 99.15426635742188
patch: Iterator iter = res != null ? res . entries . entries . iterator ( ) : null ;
rank: 621
score: 99.14610188802084
patch: Iterator iter = res ; Iterator iter = res . iterator ( ) ;
rank: 621
score: 99.12235201322116
patch: Iterator iter = this . entries . iterator ( ) ; }
rank: 621
score: 99.11637660435268
patch: Iterator iter = res . remove ( ) . entries ( ) ;
rank: 621
score: 99.11422025240384
patch: Iterator iter = res . entries ( ) ; return res ;
rank: 621
score: 99.108935546875
patch: Iterator iter = res > size ( ) ;
rank: 621
score: 99.1067403157552
patch: Iterator iter = data . entries . size ( ) ;
rank: 621
score: 99.1066162109375
patch: if ( res . size ( ) != res . size ( ) )
rank: 622
score: 99.201806640625
patch: Iterator < Iterator > iter = res . entries . entries ( ) ;
rank: 622
score: 99.17112223307292
patch: Iterator iter = set . entries . iterator ( ) ;
rank: 622
score: 99.15414608226104
patch: for ( final Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries )
rank: 622
score: 99.11344401041667
patch: Iterator iter = res . entries ( ) ; ) ;
rank: 623
score: 99.15387517755681
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) res . set CaMeL Entry (
rank: 623
score: 99.145458984375
patch: Iterator < E > iter = res . list . iterator ( ) ;
rank: 623
score: 99.11819223257211
patch: final Iterator iter = this . entries . iterator ( ) ;
rank: 623
score: 99.11610630580357
patch: Iterator iter = res . entries ( ) > iterator ( ) ;
rank: 623
score: 99.1124267578125
patch: Iterator iter = res . get ( false ) ;
rank: 623
score: 99.10874720982143
patch: int value = v . entries ( ) . size ( ) ;
rank: 623
score: 99.10519643930289
patch: Iterator < E > entries = res . entries ( ) ;
rank: 623
score: 99.10507202148438
patch: Iterator iter = res . iterator ( ) ; * /
rank: 624
score: 99.17067173549107
patch: Iterator iter = res . entries [ ] . iterator ( ) ;
rank: 624
score: 99.14495849609375
patch: Disposer . Iterator iter = res . entries . iterator ( ) ;
rank: 624
score: 99.11812650240384
patch: final Iterator iter = entries . entries . iterator ( ) ;
rank: 624
score: 99.11238919771634
patch: Iterator iter = ( > ) res . entries ( ) ;
rank: 624
score: 99.10624186197917
patch: List entries = res . entries . iterator ( ) ;
rank: 624
score: 99.10499674479166
patch: Iterator iter = res . entries ( ) ; Entry ( $NUMBER$ ) ;
rank: 624
score: 99.10493977864583
patch: Iterator iter = res . iterator ( ) - 1 ;
rank: 625
score: 99.15363159179688
patch: Iterator iter = res . entries . iterator ( ) ; System . out . iterator ( ) ;
rank: 625
score: 99.10492412860577
patch: Iterator iter = res . entries . iterator ( res ) ;
rank: 625
score: 99.10453287760417
patch: List [ ] res = res . entries ( ) ;
rank: 626
score: 99.15331217447917
patch: Iterator iter = res . entries 1 ( ) . iterator ( ) ;
rank: 626
score: 99.14449055989583
patch: Iterator iter = res . get ( res ) . entries ( ) ;
rank: 626
score: 99.10446602957589
patch: Iterator iter = res . entries ( ) . parse ( ) ;
rank: 626
score: 99.10396030970982
patch: Iterator iter = res . load ( ) . entries ( ) ;
rank: 627
score: 99.15292503720238
patch: Iterator iter = ( ( Real CaMeL Vector ) res . entries . entries . iterator ( ) ) ;
rank: 627
score: 99.11487688337054
patch: Iterator iter = next ( ) . entries . iterator ( ) ;
rank: 627
score: 99.11208089192708
patch: Iterator iter = res . entries . matches ( ) ;
rank: 627
score: 99.10448404947917
patch: Iterator iter = res . iterator ( ) ; int iter = 0 ;
rank: 627
score: 99.10421987680289
patch: List < T > iter = res . entries ( ) ;
rank: 627
score: 99.10374959309895
patch: Iterator iter = res . format . iterator ( ) ;
rank: 628
score: 99.19939221833882
patch: Iterator iter = res . get ( ) . entries ( ) . iterator ( ) ) ;
rank: 628
score: 99.11201615767045
patch: Iterator iter iter = res . entries ( ) ;
rank: 628
score: 99.10430353338069
patch: Iterator < res . entries . iterator ( ) ;
rank: 628
score: 99.10348745492789
patch: Iterator iter = res . entries . size ( ) ) ;
rank: 628
score: 99.10336538461539
patch: final int entries = res . entries . iterator ( ) ;
rank: 629
score: 99.19923802425987
patch: if ( res != null ) { iter = res . entries . iterator ( ) ; }
rank: 629
score: 99.15283203125
patch: if ( res != null ) res . set CaMeL Entry ( ) ;
rank: 629
score: 99.11060509314903
patch: } Iterator iter = res . entries . iterator ( ) ;
rank: 629
score: 99.10305786132812
patch: Collection [ ] res = res . entries ( ) ;
rank: 629
score: 99.1030517578125
patch: if ( res . entries != null && res . entries != null )
rank: 630
score: 99.15228271484375
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) { else
rank: 630
score: 99.14034016927083
patch: switch ( res . entries . size ( ) ) { case 1 :
rank: 630
score: 99.10979669744319
patch: Iterator iter = res . get > ( ) ;
rank: 630
score: 99.1009854403409
patch: entries = res . entries . entries ( ) ;
rank: 631
score: 99.16803850446429
patch: res . set CaMeL Entry ( get CaMeL Entry ( ) ) ;
rank: 631
score: 99.15200966282895
patch: Iterator while ( res . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 631
score: 99.1399658203125
patch: Iterator iter = res . entries . iterator ( ) ; ; finally {
rank: 631
score: 99.11339111328125
patch: Iterator iter = res . advance ( ) ;
rank: 631
score: 99.10921536959134
patch: Iterator iter = res . entries ( ) ; = $NUMBER$ ;
rank: 631
score: 99.10219900948661
patch: int iter = res . entries . trim ( ) . length ;
rank: 631
score: 99.1007412997159
patch: Iterator iter = res . entries ( iterator ) ;
rank: 632
score: 99.1981560202206
patch: Iterator iter = res . entries ( ) . iterator ( ) ; else * /
rank: 632
score: 99.15200660342262
patch: Iterator < Iterator < Real CaMeL Vector > iter = res . entries . entries . iterator ( ) ;
rank: 632
score: 99.10067044771634
patch: res . entries . iterator ( ) . next ( ) ;
rank: 633
score: 99.19731588924633
patch: Iterator < String > iter = res . entries . iterator ( ) - 1 ;
rank: 633
score: 99.16721017020089
patch: Iterator iter = res . entries . size . iterator ( ) ;
rank: 633
score: 99.15198335193452
patch: Iterator < Real CaMeL Vector < Real CaMeL Vector > iter = v . entries . iterator ( ) ;
rank: 633
score: 99.13920375279018
patch: Iterator iter = new Iterator ( res . size ( ) ) ;
rank: 633
score: 99.10789998372395
patch: Iterator iter = res . iterator ( ) ; ) ;
rank: 633
score: 99.10158284505208
patch: List [ ] iter = res . entries ( ) ;
rank: 633
score: 99.09881122295673
patch: Iterator iter = res . entries . iterator ( $STRING$ ) ;
rank: 634
score: 99.16468302408855
patch: Iterator iter = this . res . size ( ) ;
rank: 634
score: 99.151611328125
patch: Iterator iter = super . entries . entries . iterator ( ) ;
rank: 634
score: 99.13871256510417
patch: Iterator iter = v . map . iterator ( ) ;
rank: 634
score: 99.11133829752605
patch: List iter = res . get CaMeL Dimension ( ) ;
rank: 634
score: 99.10653921274039
patch: Iterator iter = res . entries . reverse ( res ) ;
rank: 634
score: 99.1014892578125
patch: int iter = res . iterator ( ) ;
rank: 635
score: 99.19619516225961
patch: Iterator < ? > iter = entries . iterator ( ) ;
rank: 635
score: 99.10597581129808
patch: Iterator iterator = res . entries . iterator ( ) ; ;
rank: 635
score: 99.09844501201923
patch: Iterator < Number > iter = res . iterator ( ) ;
rank: 635
score: 99.09769694010417
patch: List iter = res . entries . size ( ) ;
rank: 636
score: 99.13816615513393
patch: Iterator iter = res . split . entries . iterator ( ) ;
rank: 636
score: 99.10990084134616
patch: Iterator iter = v . entries . iterator ( ) ; {
rank: 636
score: 99.10421048677884
patch: Iterator iter iterator = res . entries . iter ( ) ;
rank: 636
score: 99.10120646158855
patch: Iterator iter = exp . entries . iterator ( ) ;
rank: 636
score: 99.0976053873698
patch: Iterator iter = res . entries . index CaMeL Of (
rank: 637
score: 99.16382707868304
patch: Iterator iter = this . res . length . iterator ( ) ;
rank: 637
score: 99.1381591796875
patch: Iterator iter = map . iterator ( ) ;
rank: 637
score: 99.10988206129808
patch: Iterator >= iter = res . entries . iterator ( ) ;
rank: 637
score: 99.10386305588942
patch: Iterator iter = res . entries ( ) ; iterator ++ ;
rank: 637
score: 99.10048421223958
patch: Collection [ ] entries = res . entries ( ) ;
rank: 637
score: 99.09705461774554
patch: Iterator iter = res . entries . iterator ( * 1 ) ;
rank: 637
score: 99.09679236778847
patch: Iterator iter = res [ res . size ( ) ] ;
rank: 638
score: 99.19524274553571
patch: if ( res != null ) return res . entries ( ) ;
rank: 638
score: 99.16312662760417
patch: Iterator iter = v != null . iterator ( ) ;
rank: 638
score: 99.15033830915179
patch: Iterator iter && res . entries . entries . iterator ( ) ;
rank: 638
score: 99.11149458451705
patch: Iterator = res . entries . iterator ( ) ;
rank: 638
score: 99.10922241210938
patch: Iterator iter = res . data . size ( ) ;
rank: 638
score: 99.10032301682692
patch: Iterator < T > entries = res . entries ( ) ;
rank: 638
score: 99.09651692708333
patch: int iterator = v . entries . iterator ( ) ;
rank: 638
score: 99.09580641526442
patch: Iterator < T > iter = v . iterator ( ) ;
rank: 639
score: 99.1625225360577
patch: Iterator iter = v [ 0 ] . iterator ( ) ;
rank: 639
score: 99.1500308388158
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) . entries .
rank: 639
score: 99.11129760742188
patch: Iterator iter += v . entries . iterator ( ) ;
rank: 639
score: 99.10884399414063
patch: Iterator iter = res . [ 0 ] ;
rank: 639
score: 99.10312906901042
patch: Iterator iter = this . res . entries ( ) ;
rank: 640
score: 99.16183907645089
patch: Iterator iter = v != null : res . iterator ( ) ;
rank: 640
score: 99.14976283482143
patch: Iterator iter = res . entries . length ; while ( iter . has CaMeL Next ( ) ) {
rank: 640
score: 99.1082255045573
patch: Iterator iter = res . SIZE . iterator ( ) ;
rank: 640
score: 99.10287710336539
patch: iterator = res . entries . entries . iterator ( ) ;
rank: 640
score: 99.0940410907452
patch: Iterator < Double > iter = res . iterator ( ) ;
rank: 641
score: 99.19358995225694
patch: Iterator < String > iter = res . entries ( ) . iterator ( ) ; else
rank: 641
score: 99.1496826171875
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) + ) ;
rank: 641
score: 99.10982840401786
patch: Iterator iter = Iterator . entries . entries . iterator ( ) ;
rank: 641
score: 99.10817307692308
patch: Iterator iter = res . . entries . size ( ) ;
rank: 641
score: 99.1013934795673
patch: public Iterator iter = res . entries . iterator ( ) ;
rank: 641
score: 99.09268188476562
patch: Vector entries = res . entries . iterator ( ) ;
rank: 641
score: 99.0903828938802
patch: if ( res . entries != null ) return res ;
rank: 642
score: 99.19331577845982
patch: Iterator iter = entries . entries ( ) . iter ( ) ;
rank: 642
score: 99.13564627511161
patch: res . res = res . entries . get ( 0 ) ;
rank: 642
score: 99.10123697916667
patch: Iterator iter = res . iterator . iter ( ) ;
rank: 642
score: 99.09867640904018
patch: Iterator iter = res != null ? res . entries ( ) ;
rank: 642
score: 99.09268188476562
patch: Iterator iter = res . iter . size ( ) ;
rank: 642
score: 99.0899658203125
patch: Set res = res . entries . iterator ( ) ;
rank: 643
score: 99.16066196986607
patch: Iterator iter = 1 . entries ( ) . iterator ( ) ;
rank: 643
score: 99.14922688802083
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : this ) {
rank: 643
score: 99.1092529296875
patch: Iterator iter != null : res . entries . iterator ( ) ;
rank: 643
score: 99.10056715745192
patch: Iterator iter = res . entries . iter iterator ( ) ;
rank: 643
score: 99.0986328125
patch: Iterator iter = res . entries ( ) ; case $NUMBER$ :
rank: 644
score: 99.19319422104779
patch: Iterator < double [ ] > iter = res . entries . iterator ( ) ;
rank: 644
score: 99.14908854166667
patch: ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) . set CaMeL Entry ( iter ) ;
rank: 644
score: 99.1322021484375
patch: Iterator iter = res . list . iterator ( ) ; )
rank: 644
score: 99.10831705729167
patch: Iterator iter = start . entries . iterator ( ) ;
rank: 644
score: 99.10005326704545
patch: Iterator iter = res . iterator ( ) ; iterator
rank: 644
score: 99.09737141927083
patch: int iter = res . value . iterator ( ) ;
rank: 644
score: 99.08944936899039
patch: Iterator < res > iter = v . iterator ( ) ;
rank: 645
score: 99.16023763020833
patch: int value = iter . get CaMeL Dimension ( ) ;
rank: 645
score: 99.14902215254934
patch: Iterator < Class < ? > iter = res . entries . entries . iterator ( ) ;
rank: 645
score: 99.1309814453125
patch: try { iter = res . entries . iterator ( ) ;
rank: 645
score: 99.10755266462054
patch: Iterator iter = res . entries . iterator ( ) >> 1 ;
rank: 645
score: 99.09730834960938
patch: Iterator res = res . entries ( ) ;
rank: 646
score: 99.14898390997024
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector == null ? null : res . entries ( ) ;
rank: 646
score: 99.13048444475446
patch: Iterator iter = res . list . list . iterator ( ) ;
rank: 646
score: 99.10508219401042
patch: Vector res = res . get CaMeL Dimension ( ) ;
rank: 646
score: 99.09722430889423
patch: Iterator < E > iterator = res . entries ( ) ;
rank: 646
score: 99.08848063151042
patch: int length = v . get CaMeL Dimension ( ) ;
rank: 647
score: 99.16013009207589
patch: Iterator iter = res [ 0 0 ] . iterator ( ) ;
rank: 647
score: 99.10507202148438
patch: int v = iter . has CaMeL Next ( ) ;
rank: 647
score: 99.08302659254808
patch: res . entries = res . entries . entries ( ) ;
rank: 648
score: 99.19123920641448
patch: Iterator < Iterator < Iterator > iter = res . entries ( ) . iterator ( ) ;
rank: 648
score: 99.09628530649039
patch: Iterator < T > iterator = res . entries ( ) ;
rank: 648
score: 99.08763709435097
patch: Iterator iter advance = v . entries . iterator ( ) ;
rank: 648
score: 99.08292330228366
patch: res . entries = res . list . entries ( ) ;
rank: 649
score: 99.15926688058036
patch: Iterator iter = res != null : iter . iterator ( ) ;
rank: 649
score: 99.14839477539063
patch: Iterator iter ? res . iterator ( ) . has CaMeL Next ( ) . advance ( ) ;
rank: 649
score: 99.10467529296875
patch: Iterator iter = get CaMeL Dimension ( ) . entries ( ) ;
rank: 649
score: 99.09529418945313
patch: int iterator = res . entries ( ) ;
rank: 649
score: 99.086181640625
patch: Iterator iter = res . intern ( ) . entries ( ) ;
rank: 649
score: 99.08176832932692
patch: Iterator iter = res . iterator ( ) ; return res ;
rank: 650
score: 99.10362830528847
patch: Iterator ++ iter = res . entries . iterator ( ) ;
rank: 650
score: 99.0972430889423
patch: Iterator iter . Iterator iter = res . iterator ( ) ;
rank: 650
score: 99.08567457932692
patch: Iterator iter = res . index CaMeL Of ( this ) ;
rank: 651
score: 99.19074358258929
patch: final Iterator < String > iter = entries . iterator ( ) ;
rank: 651
score: 99.15830775669643
patch: Iterator iter = exp . entries ( ) . iterator ( ) ;
rank: 651
score: 99.14809744698661
patch: for ( ) { res . set CaMeL Entry ( iter ) ;
rank: 651
score: 99.12821138822116
patch: dim . entries = res . entries . iterator ( ) ;
rank: 651
score: 99.10268147786458
patch: Object v = res . get CaMeL Dimension ( ) ;
rank: 651
score: 99.0958760579427
patch: Iterator iter = res . get CaMeL Row ( ) ;
rank: 651
score: 99.09482421875
patch: Iterator iter = super . entries ( ) ;
rank: 651
score: 99.08536783854167
patch: int value = v . entries . size ( ) ;
rank: 651
score: 99.07997824928977
patch: Iterator iter = v . entries ( ) ; ;
rank: 652
score: 99.14809744698661
patch: Iterator iter = res [ ) . entries . iterator ( ) ;
rank: 652
score: 99.10317993164062
patch: Iterator iter = key . entries . iterator ( ) ;
rank: 652
score: 99.10190993088942
patch: for ( res . has CaMeL Next ( ) ; ) {
rank: 652
score: 99.09576885516827
patch: protected Iterator iter = res . entries . iterator ( ) ;
rank: 652
score: 99.09458414713542
patch: Iterator iter = res . entries ( ) ; else {
rank: 652
score: 99.07822672526042
patch: if ( res . entries == null ) return res ;
rank: 653
score: 99.10181603064903
patch: Iterator iter = res . get CaMeL Dimension ( ) ) ;
rank: 653
score: 99.0946796123798
patch: Iterator iter = res . entries . visit ( res ) ;
rank: 653
score: 99.09431675502232
patch: synchronized ( res ) { iter . add ( res ) ; }
rank: 653
score: 99.08121744791667
patch: int iterator = res . get CaMeL Dimension ( ) ;
rank: 653
score: 99.07773659446023
patch: Iterator Iterator iter = v . iterator ( ) ;
rank: 654
score: 99.15738351004464
patch: Iterator iter = res . [ 1 ] . iterator ( ) ;
rank: 654
score: 99.14800734747024
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . index CaMeL Of ( ) ;
rank: 654
score: 99.12521798270089
patch: System . Iterator iter = res . entries . iterator ( ) ;
rank: 654
score: 99.10172213040866
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = null ;
rank: 654
score: 99.09461388221153
patch: / * iter = res . entries . iterator ( ) ;
rank: 654
score: 99.0936748798077
patch: Iterator < String > iterator = res . entries ( ) ;
rank: 654
score: 99.07949829101562
patch: int size = v . entries . size ( ) ;
rank: 654
score: 99.07749586838942
patch: entries = new Iterator ( res . size ( ) ) ;
rank: 655
score: 99.18904622395833
patch: final Iterator iter = res . entries . iterator ( ) - 1 ;
rank: 655
score: 99.10127476283482
patch: iter . advance ( ) ;
rank: 655
score: 99.09383451021634
patch: Iterator iter = iterator ( res . entries ( ) ) ;
rank: 655
score: 99.09351603190105
patch: Iterator iter = res . map . entries ( ) ;
rank: 655
score: 99.07892315204327
patch: Vector Iterator iter = res . entries . iterator ( ) ;
rank: 655
score: 99.0774676983173
patch: Iterator < ? extends ) . has CaMeL Next ( ) ;
rank: 656
score: 99.18873697916666
patch: Iterator < String > iter = res . get . entries ( ) ;
rank: 656
score: 99.15716552734375
patch: int entries = res . get CaMeL Dimension ( ) ;
rank: 656
score: 99.14719752261513
patch: Iterator iter = res . entries [ 1 ] . entries ( ) . iterator ( ) ;
rank: 656
score: 99.10118519176136
patch: Iterator iter = res . contains ( 0 ) ;
rank: 656
score: 99.07741477272727
patch: Iterator iter = v . iterator ( res ) ;
rank: 657
score: 99.18871198381696
patch: List iter = res . entries ( ) . iterator ( ) ;
rank: 657
score: 99.15680803571429
patch: Iterator iter = res , iterator = res . iterator ( ) ;
rank: 657
score: 99.09318033854167
patch: iter iterator = res . entries . iterator ( ) ;
rank: 657
score: 99.09269205729167
patch: Iterator iter = res . entries ( ) == null ;
rank: 657
score: 99.0767352764423
patch: Iterator < ) > iter = res . entries ( ) ;
rank: 658
score: 99.121826171875
patch: Iterator iter = this . get . entries . iterator ( ) ;
rank: 658
score: 99.09211948939732
patch: Iterator iter = res . entries ( ) ; int < ] :
rank: 658
score: 99.07730806790866
patch: Iterator Iterator iter = v . entries . iterator ( ) ;
rank: 659
score: 99.18775770399306
patch: final Iterator < int > iter = res . entries ( ) . iterator ( ) ;
rank: 659
score: 99.14640299479167
patch: List iterator = res . entries . iterator ( ) ;
rank: 659
score: 99.10121506911058
patch: Iterator iter = res . entries . iterator ( ) : )
rank: 659
score: 99.1002909342448
patch: int res = res . entries . iterator ( ) ;
rank: 659
score: 99.09193115234375
patch: Iterator iter = res . get ( ) ;
rank: 660
score: 99.18763950892857
patch: if ( res != null ) res . remove ( res ) ;
rank: 660
score: 99.15582275390625
patch: Iterator iter = res . entries . iter ( ) ; for (
rank: 660
score: 99.12111118861607
patch: Iterator iter = v . get . entries . iterator ( ) ;
rank: 660
score: 99.09176870492789
patch: Iterator < ) : res . entries . iterator ( ) ;
rank: 660
score: 99.09149639423077
patch: Iterator < T > iter = res . copy ( ) ;
rank: 660
score: 99.07602945963542
patch: List iter = v . entries . iterator ( ) ;
rank: 661
score: 99.15529959542411
patch: Iterator iter = res . entries . entries ( ) ; for (
rank: 661
score: 99.1000264485677
patch: Iterator iter = res = res . iterator ( ) ;
rank: 661
score: 99.09981282552083
patch: Iterator iterator = res . entries . size ( ) ;
rank: 661
score: 99.08994547526042
patch: Iterator iter = res . res . iter ( ) ;
rank: 661
score: 99.07532677283653
patch: if ( res != null ) res . res = ) ;
rank: 662
score: 99.15472412109375
patch: Iterator iter = res == null . get CaMeL Dimension ( ) ;
rank: 662
score: 99.09979248046875
patch: Iterator iter = res . entries . iterator ( ) : true ;
rank: 662
score: 99.09972205528847
patch: Iterator ] entries = res . entries . iterator ( ) ;
rank: 662
score: 99.09044300426136
patch: Iterator iter = res . entries = ( ) ;
rank: 662
score: 99.08980305989583
patch: Iterator iter = res . entries . interrupt ( ) ;
rank: 662
score: 99.07525165264423
patch: Iterator < ? extends ) : res . iterator ( ) ;
rank: 663
score: 99.18697415865384
patch: Iterator < int > iter = res . size ( ) ;
rank: 663
score: 99.09933706430289
patch: Iterator < boolean > iter = entries . iterator ( ) ;
rank: 663
score: 99.08960832868304
patch: Iterator iter = res . get CaMeL Property . entries ( ) ;
rank: 663
score: 99.08934529622395
patch: Iterator iter . iterator ( ) . iterator ( ) ;
rank: 663
score: 99.07523287259616
patch: res . res = res . entries . iterator ( ) ;
rank: 663
score: 99.07471642127403
patch: for ( iter = v . entries . iterator ( ) ;
rank: 664
score: 99.14512282151442
patch: Iterator iter = ! v . entries . iterator ( ) ;
rank: 664
score: 99.11955043247768
patch: res . set ( res . get CaMeL Dimension ( ) ) ;
rank: 664
score: 99.08941180889423
patch: final int iter . iterator ( ) . iterator ( ) ;
rank: 664
score: 99.08907063802083
patch: Iterator iter = res . iterator ( ) ; ) {
rank: 665
score: 99.18593052455357
patch: Iterator iter = res . entries . size ( ) - 0 ;
rank: 665
score: 99.1527099609375
patch: Iterator iter = v == null . entries . iterator ( ) ;
rank: 665
score: 99.1450664813702
patch: Iterator iter = res . entries . iterator ( length ) ;
rank: 665
score: 99.11948939732143
patch: Iterator iter = list . iterator ( ) . iterator ( ) ;
rank: 665
score: 99.09873610276442
patch: Iterator < Real CaMeL Vector > iter = res . entries .
rank: 665
score: 99.08892352764423
patch: Iterator < T >> iter = res . entries ( ) ;
rank: 665
score: 99.0885479266827
patch: Iterator iter = res . entries . split ( res ) ;
rank: 665
score: 99.07471720377605
patch: Iterator iter = res . iterator ( ) ( ) ;
rank: 666
score: 99.18455287388393
patch: Iterator iter = get . entries ( ) . iterator ( ) ;
rank: 666
score: 99.15259728064903
patch: Iterator iter = res . ebe CaMeL Multiply ( this ) ;
rank: 666
score: 99.09775797526042
patch: Iterator iter = iterator . has CaMeL Next ( ) ;
rank: 666
score: 99.09395345052083
patch: Iterator iter = res . entries . iterator ( ) :
rank: 666
score: 99.0887451171875
patch: Iterator iter = res . value . entries ( ) ;
rank: 666
score: 99.074462890625
patch: Iterator iter = res . get ) . iterator ( ) ;
rank: 666
score: 99.0711200420673
patch: Iterator iter = res . entries . iterator iter ( ) ;
rank: 667
score: 99.09619140625
patch: Iterator iter = res . entries .
rank: 667
score: 99.09230393629808
patch: Iterator iter = -- res . entries . iterator ( ) ;
rank: 667
score: 99.08827718098958
patch: Iterator iter = res . entries . reverse ( ) ;
rank: 667
score: 99.08818708147321
patch: synchronized ( res ) { entries = res . entries ( ) ;
rank: 667
score: 99.073486328125
patch: Iterator iter = res . Iterator . iterator ( ) ;
rank: 667
score: 99.06990559895833
patch: List res = res . entries . size ( ) ;
rank: 668
score: 99.18401421440973
patch: Iterator < String > < String > iter = res . entries . iterator ( ) ;
rank: 668
score: 99.08588115985577
patch: Iterator < ] > iter = res . list ( ) ;
rank: 668
score: 99.07127888997395
patch: Iterator iter = res . iterator . Iterator ( ) ;
rank: 668
score: 99.06876627604167
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = this ;
rank: 669
score: 99.14320882161458
patch: Iterator iter = res . entries . iterator ( ) ; iter . advance ( ) ;
rank: 669
score: 99.09185791015625
patch: Iterator iter = res . entries . iterator ( ) / $NUMBER$ ;
rank: 669
score: 99.06976873224431
patch: Iterator iter = v . iterator ( ) ; )
rank: 669
score: 99.0677020733173
patch: Iterator iter = res . entries v . iterator ( ) ;
rank: 670
score: 99.15046909877232
patch: if ( iter . has CaMeL Next ( ) ) return res ;
rank: 670
score: 99.14305962456598
patch: for ( while ( res . iterator ( ) . has CaMeL Next ( ) ) {
rank: 670
score: 99.116943359375
patch: if ( res . entries . size ( ) == 0 )
rank: 670
score: 99.09409743088942
patch: Iterator < Entry = v . entries . iterator ( ) ;
rank: 670
score: 99.08550555889423
patch: Iterator iter = res . iterator ( ) ; iter ++ ;
rank: 671
score: 99.09136090959821
patch: int iterator = res . get CaMeL Dimension ( ) . length ;
rank: 671
score: 99.06853693181819
patch: Iterator iter = v ) . iterator ( ) ;
rank: 671
score: 99.06540934244792
patch: Iterator entries = res . entries . size ( ) ;
rank: 672
score: 99.18274797712054
patch: Iterator iter = res . get CaMeL Value . iterator ( ) ;
rank: 672
score: 99.14835030691964
patch: Open CaMeL Map CaMeL Real CaMeL Vector ( res , this ) ;
rank: 672
score: 99.11545235770089
patch: Iterator iter = v . get ( ) . iterator ( ) ;
rank: 672
score: 99.09286733774039
patch: Iterator iter = res . entries . Iterator ( this ) ;
rank: 672
score: 99.0851581280048
patch: Iterator iter . += res . entries . iterator ( ) ;
rank: 672
score: 99.0673319498698
patch: Iterator iter = res . get CaMeL Classes ( ) ;
rank: 673
score: 99.181640625
patch: Iterator iter = res . entries = res . iter ( ) ;
rank: 673
score: 99.09166463216145
patch: Iterator iter = entries . iterator ( ) ; for (
rank: 673
score: 99.09034220377605
patch: Iterator entries = this . entries . iterator ( ) ;
rank: 673
score: 99.08474496694711
patch: Iterator < void > iter = res . iterator ( ) ;
rank: 673
score: 99.0668194110577
patch: if ( v != null ) res . res = v ;
rank: 673
score: 99.06125112680289
patch: Iterator iter = res . entries . size iterator ( ) ;
rank: 674
score: 99.09133676382211
patch: Iterator iter = v . . entries . iterator ( ) ;
rank: 674
score: 99.08472618689903
patch: iterator = res . entries ( ) . iterator ( ) ;
rank: 674
score: 99.08209228515625
patch: / * ] entries = res . entries ( ) ;
rank: 674
score: 99.06650612571023
patch: res . entries = res . entries . length ;
rank: 674
score: 99.06105393629808
patch: Iterator iter = res . entries ) . size ( ) ;
rank: 675
score: 99.1474609375
patch: Iterator iter > = res . entries . iterator ( ) ;
rank: 675
score: 99.14142523871527
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries . entries )
rank: 675
score: 99.0911865234375
patch: iter . advance ( ) ; iter . advance ( ) ;
rank: 675
score: 99.08205159505208
patch: res . entries . add ( res . entries ) ;
rank: 675
score: 99.0587627704327
patch: Iterator iter = v . entries entries . iterator ( ) ;
rank: 676
score: 99.18130832248264
patch: final synchronized ( res ) { iter = res . entries . iterator ( ) ; }
rank: 676
score: 99.08365572415866
patch: Iterator iter = res . entries . entries ( ) ) ;
rank: 676
score: 99.08167521158855
patch: Integer iter = res . entries . iterator ( ) ;
rank: 676
score: 99.06443277994792
patch: Set entries = res . get CaMeL Entries ( ) ;
rank: 677
score: 99.18117947048611
patch: final Iterator < ) > iter = res . entries ( ) . iterator ( ) ;
rank: 677
score: 99.1409912109375
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries , res ) {
rank: 677
score: 99.0906270345052
patch: Iterator iter = res . entries ) iterator ( ) ;
rank: 677
score: 99.08688354492188
patch: Iterator iter = res : res . iterator ( ) ;
rank: 677
score: 99.08072509765626
patch: Iterator iter = out . entries ( ) ;
rank: 678
score: 99.14072137129934
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . next ( ) ;
rank: 678
score: 99.08284505208333
patch: Iterator iter = res . entries . Short ( ) ;
rank: 678
score: 99.08052571614583
patch: / * ] iter = res . entries ( ) ;
rank: 678
score: 99.06344604492188
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;
rank: 679
score: 99.14426676432292
patch: int value = res . get CaMeL Dimension ( ) ;
rank: 679
score: 99.14050971137152
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) +
rank: 679
score: 99.10683030348558
patch: Iterator iter = v . list . iterator ( ) ; ;
rank: 679
score: 99.0875956217448
patch: Iterator iter = res . start . entries ( ) ;
rank: 679
score: 99.06337483723958
patch: Object [ ] res = res . entries ( ) ;
rank: 680
score: 99.10494290865384
patch: Iterator iter 0 = res . entries . iterator ( ) ;
rank: 680
score: 99.08705647786458
patch: long value = v . get CaMeL Dimension ( ) ;
rank: 680
score: 99.07993727463942
patch: for ( String res : res . entries ( ) ) {
rank: 680
score: 99.06304462139423
patch: List < String > res = res . entries ( ) ;
rank: 681
score: 99.17898123604911
patch: final Iterator < Object > iter = res . iterator ( ) ;
rank: 681
score: 99.08660278320312
patch: Iterator iter = v . entries . length ;
rank: 681
score: 99.07941143329327
patch: Iterator < ? >> iter = res . entries ( ) ;
rank: 682
score: 99.14380821814903
patch: Iterator iter = res . entries ( ) [ 0 ] ;
rank: 682
score: 99.14007889597039
patch: super . ebe CaMeL Multiply ( v . get CaMeL Dimension ( ) ) ; return res ;
rank: 682
score: 99.08106407752403
patch: * Iterator iter = res . entries . iterator ( ) ;
rank: 683
score: 99.17864118303571
patch: int size = res . entries . iterator ( ) . length ;
rank: 683
score: 99.14131986177884
patch: Iterator iter = res [ 0 ] . entries ( ) ;
rank: 683
score: 99.14002821180556
patch: Iterator < final Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 683
score: 99.0834248860677
patch: Iterator iter = entries . iterator ( ) ; ) {
rank: 683
score: 99.0810546875
patch: Iterator < ? > iter = res . size ( ) ;
rank: 683
score: 99.07852172851562
patch: double iter = res . entries . iterator ( ) ;
rank: 683
score: 99.0624491373698
patch: Collection iter = res . entries . entries ( ) ;
rank: 683
score: 99.05490112304688
patch: Iterator entries = res . entries . entries ( ) ;
rank: 684
score: 99.17843627929688
patch: Iterator iter = 0 . iterator ( ) ;
rank: 684
score: 99.08104529747597
patch: Iterator iter = ( Iterator ) entries . entries ( ) ;
rank: 684
score: 99.07767740885417
patch: Iterator iter = res . copy . iterator ( ) ;
rank: 684
score: 99.06215413411458
patch: Iterator iter = res . get CaMeL Interfaces ( ) ;
rank: 685
score: 99.138720703125
patch: Iterator < boolean >= iter = res . entries . iterator ( ) ;
rank: 685
score: 99.13739568536931
patch: iter = res . get CaMeL Dimension ( ) ;
rank: 685
score: 99.08438110351562
patch: Iterator iter = this . entries . iter ( ) ;
rank: 685
score: 99.0810077373798
patch: Iterator < Class > iter = res . iterator ( ) ;
rank: 685
score: 99.06166428786058
patch: if ( res != null ) res . ) return res ;
rank: 685
score: 99.05345740685097
patch: new Open CaMeL Map CaMeL Real CaMeL Vector ( v ) ;
rank: 686
score: 99.17803955078125
patch: Iterator < Object > < String > iter = res . entries . iterator ( ) ;
rank: 686
score: 99.138525390625
patch: Iterator < Object > iter = this . entries . iterator ( ) ;
rank: 686
score: 99.0952617938702
patch: for ( ; iter . has CaMeL Next ( ) ; )
rank: 686
score: 99.08098895733173
patch: Iterator iter = res . entries . entries ( ) ; ;
rank: 686
score: 99.0615703876202
patch: Iterator iter = v . iterator ( . iterator ( ) ;
rank: 687
score: 99.13847351074219
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) v .
rank: 687
score: 99.09506225585938
patch: Iterator iter = res . get . size ( ) ;
rank: 687
score: 99.08098895733173
patch: Iterator iter = res . entries . load ( res ) ;
rank: 687
score: 99.07630411783855
patch: List [ ] entries = res . entries ( ) ;
rank: 687
score: 99.05956092247597
patch: if ( res != null && res . res != null )
rank: 688
score: 99.0804443359375
patch: iter = v . entries . iterator ( ) ;
rank: 688
score: 99.076171875
patch: Iterator iter = value . entries ( ) ;
rank: 689
score: 99.17616624098558
patch: Iterator < int > entries = res . entries ( ) ;
rank: 689
score: 99.13836669921875
patch: Iterator < Real CaMeL Vector > iter . has CaMeL Next ( ) ; )
rank: 689
score: 99.08131760817308
patch: final Iterator res = res . entries . iterator ( ) ;
rank: 689
score: 99.07973225911458
patch: Iterator iter = res . sum . iterator ( ) ;
rank: 689
score: 99.07598876953125
patch: int iter = res . map . iterator ( ) ;
rank: 689
score: 99.05928178267045
patch: Iterator iter = res . entries ( ) ; )
rank: 690
score: 99.17613461143092
patch: Iterator iter = res . entries . iterator ( ) ; iterator . put ( $STRING$ ) ;
rank: 690
score: 99.138330078125
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = false ;
rank: 690
score: 99.13196739783653
patch: Iterator iter = res [ 0 ] . size ( ) ;
rank: 690
score: 99.08022054036458
patch: final iter = res . entries . iterator ( ) ;
rank: 690
score: 99.07593712439903
patch: / * ; Iterator iter = res . entries ( ) ;
rank: 690
score: 99.0486309344952
patch: Iterator iter = res . entries . -- iterator ( ) ;
rank: 691
score: 99.17502955386513
patch: Iterator iter = res . get ( ) . entries ( ) . iterator ( ) ; ;
rank: 691
score: 99.07952880859375
patch: Iterator iter = v . entries . next ( ) ;
rank: 691
score: 99.07882690429688
patch: Iterator iter = res . entries . capacity ( ) ;
rank: 691
score: 99.07591834435097
patch: Iterator < String > iter = res . list ( ) ;
rank: 691
score: 99.04861215444711
patch: Iterator iter = v . entries ( ) . ( ) ;
rank: 692
score: 99.17464773995536
patch: final Iterator iter = res . entries . iterator ( ) ) ;
rank: 692
score: 99.1377017372533
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) this ) . entries .
rank: 692
score: 99.1303241436298
patch: Iterator iter = . entries ( ) . iterator ( ) ;
rank: 692
score: 99.08744303385417
patch: Iterator list = res . list . iterator ( ) ;
rank: 692
score: 99.07858511117789
patch: iter = this . res . entries . iterator ( ) ;
rank: 692
score: 99.07581583658855
patch: Iterator < ? ] : res . entries ( ) ;
rank: 692
score: 99.04710804332386
patch: Iterator iter = res . entries iter ( ) ;
rank: 693
score: 99.13737407483552
patch: Iterator < String > iter = res . entries ( ) . entries . iterator ( ) ;
rank: 693
score: 99.07865084134616
patch: Iterator res = res . entries . iterator ( ) ; ;
rank: 693
score: 99.0775146484375
patch: Iterator iter = res . entries . append ( res ) ;
rank: 693
score: 99.07506306966145
patch: Iterator iter = res . entries ( ) ; ) {
rank: 693
score: 99.0462313565341
patch: Iterator iter = res . add ( this ) ;
rank: 694
score: 99.08656819661458
patch: int entries = res . entries . size ( ) ;
rank: 694
score: 99.07810465494792
patch: int res = v . entries . iterator ( ) ;
rank: 694
score: 99.07212477463942
patch: Iterator iter list = res . entries . iterator ( ) ;
rank: 694
score: 99.05711780894886
patch: Iterator iter = v . iterator ( ) ; else
rank: 695
score: 99.13515218098958
patch: Iterator iter ? res . entries . iterator ( ) ;
rank: 695
score: 99.1284891764323
patch: int value = iter . has CaMeL Next ( ) ;
rank: 695
score: 99.08629432091347
patch: res . iterator ( ) . has CaMeL Next ( ) ;
rank: 695
score: 99.07316080729167
patch: Iter iter = res . entries . iterator ( ) ;
rank: 695
score: 99.05675330528847
patch: res . res = res . get CaMeL Bytes ( ) ;
rank: 695
score: 99.044677734375
patch: Iterator iter = 1 . entries . iterator ( ) ;
rank: 696
score: 99.17282443576389
patch: final Iterator < String > iter = res . entries ( ) . iter ( ) ;
rank: 696
score: 99.13496907552083
patch: Iterator iter [ 0 ] = res . entries . iterator ( ) ;
rank: 696
score: 99.12782796223958
patch: Object iter = res . get CaMeL Dimension ( ) ;
rank: 696
score: 99.08463228665866
patch: Iterator iter = res . list . iterator ( 0 ) ;
rank: 696
score: 99.07276407877605
patch: entries . Iterator iter = res . entries ( ) ;
rank: 696
score: 99.05672607421874
patch: Set res = res . entries ( ) ;
rank: 697
score: 99.17280796595982
patch: final Iterator < String > iter = res . size ( ) ;
rank: 697
score: 99.13457174862133
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries .
rank: 697
score: 99.0775858561198
patch: Iterator iter = res . remove . iterator ( ) ;
rank: 697
score: 99.07191051136364
patch: iter = res . map . iterator ( ) ;
rank: 697
score: 99.05604044596355
patch: List res = res . entries . entries ( ) ;
rank: 698
score: 99.17263559194711
patch: Iterator < Iterator > entries = res . entries ( ) ;
rank: 698
score: 99.13405064174107
patch: Iterator < ( iter = res . entries . iterator ( ) ;
rank: 698
score: 99.08450317382812
patch: m iter = res . entries . iterator ( ) ;
rank: 698
score: 99.07665076622597
patch: Iterator iter = ! iter . has CaMeL Next ( ) ;
rank: 698
score: 99.07107309194711
patch: Iterator < ] > iter : res . entries ( ) ;
rank: 698
score: 99.0555889423077
patch: Iterator iter = res . iterator ( iterator ( ) ) ;
rank: 698
score: 99.04363544170673
patch: iter = res . entries ( ) . entries ( ) ;
rank: 699
score: 99.17244779146634
patch: Iterator < ? > entries = res . entries ( ) ;
rank: 699
score: 99.13326590401786
patch: Iterator iter && res . entries ( ) . iterator ( ) ;
rank: 699
score: 99.0844970703125
patch: res . set CaMeL Length ( 0 ) ;
rank: 699
score: 99.07593790690105
patch: List res = v . entries . iterator ( ) ;
rank: 699
score: 99.07114868164062
patch: Iterator iter = $STRING$ . iter ( ) ;
rank: 699
score: 99.0709228515625
patch: Collection entries = res . entries ( ) ;
rank: 699
score: 99.05553260216347
patch: Iterator iter = v . iterator . iterator ( ) ; ;
rank: 699
score: 99.0414530436198
patch: Vector iter = res . entries . size ( ) ;
rank: 700
score: 99.06956990559895
patch: Iterator iterator = res . entries . entries ( ) ;
rank: 700
score: 99.06786170372597
patch: Iterator iter = res [ null ] . entries ( ) ;
rank: 700
score: 99.05498798076923
patch: Iterator < Throwable > iter = res . iterator ( ) ;
rank: 700
score: 99.0412128155048
patch: int value = v . get CaMeL Dimension ( ) ) ;
rank: 701
score: 99.1715087890625
patch: final Iterator < Object > entries = res . entries ( ) ;
rank: 701
score: 99.08304850260417
patch: Iterator iter = map . list . iterator ( ) ;
rank: 701
score: 99.07529703776042
patch: int iter = entries . entries . iterator ( ) ;
rank: 701
score: 99.06908162434895
patch: Iterator iter = res . next . entries ( ) ;
rank: 701
score: 99.067138671875
patch: Iterator iter = new Real CaMeL Vector ( this ) ;
rank: 701
score: 99.0546405498798
patch: Iterator iter = res . iterator ( ) ; int ) ;
rank: 702
score: 99.12163837139423
patch: Iterator iter = entries [ 0 ] . iterator ( ) ;
rank: 702
score: 99.06883544921875
patch: Iterator iter = entries . next ( ) ;
rank: 702
score: 99.06772867838542
patch: res . load ( res . entries ( ) ) ;
rank: 702
score: 99.05443396935097
patch: Iterator < Serializable > iter = res . iterator ( ) ;
rank: 702
score: 99.0352783203125
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = res ;
rank: 703
score: 99.17026238692434
patch: Iterator iter = res . get ( res . get ( ) ) . entries ( ) ;
rank: 703
score: 99.13179779052734
patch: Iterator iter = false ; while ( iter . has CaMeL Next ( ) )
rank: 703
score: 99.07438354492187
patch: iter . has CaMeL Next ( ) ; {
rank: 703
score: 99.05408935546875
patch: List res = res . entries ( ) ;
rank: 704
score: 99.17018479567308
patch: Iterator < Iterator > iter = res . size ( ) ;
rank: 704
score: 99.11776029146634
patch: Iterator iter = res ] . entries . iterator ( ) ;
rank: 704
score: 99.06576772836539
patch: Iterator < Number > iter = res . entries ( ) ;
rank: 704
score: 99.05408653846153
patch: Iterator iter = res . iterator ( ) ; - 1 ;
rank: 705
score: 99.13124593098958
patch: Iterator iter -= res . entries . iterator ( ) ;
rank: 705
score: 99.1161358173077
patch: Iterator iter = ~ res . entries . iterator ( ) ;
rank: 705
score: 99.07222900390624
patch: Iterator iter = res . [ 1 ] ;
rank: 705
score: 99.06351725260417
patch: Iterator iter = res . entries $NUMBER$ iterator ( ) ;
rank: 705
score: 99.053955078125
patch: if ( res . size ( ) > 0 )
rank: 705
score: 99.03331580528847
patch: Iterator iter = res . entries . ( ) . length ;
rank: 706
score: 99.072021484375
patch: Iterator iter = res . err . iterator ( ) ;
rank: 706
score: 99.06320190429688
patch: float iter = res . entries . iterator ( ) ;
rank: 706
score: 99.05382361778847
patch: Iterator < String > iter = v . entries ( ) ;
rank: 707
score: 99.07176717122395
patch: while ( iterator . has CaMeL Next ( ) ) {
rank: 707
score: 99.0653788248698
patch: Iterator iter = get . entries . iterator ( ) ;
rank: 707
score: 99.06221923828124
patch: res . entries . add ( res ) ;
rank: 707
score: 99.05308024088542
patch: List iter = res . entries . entries ( ) ;
rank: 707
score: 99.03176879882812
patch: Iterator iter = v . entries ( ) . length ;
rank: 708
score: 99.06489701704545
patch: Iterator iter = res . entries ( ) ; iterator
rank: 708
score: 99.06171875
patch: Iterator iter : res . entries ( ) ;
rank: 708
score: 99.0526123046875
patch: Iterator iter = res . iterator ( ) ; while ( ;
rank: 709
score: 99.11362711588542
patch: int key = v . get CaMeL Dimension ( ) ;
rank: 709
score: 99.07217172475961
patch: result . entries = res . entries . iterator ( ) ;
rank: 709
score: 99.06258451021634
patch: Iterator iter ++ : res . entries . iterator ( ) ;
rank: 709
score: 99.06137084960938
patch: Iterator iter = res . in . entries ( ) ;
rank: 709
score: 99.0525614420573
patch: Iterator iter = res . iterator ( ) ; else {
rank: 710
score: 99.16753680889423
patch: final Iterator iter = res . name . iterator ( ) ;
rank: 710
score: 99.12896728515625
patch: if ( res . size ( ) > 0 ) {
rank: 710
score: 99.11272723858173
patch: Iterator iter ] = res . entries . iterator ( ) ;
rank: 710
score: 99.0709228515625
patch: Iterator iter = res . insert . iterator ( ) ;
rank: 710
score: 99.06417846679688
patch: Iterator iter = res . . . iterator ( ) ;
rank: 710
score: 99.0612284342448
patch: Iterator iter = new int entries . iterator ( ) ;
rank: 710
score: 99.05155123197116
patch: Iterator < String > iterator = res . iterator ( ) ;
rank: 711
score: 99.16665167557566
patch: Iterator < Iterator < ) > iter = res . entries ( ) . iterator ( ) ;
rank: 711
score: 99.06737342247597
patch: iter = res . list . list . iterator ( ) ;
rank: 711
score: 99.06734212239583
patch: Iterator iter = res . size ( ) ; ) {
rank: 711
score: 99.06360880533855
patch: Iterator iter = res . entries . Boolean ( ) ;
rank: 711
score: 99.06097412109375
patch: Collection list = res . entries ( ) ;
rank: 711
score: 99.0511944110577
patch: Iterator iter = res . entries ( . iterator ( ) ;
rank: 712
score: 99.11048380533855
patch: Object res = res . get CaMeL Entry ( ) ;
rank: 712
score: 99.0668436686198
patch: assert res . entries . size ( ) > 0 ;
rank: 712
score: 99.06015846946023
patch: int < ] : res . entries ( ) ;
rank: 712
score: 99.02783203125
patch: Dimension v = res . get CaMeL Dimension ( ) ;
rank: 713
score: 99.16586143092105
patch: boolean < ? > res = res . entries . iterator ( ) . iterator ( ) ;
rank: 713
score: 99.12824358258929
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : v )
rank: 713
score: 99.10944073016827
patch: Iterator iter = v . entries . . iterator ( ) ;
rank: 713
score: 99.06515502929688
patch: if ( entries . size ( ) > 0 ) {
rank: 713
score: 99.05066935221355
patch: Collection entries = res . entries . iterator ( ) ;
rank: 714
score: 99.10912068684895
patch: int entries = v . get CaMeL Dimension ( ) ;
rank: 714
score: 99.06483811598558
patch: Iterator Iterator iter = res . list . iterator ( ) ;
rank: 714
score: 99.0592041015625
patch: Iterator < $STRING$ > iter = res . entries ( ) ;
rank: 714
score: 99.05047607421875
patch: List res = res . entries . list ( ) ;
rank: 714
score: 99.02742309570313
patch: Iterator iter = res . entries . entries ;
rank: 715
score: 99.0645039876302
patch: Iterator iter = res . advance . iterator ( ) ;
rank: 715
score: 99.06044514973958
patch: = res . entries . entries . iterator ( ) ;
rank: 715
score: 99.05894978841145
patch: int iter = res . map . size ( ) ;
rank: 715
score: 99.0545654296875
patch: Iterator iter = v . entries . iterator ( ) ) ;
rank: 715
score: 99.05038686899039
patch: if ( v . entries . size ( ) > 0 )
rank: 715
score: 99.02517465444711
patch: int value = v . get CaMeL Entry ( length ) ;
rank: 716
score: 99.16550021701389
patch: Iterator iter = res . entries == null ? null : res . iterator ( ) ;
rank: 716
score: 99.12738396139706
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( )
rank: 716
score: 99.06354229266827
patch: Iterator iter $NUMBER$ = res . list . iterator ( ) ;
rank: 716
score: 99.05925958806819
patch: Iterator iter = res . get ( res ) ;
rank: 716
score: 99.04972017728366
patch: Iterator < ? > iter = v . iterator ( ) ;
rank: 716
score: 99.02507990056819
patch: Iterator iter = res . entries Iterator ( ) ;
rank: 717
score: 99.12696838378906
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector entries : res . entries )
rank: 717
score: 99.06263224283855
patch: Iterator map = res . entries . iterator ( ) ;
rank: 717
score: 99.05857340494792
patch: Iterator iter = res . entries ( ) ; * /
rank: 717
score: 99.05328369140625
patch: Iterator iter = res . entries >> iterator ( ) ;
rank: 717
score: 99.02494303385417
patch: Iterator iter = res . chars . iterator ( ) ;
rank: 718
score: 99.12679617745536
patch: Iterator has CaMeL Next = res . entries . iterator ( ) ;
rank: 718
score: 99.10662372295673
patch: Iterator iter = res . entries ] . iterator ( ) ;
rank: 718
score: 99.06263146033653
patch: res . list = res . entries . iterator ( ) ;
rank: 718
score: 99.05833943684895
patch: Iterator * ] iterator = res . entries ( ) ;
rank: 718
score: 99.0567959872159
patch: Iterator iter iter = res . iterator ( ) ;
rank: 718
score: 99.02433638139205
patch: Iterator iter = res . entries . entries ) ;
rank: 719
score: 99.12655203683036
patch: Iterator iter = this . list . entries . iterator ( ) ;
rank: 719
score: 99.06258138020833
patch: Iterator iter = res . list . Iterator ( ) ;
rank: 719
score: 99.06046549479167
patch: Iterator iter = v . entries . Iterator ( ) ;
rank: 719
score: 99.0579833984375
patch: Iterator < String : res . entries ( ) ;
rank: 719
score: 99.05653889973958
patch: Iterator iter = res . clone . iterator ( ) ;
rank: 719
score: 99.02419026692708
patch: Vector iter = this . entries . iterator ( ) ;
rank: 720
score: 99.0614483173077
patch: Iterator iter = res . list . iterator ( ) ) ;
rank: 720
score: 99.05796461838942
patch: Iterator iter = res . entries . get ( null ) ;
rank: 720
score: 99.05575561523438
patch: Iterator iter = res . iter . iter ( ) ;
rank: 721
score: 99.16292898995536
patch: int entries = res . entries . iterator ( ) . length ;
rank: 721
score: 99.12572428385417
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : v ) {
rank: 721
score: 99.05990600585938
patch: Iterator res = res . iterator ( ) ;
rank: 721
score: 99.05560857599431
patch: Iterator iter entries = res . entries ( ) ;
rank: 721
score: 99.0555889423077
patch: Iterator iter = res . entries ( null , 0 ) ;
rank: 721
score: 99.0509502704327
patch: Iterator = res . entries . entries . iterator ( ) ;
rank: 721
score: 99.04667154947917
patch: res . Iterator iter = v . iterator ( ) ;
rank: 722
score: 99.05706787109375
patch: Iterator iter = res . size ( ) ; for (
rank: 722
score: 99.05506388346355
patch: Iterator iter = res . entries . >> ( ) ;
rank: 722
score: 99.050537109375
patch: Iterator iter = v . entries . iterator ( ) 1 ;
rank: 722
score: 99.04562038845486
patch: Iterator < res . size ( ) ;
rank: 723
score: 99.16219932154605
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = res . length ;
rank: 723
score: 99.05609130859375
patch: int v = res . entries . iterator ( ) ;
rank: 723
score: 99.05372111002605
patch: Iterator iter = res . entries . join ( ) ;
rank: 723
score: 99.0507303873698
patch: Iterator $NUMBER$ = res . entries . iterator ( ) ;
rank: 723
score: 99.04423014322917
patch: Iterator iter = res . list . entries ( ) ;
rank: 723
score: 99.02143998579545
patch: Iterator iter = v . entries iterator ( ) ;
rank: 724
score: 99.05599975585938
patch: List res = res . get CaMeL Dimension ( ) ;
rank: 724
score: 99.05039672851562
patch: int iter = entries . iterator ( ) ;
rank: 724
score: 99.04099527994792
patch: Iterator iter = res . clone . entries ( ) ;
rank: 725
score: 99.16122671274039
patch: final Object res = res . entries . get ( ) ;
rank: 725
score: 99.0557352701823
patch: Iterator iter = size ( ) . iterator ( ) ;
rank: 725
score: 99.05035400390625
patch: int iterator = res . entries ( ) . length ;
rank: 725
score: 99.04796346028645
patch: Iterator iter = res >> entries . iterator ( ) ;
rank: 726
score: 99.16024619654605
patch: if ( res . entries . iterator ( ) . contains CaMeL Key ( $STRING$ ) ) {
rank: 726
score: 99.1246826171875
patch: Iterator iter = res . entries [ 0 ] . entries ( ) ;
rank: 726
score: 99.10201322115384
patch: Iterator iter = res . entries = new > ( ) ;
rank: 726
score: 99.0536600748698
patch: List list = res . entries . size ( ) ;
rank: 726
score: 99.05272420247395
patch: Iterator iter = sum . entries . iterator ( ) ;
rank: 726
score: 99.04947509765626
patch: Iterator iter = map . entries ( ) ;
rank: 726
score: 99.04766845703125
patch: Iterator iter = break . entries . iterator ( ) ;
rank: 726
score: 99.04038307883523
patch: res . res . entries = res . entries ;
rank: 726
score: 99.01878773082386
patch: Iterator iter = res . entries . iterator ++ ;
rank: 727
score: 99.15855994591347
patch: final int [ ] res = res . entries ( ) ;
rank: 727
score: 99.05409749348958
patch: Iterator iter = res . end . entries ( ) ;
rank: 727
score: 99.04925537109375
patch: res . add ( res . entries ( ) ) ;
rank: 727
score: 99.04891967773438
patch: List entries = res . entries ( ) ;
rank: 728
score: 99.15733924278847
patch: Iterator < synchronized > iter = res . entries ( ) ;
rank: 728
score: 99.04812622070312
patch: Iterator iter = res . entries . Long ( ) ;
rank: 728
score: 99.04731889204545
patch: final Iterator iterator = res . entries ( ) ;
rank: 729
score: 99.15706693209134
patch: final Object [ ] res = res . entries ( ) ;
rank: 729
score: 99.12146809895833
patch: for ( String key : v . get CaMeL Dimension ( ) ) {
rank: 729
score: 99.0537821451823
patch: Iterator iter = res . read . entries ( ) ;
rank: 729
score: 99.0460205078125
patch: Iterator iter = res = entries . iterator ( ) ;
rank: 729
score: 99.04578653971355
patch: List iter = res . list . iterator ( ) ;
rank: 729
score: 99.03746948242187
patch: Iterator iterator = v . entries ( ) ;
rank: 730
score: 99.12113037109376
patch: Iterator iter = this . iterator ( ) ;
rank: 730
score: 99.03719075520833
patch: Collection res = res . get . entries ( ) ;
rank: 730
score: 99.01433648003473
patch: Iterator iter = res . entries ) ;
rank: 731
score: 99.1001485188802
patch: Iterator iter = res . entries ( ) ; for (
rank: 731
score: 99.05331420898438
patch: Iterator res = res . get CaMeL Dimension ( ) ;
rank: 731
score: 99.04667524857955
patch: protected Iterator iter = res . entries ( ) ;
rank: 731
score: 99.0452168782552
patch: Iterator iter = res . capacity . iterator ( ) ;
rank: 731
score: 99.04151500355114
patch: size = res . entries . size ( ) ;
rank: 731
score: 99.01402791341145
patch: Vector entries = res . entries . size ( ) ;
rank: 732
score: 99.0530293782552
patch: Iterator iter = res . is CaMeL Array ( ) ;
rank: 732
score: 99.0406161221591
patch: list = res . entries . iterator ( ) ;
rank: 732
score: 99.03563435872395
patch: Iterator iter = v . iterator ( ) ; null ;
rank: 732
score: 99.01392711292614
patch: Iterator iter = res . contains ( $STRING$ ) ;
rank: 733
score: 99.15211995442708
patch: int size = res . get CaMeL Index ( ) ;
rank: 733
score: 99.052880859375
patch: Iterator res = res . size ( ) ;
rank: 733
score: 99.04432169596355
patch: Iterator iter = min . entries . iterator ( ) ;
rank: 733
score: 99.03115505642361
patch: Iterator iter = res . entries ( )
rank: 733
score: 99.01380411783855
patch: List entries = res . entries . size ( ) ;
rank: 734
score: 99.12012532552083
patch: Iterator iter = res . entries [ v . size ( ) ] ;
rank: 734
score: 99.09824782151442
patch: Iterator iter = v [ 1 ] . iterator ( ) ;
rank: 734
score: 99.04430042613636
patch: Iterator iter = res . get ( $NUMBER$ ) ;
rank: 734
score: 99.04071514423077
patch: Iterator iter = res . entries . iterator ( false ) ;
rank: 734
score: 99.0310391512784
patch: Iterator < ) : res . iterator ( ) ;
rank: 734
score: 99.01357014973958
patch: Iterator iter = res . entries . [ 0 ] ;
rank: 735
score: 99.1200812844669
patch: Iterator < String > iter = v . entries ( ) . iterator ( ) ;
rank: 735
score: 99.0960205078125
patch: Iterator iter = iter . size ( ) ;
rank: 735
score: 99.04278564453125
patch: Hashtable iter = res . entries . iterator ( ) ;
rank: 736
score: 99.12003580729167
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : this ) {
rank: 736
score: 99.05237833658855
patch: Iterator iter = res . Math . size ( ) ;
rank: 736
score: 99.04363458806819
patch: final Iterator entries = res . entries ( ) ;
rank: 736
score: 99.03789672851562
patch: if ( res == null ) return null ;
rank: 736
score: 99.02708740234375
patch: int iter = res . size ( ) ;
rank: 737
score: 99.14911358173077
patch: final int [ ] iter = res . entries ( ) ;
rank: 737
score: 99.119873046875
patch: Iterator < ? > iter = v . entries . iterator ( ) ;
rank: 737
score: 99.04175821940105
patch: Object entries [ ] = res . entries ( ) ;
rank: 737
score: 99.04170735677083
patch: Iterator iter = super . entries . iter ( ) ;
rank: 737
score: 99.01085408528645
patch: Iterator iter = res . entries . advance ( ) ;
rank: 738
score: 99.11976533777573
patch: if ( res . to CaMeL String ( ) . length ( ) > 0 )
rank: 738
score: 99.0491434733073
patch: Iterator iter = res . size ( ) ( ) ;
rank: 738
score: 99.04124755859375
patch: int iter = entries . size ( ) ;
rank: 738
score: 99.02577718098958
patch: Iterator < ; res . has CaMeL Next ( ) ;
rank: 738
score: 99.01031494140625
patch: Iterator iter = ) . entries . iterator ( ) ;
rank: 739
score: 99.1192626953125
patch: Iterator iter = true ; while ( iter . has CaMeL Next ( ) )
rank: 739
score: 99.03368123372395
patch: Iterator iter = v . get . iterator ( ) ;
rank: 739
score: 99.02423095703125
patch: Iterator iter = v . iterator . next ( ) ;
rank: 740
score: 99.1458740234375
patch: Iterator iter = 0 . entries . iterator ( ) ;
rank: 740
score: 99.0471700032552
patch: Iterator iter = v . res . iterator ( ) ;
rank: 740
score: 99.04027210582386
patch: Iterator iter = res . entries ( ) ; .
rank: 740
score: 99.0345928485577
patch: Iterator iter = v . entries . iterator ( 1 ) ;
rank: 740
score: 99.00938924153645
patch: List iter = this . entries . iterator ( ) ;
rank: 741
score: 99.1457050030048
patch: final int entries = res . entries . size ( ) ;
rank: 741
score: 99.03330485026042
patch: Iterator iter = res > list . iterator ( ) ;
rank: 741
score: 99.0228271484375
patch: String res = res . get CaMeL Name ( ) ;
rank: 741
score: 99.0087890625
patch: int iterator = v . get CaMeL Dimension ( ) ;
rank: 742
score: 99.11863606770834
patch: Iterator < iter >= iter = res . entries . iterator ( ) ;
rank: 742
score: 99.03975053267045
patch: final int entries = res . entries ( ) ;
rank: 742
score: 99.03957112630208
patch: Enumeration iter = res . entries . entries ( ) ;
rank: 743
score: 99.09332275390625
patch: Vector iterator = res . entries . iterator ( ) ;
rank: 743
score: 99.0390625
patch: Iterator iter = res . index CaMeL Of ( ) ;
rank: 743
score: 99.0307861328125
patch: int size = res . size ( ) ;
rank: 743
score: 99.03053977272727
patch: it = res . entries . iterator ( ) ;
rank: 743
score: 99.01807750355114
patch: Iterator < res . entries . size ( ) ;
rank: 744
score: 99.0927734375
patch: Iterator iter = ( iter . iterator ( ) ) ;
rank: 744
score: 99.02748616536458
patch: Iterator iterator = v . list . iterator ( ) ;
rank: 744
score: 99.01779174804688
patch: res ; Iterator iter = res . iterator ( ) ;
rank: 744
score: 99.00820922851562
patch: Open CaMeL Map CaMeL Real CaMeL Vector v = null ;
rank: 745
score: 99.14279409555289
patch: final int size = res . entries . size ( ) ;
rank: 745
score: 99.11758422851562
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : this . res )
rank: 745
score: 99.04543235085227
patch: else res . set CaMeL Entry ( $STRING$ ) ;
rank: 745
score: 99.03772989908855
patch: Iterator iter = res . list . size ( ) ;
rank: 745
score: 99.0375467936198
patch: Iterator iter = res . entries . = ( ) ;
rank: 746
score: 99.09109262319711
patch: Iterator iter = res . entries ( ) [ 1 ] ;
rank: 746
score: 99.04517618815105
patch: List iter = entries . entries . iterator ( ) ;
rank: 746
score: 99.0355224609375
patch: Integer iter = res . entries ( ) ;
rank: 747
score: 99.11736653645833
patch: Iterator < int ) iter = res . entries . iterator ( ) ;
rank: 747
score: 99.08854166666667
patch: Vector iter = v . get CaMeL Dimension ( ) ;
rank: 747
score: 99.04498291015625
patch: Vector res = v . entries . iterator ( ) ;
rank: 747
score: 99.0352294921875
patch: Iterator iter = in . entries ( ) ;
rank: 747
score: 99.03385416666667
patch: Iterator iter = res . entries . end ( ) ;
rank: 747
score: 99.0260009765625
patch: I iter = res . entries . size ( ) ;
rank: 748
score: 99.0440165201823
patch: if ( v . size ( ) > 0 ) {
rank: 748
score: 99.03497314453125
patch: res . entries = res . entries iterator ( ) ;
rank: 748
score: 99.03218841552734
patch: res . add ( res ) ;
rank: 748
score: 99.0145772298177
patch: List res = res . list . entries ( ) ;
rank: 749
score: 99.14090670072116
patch: final Iterator iter = data . entries . iterator ( ) ;
rank: 749
score: 99.11573079427083
patch: Iterator < Real CaMeL Vector > iter = list . iterator ( ) ;
rank: 749
score: 99.04359944661458
patch: Iterator ( res . has CaMeL Next ( ) ) {
rank: 749
score: 99.03469016335227
patch: final int iter = res . entries . length ;
rank: 749
score: 99.02483575994319
patch: res . entries = res . iterator ( ) ;
rank: 749
score: 99.01436360677083
patch: Iterator iter = res . entries ( ;
rank: 750
score: 99.08726917613636
patch: Iterator iter = res . iterator ( ) ; *
rank: 750
score: 99.04334605823864
patch: Iterator iter . has CaMeL Next ( ) ; {
rank: 750
score: 99.03358154296875
patch: Object iter = res . entries ( ) ;
rank: 750
score: 99.03127034505208
patch: Iterator iter ; iter = res . entries ( ) ;
rank: 750
score: 99.02846272786458
patch: Iterator iter = res . iter . next ( ) ;
rank: 750
score: 99.02480061848958
patch: long size = res . entries . size ( ) ;
rank: 750
score: 99.01414794921875
patch: Collection res = res . clone ( ) ;
rank: 751
score: 99.03353881835938
patch: / * Iterator iter = entries . iterator ( ) ;
rank: 752
score: 99.11438927283653
patch: for ( ) { res . set CaMeL Entry ( ) ;
rank: 752
score: 99.08705647786458
patch: int ( v . get CaMeL Dimension ( ) ) ;
rank: 752
score: 99.04120427911931
patch: Iterator iter = res . . size ( ) ;
rank: 752
score: 99.033447265625
patch: Collection [ ] list = res . entries ( ) ;
rank: 752
score: 99.02556762695312
patch: Iterator iter = Iterator . iterator ( ) ;
rank: 752
score: 99.02243381076389
patch: iter = res . iterator ( ) ;
rank: 752
score: 99.01389567057292
patch: Iterator iter ; res . has CaMeL Next ( ) ;
rank: 752
score: 99.00368245442708
patch: Vector res = res . entries . size ( ) ;
rank: 753
score: 99.1384989420573
patch: Iterator iter = System . entries . iterator ( ) ;
rank: 753
score: 99.0865478515625
patch: Vector entries = res . get CaMeL Dimension ( ) ;
rank: 753
score: 99.01370239257812
patch: Iterator iter = res . iterator ( ) ; int ;
rank: 753
score: 99.00355021158855
patch: int size = this . entries . size ( ) ;
rank: 754
score: 99.114306640625
patch: synchronized ( res ) { res . set CaMeL Entry ( ) ; }
rank: 754
score: 99.03078391335227
patch: Iterator iter = res . iterator ( ) ; .
rank: 754
score: 99.02170817057292
patch: Iterator iter = end . entries . iterator ( ) ;
rank: 754
score: 99.02142333984375
patch: int res = res . entries . size ( ) ;
rank: 754
score: 99.00181070963542
patch: int length = res . get CaMeL Dimension ( ) ;
rank: 755
score: 99.11353556315105
patch: Iterator iter . has CaMeL Next ( ) ; ) ;
rank: 755
score: 99.0403340657552
patch: Vector iter = entries . entries . iterator ( ) ;
rank: 755
score: 99.0306396484375
patch: Iterator iter = entries . entries . entries ( ) ;
rank: 755
score: 99.02154541015625
patch: Iterator iter = iter . next ( ) ;
rank: 755
score: 99.02099609375
patch: Iterator iter = v . get . entries ( ) ;
rank: 755
score: 99.00051879882812
patch: Iterator iter = res . contains . size ( ) ;
rank: 756
score: 99.1373799641927
patch: else iter = res . entries . iterator ( ) ;
rank: 756
score: 99.11300455729166
patch: for ( Real CaMeL Vector v : res . entries ( ) ) {
rank: 756
score: 99.03772989908855
patch: Iterator iter = this . size . iterator ( ) ;
rank: 756
score: 99.02969360351562
patch: Iterator iter = data . entries . iter ( ) ;
rank: 756
score: 99.02598063151042
patch: int iter = res . res . entries ( ) ;
rank: 756
score: 99.01150512695312
patch: Iterator iter = res . iterator ( iterator ( ) ;
rank: 757
score: 99.136474609375
patch: final Object [ ] entries = res . entries ( ) ;
rank: 757
score: 99.02964089133523
patch: Iterator iter = . entries . iterator ( ) ;
rank: 757
score: 99.02589925130208
patch: Iterator iter = res . entries ( ) ; ; else
rank: 757
score: 99.01119995117188
patch: Set entries = res . entries . iterator ( ) ;
rank: 758
score: 99.13617412860577
patch: Iterator < Class > entries = res . entries ( ) ;
rank: 758
score: 99.1106426532452
patch: Iterator iter = res . entries . entries [ 0 ] ;
rank: 758
score: 99.03760782877605
patch: Iterator ++ = res . entries . iterator ( ) ;
rank: 758
score: 99.0286865234375
patch: Iterator iter = res . parse ( res ) ;
rank: 758
score: 99.01451619466145
patch: Iterator iter = res . entries . entries . entries ;
rank: 758
score: 99.01101684570312
patch: List iter = res . list . entries ( ) ;
rank: 758
score: 98.998779296875
patch: Iterator iter : v . entries . iterator ( ) ;
rank: 759
score: 99.11016376201923
patch: if ( res instanceof Open CaMeL Map CaMeL Real CaMeL Vector )
rank: 759
score: 99.08230590820312
patch: Iterator iter = iter . iter ( ) ;
rank: 759
score: 99.0365498860677
patch: Iterator iter = res . class . iterator ( ) ;
rank: 759
score: 99.02831013997395
patch: Iterator iter = res . replace . iterator ( ) ;
rank: 759
score: 99.01885986328125
patch: result = res . entries . get ( 0 ) ;
rank: 759
score: 98.99772135416667
patch: int iterator = v . entries . size ( ) ;
rank: 760
score: 99.0816650390625
patch: int ( res . get CaMeL Dimension ( ) ) ;
rank: 760
score: 99.02725219726562
patch: iter = res . entries . . iterator ( ) ;
rank: 760
score: 99.01894124348958
patch: res . entries iterator ( ) . iterator ( ) ;
rank: 760
score: 99.01816628196023
patch: switch ( res . get CaMeL Type ( ) )
rank: 760
score: 99.0082295735677
patch: Iterator iter = res . entries ( ) - 1 ;
rank: 760
score: 98.99739583333333
patch: try { Iterator iter = res . size ( ) ;
rank: 761
score: 99.03549194335938
patch: Iterator iter = ) . has CaMeL Next ( ) ;
rank: 761
score: 99.02504475911458
patch: Iterator iter = res . close . iterator ( ) ;
rank: 761
score: 99.01889870383523
patch: Iterator < ] : res . iterator ( ) ;
rank: 761
score: 99.00773111979167
patch: Collection res = res . get CaMeL Classes ( ) ;
rank: 761
score: 98.99737548828125
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = true ;
rank: 762
score: 99.1069844563802
patch: Iterator iter || res . entries . iterator ( ) ;
rank: 762
score: 99.02437337239583
patch: Iterator iter = res . get CaMeL Integer ( ) ;
rank: 762
score: 99.01863606770833
patch: Iterator iter = res . entries ( ) ; else ;
rank: 762
score: 99.0078633626302
patch: Iterator iter . has CaMeL Next ( ) ; - 1
rank: 762
score: 98.99704996744792
patch: Object iter = res . entries . size ( ) ;
rank: 763
score: 99.03372192382812
patch: Vector res = entries . entries . iterator ( ) ;
rank: 763
score: 99.01806640625
patch: this . res . entries . add ( res ) ;
rank: 763
score: 99.00709117542614
patch: Iterator iter = res . iterator ( ( ) ;
rank: 763
score: 98.99521891276042
patch: Iterator iter = v . get CaMeL Index ( ) ;
rank: 764
score: 99.02344360351563
patch: Iterator iter = res . get != null ;
rank: 764
score: 99.0147372159091
patch: Iterator iter = list . iterator ( ) ; ;
rank: 765
score: 99.01557268415179
patch: res . iterator ( ) ;
rank: 765
score: 99.0145975748698
patch: Iterator iter = data . list . iterator ( ) ;
rank: 766
score: 99.02229817708333
patch: iterator = res . entries . iterator ( ) ; ;
rank: 766
score: 99.005615234375
patch: res . res = res . entries ( ) ;
rank: 767
score: 99.03248087565105
patch: Iterator iter = res . 1 . iterator ( ) ;
rank: 767
score: 99.02222696940105
patch: Iterator iter = entries . iter . iterator ( ) ;
rank: 767
score: 99.01458740234375
patch: Iterator iter = res . intern ( ) ;
rank: 767
score: 99.00482732599431
patch: Iterator iter = v . entries ( res ) ;
rank: 767
score: 99.00031072443181
patch: Iterator iter = ! entries . iterator ( ) ;
rank: 768
score: 99.07194010416667
patch: Iterator iter = res != null . size ( ) ;
rank: 768
score: 99.02193196614583
patch: Iterator iter = $STRING$ . iter . iterator ( ) ;
rank: 768
score: 99.0113525390625
patch: Disposer . Iterator iter = res . iterator ( ) ;
rank: 768
score: 99.0000508626302
patch: Iterator iter = ] . entries . iterator ( ) ;
rank: 768
score: 98.99132080078125
patch: check CaMeL Vector CaMeL Dimensions ( res ) ;
rank: 769
score: 99.02099609375
patch: Iterator entries = res . entries . iter ( ) ;
rank: 769
score: 99.01186116536458
patch: Iterator iter = res . entries ( ) ; while (
rank: 769
score: 99.01050914417614
patch: iter = res . list . size ( ) ;
rank: 769
score: 99.00413004557292
patch: try { Iterator iter = v . entries ( ) ;
rank: 770
score: 99.06599934895833
patch: Dimension iter = res . get CaMeL Dimension ( ) ;
rank: 770
score: 99.0301513671875
patch: Iterator res = entries . iterator ( ) ;
rank: 770
score: 99.01160888671875
patch: Iterator iter = copy . entries ( ) ;
rank: 770
score: 99.0020751953125
patch: Iterator iterator = res . iterator . entries ( ) ;
rank: 770
score: 98.99929809570312
patch: Iterator iter = this . iterator . iterator ( ) ;
rank: 771
score: 99.06486002604167
patch: int key = iter . get CaMeL Dimension ( ) ;
rank: 771
score: 99.02907492897727
patch: final Iterator iter = res . entries . length ;
rank: 771
score: 99.01085408528645
patch: int iter = res . entries . entries ( ) ;
rank: 771
score: 99.00938924153645
patch: int max = res . entries . size ( ) ;
rank: 771
score: 99.00173950195312
patch: Iterator iter ( ) . has CaMeL Next ( ) ;
rank: 771
score: 98.98974609375
patch: for ( ) { iter . advance ( ) ;
rank: 772
score: 99.12560096153847
patch: Iterator < Class > iter = entries . iterator ( ) ;
rank: 772
score: 99.1003926595052
patch: Iterator iter = res . iterator ( ) ; while (
rank: 772
score: 99.01971435546875
patch: Iterator iter = res . entries ( ) ; ) /
rank: 772
score: 99.00996907552083
patch: Iterator iter = res . data . entries ( ) ;
rank: 772
score: 99.00103204900569
patch: Iterator < ) . has CaMeL Next ( ) ;
rank: 773
score: 99.0642801920573
patch: int entries = iter . has CaMeL Next ( ) ;
rank: 773
score: 99.0193204012784
patch: Iterator iter = res . load ( res ) ;
rank: 773
score: 99.00888061523438
patch: Set iter = res . entries ( ) ;
rank: 773
score: 99.00719105113636
patch: Iterator iter = res 1 . iterator ( ) ;
rank: 773
score: 98.99948120117188
patch: Iterator iter = v . iterator ( ) ; * /
rank: 774
score: 99.12472768930289
patch: Iterator < Integer > entries = res . entries ( ) ;
rank: 774
score: 99.06221923828124
patch: res . set CaMeL Entry ( iter ) ;
rank: 774
score: 99.02311567826705
patch: Iterator iter = entries . size ( ) ; ;
rank: 774
score: 99.01892700195313
patch: Iterator iter = sum . iterator ( ) ;
rank: 774
score: 99.00595092773438
patch: Iterator iter = res . iterator ( ) ; ; ;
rank: 774
score: 99.00403941761364
patch: Iterator < String > iter . iterator ( ) ;
rank: 774
score: 98.99943033854167
patch: Iterator iter = v . iterator ( ) - 1 ;
rank: 775
score: 99.0229825106534
patch: Iterator iter = entries . . iterator ( ) ;
rank: 775
score: 99.01679021661931
patch: Iterator iter iterator = res . entries ( ) ;
rank: 775
score: 99.00246360085227
patch: Iterator iter = res . entries ( 0 ) ;
rank: 775
score: 98.99373168945313
patch: Iterator iter = this . size ( ) ;
rank: 775
score: 98.98751831054688
patch: Iterator iter = res . v . entries ( ) ;
rank: 776
score: 99.12328162560097
patch: Iterator = res . entries ( ) . iterator ( ) ;
rank: 776
score: 99.0037508877841
patch: Iterator iter $NUMBER$ = res . iterator ( ) ;
rank: 776
score: 99.00234153053977
patch: Iterator iter = res . entries ( ) ; Entry
rank: 776
score: 98.99849446614583
patch: Collection entries = res . entries . entries ( ) ;
rank: 776
score: 98.98750813802083
patch: Iterator iter : res . entries . size ( ) ;
rank: 777
score: 99.12137545072116
patch: Iterator < String > iter : res . entries ( ) ;
rank: 777
score: 99.0924541766827
patch: Iterator < iter > iter = res . iterator ( ) ;
rank: 777
score: 99.01674397786458
patch: Iterator iter = entries . iterator . iterator ( ) ;
rank: 777
score: 99.00314331054688
patch: int size = res . get . size ( ) ;
rank: 777
score: 98.9984130859375
patch: if ( res . size ( ) == 0 )
rank: 778
score: 99.06088256835938
patch: Iterator iter = v . name . iterator ( ) ;
rank: 778
score: 99.01772238991477
patch: Iterator Iterator iter = res . size ( ) ;
rank: 778
score: 99.01659046519886
patch: Iterator iter = res . get ( true ) ;
rank: 778
score: 99.00245157877605
patch: Iterator iter = res . iterator ( ) ; break ;
rank: 778
score: 98.98957963423295
patch: Iterator iter = ! res . size ( ) ;
rank: 779
score: 99.12053973858173
patch: Iterator < String > iter = entries . entries ( ) ;
rank: 779
score: 99.091796875
patch: Iterator iter = v . index CaMeL Of ( $STRING$ ) ;
rank: 779
score: 99.01644897460938
patch: try ; Iterator iter = res . entries ( ) ;
rank: 779
score: 99.0139892578125
patch: Iterator iter = res . contains ( ) ;
rank: 779
score: 98.99767456054687
patch: Object list = res . entries ( ) ;
rank: 779
score: 98.99727376302083
patch: Object res = res . entries . next ( ) ;
rank: 779
score: 98.9865214029948
patch: Iterator iter = res . FALSE . iterator ( ) ;
rank: 780
score: 99.01568603515625
patch: Iterator iter = res . entries . intern ( ) ;
rank: 780
score: 99.01336115056819
patch: Iterator . has CaMeL Next ( ) ; ) {
rank: 780
score: 98.99723307291667
patch: Iterator iter = v . iterator ( ) ( ) ;
rank: 780
score: 98.9963623046875
patch: Iterator next = res . entries ( ) ;
rank: 781
score: 99.01414998372395
patch: Iterator iter = res . reverse . iterator ( ) ;
rank: 781
score: 98.99570719401042
patch: Object res = res . entries . iterator ( ) ;
rank: 781
score: 98.98909912109374
patch: Iterator entries = res . size ( ) ;
rank: 781
score: 98.9850565592448
patch: Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 782
score: 99.08863414417614
patch: for ( Real CaMeL Vector res : res ) {
rank: 782
score: 99.05430094401042
patch: Iterator iter = $NUMBER$ . entries . iterator ( ) ;
rank: 782
score: 98.999267578125
patch: Iterator Iterator iter = entries . iterator ( ) ;
rank: 782
score: 98.99448464133523
patch: Iterator Iterator iter = res . entries ( ) ;
rank: 783
score: 99.11863014914773
patch: this . entries = res . entries ( ) ;
rank: 783
score: 99.08778889973958
patch: while ( res . size ( ) > 0 ) {
rank: 783
score: 99.013427734375
patch: Iterator iter = res . get CaMeL Value ( ) ;
rank: 783
score: 99.00125122070312
patch: Iterator iter = size . iterator ( ) ;
rank: 783
score: 98.99796919389205
patch: Iterator iter = res . matches ( 0 ) ;
rank: 783
score: 98.99365234375
patch: if ( v == null ) return res ;
rank: 783
score: 98.99037863991477
patch: Iterator < ] > iter . iterator ( ) ;
rank: 784
score: 99.05130004882812
patch: Iterator iter = res == null . size ( ) ;
rank: 784
score: 99.01268513997395
patch: long iter = res . entries . size ( ) ;
rank: 784
score: 98.99240451388889
patch: if ( res . entries != null )
rank: 784
score: 98.98974609375
patch: final Iterator iter = res . copy ( ) ;
rank: 784
score: 98.98097737630208
patch: Iterator iter = res . random . iterator ( ) ;
rank: 785
score: 99.1181171123798
patch: List < Object > entries = res . entries ( ) ;
rank: 785
score: 99.0494140625
patch: Iterator iter = iterator . iterator ( ) ;
rank: 785
score: 99.01259358723958
patch: Iterator iter = res . entries . replace ( ) ;
rank: 785
score: 98.99463500976563
patch: Iterator iter = entries . Iterator ( ) ;
rank: 785
score: 98.99012340198864
patch: Iterator iter = res . entries ( entries ) ;
rank: 785
score: 98.9793192545573
patch: int v = res . entries . size ( ) ;
rank: 786
score: 98.99916585286458
patch: Collection list = res . entries . iterator ( ) ;
rank: 786
score: 98.99430708451705
patch: Iterator iter = entries . iterator ( ) ; {
rank: 786
score: 98.98935768821023
patch: final int iter = res . iterator ( ) ;
rank: 786
score: 98.9891690340909
patch: Iterator iter = res . iterator ( iterator ) ;
rank: 786
score: 98.98436889648437
patch: Iterator iter = v . iter ( ) ;
rank: 786
score: 98.97926839192708
patch: Collection res = res . entries . size ( ) ;
rank: 787
score: 99.11456768329327
patch: Iterator iter = copy ( res . entries ( ) ) ;
rank: 787
score: 99.04598999023438
patch: Iterator length = res . entries . iterator ( ) ;
rank: 787
score: 98.99254261363636
patch: final Iterator iter = entries . size ( ) ;
rank: 787
score: 98.98793723366477
patch: Iterator iter = res . entries entries ( ) ;
rank: 787
score: 98.98572887073864
patch: Iterator iter = res ) . entries ( ) ;
rank: 787
score: 98.9777323404948
patch: Vector iter = res . entries . entries ( ) ;
rank: 788
score: 99.11366624098558
patch: List < Object > iter = res . entries ( ) ;
rank: 788
score: 99.08449143629808
patch: return ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ;
rank: 788
score: 99.0071688565341
patch: Iterator < ) = res . entries ( ) ;
rank: 788
score: 98.996484375
patch: Iterator iter = v . clone ( ) ;
rank: 788
score: 98.98769309303977
patch: Iterator iter = entries . iterator ( 0 ) ;
rank: 788
score: 98.986328125
patch: int < ] : entries . iterator ( ) ;
rank: 788
score: 98.98362223307292
patch: Iterator iter = this . iter . iterator ( ) ;
rank: 788
score: 98.98115844726563
patch: Object res = res . clone ( ) ;
rank: 789
score: 99.0069912997159
patch: Iterator iter = res . iterator ( ) ; iter
rank: 789
score: 98.98768199573864
patch: Iterator iter = res . entries . iterator 1 ;
rank: 789
score: 98.9849853515625
patch: final int iter = entries . iterator ( ) ;
rank: 789
score: 98.98109019886364
patch: res . entries = res . size ( ) ;
rank: 790
score: 99.11182579627403
patch: Iterator < Object > iter : res . entries ( ) ;
rank: 790
score: 99.0819803873698
patch: for ( Real CaMeL Vector res : res . entries )
rank: 790
score: 99.0067647298177
patch: Iterator iter = 0 ;
rank: 790
score: 98.98536265980114
patch: Iterator iter = entries . size ( ) ; }
rank: 790
score: 98.98444158380681
patch: final Iterator iter = list . iterator ( ) ;
rank: 790
score: 98.98291625976563
patch: Iterator list = res . iterator ( ) ;
rank: 790
score: 98.98155721028645
patch: Iterator iter = chars . entries . iterator ( ) ;
rank: 790
score: 98.97979125976562
patch: res . res = res ; return res ;
rank: 790
score: 98.97416178385417
patch: for ( Iterator iter = entries . iterator ( ) ;
rank: 791
score: 99.0057373046875
patch: Iterator iter = new entries . iterator ( ) ;
rank: 791
score: 98.98444213867188
patch: Iterator iter = v . length ( ) ;
rank: 791
score: 98.98355102539062
patch: Vector entries = res . entries ( ) ;
rank: 791
score: 98.9822509765625
patch: Iterator iter = data . iterator ( ) ;
rank: 791
score: 98.97862659801136
patch: Object res = res . entries [ 0 ] ;
rank: 792
score: 99.00309448242187
patch: Iterator iter = res . get > null ;
rank: 792
score: 98.98338623046875
patch: this . entries . add ( res ) ;
rank: 792
score: 98.98146750710227
patch: Iterator iter = entries . iterator ( this ) ;
rank: 792
score: 98.9762295809659
patch: entries = res . get CaMeL Entries ( ) ;
rank: 792
score: 98.9688387784091
patch: Iterator iter = res . matches ( this ) ;
rank: 793
score: 99.11068021334134
patch: List < Iterator > iter = res . entries ( ) ;
rank: 793
score: 99.07830341045673
patch: Iterator < iter . has CaMeL Next ( ) ; ) {
rank: 793
score: 99.04254150390625
patch: long iter = res . get CaMeL Dimension ( ) ;
rank: 793
score: 98.9993896484375
patch: Iterator iter = res . entries [ null ] ;
rank: 793
score: 98.9793368252841
patch: Iterator iter = res . contains ( this ) ;
rank: 793
score: 98.97773881392045
patch: res . iterator ( ) . next ( ) ;
rank: 793
score: 98.97608100043402
patch: Iterator iter = res . iterator ( ;
rank: 794
score: 99.11036095252403
patch: final int [ ] iterator = res . entries ( ) ;
rank: 794
score: 99.0417989095052
patch: res . set CaMeL Entry ( iter . value ) ;
rank: 794
score: 98.99846801757812
patch: iter iter = res . entries ( ) ;
rank: 794
score: 98.98313210227273
patch: Iterator iter = res . entries ( int ) ;
rank: 794
score: 98.97589111328125
patch: Iterator iter = entries . length ;
rank: 794
score: 98.97554321289063
patch: Iterator iter = value . iterator ( ) ;
rank: 795
score: 99.10898061899039
patch: final int [ ] list = res . entries ( ) ;
rank: 795
score: 98.99827991832386
patch: Iterator iter = res . get ( 1 ) ;
rank: 795
score: 98.9824462890625
patch: Hashtable iter = res . entries ( ) ;
rank: 795
score: 98.97964477539062
patch: Iterator entries = res . iterator ( ) ;
rank: 795
score: 98.97459827769886
patch: iter = res . get . entries ( ) ;
rank: 796
score: 99.10858623798077
patch: final int [ ] res . entries = res . entries ;
rank: 796
score: 98.97978071732955
patch: final int iterator = res . entries ( ) ;
rank: 796
score: 98.97916666666667
patch: Iterator iterator = this . entries . iterator ( ) ;
rank: 796
score: 98.973095703125
patch: Set entries = res . entries ( ) ;
rank: 796
score: 98.97137451171875
patch: res . entries [ 0 ] = res ;
rank: 797
score: 99.10564716045673
patch: Object res = res . entries . get ( $NUMBER$ ) ;
rank: 797
score: 99.0407002766927
patch: Iterator iter = iter . iterator ( ) ; for (
rank: 797
score: 98.996044921875
patch: Iterator iter = res . entries ( ) )
rank: 797
score: 98.97907049005681
patch: Iterator iter = res . entries ( 1 ) ;
rank: 798
score: 99.10129801432292
patch: Insets iter = res . entries . iterator ( ) ;
rank: 798
score: 99.07337443033855
patch: Iterator iter *= res . entries . iterator ( ) ;
rank: 798
score: 98.97812906901042
patch: Iterator iter = res . entries . iterator ( ) ?
rank: 798
score: 98.9781161221591
patch: int iter = res . entries ( null ) ;
rank: 798
score: 98.97136896306819
patch: this . res . entries = res . entries ;
rank: 798
score: 98.96814575195313
patch: Iterator iter = res . entries . has CaMeL
rank: 798
score: 98.96037153764205
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = new
rank: 799
score: 98.99233176491477
patch: Iterator iter = res . entries ( ) ; Iterator
rank: 799
score: 98.97801717122395
patch: Iterator iter = res > res . iterator ( ) ;
rank: 799
score: 98.97397682883523
patch: res . entries = this . res . entries ;
rank: 799
score: 98.96929376775569
patch: entries = res . entries . size ( ) ;
rank: 799
score: 98.96027166193181
patch: iter . iter . has CaMeL Next ( ) ;
rank: 799
score: 98.95758056640625
patch: Iterator iter = res . entries . FALSE ;
rank: 800
score: 98.97307794744319
patch: iterator = res . map . iterator ( ) ;
rank: 800
score: 98.96786934988839
patch: res . res = res ;
rank: 800
score: 98.95991654829545
patch: else res . set CaMeL Entry ( 0 ) ;
rank: 800
score: 98.95741577148438
patch: int value = iter . size ( ) ;
rank: 801
score: 99.06924438476562
patch: Set list = res . entries . iterator ( ) ;
rank: 801
score: 98.9886807528409
patch: Iterator iter = res . iterator ( ) ; Iterator
rank: 801
score: 98.97650146484375
patch: Iterator iter = v > entries . iterator ( ) ;
rank: 801
score: 98.97130237926136
patch: final int iter = entries . size ( ) ;
rank: 801
score: 98.9594393643466
patch: Iterator iter = res . entries . length ; ;
rank: 802
score: 99.03621419270833
patch: Real CaMeL Vector res = iter . advance ( ) ;
rank: 802
score: 98.98854758522727
patch: entries . iterator ( ) . iterator ( ) .
rank: 802
score: 98.95688205295139
patch: Iterator . has CaMeL Next ( ) ;
rank: 803
score: 99.06812540690105
patch: Vector res = new Real CaMeL Vector ( this ) ;
rank: 803
score: 99.03466796875
patch: Iterator iter = v . iterator ( ) ; for (
rank: 803
score: 98.98393110795455
patch: Iterator iter = entries . get ( res ) ;
rank: 803
score: 98.96942693536931
patch: res . value = res . entries ( ) ;
rank: 803
score: 98.95609130859376
patch: Iterator iter = v . Iterator ( ) ;
rank: 803
score: 98.951171875
patch: iter = v . list . iterator ( ) ;
rank: 804
score: 99.06773963341347
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector != null ;
rank: 804
score: 99.0326436360677
patch: Iterator iter = res : res . entries ( ) ;
rank: 804
score: 98.9825106534091
patch: / Iterator iter = res . entries ( ) ;
rank: 804
score: 98.9690673828125
patch: boolean iter = res . entries ( ) ;
rank: 804
score: 98.9622469815341
patch: Iterator iter = res . iterator . ( ) ;
rank: 804
score: 98.95558860085227
patch: Iterator < Real CaMeL Vector > iter = res ;
rank: 804
score: 98.9501953125
patch: res . entries = res . map . entries ;
rank: 804
score: 98.9494140625
patch: Vector iter = v . entries ( ) ;
rank: 805
score: 99.03235880533855
patch: int key = res . get CaMeL Dimension ( ) ;
rank: 805
score: 98.98016967773438
patch: Iterator iterator = entries . iterator ( ) ;
rank: 805
score: 98.96781005859376
patch: Iterator iter = res . delete ( ) ;
rank: 805
score: 98.946044921875
patch: Iterator iter = res ) . size ( ) ;
rank: 806
score: 99.06612141927083
patch: for ( Real CaMeL Vector v : res . entries )
rank: 806
score: 98.97862659801136
patch: Iterator < ) = res . iterator ( ) ;
rank: 806
score: 98.96647505326705
patch: int iter = res . entries . ( ) ;
rank: 806
score: 98.95981667258523
patch: iter = res . list . entries ( ) ;
rank: 806
score: 98.95494495738636
patch: Iterator iter = res . iterator ( 0 ) ;
rank: 806
score: 98.94635564630681
patch: Iterator iter = v . get ( res ) ;
rank: 806
score: 98.94475763494319
patch: Iterator iter = res . size iterator ( ) ;
rank: 807
score: 99.08828735351562
patch: Iterator iter = ( entries . iterator ( ) ) ;
rank: 807
score: 99.03200276692708
patch: Iterator iter = v == null . iterator ( ) ;
rank: 807
score: 98.96994850852273
patch: Iterator iter = res . size ( ) 1 ;
rank: 807
score: 98.9595059481534
patch: Iterator iter = res . entries . iterator ( ;
rank: 807
score: 98.94575639204545
patch: n = res . entries . size ( ) ;
rank: 807
score: 98.9420166015625
patch: entries = new Real CaMeL Vector ( this ) ;
rank: 808
score: 98.97733931107955
patch: Iterator iter iterator = res . iterator ( ) ;
rank: 808
score: 98.96484375
patch: res . entries ( ) ;
rank: 808
score: 98.94525701349431
patch: m = res . entries . iterator ( ) ;
rank: 809
score: 98.9770840731534
patch: Iterator iter ( entries . iterator ( ) ) ;
rank: 809
score: 98.9622802734375
patch: Iterator iter = res [ 0 ] ;
rank: 809
score: 98.9583407315341
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;
rank: 809
score: 98.94030151367187
patch: List iter = v . entries ( ) ;
rank: 810
score: 98.9745760830966
patch: Iterator iter . = res . entries ( ) ;
rank: 810
score: 98.95612127130681
patch: Iterator iter 1 = res . iterator ( ) ;
rank: 810
score: 98.9430819424716
patch: Iterator iter = res . clone ( ) ; ;
rank: 810
score: 98.94010009765626
patch: Iterator iter = res . entries . 0 ;
rank: 811
score: 99.06204927884616
patch: Iterator iter -- = res . entries . iterator ( ) ;
rank: 811
score: 99.02911931818181
patch: Iterator ( res . entries . iterator ( ) )
rank: 811
score: 98.97123579545455
patch: Iterator iter = res . entries ( ) . ;
rank: 812
score: 99.06186147836539
patch: for ( if ( iter . has CaMeL Next ( ) )
rank: 812
score: 99.0258456143466
patch: Iterator iter = res $NUMBER$ . iterator ( ) ;
rank: 812
score: 98.96123046875
patch: Iterator size = res . entries ( ) ;
rank: 812
score: 98.94798694957386
patch: Iterator iter = res . iterator ( ) ; {
rank: 813
score: 99.06137319711539
patch: for ( while ( iter . has CaMeL Next ( ) )
rank: 813
score: 99.0239501953125
patch: int iter = iter . iterator ( ) ;
rank: 813
score: 98.96842817826705
patch: iter = entries . entries . iterator ( ) ;
rank: 813
score: 98.95865478515626
patch: double iter = res . entries ( ) ;
rank: 813
score: 98.94666637073864
patch: Iterator iter = res . size ( ) ; {
rank: 813
score: 98.9339932528409
patch: iter = this . entries . iterator ( ) ;
rank: 814
score: 99.06035907451923
patch: Iterator while ( res . has CaMeL Next ( ) ) {
rank: 814
score: 99.02000843394886
patch: Iterator iter = res . entries size ( ) ;
rank: 814
score: 98.95671997070312
patch: int iter = res . clone ( ) ;
rank: 814
score: 98.94748757102273
patch: Iterator iterator = res . iterator ( ) ; ;
rank: 814
score: 98.94656372070312
patch: Iterator iter = res . entries ( ) .
rank: 814
score: 98.93546919389205
patch: ; Iterator iter = res . iterator ( ) ;
rank: 815
score: 99.07974243164062
patch: int [ ] res = res . entries ( ) ;
rank: 815
score: 99.0597393329327
patch: if ( v instanceof Open CaMeL Map CaMeL Real CaMeL Vector )
rank: 815
score: 98.96683349609376
patch: = res . entries . iterator ( ) ;
rank: 815
score: 98.9565673828125
patch: Iterator iter = list . iter ( ) ;
rank: 815
score: 98.9522705078125
patch: Iterator iter = iter . remove ( ) ;
rank: 815
score: 98.94591674804687
patch: Iterator iter = res . [ $NUMBER$ ] ;
rank: 815
score: 98.93398215553977
patch: state = res . get CaMeL State ( ) ;
rank: 816
score: 98.96656494140625
patch: Iterator iter = res . entries != null ;
rank: 816
score: 98.94512384588069
patch: Iterator iter . has CaMeL Next ( ) ; &&
rank: 816
score: 98.94294877485795
patch: Iterator iter = new Real CaMeL Vector ( ) ;
rank: 816
score: 98.92998712713069
patch: result = res . entries . iterator ( ) ;
rank: 817
score: 99.00864479758523
patch: if ( iter . has CaMeL Next ( ) )
rank: 817
score: 98.94492409446023
patch: new Iterator iter = res . iterator ( ) ;
rank: 817
score: 98.94121759588069
patch: Iterator iter = res . Iterator ( this ) ;
rank: 817
score: 98.9289883700284
patch: Iterator iter 0 = res . iterator ( ) ;
rank: 817
score: 98.9227294921875
patch: Iterator iter = res . is CaMeL Empty ( )
rank: 818
score: 99.05568625710227
patch: for ( Real CaMeL Vector v : res ) {
rank: 818
score: 98.96451416015626
patch: Iterator iter = 0 . iter ( ) ;
rank: 818
score: 98.94365900213069
patch: if ( v . size ( ) > 0 )
rank: 818
score: 98.94228293678977
patch: Iterator iter = res . iterator ( 1 ) ;
rank: 818
score: 98.94041859019886
patch: Iterator iter = res . equals ( $STRING$ ) ;
rank: 818
score: 98.92869262695312
patch: int entries = res . entries . length ;
rank: 818
score: 98.92231889204545
patch: Iterator iter = res . [ - 1 ] ;
rank: 819
score: 99.00656960227273
patch: Iterator iter = res . entries ( ) != null
rank: 819
score: 98.94302978515626
patch: if ( res != null ) res . ;
rank: 819
score: 98.93834339488636
patch: Iterator iter = res . contains ( null ) ;
rank: 819
score: 98.9276123046875
patch: int size = res . entries . length ;
rank: 819
score: 98.921533203125
patch: res . set CaMeL Entry ( this ) ;
rank: 820
score: 98.963232421875
patch: Iterator iter = res . capacity ( ) ;
rank: 820
score: 98.95484619140625
patch: Iterator iter = $STRING$ . entries ( ) ;
rank: 820
score: 98.93712269176136
patch: iterator = res . get CaMeL Dimension ( ) ;
rank: 821
score: 98.9622802734375
patch: Iterator iter = res . contains ( res ) ;
rank: 821
score: 98.95458374023437
patch: int iter = res . copy ( ) ;
rank: 821
score: 98.93841552734375
patch: Iterator iter = ) . iterator ( ) ;
rank: 821
score: 98.9357022372159
patch: iter . has CaMeL Next ( ) ; ) {
rank: 821
score: 98.92677307128906
patch: Iterator iter = size ( ) ;
rank: 821
score: 98.91822398792614
patch: Iterator iter = v . entries . ( ) ;
rank: 822
score: 98.9543789950284
patch: Iterator ] res = res . entries ( ) ;
rank: 822
score: 98.93935546875
patch: if ( v != null ) return res ;
rank: 822
score: 98.938037109375
patch: Iterator iter = Iterator . size ( ) ;
rank: 822
score: 98.92563698508523
patch: iterator = res . list . iterator ( ) ;
rank: 823
score: 98.9588290127841
patch: Iterator iter ( res . iterator ( ) ) {
rank: 823
score: 98.93672318892045
patch: final Iterator iterator = res . iterator ( ) ;
rank: 823
score: 98.92424926757812
patch: Iterator iterator = list . iterator ( ) ;
rank: 824
score: 99.06737263997395
patch: int length = res . entries . size ( ) ;
rank: 824
score: 98.9580078125
patch: / Iterator iter = res . iterator ( ) ;
rank: 824
score: 98.95253684303977
patch: int iter = res . entries ( $NUMBER$ ) ;
rank: 824
score: 98.93248748779297
patch: Iterator iter = res . get CaMeL
rank: 825
score: 98.951953125
patch: Iterator iter = out . iterator ( ) ;
rank: 825
score: 98.9350918856534
patch: final Iterator iter = v . entries ( ) ;
rank: 825
score: 98.93010864257812
patch: Iterator iter = v . next ( ) ;
rank: 825
score: 98.92911376953126
patch: Iterator iter = res . entries . iterator ;
rank: 825
score: 98.90799560546876
patch: int value = iter . advance ( ) ;
rank: 826
score: 99.0498555501302
patch: Set iterator = res . entries . iterator ( ) ;
rank: 826
score: 98.95139382102273
patch: public Iterator iter = res . entries ( ) ;
rank: 826
score: 98.93162952769886
patch: iter = res . iterator . next ( ) ;
rank: 826
score: 98.92908824573864
patch: Iterator iter = entries ) . iterator ( ) ;
rank: 826
score: 98.9219970703125
patch: Enumeration iter = v . entries ( ) ;
rank: 827
score: 99.06461958451705
patch: Iterator iter = entries . iterator ( ) ; else
rank: 827
score: 99.04958089192708
patch: Iterator iter == res . entries . iterator ( ) ;
rank: 827
score: 98.9876376065341
patch: iter = iter . has CaMeL Next ( ) ;
rank: 827
score: 98.9549227627841
patch: iter = res . entries . iter ( ) ;
rank: 827
score: 98.948486328125
patch: res . entries = res . entries ) ;
rank: 827
score: 98.9308749112216
patch: entries = res . entries . clone ( ) ;
rank: 827
score: 98.92743474786931
patch: final Iterator iter = res . length ( ) ;
rank: 827
score: 98.9245849609375
patch: Iterator iter = res . start ( ) ;
rank: 827
score: 98.90545654296875
patch: res . set CaMeL Entry ( $STRING$ ) ;
rank: 828
score: 99.04542032877605
patch: Iterator < iter . has CaMeL Next ( ) ; )
rank: 828
score: 98.98609508167614
patch: int Iterator iter = res . iterator ( ) ;
rank: 828
score: 98.95403497869319
patch: Iterator iter = $STRING$ . iterator ( ) ; ;
rank: 828
score: 98.94775390625
patch: List list = res . entries ( ) ;
rank: 828
score: 98.93085327148438
patch: Set res = res . clone ( ) ;
rank: 828
score: 98.92693481445312
patch: List iter = entries . iterator ( ) ;
rank: 828
score: 98.9202880859375
patch: Iterator iter ( res . size ( ) ) ;
rank: 829
score: 98.94715576171875
patch: Iterator iter = list . size ( ) ;
rank: 829
score: 98.91742498224431
patch: iter = v . entries . size ( ) ;
rank: 830
score: 99.05893961588542
patch: String res = res . to CaMeL String ( ) ;
rank: 830
score: 98.9814697265625
patch: Iterator iter = $NUMBER$ . iterator ( ) ;
rank: 830
score: 98.95006214488636
patch: Iterator iter = res . entries ( ) ; iter
rank: 830
score: 98.9470703125
patch: iter = res . entries ( null ) ;
rank: 830
score: 98.90273215553977
patch: Iterator iter = res . entries . iterator 0 ;
rank: 831
score: 98.98118286132812
patch: Vector iter = res . iterator ( ) ;
rank: 831
score: 98.9493408203125
patch: Iterator iter = res . read ( res ) ;
rank: 831
score: 98.94671020507812
patch: Enumeration entries = res . entries ( ) ;
rank: 831
score: 98.92179565429687
patch: Iterator iter = res . iterator . ) ;
rank: 832
score: 99.0553690592448
patch: Iterator iter = $NUMBER$ * entries . iterator ( ) ;
rank: 832
score: 99.0426513671875
patch: Enumeration iter = res . iterator ( ) ;
rank: 832
score: 98.92271118164062
patch: Iterator iter = res . get CaMeL Real CaMeL
rank: 832
score: 98.91348266601562
patch: Iterator entries = v . entries ( ) ;
rank: 832
score: 98.9002685546875
patch: Iterator iter = res . size ( ) ) ;
rank: 833
score: 99.05522017045455
patch: final Object entries = res . entries ( ) ;
rank: 833
score: 99.04214477539062
patch: Iterator < int ) = res . iterator ( ) ;
rank: 833
score: 98.94478352864583
patch: iter = entries . iterator ( ) ;
rank: 833
score: 98.92160034179688
patch: Iterator iter = res . entries . end ;
rank: 833
score: 98.91251831054687
patch: assert iter . has CaMeL Next ( ) ;
rank: 833
score: 98.91232299804688
patch: Iterator iter += res . size ( ) ;
rank: 834
score: 99.05413263494319
patch: final Object res = res . get ( ) ;
rank: 834
score: 99.04109700520833
patch: Iterator while ( res . has CaMeL Next ( ) )
rank: 834
score: 98.94574529474431
patch: iter . iterator ( ) . iterator ( ) ;
rank: 834
score: 98.94376997514205
patch: Iterator $NUMBER$ ] = res . entries ( ) ;
rank: 834
score: 98.91767578125
patch: Iterator iter = res . end ( ) ;
rank: 834
score: 98.89045854048295
patch: Iterator iter advance = res . size ( ) ;
rank: 835
score: 98.97723943536931
patch: Iterator iter = v . entries . iterator ( )
rank: 835
score: 98.943017578125
patch: Iterator iter = copy . iterator ( ) ;
rank: 835
score: 98.91682739257813
patch: Iterator iter = entries . entries . length ;
rank: 835
score: 98.91336398654514
patch: iter = v . entries ( ) ;
rank: 835
score: 98.909423828125
patch: iter = list . entries . iterator ( ) ;
rank: 836
score: 99.03948974609375
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > }
rank: 836
score: 98.9754150390625
patch: Iterator iter = name . iterator ( ) ;
rank: 836
score: 98.94267134232955
patch: Iterator < ? : res . entries ( ) ;
rank: 836
score: 98.91319691051136
patch: res . entries = res . clone ( ) ;
rank: 836
score: 98.9119140625
patch: Iterator iter = res . entries . false ;
rank: 836
score: 98.9093905362216
patch: children = res . entries . iterator ( ) ;
rank: 837
score: 99.03940836588542
patch: Iterator iter > iter = res . iterator ( ) ;
rank: 837
score: 98.94243774414062
patch: Iterator 1 = res . entries ( ) ;
rank: 837
score: 98.91048758370536
patch: if ( res != null )
rank: 837
score: 98.90900213068181
patch: result . entries = res . entries . entries ;
rank: 837
score: 98.90416370738636
patch: Iterator iter = ! v . iterator ( ) ;
rank: 837
score: 98.88563121448864
patch: Iterator iter = ! v . size ( ) ;
rank: 838
score: 98.9029052734375
patch: Iterator < = v . iterator ( ) ;
rank: 839
score: 99.03568522135417
patch: Iterator iter + res . entries . iterator ( ) ;
rank: 839
score: 98.93793402777777
patch: Iterator < ) . iterator ( ) ;
rank: 840
score: 98.96498413085938
patch: super . ebe CaMeL Multiply ( res ) ;
rank: 840
score: 98.94249378551136
patch: Iterator iter = res . split ( res ) ;
rank: 840
score: 98.93359985351563
patch: Set list = res . entries ( ) ;
rank: 840
score: 98.90404163707386
patch: dim . entries = res . entries . entries ;
rank: 840
score: 98.90133056640624
patch: Iterator iter = res . matches ( ) ;
rank: 840
score: 98.88225763494319
patch: Iterator iter = res . entries . iterator ) ;
rank: 841
score: 98.96256880326705
patch: Iterator iter = res . entries . size ( )
rank: 841
score: 98.94108442826705
patch: Iterator iter = new res . iterator ( ) ;
rank: 841
score: 98.93003151633523
patch: Iterator iter = res . list ( null ) ;
rank: 841
score: 98.88856811523438
patch: Vector res = res . entries ( ) ;
rank: 841
score: 98.87970525568181
patch: res . set CaMeL Entry ( - 1 ) ;
rank: 842
score: 98.94096235795455
patch: Iterator iter = res . entries ( ) ) }
rank: 842
score: 98.928125
patch: Object entries = res . entries ( ) ;
rank: 842
score: 98.88713989257812
patch: Iterator entries = v . iterator ( ) ;
rank: 843
score: 99.03289794921875
patch: Enumeration iter = v . entries . iterator ( ) ;
rank: 843
score: 98.89861450195312
patch: Iterator iter = this . entries . length ;
rank: 844
score: 98.95751953125
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res
rank: 844
score: 98.93998579545455
patch: final Iterator iter = $STRING$ . iterator ( ) ;
rank: 844
score: 98.92640269886364
patch: Iterator < T : res . entries ( ) ;
rank: 844
score: 98.897216796875
patch: Iterator iter = key . iterator ( ) ;
rank: 844
score: 98.885791015625
patch: List res = res . list ( ) ;
rank: 844
score: 98.86649169921876
patch: Iterator iter = res . wait ( ) ;
rank: 845
score: 99.03426513671874
patch: Object res = res . get ( ) ;
rank: 845
score: 98.95657348632812
patch: Iterator iter = 1 . iterator ( ) ;
rank: 845
score: 98.92535400390625
patch: Iterator * ] res . iterator ( ) ;
rank: 845
score: 98.89083862304688
patch: Iterator iterator = res . size ( ) ;
rank: 845
score: 98.86644897460937
patch: res . set CaMeL Entry ( 0 ) ;
rank: 846
score: 99.02748801491477
patch: Iterator iter = res . entries [ 1 ] ;
rank: 846
score: 98.92335815429688
patch: Iterator iter = res . join ( ) ;
rank: 846
score: 98.88922119140625
patch: Iterator iter = res . interrupt ( ) ;
rank: 846
score: 98.86332397460937
patch: List iter = res . size ( ) ;
rank: 847
score: 98.93555908203125
patch: Iterator iter = res . parse ( ) ;
rank: 847
score: 98.88756713867187
patch: Iterator iter = res . get ( new ;
rank: 847
score: 98.88095092773438
patch: List iter = res . iterator ( ) ;
rank: 848
score: 98.88790283203124
patch: Iterator iter = res . entries . true ;
rank: 848
score: 98.887109375
patch: Iterator iter : res . size ( ) ;
rank: 848
score: 98.8802978515625
patch: Collection res = res . iterator ( ) ;
rank: 848
score: 98.87607421875
patch: res . set CaMeL Index ( 0 ) ;
rank: 849
score: 99.0251953125
patch: if ( res != null ) throw null ;
rank: 849
score: 98.9492520419034
patch: Iterator iter = res . entries . entries ( )
rank: 849
score: 98.9131591796875
patch: float iter = res . entries ( ) ;
rank: 849
score: 98.886083984375
patch: Iterator iter = v . read ( ) ;
rank: 849
score: 98.8854647549716
patch: Iterator iter = get CaMeL Dimension ( iter ) ;
rank: 849
score: 98.88005981445312
patch: Collection iter = res . iterator ( ) ;
rank: 849
score: 98.86123657226562
patch: Iterator iter = res ;
rank: 850
score: 99.0242032137784
patch: final Object res = res . entries ( ) ;
rank: 850
score: 98.91110229492188
patch: entries . add ( res ) ;
rank: 850
score: 98.87988891601563
patch: if ( res != null ) res . )
rank: 850
score: 98.85984497070312
patch: int value = iter . next ( ) ;
rank: 851
score: 99.02381388346355
patch: List v = res . entries . iterator ( ) ;
rank: 851
score: 98.9489013671875
patch: Vector iter = entries . iterator ( ) ;
rank: 851
score: 98.93177379261364
patch: Iterator iter ( res . next ( ) ) ;
rank: 851
score: 98.9097412109375
patch: Iterator v = res . entries ( ) ;
rank: 851
score: 98.87800598144531
patch: Iterator iter = res . has CaMeL
rank: 851
score: 98.8673828125
patch: res . entries [ 0 ] = null ;
rank: 852
score: 98.9300204190341
patch: Iterator iter . = res . iterator ( ) ;
rank: 852
score: 98.9093017578125
patch: Iterator iter = sum . entries ( ) ;
rank: 852
score: 98.87755237926136
patch: Iterator iter = res . entries . iterator $NUMBER$ ;
rank: 852
score: 98.87494574652777
patch: Iterator iter = entries . ( ) ;
rank: 852
score: 98.87374877929688
patch: Iterator < = res . iterator ( ) ;
rank: 853
score: 98.92960815429687
patch: entries iter = res . entries ( ) ;
rank: 853
score: 98.90655517578125
patch: long iter = res . entries ( ) ;
rank: 853
score: 98.8768798828125
patch: Iterator iter = res . max ( ) ;
rank: 853
score: 98.87401123046875
patch: Iterator iter = res . split ( ) ;
rank: 853
score: 98.8625
patch: dim . entries . add ( res ) ;
rank: 854
score: 99.01667924360795
patch: final Object iter = res . entries ( ) ;
rank: 854
score: 98.90086059570312
patch: Iterator iter = random . entries ( ) ;
rank: 854
score: 98.87653142755681
patch: Iterator iter = res . iterator ( ) 1 ;
rank: 855
score: 98.871240234375
patch: Iterator iter = super . iterator ( ) ;
rank: 855
score: 98.866650390625
patch: Iterator . has CaMeL Next ( ) ; {
rank: 855
score: 98.86066284179688
patch: res . set CaMeL Daemon ( true ) ;
rank: 855
score: 98.84457397460938
patch: List entries = v . entries ( ) ;
rank: 856
score: 99.01319469105114
patch: final int entries = res . entries . length ;
rank: 856
score: 98.94201049804687
patch: Iterator iter = set . iterator ( ) ;
rank: 856
score: 98.90046997070313
patch: short iter = res . entries ( ) ;
rank: 856
score: 98.86935424804688
patch: Object res = res . entries ( ) ;
rank: 856
score: 98.86626586914062
patch: else res . set CaMeL Entry ( ) ;
rank: 857
score: 98.89434204101562
patch: Iterator * ] list . iterator ( ) ;
rank: 857
score: 98.855517578125
patch: assert res . size ( ) > 0 ;
rank: 857
score: 98.84044799804687
patch: Iterator iter = $STRING$ . size ( ) ;
rank: 858
score: 99.00514914772727
patch: super . entries = res . entries ( ) ;
rank: 858
score: 98.89352416992188
patch: Iterator iter = res . entries = null ;
rank: 858
score: 98.86410522460938
patch: int iter = v . size ( ) ;
rank: 858
score: 98.85543212890624
patch: Iterator iter = min . iterator ( ) ;
rank: 859
score: 98.86240234375
patch: Set iter = res . iterator ( ) ;
rank: 859
score: 98.8363525390625
patch: Vector entries = v . entries ( ) ;
rank: 860
score: 99.0033291903409
patch: Iterator < iter : res . iterator ( ) ;
rank: 860
score: 98.8916244506836
patch: int iter . iterator ( ) ;
rank: 860
score: 98.87129516601563
patch: Iterator iter = res > iterator ( ) ;
rank: 860
score: 98.86029730902777
patch: res = res . entries ( ) ;
rank: 860
score: 98.8560302734375
patch: Iterator iter = res . entries . entries .
rank: 860
score: 98.836279296875
patch: Open CaMeL Map CaMeL Real CaMeL Vector -- ;
rank: 861
score: 98.86916281960227
patch: i = res . entries . iterator ( ) ;
rank: 861
score: 98.85579833984374
patch: Iterator map = res . iterator ( ) ;
rank: 861
score: 98.85574001736111
patch: res . set CaMeL Entry ( ) ;
rank: 861
score: 98.84765014648437
patch: Iterator v = res . iterator ( ) ;
rank: 861
score: 98.83554077148438
patch: for ( ) iter . advance ( ) ;
rank: 862
score: 98.99675958806819
patch: Iterator iter = res . entries >> ( ) ;
rank: 862
score: 98.90119018554688
patch: Iterator iter = $STRING$ . next ( ) ;
rank: 862
score: 98.88580322265625
patch: iter = res . entries ( $NUMBER$ ) ;
rank: 862
score: 98.86894989013672
patch: Iterator iter = res . entries )
rank: 862
score: 98.85477701822917
patch: Iterator < ) . next ( ) ;
rank: 862
score: 98.8506591796875
patch: List res = entries . iterator ( ) ;
rank: 862
score: 98.83521728515625
patch: Iterator iter = res . size ( ) )
rank: 863
score: 98.89803314208984
patch: Iterator iter = iterator ( ) ;
rank: 863
score: 98.8685635653409
patch: Iterator iter ++ . has CaMeL Next ( ) ;
rank: 863
score: 98.85439453125
patch: Iterator size = res . iterator ( ) ;
rank: 863
score: 98.85032348632812
patch: Iterator iter = res . load ( ) ;
rank: 864
score: 98.984423828125
patch: Iterator iter && res . iterator ( ) ;
rank: 864
score: 98.88468424479167
patch: res . entries . iterator ( ) ;
rank: 864
score: 98.84494018554688
patch: res . set CaMeL Length ( 1 ) ;
rank: 865
score: 98.99226518110795
patch: Iterator < int ++ res . size ( ) ;
rank: 865
score: 98.98292125355114
patch: Iterator iter = res . entries ( length ) ;
rank: 865
score: 98.89634399414062
patch: Iterator iter = new . iterator ( ) ;
rank: 865
score: 98.88342895507813
patch: Iterator entries = entries . iterator ( ) ;
rank: 865
score: 98.8597412109375
patch: Iterator iter = res . Enum ( ) ;
rank: 865
score: 98.85146077473958
patch: res . res = res . entries ;
rank: 865
score: 98.845654296875
patch: Iterator iter = res . sleep ( ) ;
rank: 865
score: 98.82841186523437
patch: int value = v . entries . length ;
rank: 866
score: 98.97456665039063
patch: Iterator iter += res . iterator ( ) ;
rank: 866
score: 98.91764526367187
patch: Iterator iter = res . entries > 0 ;
rank: 866
score: 98.88099975585938
patch: Insets iter = res . entries ( ) ;
rank: 866
score: 98.85894775390625
patch: Iterator iter = res . entries ; for (
rank: 866
score: 98.84941948784723
patch: iter = res . size ( ) ;
rank: 867
score: 98.98845880681819
patch: final Iterator iter = entries . iter ( ) ;
rank: 867
score: 98.917529296875
patch: res . set CaMeL Entry ( v ) ;
rank: 867
score: 98.88937038845486
patch: Iterator iter = . iterator ( ) ;
rank: 867
score: 98.83888549804688
patch: int entries = res . size ( ) ;
rank: 868
score: 98.888916015625
patch: Iterator iter = start . iterator ( ) ;
rank: 868
score: 98.88037109375
patch: assert ( res . entries == null ) ;
rank: 868
score: 98.85374145507812
patch: Iterator iter = res . entries . iterator (
rank: 868
score: 98.84479370117188
patch: Collection v = res . entries ( ) ;
rank: 869
score: 98.9690274325284
patch: while ( res . size ( ) > 0 )
rank: 869
score: 98.88030395507812
patch: Enumeration res = res . entries ( ) ;
rank: 869
score: 98.84341769748264
patch: Iterator iter = res . iterator . ;
rank: 870
score: 98.8792724609375
patch: Iterator [ ] res . iterator ( ) ;
rank: 870
score: 98.84175415039063
patch: Collection iter = v . entries ( ) ;
rank: 871
score: 98.9680508700284
patch: while ( iter . has CaMeL Next ( ) )
rank: 871
score: 98.90196533203125
patch: Object res = iter . advance ( ) ;
rank: 871
score: 98.88826904296874
patch: iter = res . entries . ( ) ;
rank: 871
score: 98.87897338867188
patch: Iterator * ] entries . iterator ( ) ;
rank: 871
score: 98.8411865234375
patch: Iterator iter ; res . iterator ( ) ;
rank: 871
score: 98.83763427734375
patch: Iterator res = res . entries . length ;
rank: 871
score: 98.8328857421875
patch: Iterator iter = break . iterator ( ) ;
rank: 871
score: 98.81504516601562
patch: int key = iter . size ( ) ;
rank: 872
score: 98.90185546875
patch: Iterator iter = chars . iterator ( ) ;
rank: 872
score: 98.87852783203125
patch: Iterator iter = key . entries ( ) ;
rank: 872
score: 98.838134765625
patch: Iterator res = v . iterator ( ) ;
rank: 872
score: 98.83607991536458
patch: Iterator iter = res .
rank: 873
score: 98.9843505859375
patch: if ( res != null ) return iter ;
rank: 873
score: 98.95911754261364
patch: Iterator < iter = res . iterator ( ) ;
rank: 873
score: 98.87523803710937
patch: / iter = res . entries ( ) ;
rank: 873
score: 98.837646484375
patch: Set res = res . iterator ( ) ;
rank: 873
score: 98.81467895507812
patch: Vector iter = res . size ( ) ;
rank: 874
score: 98.88018188476562
patch: Iterator iter = max . iterator ( ) ;
rank: 874
score: 98.870751953125
patch: res . set CaMeL Name ( $STRING$ ) ;
rank: 874
score: 98.825732421875
patch: res . set CaMeL Length ( $NUMBER$ ) ;
rank: 875
score: 98.8931884765625
patch: super . ebe CaMeL Multiply ( v ) ;
rank: 875
score: 98.8767333984375
patch: Iterator iter = res . replace ( ) ;
rank: 875
score: 98.87041625976562
patch: Collection size = res . entries ( ) ;
rank: 875
score: 98.82478841145833
patch: entries = res . entries . entries ;
rank: 876
score: 98.83293999565973
patch: Iterator iter = v . iterator ( ;
rank: 876
score: 98.83285861545139
patch: Iterator < Real CaMeL Vector > iter ;
rank: 876
score: 98.81995849609375
patch: Iterator iter = v . list ( ) ;
rank: 877
score: 98.97871537642045
patch: final int iter = res . size ( ) ;
rank: 877
score: 98.95401763916016
patch: Iterator iter . advance ( ) ;
rank: 877
score: 98.89039916992188
patch: Vector iter = iter . iterator ( ) ;
rank: 877
score: 98.8679443359375
patch: byte iter = res . entries ( ) ;
rank: 877
score: 98.82984619140625
patch: List iter = res . list ( ) ;
rank: 877
score: 98.81913248697917
patch: result . entries = res . entries ;
rank: 877
score: 98.81109619140625
patch: int value = iter . value ( ) ;
rank: 878
score: 98.88846435546876
patch: Iterator iter = res instanceof Real CaMeL Vector ;
rank: 878
score: 98.86725463867188
patch: Iterator iter = data . entries ( ) ;
rank: 878
score: 98.8295166015625
patch: Iterator list = v . iterator ( ) ;
rank: 878
score: 98.81747436523438
patch: Iterator iter = in . iterator ( ) ;
rank: 879
score: 98.95208185369319
patch: Iterator < Real CaMeL Vector > iter = null ;
rank: 879
score: 98.86700439453125
patch: this . res . iterator ( ) ;
rank: 879
score: 98.83171081542969
patch: final iter . advance ( ) ;
rank: 879
score: 98.82777235243056
patch: if ( res . res != null )
rank: 879
score: 98.81655883789062
patch: Iterator iter = new Iterator ( res ) ;
rank: 879
score: 98.8069580078125
patch: Iterator iter = res . stop ( ) ;
rank: 880
score: 98.87115478515625
patch: Iterator iter = new Iterator ( ) ;
rank: 880
score: 98.86506958007813
patch: m 1 = res . entries ( ) ;
rank: 880
score: 98.82152642144098
patch: Iterator iter = res . ( ) ;
rank: 880
score: 98.81239624023438
patch: int size = entries . size ( ) ;
rank: 880
score: 98.80469970703125
patch: Iterator iter = Math . size ( ) ;
rank: 881
score: 98.94658868963069
patch: for ( String key : res . entries ) {
rank: 881
score: 98.86831665039062
patch: iterator iter = res . entries ( ) ;
rank: 881
score: 98.8246826171875
patch: res . entries = res . entries ; ;
rank: 881
score: 98.80205078125
patch: Iterator iter = res . ebe CaMeL Multiply ;
rank: 882
score: 98.943603515625
patch: Iterator < Real CaMeL Vector > iter = 0 ;
rank: 882
score: 98.8636962890625
patch: Iterator value = res . entries ( ) ;
rank: 882
score: 98.77249908447266
patch: else res . advance ( ) ;
rank: 883
score: 98.97587446732955
patch: Iterator iter = res . get Iterator ( ) ;
rank: 883
score: 98.86737060546875
patch: iterator = res . iterator ( ) ;
rank: 883
score: 98.8617919921875
patch: Enumeration iter = entries . entries ( ) ;
rank: 883
score: 98.8230712890625
patch: if ( v != null ) res . ;
rank: 884
score: 98.88306274414063
patch: int iter = iter . entries ( ) ;
rank: 884
score: 98.765625
patch: Iterator iter = res . null ;
rank: 885
score: 98.9378329190341
patch: Iterator iter = res . entries > ( ) ;
rank: 885
score: 98.85769653320312
patch: Iterator iterator = $STRING$ . iterator ( ) ;
rank: 885
score: 98.85709635416667
patch: final int iter . iterator ( ) ;
rank: 885
score: 98.7928955078125
patch: Iterator iter = res . entries . TRUE ;
rank: 885
score: 98.77651638454861
patch: dim . entries = res . entries ;
rank: 885
score: 98.74845123291016
patch: Iterator iter = res . false ;
rank: 886
score: 98.88221435546875
patch: Iterator iter = Iterator . entries ( ) ;
rank: 886
score: 98.8566650390625
patch: Iterator iter = list . next ( ) ;
rank: 886
score: 98.85645209418402
patch: Iterator iter = new iterator ( ) ;
rank: 886
score: 98.77627224392361
patch: iter = list . iterator ( ) ;
rank: 886
score: 98.7340087890625
patch: entries . advance ( ) ;
rank: 887
score: 98.81832885742188
patch: if ( res != null ) return ) ;
rank: 887
score: 98.79009399414062
patch: Iterator iter = res . entries . max ;
rank: 887
score: 98.7309341430664
patch: if ( res != null ) {
rank: 888
score: 98.97053666548295
patch: final int size = res . entries . length ;
rank: 888
score: 98.8749267578125
patch: Open CaMeL Map CaMeL Real CaMeL Vector v ;
rank: 888
score: 98.85286254882813
patch: entries = res . entries ( null ) ;
rank: 888
score: 98.81810913085937
patch: Collection res = res . get ( ) ;
rank: 888
score: 98.7931396484375
patch: Iterator iter >= res . iterator ( ) ;
rank: 888
score: 98.78793334960938
patch: int iterator = res . size ( ) ;
rank: 888
score: 98.76828438895089
patch: for ( ; ; ) {
rank: 888
score: 98.72201102120536
patch: res . advance ( ) ;
rank: 889
score: 98.8180419921875
patch: Collection res = res . list ( ) ;
rank: 889
score: 98.76453314887152
patch: iter = res . clone ( ) ;
rank: 890
score: 98.84908621651786
patch: entries . iterator ( ) ;
rank: 890
score: 98.80584716796875
patch: Iterator < res . iterator ( ) ;
rank: 890
score: 98.78351440429688
patch: int key = iter . advance ( ) ;
rank: 890
score: 98.76435682508681
patch: size = res . size ( ) ;
rank: 890
score: 98.69603135850694
patch: it . has CaMeL Next ( ) ;
rank: 891
score: 98.96968217329545
patch: Iterator iter = res . size ( ) ; else
rank: 891
score: 98.92044677734376
patch: Iterator iter = log . iterator ( ) ;
rank: 891
score: 98.83820258246527
patch: final int entries . iterator ( ) ;
rank: 891
score: 98.76040310329861
patch: res . entries = res . list ;
rank: 891
score: 98.67694091796875
patch: Iterator iter = v . entries .
rank: 892
score: 98.84533081054687
patch: Iterator iter = res . . ( ) ;
rank: 892
score: 98.83207194010417
patch: Iterator iter = copy ( res ) ;
rank: 892
score: 98.75714111328125
patch: iter = iter . iterator ( ) ;
rank: 892
score: 98.67225646972656
patch: Iterator iter = res . current CaMeL
rank: 893
score: 98.91513671875
patch: List iterator = res . entries ( ) ;
rank: 893
score: 98.86519775390624
patch: Iterator iter = iterator . entries ( ) ;
rank: 893
score: 98.830322265625
patch: Iterator iter = - 1 ;
rank: 893
score: 98.78888617621527
patch: m = res . entries ( ) ;
rank: 893
score: 98.75489637586806
patch: iter = res . list ( ) ;
rank: 893
score: 98.64748709542411
patch: Iterator iter = res . ;
rank: 894
score: 98.96389770507812
patch: if ( res == null ) return false ;
rank: 894
score: 98.91459350585937
patch: List list = res . iterator ( ) ;
rank: 894
score: 98.85753784179687
patch: res . set CaMeL Entry ( res ) ;
rank: 894
score: 98.78712293836806
patch: if ( v . entries != null )
rank: 894
score: 98.77596435546874
patch: int size = v . entries . length ;
rank: 894
score: 98.75192696707589
patch: res . entries = res ;
rank: 894
score: 98.64739227294922
patch: while ( res != null ) {
rank: 895
score: 98.85586547851562
patch: Iterator iter = false . iterator ( ) ;
rank: 895
score: 98.81875949435764
patch: Iterator = res . entries ( ) ;
rank: 895
score: 98.78343854631696
patch: entries = res . entries ;
rank: 895
score: 98.77902221679688
patch: Iterator iter = v . length ;
rank: 895
score: 98.75130208333333
patch: if ( res == null ) continue ;
rank: 895
score: 98.63875579833984
patch: iter . advance ( ) ; }
rank: 896
score: 98.91243896484374
patch: Iterator iter = res != null ? res .
rank: 896
score: 98.83779907226562
patch: return res . entries . iterator ( ) ;
rank: 896
score: 98.81672498914931
patch: iterator = entries . iterator ( ) ;
rank: 896
score: 98.77680799696181
patch: Iterator iter = res . iterator ( )
rank: 896
score: 98.74833461216518
patch: res . entries = new ;
rank: 896
score: 98.63826751708984
patch: Iterator iter = res . last CaMeL
rank: 897
score: 98.85329182942708
patch: Iterator iter = res . size ( )
rank: 897
score: 98.77675170898438
patch: Iterator iter = ) . size ( ) ;
rank: 897
score: 98.77059597439236
patch: res . res = res . res ;
rank: 897
score: 98.63227844238281
patch: int iter = res . entries .
rank: 898
score: 98.95608181423611
patch: if ( res != null ) continue ;
rank: 898
score: 98.83428344726562
patch: res . add ( res . res ) ;
rank: 898
score: 98.79361300998264
patch: res . entries = this . entries ;
rank: 898
score: 98.75291224888393
patch: this . res = res ;
rank: 898
score: 98.74053276909723
patch: if ( res == null ) break ;
rank: 898
score: 98.62860979352679
patch: Iterator iter = res ) ;
rank: 899
score: 98.908642578125
patch: for ( if ( res != null ) {
rank: 899
score: 98.8509521484375
patch: Iterator iter = Math . iterator ( ) ;
rank: 899
score: 98.834130859375
patch: Iterator iterator = res . clone ( ) ;
rank: 899
score: 98.77102322048611
patch: res . res . entries ( ) ;
rank: 899
score: 98.75142415364583
patch: data = res . entries ( ) ;
rank: 899
score: 98.74814860026042
patch: Iterator iter = res . entries . }
rank: 899
score: 98.61868286132812
patch: Iterator iter = res . true ;
rank: 900
score: 98.94872368706598
patch: super . entries = res . entries ;
rank: 900
score: 98.908447265625
patch: for ( Real CaMeL Vector res : res )
rank: 900
score: 98.75774468315973
patch: entries = entries . entries ( ) ;
rank: 900
score: 98.74383544921875
patch: Iterator iter = v . entries ( ;
rank: 900
score: 98.72957356770833
patch: res . entries = res . map ;
rank: 900
score: 98.61064147949219
patch: else iter . advance ( ) ;
rank: 901
score: 98.94869995117188
patch: super . entries . add ( res ) ;
rank: 901
score: 98.90623168945312
patch: int iterator = res . iterator ( ) ;
rank: 901
score: 98.8306884765625
patch: res . entries . iterator ( ) .
rank: 901
score: 98.7713623046875
patch: Iterator iter = res [ size ++ ] ;
rank: 901
score: 98.73629760742188
patch: int get CaMeL Dimension ( ) ;
rank: 901
score: 98.60709381103516
patch: iter . advance ( 0 ) ;
rank: 902
score: 98.82720947265625
patch: Iterator iter = null ;
rank: 902
score: 98.75704616970486
patch: res . out . iterator ( ) ;
rank: 902
score: 98.71735382080078
patch: res . entries = new ) ;
rank: 902
score: 98.71673583984375
patch: new Real CaMeL Vector ( this ) ;
rank: 903
score: 98.89052734375
patch: for ( Real CaMeL Vector v : res )
rank: 903
score: 98.75401475694444
patch: itr = res . entries ( ) ;
rank: 903
score: 98.73075866699219
patch: res . set ( res ) ;
rank: 904
score: 98.8902587890625
patch: List entries = res . iterator ( ) ;
rank: 904
score: 98.75052897135417
patch: this . res . entries ( ) ;
rank: 904
score: 98.73063151041667
patch: Iterator iter = res . iterator ) ;
rank: 904
score: 98.6019287109375
patch: iterator . advance ( ) ;
rank: 905
score: 98.84187622070313
patch: Iterator iter = data . size ( ) ;
rank: 905
score: 98.826025390625
patch: iter = res . entries ( ) ; ;
rank: 905
score: 98.74762641059027
patch: iter = entries . entries ( ) ;
rank: 905
score: 98.72566731770833
patch: res . res = this . res ;
rank: 906
score: 98.82601318359374
patch: res . entries = new iterator ( ) ;
rank: 906
score: 98.74926079644098
patch: Iterator iter = iter . ( ) ;
rank: 906
score: 98.74560546875
patch: this . entries . iterator ( ) ;
rank: 906
score: 98.72159830729167
patch: if ( res . entries == null )
rank: 906
score: 98.69438340928819
patch: iter = v . iterator ( ) ;
rank: 906
score: 98.6603012084961
patch: Iterator iter = v . entries ;
rank: 907
score: 98.881103515625
patch: if ( this . res != null ) {
rank: 907
score: 98.79359436035156
patch: res . add ( $STRING$ ) ;
rank: 907
score: 98.74383544921875
patch: Iterator * ) . iterator ( ) ;
rank: 907
score: 98.7215576171875
patch: Iterator iter = res . get ;
rank: 907
score: 98.58753967285156
patch: Iterator iter = res . 0 ;
rank: 908
score: 98.83858032226563
patch: Iterator iter = Iterator . iter ( ) ;
rank: 909
score: 98.92984619140626
patch: synchronized ( res ) { return res ; }
rank: 909
score: 98.83848266601562
patch: Iterator iter = res != null - 1 ;
rank: 909
score: 98.74208286830357
patch: iter . iterator ( ) ;
rank: 909
score: 98.71858045789931
patch: Iterator iter = v . entries ( )
rank: 909
score: 98.68014187282986
patch: res . entries = new . entries ;
rank: 909
score: 98.58445739746094
patch: if ( res == null ) {
rank: 910
score: 98.86910400390624
patch: Set list = res . iterator ( ) ;
rank: 910
score: 98.76664903428819
patch: Iterator iter . iterator ( ) ; ;
rank: 910
score: 98.74161202566964
patch: res . list ( ) ;
rank: 910
score: 98.71086290147569
patch: if ( res != null ) break ;
rank: 910
score: 98.67840576171875
patch: temp . entries = res . entries ;
rank: 910
score: 98.58261544363839
patch: it . advance ( ) ;
rank: 911
score: 98.75590684678819
patch: Iterator iter = load ( res ) ;
rank: 911
score: 98.70951080322266
patch: Iterator iter = res . iterator ;
rank: 911
score: 98.67970784505208
patch: Iterator iter = res [ length ] ;
rank: 911
score: 98.57847595214844
patch: iter . advance ( ) ; ;
rank: 912
score: 98.91754150390625
patch: if ( res == null ) throw null ;
rank: 912
score: 98.86611599392361
patch: Iterator < iter . advance ( ) ;
rank: 912
score: 98.70897759331598
patch: result = res . entries ( ) ;
rank: 912
score: 98.6329345703125
patch: Iterator iter = res . contains ( )
rank: 912
score: 98.57478332519531
patch: if ( v != null ) {
rank: 913
score: 98.73487006293402
patch: entries = entries . iterator ( ) ;
rank: 913
score: 98.63035074869792
patch: Iterator iter = false ;
rank: 913
score: 98.57071685791016
patch: Iterator iter = res != null ;
rank: 914
score: 98.72780354817708
patch: Iterator iter = . iter ( ) ;
rank: 914
score: 98.72504425048828
patch: int iter . next ( ) ;
rank: 914
score: 98.70595974392361
patch: properties = res . entries ( ) ;
rank: 914
score: 98.62443542480469
patch: Real CaMeL Vector res = null ;
rank: 914
score: 98.56350708007812
patch: Iterator iter = res . is CaMeL
rank: 915
score: 98.79788547092014
patch: Iterator iter = res . entries . length
rank: 915
score: 98.65244838169643
patch: Iterator iter = res != null
rank: 915
score: 98.64083862304688
patch: result . add ( res ) ;
rank: 915
score: 98.61609903971355
patch: Iterator iter = true ;
rank: 915
score: 98.56004333496094
patch: Iterator iter = res . for CaMeL
rank: 916
score: 98.86305541992188
patch: List iterator = res . iterator ( ) ;
rank: 916
score: 98.7960205078125
patch: Iterator iter = res . entries {
rank: 916
score: 98.70403289794922
patch: Iterator iter = capacity ( ) ;
rank: 916
score: 98.69959259033203
patch: Collection res = res . entries ;
rank: 916
score: 98.64497205946181
patch: Iterator iter = res . entries . ;
rank: 916
score: 98.63398742675781
patch: iter . add ( res ) ;
rank: 916
score: 98.54806518554688
patch: int iter = res . get CaMeL
rank: 917
score: 98.70379638671875
patch: int entries . iterator ( ) ;
rank: 917
score: 98.69903564453125
patch: if ( res != null ) res ;
rank: 917
score: 98.6378173828125
patch: Iterator = res . iterator ( ) ;
rank: 917
score: 98.59709821428571
patch: res . entries = null ;
rank: 917
score: 98.54481506347656
patch: Iterator iter = res . add CaMeL
rank: 918
score: 98.85606892903645
patch: synchronized ( res ) {
rank: 918
score: 98.6961669921875
patch: res . clone ( ) ;
rank: 918
score: 98.68792724609375
patch: if ( res != null ) return ;
rank: 918
score: 98.67449188232422
patch: = res . entries ( ) ;
rank: 918
score: 98.63746473524306
patch: Iterator iter = res [ 1 ] ;
rank: 918
score: 98.59196254185268
patch: iter = res . entries ;
rank: 918
score: 98.53894805908203
patch: Iterator iter = v . has CaMeL
rank: 919
score: 98.68682861328125
patch: conn = res . entries ( ) ;
rank: 919
score: 98.68243408203125
patch: Arrays . iterator ( res ) ;
rank: 919
score: 98.66292027064732
patch: Iterator iter = new ) ;
rank: 919
score: 98.63529459635417
patch: Iterator iter = res . entries ) {
rank: 919
score: 98.57882690429688
patch: Vector iter = res . entries ;
rank: 919
score: 98.56976318359375
patch: assert ( res != null ) ;
rank: 919
score: 98.53856658935547
patch: Iterator iter = res . max CaMeL
rank: 920
score: 98.85455322265625
patch: Iterator iter , res . iterator ( ) ;
rank: 920
score: 98.68315294053819
patch: if ( v . res != null )
rank: 920
score: 98.68142700195312
patch: Iterator iter = next ( ) ;
rank: 920
score: 98.6339111328125
patch: Iterator iter = res . length 1 ;
rank: 920
score: 98.53611246744792
patch: Iterator iter = entries .
rank: 921
score: 98.85306396484376
patch: Iterator iter = res != null + 1 ;
rank: 921
score: 98.6755142211914
patch: assert res != null : $STRING$ ;
rank: 921
score: 98.67310333251953
patch: res . parse ( res ) ;
rank: 921
score: 98.63980865478516
patch: Iterator iter . size ( ) ;
rank: 921
score: 98.56690216064453
patch: entries [ 0 ] = res ;
rank: 921
score: 98.55641174316406
patch: Iterator iter = res . -- ;
rank: 921
score: 98.52510288783482
patch: Iterator iter = res . }
rank: 922
score: 98.85135498046876
patch: Iterator iter || res . iterator ( ) ;
rank: 922
score: 98.63473510742188
patch: res . remove ( 0 ) ;
rank: 922
score: 98.56521606445312
patch: int entries = res . entries ;
rank: 922
score: 98.51164899553571
patch: Iterator iter = res . {
rank: 923
score: 98.66552734375
patch: super . entries ( res ) ;
rank: 923
score: 98.6226094563802
patch: Iterator iter = 1 ;
rank: 923
score: 98.55005900065105
patch: int value = ) ;
rank: 923
score: 98.50865827287946
patch: Iterator iter = res . entries
rank: 924
score: 98.891162109375
patch: if ( res == null ) return 0 ;
rank: 924
score: 98.66218566894531
patch: Iterator entries . iterator ( ) ;
rank: 924
score: 98.64090401785714
patch: if ( v != null )
rank: 924
score: 98.61370849609375
patch: res . Iterator iterator ( ) ;
rank: 924
score: 98.55687604631696
patch: res . entries = entries ;
rank: 924
score: 98.54812622070312
patch: List iter = res . entries ;
rank: 924
score: 98.49686976841518
patch: i . advance ( ) ;
rank: 925
score: 98.75810411241319
patch: Iterator iter = res == null ? null
rank: 925
score: 98.63577270507812
patch: List res = res . entries ;
rank: 925
score: 98.60611979166667
patch: Iterator iter = $NUMBER$ ;
rank: 925
score: 98.59850311279297
patch: Iterator iter = res . length )
rank: 926
score: 98.88905029296875
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 926
score: 98.844091796875
patch: synchronized ( res . iterator ( ) ) {
rank: 926
score: 98.65581512451172
patch: Iterator iter . next ( ) ;
rank: 926
score: 98.63343048095703
patch: Iterator iter ; synchronized ( res )
rank: 926
score: 98.60245186941964
patch: res . iterator ( ) .
rank: 926
score: 98.54679870605469
patch: assert res == null : $STRING$ ;
rank: 926
score: 98.44366455078125
patch: Iterator iter ;
rank: 927
score: 98.73930140904018
patch: Iterator iter = res == null
rank: 927
score: 98.59190368652344
patch: Iterator iter = res ; for (
rank: 927
score: 98.54646301269531
patch: return res . entries ( ) ;
rank: 927
score: 98.51340157645089
patch: Iterator iter = - $NUMBER$ ;
rank: 928
score: 98.73876274956598
patch: Iterator iter = res . entries != null
rank: 928
score: 98.59819030761719
patch: res . entries = . entries ;
rank: 928
score: 98.58891296386719
patch: if ( res != null ) ;
rank: 928
score: 98.5414047241211
patch: List list = res . entries ;
rank: 928
score: 98.43978445870536
patch: Iterator iter = entries ) ;
rank: 929
score: 98.77372233072917
patch: Vector res = new Iterator ( ) ;
rank: 929
score: 98.63024030412946
patch: res . size ( ) ;
rank: 929
score: 98.5858154296875
patch: Set entries = res . entries ;
rank: 929
score: 98.5619125366211
patch: res . add ( this ) ;
rank: 929
score: 98.43636648995536
patch: Iterator < Real CaMeL Vector >
rank: 930
score: 98.88380126953125
patch: Iterator iter = null . iterator ( ) ;
rank: 930
score: 98.62486267089844
patch: res . load ( res ) ;
rank: 930
score: 98.57673645019531
patch: Set res = res . entries ;
rank: 930
score: 98.5588607788086
patch: synchronized ( res . entries ) {
rank: 930
score: 98.49070521763393
patch: v . advance ( ) ;
rank: 931
score: 98.8825439453125
patch: if ( entries != null ) return res ;
rank: 931
score: 98.76297336154514
patch: for ( String key : res ) {
rank: 931
score: 98.71815321180556
patch: iter = iter . entries ( ) ;
rank: 931
score: 98.62236785888672
patch: res . copy ( res ) ;
rank: 931
score: 98.57412719726562
patch: res . res = res ) ;
rank: 931
score: 98.53329467773438
patch: Iterator iter . remove ( ) ;
rank: 931
score: 98.5288314819336
patch: Iterator entries = res . entries ;
rank: 932
score: 98.57286071777344
patch: Collection entries = res . entries ;
rank: 932
score: 98.53300476074219
patch: System . exit ( 0 ) ;
rank: 932
score: 98.42593383789062
patch: Iterator iter = entries ;
rank: 933
score: 98.87954711914062
patch: while ( res != null ) return res ;
rank: 933
score: 98.71033393012152
patch: Iterator iter = res . entries > 0
rank: 933
score: 98.53233337402344
patch: for ( ; ; ) { ;
rank: 933
score: 98.47596232096355
patch: int value = 0 ;
rank: 934
score: 98.6148910522461
patch: Iterator iter = clone ( ) ;
rank: 934
score: 98.56846618652344
patch: Iterator iter = res . list ;
rank: 934
score: 98.50797271728516
patch: Iterator iter = this . entries ;
rank: 935
score: 98.87810668945312
patch: Iterator iter = res . entries == null ;
rank: 935
score: 98.69605255126953
patch: Iterator iter = iter . length ;
rank: 935
score: 98.53898620605469
patch: List entries = res . entries ;
rank: 935
score: 98.51903424944196
patch: if ( res == null )
rank: 936
score: 98.87750244140625
patch: boolean entries = res . entries ( ) ;
rank: 936
score: 98.74709743923611
patch: Iterator < ) . advance ( ) ;
rank: 936
score: 98.6038589477539
patch: Vector res . iterator ( ) ;
rank: 936
score: 98.49425397600446
patch: res . entries = 0 ;
rank: 936
score: 98.43511090959821
patch: int value = - 1 ;
rank: 936
score: 98.35821533203125
patch: final Iterator iter = res .
rank: 937
score: 98.87679443359374
patch: super . res . add ( res ) ;
rank: 937
score: 98.74580213758681
patch: Iterator < String > iter = res .
rank: 937
score: 98.59827423095703
patch: Iterator res . iterator ( ) ;
rank: 937
score: 98.53298950195312
patch: res . entries = res ) ;
rank: 937
score: 98.49016462053571
patch: Iterator . advance ( ) ;
rank: 937
score: 98.44757952008929
patch: iter . remove ( ) ;
rank: 937
score: 98.34292602539062
patch: synchronized ( this ) {
rank: 938
score: 98.3348897298177
patch: int res = ) ;
rank: 939
score: 98.73837280273438
patch: for ( synchronized ( res ) {
rank: 939
score: 98.47378540039062
patch: Iterator iter = 0 ; for (
rank: 939
score: 98.44004313151042
patch: for ( ; ; )
rank: 939
score: 98.32607596261161
patch: final Iterator iter = res ;
rank: 940
score: 98.84815131293402
patch: this . entries = res . entries ;
rank: 940
score: 98.62381744384766
patch: int iter . advance ( ) ;
rank: 940
score: 98.59088897705078
patch: int entries . next ( ) ;
rank: 940
score: 98.4859619140625
patch: res . close ( ) ;
rank: 940
score: 98.4611587524414
patch: Iterator iter ++ ; while ( iter
rank: 941
score: 98.58770751953125
patch: Iterator iter = 0 ; try {
rank: 941
score: 98.46114349365234
patch: Iterator iter = res . start ;
rank: 941
score: 98.41707066127232
patch: synchronized ( res . entries )
rank: 942
score: 98.82725694444444
patch: final int entries . size ( ) ;
rank: 942
score: 98.73060438368056
patch: for ( if ( res != null )
rank: 942
score: 98.58173370361328
patch: int iter = entries . length ;
rank: 942
score: 98.56568908691406
patch: int iter = res . entries ;
rank: 942
score: 98.52886962890625
patch: super . res = res ;
rank: 942
score: 98.397216796875
patch: assert res != null ;
rank: 942
score: 98.32223074776786
patch: this . v = res ;
rank: 942
score: 98.2451171875
patch: Iterator iter = v .
rank: 943
score: 98.57728576660156
patch: Iterator iter = copy ( ) ;
rank: 943
score: 98.56395721435547
patch: Real CaMeL Vector ( res ) ;
rank: 943
score: 98.52803039550781
patch: Object res = res . res ;
rank: 943
score: 98.448486328125
patch: Iterator iter = res )
rank: 943
score: 98.37520054408482
patch: Iterator iter = res ; ;
rank: 943
score: 98.30104282924107
patch: Iterator iter = - 0 ;
rank: 944
score: 98.37469482421875
patch: notify CaMeL All ( ) ;
rank: 944
score: 98.2816670735677
patch: int value = 1 ;
rank: 944
score: 98.18758138020833
patch: synchronized ( v ) {
rank: 945
score: 98.42649623325893
patch: res . add ( ) ;
rank: 945
score: 98.27390834263393
patch: this . res = v ;
rank: 946
score: 98.71696641710069
patch: Iterator < Real CaMeL Vector != null ;
rank: 946
score: 98.47210693359375
patch: Iterator iter = v != null
rank: 946
score: 98.33883231026786
patch: res . add ( new ;
rank: 946
score: 98.26800537109375
patch: int key = 0 ;
rank: 946
score: 98.12856038411458
patch: Iterator iter = v ;
rank: 947
score: 98.48515973772321
patch: res . res = v ;
rank: 947
score: 98.44601004464286
patch: Iterator iter = res . length
rank: 947
score: 98.40781860351562
patch: for ( for (
rank: 947
score: 98.33121163504464
patch: list = res . entries ;
rank: 947
score: 98.11880493164062
patch: int key = ) ;
rank: 948
score: 98.41064453125
patch: res . next ( ) ;
rank: 948
score: 98.40621512276786
patch: for ( for ( for (
rank: 948
score: 98.32784598214286
patch: res . entries = true ;
rank: 948
score: 98.11722819010417
patch: Iterator iter = ) ;
rank: 949
score: 98.7142105102539
patch: res . remove ( res ) ;
rank: 949
score: 98.40478515625
patch: res . copy ( ) ;
rank: 949
score: 98.25155203683036
patch: this . v = v ;
rank: 949
score: 98.09390258789062
patch: Iterator iter ; for (
rank: 950
score: 98.44457135881696
patch: res . res = null ;
rank: 950
score: 98.38804408482143
patch: final Iterator iter = 0 ;
rank: 950
score: 98.30754743303571
patch: result . entries = res ;
rank: 950
score: 98.25059291294643
patch: Iterator iter = res . ebe
rank: 950
score: 98.06959025065105
patch: int v = ) ;
rank: 951
score: 98.50308663504464
patch: super . entries ( ) ;
rank: 951
score: 98.42892020089286
patch: Iterator iter = v == null
rank: 951
score: 98.42269461495536
patch: if ( res != null ;
rank: 951
score: 98.30725969587054
patch: lock . entries ( ) ;
rank: 951
score: 98.24726213727679
patch: list . advance ( ) ;
rank: 951
score: 98.06290690104167
patch: synchronized ( entries ) {
rank: 952
score: 98.64065551757812
patch: for ( int ) {
rank: 952
score: 98.37282889229911
patch: entries . iterator ( ) .
rank: 952
score: 98.30571637834821
patch: res . res = 0 ;
rank: 952
score: 98.23807198660714
patch: int key = - 1 ;
rank: 952
score: 98.04990641276042
patch: int res = 0 ;
rank: 953
score: 98.66545867919922
patch: int entries . size ( ) ;
rank: 953
score: 98.640380859375
patch: Iterator iter = res . entries [
rank: 953
score: 98.47794886997768
patch: res . entries = ) ;
rank: 953
score: 98.35923549107143
patch: Iterator iter ( 0 ) ;
rank: 953
score: 98.30494035993304
patch: res . list = res ;
rank: 953
score: 98.23386928013393
patch: result . advance ( ) ;
rank: 954
score: 98.65711212158203
patch: entries . remove ( res ) ;
rank: 954
score: 98.47422572544643
patch: res . delete ( ) ;
rank: 954
score: 98.28260498046875
patch: synchronized ( res )
rank: 954
score: 98.16685994466145
patch: int value = null ;
rank: 954
score: 98.03684488932292
patch: Iterator < int 0 ;
rank: 955
score: 98.64064243861607
patch: super . entries = res ;
rank: 955
score: 98.61685943603516
patch: for ( synchronized ( this ) {
rank: 955
score: 98.34708077566964
patch: Iterator iter ( res ) ;
rank: 955
score: 98.32732282366071
patch: Iterator iter = res -- ;
rank: 955
score: 98.25956217447917
patch: Object res = null ;
rank: 955
score: 98.02881469726563
patch: Iterator iter ++ ;
rank: 956
score: 98.46885463169643
patch: iterator . iterator ( ) ;
rank: 956
score: 98.33559744698661
patch: res . next = null ;
rank: 957
score: 98.36748395647321
patch: Iterator < ) != null ;
rank: 957
score: 98.33347865513393
patch: iter . iterator ( ) .
rank: 957
score: 98.17449951171875
patch: assert iter != null ;
rank: 957
score: 98.1311543782552
patch: Iterator iter = this ;
rank: 957
score: 98.02687581380208
patch: int iter = ( (
rank: 958
score: 98.6162109375
patch: super . res ( res ) ;
rank: 958
score: 98.59485626220703
patch: for ( Iterator iter = res .
rank: 958
score: 98.34478759765625
patch: initialize ( res ) ;
rank: 958
score: 98.30965750558036
patch: super . iterator ( ) ;
rank: 958
score: 98.12640380859375
patch: int value = false ;
rank: 958
score: 98.12192789713542
patch: int iter = 0 ;
rank: 958
score: 97.90316772460938
patch: return res ;
rank: 959
score: 98.336669921875
patch: v . res = res ;
rank: 959
score: 98.29818289620536
patch: Iterator iter = iter . }
rank: 959
score: 98.11553955078125
patch: Object res = res ;
rank: 959
score: 98.09310913085938
patch: List res = null ;
rank: 959
score: 97.811767578125
patch: for ( ) {
rank: 960
score: 98.58094133649554
patch: final synchronized ( res ) {
rank: 960
score: 98.57996622721355
patch: Iterator < int ) {
rank: 960
score: 98.43030657087054
patch: res . iter ( ) ;
rank: 960
score: 98.32418387276786
patch: res . res = this ;
rank: 960
score: 98.30210367838542
patch: Real CaMeL Vector res ;
rank: 960
score: 98.10487874348958
patch: assert res == null ;
rank: 960
score: 97.77928466796875
patch: Iterator < Real CaMeL
rank: 961
score: 98.56633758544922
patch: Iterator < int ++ - 1 ;
rank: 961
score: 98.42681012834821
patch: res . parse ( ) ;
rank: 961
score: 98.32266671316964
patch: Iterator < res != null ;
rank: 961
score: 98.2002665201823
patch: Iterator iterator = 0 ;
rank: 961
score: 98.07745361328125
patch: int value = true ;
rank: 961
score: 98.0762939453125
patch: Iterator iter = new ;
rank: 961
score: 97.749755859375
patch: Iterator iter = {
rank: 962
score: 98.56290435791016
patch: synchronized ( res . res ) {
rank: 962
score: 98.50975690569196
patch: super . entries = entries ;
rank: 962
score: 98.42478724888393
patch: list . iterator ( ) ;
rank: 962
score: 98.3221435546875
patch: temp . res = res ;
rank: 962
score: 98.22713216145833
patch: Iterator iter { for (
rank: 962
score: 98.18798828125
patch: Iterator iter . -- ;
rank: 962
score: 98.07300821940105
patch: while ( true ) {
rank: 962
score: 98.0727030436198
patch: int next = 0 ;
rank: 962
score: 97.71739196777344
patch: Iterator iter =
rank: 963
score: 98.50106375558036
patch: super . entries = null ;
rank: 963
score: 98.42439488002232
patch: res . entries = false ;
rank: 963
score: 98.32079206194196
patch: result . res = res ;
rank: 963
score: 98.25620814732143
patch: Iterator iter < int ++ ;
rank: 963
score: 98.07152303059895
patch: int entries = 0 ;
rank: 963
score: 97.694091796875
patch: Iterator ( ) ;
rank: 964
score: 98.41629464285714
patch: res . map = res ;
rank: 964
score: 98.32073974609375
patch: l . res = res ;
rank: 964
score: 98.25421142578125
patch: Iterator iter = * $NUMBER$ ;
rank: 964
score: 98.16991170247395
patch: int iter = null ;
rank: 964
score: 98.16324869791667
patch: Iterator iter = $STRING$ ;
rank: 964
score: 98.06597900390625
patch: Iterator iter = size ;
rank: 964
score: 98.06503295898438
patch: int key = 1 ;
rank: 964
score: 97.68141479492188
patch: final Iterator iter ;
rank: 965
score: 98.51203264508929
patch: Iterator < iter < int )
rank: 965
score: 98.31758626302083
patch: if ( res != ;
rank: 965
score: 98.23227364676339
patch: itr . advance ( ) ;
rank: 965
score: 98.14939371744792
patch: int iter = false ;
rank: 965
score: 98.06306966145833
patch: Image res = null ;
rank: 965
score: 98.0595703125
patch: int value ( ) ;
rank: 965
score: 97.675830078125
patch: Iterator iter -- ;
rank: 966
score: 98.49895368303571
patch: Iterator iter = res ) {
rank: 966
score: 98.41086251395089
patch: Iterator < T ++ ) ;
rank: 966
score: 98.13828531901042
patch: synchronized ( res ) ;
rank: 966
score: 98.12418619791667
patch: Iterator iter = iter ;
rank: 966
score: 97.66737060546875
patch: while ( ) {
rank: 967
score: 98.49444580078125
patch: Iterator < ( iter ) ;
rank: 967
score: 98.40767996651786
patch: res . load ( ) ;
rank: 967
score: 98.29961286272321
patch: if ( v == null )
rank: 967
score: 98.19757080078125
patch: Iterator iter = iter .
rank: 967
score: 98.10879516601562
patch: Iterator < ) ) ;
rank: 967
score: 98.10875447591145
patch: int ( 0 ) ;
rank: 967
score: 98.02423095703125
patch: Collection res = null ;
rank: 967
score: 97.6430419921875
patch: Iterator iter = }
rank: 968
score: 98.48373849051339
patch: Iterator iter = this ) ;
rank: 968
score: 98.2742207845052
patch: res . = res ;
rank: 968
score: 98.1056416829427
patch: int ( $NUMBER$ ) ;
rank: 968
score: 98.01730346679688
patch: boolean entries = false ;
rank: 968
score: 97.612890625
patch: for ( ) ;
rank: 969
score: 98.43071637834821
patch: this . entries = entries ;
rank: 969
score: 98.09224446614583
patch: int start = 0 ;
rank: 969
score: 98.07977294921875
patch: copy ( res ) ;
rank: 969
score: 97.60631103515625
patch: Iterator < ) ;
rank: 970
score: 98.44451032366071
patch: for ( } return res ;
rank: 970
score: 98.42197963169643
patch: for ( ) return res ;
rank: 970
score: 98.20995076497395
patch: lock ( res ) ;
rank: 970
score: 98.07626342773438
patch: Iterator iter . else /
rank: 970
score: 97.99102783203125
patch: Vector res = null ;
rank: 970
score: 97.90991821289063
patch: synchronized ( this )
rank: 970
score: 97.60078735351563
patch: Iterator iter = res
rank: 971
score: 98.0784912109375
patch: Iterator iter ( ) ;
rank: 971
score: 98.0675048828125
patch: int iter = true ;
rank: 971
score: 98.06711832682292
patch: Iterator < ) . .
rank: 971
score: 97.98309326171875
patch: int value = $STRING$ ;
rank: 971
score: 97.90709228515625
patch: result = null ;
rank: 971
score: 97.58392944335938
patch: for ( / *
rank: 972
score: 98.39959716796875
patch: this . entries = null ;
rank: 972
score: 98.38236781529018
patch: Iterator iter = * 1 ;
rank: 972
score: 98.15320841471355
patch: . res = res ;
rank: 972
score: 98.06859130859375
patch: return res ; }
rank: 972
score: 98.060546875
patch: int ( 1 ) ;
rank: 972
score: 97.84039306640625
patch: entries = new ;
rank: 972
score: 97.58200073242188
patch: Iterator iter = ;
rank: 973
score: 98.05867513020833
patch: Iterator < ) . )
rank: 973
score: 98.05710856119792
patch: Iterator iter = res <
rank: 973
score: 97.82811889648437
patch: lock ( ) ;
rank: 974
score: 98.07603963216145
patch: update ( res ) ;
rank: 974
score: 97.7888916015625
patch: repaint ( ) ;
rank: 974
score: 97.53599243164062
patch: Iterator iter / *
rank: 975
score: 98.2265116373698
patch: Map ( res ) ;
rank: 975
score: 98.07395426432292
patch: boolean res = false ;
rank: 975
score: 98.00567626953125
patch: Iterator iter {
rank: 975
score: 97.9969991048177
patch: Iterator iter = res ==
rank: 975
score: 97.75775146484375
patch: result = res ;
rank: 975
score: 97.5230484008789
patch: for ( (
rank: 976
score: 98.06650797526042
patch: Set res = null ;
rank: 976
score: 98.03346761067708
patch: entries ( res ) ;
rank: 976
score: 97.95372517903645
patch: int read = 0 ;
rank: 976
score: 97.75631103515624
patch: iter = res ;
rank: 976
score: 97.48332214355469
patch: for ( Iterator
rank: 977
score: 98.22988891601562
patch: Iterator < int ) ;
rank: 977
score: 98.05918375651042
patch: entries = new ) ;
rank: 977
score: 98.03103637695312
patch: Iterator < ) . ;
rank: 977
score: 97.95355224609375
patch: int size ( ) ;
rank: 977
score: 97.74429931640626
patch: iter = null ;
rank: 977
score: 97.34414672851562
patch: for ( else
rank: 978
score: 98.02642822265625
patch: add ( res ) ;
rank: 978
score: 97.73565673828125
patch: entries = null ;
rank: 978
score: 97.34107971191406
patch: for ( }
rank: 979
score: 98.16854858398438
patch: m ( res ) ;
rank: 979
score: 98.02114868164062
patch: Iterator iterator = null ;
rank: 979
score: 97.72895812988281
patch: for ( )
rank: 979
score: 97.3366928100586
patch: Iterator ++ ;
rank: 980
score: 98.15106201171875
patch: Iterator iter = res [
rank: 980
score: 98.04505411783855
patch: load ( res ) ;
rank: 980
score: 97.7287353515625
patch: entries = res ;
rank: 980
score: 97.24919891357422
patch: return v ;
rank: 981
score: 98.04014078776042
patch: fail ( $STRING$ ) ;
rank: 981
score: 97.70327758789062
patch: iter = 0 ;
rank: 981
score: 97.70304870605469
patch: int ) {
rank: 981
score: 97.17996215820312
patch: int ) ;
rank: 982
score: 98.1419169108073
patch: List ( res ) ;
rank: 982
score: 98.13330078125
patch: Set ( res ) ;
rank: 982
score: 98.02370198567708
patch: if ( v != ;
rank: 982
score: 97.61637573242187
patch: Iterator iter = )
rank: 982
score: 97.1638412475586
patch: int res =
rank: 983
score: 98.13742065429688
patch: / * return res ;
rank: 983
score: 98.123046875
patch: m $NUMBER$ = res ;
rank: 983
score: 97.83820190429688
patch: Iterator < ) .
rank: 983
score: 97.58485717773438
patch: Iterator iter = $NUMBER$
rank: 983
score: 97.4889404296875
patch: while ( res .
rank: 983
score: 97.1619873046875
patch: Iterator < )
rank: 984
score: 97.679443359375
patch: entries = 0 ;
rank: 984
score: 97.66951904296874
patch: result = new ;
rank: 984
score: 97.45103759765625
patch: Iterator iter ; }
rank: 984
score: 97.15618896484375
patch: int iter ;
rank: 985
score: 97.859912109375
patch: if ( res ;
rank: 985
score: 97.65565795898438
patch: data = res ;
rank: 985
score: 97.55896606445313
patch: Iterator iter = new
rank: 985
score: 97.44481201171875
patch: revalidate ( ) ;
rank: 985
score: 97.13369750976562
patch: final for (
rank: 986
score: 97.647021484375
patch: data = null ;
rank: 986
score: 97.52957916259766
patch: int iter {
rank: 986
score: 97.48419189453125
patch: for ( Iterator iter
rank: 986
score: 97.11180114746094
patch: for ( int
rank: 987
score: 98.09752400716145
patch: Iterator iter < int )
rank: 987
score: 97.984228515625
patch: Iterator * ) ;
rank: 987
score: 97.92655639648437
patch: / * * /
rank: 987
score: 97.70580444335937
patch: Iterator iter ) ;
rank: 987
score: 97.47822265625
patch: Dimension ( ) ;
rank: 988
score: 97.639208984375
patch: res = new ;
rank: 988
score: 97.45459747314453
patch: / ) ;
rank: 988
score: 97.2171401977539
patch: Iterator for (
rank: 988
score: 97.06925201416016
patch: Iterator * /
rank: 989
score: 97.86983642578124
patch: Iterator < int )
rank: 989
score: 97.63829956054687
patch: changed = true ;
rank: 989
score: 97.37999725341797
patch: = $NUMBER$ ;
rank: 989
score: 97.21627807617188
patch: Iterator iter *
rank: 989
score: 97.06697845458984
patch: / * /
rank: 990
score: 97.81950073242187
patch: for ( int )
rank: 990
score: 97.79413452148438
patch: reset ( ) ;
rank: 990
score: 97.65626220703125
patch: Iterator iter ; )
rank: 990
score: 97.6345947265625
patch: res = null ;
rank: 990
score: 97.41583251953125
patch: Iterator -- ;
rank: 990
score: 97.35487365722656
patch: = null ;
rank: 990
score: 97.20796203613281
patch: int iterator {
rank: 990
score: 97.056884765625
patch: int value ;
rank: 991
score: 97.79405517578125
patch: throw ( ) ;
rank: 991
score: 97.28242492675781
patch: = res ;
rank: 991
score: 97.15848541259766
patch: return iter ;
rank: 991
score: 97.01726531982422
patch: Iterator * ;
rank: 992
score: 97.75509033203124
patch: final int iter ;
rank: 992
score: 97.59631958007813
patch: Lock ( ) ;
rank: 992
score: 97.59504699707031
patch: final ) ;
rank: 992
score: 97.26937103271484
patch: Iterator iter .
rank: 992
score: 97.15306091308594
patch: int ( (
rank: 992
score: 97.085693359375
patch: Iterator iter ++
rank: 992
score: 96.91600799560547
patch: int res ;
rank: 993
score: 97.748779296875
patch: / * ) ;
rank: 993
score: 97.60952758789062
patch: for ( ; )
rank: 993
score: 97.22866821289062
patch: throw res ;
rank: 993
score: 97.08725992838542
patch: for (
rank: 993
score: 97.00006866455078
patch: for ( ;
rank: 994
score: 97.73629150390624
patch: invalidate ( ) ;
rank: 994
score: 97.60936279296875
patch: f = res ;
rank: 994
score: 97.25170135498047
patch: Iterator iter )
rank: 994
score: 97.07365417480469
patch: int entries :
rank: 994
score: 96.92524719238281
patch: break ; }
rank: 994
score: 96.05873616536458
patch: / *
rank: 995
score: 97.60203857421875
patch: iter = new ;
rank: 995
score: 97.11978149414062
patch: = 0 ;
rank: 995
score: 95.79005940755208
patch: / /
rank: 996
score: 97.60032958984375
patch: running = true ;
rank: 996
score: 97.2470932006836
patch: final ) {
rank: 996
score: 97.09813690185547
patch: = 1 ;
rank: 996
score: 97.00054931640625
patch: long ) ;
rank: 996
score: 96.97750091552734
patch: if ( res
rank: 996
score: 96.93163299560547
patch: / * }
rank: 996
score: 96.78009033203125
patch: * * /
rank: 996
score: 95.76769002278645
patch: try {
rank: 997
score: 97.59952392578126
patch: data = new ;
rank: 997
score: 97.24138641357422
patch: int -- ;
rank: 997
score: 96.95406341552734
patch: Object ) ;
rank: 997
score: 96.87822723388672
patch: int value =
rank: 997
score: 95.68982950846355
patch: iter .
rank: 998
score: 97.57734375
patch: state = res ;
rank: 998
score: 96.94171142578125
patch: I ) ;
rank: 998
score: 96.93687438964844
patch: int ( )
rank: 998
score: 96.92552185058594
patch: throw $NUMBER$ ;
rank: 998
score: 96.20501708984375
patch: Iterator iter
rank: 998
score: 94.7988510131836
patch: final
rank: 998
score: 93.81037902832031
patch: }
rank: 999
score: 96.9408187866211
patch: assert ) ;
rank: 999
score: 96.91682434082031
patch: throw null ;
rank: 999
score: 93.95469665527344
patch: Iterator
rank: 999
score: 93.42439270019531
patch: int
rank: 1000
score: 97.16117858886719
patch: } else {
rank: 1000
score: 97.03909301757812
patch: int entries ;
rank: 1000
score: 96.93354797363281
patch: String ) ;
rank: 1000
score: 95.63458251953125
patch: int value
rank: 1000
score: 93.74107360839844
patch: /
