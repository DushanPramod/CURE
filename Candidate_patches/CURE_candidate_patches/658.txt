rank: 1
score: 99.92672729492188
patch: Iterator iter = res . entries . iterator ( ) ;
rank: 1
score: 99.8271240234375
patch: Iterator iter = res . iterator ( ) ;
rank: 1
score: 99.78827776227679
patch: Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 2
score: 99.75532749720982
patch: Iterator iter = res . entries . entries . iterator ( ) ;
rank: 2
score: 99.69140625
patch: Iterator iter = res . entries . size ( ) ;
rank: 3
score: 99.73453979492187
patch: Iterator iter = v . iterator ( ) ;
rank: 3
score: 99.72974853515625
patch: Iterator iter = res . size ( ) ;
rank: 3
score: 99.6178311434659
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 4
score: 99.71573638916016
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ;
rank: 4
score: 99.7026123046875
patch: Iterator iter = res . entries ( ) ;
rank: 5
score: 99.63662923177084
patch: Iterator < String > iter = res . entries . iterator ( ) ;
rank: 5
score: 99.62854614257813
patch: Iterator iter = entries . iterator ( ) ;
rank: 5
score: 99.62590942382812
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 5
score: 99.56670851934524
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 6
score: 99.67715793185764
patch: Iterator iter = res . entries ( ) . entries ( ) . iterator ( ) ;
rank: 6
score: 99.61344401041667
patch: Iterator iter = res . entries . iter ( ) ;
rank: 6
score: 99.6102783203125
patch: final Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 6
score: 99.60218157087054
patch: Iterator iter = v . entries ( ) . iterator ( ) ;
rank: 6
score: 99.5421142578125
patch: Iterator iter = res . entries ( ) . entries ( ) ;
rank: 6
score: 99.5270465353261
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 7
score: 99.66507975260417
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 7
score: 99.64502716064453
patch: Iterator iter = res . entries . entries . entries . iterator ( ) ;
rank: 7
score: 99.59671020507812
patch: Iterator iter = res . iterator . iterator ( ) ;
rank: 7
score: 99.59450276692708
patch: Iterator iter = res . list . iterator ( ) ;
rank: 7
score: 99.55828857421875
patch: Iterator iter = res . to CaMeL Array ( ) . iterator ( ) ;
rank: 7
score: 99.52403157552084
patch: Iterator < ] > iter = res . entries . iterator ( ) ;
rank: 8
score: 99.60216267903645
patch: Iterator iter = v . entries . iterator ( ) ;
rank: 8
score: 99.59336751302084
patch: Iterator < Object > iter = res . entries . iterator ( ) ;
rank: 8
score: 99.58206176757812
patch: Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 8
score: 99.5607198079427
patch: Iterator iter = res . entries . entries ( ) ;
rank: 8
score: 99.54000150240384
patch: final Iterator iter = res . entries . iterator ( ) ;
rank: 8
score: 99.51127115885417
patch: Iterator iter = res . value . iterator ( ) ;
rank: 9
score: 99.58756510416667
patch: Iterator iter = res . entries . entries ( ) . entries . iterator ( ) ;
rank: 9
score: 99.54159884982639
patch: Iterator iter = res . entries . iterator ( ) ; iterator . iterator ( ) ;
rank: 9
score: 99.53759765625
patch: Iterator iter = res . next ( ) . entries . iterator ( ) ;
rank: 9
score: 99.53551664806548
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 9
score: 99.49654134114583
patch: int iter = res . entries . iterator ( ) ;
rank: 10
score: 99.57238006591797
patch: Iterator iter = res . entries ( ) . entries . iterator ( ) ;
rank: 10
score: 99.542724609375
patch: Iterator iter = this . res . entries . iterator ( ) ;
rank: 10
score: 99.53413696289063
patch: Iterator iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 10
score: 99.53375244140625
patch: Iterator iter = res . entries . iterator ( ) ; entries . iterator ( ) ;
rank: 10
score: 99.52573464133523
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 10
score: 99.51970966045673
patch: Iterator iter = res . entries . iterator ( ) ; ;
rank: 10
score: 99.49488176618304
patch: Iterator iter = res . entries ( ) . size ( ) ;
rank: 11
score: 99.5543571920956
patch: Iterator < String > iter = res . entries ( ) . iterator ( ) ;
rank: 11
score: 99.53175862630208
patch: Iterator iter = this . entries . iterator ( ) ;
rank: 11
score: 99.51803152901786
patch: Iterator iter = res . entries . entries . size ( ) ;
rank: 11
score: 99.5171535326087
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 11
score: 99.51295979817708
patch: Iterator iter = res . has CaMeL Next ( ) ;
rank: 11
score: 99.49238918138587
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries . iterator ( ) ;
rank: 11
score: 99.46268717447917
patch: Iterator iter = res . entries ( res ) . iterator ( ) ;
rank: 12
score: 99.54625651041667
patch: Iterator < int > iter = res . entries . iterator ( ) ;
rank: 12
score: 99.49889322916667
patch: Iterator iter = res . entries . ( ) . iterator ( ) ;
rank: 12
score: 99.45757378472223
patch: Iterator iter = res . iterator ( ) ; while . has CaMeL Next ( ) ;
rank: 13
score: 99.54443359375
patch: Iterator < ? > iter = res . entries . iterator ( ) ;
rank: 13
score: 99.49793497721355
patch: Iterator iter = entries . entries . iterator ( ) ;
rank: 13
score: 99.48749542236328
patch: Iterator iter = res . get . entries ( ) . iterator ( ) ;
rank: 13
score: 99.45478057861328
patch: try { Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 14
score: 99.56351047092014
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . entries . iterator ( ) ;
rank: 14
score: 99.53699840198864
patch: final Iterator iter = res . iterator ( ) ;
rank: 14
score: 99.48910522460938
patch: Iterator iter = res . entries . entries ( ) . size ( ) ;
rank: 14
score: 99.48765462239584
patch: Iterator iter = res [ 0 ] . entries . iterator ( ) ;
rank: 14
score: 99.48501586914062
patch: Iterator iter = res . iterator ( ) ; res . iterator ( ) ;
rank: 14
score: 99.48170301649306
patch: Iterator iter = res . entries . to CaMeL Array ( ) . iterator ( ) ;
rank: 14
score: 99.47936072716347
patch: Iterator iter = res . entries . iterator ( ) ; }
rank: 14
score: 99.46875813802083
patch: Iterator iter = res . entries ( $NUMBER$ ) . iterator ( ) ;
rank: 14
score: 99.46464538574219
patch: Iterator iter = res ; while ( iter . has CaMeL Next ( ) )
rank: 14
score: 99.4533462524414
patch: / * Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 15
score: 99.5538101196289
patch: Iterator iter = res . entries . entries ( ) . entries ( ) ;
rank: 15
score: 99.53548177083333
patch: Iterator < Iterator > iter = res . entries . iterator ( ) ;
rank: 15
score: 99.48312717013889
patch: Iterator iter = res . entries . iterator ( ) ; res . iterator ( ) ;
rank: 15
score: 99.47230747767857
patch: Iterator iter = res . res . entries . iterator ( ) ;
rank: 15
score: 99.4676983173077
patch: Iterator < ] > iter = res . entries ( ) ;
rank: 15
score: 99.45281982421875
patch: Iterator iterator = res . entries ( ) . iterator ( ) ;
rank: 16
score: 99.55178493923611
patch: Iterator iter = res . entries . entries . entries ( ) . iterator ( ) ;
rank: 16
score: 99.52390700120192
patch: Iterator < String > iter = res . iterator ( ) ;
rank: 16
score: 99.47176688058036
patch: Iterator iter = res . this . entries . iterator ( ) ;
rank: 16
score: 99.4658935546875
patch: Iterator < T > iter = res . entries . iterator ( ) ;
rank: 16
score: 99.46546695106908
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 16
score: 99.46138509114583
patch: Iterator iter = res . entries ; while ( iter . has CaMeL Next ( ) )
rank: 16
score: 99.446142578125
patch: Iterator iter = v . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 17
score: 99.53719075520833
patch: Iterator iter = v . entries ( ) . entries ( ) . iterator ( ) ;
rank: 17
score: 99.51649169921875
patch: Iterator iter = res . entries . entries ( ) . entries ( ) . iterator ( ) ;
rank: 17
score: 99.46848754882812
patch: Iterator iter = res . iter ( ) ;
rank: 17
score: 99.46034307065217
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 17
score: 99.45881483289931
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) ;
rank: 17
score: 99.45271519252232
patch: Iterator iter = this . entries . entries . iterator ( ) ;
rank: 18
score: 99.52669525146484
patch: Iterator iter = v . entries . entries ( ) . iterator ( ) ;
rank: 18
score: 99.46174890854779
patch: synchronized ( res ) { Iterator iter = res . entries . iterator ( ) ;
rank: 18
score: 99.45937965029762
patch: Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 18
score: 99.42536364103618
patch: Iterator iter = res . entries ( res . entries ( ) ) . iterator ( ) ;
rank: 19
score: 99.51412527901786
patch: Iterator iter = res . entries ( ) . iter ( ) ;
rank: 19
score: 99.45999581473214
patch: int iter = res . entries ( ) . size ( ) ;
rank: 19
score: 99.45365905761719
patch: Iterator iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 19
score: 99.44553444602273
patch: Iterator iter = v . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 19
score: 99.44466727120536
patch: Iterator iter = res . trim ( ) . iterator ( ) ;
rank: 19
score: 99.44044596354166
patch: Iterator < double > iter = res . entries . iterator ( ) ;
rank: 19
score: 99.43900553385417
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( ) ;
rank: 20
score: 99.51356416590073
patch: Iterator < Object > iter = res . entries ( ) . iterator ( ) ;
rank: 20
score: 99.51302761501736
patch: Iterator iter = res . entries ( ) . entries ( ) . entries ( ) ;
rank: 20
score: 99.45702362060547
patch: Iterator iter = res . entries ( - 1 ) . iterator ( ) ;
rank: 20
score: 99.4494269875919
patch: Iterator iter = res . entries . = res . entries . iterator ( ) ;
rank: 20
score: 99.44091796875
patch: iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 20
score: 99.44084616268383
patch: Iterator iter = res . entries [ 0 ] . entries . iterator ( ) ;
rank: 20
score: 99.43943481445312
patch: Iterator iter = entries . size ( ) ;
rank: 20
score: 99.42232259114583
patch: Iterator iter = v . iterator . iterator ( ) ;
rank: 21
score: 99.50897216796875
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( ) ;
rank: 21
score: 99.45895565257354
patch: Iterator iter = res . ( ) . entries ( ) . iterator ( ) ;
rank: 21
score: 99.44699435763889
patch: Iterator iter = res . entries . iter ( ) ; iterator . iterator ( ) ;
rank: 21
score: 99.44383748372395
patch: int iter = res . entries . size ( ) ;
rank: 21
score: 99.43374633789062
patch: Iterator iter = res . length . iterator ( ) ;
rank: 21
score: 99.4316177368164
patch: Iterator iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 21
score: 99.42104763454861
patch: Iterator iter = res . iterator ( ) ; iterator . has CaMeL Next ( ) ;
rank: 22
score: 99.49817612591912
patch: final Iterator iter = res . entries . entries ( ) . iterator ( ) ;
rank: 22
score: 99.44656575520834
patch: Iterator iter = res . get ( res . iterator ( ) ) ;
rank: 22
score: 99.43606567382812
patch: Iterator iter = this . res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 22
score: 99.43060302734375
patch: Iterator iter = res . size ( ) : res . iterator ( ) ;
rank: 22
score: 99.4180908203125
patch: Iterator iter = res . iterator ( ) . iterator ( ) ;
rank: 23
score: 99.4968032836914
patch: final Iterator < String > iter = res . entries . iterator ( ) ;
rank: 23
score: 99.44032639723558
patch: Iterator < ] > iter = res . iterator ( ) ;
rank: 23
score: 99.435546875
patch: Iterator iter = res . list ( ) . iterator ( ) ;
rank: 23
score: 99.43077741350446
patch: Iterator iter = res . entries . has CaMeL Next ( ) ;
rank: 23
score: 99.430029296875
patch: Iterator iter = v . size ( ) ;
rank: 23
score: 99.41756184895833
patch: Iterator iter = res . iterator ( res . size ( ) ) ;
rank: 23
score: 99.41590118408203
patch: Iterator iter = this . res . entries . entries . iterator ( ) ;
rank: 24
score: 99.45196533203125
patch: Iterator iter = res . entries . next ( ) . entries ( ) ;
rank: 24
score: 99.4392822265625
patch: Iterator < E > iter = res . entries . iterator ( ) ;
rank: 24
score: 99.428466796875
patch: Iterator iter = res . get CaMeL Entries ( ) . iterator ( ) ;
rank: 24
score: 99.41689453125
patch: Iterator iter = v . entries ( ) ;
rank: 24
score: 99.41037884880515
patch: Iterator < String > iter = res . entries . entries . iterator ( ) ;
rank: 25
score: 99.48388671875
patch: Iterator < Iterator > iter = res . entries ( ) . iterator ( ) ;
rank: 25
score: 99.4211181640625
patch: Iterator iter = v [ 0 ] . entries . iterator ( ) ;
rank: 25
score: 99.41671987680289
patch: Iterator iter = res . iterator ( ) ; while ( )
rank: 25
score: 99.40458540482955
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 26
score: 99.44554138183594
patch: Iterator iter = res . entries . entries . entries . size ( ) ;
rank: 26
score: 99.43801540798611
patch: Iterator iter = res . entries . iterator ( ) ; iter . iterator ( ) ;
rank: 26
score: 99.43461390904018
patch: Iterator iter = res . entries = res . iterator ( ) ;
rank: 26
score: 99.42709350585938
patch: Iterator iter = res . get CaMeL Classes ( ) . iterator ( ) ;
rank: 26
score: 99.42255510602679
patch: Iterator iter = res . copy ( ) . iterator ( ) ;
rank: 26
score: 99.42051478794643
patch: Iterator iter = res . remove ( ) . iterator ( ) ;
rank: 26
score: 99.41311848958334
patch: Iterator iter = res . entries ( ) . iterator ( ) ; ;
rank: 26
score: 99.40371306046195
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this . res . entries . iterator ( ) ;
rank: 27
score: 99.47652587890624
patch: Iterator iter = res . entries . iterator ( ) ; iter . has CaMeL Next ( ) ;
rank: 27
score: 99.43963982077206
patch: Iterator iter = res . add ( this ) . entries . iterator ( ) ;
rank: 27
score: 99.43074174360795
patch: iter = res . entries . iterator ( ) ;
rank: 27
score: 99.4064697265625
patch: Iterator iterator = res . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 27
score: 99.40198335193452
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = v . entries . iterator ( ) ;
rank: 28
score: 99.48197428385417
patch: while ( res . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 28
score: 99.4744384765625
patch: Iterator < Integer > iter = res . entries . iterator ( ) ;
rank: 28
score: 99.4301986694336
patch: Iterator iter = res . iterator ( ) ; iterator . iterator ( ) ;
rank: 28
score: 99.41603781960227
patch: Iterator iterator = res . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 28
score: 99.40576171875
patch: Iterator iter = res . entries ( ) . iterator ( ) . iterator ( ) ;
rank: 28
score: 99.40126342773438
patch: Iterator iter ? res . entries . entries . iterator ( ) . has CaMeL Next ( ) ;
rank: 29
score: 99.47861056857639
patch: Iterator iter = res . entries . entries . entries . entries . iterator ( ) ;
rank: 29
score: 99.43028913225446
patch: Iterator iter = res . entries = res . entries ( ) ;
rank: 29
score: 99.430126953125
patch: Iterator < Entry > iter = res . entries . iterator ( ) ;
rank: 29
score: 99.42708914620536
patch: Iterator iter = res . next ( ) . entries ( ) ;
rank: 29
score: 99.42030843098958
patch: Iterator res = res . entries . iterator ( ) ;
rank: 29
score: 99.4195327758789
patch: Iterator iter = res . get CaMeL Value ( ) . iterator ( ) ;
rank: 29
score: 99.41573757595486
patch: Iterator iter = res . iterator ( ) ; iter . has CaMeL Next ( ) ;
rank: 29
score: 99.40456671463816
patch: Iterator iter = res . entries ( res . size ( ) ) . iterator ( ) ;
rank: 29
score: 99.40116550611413
patch: Iterator Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 30
score: 99.47764078776042
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 30
score: 99.47074068509616
patch: Iterator < Object > iter = res . iterator ( ) ;
rank: 30
score: 99.42853655133929
patch: Iterator iter = res . entries ( ) . copy ( ) ;
rank: 30
score: 99.42635672433036
patch: try { Iterator iter = res . entries . iterator ( ) ;
rank: 30
score: 99.41450832201087
patch: Iterator iter = Integer . parse CaMeL Int ( res . to CaMeL String ( ) ) . iterator ( ) ;
rank: 30
score: 99.40380249023437
patch: Iterator iter = res . entries . iterator ( ) ; while . has CaMeL Next ( ) ;
rank: 30
score: 99.4007568359375
patch: Iterator iter = res . get CaMeL Entry ( ) . entries . iterator ( ) ;
rank: 31
score: 99.47060977711396
patch: Iterator < ? > iter = res . entries ( ) . iterator ( ) ;
rank: 31
score: 99.42430204503677
patch: Iterator iter = res . entries . entries . ( ) . iterator ( ) ;
rank: 31
score: 99.42154366629464
patch: Iterator iter = res . entries ( ) . next ( ) ;
rank: 31
score: 99.40967407226563
patch: Iterator iter = list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 31
score: 99.40821329752605
patch: Iterator iter = iter . has CaMeL Next ( ) ;
rank: 31
score: 99.40360514322917
patch: Iterator iter = v . iterator ( ) ; while . has CaMeL Next ( ) ;
rank: 32
score: 99.47378200954861
patch: Iterator iter = res . entries ( ) . entries ( ) . size ( ) ;
rank: 32
score: 99.46269788240132
patch: Iterator < String > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 32
score: 99.4241943359375
patch: Iterator iter = res . entries . iter . iterator ( ) ;
rank: 32
score: 99.4136211688702
patch: Iterator < String > iter = res . entries ( ) ;
rank: 32
score: 99.41097259521484
patch: Iterator iter = res . length ;
rank: 32
score: 99.3977383700284
patch: Iterator iter = res . entries . Open CaMeL Map CaMeL Real CaMeL Vector ( ) . iterator ( ) ;
rank: 33
score: 99.4730224609375
patch: Iterator iter = res . entries = res . entries . iterator ( ) ;
rank: 33
score: 99.46195068359376
patch: Iterator iter = res . entries . iterator ( ) ; iterator . has CaMeL Next ( ) ;
rank: 33
score: 99.4211196899414
patch: Iterator iter = new Iterator ( res . entries . iterator ( ) ) ;
rank: 33
score: 99.40107945033482
patch: Iterator iter = res . entries . iterator ( ) ; ) {
rank: 33
score: 99.39990952435662
patch: Iterator iter = res [ 0 ] . entries ( ) . iterator ( ) ;
rank: 33
score: 99.39822591145834
patch: Iterator iter = res . entries ( res . size ( ) ) ;
rank: 33
score: 99.39747314453125
patch: Iterator iter = res . entries . to CaMeL Array ( ) . entries . iterator ( ) ;
rank: 34
score: 99.47134060329861
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = new Real CaMeL Vector ( this ) ;
rank: 34
score: 99.4173812866211
patch: Iterator iter = res . to CaMeL Array ( ) . entries ( ) ;
rank: 34
score: 99.395068359375
patch: if ( res != null ) res . entries = res . entries ;
rank: 34
score: 99.39249320652173
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ( ) . iterator ( ) ;
rank: 35
score: 99.47112678079044
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 35
score: 99.45677083333334
patch: Iterator < Class > iter = res . entries . iterator ( ) ;
rank: 35
score: 99.41492462158203
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . size ( ) ;
rank: 35
score: 99.39847564697266
patch: Iterator iter = res . size ( ) : res . size ( ) ;
rank: 35
score: 99.3955078125
patch: Iterator iter = res . clone ( ) . iterator ( ) ;
rank: 35
score: 99.39237976074219
patch: Iterator iter = res . entries ( ) . iterator . iterator ( ) ;
rank: 35
score: 99.3906982421875
patch: Iterator iter = res . Open CaMeL Map CaMeL Real CaMeL Vector ( ) . iterator ( ) ;
rank: 36
score: 99.41463470458984
patch: Iterator iter = res . to CaMeL Array ( ) . size ( ) ;
rank: 36
score: 99.411376953125
patch: Iterator iterator = res . entries . iterator ( ) ;
rank: 36
score: 99.38931884765626
patch: Iterator iter = res . entries . entries . to CaMeL Array ( ) . iterator ( ) ;
rank: 36
score: 99.387744140625
patch: Iterator iter = res . entries ( ) . iterator ( ) ) ;
rank: 37
score: 99.45468139648438
patch: final Iterator < Object > iter = res . entries . iterator ( ) ;
rank: 37
score: 99.41407121930804
patch: Iterator iter = res . data . entries . iterator ( ) ;
rank: 37
score: 99.41133880615234
patch: Iterator iter = res . entries . entries ( ) . iter ( ) ;
rank: 37
score: 99.39901029146634
patch: Iterator < T > iter = res . entries ( ) ;
rank: 37
score: 99.39356904871323
patch: Iterator < Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 37
score: 99.38920665922619
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this . entries . iterator ( ) ;
rank: 37
score: 99.38497721354166
patch: Iterator iter = res . entries ( ) ) . iterator ( ) ;
rank: 38
score: 99.46830240885417
patch: while ( iter . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 38
score: 99.4139763327206
patch: Iterator iter = res [ 0 ] . entries . entries . iterator ( ) ;
rank: 38
score: 99.41117553710937
patch: Iterator iter = res . next ( ) ;
rank: 38
score: 99.39825798483456
patch: Iterator < ] > iter = res . entries ( ) . iterator ( ) ;
rank: 38
score: 99.39417940027573
patch: Iterator iter = res ; while ( iter . has CaMeL Next ( ) ) {
rank: 38
score: 99.39154052734375
patch: Iterator iter < String > iter = res . entries . iterator ( ) ;
rank: 38
score: 99.39053344726562
patch: Iterator iter = res . entries . length ;
rank: 38
score: 99.38488091362848
patch: res . entries = res . entries ; Iterator iter = v . iterator ( ) ;
rank: 39
score: 99.46695963541667
patch: Iterator iter = this . res . iterator ( ) ;
rank: 39
score: 99.39723423549107
patch: Iterator iter = res . entries ( ) . clone ( ) ;
rank: 39
score: 99.39338822798295
patch: Iterator iter = data . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 39
score: 99.39138614430146
patch: Iterator iter = res . index CaMeL Of ( $STRING$ ) . iterator ( ) ;
rank: 39
score: 99.38936070033482
patch: Iterator iter = res . iter . has CaMeL Next ( ) ;
rank: 39
score: 99.38874368106617
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) {
rank: 39
score: 99.38450113932292
patch: Iterator iter = res . entries ( ) ; while . has CaMeL Next ( ) ;
rank: 40
score: 99.46680365668402
patch: if ( iter . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 40
score: 99.40691266741071
patch: Iterator iter = res . next ( ) . iterator ( ) ;
rank: 40
score: 99.3969257061298
patch: res . entries = res . entries . iterator ( ) ;
rank: 40
score: 99.39035866477273
patch: Iterator iter = this . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 40
score: 99.3872314453125
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res ) {
rank: 40
score: 99.38209751674107
patch: Iterator iter = res . entries . iterator ( ) ; for (
rank: 41
score: 99.40620561079545
patch: Iterator iter = res . iterator ( ) ; ;
rank: 41
score: 99.3956298828125
patch: Iterator iter = res . map . iterator ( ) ;
rank: 41
score: 99.38453979492188
patch: Iterator iter = entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 41
score: 99.38296072823661
patch: Iterator iter = v . entries . entries . iterator ( ) ;
rank: 41
score: 99.38004150390626
patch: Iterator iterator = v . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 41
score: 99.3755859375
patch: Iterator iter = res . ( ) . entries . iterator ( ) ;
rank: 42
score: 99.44391338641827
patch: Iterator < Iterator > iter = res . iterator ( ) ;
rank: 42
score: 99.40590413411458
patch: Iterator iter = res . next ( ) . entries ( ) . iterator ( ) ;
rank: 42
score: 99.37791683799342
patch: Iterator iter = res . iterator ( ) ; while ( . has CaMeL Next ( ) )
rank: 43
score: 99.44349670410156
patch: Iterator iter = res . entries . list ( ) . iterator ( ) ;
rank: 43
score: 99.40479871961806
patch: Iterator iter = res . entries . iter ( ) ; entries . iterator ( ) ;
rank: 43
score: 99.40177408854167
patch: Iterator iter = res . entries . index CaMeL Of ( this ) ;
rank: 43
score: 99.3906005859375
patch: Iterator iter = res . entries ( 1 ) . iterator ( ) ;
rank: 43
score: 99.38128662109375
patch: Iterator iter = res . get CaMeL Name ( ) . iterator ( ) ;
rank: 43
score: 99.38011169433594
patch: Iterator iter = res . get CaMeL Properties ( ) . iterator ( ) ;
rank: 43
score: 99.37612735523896
patch: Iterator iter = v [ 0 ] . entries ( ) . iterator ( ) ;
rank: 43
score: 99.37347412109375
patch: Iterator iter = res . read ( ) . iterator ( ) ;
rank: 44
score: 99.45497639973958
patch: Real CaMeL Vector v = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 44
score: 99.39808872767857
patch: for ( Iterator iter = res . entries . iterator ( ) ;
rank: 44
score: 99.38956451416016
patch: synchronized ( res ) { iter = res . entries . iterator ( ) ;
rank: 44
score: 99.37594168526786
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = res . entries . iterator ( ) ;
rank: 45
score: 99.45303683810764
patch: Iterator iter = this . res . entries . entries ( ) . iterator ( ) ;
rank: 45
score: 99.40420532226562
patch: Iterator iter = res . get . iterator ( ) ;
rank: 45
score: 99.39788411458333
patch: Iterator iter = res [ 1 ] . entries . iterator ( ) ;
rank: 45
score: 99.38606262207031
patch: Iterator iter = res . to CaMeL String ( ) . iterator ( ) ;
rank: 45
score: 99.3792495727539
patch: Iterator iter < Object > iter = res . entries . iterator ( ) ;
rank: 45
score: 99.37046185661765
patch: if ( res . entries != null ) res . entries = res . entries ;
rank: 46
score: 99.45123969184027
patch: Iterator iter = iter . entries ( ) . entries ( ) . iterator ( ) ;
rank: 46
score: 99.40302385602679
patch: Iterator iter = res . entries . entries . iter ( ) ;
rank: 46
score: 99.38287823016827
patch: Iterator < T > iter = res . iterator ( ) ;
rank: 46
score: 99.37605794270833
patch: Iterator iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 46
score: 99.36567034040179
patch: Iterator iter = ebe CaMeL Multiply . entries . iterator ( ) ;
rank: 47
score: 99.39519500732422
patch: Iterator iter = res . next ( ) . entries . size ( ) ;
rank: 47
score: 99.38154296875
patch: res . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 47
score: 99.37838309151786
patch: Iterator iter = res . size ( ) . iterator ( ) ;
rank: 47
score: 99.37476695667614
patch: Iterator iter = res . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 47
score: 99.37228628305289
patch: Iterator iter = ! res . entries . iterator ( ) ;
rank: 47
score: 99.36863878038194
patch: res . entries = res . entries ; Iterator iter = res . iterator ( ) ;
rank: 47
score: 99.3655517578125
patch: Iterator iter = res . add ( v ) . iterator ( ) ;
rank: 48
score: 99.43473093133224
patch: res . iterator ( ) . iterator ( ) . iterator ( ) . next ( ) ;
rank: 48
score: 99.39999389648438
patch: Iterator iter = res . entries . iterator ( ) ; iterator = null ;
rank: 48
score: 99.380615234375
patch: int entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 48
score: 99.3750228881836
patch: Iterator iter = res . iterator ( ) : res . iterator ( ) ;
rank: 48
score: 99.37183634440105
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 48
score: 99.37083899456522
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this . entries . entries . iterator ( ) ;
rank: 48
score: 99.361279296875
patch: Iterator iter . has CaMeL Next ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 49
score: 99.44700404575893
patch: Iterator iter = iter . entries ( ) . iterator ( ) ;
rank: 49
score: 99.39966498480902
patch: Iterator iter = res . iterator ( ) ; iterator = res . iterator ( ) ;
rank: 49
score: 99.37901893028847
patch: Iterator < E > iter = res . entries ( ) ;
rank: 49
score: 99.36422964242789
patch: final Iterator iter = res . entries . size ( ) ;
rank: 50
score: 99.4307861328125
patch: final Iterator < ? > iter = res . entries . iterator ( ) ;
rank: 50
score: 99.37882486979167
patch: Iterator iter = res . entries ( null ) . iterator ( ) ;
rank: 50
score: 99.37021771599265
patch: Iterator iter = res . entries [ 1 ] . entries . iterator ( ) ;
rank: 50
score: 99.3682632446289
patch: Iterator iter = 0 ; while ( iter . has CaMeL Next ( ) )
rank: 50
score: 99.36721319901316
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ( ) ;
rank: 50
score: 99.36050075954861
patch: Iterator iter = res . entries ( ) ; iterator . has CaMeL Next ( ) ;
rank: 51
score: 99.43621148003473
patch: Iterator iter = res . entries ( ) . entries . entries . iterator ( ) ;
rank: 51
score: 99.42743997012867
patch: Iterator < int > iter = res . entries ( ) . iterator ( ) ;
rank: 51
score: 99.37880859375
patch: final int iter = res . entries ( ) . size ( ) ;
rank: 51
score: 99.36658935546875
patch: Iterator iter = list . iterator ( ) ;
rank: 51
score: 99.3662841796875
patch: final Iterator iter = res . entries . entries . iterator ( ) ;
rank: 51
score: 99.36035874310662
patch: Iterator iter = res . entries ( ) . iterator ( ) ; while ( )
rank: 51
score: 99.357373046875
patch: Iterator < Long > iter = res . entries . iterator ( ) ;
rank: 52
score: 99.42418823242187
patch: boolean iter = res . entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 52
score: 99.39605712890625
patch: Iterator iter = res . get ( ) . entries ( ) . iterator ( ) ;
rank: 52
score: 99.36342551491477
patch: Iterator iter = res . Open CaMeL Map CaMeL Real CaMeL Vector ( ) . entries . iterator ( ) ;
rank: 52
score: 99.35702078683036
patch: / * Iterator iter = res . entries . iterator ( ) ;
rank: 52
score: 99.3555399576823
patch: Iterator iter = res . entries . next ( ) ;
rank: 53
score: 99.43465169270833
patch: Iterator iter = res . entries . iterator ( ) : res . iterator ( ) ;
rank: 53
score: 99.39571940104166
patch: Iterator iter = res . get ( res . size ( ) ) ;
rank: 53
score: 99.37647247314453
patch: Iterator iter = res . entries . trim ( ) . iterator ( ) ;
rank: 53
score: 99.3655776977539
patch: Iterator iter = v ; while ( iter . has CaMeL Next ( ) )
rank: 53
score: 99.35534057617187
patch: Iterator iter = res . iterator . iterator ( ) ; while . has CaMeL Next ( ) ;
rank: 53
score: 99.35360952524039
patch: Iterator iter = res . ( ) . iterator ( ) ;
rank: 54
score: 99.3927993774414
patch: Iterator iter = res . entries . iterator ( ) ; iterator = 0 ;
rank: 54
score: 99.37796783447266
patch: Iterator iter = res . get CaMeL Value ( ) . size ( ) ;
rank: 54
score: 99.37252044677734
patch: Iterator iter = res . value . entries ( ) . iterator ( ) ;
rank: 54
score: 99.36247114701705
patch: Iterator iter = res . iter . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 54
score: 99.3547595796131
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) )
rank: 54
score: 99.34974365234375
patch: Iterator iter = res . read ( ) ;
rank: 55
score: 99.422021484375
patch: Iterator < ) > iter = res . entries . iterator ( ) ;
rank: 55
score: 99.36572265625
patch: Iterator iter = res . class . entries ( ) . iterator ( ) ;
rank: 55
score: 99.36057447350544
patch: for ( Iterator iter = res . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 55
score: 99.352294921875
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 55
score: 99.3486328125
patch: Iterator iter = entries . entries ( ) . iterator ( ) ;
rank: 56
score: 99.42142526726974
patch: Iterator < Object > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 56
score: 99.3885498046875
patch: Iterator iter = ( Iterator ) res . entries . iterator ( ) ;
rank: 56
score: 99.37474149816177
patch: Iterator iter = res . index CaMeL Of ( $STRING$ ) . entries ( ) ;
rank: 56
score: 99.3645731608073
patch: Iterator entries = res . entries . iterator ( ) ;
rank: 56
score: 99.35987437855114
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 56
score: 99.34786648220486
patch: Iterator iter = v . iterator ( ) ; iterator . has CaMeL Next ( ) ;
rank: 57
score: 99.42884521484375
patch: Iterator iter = iter . iterator ( ) ;
rank: 57
score: 99.37062701056985
patch: final int entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 57
score: 99.3592196377841
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 57
score: 99.34674072265625
patch: Iterator iter = res . iterator . entries ( ) ;
rank: 57
score: 99.3447977701823
patch: List iter = res . entries . iterator ( ) ;
rank: 58
score: 99.42720540364583
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( iter ) ;
rank: 58
score: 99.38642229352679
patch: Iterator iter = new Iterator ( res . iterator ( ) ) ;
rank: 58
score: 99.3744255514706
patch: Iterator iter = res . entries Real CaMeL Vector ( ) . iterator ( ) ;
rank: 58
score: 99.369140625
patch: Iterator iter = res . entries ( ) ; iterator . iterator ( ) ;
rank: 58
score: 99.3579330444336
patch: Iterator iter = res . length . entries ( ) . iterator ( ) ;
rank: 58
score: 99.3567886352539
patch: Iterator iter = res . clone ( ) . entries . iterator ( ) ;
rank: 58
score: 99.34608764648438
patch: Iterator iter = res . iterator . ) ; while ( iter . has CaMeL Next ( ) )
rank: 58
score: 99.34476047092014
patch: Iterator iter = res . to CaMeL Array ( ) . entries . iterator ( ) ;
rank: 59
score: 99.38589041573661
patch: Iterator iter = res . entries . entries . entries ( ) ;
rank: 59
score: 99.3738784790039
patch: Iterator iter = res . entries . entries . entries . entries ( ) ;
rank: 59
score: 99.36775970458984
patch: int iter . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 59
score: 99.35745239257812
patch: Iterator iter = res . iterator ( ) : res . size ( ) ;
rank: 59
score: 99.3551025390625
patch: Iterator iter = res . map . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 59
score: 99.34607514880952
patch: Iterator iter = res . entries ( res . entries . size ( ) ) . iterator ( ) ;
rank: 59
score: 99.34343155570652
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = v . entries . entries . iterator ( ) ;
rank: 60
score: 99.41363055889423
patch: Iterator < int > iter = res . iterator ( ) ;
rank: 60
score: 99.3531161221591
patch: Iterator iter = res . iterator . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 60
score: 99.34369365985577
patch: Iterator iter = v . iterator ( ) ; while ( )
rank: 60
score: 99.34334524054276
patch: Iterator < Open CaMeL Map CaMeL Entry > iter = res . entries . iterator ( ) ;
rank: 61
score: 99.42514377170139
patch: Iterator iter = v . entries . entries ( ) . entries . iterator ( ) ;
rank: 61
score: 99.41273408777573
patch: Iterator < Class > iter = res . entries ( ) . iterator ( ) ;
rank: 61
score: 99.36713201349431
patch: final Iterator iter = res . entries ( ) ;
rank: 61
score: 99.35669708251953
patch: Iterator iter = res . get CaMeL Data ( ) . iterator ( ) ;
rank: 61
score: 99.35226440429688
patch: Iterator iter = this . res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 61
score: 99.34326171875
patch: Iterator iter = res . get CaMeL Entry ( ) . entries . entries . iterator ( ) ;
rank: 61
score: 99.34290986902573
patch: res . res = res . entries . iterator ( ) . next ( ) ;
rank: 61
score: 99.33453369140625
patch: Iterator iter = res . data . iterator ( ) ;
rank: 62
score: 99.3562873391544
patch: Iterator iter = res == new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 62
score: 99.35178629557292
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 62
score: 99.34159088134766
patch: res . res = res ; Iterator iter = res . iterator ( ) ;
rank: 62
score: 99.33407389322916
patch: Iterator < long > iter = res . entries . iterator ( ) ;
rank: 63
score: 99.422119140625
patch: Iterator iter = v . entries ( ) . entries . iterator ( ) ;
rank: 63
score: 99.38099500868056
patch: Iterator iter = res . entries . iterator ( ) ; res . next ( ) ;
rank: 63
score: 99.33135986328125
patch: Iterator iter = res . res . iterator ( ) ;
rank: 64
score: 99.42207166883681
patch: Iterator iter = res . entries . entries ( ) . entries . entries ( ) ;
rank: 64
score: 99.40733235677084
patch: Iterator iter = res . entries ( ) . iterator ( ) ; else
rank: 64
score: 99.34983825683594
patch: Iterator iter = res . get CaMeL Bytes ( ) . iterator ( ) ;
rank: 64
score: 99.34009602864583
patch: Iterator iter = res . entries . iterator ( ) ; while ( )
rank: 64
score: 99.33985093060662
patch: Iterator < double [ ] > iter = res . entries . iterator ( ) ;
rank: 64
score: 99.33036295572917
patch: Iterator < boolean > iter = res . entries . iterator ( ) ;
rank: 65
score: 99.40433959960937
patch: Iterator iter = res . to CaMeL Array ( ) . entries ( ) . iterator ( ) ;
rank: 65
score: 99.37895856584821
patch: Iterator iter = res . next . entries . iterator ( ) ;
rank: 65
score: 99.35564108455883
patch: Iterator < int [ ] > iter = res . entries . iterator ( ) ;
rank: 65
score: 99.34869063527961
patch: Iterator iter = res . entries ; while ( iter . has CaMeL Next ( ) ) {
rank: 65
score: 99.33854406020221
patch: Iterator < Object > iter = res . entries . entries . iterator ( ) ;
rank: 65
score: 99.33844353170956
patch: if ( res != null ) res . entries = res . entries . entries ;
rank: 66
score: 99.41470675998264
patch: Iterator iter = res . entries . iterator ( ) * v . iterator ( ) ;
rank: 66
score: 99.37743326822917
patch: Iterator iter = res . get ( 0 ) . iterator ( ) ;
rank: 66
score: 99.366259765625
patch: Iterator iter = res . entries . ( ) . entries ( ) ;
rank: 66
score: 99.35987955729166
patch: synchronized ( res ) { Iterator iter = res . iterator ( ) ;
rank: 66
score: 99.35538482666016
patch: Iterator iter = iter . next ( ) . entries . iterator ( ) ;
rank: 66
score: 99.34803838315217
patch: Iterator iter = res . entries . iterator ( ) ; ; while ( iter . has CaMeL Next ( ) )
rank: 66
score: 99.33853912353516
patch: Iterator iter ? res . iterator ( ) . has CaMeL Next ( ) ;
rank: 67
score: 99.41397094726562
patch: Iterator iter = res != null : res . entries . iterator ( ) ;
rank: 67
score: 99.4011459350586
patch: final Iterator < Iterator > iter = res . entries . iterator ( ) ;
rank: 67
score: 99.364501953125
patch: synchronized ( this ) { Iterator iter = res . entries . iterator ( ) ;
rank: 67
score: 99.35655924479167
patch: Iterator iter = res . entries ( true ) . iterator ( ) ;
rank: 67
score: 99.34395168138587
patch: Iterator iter = v . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 68
score: 99.41238742404514
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . length . iterator ( ) ;
rank: 68
score: 99.40036492598684
patch: final Iterator iter = res . entries ( ) . entries ( ) . iterator ( ) ;
rank: 68
score: 99.37528991699219
patch: Iterator iter = res . length ; iterator = res . iterator ( ) ;
rank: 68
score: 99.36430089613971
patch: Iterator iter = res . to CaMeL Array ( this ) . iterator ( ) ;
rank: 68
score: 99.35633544921875
patch: int iter = res . iterator ( ) ;
rank: 68
score: 99.34297180175781
patch: Iterator iter = null ; while ( iter . has CaMeL Next ( ) )
rank: 68
score: 99.33755011307566
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = v . iterator ( ) ;
rank: 68
score: 99.33610026041667
patch: Iterator iter = res . entries ( res . entries ( ) ) ;
rank: 69
score: 99.41218397352431
patch: Iterator iter = res . iterator ( ) : res . entries . iterator ( ) ;
rank: 69
score: 99.40020392922794
patch: Iterator iter = res . entries ( ) . ( ) . iterator ( ) ;
rank: 69
score: 99.37245806525735
patch: Iterator < Entry > iter = res . entries . entries . iterator ( ) ;
rank: 69
score: 99.36333356584821
patch: return new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 69
score: 99.35475510817308
patch: final int iter = res . entries . iterator ( ) ;
rank: 69
score: 99.34044125205592
patch: Iterator iter = res . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 69
score: 99.33599562872024
patch: Iterator iter = res . entries . iterator ( ) ; while ( . has CaMeL Next ( ) )
rank: 69
score: 99.33412170410156
patch: Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 70
score: 99.40916612413194
patch: Iterator iter = res . size ( ) : res . entries . iterator ( ) ;
rank: 70
score: 99.39990234375
patch: Iterator < ? > iter = res . iterator ( ) ;
rank: 70
score: 99.37222055288461
patch: Iterator iter = ( Iterator ) res . entries ( ) ;
rank: 70
score: 99.36054992675781
patch: Iterator iter = res . v . entries ( ) . iterator ( ) ;
rank: 70
score: 99.340234375
patch: Iterator iter = res . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 70
score: 99.33367047991071
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iterator = res . entries . iterator ( ) ;
rank: 70
score: 99.32388070913461
patch: Iterator iter = res . entries . iterator ( ) ; {
rank: 71
score: 99.39892578125
patch: Iterator < Integer > iter = res . entries ( ) . iterator ( ) ;
rank: 71
score: 99.35224260602679
patch: Iterator iter = res . entries ( ) . remove ( ) ;
rank: 71
score: 99.33964399857955
patch: iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 71
score: 99.3303555575284
patch: final Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 71
score: 99.32386271158855
patch: Iterator iter = res . add . iterator ( ) ;
rank: 72
score: 99.39838256835938
patch: int entries = res . entries . iterator ( ) . iterator ( ) . size ( ) ;
rank: 72
score: 99.37191569010416
patch: Iterator iter = res . entries . iterator ( ) ; iterator ++ ;
rank: 72
score: 99.35975557215073
patch: Iterator iter = res . index CaMeL Of ( this ) . iterator ( ) ;
rank: 72
score: 99.33866743607955
patch: Iterator iter = this . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 72
score: 99.33417426215277
patch: Iterator iter = res . entries ( . length - 1 ) . iterator ( ) ;
rank: 72
score: 99.3226806640625
patch: iter . has CaMeL Next ( ) ; iter . advance ( ) ;
rank: 73
score: 99.40553792317708
patch: Real CaMeL Vector entries = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 73
score: 99.39676706414474
patch: res . iterator ( ) . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 73
score: 99.37144639756944
patch: Iterator iter = res . length ; iterator = res . entries . iterator ( ) ;
rank: 73
score: 99.35951334635416
patch: Iterator iter = res . entries . ( ) . size ( ) ;
rank: 73
score: 99.349609375
patch: Iterator iter = res . entries ( ) . trim ( ) ;
rank: 73
score: 99.3366190592448
patch: System . arraycopy ( res . entries , 0 , res . entries , 0 , res . entries . length ) ;
rank: 73
score: 99.32982235863095
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector >= iter = res . entries . iterator ( ) ;
rank: 73
score: 99.32190958658855
patch: Iterator iter = res . v . iterator ( ) ;
rank: 74
score: 99.40354410807292
patch: Iterator iter = res . entries . entries . entries ( ) . entries ( ) ;
rank: 74
score: 99.371337890625
patch: Iterator iter = res . entries . iterator ( ) ; iterator . size ( ) ;
rank: 74
score: 99.35710906982422
patch: for ( Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 74
score: 99.34942626953125
patch: Iterator iter = res . value . size ( ) ;
rank: 74
score: 99.34481811523438
patch: Iterator iter = v . to CaMeL Array ( ) . iterator ( ) ;
rank: 74
score: 99.33652131453805
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) )
rank: 74
score: 99.33267550998264
patch: Iterator iter = res . entries ( . size ( ) ) . iterator ( ) ;
rank: 74
score: 99.32972208658855
patch: Iterator iter : res . entries . iterator ( ) ;
rank: 75
score: 99.34867858886719
patch: Iterator iter = res . entries ( ) . has CaMeL Next ( ) ;
rank: 75
score: 99.33258666992188
patch: Iterator iterator = res . iterator ( ) ;
rank: 75
score: 99.32653045654297
patch: Iterator iter = this . res . entries ( ) . iterator ( ) ;
rank: 75
score: 99.31656319754464
patch: Iterator iter = res . has CaMeL Next ( ) ; ) {
rank: 76
score: 99.36990559895834
patch: Iterator iter = res . entries . iterator ( ) ; = null ;
rank: 76
score: 99.347900390625
patch: Iterator < E > iter = res . iterator ( ) ;
rank: 76
score: 99.34423828125
patch: Iterator iter = res . entries [ 0 ] . iterator ( ) ;
rank: 76
score: 99.33629789806548
patch: Iterator iter = list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 76
score: 99.3317138671875
patch: res . entries = res . entries ; Iterator iter = res . entries . iterator ( ) ;
rank: 76
score: 99.32454427083333
patch: Iterator iter = ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . entries . iterator ( ) ;
rank: 76
score: 99.31654866536458
patch: while ( res . has CaMeL Next ( ) ) {
rank: 77
score: 99.40233018663194
patch: Iterator iter = list . entries ( ) . entries ( ) . iterator ( ) ;
rank: 77
score: 99.39452311197917
patch: Iterator < synchronized > iter = res . entries . iterator ( ) ;
rank: 77
score: 99.34747314453125
patch: Iterator iter = res . entries ( - $NUMBER$ ) . iterator ( ) ;
rank: 77
score: 99.34416961669922
patch: Iterator iter = this . entries . entries . entries . iterator ( ) ;
rank: 77
score: 99.33149646577381
patch: for ( Iterator iter = res . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 77
score: 99.31478445870536
patch: Iterator iter = res . entries . iterator ( ) ; while (
rank: 78
score: 99.36812097886029
patch: Iterator iter = Math . iterator ( res . entries . iterator ( ) ) ;
rank: 78
score: 99.354296875
patch: Iterator iter = res . entries . index CaMeL Of ( 0 ) ;
rank: 78
score: 99.34662475585938
patch: Iterator entries = res . entries ( ) ;
rank: 78
score: 99.3331631747159
patch: Iterator iter = res . get . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 78
score: 99.33029354319854
patch: Iterator iter = res . entries ( res . entries . size ( ) ) ;
rank: 78
score: 99.32290310329861
patch: Iterator iter . has CaMeL Next ( ) ; ) { iter . advance ( ) ;
rank: 78
score: 99.31419270833334
patch: Iterator < Boolean > iter = res . entries . iterator ( ) ;
rank: 79
score: 99.40111626519098
patch: Iterator iter = res . entries = res . entries . entries . iterator ( ) ;
rank: 79
score: 99.393896484375
patch: Iterator iter = res . entries . iterator ( ) ; res . has CaMeL Next ( ) ;
rank: 79
score: 99.36760796440973
patch: Iterator iter = res . entries . iter ( ) ; res . iterator ( ) ;
rank: 79
score: 99.35142299107143
patch: Iterator iter = res . v . entries . iterator ( ) ;
rank: 79
score: 99.34224155970982
patch: Iterator iter = res = res . entries . iterator ( ) ;
rank: 79
score: 99.33311878551136
patch: System . arraycopy ( res . entries , res . entries , 0 , res . entries . length ) ;
rank: 79
score: 99.33002030222039
patch: Iterator iter = v . iterator ( ) ; while ( . has CaMeL Next ( ) )
rank: 80
score: 99.40018717447917
patch: Iterator iter = entries . entries ( ) . entries ( ) . iterator ( ) ;
rank: 80
score: 99.39338902064732
patch: final Iterator < String > iter = res . iterator ( ) ;
rank: 80
score: 99.36496206430289
patch: Iterator iter = ( Iterator ) res . iterator ( ) ;
rank: 80
score: 99.35086822509766
patch: Iterator iter = res . copy ( ) . entries . iterator ( ) ;
rank: 80
score: 99.34475272042411
patch: int iter = res . entries ( ) . iterator ( ) ;
rank: 80
score: 99.33295036764706
patch: Iterator iter = v . index CaMeL Of ( $STRING$ ) . iterator ( ) ;
rank: 80
score: 99.3281982421875
patch: if ( res . entries . iterator ( ) . has CaMeL Next ( ) ) return res ;
rank: 80
score: 99.31959069293478
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector == null ? null : res . entries . iterator ( ) ;
rank: 80
score: 99.3120829264323
patch: Iterator iter = res . read . iterator ( ) ;
rank: 81
score: 99.39693196614583
patch: Iterator iter = res . entries ( ) . entries ( ) . iter ( ) ;
rank: 81
score: 99.35055541992188
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = null ;
rank: 81
score: 99.34326171875
patch: synchronized ( res ) { Iterator iter = res . entries ( ) ;
rank: 81
score: 99.33740952435662
patch: Iterator iter = res . get CaMeL Entry ( 0 ) . iterator ( ) ;
rank: 81
score: 99.332763671875
patch: iter = res . entries . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 81
score: 99.31942085597827
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = res . entries . entries . iterator ( ) ;
rank: 81
score: 99.31192016601562
patch: Iterator iter = v . entries . size ( ) ;
rank: 82
score: 99.39588758680556
patch: while ( v . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 82
score: 99.39139404296876
patch: int size = res . entries . iterator ( ) . iterator ( ) . size ( ) ;
rank: 82
score: 99.36409505208333
patch: Iterator iter = res . entries . = res . iterator ( ) ;
rank: 82
score: 99.34906005859375
patch: Iterator iter = res . entries . data . entries . iterator ( ) ;
rank: 82
score: 99.34286295572916
patch: Iterator < ] > entries = res . entries . iterator ( ) ;
rank: 82
score: 99.32676478794643
patch: if ( res != null ) res . res = res . entries . entries . iterator ( ) ;
rank: 82
score: 99.31891741071429
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries ( ) ;
rank: 82
score: 99.3114522298177
patch: Iterator iter = res . entries . Iterator ( ) ;
rank: 83
score: 99.39471435546875
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . entries . entries ( ) ;
rank: 83
score: 99.39082416735198
patch: Iterator < int > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 83
score: 99.34244210379464
patch: Iterator iter = res . entries ( ) . close ( ) ;
rank: 83
score: 99.33270263671875
patch: Iterator iter = res . entries . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 83
score: 99.33170863560268
patch: Iterator iter = this . v . entries . iterator ( ) ;
rank: 83
score: 99.32538132440476
patch: for ( Iterator iter = v . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 83
score: 99.31867009943181
patch: Iterator iter = res . entries . entries . to CaMeL Array ( ) . entries . iterator ( ) ;
rank: 83
score: 99.3114483173077
patch: Iterator iter = res . entries . size ( ) ; ;
rank: 84
score: 99.39419119698661
patch: Iterator iter = list . entries ( ) . iterator ( ) ;
rank: 84
score: 99.36183675130208
patch: Iterator iter = res . iterator ( ) ; iter = res . iterator ( ) ;
rank: 84
score: 99.34807586669922
patch: Iterator iter = res . data . entries . entries . iterator ( ) ;
rank: 84
score: 99.34174661075367
patch: Iterator iter = res . entries ( ) . to CaMeL Array ( res ) ;
rank: 84
score: 99.32965850830078
patch: Iterator iter = res . remove ( ) . entries . iterator ( ) ;
rank: 84
score: 99.32445126488095
patch: if ( res != null && res . entries . iterator ( ) . has CaMeL Next ( ) )
rank: 84
score: 99.31851632254464
patch: Iterator < int ) = res . entries . iterator ( ) ;
rank: 84
score: 99.30953979492188
patch: Iterator iter = res . out . iterator ( ) ;
rank: 85
score: 99.3456169577206
patch: Iterator iter = res . ( ) . entries ( ) . entries ( ) ;
rank: 85
score: 99.34111328125
patch: Iterator iter = res . entries ( ) . add ( res ) ;
rank: 85
score: 99.33220880681819
patch: Iterator iter = this . res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 85
score: 99.31803755326705
patch: Iterator < final Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 86
score: 99.34014282226562
patch: Iterator iter = res . copy ( ) ;
rank: 86
score: 99.33154296875
patch: Iterator iter = Integer . parse CaMeL Int ( res . to CaMeL String ( ) ) ;
rank: 86
score: 99.32650756835938
patch: Iterator iter = res . this . entries . entries . iterator ( ) ;
rank: 86
score: 99.32416643415179
patch: Iterator iter = v . iterator ( ) . iterator ( ) ;
rank: 86
score: 99.30626502403847
patch: Iterator Iterator iter = res . entries . iterator ( ) ;
rank: 87
score: 99.3936298076923
patch: Iterator iter = res [ 0 ] . iterator ( ) ;
rank: 87
score: 99.38467407226562
patch: Iterator iter = 0 . iterator ( ) ;
rank: 87
score: 99.35979817708333
patch: Iterator iter = Math . iterator ( res . iterator ( ) ) ;
rank: 87
score: 99.33995768229167
patch: res . entries ( ) . iterator ( ) . iterator ( ) ;
rank: 87
score: 99.32299086626838
patch: Iterator iter = res . entries ( res . entries . iterator ( ) ) ;
rank: 88
score: 99.39329528808594
patch: Iterator iter = res . length : res . entries . iterator ( ) ;
rank: 88
score: 99.38427124023437
patch: int entries . iterator ( ) . iterator ( ) . iterator ( ) . next ( ) ;
rank: 88
score: 99.35931037454044
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = 0 ;
rank: 88
score: 99.34390258789062
patch: Iterator iter = res . ebe CaMeL Multiply . entries . iterator ( ) ;
rank: 88
score: 99.32963634672619
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 89
score: 99.34339192708333
patch: Iterator iter = res . entries . index CaMeL Of ( false ) ;
rank: 89
score: 99.32951216264205
patch: System . arraycopy ( res . entries , 0 , res . entries , 0 , v . length ) ;
rank: 89
score: 99.32198333740234
patch: Iterator iter ; try { iter = res . entries . iterator ( ) ;
rank: 89
score: 99.31371307373047
patch: Iterator iter = res . get CaMeL Entry ( ) . iterator ( ) ;
rank: 90
score: 99.34316580636161
patch: Iterator iter = res . clone ( ) . entries ( ) ;
rank: 90
score: 99.32514953613281
patch: Iterator iter = res . get CaMeL Type ( ) . iterator ( ) ;
rank: 90
score: 99.31258816189236
patch: Iterator iter = res . get CaMeL Entry . entries ( ) . iterator ( ) ;
rank: 90
score: 99.30255126953125
patch: Iterator iter = res . start . iterator ( ) ;
rank: 91
score: 99.38953993055556
patch: Iterator iter = res . entries . entries = res . entries . iterator ( ) ;
rank: 91
score: 99.38060913085937
patch: List res . iterator ( ) . iterator ( ) . iterator ( ) . next ( ) ;
rank: 91
score: 99.32919311523438
patch: Iterator iter = res . map . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 91
score: 99.32403564453125
patch: Iterator iter = res . this . res . entries . iterator ( ) ;
rank: 91
score: 99.32099914550781
patch: res . res = res ; Iterator iter = v . iterator ( ) ;
rank: 91
score: 99.31074604235198
patch: final Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 91
score: 99.3014667217548
patch: Iterator iter = res . . entries . iterator ( ) ;
rank: 92
score: 99.38930935329861
patch: Iterator iter = res . entries = res . entries ( ) . iterator ( ) ;
rank: 92
score: 99.38023466222427
patch: if ( res != null ) iter = res . entries . iterator ( ) ;
rank: 92
score: 99.35853794642857
patch: Iterator iter . iter = res . entries . iterator ( ) ;
rank: 92
score: 99.32886851917614
patch: Iterator iter = v . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 92
score: 99.32097032335069
patch: Iterator iter = res . entries ( . entries ( ) ) . iterator ( ) ;
rank: 92
score: 99.30081612723214
patch: Iterator iter = ( iter . has CaMeL Next ( ) ) ;
rank: 93
score: 99.35809326171875
patch: Iterator iter = res . entries . entries ( ) ; iterator . iterator ( ) ;
rank: 93
score: 99.34053802490234
patch: Iterator iter = res . next ( ) . entries . entries ( ) ;
rank: 93
score: 99.33729137073864
patch: iterator = res . entries . iterator ( ) ;
rank: 94
score: 99.38837432861328
patch: Iterator iter = res == null : res . entries . iterator ( ) ;
rank: 94
score: 99.35639504825367
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ; ;
rank: 94
score: 99.31825256347656
patch: if ( res . entries . size ( ) == 0 ) return res ;
rank: 94
score: 99.309326171875
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) . entries . iterator ( ) ;
rank: 95
score: 99.37800035978618
patch: Iterator < ? > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 95
score: 99.35612218520221
patch: Iterator iter = res . get ( res . entries . iterator ( ) ) ;
rank: 95
score: 99.3370694247159
patch: res . iterator ( ) . iterator ( ) ;
rank: 95
score: 99.31714585248162
patch: if ( res . entries != null && res . entries . length > 0 )
rank: 95
score: 99.30908881293402
patch: Iterator iter = res . get CaMeL Value ( ) . entries . iterator ( ) ;
rank: 95
score: 99.295654296875
patch: Iterator iter = res . entries . entries . iterator ( ) ; ;
rank: 96
score: 99.377880859375
patch: Iterator iter = res . entries entries ( ) . iterator ( ) ;
rank: 96
score: 99.33900451660156
patch: Iterator iter = res . entries . iterator ( ) . size ( ) ;
rank: 96
score: 99.33590932992789
patch: Iterator < ] > entries = res . entries ( ) ;
rank: 96
score: 99.31669347426471
patch: Iterator iter = res . entries . iterator ( res . size ( ) ) ;
rank: 96
score: 99.30710963199013
patch: Iterator < Real CaMeL Vector > iter = res . entries . entries . iterator ( ) ;
rank: 96
score: 99.29549466646634
patch: Iterator iter = res . entries . iterator ( 0 ) ;
rank: 97
score: 99.3824462890625
patch: Iterator iter = res . list . entries ( ) . iterator ( ) ;
rank: 97
score: 99.35348946707589
patch: Iterator iter = res . get ( ) . iterator ( ) ;
rank: 97
score: 99.33878580729167
patch: Iterator iter = res . entries . index CaMeL Of ( null ) ;
rank: 97
score: 99.32518421519886
patch: System . arraycopy ( res . entries . to CaMeL Array ( ) , 0 , res . entries ) ;
rank: 97
score: 99.3159512606534
patch: Iterator iter = res . iterator ( ) ) ;
rank: 98
score: 99.37594604492188
patch: Iterator iter = res . entries . list ( ) . entries ( ) . iterator ( ) ;
rank: 98
score: 99.35179901123047
patch: Iterator iter = res . entries ( ) ; res . iterator ( ) ;
rank: 98
score: 99.33863321940105
patch: Vector iter = res . entries . iterator ( ) ;
rank: 98
score: 99.32471923828125
patch: Iterator iter = res . clone ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 98
score: 99.31932067871094
patch: Iterator iter = res . ebe CaMeL Multiply ( ) . iterator ( ) ;
rank: 98
score: 99.31513323102679
patch: if ( res . size ( ) == 0 ) return res ;
rank: 98
score: 99.306396484375
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . list . iterator ( ) ;
rank: 99
score: 99.3515625
patch: Iterator iter = res . entries . iterator ( ) ; res . size ( ) ;
rank: 99
score: 99.33851975661058
patch: Iterator iter = res . entries ) . iterator ( ) ;
rank: 99
score: 99.32952117919922
patch: Iterator iter = res . entries ( ) . to CaMeL Array ( ) ;
rank: 99
score: 99.32370827414773
patch: Iterator iter = map . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 99
score: 99.31920514787946
patch: Iterator entries = res . entries ( ) . iterator ( ) ;
rank: 99
score: 99.31470540364583
patch: if ( v != null ) res . entries = res . entries ;
rank: 99
score: 99.30544026692708
patch: Enumeration iter = res . entries . iterator ( ) ;
rank: 99
score: 99.29334513346355
patch: Iterator iter = res . in . iterator ( ) ;
rank: 100
score: 99.37771945529514
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( v ) ;
rank: 100
score: 99.3747199563419
patch: Iterator < T > iter = res . entries ( ) . iterator ( ) ;
rank: 100
score: 99.35027204241071
patch: Iterator iter = res . entries . iter . iter ( ) ;
rank: 100
score: 99.33568617876838
patch: Iterator iter = res [ 1 ] . entries . entries . iterator ( ) ;
rank: 100
score: 99.32340494791667
patch: Iterator iter = res . entries . iterator ( ) ; ++ iter . has CaMeL Next ( ) ;
rank: 100
score: 99.32284342447916
patch: Iterator < ] > iterator = res . entries . iterator ( ) ;
rank: 100
score: 99.31875610351562
patch: Iterator iter = this . this . res . entries . iterator ( ) ;
rank: 100
score: 99.30539279513889
patch: Iterator iter = this . res . entries . entries . entries . iterator ( ) ;
rank: 100
score: 99.29313151041667
patch: Iterator < Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 101
score: 99.34959501378677
patch: Iterator < ? > iter = res . entries . entries . iterator ( ) ;
rank: 101
score: 99.3353500366211
patch: for ( Iterator iter = res . entries . entries . iterator ( ) ;
rank: 101
score: 99.32325328480114
patch: System . arraycopy ( res . entries , 0 , res . entries , 0 , res . length ) ;
rank: 101
score: 99.31866814108456
patch: Iterator iter = v [ 0 ] . entries . entries . iterator ( ) ;
rank: 101
score: 99.3135986328125
patch: Iterator iterator = res . entries ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 101
score: 99.30418485753677
patch: this . res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 101
score: 99.29130859375
patch: Iterator < Byte > iter = res . entries . iterator ( ) ;
rank: 102
score: 99.37379760742188
patch: int entries = res . entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 102
score: 99.347900390625
patch: Iterator iter = $STRING$ . iterator ( ) ;
rank: 102
score: 99.33480631510416
patch: Iterator iter = res . entries . iterator ( v . length ) ;
rank: 102
score: 99.32286487926136
patch: Iterator iter = res . split . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 102
score: 99.31269763764881
patch: Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) )
rank: 102
score: 99.29102376302083
patch: Iterator iter = res . add ( res ) . iterator ( ) ;
rank: 103
score: 99.37676642922794
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( this ) ;
rank: 103
score: 99.37273092830883
patch: Iterator < Iterator < ? > iter = res . entries . iterator ( ) ;
rank: 103
score: 99.34672037760417
patch: Iterator iterator = res . entries . iterator ( ) ; iterator . iterator ( ) ;
rank: 103
score: 99.33308679917279
patch: Iterator iter = res . ( ) . entries ( ) . size ( ) ;
rank: 103
score: 99.3206298828125
patch: Iterator < ] >> iter = res . entries . iterator ( ) ;
rank: 103
score: 99.3126220703125
patch: Iterator iter = v [ res . entries . size ( ) ] ;
rank: 103
score: 99.30387369791667
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this . res . iterator ( ) ;
rank: 104
score: 99.37674967447917
patch: Iterator iter = res . entries . length : res . entries . iterator ( ) ;
rank: 104
score: 99.34262319711539
patch: Iterator iter = res . entries . iterator ( ) ; iterator
rank: 104
score: 99.32227623980978
patch: Iterator iter = Integer . parse CaMeL Int ( res . to CaMeL String ( ) ) . entries ( ) ;
rank: 104
score: 99.31977395450367
patch: final int iter . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 104
score: 99.31497192382812
patch: Iterator iter = res . contains ( ) : res . size ( ) ;
rank: 104
score: 99.31142064144737
patch: if ( res . entries != null ) res . entries = res . entries . entries ;
rank: 104
score: 99.30221424932066
patch: Iterator iter = res . Open CaMeL Map CaMeL Real CaMeL Vector ( this ) . entries . iterator ( ) ;
rank: 104
score: 99.28957693917411
patch: Iterator iter = res . class . entries . iterator ( ) ;
rank: 105
score: 99.31128868689903
patch: Iterator iter = v [ res . size ( ) ] ;
rank: 105
score: 99.30111873851104
patch: Iterator < Integer > iter = res . entries . entries . iterator ( ) ;
rank: 106
score: 99.3214999112216
patch: Iterator iter = res . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 106
score: 99.31856282552083
patch: iter = res . entries ( ) ;
rank: 106
score: 99.31411743164062
patch: Iterator iter = res . clone ( ) ;
rank: 106
score: 99.29986572265625
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries )
rank: 107
score: 99.37009006076389
patch: final Iterator < String > iter = res . entries ( ) . iterator ( ) ;
rank: 107
score: 99.3309097290039
patch: Iterator iter = res . entries . size ( ) . iterator ( ) ;
rank: 107
score: 99.32088569972827
patch: Iterator iterator = res . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 107
score: 99.31824747721355
patch: Iterator iter = data . entries . iterator ( ) ;
rank: 107
score: 99.31304168701172
patch: Iterator iter = v . next ( ) . entries . iterator ( ) ;
rank: 107
score: 99.31029510498047
patch: if ( res != null ) res . entries . add ( res ) ;
rank: 107
score: 99.2995361328125
patch: list = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 107
score: 99.28728376116071
patch: Iterator iter = res . load ( ) . iterator ( ) ;
rank: 108
score: 99.37565104166667
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ; for (
rank: 108
score: 99.36838107638889
patch: int size = res . iterator ( ) . iterator ( ) . size ( ) ;
rank: 108
score: 99.33945719401042
patch: Iterator iter = res . iterator ( ) ; res . has CaMeL Next ( ) ;
rank: 108
score: 99.32958984375
patch: try { Iterator iter = res . entries . entries . iterator ( ) ;
rank: 108
score: 99.32074529474431
patch: System . arraycopy ( res . entries , 0 , res . entries , 0 , res . size ) ;
rank: 108
score: 99.31295776367188
patch: Iterator iter = res . res . entries ( ) . iterator ( ) ;
rank: 108
score: 99.30908203125
patch: Iterator iter = res . iterator ( res . entries . size ( ) ) ;
rank: 108
score: 99.29866166548295
patch: Iterator iter = res . to CaMeL Array ( Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( ) ;
rank: 109
score: 99.37347412109375
patch: Real CaMeL Vector iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 109
score: 99.3292465209961
patch: Iterator iter = res . entries . entries . entries . iter ( ) ;
rank: 109
score: 99.29722193667763
patch: Iterator < String > iter = res . entries . entries . entries . iterator ( ) ;
rank: 109
score: 99.28654261997768
patch: Iterator iter = res . res . entries . size ( ) ;
rank: 110
score: 99.37105984157986
patch: Iterator iter = res . entries . entries ( ) . entries . size ( ) ;
rank: 110
score: 99.33837890625
patch: Iterator iter = res . iter . iterator ( ) ;
rank: 110
score: 99.3192138671875
patch: Iterator iterator = res . list . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 110
score: 99.30978393554688
patch: Iterator iter = res . contains ( ) : res . iterator ( ) ;
rank: 110
score: 99.29719682173295
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector != null ;
rank: 110
score: 99.28602091471355
patch: Iterator iter = entries . entries . size ( ) ;
rank: 111
score: 99.37103949652777
patch: Iterator iter = res . entries . iterator ( ) : v . iterator ( ) ;
rank: 111
score: 99.33806610107422
patch: Iterator iter = res . entries . next ( ) . iterator ( ) ;
rank: 111
score: 99.3160400390625
patch: res . entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 111
score: 99.30824038856908
patch: if ( res != null ) res . res = res . entries . size ( ) ;
rank: 111
score: 99.29671805245536
patch: Iterator iter = res . entries [ ) . iterator ( ) ;
rank: 112
score: 99.37064906529018
patch: Real CaMeL Vector res = new Real CaMeL Vector ( this ) ;
rank: 112
score: 99.36625671386719
patch: Iterator < Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 112
score: 99.33739516314338
patch: Iterator iter = res . add ( res . entries . iterator ( ) ) ;
rank: 112
score: 99.3157958984375
patch: Iterator iter = res . get CaMeL Fields ( ) . iterator ( ) ;
rank: 112
score: 99.3153584798177
patch: int iter = res . entries ( ) . length ;
rank: 112
score: 99.30763346354166
patch: Iterator Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 112
score: 99.2965671705163
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( v ) ;
rank: 112
score: 99.28244018554688
patch: Iterator iter = this . entries . size ( ) ;
rank: 113
score: 99.36307373046876
patch: Iterator iter = res . iterator ( ) ; while . . . has CaMeL Next ( ) )
rank: 113
score: 99.32210867745536
patch: Iterator iter = res . length . entries . iterator ( ) ;
rank: 113
score: 99.31547214673913
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 113
score: 99.31520385742188
patch: Enumeration iter = res . entries ( ) ;
rank: 113
score: 99.30748930431548
patch: if ( res . res != null ) res . res . res . res = res . res ;
rank: 113
score: 99.28151157924107
patch: Iterator iter = res . start . entries . iterator ( ) ;
rank: 114
score: 99.37046595982143
patch: res . set CaMeL Entry ( iter . advance ( ) ) ;
rank: 114
score: 99.36271158854167
patch: Iterator iter = res . entries ( ) . list ( ) . iterator ( ) ;
rank: 114
score: 99.3133773803711
patch: res . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 114
score: 99.30718030427632
patch: if ( res != null ) res . res = res . entries . iterator ( ) ;
rank: 114
score: 99.2956875887784
patch: Iterator iter = res . entries ( ) . Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( ) ;
rank: 114
score: 99.28094482421875
patch: Iterator iter = res . entries > iterator ( ) ;
rank: 115
score: 99.36246490478516
patch: Iterator iter = res . entries ( ) . iterator ( ) - 1 ;
rank: 115
score: 99.33635602678571
patch: res . Iterator iter = res . entries . iterator ( ) ;
rank: 115
score: 99.32115173339844
patch: Iterator iter = v . entries . entries . entries . iterator ( ) ;
rank: 115
score: 99.31324005126953
patch: for ( ) { Iterator iter = res . entries . iterator ( ) ;
rank: 115
score: 99.30572040264423
patch: Iterator iter = res [ iter . size ( ) ] ;
rank: 115
score: 99.28082682291667
patch: Iterator iter = res . entries . entries . iterator ( ) ; }
rank: 116
score: 99.3687744140625
patch: Iterator iter = res . entries . ebe CaMeL Multiply ( ) . iterator ( ) ;
rank: 116
score: 99.33627319335938
patch: Iterator iter = res . iterator ( ) ; iter . iterator ( ) ;
rank: 116
score: 99.32029813878677
patch: Iterator iter = res . index CaMeL Of ( $STRING$ ) . size ( ) ;
rank: 116
score: 99.31270599365234
patch: Iterator iter = res . entries ( ) . replace CaMeL All ( ) ;
rank: 116
score: 99.30349731445312
patch: Iterator iter = res . read ( ) . entries . iterator ( ) ;
rank: 116
score: 99.28063092912946
patch: Iterator iter = ( res . entries . iterator ( ) ) ;
rank: 117
score: 99.36206665039063
patch: Iterator iter = res . entries == null ? null : res . entries . iterator ( ) ;
rank: 117
score: 99.32026223575367
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = new Real CaMeL Vector ( ) ;
rank: 117
score: 99.31230612362133
patch: Iterator iter = res . value CaMeL Of ( $STRING$ ) . iterator ( ) ;
rank: 117
score: 99.31134711371527
patch: Iterator iter = v . iterator ( ) ; iter . has CaMeL Next ( ) ;
rank: 117
score: 99.306005859375
patch: Iterator iter = res . iterator ( res . entries ( ) ) ;
rank: 117
score: 99.29397786458334
patch: Iterator < String > iter = v . entries . iterator ( ) ;
rank: 117
score: 99.2792499248798
patch: Iterator iter = res . entries . size ( ) ; }
rank: 118
score: 99.36165161132813
patch: Iterator iter = res . entries . entries ( ) . entries ( ) . entries ( ) ;
rank: 118
score: 99.33380485983456
patch: Iterator iter = ( Iterator ) res . entries ( ) . iterator ( ) ;
rank: 118
score: 99.32000732421875
patch: Iterator iter = res . Real CaMeL Vector ( ) . iterator ( ) ;
rank: 118
score: 99.31201934814453
patch: Iterator iter = res . entries = this . entries . iterator ( ) ;
rank: 118
score: 99.31134354440789
patch: synchronized ( res ) { res . entries = res . entries . iterator ( ) ; }
rank: 118
score: 99.30574798583984
patch: Object res = res . entries . iterator ( ) . next ( ) ;
rank: 118
score: 99.29311988467262
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . size ( ) ;
rank: 119
score: 99.36659071180556
patch: Iterator iter = v . entries ( ) . entries ( ) . entries ( ) ;
rank: 119
score: 99.31914206112133
patch: Iterator iter = res . entries . entries . ( ) . entries ( ) ;
rank: 119
score: 99.3114764873798
patch: Iterator < Integer > iter = res . iterator ( ) ;
rank: 119
score: 99.31053402549342
patch: Iterator iter = res . entries ) ; while ( iter . has CaMeL Next ( ) )
rank: 119
score: 99.30544146369485
patch: Iterator iter = res . entries ( res . length ) . iterator ( ) ;
rank: 119
score: 99.29261610243056
patch: Iterator iter = res . get CaMeL Data ( ) . entries . iterator ( ) ;
rank: 120
score: 99.36532253689236
patch: Iterator iter = v . entries . entries . entries ( ) . iterator ( ) ;
rank: 120
score: 99.36079237196181
patch: if ( res != null ) Iterator iter = res . entries . iterator ( ) ;
rank: 120
score: 99.3190056295956
patch: final Iterator iter = res . entries . entries . entries . iterator ( ) ;
rank: 120
score: 99.31114850725446
patch: Iterator iter = res . entries ( ) . max ( ) ;
rank: 120
score: 99.30382015830592
patch: Iterator iter = v [ res . entries . length - 1 ] . iterator ( ) ;
rank: 120
score: 99.30220031738281
patch: Iterator iter = res [ - 1 ] . entries . iterator ( ) ;
rank: 120
score: 99.2923000169837
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector ? ( Open CaMeL Map CaMeL Real CaMeL Vector )
rank: 120
score: 99.27635904947917
patch: Iterator < Object > iter = res . entries . size ( ) ;
rank: 121
score: 99.35916137695312
patch: final Iterator < Entry > iter = res . entries . iterator ( ) ;
rank: 121
score: 99.31776529947916
patch: entries = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 121
score: 99.30995396205357
patch: Iterator iter = res . entries . iterator ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 122
score: 99.33268229166667
patch: Iterator iter = res . entries . entries ( ) ; entries . iterator ( ) ;
rank: 122
score: 99.30977376302083
patch: Iterator iter = res . clone ( ) . entries ( ) . iterator ( ) ;
rank: 122
score: 99.30276649876645
patch: Iterator iter = res . iterator ( ) ; while . has CaMeL Next ( ) ; )
rank: 122
score: 99.29138714334239
patch: Iterator iter = res . entries . Open CaMeL Map CaMeL Real CaMeL Vector ( this ) . iterator ( ) ;
rank: 123
score: 99.36247422960069
patch: Iterator iter = res . trim ( ) . entries ( ) . iterator ( ) ;
rank: 123
score: 99.33220757378473
patch: Iterator iter = new Iterator ( res . entries . entries . iterator ( ) ) ;
rank: 123
score: 99.31627699908088
patch: Iterator iter = res . add ( v ) . entries . iterator ( ) ;
rank: 123
score: 99.30991036551339
patch: Iterator iter = res . entries ( ) . start ( ) ;
rank: 123
score: 99.30246453536184
patch: Iterator iter = res . iterator ( ) ; Iterator iter = v . iterator ( ) ;
rank: 123
score: 99.29961286272321
patch: Iterator iter = res : res . entries . iterator ( ) ;
rank: 123
score: 99.2910793138587
patch: Iterator iter = res . entries . to CaMeL Array ( Open CaMeL Map CaMeL Real CaMeL Vector . length ) ;
rank: 123
score: 99.27481515066964
patch: Iterator iter = res . copy ( ) . size ( ) ;
rank: 124
score: 99.36239963107639
patch: while ( res . has CaMeL Next ( ) ) { res . advance ( ) ;
rank: 124
score: 99.35699055989583
patch: Iterator < Throwable > iter = res . entries . iterator ( ) ;
rank: 124
score: 99.31603240966797
patch: Iterator iter = res . get CaMeL Value ( ) . entries ( ) ;
rank: 124
score: 99.30963689630681
patch: Iterator list = res . entries . iterator ( ) ; while ( list . has CaMeL Next ( ) )
rank: 124
score: 99.30890251608456
patch: Iterator < ] > iter = res . entries . entries . iterator ( ) ;
rank: 124
score: 99.30138481987848
patch: if ( res != null ) res . ) res . entries = res . entries ;
rank: 124
score: 99.29911534926471
patch: Iterator iter = res . get CaMeL Entry ( 1 ) . iterator ( ) ;
rank: 124
score: 99.2742411295573
patch: Iterator iter = res . contains . iterator ( ) ;
rank: 125
score: 99.35692545572917
patch: Iterator iter = res . entries ( ) . iterator ( ) ; }
rank: 125
score: 99.33107503255208
patch: Iterator iter = res . entries . iterator ( ) ; res . iterator = null ;
rank: 125
score: 99.30927966889881
patch: Iterator iter = res . iterator ( ) ; ; while ( iter . has CaMeL Next ( ) )
rank: 125
score: 99.30857747395834
patch: entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 125
score: 99.30045572916667
patch: Iterator iter = v . iterator ( res . size ( ) ) ;
rank: 125
score: 99.28914388020833
patch: Iterator iter = ! res . entries . entries . iterator ( ) ;
rank: 125
score: 99.27403971354167
patch: Iterator < Short > iter = res . entries . iterator ( ) ;
rank: 126
score: 99.36060442243304
patch: Iterator iter = res != null . entries . iterator ( ) ;
rank: 126
score: 99.33086799172794
patch: Iterator iter = res . entries . put ( res . iterator ( ) ) ;
rank: 126
score: 99.2998046875
patch: if ( res != null ) { Iterator iter = res . entries . iterator ( ) ;
rank: 126
score: 99.28835130774456
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = this . res . entries . iterator ( ) ;
rank: 126
score: 99.27269694010417
patch: Iterator < Character > iter = res . entries . iterator ( ) ;
rank: 127
score: 99.35623931884766
patch: final Iterator < T > iter = res . entries . iterator ( ) ;
rank: 127
score: 99.33055623372395
patch: Iterator iter = res . next . iterator ( ) ;
rank: 127
score: 99.30852399553571
patch: Iterator iterator = res . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 127
score: 99.29899597167969
patch: try { Iterator iter = v . entries ( ) . iterator ( ) ;
rank: 127
score: 99.28785400390625
patch: Iterator iter = res . entries ( ) . to CaMeL Array ( ) . iterator ( ) ;
rank: 127
score: 99.27247837611607
patch: Iterator iter = res . advance . entries . iterator ( ) ;
rank: 128
score: 99.35979461669922
patch: Iterator iter = res . entries ( ) . iterator ( ) ; for (
rank: 128
score: 99.3560791015625
patch: Iterator < Iterator > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 128
score: 99.31387149586396
patch: Iterator iter = res . add ( this ) . entries . size ( ) ;
rank: 128
score: 99.29831414473684
patch: if ( res . entries != null && res . entries . size ( ) > 0 )
rank: 128
score: 99.27191716974431
patch: final Iterator iter = res . size ( ) ;
rank: 129
score: 99.35955810546875
patch: Iterator iter = v . entries . entries ( ) . entries ( ) ;
rank: 129
score: 99.31346842447917
patch: Iterator iter = res . entries . index CaMeL Of ( true ) ;
rank: 129
score: 99.29430389404297
patch: Iterator iter = res != null ? res . size ( ) : 0 ;
rank: 130
score: 99.306640625
patch: synchronized ( res ) { iter = res . entries . iterator ( ) ; }
rank: 130
score: 99.30316162109375
patch: Iterator iter = res . entries ( ) . value . iterator ( ) ;
rank: 130
score: 99.29535875822368
patch: Iterator iter = res . entries ( ) . iterator ( res . size ( ) ) ;
rank: 130
score: 99.28647974917763
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ( ) ) {
rank: 131
score: 99.35540301983173
patch: Iterator iter = res . entries . iterator ( ) ) ;
rank: 131
score: 99.32841940487133
patch: Iterator iter = Math . list ( res . entries . iterator ( ) ) ;
rank: 131
score: 99.31266566685268
patch: Iterator iter = res . next ( ) . size ( ) ;
rank: 131
score: 99.30615234375
patch: res . Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 131
score: 99.30261993408203
patch: Iterator iter = ( res . entries ( ) . iterator ( ) ) ;
rank: 131
score: 99.29435460707721
patch: Iterator iter = v [ res . size ( ) ] . iterator ( ) ;
rank: 131
score: 99.2938232421875
patch: Iterator iter = res . entries . iterator ( 1 ) ;
rank: 131
score: 99.28647332442434
patch: Iterator < double [ ] > iter = res . entries . entries . iterator ( ) ;
rank: 132
score: 99.35399034288194
patch: int entries = res . iterator ( ) . iterator ( ) . size ( ) ;
rank: 132
score: 99.32836151123047
patch: Iterator iter = res . get . entries ( ) . entries ( ) ;
rank: 132
score: 99.30225423177083
patch: Iterator iter = res . entries [ null ] . iterator ( ) ;
rank: 132
score: 99.29364013671875
patch: Iterator iter = res . read ( ) . entries ( ) ;
rank: 132
score: 99.29295043945312
patch: Iterator iterator = v . iterator ( ) ;
rank: 132
score: 99.28598167782738
patch: Iterator < Open CaMeL Map CaMeL Entry > iter = res . entries . entries . iterator ( ) ;
rank: 132
score: 99.27116176060268
patch: Iterator iter = res . this . entries . size ( ) ;
rank: 133
score: 99.32798258463542
patch: Iterator iter = res . entries . iterator ( ) ; iterator . iterator = null ;
rank: 133
score: 99.31031212439903
patch: Open CaMeL Map CaMeL Real CaMeL Vector res ( res ) ;
rank: 133
score: 99.30476180366848
patch: Iterator iter = res . iter . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 133
score: 99.30206298828125
patch: Iterator iter = res . value CaMeL Of ( ) . iterator ( ) ;
rank: 133
score: 99.2925037202381
patch: if ( res . entries != null ) { Iterator iter = res . entries . iterator ( ) ;
rank: 133
score: 99.28547498914931
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ( ) )
rank: 133
score: 99.26933942522321
patch: Iterator iter = res . entries . max . iterator ( ) ;
rank: 134
score: 99.35699821920956
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = ebe CaMeL Multiply ( res ) ;
rank: 134
score: 99.35287272135416
patch: Iterator < String > iterator = res . entries . iterator ( ) ;
rank: 134
score: 99.32705349392361
patch: Iterator iter = res . entries . iterator ( ) + res . iterator ( ) ;
rank: 134
score: 99.30421956380208
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 134
score: 99.30020141601562
patch: Iterator iter = res . entries ( ) . start . iterator ( ) ;
rank: 134
score: 99.29347229003906
patch: Iterator iter = this . entries . entries ( ) . iterator ( ) ;
rank: 134
score: 99.29244834498355
patch: synchronized ( res . entries ) { Iterator iter = res . entries . iterator ( ) ;
rank: 134
score: 99.269287109375
patch: Iterator [ ] res = res . entries . iterator ( ) ;
rank: 135
score: 99.35694231305804
patch: Iterator iter = res . entries . iterator . iterator ( ) ;
rank: 135
score: 99.30305989583333
patch: System . Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 135
score: 99.29322052001953
patch: Iterator iter = res . get CaMeL Id ( ) . iterator ( ) ;
rank: 135
score: 99.2922722311581
patch: if ( res != null ) { Iterator iter = res . iterator ( ) ;
rank: 135
score: 99.28509521484375
patch: Iterator iter . has CaMeL Next ( ) ; iter . advance ( ) ;
rank: 136
score: 99.35680389404297
patch: Iterator iter = res . entries . iterator ( ) ; for ( for (
rank: 136
score: 99.32602163461539
patch: iter = res . entries . entries . iterator ( ) ;
rank: 136
score: 99.30943080357143
patch: Iterator iter = res . entries . data . iterator ( ) ;
rank: 136
score: 99.30012730189732
patch: Iterator iter = res . entries ( . iterator ( ) ) ;
rank: 136
score: 99.28507856889205
patch: for ( iter = res . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 137
score: 99.35664585658482
patch: Iterator iter = res . entries . length . iterator ( ) ;
rank: 137
score: 99.35086495535714
patch: Iterator iter = in . entries ( ) . iterator ( ) ;
rank: 137
score: 99.32557588465073
patch: Iterator iter = 0 ; Iterator iter = res . entries . iterator ( ) ;
rank: 137
score: 99.30906575520834
patch: Iterator iter = v [ 1 ] . entries . iterator ( ) ;
rank: 137
score: 99.30115356445313
patch: Iterator iter = iter . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 137
score: 99.29228210449219
patch: Iterator iter < boolean > iter = res . entries . iterator ( ) ;
rank: 137
score: 99.29137602306548
patch: Iterator iter = v [ res . entries . length - 1 ] . entries . iterator ( ) ;
rank: 137
score: 99.284423828125
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter : res . entries . iterator ( ) ;
rank: 137
score: 99.2686298076923
patch: Iterator iter = res . add ( v . length ) ;
rank: 138
score: 99.3503058938419
patch: Iterator < Entry > iter = res . entries ( ) . iterator ( ) ;
rank: 138
score: 99.30006917317708
patch: Iterator iter = res . res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 138
score: 99.29879760742188
patch: int iter = res . entries != null ? res . iterator ( ) ;
rank: 138
score: 99.2911846454327
patch: Iterator iter = v [ 0 ] . iterator ( ) ;
rank: 138
score: 99.28392493206522
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) this ) . entries . iterator ( ) ;
rank: 138
score: 99.26747233072916
patch: Iterator < Float > iter = res . entries . iterator ( ) ;
rank: 139
score: 99.3555908203125
patch: Iterator iter = res . entries ( ) . entries . entries ( ) ;
rank: 139
score: 99.35025227864584
patch: Iterator < void > iter = res . entries . iterator ( ) ;
rank: 139
score: 99.32489013671875
patch: Iterator iter = res . entries . iterator ( ) ; iterator . iterator = 0 ;
rank: 139
score: 99.3045654296875
patch: Iterator iter = res [ 0 ] . entries . size ( ) ;
rank: 139
score: 99.30006917317708
patch: res . Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 139
score: 99.29082641601562
patch: Iterator iter = res . iterator ( ) ; if ( iter . has CaMeL Next ( ) )
rank: 139
score: 99.26719563802084
patch: Iterator < Thread > iter = res . entries . iterator ( ) ;
rank: 140
score: 99.35425522748162
patch: Iterator iter = ebe CaMeL Multiply ( this ) . entries . iterator ( ) ;
rank: 140
score: 99.3499755859375
patch: Iterator < Object > iter = res . entries ( ) ;
rank: 140
score: 99.3245620727539
patch: Iterator iter = res . entries . iter ( ) . iterator ( ) ;
rank: 140
score: 99.29981825086806
patch: Iterator iter = v . length ; while ( iter . has CaMeL Next ( ) )
rank: 140
score: 99.29078087439903
patch: Iterator iter = res . index CaMeL Of ( this ) ;
rank: 140
score: 99.26681753305289
patch: Iterator iter = res . ( ) . size ( ) ;
rank: 141
score: 99.35382080078125
patch: Real CaMeL Vector res = new Real CaMeL Vector ( this , v . length ) ;
rank: 141
score: 99.34961876502403
patch: Iterator < String > iter = res . size ( ) ;
rank: 141
score: 99.32373046875
patch: Iterator iter = res . next ( ) . entries ( ) . entries ( ) ;
rank: 141
score: 99.29652756911058
patch: Iterator iter = res . entries . iterator ( ) ; else
rank: 141
score: 99.29046921502976
patch: if ( res != null ) res . res = res . entries . entries . size ( ) ;
rank: 141
score: 99.2666259765625
patch: Iterator < double >= iter = res . entries . iterator ( ) ;
rank: 142
score: 99.32359483506944
patch: Iterator iter = res . entries . iterator ( ) ; entries . size ( ) ;
rank: 142
score: 99.30208093979779
patch: Iterator iter = res . entries . entries . index CaMeL Of ( this ) ;
rank: 142
score: 99.29637145996094
patch: Iterator iter = res . to CaMeL String ( ) . entries ( ) ;
rank: 142
score: 99.29055786132812
patch: Iterator iter = res . res . entries . entries . iterator ( ) ;
rank: 142
score: 99.2899639423077
patch: Iterator iter = res . entries ( ) ; while ( )
rank: 142
score: 99.26604352678571
patch: Iterator iter = res . trim ( ) . size ( ) ;
rank: 143
score: 99.35150615985577
patch: Iterator iter = res [ iter . iterator ( ) ] ;
rank: 143
score: 99.34856770833333
patch: final Iterator iter = res . entries ( ) . iter ( ) ;
rank: 143
score: 99.30073547363281
patch: Iterator iter = res . get ( ) . entries . iterator ( ) ;
rank: 143
score: 99.2992451985677
patch: Iterator iter = res . entries . iterator . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 143
score: 99.2955078125
patch: Iterator iter = res . entries ( ) . remove ( 0 ) ;
rank: 143
score: 99.28970336914062
patch: Iterator iter = res . iterator . entries ( ) . iterator ( ) ;
rank: 143
score: 99.2806396484375
patch: Iterator Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 144
score: 99.35133990119485
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = ebe CaMeL Multiply ( this ) ;
rank: 144
score: 99.34827423095703
patch: final Iterator < Integer > iter = res . entries . iterator ( ) ;
rank: 144
score: 99.29910714285714
patch: iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 144
score: 99.28976004464286
patch: Iterator iter = res . add ( v [ 0 ] ) ;
rank: 144
score: 99.28030831473214
patch: Iterator iter = res . Open CaMeL Map CaMeL Real CaMeL Vector ( this ) . iterator ( ) ;
rank: 145
score: 99.34728131975446
patch: final Iterator < Object > iter = res . iterator ( ) ;
rank: 145
score: 99.32290469898896
patch: Iterator iter = res . get ( res . entries . size ( ) ) ;
rank: 145
score: 99.2950439453125
patch: Iterator iter = res . entries ( ) . iterator ( ) ; try {
rank: 145
score: 99.28901672363281
patch: Iterator iter = res . to CaMeL Array ( ) . iter ( ) ;
rank: 145
score: 99.288330078125
patch: Iterator iterator = v . entries ( ) . iterator ( ) ;
rank: 145
score: 99.26553548177084
patch: Iterator iter = res [ this . entries . iterator ( ) ] ;
rank: 146
score: 99.34957546657986
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . entries . size ( ) ;
rank: 146
score: 99.34721544053819
patch: / * Iterator iter = res . entries . entries ( ) . iterator ( ) ;
rank: 146
score: 99.29947102864584
patch: Iterator iter = res . add ( this ) . iterator ( ) ;
rank: 146
score: 99.28801413143383
patch: if ( res != null ) res . entries = res . entries . length ;
rank: 146
score: 99.27839799360795
patch: Iterator iter < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 146
score: 99.2648417154948
patch: Iterator iter = res . name . iterator ( ) ;
rank: 147
score: 99.322265625
patch: Iterator iter = res . entries . iterator ( ) ; iterator -- ;
rank: 147
score: 99.29840087890625
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 147
score: 99.28737386067708
patch: / * Iterator iter = res . iterator ( ) ;
rank: 147
score: 99.278076171875
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . iterator ( ) ) {
rank: 147
score: 99.26446533203125
patch: Iterator iter = entries . entries . entries . iterator ( ) ;
rank: 148
score: 99.32171161358173
patch: Iterator < Entry > iter = res . iterator ( ) ;
rank: 148
score: 99.29820033482143
patch: Iterator iter = res . for . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 148
score: 99.28728170955883
patch: Iterator iter = res [ 1 ] . entries ( ) . iterator ( ) ;
rank: 148
score: 99.27769252232143
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector > }
rank: 149
score: 99.34790852864583
patch: Iterator iter = res [ $NUMBER$ ] . entries . iterator ( ) ;
rank: 149
score: 99.32169596354167
patch: Iterator iter = res . get ( 0 ) . entries ( ) ;
rank: 149
score: 99.29800415039062
patch: Iterator iter = res . set . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 149
score: 99.29252624511719
patch: Iterator iter = res . entries ( - 1 ) . entries ( ) ;
rank: 149
score: 99.28724670410156
patch: Iterator iter = res . name . entries ( ) . iterator ( ) ;
rank: 149
score: 99.28581891741071
patch: Iterator iter = res . iterator . iterator ( ) ; while ( . has CaMeL Next ( ) )
rank: 149
score: 99.26339285714286
patch: Iterator iter = res . read . entries . iterator ( ) ;
rank: 150
score: 99.34756469726562
patch: Iterator iter = res . entries ( ) . entries ( ) . length ;
rank: 150
score: 99.32126089242789
patch: Iterator iter = res . entries . . iterator ( ) ;
rank: 150
score: 99.29798955502717
patch: Iterator iter = res . iterator . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 150
score: 99.29205322265625
patch: Iterator * ] iter = res . entries . iterator ( ) ;
rank: 150
score: 99.28717912946429
patch: Iterator iter = res . max . entries . iterator ( ) ;
rank: 150
score: 99.28548431396484
patch: Iterator iter ; res . entries = res . entries . iterator ( ) ;
rank: 150
score: 99.276123046875
patch: Enumeration < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 150
score: 99.26280110677084
patch: Iterator < String > iter = res . entries . size ( ) ;
rank: 151
score: 99.34351870888158
patch: Iterator < Integer > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 151
score: 99.31978113511029
patch: Iterator iter = res . entries . iterator ( ) ; . iterator ( ) ;
rank: 151
score: 99.29754638671875
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) ; )
rank: 151
score: 99.2940444946289
patch: Iterator iter = res . entries . get ( ) . iterator ( ) ;
rank: 151
score: 99.2920150756836
patch: Iterator iter = res . get CaMeL Properties ( ) . entries ( ) ;
rank: 151
score: 99.27536939538044
patch: Iterator iter = res . to CaMeL Array ( Open CaMeL Map CaMeL Real CaMeL Vector ) . iterator ( ) ;
rank: 152
score: 99.34653145926339
patch: Iterator iter = res == null . entries . iterator ( ) ;
rank: 152
score: 99.34334716796874
patch: boolean iter = res . entries . iterator ( ) . iterator ( ) . size ( ) ;
rank: 152
score: 99.31974792480469
patch: Iterator iter = res . next . entries ( ) . iterator ( ) ;
rank: 152
score: 99.29730779474431
patch: Iterator iter = res . entries . iterator ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 152
score: 99.29159725413604
patch: Iterator < E > iter = res . entries ( ) . iterator ( ) ;
rank: 152
score: 99.28630828857422
patch: Iterator iter = res . start . entries ( ) . iterator ( ) ;
rank: 152
score: 99.28481573807566
patch: Iterator iter = res . entries ( ) ; while ( . has CaMeL Next ( ) )
rank: 152
score: 99.27525499131944
patch: Iterator iter . has CaMeL Next ( ) ; ) ; iter . advance ( ) ;
rank: 153
score: 99.29703521728516
patch: Iterator iter = res . get CaMeL Resources ( ) . iterator ( ) ;
rank: 153
score: 99.29093424479167
patch: Iterator iter = res . entries ( 0 ) . iterator ( ) ;
rank: 153
score: 99.28465360753677
patch: res . entries = new Iterator [ res . entries . size ( ) ] ;
rank: 153
score: 99.2750934103261
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iterator = res . entries . entries . iterator ( ) ;
rank: 153
score: 99.25958251953125
patch: Iterator iter = res . length . size ( ) ;
rank: 154
score: 99.34331311677632
patch: res . iterator ( ) . iterator ( ) . iterator ( ) . size ( ) ;
rank: 154
score: 99.31963034237133
patch: Iterator iter = res . entries [ null ] . entries . iterator ( ) ;
rank: 154
score: 99.29084916548295
patch: entries = res . entries . iterator ( ) ;
rank: 154
score: 99.28305053710938
patch: Iterator iter = res . out . entries ( ) . iterator ( ) ;
rank: 154
score: 99.27444590692934
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector >= iter = res . entries . entries . iterator ( ) ;
rank: 155
score: 99.31947544642857
patch: Iterator iter = $STRING$ . entries ( ) . iterator ( ) ;
rank: 155
score: 99.296142578125
patch: synchronized ( res ) { res . entries = res . entries . entries . iterator ( ) ; }
rank: 155
score: 99.29270717075893
patch: Vector iter = res . entries . entries . iterator ( ) ;
rank: 155
score: 99.28299967447917
patch: Iterator iter = res . max . iterator ( ) ;
rank: 155
score: 99.27406377377717
patch: Iterator iter = res . to CaMeL Array ( Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( ) ) ;
rank: 155
score: 99.2592022235577
patch: Iterator iter = res [ ) . size ( ) ] ;
rank: 156
score: 99.34328326056985
patch: Iterator iter = ! res . entries . entries ( ) . iterator ( ) ;
rank: 156
score: 99.29604704483695
patch: Iterator iter = res . map . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 156
score: 99.29024505615234
patch: Iterator iter = res . entries ( ) . map . iterator ( ) ;
rank: 156
score: 99.28367513020834
patch: Iterator iter = v . entries ( res ) . iterator ( ) ;
rank: 156
score: 99.2822265625
patch: Iterator iter = res . index CaMeL Of ( false ) ;
rank: 156
score: 99.25917154947916
patch: Iterator iter = res . ! res . has CaMeL Next ( ) ;
rank: 157
score: 99.34026336669922
patch: Iterator iter = res . entries . entries . iterator . iterator ( ) ;
rank: 157
score: 99.318115234375
patch: Iterator iter = res . iterator ( ) ; entries . iterator ( ) ;
rank: 157
score: 99.29580688476562
patch: Iterator iter = res . list . iterator ( ) . iterator ( ) ;
rank: 157
score: 99.29236557904412
patch: Iterator iter = res . entries Real CaMeL Vector ( ) . entries ( ) ;
rank: 157
score: 99.28983851841518
patch: Iterator iter = res . entries ( ) . delete ( ) ;
rank: 157
score: 99.2816162109375
patch: Iterator iter = res . min ( ) . iterator ( ) ;
rank: 157
score: 99.27089972245066
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . iterator ( ) ) {
rank: 158
score: 99.33945719401042
patch: Iterator iter = ( res . entries . entries ( ) . iterator ( ) ) ;
rank: 158
score: 99.31760660807292
patch: Iterator iter = res . get . entries ( ) ;
rank: 158
score: 99.29435929008152
patch: Iterator iter = data . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 158
score: 99.257568359375
patch: Iterator iter = res [ iter . has CaMeL Next ( ) ;
rank: 159
score: 99.33911946614583
patch: Iterator iter = res . entries [ 1 ] . iterator ( ) ;
rank: 159
score: 99.2933349609375
patch: List iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 159
score: 99.28850911458333
patch: Iterator iter = res . entries ( $STRING$ ) . iterator ( ) ;
rank: 159
score: 99.28050231933594
patch: Iterator iter = res . size ( ) : v . iterator ( ) ;
rank: 159
score: 99.26949912623355
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . size ( ) ;
rank: 159
score: 99.25726318359375
patch: Iterator iter . has CaMeL Next ( ) ; ) {
rank: 160
score: 99.3386459350586
patch: Iterator iter = res . entries ( ) . length . iterator ( ) ;
rank: 160
score: 99.314453125
patch: Iterator iter = res . entries . iterator ( ) ; iter ++ ;
rank: 160
score: 99.29241265190973
patch: if ( res == null ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 160
score: 99.28770228794643
patch: for ( ) { Iterator iter = res . entries ( ) ;
rank: 160
score: 99.281982421875
patch: Iterator iter = res ) . entries ( ) . iterator ( ) ;
rank: 160
score: 99.26911727241848
patch: Iterator iter = ( Open CaMeL Map CaMeL Real CaMeL Vector ) this . res . entries . iterator ( ) ;
rank: 161
score: 99.2922030362216
patch: Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 161
score: 99.28646647135416
patch: Iterator iter = res . entries = ( ) . iterator ( ) ;
rank: 161
score: 99.28158569335938
patch: / * Iterator iter = v . entries ( ) . iterator ( ) ;
rank: 161
score: 99.28035481770833
patch: Iterator iter = res . min . iterator ( ) ;
rank: 161
score: 99.26891217912946
patch: Iterator iter = res . list . entries . iterator ( ) ;
rank: 162
score: 99.33760070800781
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . entries ( ) ;
rank: 162
score: 99.33710075827206
patch: Iterator < int > iter = res . entries . entries . iterator ( ) ;
rank: 162
score: 99.29142960258152
patch: for ( Iterator iter = res . list . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 162
score: 99.28633256392045
patch: Iterator iter = res . entries ( null ) ;
rank: 162
score: 99.27941313244048
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) ;
rank: 162
score: 99.26771763392857
patch: Iterator iter > iter = res . entries . iterator ( ) ;
rank: 162
score: 99.25525716145833
patch: Iterator < Real CaMeL Vector > iter = entries . iterator ( ) ;
rank: 163
score: 99.31342909071181
patch: Iterator iter = res . entries . iterator ( ) ; res . entries = null ;
rank: 163
score: 99.29150390625
patch: Iterator iter = res . close ( ) . entries . iterator ( ) ;
rank: 163
score: 99.29107111150569
patch: Iterator iter = res . set . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 163
score: 99.28574044363839
patch: Iterator iter = res . entries ( ) . list ( ) ;
rank: 163
score: 99.27987670898438
patch: Iterator iter < Class > iter = res . entries . iterator ( ) ;
rank: 163
score: 99.27799849076705
patch: Iterator iter = v . iterator ( ) ; ;
rank: 163
score: 99.26750837053571
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res )
rank: 163
score: 99.2544657389323
patch: Iterator iter = res . end . iterator ( ) ;
rank: 164
score: 99.33543982872597
patch: Iterator iter = res [ 1 ] . iterator ( ) ;
rank: 164
score: 99.285400390625
patch: Iterator iter = res . to CaMeL Array ( res ) . iterator ( ) ;
rank: 164
score: 99.27983542049633
patch: Iterator iter = res . get CaMeL Entry ( $STRING$ ) . iterator ( ) ;
rank: 164
score: 99.27719116210938
patch: Iterator iter = res . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 164
score: 99.26734459918478
patch: Iterator iter = ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . entries . entries . iterator ( ) ;
rank: 165
score: 99.33655598958333
patch: Iterator < String > iter = res . entries . iter ( ) ;
rank: 165
score: 99.33456600413604
patch: Iterator iter = res . ebe CaMeL Multiply ( this ) . iterator ( ) ;
rank: 165
score: 99.31313747829861
patch: Iterator iter = res . entries . iterator ( ) ; entries . next ( ) ;
rank: 165
score: 99.27716936383929
patch: Iterator iter = res . iterator ( ) ; while ( ; iter . has CaMeL Next ( ) )
rank: 165
score: 99.26571044921874
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) ; ) ;
rank: 166
score: 99.3361572265625
patch: res . iterator ( ) . iterator ( ) . iterator ( ) . add ( res ) ;
rank: 166
score: 99.33339436848958
patch: Iterator iter = res . iterator ( ) ; for (
rank: 166
score: 99.29018332741477
patch: Iterator iter = res . get CaMeL Entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 166
score: 99.2901382446289
patch: Iterator iter = res . map . entries ( ) . iterator ( ) ;
rank: 166
score: 99.27713815789474
patch: if ( res . res != null && res . res . res . res != null )
rank: 167
score: 99.33524780273437
patch: List res . iterator ( ) . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 167
score: 99.31138700597427
patch: Iterator iter = res . entries . split ( res . iterator ( ) ) ;
rank: 167
score: 99.2900390625
patch: Iterator iter = res . index CaMeL Of ( this ) . entries ( ) ;
rank: 167
score: 99.28933848505434
patch: Iterator iter = this . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 167
score: 99.28471823299633
patch: int < ] > res . entries = res . entries . iterator ( ) ;
rank: 167
score: 99.27611142113095
patch: Iterator iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) ) )
rank: 167
score: 99.26529693603516
patch: Iterator iter = res . entries : res . entries . iterator ( ) ;
rank: 167
score: 99.25162179129464
patch: Iterator iter = res . iterator . has CaMeL Next ( ) ;
rank: 168
score: 99.31065368652344
patch: Iterator iter = res . entries . iterator ( ) ; iterator return res ;
rank: 168
score: 99.28993853400735
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . set CaMeL Entry ( this ) ;
rank: 168
score: 99.28462727864583
patch: Iterator iter = res . entries ( $NUMBER$ ) . next ( ) ;
rank: 168
score: 99.27784946986607
patch: Iterator iter = res . value . entries . iterator ( ) ;
rank: 168
score: 99.27577718098958
patch: try { Iterator iter = res . iterator ( ) ;
rank: 168
score: 99.25149536132812
patch: while ( iter . has CaMeL Next ( ) ) {
rank: 169
score: 99.33384195963542
patch: final Iterator < Object > iter = res . entries ( ) . iterator ( ) ;
rank: 169
score: 99.2892074584961
patch: Iterator iter = res . entries . next ( ) . size ( ) ;
rank: 169
score: 99.28880673363095
patch: Iterator iter = res . get ( res . get CaMeL Id ( ) ) . iterator ( ) ;
rank: 169
score: 99.2740478515625
patch: Iterator iter = res . entries ( ) [ 0 ] . iterator ( ) ;
rank: 169
score: 99.26321411132812
patch: Iterator iter = list . entries . iterator ( ) ;
rank: 169
score: 99.25055541992188
patch: Iterator iter = res . Iterator ( ) ;
rank: 170
score: 99.33106904871323
patch: try { iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 170
score: 99.31043836805556
patch: Iterator iter = res . get ( res . iterator ( ) . iterator ( ) ;
rank: 170
score: 99.28910064697266
patch: Iterator iter = res . entries . entries . has CaMeL Next ( ) ;
rank: 170
score: 99.2881747159091
patch: Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 170
score: 99.28360188802084
patch: Iterator iter = res . entries ( false ) . iterator ( ) ;
rank: 170
score: 99.27702113560268
patch: Iterator iter = res . max ( ) . iterator ( ) ;
rank: 170
score: 99.26239304315476
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = this . entries . iterator ( ) ;
rank: 170
score: 99.2500712076823
patch: Iterator iter = res . true . iterator ( ) ;
rank: 171
score: 99.33283827039931
patch: Iterator iterator = res . entries ( ) . entries ( ) . iterator ( ) ;
rank: 171
score: 99.2881496263587
patch: Iterator iter = res . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 171
score: 99.28757611443015
patch: Iterator iter = res . ( ) . entries . entries . iterator ( ) ;
rank: 171
score: 99.2754135131836
patch: Iterator iter = v . size ( ) : res . iterator ( ) ;
rank: 171
score: 99.27303059895833
patch: Iterator iter = v . entries ( ) ; while . has CaMeL Next ( ) ;
rank: 171
score: 99.26217215401786
patch: Enumeration iter = res . entries . entries . iterator ( ) ;
rank: 171
score: 99.24993024553571
patch: Iterator iter = res . put ( ) . iterator ( ) ;
rank: 172
score: 99.33248697916666
patch: Iterator < res > iter = res . entries . iterator ( ) ;
rank: 172
score: 99.32737103630515
patch: Iterator iter = ebe CaMeL Multiply ( res ) . entries . iterator ( ) ;
rank: 172
score: 99.28754739200367
patch: Iterator iter = v ; while ( iter . has CaMeL Next ( ) ) {
rank: 172
score: 99.27510070800781
patch: Iterator iter = res . max . entries ( ) . iterator ( ) ;
rank: 172
score: 99.27271864149306
patch: Iterator iter = res . iterator ( ) ; while . has CaMeL Next ( ) )
rank: 172
score: 99.24863978794643
patch: Iterator iter = res . advance ( ) . iterator ( ) ;
rank: 173
score: 99.33184051513672
patch: Iterator iter = res . entries . iterator ( ) ; for ( ) {
rank: 173
score: 99.32715606689453
patch: Iterator iter = res . entries . entries . iterator ( ) ; for (
rank: 173
score: 99.30946260340073
patch: res . add ( res ) ; Iterator iter = res . iterator ( ) ;
rank: 173
score: 99.28211388221153
patch: res . entries . iterator ( ) . iterator ( ) ;
rank: 173
score: 99.27261013454861
patch: Iterator iter ; while ( iter . has CaMeL Next ( ) ) { res . )
rank: 173
score: 99.26174490792411
patch: Iterator iter = res . entries . list . iterator ( ) ;
rank: 174
score: 99.33125
patch: Iterator < String > entries = res . entries . iterator ( ) ;
rank: 174
score: 99.32662527901786
patch: Iterator iter = res != null : res . iterator ( ) ;
rank: 174
score: 99.28703507133152
patch: Iterator iter = res . iterator ( ) ; while ( iter . ; iter . has CaMeL Next ( ) )
rank: 174
score: 99.281689453125
patch: Iterator < ] > iter = res . entries . entries ( ) ;
rank: 174
score: 99.27204975328948
patch: if ( res != null ) res . res = res . entries . clone ( ) ;
rank: 174
score: 99.26154242621527
patch: Iterator iter . advance ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 174
score: 99.24810321514423
patch: Iterator iter = res . entries . iterator ( this ) ;
rank: 175
score: 99.32638985770089
patch: Iterator iter = res . entries . entries ( ) . length ;
rank: 175
score: 99.3084716796875
patch: Iterator iter = res . entries . iterator ( ) ; res . iterator = 0 ;
rank: 175
score: 99.2869540127841
patch: Iterator res = res . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 175
score: 99.26143798828124
patch: Iterator iter = res . entries . Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( ) ;
rank: 175
score: 99.247265625
patch: Iterator < Real CaMeL Vector > iter = res . size ( ) ;
rank: 176
score: 99.30846489800348
patch: Iterator iter = res . entries . entries ( ) ; res . iterator ( ) ;
rank: 176
score: 99.2804314108456
patch: Iterator iter = res . entries ( ) . index CaMeL Of ( $STRING$ ) ;
rank: 176
score: 99.27214704241071
patch: Iterator iter = res . min . entries . iterator ( ) ;
rank: 176
score: 99.27003987630208
patch: if ( res != null ) res . Iterator iter = res . iterator ( ) ;
rank: 176
score: 99.24715983072916
patch: Iterator < State > iter = res . entries . iterator ( ) ;
rank: 177
score: 99.32599954044117
patch: Iterator iter = res . entries . entries ( ) . . iterator ( ) ;
rank: 177
score: 99.30836588541666
patch: Iterator iter ; Iterator iter = res . entries . iterator ( ) ;
rank: 177
score: 99.28659986413044
patch: res . set CaMeL Length ( res . length ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 177
score: 99.27960611979167
patch: this . res . entries . iterator ( ) . iterator ( ) ;
rank: 177
score: 99.26995528371711
patch: if ( res != null ) res . entries = res . entries . iterator ( ) ;
rank: 177
score: 99.25963245738636
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = ! res . entries . iterator ( ) ;
rank: 177
score: 99.24659016927083
patch: Iterator iter = res . this ) . entries . iterator ( ) ;
rank: 178
score: 99.33062385110294
patch: Iterator < Iterator < String > iter = res . entries . iterator ( ) ;
rank: 178
score: 99.28631998697917
patch: res . entries = res . entries . entries . iterator ( ) ;
rank: 178
score: 99.28596714564732
patch: Iterator iter = res . copy ( ) . entries ( ) ;
rank: 178
score: 99.2711651141827
patch: Iterator iter = res . entries . iterator ( ) 1 ;
rank: 178
score: 99.25958251953125
patch: Iterator iter += res . entries . iterator ( ) . iterator ( ) ;
rank: 178
score: 99.24399820963542
patch: Iterator iter = v . has CaMeL Next ( ) ;
rank: 179
score: 99.32292938232422
patch: Real CaMeL Vector res = new Real CaMeL Vector ( v . length ) ;
rank: 179
score: 99.30762436810662
patch: Iterator iter = res . entries . = res . entries . iter ( ) ;
rank: 179
score: 99.286083984375
patch: if ( res . length == 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 179
score: 99.28529357910156
patch: Iterator iter = res . v . entries . entries . iterator ( ) ;
rank: 179
score: 99.26908151726974
patch: synchronized ( res ) { Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 179
score: 99.24291178385417
patch: Iterator < double > iter = res . entries . size ( ) ;
rank: 180
score: 99.33037923177083
patch: Iterator < String > iter = res . entries . entries ( ) ;
rank: 180
score: 99.30740356445312
patch: Iterator iterator = res . entries . entries ( ) . iterator ( ) ;
rank: 180
score: 99.28490048363095
patch: Iterator iter = Math . min ( res . entries , res . entries . size ( ) ) ;
rank: 180
score: 99.26882036994485
patch: if ( v != null ) res . entries = res . entries . entries ;
rank: 180
score: 99.25889756944444
patch: for ( final Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) {
rank: 181
score: 99.33026885986328
patch: final Iterator < int > iter = res . entries . iterator ( ) ;
rank: 181
score: 99.28472609747024
patch: iterator = res . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 181
score: 99.28407287597656
patch: Iterator iter = res . format . entries ( ) . iterator ( ) ;
rank: 181
score: 99.27906799316406
patch: Iterator [ ] res . entries = res . entries . iterator ( ) ;
rank: 181
score: 99.26849043996711
patch: Iterator iter = v [ res . entries . size ( ) ] . iterator ( ) ;
rank: 181
score: 99.24230018028847
patch: Iterator iter = res [ ) . iterator ( ) ] ;
rank: 182
score: 99.32972935267857
patch: Iterator iter = out . entries ( ) . iterator ( ) ;
rank: 182
score: 99.32050323486328
patch: Iterator iter = res . entries ( ) . entries . size ( ) ;
rank: 182
score: 99.30658318014706
patch: Iterator iter = res . entries . remove ( res . iterator ( ) ) ;
rank: 182
score: 99.28433082217262
patch: Iterator iter = Math . abs ( res . entries . size ( ) ) . iterator ( ) ;
rank: 182
score: 99.2840576171875
patch: Iterator iter = res . entries . entries . ( ) . size ( ) ;
rank: 182
score: 99.27897135416667
patch: Iterator < String >> iter = res . entries . iterator ( ) ;
rank: 182
score: 99.26847759046052
patch: Iterator iter = v . iterator ( ) ; while . has CaMeL Next ( ) ; )
rank: 182
score: 99.25749655330883
patch: Iterator < String > iter = this . res . entries . iterator ( ) ;
rank: 182
score: 99.24093862680289
patch: Iterator iter ++ = res . entries . iterator ( ) ;
rank: 183
score: 99.32952008928571
patch: Iterator res = res . entries ( ) . iterator ( ) ;
rank: 183
score: 99.28284222146739
patch: Iterator iter = this . res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 183
score: 99.27859700520834
patch: final int iter = res . entries ( ) . iterator ( ) ;
rank: 183
score: 99.26962280273438
patch: Iterator iter < Integer > iter = res . entries . iterator ( ) ;
rank: 183
score: 99.25718180338542
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . iterator ( ) )
rank: 183
score: 99.24034772600446
patch: Iterator iter = this . res . entries . size ( ) ;
rank: 184
score: 99.31977844238281
patch: Iterator iter = res . entries . entries = res . iterator ( ) ;
rank: 184
score: 99.30609537760417
patch: Iterator iter = res . = res . entries . iterator ( ) ;
rank: 184
score: 99.28394317626953
patch: Iterator iter = res . entries . entries ( ) . next ( ) ;
rank: 184
score: 99.28245907738095
patch: Iterator iter = res . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 184
score: 99.2779541015625
patch: Iterator iter = res . get CaMeL Classes ( ) . entries ( ) ;
rank: 184
score: 99.2694091796875
patch: Iterator iter = res . index CaMeL Of ( true ) ;
rank: 184
score: 99.24008178710938
patch: Set iter = res . entries . iterator ( ) ;
rank: 185
score: 99.32921424278847
patch: Iterator < String > entries = res . entries ( ) ;
rank: 185
score: 99.31957194010417
patch: Iterator iter = res [ iter . has CaMeL Next ( ) ] ;
rank: 185
score: 99.28245785361842
patch: Iterator iter = res . get ( 0 ) . entries ( ) . iterator ( ) ;
rank: 185
score: 99.27763815487133
patch: Iterator iter = res . entries ( null , null ) . iterator ( ) ;
rank: 185
score: 99.26741536458333
patch: Iterator iter = res . entries ( ) . iterator ( res ) ;
rank: 185
score: 99.25565011160714
patch: Iterator iter = res . key . entries . iterator ( ) ;
rank: 186
score: 99.32919491038604
patch: Iterator < ) > iter = res . entries ( ) . iterator ( ) ;
rank: 186
score: 99.30520968967014
patch: Iterator iter = res . iterator ( ) ; iterator = res . entries ( ) ;
rank: 186
score: 99.28343200683594
patch: Iterator iter = res . entries . trim ( ) . entries ( ) ;
rank: 186
score: 99.28245713975694
patch: Iterator iter = res . copy ( ) . entries ( ) . iterator ( ) ;
rank: 186
score: 99.27728678385417
patch: int < ] > iter = res . entries . iterator ( ) ;
rank: 186
score: 99.26870291573661
patch: Iterator iter = res . parse ( ) . iterator ( ) ;
rank: 186
score: 99.26634979248047
patch: if ( res . entries . size ( ) > 0 ) return res ;
rank: 186
score: 99.25562744140625
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . iterator ( ) )
rank: 187
score: 99.3045654296875
patch: for ( Iterator iter = res . iterator ( ) ;
rank: 187
score: 99.2769775390625
patch: Iterator iter = res . entries ( ) . remove ( null ) ;
rank: 187
score: 99.26604817708333
patch: Object res = res . entries ( ) . get ( 0 ) ;
rank: 187
score: 99.2546745749081
patch: Iterator < float [ ] > iter = res . entries . iterator ( ) ;
rank: 187
score: 99.237939453125
patch: Iterator iter = res . entries ( this ) . iterator ( ) ;
rank: 188
score: 99.28191583806819
patch: Iterator iter = super . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 188
score: 99.27574157714844
patch: int iter = res . entries . trim ( ) . size ( ) ;
rank: 188
score: 99.26592254638672
patch: Iterator iter = res . iterator . iterator ( ) . iterator ( ) ;
rank: 188
score: 99.25466918945312
patch: Iterator iter || res . iterator ( ) . has CaMeL Next ( ) ;
rank: 188
score: 99.23732212611607
patch: Iterator iter = res . close ( ) . iterator ( ) ;
rank: 189
score: 99.328955078125
patch: Iterator iter = res . entries != null ? res . entries . iterator ( ) : null ;
rank: 189
score: 99.31706686580883
patch: Iterator iter = res . entries [ $NUMBER$ ] . entries . iterator ( ) ;
rank: 189
score: 99.30367024739583
patch: Iterator iter = res . key . iterator ( ) ;
rank: 189
score: 99.28214263916016
patch: Iterator iter = res . get CaMeL Type ( ) . size ( ) ;
rank: 189
score: 99.28185317095588
patch: Iterator iter = ( int [ ] ) res . entries . iterator ( ) ;
rank: 189
score: 99.26515299479166
patch: Iterator iter = res . iterator . iterator ( ) ; while ( )
rank: 190
score: 99.3031005859375
patch: Iterator iter = res . entries . iterator ( ) ; entries . iterator ( ) .
rank: 190
score: 99.28150576636905
patch: Iterator iter = entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 190
score: 99.28110177176339
patch: Iterator iter = res . size ( ) . size ( ) ;
rank: 190
score: 99.27487618582589
patch: Iterator iter = res . entries ( ) ; next ( ) ;
rank: 190
score: 99.26503619025735
patch: / * * Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 190
score: 99.25384521484375
patch: Iterator < int ) = res . entries . entries . iterator ( ) ;
rank: 190
score: 99.23649379185268
patch: final Iterator iter = res . entries . iterator ( ) ; ;
rank: 191
score: 99.32830489309211
patch: Iterator < Class > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 191
score: 99.30265045166016
patch: Iterator < ) . Iterator iter = res . entries . iterator ( ) ;
rank: 191
score: 99.28140419407895
patch: Iterator iter = res . iterator ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 191
score: 99.28060150146484
patch: Vector iter = res . entries . entries . entries . iterator ( ) ;
rank: 191
score: 99.27467974494485
patch: Iterator < ] > iter = res . entries ( ) . entries ( ) ;
rank: 191
score: 99.26433967141544
patch: if ( res . entries . iterator ( ) . has CaMeL Next ( ) )
rank: 191
score: 99.25330171130952
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iter . iterator ( ) ;
rank: 191
score: 99.235595703125
patch: List iter = res . entries . entries . iterator ( ) ;
rank: 192
score: 99.32826741536458
patch: int entries = res . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 192
score: 99.31493377685547
patch: Iterator iter = data . entries . entries ( ) . iterator ( ) ;
rank: 192
score: 99.30205939797794
patch: Iterator iter . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 192
score: 99.28046526227679
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . advance ( ) ;
rank: 192
score: 99.267578125
patch: Iterator iter = res . size ( ) : res . entries ( ) ;
rank: 192
score: 99.25321880139802
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = entries . iterator ( ) ;
rank: 192
score: 99.23515625
patch: Iterator iter = res [ this . entries . size ( ) ] ;
rank: 193
score: 99.30205426897321
patch: Iterator iter = res . get ( ) . entries ( ) ;
rank: 193
score: 99.27959526909723
patch: Iterator iter = res . list ; while ( iter . has CaMeL Next ( ) )
rank: 193
score: 99.27391142003677
patch: this . res . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 193
score: 99.26677703857422
patch: Iterator iter = res . parse ( ) . entries . iterator ( ) ;
rank: 193
score: 99.2344258626302
patch: List res = res . entries . iterator ( ) ;
rank: 194
score: 99.30123697916666
patch: Iterator iter = res . entries . iterator ( ) ; return res ;
rank: 194
score: 99.27896781589673
patch: for ( Iterator iterator = res . entries . iterator ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 194
score: 99.27378216911765
patch: Iterator < ] > iter = this . res . entries . iterator ( ) ;
rank: 194
score: 99.25260844983552
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter . has CaMeL Next ( ) ;
rank: 194
score: 99.23382161458333
patch: Iterator iter = res . add ( v ) . size ( ) ;
rank: 195
score: 99.30121256510417
patch: Iterator iter = res . add ( res . iterator ( ) ) ;
rank: 195
score: 99.27342224121094
patch: res . entries ( ) ; Iterator iter = res . entries ( ) ;
rank: 195
score: 99.26631673177083
patch: Iterator iter = res . remove ( 0 ) . iterator ( ) ;
rank: 195
score: 99.25144606370192
patch: Iterator iter = res . index CaMeL Of ( $STRING$ ) ;
rank: 196
score: 99.32613699776786
patch: Iterator iter = 0 . entries ( ) . iterator ( ) ;
rank: 196
score: 99.27829159007354
patch: Iterator iter = res . index CaMeL Of ( 0 ) . iterator ( ) ;
rank: 196
score: 99.26300455729167
patch: / * * Iterator iter = res . entries . iterator ( ) ;
rank: 196
score: 99.23353678385416
patch: iter . has CaMeL Next ( ) ; res . advance ( ) ;
rank: 197
score: 99.32603454589844
patch: Iterator iter = $NUMBER$ * res . entries ( ) . iterator ( ) ;
rank: 197
score: 99.31442440257354
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . set CaMeL Entry ( iter ) ;
rank: 197
score: 99.29971749441964
patch: Iterator iter = res . entries . min . iterator ( ) ;
rank: 197
score: 99.27844769021739
patch: Iterator iter = res . entries . iterator ( ) ; while ( ; iter . has CaMeL Next ( ) )
rank: 197
score: 99.27800436580883
patch: Iterator iter = res . append ( this ) . entries . iterator ( ) ;
rank: 197
score: 99.27325439453125
patch: Iterator iter = res . entries . iterator = res . iterator ( ) ;
rank: 197
score: 99.26275993795956
patch: Iterator iter = v [ res . length - 1 ] . iterator ( ) ;
rank: 197
score: 99.25129838423295
patch: this . res . set CaMeL Entry ( iter . key ( ) , iter . value ( ) ) ;
rank: 197
score: 99.23311941964286
patch: int iter = res . entries . entries . iterator ( ) ;
rank: 198
score: 99.32567487444196
patch: Iterator iter = res . entries . iterator ( ) - 1 ;
rank: 198
score: 99.31255026424633
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( res ) ;
rank: 198
score: 99.2994854266827
patch: Iterator iter = res . entries . add ( res ) ;
rank: 198
score: 99.27820434570313
patch: Iterator iter = this . res . entries ; while ( iter . has CaMeL Next ( ) )
rank: 198
score: 99.2625668174342
patch: if ( res != null ) return ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ;
rank: 198
score: 99.23308919270833
patch: Iterator < Number > iter = res . entries . iterator ( ) ;
rank: 199
score: 99.3238884420956
patch: Iterator < String > iter = res . entries ( ) . iter ( ) ;
rank: 199
score: 99.3116455078125
patch: if ( iter . has CaMeL Next ( ) ) { return res ; }
rank: 199
score: 99.29931640625
patch: Iterator iter = res . entries . start . iterator ( ) ;
rank: 199
score: 99.27734375
patch: Iterator iter = res . list . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 199
score: 99.27182006835938
patch: Iterator iter = res . entries . map ( ) . iterator ( ) ;
rank: 199
score: 99.26449148995536
patch: Iterator iter = res [ ] . entries . iterator ( ) ;
rank: 199
score: 99.26231032151442
patch: Iterator iter ; Iterator iter = res . iterator ( ) ;
rank: 199
score: 99.23305257161458
patch: iter . has CaMeL Next ( ) ;
rank: 200
score: 99.31045532226562
patch: Iterator iter = res . iterator ( ) * v . iterator ( ) ;
rank: 200
score: 99.29930204503677
patch: Iterator iter = res . entries . get ( 0 ) . iterator ( ) ;
rank: 200
score: 99.2765582540761
patch: Iterator iter = res . get . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 200
score: 99.27640474759616
patch: new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 200
score: 99.27173723493304
patch: Iterator iter = res . entries ( ) . replace ( ) ;
rank: 200
score: 99.26441192626953
patch: Iterator iter < Long > iter = res . entries . iterator ( ) ;
rank: 200
score: 99.26190655048077
patch: if ( res != null ) res . res = res ;
rank: 201
score: 99.32232666015625
patch: Iterator iter = res . entries ( ) . iterator ( ) - 0 ;
rank: 201
score: 99.31024528952206
patch: Iterator iter = res . entries . . entries ( ) . iterator ( ) ;
rank: 201
score: 99.29906287560097
patch: Iterator iter iter = res . entries . iterator ( ) ;
rank: 201
score: 99.27626255580357
patch: Iterator iter = this . res . list . iterator ( ) ;
rank: 201
score: 99.27150181361607
patch: synchronized ( res ) { iter = res . entries ( ) ;
rank: 201
score: 99.24823608398438
patch: Iterator iter ? res . entries ( ) . iterator ( ) . has CaMeL Next ( ) ;
rank: 202
score: 99.31022644042969
patch: Iterator iter = res == null . entries . entries . iterator ( ) ;
rank: 202
score: 99.27616373697917
patch: int size = res . entries . size ( ) ;
rank: 202
score: 99.26408168247768
patch: Iterator iter = res . size ( ) . entries ( ) ;
rank: 202
score: 99.25977280560662
patch: if ( res != null && res . entries . size ( ) > 0 )
rank: 202
score: 99.24751362047698
patch: Iterator iter = ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . iterator ( ) ;
rank: 203
score: 99.27604844835069
patch: Iterator iter = v . entries ; while ( iter . has CaMeL Next ( ) )
rank: 203
score: 99.27522547104779
patch: Iterator iter = res . entries ( ) . index CaMeL Of ( this ) ;
rank: 203
score: 99.2712173461914
patch: Iterator iter = res . entries . iterator ( ) ; next ( ) ;
rank: 203
score: 99.25929888556985
patch: if ( res . res != null ) res . res = res . res ;
rank: 203
score: 99.23204549153645
patch: Iterator iter = res . res . size ( ) ;
rank: 204
score: 99.31974792480469
patch: Iterator iter = res . entries . iterator ( ) ; else return null ;
rank: 204
score: 99.27543334960937
patch: Iterator iter = res . list ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 204
score: 99.27476283482143
patch: Iterator iter = res . entries . iterator ( ) ( ) ;
rank: 204
score: 99.26358032226562
patch: Iterator iter = ebe CaMeL Multiply . entries ( ) . iterator ( ) ;
rank: 204
score: 99.25889078776042
patch: res . entries = res . entries ; Iterator iter = res . entries ( ) ;
rank: 205
score: 99.31954251802884
patch: Iterator < Iterator > iter = res . entries ( ) ;
rank: 205
score: 99.274365234375
patch: Iterator iter = res . entries ) . entries . iterator ( ) ;
rank: 205
score: 99.25843048095703
patch: res . Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 205
score: 99.24704811789773
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector == null ;
rank: 205
score: 99.23057454427084
patch: Iterator < Double > iter = res . entries . iterator ( ) ;
rank: 206
score: 99.3194808959961
patch: final Iterator < E > iter = res . entries . iterator ( ) ;
rank: 206
score: 99.3084228515625
patch: Iterator iter = res [ iter . entries . iterator ( ) ] ;
rank: 206
score: 99.27457921645221
patch: Iterator iter = 0 ; while ( iter . has CaMeL Next ( ) ) {
rank: 206
score: 99.27436379825367
patch: Iterator iter = res . index CaMeL Of ( this ) . size ( ) ;
rank: 206
score: 99.2689697265625
patch: Iterator iter = res . entries ( ) . remove ( $NUMBER$ ) ;
rank: 206
score: 99.2617416381836
patch: Iterator iter = res . entries . iterator ( ) : res . length ;
rank: 206
score: 99.25668569711539
patch: Iterator iter ; Iterator iter = v . iterator ( ) ;
rank: 206
score: 99.24699321546052
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = res . iterator ( ) ;
rank: 206
score: 99.23027692522321
patch: Iterator iter = v [ iter . has CaMeL Next ( ) ;
rank: 207
score: 99.30830652573529
patch: synchronized ( v ) { Iterator iter = res . entries . iterator ( ) ;
rank: 207
score: 99.2728042602539
patch: Iterator iter = res . entries . trim ( ) . size ( ) ;
rank: 207
score: 99.26880645751953
patch: Iterator iter = res . entries . iterator ( ) ; int < ] :
rank: 207
score: 99.2466052827381
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = entries . entries . iterator ( ) ;
rank: 208
score: 99.3082763671875
patch: Iterator iter = res . entries ( ) . . iterator ( ) ;
rank: 208
score: 99.29628092447916
patch: Iterator iter = res . split ( res . iterator ( ) ) ;
rank: 208
score: 99.26836395263672
patch: Iterator iter = res . entries ( ) . iterator ( ) ; else {
rank: 208
score: 99.25588989257812
patch: for ( res . entries . iterator ( ) ; res . has CaMeL Next ( ) ; )
rank: 208
score: 99.22958809988839
patch: Iterator iter = res . entries . size ( ) ; ) {
rank: 209
score: 99.31746419270833
patch: Iterator < Object > iterator = res . entries . iterator ( ) ;
rank: 209
score: 99.29601287841797
patch: Iterator iter = res . get = res . entries . iterator ( ) ;
rank: 209
score: 99.27313787286931
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) ; )
rank: 209
score: 99.27235322840073
patch: Iterator iter = res . parse ( this ) . entries . iterator ( ) ;
rank: 209
score: 99.25459798177083
patch: Iterator iter = res . iterator ( res . iterator ( ) ) ;
rank: 209
score: 99.24508666992188
patch: Iterator iter = res . get CaMeL Entry . entries . iterator ( ) ;
rank: 210
score: 99.30660306490384
patch: Iterator iter = res . entries . iterator ( ) ; *
rank: 210
score: 99.27308654785156
patch: Object [ ] data = res . entries . to CaMeL Array ( ) ;
rank: 210
score: 99.27227783203125
patch: Iterator iter = res . length . entries . entries . iterator ( ) ;
rank: 210
score: 99.2544414813702
patch: if ( res != null && res . length > 0 )
rank: 210
score: 99.22813197544643
patch: Iterator iter = res . in . entries . iterator ( ) ;
rank: 211
score: 99.31442495492789
patch: Iterator iter = res . entries entries . iterator ( ) ;
rank: 211
score: 99.2946548461914
patch: Iterator iter = res . entries . iterator ( ) ; ; return res ;
rank: 211
score: 99.2725341796875
patch: Iterator iter = map . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 211
score: 99.27206600413604
patch: Iterator iter = res . entries Real CaMeL Vector ( ) . size ( ) ;
rank: 211
score: 99.2670166015625
patch: Iterator < / >> iter = res . entries . iterator ( ) ;
rank: 211
score: 99.25435384114583
patch: Iterator iter = res . entries ( res . iterator ( ) ) ;
rank: 211
score: 99.24405924479167
patch: Iterator iter = res . entries . iterator ( ) ; iterator . advance ( ) ;
rank: 211
score: 99.22757393973214
patch: Iterator iter = res . round . entries . iterator ( ) ;
rank: 212
score: 99.29372989430146
patch: Iterator iter = res . entries . split ( $STRING$ ) . iterator ( ) ;
rank: 212
score: 99.27206217447916
patch: Iterator iter = res . entries . entries ) . iterator ( ) ;
rank: 212
score: 99.2669921875
patch: Iterator < T > entries = res . entries . iterator ( ) ;
rank: 212
score: 99.25932312011719
patch: Iterator iter = v . size ( ) : res . size ( ) ;
rank: 212
score: 99.25387137276786
patch: if ( res . res != null && res . res . res . res . res != null )
rank: 212
score: 99.2275390625
patch: Iterator iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 213
score: 99.27216653262867
patch: Iterator iter = null ; while ( iter . has CaMeL Next ( ) ) {
rank: 213
score: 99.27126639229911
patch: int [ ] res = new int [ v . length ] ;
rank: 213
score: 99.26656668526786
patch: Iterator [ ] res . entries = res . entries ( ) ;
rank: 213
score: 99.2581787109375
patch: Iterator iter < long > iter = res . entries . iterator ( ) ;
rank: 213
score: 99.2538330078125
patch: if ( res != null ) res . Iterator iter = res . entries . iterator ( ) ;
rank: 213
score: 99.24379185267857
patch: Iterator iter : res . entries . entries . iterator ( ) ;
rank: 213
score: 99.22739083426339
patch: Iterator iter = res [ ) . entries . iterator ( ) ;
rank: 214
score: 99.31361299402573
patch: Iterator < synchronized > iter = res . entries ( ) . iterator ( ) ;
rank: 214
score: 99.29269205729166
patch: Iterator iter = new ( res . entries . iterator ( ) ) ;
rank: 214
score: 99.27134638247283
patch: Iterator iter = this . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 214
score: 99.270751953125
patch: Iterator iter = res . data . entries ( ) . iterator ( ) ;
rank: 214
score: 99.26633998325893
patch: Iterator iter = res . entries . iterator ( ) ; try {
rank: 214
score: 99.25791302849265
patch: Iterator iter = res . entries . iterator ( v . size ( ) ) ;
rank: 214
score: 99.25358072916667
patch: Iterator iter = res . entries ( ) . iterator ( ) ; )
rank: 214
score: 99.24378967285156
patch: for ( final Open CaMeL Map CaMeL Real CaMeL Vector res : res ) {
rank: 215
score: 99.31327989366319
patch: final Iterator < ? > iter = res . entries ( ) . iterator ( ) ;
rank: 215
score: 99.30349551930146
patch: Iterator iter = res . length [ 1 ] . entries . iterator ( ) ;
rank: 215
score: 99.29205322265625
patch: Iterator iter = res . entries . iterator ( ) ; iter = 0 ;
rank: 215
score: 99.2698974609375
patch: Iterator iter = entries . entries . entries ( ) . iterator ( ) ;
rank: 215
score: 99.2697521391369
patch: Iterator iter = res . clone ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 215
score: 99.265576171875
patch: Iterator iter = res [ null ] . entries . iterator ( ) ;
rank: 215
score: 99.25349506578948
patch: if ( res . res != null ) res . res . res = res . res ;
rank: 215
score: 99.2265292080966
patch: Iterator iter = res . size ( ) ; ;
rank: 216
score: 99.31324869791666
patch: Iterator < Object > iter = res . entries . entries ( ) ;
rank: 216
score: 99.29173990885417
patch: Iterator iter = res . read ( res . iterator ( ) ) ;
rank: 216
score: 99.26546805245536
patch: Iterator iter = res . entries . to CaMeL Array ( ) ;
rank: 216
score: 99.2577392578125
patch: Iterator iter = res . remove ( 1 ) . iterator ( ) ;
rank: 216
score: 99.25332406850961
patch: if ( res != null && res . entries != null )
rank: 216
score: 99.22630092075893
patch: Iterator iter = res . ebe CaMeL Multiply . iterator ( ) ;
rank: 217
score: 99.3128662109375
patch: final Iterator < Iterator > iter = res . iterator ( ) ;
rank: 217
score: 99.30328369140625
patch: Real CaMeL Vector res = new Real CaMeL Vector ( res . length ) ;
rank: 217
score: 99.29080636160714
patch: Iterator iter = res . entries . iterator ( ) ; break ;
rank: 217
score: 99.26954650878906
patch: Iterator iter = res . v . entries ( ) . entries ( ) ;
rank: 217
score: 99.269091796875
patch: Iterator iter = res . split ( $STRING$ ) . iterator ( ) ;
rank: 217
score: 99.26542524857955
patch: Iterator iter = res . entries iterator ( ) ;
rank: 217
score: 99.25248790922619
patch: Iterator iter = res . entries . iterator ( ) ; while . has CaMeL Next ( ) ; )
rank: 217
score: 99.22557721819196
patch: Iterator iter = res . entries . v . iterator ( ) ;
rank: 218
score: 99.312353515625
patch: final Iterator iter = this . res . entries . iterator ( ) ;
rank: 218
score: 99.29051862444196
patch: / ; Iterator iter = res . entries . iterator ( ) ;
rank: 218
score: 99.26941636029412
patch: Iterator iter = res . index CaMeL Of ( null ) . iterator ( ) ;
rank: 218
score: 99.25730895996094
patch: Iterator iter = res . index CaMeL Of ( v [ 0 ] ) ;
rank: 218
score: 99.22538539341518
patch: Iterator iter = res . clone ( ) . size ( ) ;
rank: 219
score: 99.31130981445312
patch: final Iterator < ) > iter = res . entries . iterator ( ) ;
rank: 219
score: 99.29041245404412
patch: Iterator iter = res . get ( 0 ) . entries . iterator ( ) ;
rank: 219
score: 99.2649676983173
patch: Iterator < Integer > iter = res . entries ( ) ;
rank: 219
score: 99.25055803571429
patch: if ( v != null ) res . res = res . entries . entries . iterator ( ) ;
rank: 219
score: 99.24041748046875
patch: ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) . set CaMeL Entry ( ) ;
rank: 219
score: 99.22535118689903
patch: Iterator >> iter = res . entries . iterator ( ) ;
rank: 220
score: 99.30936104910714
patch: final Iterator < ? > iter = res . iterator ( ) ;
rank: 220
score: 99.3016866048177
patch: Iterator iter = res . length . entries ( ) ;
rank: 220
score: 99.29013061523438
patch: Iterator iter = res . clone ( ) ; iterator . iterator ( ) ;
rank: 220
score: 99.26821001838235
patch: Iterator iter = Math . iterator ( res . entries . size ( ) ) ;
rank: 220
score: 99.25681559244792
patch: Iterator iter = res . is CaMeL Empty ( ) ;
rank: 220
score: 99.25032552083333
patch: if ( res != null ) res . res = res . entries ;
rank: 220
score: 99.23995168585526
patch: Iterator iter = res . entries [ 0 ] . entries . entries . iterator ( ) ;
rank: 220
score: 99.22533240685097
patch: ; Iterator iter = res . entries . iterator ( ) ;
rank: 221
score: 99.30924479166667
patch: final Iterator iter = res . entries = res . iterator ( ) ;
rank: 221
score: 99.30103257123162
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . entries ( this ) ;
rank: 221
score: 99.26752580915179
patch: int [ ] res = new int [ res . length ] ;
rank: 221
score: 99.26718319163604
patch: synchronized ( this ) { iter = res . entries . iterator ( ) ; }
rank: 221
score: 99.26455078125
patch: Vector iter = res . entries ( ) ;
rank: 221
score: 99.24922180175781
patch: Object [ ] res = res . entries . to CaMeL Array ( ) ;
rank: 221
score: 99.22454833984375
patch: Iterator iter = res . remove ( ) . size ( ) ;
rank: 222
score: 99.30905330882354
patch: Iterator < Throwable > iter = res . entries ( ) . iterator ( ) ;
rank: 222
score: 99.30096794577206
patch: Iterator iter = res . length [ 0 ] . entries . iterator ( ) ;
rank: 222
score: 99.28957232306985
patch: Iterator iter = res . entries . = res . entries . entries ( ) ;
rank: 222
score: 99.26689910888672
patch: Iterator iter = entries . entries . entries . entries . iterator ( ) ;
rank: 222
score: 99.2643573467548
patch: Iterator < ? > iter = res . entries ( ) ;
rank: 222
score: 99.24818638392857
patch: final Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 222
score: 99.23977821751645
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iter ( ) ;
rank: 223
score: 99.30885074013158
patch: if ( res != null ) iter = res . entries . entries . iterator ( ) ;
rank: 223
score: 99.30055865119485
patch: Iterator iter = res [ iter . entries ( ) ] . iterator ( ) ;
rank: 223
score: 99.26575927734375
patch: Iterator iter = v . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 223
score: 99.22437337239583
patch: Iterator < Runnable > iter = res . entries . iterator ( ) ;
rank: 224
score: 99.3087158203125
patch: if ( res != null ) res . add ( res ) ;
rank: 224
score: 99.30007934570312
patch: Iterator iter = res != null . entries ( ) . iterator ( ) ;
rank: 224
score: 99.28773498535156
patch: Iterator iter = res . key . entries ( ) . iterator ( ) ;
rank: 224
score: 99.26621380974265
patch: Iterator iter = res . entries . substring ( 1 ) . iterator ( ) ;
rank: 224
score: 99.263623046875
patch: Iterator < ] > iter = res . value . iterator ( ) ;
rank: 224
score: 99.2388916015625
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector + v . length ;
rank: 225
score: 99.30841674804688
patch: int entries . iterator ( ) . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 225
score: 99.28742980957031
patch: Iterator iter = res . is CaMeL Array ( ) . iterator ( ) ;
rank: 225
score: 99.26417451746323
patch: Iterator iter = res . get ( this ) . entries . iterator ( ) ;
rank: 225
score: 99.26341959635417
patch: final Iterator iter = res . entries ( ) . entries ( ) ;
rank: 225
score: 99.25558471679688
patch: Iterator iter = res == null ? null : res . size ( ) ;
rank: 225
score: 99.24685872395834
patch: Iterator iter = v . entries ( ) . iterator ( ) ; ;
rank: 225
score: 99.238671875
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : v ) {
rank: 226
score: 99.3082275390625
patch: Iterator < Object > entries = res . entries . iterator ( ) ;
rank: 226
score: 99.29947335379464
patch: Iterator iter = v . entries ( ) . entries ( ) ;
rank: 226
score: 99.26538803998162
patch: Iterator iter = res . Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 226
score: 99.26393037683823
patch: Iterator iter = res ; Iterator iter = res . entries . iterator ( ) ;
rank: 226
score: 99.26216888427734
patch: res . entries . Iterator iter = res . entries . iterator ( ) ;
rank: 226
score: 99.25487518310547
patch: Iterator iter = res . min . entries ( ) . iterator ( ) ;
rank: 226
score: 99.24628557477679
patch: Iterator iter = res . iterator ( . iterator ( ) ) ;
rank: 226
score: 99.23857879638672
patch: Iterator iter ? res . entries . iterator ( ) . advance ( ) ;
rank: 226
score: 99.22222345525569
patch: Iterator iter = entries . iterator ( ) ; ;
rank: 227
score: 99.29887120863971
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . iter ( this ) ;
rank: 227
score: 99.2627197265625
patch: Iterator iter = res . size ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 227
score: 99.26174926757812
patch: Iterator * ] iter = res . entries ( ) . iterator ( ) ;
rank: 227
score: 99.24591827392578
patch: Collection res = res . entries . iterator ( ) . next ( ) ;
rank: 227
score: 99.23838177849265
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries ) {
rank: 227
score: 99.22135707310268
patch: Iterator iter = res . [ ) . size ( ) ] ;
rank: 228
score: 99.28492228190105
patch: Iterator iter = res . iterator . iter ( ) ;
rank: 228
score: 99.2647476196289
patch: return new Open CaMeL Map CaMeL Real CaMeL Vector ( res * this ) ;
rank: 228
score: 99.26239624023438
patch: Iterator iter = res . iterator ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 228
score: 99.26158142089844
patch: int iter = res . to CaMeL String ( ) . size ( ) ;
rank: 228
score: 99.24446927584134
patch: res . res = res . entries . size ( ) ;
rank: 228
score: 99.23835100446429
patch: Iterator entries = res . entries . entries . iterator ( ) ;
rank: 228
score: 99.22129313151042
patch: Iterator res = res . entries . size ( ) ;
rank: 229
score: 99.30731608072917
patch: Iterator < Object > iter = res . entries . iter ( ) ;
rank: 229
score: 99.26220703125
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( )
rank: 229
score: 99.23804995888158
patch: Iterator iter = res . entries [ v . length ] . entries . iterator ( ) ;
rank: 229
score: 99.22127859933036
patch: Iterator iter = res . entries . iterator ( - 1 ) ;
rank: 230
score: 99.26114908854167
patch: Iterator < String > iter = res . value . iterator ( ) ;
rank: 230
score: 99.2536849975586
patch: Iterator iter = res . end . entries ( ) . iterator ( ) ;
rank: 230
score: 99.24404568142361
patch: Iterator iter ; try { iter = res . entries ( ) . iterator ( ) ;
rank: 230
score: 99.22061593191964
patch: Iterator iter = iter . has CaMeL Next ( ) ; ) {
rank: 231
score: 99.30704345703126
patch: res . iterator ( ) . iterator ( ) . iterator ( ) . equals ( $STRING$ ) ;
rank: 231
score: 99.29811006433823
patch: Iterator iter = res [ $NUMBER$ ] . entries . entries . iterator ( ) ;
rank: 231
score: 99.28265380859375
patch: Iterator iter = res . get . entries ( ) . iter ( ) ;
rank: 231
score: 99.261962890625
patch: Iterator iter = v . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 232
score: 99.30685604319854
patch: Iterator iter = res . entries entries . entries ( ) . iterator ( ) ;
rank: 232
score: 99.2977294921875
patch: Iterator iter = ( iter . entries ( ) ) . iterator ( ) ;
rank: 232
score: 99.28248596191406
patch: Iterator iter = res . entries . iterator ( ) ; iterator = $NUMBER$ ;
rank: 232
score: 99.26181862571023
patch: Iterator v = res . entries . iterator ( ) ; while ( v . has CaMeL Next ( ) )
rank: 232
score: 99.25305893841912
patch: Iterator iter = res != new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 232
score: 99.2438720703125
patch: Iterator < String > iter = res . iterator . iterator ( ) ;
rank: 232
score: 99.2371826171875
patch: Iterator < iter > iter = res . entries . iterator ( ) ;
rank: 232
score: 99.21992710658482
patch: Iterator [ ] v = res . entries . iterator ( ) ;
rank: 233
score: 99.29750569661458
patch: Iterator iter = res != null . iterator ( ) ;
rank: 233
score: 99.28240497295673
patch: Iterator iter = res . get ( res . length ) ;
rank: 233
score: 99.26295979817708
patch: Iterator iter = res . entries . entries . length ;
rank: 233
score: 99.2608642578125
patch: Iterator iter = res . iter ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 233
score: 99.26002502441406
patch: Iterator iter = res . entries ( ) . list . iterator ( ) ;
rank: 233
score: 99.2529766376202
patch: Iterator iter = res . index CaMeL Of ( 0 ) ;
rank: 233
score: 99.23716517857143
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector == null ? null : res . iterator ( ) ;
rank: 233
score: 99.21985802283653
patch: int Iterator iter = res . entries . iterator ( ) ;
rank: 234
score: 99.30681016710069
patch: final Iterator < Iterator > iter = res . entries ( ) . iterator ( ) ;
rank: 234
score: 99.26249425551471
patch: Iterator iter = res . entries ( ) . entries ( ) . ( ) ;
rank: 234
score: 99.26069779829545
patch: Iterator iter = res . entries . iterator ( ) ; if ( iter . has CaMeL Next ( ) )
rank: 234
score: 99.25997924804688
patch: int iter = res . entries . entries ( ) . size ( ) ;
rank: 234
score: 99.25289916992188
patch: Iterator iter = res . get CaMeL Prefix ( ) . iterator ( ) ;
rank: 234
score: 99.24317016601563
patch: if ( res != null ) res . ) res . entries = res . entries . entries ;
rank: 234
score: 99.23699629934211
patch: Iterator iter = res . entries . to CaMeL Array ( v ) . iterator ( ) ;
rank: 234
score: 99.21952311197917
patch: final iter = res . entries . iterator ( ) ;
rank: 235
score: 99.29677734375
patch: Iterator iter = ! res . entries ( ) . iterator ( ) ;
rank: 235
score: 99.2616958618164
patch: Iterator iter = res . entries . iterator ( ) . next ( ) ;
rank: 235
score: 99.25939178466797
patch: Iterator iter = res . entries ( ) . max . iterator ( ) ;
rank: 235
score: 99.24312744140624
patch: Iterator iter = v . iterator ( ) ; if ( iter . has CaMeL Next ( ) )
rank: 235
score: 99.23601973684211
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = list . iterator ( ) ;
rank: 236
score: 99.30651041666667
patch: Iterator < Iterator > iterator = res . entries . iterator ( ) ;
rank: 236
score: 99.28215475643383
patch: Iterator iter = res . entries . add ( res . entries ( ) ) ;
rank: 236
score: 99.26164027622768
patch: Iterator iter = v . entries ( ) . size ( ) ;
rank: 236
score: 99.25993909333882
patch: Iterator iter = res . iterator ( ) ; ++ iter . has CaMeL Next ( ) ;
rank: 236
score: 99.25868225097656
patch: Iterator iter = res . entries = res . map . iterator ( ) ;
rank: 236
score: 99.24304780505952
patch: Iterator iter = res . entries ( res . size ( ) - 1 ) . iterator ( ) ;
rank: 236
score: 99.23553825827206
patch: Iterator < boolean > iter = res . entries . entries . iterator ( ) ;
rank: 236
score: 99.21897536057692
patch: Iterator iter = res . has CaMeL Next ( ) ; {
rank: 237
score: 99.29508972167969
patch: Iterator iter = iter . entries ( ) . entries . iterator ( ) ;
rank: 237
score: 99.26134440104167
patch: Iterator iter = res . entries . index CaMeL Of ( $STRING$ ) ;
rank: 237
score: 99.25983220880681
patch: Iterator iter = res . value . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 237
score: 99.24293823242188
patch: if ( res . entries != null ) Iterator iter = res . entries . iterator ( ) ;
rank: 237
score: 99.21841866629464
patch: Iterator iter = res . add ( ) . iterator ( ) ;
rank: 238
score: 99.30572150735294
patch: final Iterator iter = res . entries = res . entries . iterator ( ) ;
rank: 238
score: 99.29395294189453
patch: try { res . set CaMeL Entry ( iter . advance ( ) ) ;
rank: 238
score: 99.28160095214844
patch: Iterator iter = res . entries . iterator ( ) ; iter = null ;
rank: 238
score: 99.25919966264205
patch: for ( Iterator iter = res . iterator ( ) ; iter . has CaMeL Next ( ) ; ) {
rank: 238
score: 99.24290707236842
patch: Iterator iter = v . iterator ( ) ; Iterator iter = v . iterator ( ) ;
rank: 238
score: 99.23485165550595
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) . iterator ( ) ;
rank: 239
score: 99.29365539550781
patch: Iterator iter = res != null . entries . entries . iterator ( ) ;
rank: 239
score: 99.26076834542411
patch: Iterator iter = res . entries . entries . next ( ) ;
rank: 239
score: 99.23481677827381
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iter ( ) ;
rank: 240
score: 99.30501516241776
patch: Iterator < Entry > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 240
score: 99.2811279296875
patch: Iterator iter = 0 ; Iterator iter = res . iterator ( ) ;
rank: 240
score: 99.25865342881944
patch: synchronized ( res ) { res . entries = res . entries . iterator ( ) ;
rank: 240
score: 99.23472377232143
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = list . entries . iterator ( ) ;
rank: 241
score: 99.28043038504464
patch: Iterator iter = res . entries . iter . entries ( ) ;
rank: 241
score: 99.25862260298295
patch: System . arraycopy ( res . entries , 0 , res . entries . to CaMeL Array ( ) ) ;
rank: 241
score: 99.24821472167969
patch: Iterator iter = res . max . entries . entries . iterator ( ) ;
rank: 241
score: 99.24119166324013
patch: if ( v != null ) res . res = res . entries . size ( ) ;
rank: 241
score: 99.2333475748698
patch: Iterator iter = super . entries . iterator ( ) ;
rank: 241
score: 99.21697591145833
patch: Iterator < Entry > iter = res . entries . size ( ) ;
rank: 242
score: 99.30326573988971
patch: Iterator < Iterator < Object > iter = res . entries . iterator ( ) ;
rank: 242
score: 99.29275512695312
patch: Iterator iter = iter . entries ( ) ;
rank: 242
score: 99.28031921386719
patch: Iterator iter = res . entries . iterator ( ) . entries ( ) ;
rank: 242
score: 99.25824529474431
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) break ;
rank: 242
score: 99.25751953125
patch: Iterator entries = res . iterator ( ) ;
rank: 242
score: 99.24102020263672
patch: this . res = res ; Iterator iter = res . iterator ( ) ;
rank: 242
score: 99.23328354779412
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter . advance ( ) ;
rank: 242
score: 99.21685791015625
patch: Iterator iter = res . entries . max ( ) ;
rank: 243
score: 99.30306396484374
patch: if ( res != null ) return res ;
rank: 243
score: 99.29271647135417
patch: iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 243
score: 99.25771696671195
patch: res . Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 243
score: 99.25740559895833
patch: Iterator < ] > iter = res . entries . size ( ) ;
rank: 243
score: 99.24091045673077
patch: Iterator < res > iter = res . iterator ( ) ;
rank: 243
score: 99.23265883501838
patch: Iterator iter = res . entries [ v . length ] . iterator ( ) ;
rank: 243
score: 99.21654163707386
patch: Iterator iter = res . iterator ( ) ; }
rank: 244
score: 99.30245768229166
patch: Iterator < / > iter = res . entries . iterator ( ) ;
rank: 244
score: 99.29226684570312
patch: Iterator iter = res . entries ( ) != null . iterator ( ) ;
rank: 244
score: 99.25893267463235
patch: Iterator iter = res . entries ( ) . ( ) . size ( ) ;
rank: 244
score: 99.25741975203805
patch: Iterator iterator = res . list . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 244
score: 99.25712076822917
patch: int entries = res . entries . iterator ( ) ;
rank: 244
score: 99.24755096435547
patch: Iterator iter = this . ebe CaMeL Multiply . entries . iterator ( ) ;
rank: 244
score: 99.23959147135416
patch: Iterator < T > iter = res . iterator . iterator ( ) ;
rank: 244
score: 99.2325503700658
patch: Iterator iter = res . get CaMeL Entry ( iter ) . entries . iterator ( ) ;
rank: 244
score: 99.21626499720982
patch: Iterator res = res . entries . entries . iterator ( ) ;
rank: 245
score: 99.30106201171876
patch: if ( res . entries . iterator ( ) . has CaMeL Next ( ) ) throw null ;
rank: 245
score: 99.25658461626838
patch: Iterator iter = res . entries ( ) . index CaMeL Of ( res ) ;
rank: 245
score: 99.24741908482143
patch: Iterator iter = res != null : res . size ( ) ;
rank: 245
score: 99.23196847098214
patch: Iterator iter = ( Open CaMeL Map CaMeL Real CaMeL Vector ) this . entries . iterator ( ) ;
rank: 245
score: 99.21614583333333
patch: Iterator iter = res . add ( v . size ( ) ) ;
rank: 246
score: 99.29153442382812
patch: Iterator iter = res . [ 0 ] . entries . iterator ( ) ;
rank: 246
score: 99.25786481584821
patch: Iterator iter = res . entries . index CaMeL Of ( ) ;
rank: 246
score: 99.25657301682692
patch: Iterator iter = res . list . iterator ( ) ; ;
rank: 246
score: 99.25653076171875
patch: Iterator iter = res . map . size ( ) ;
rank: 246
score: 99.23892647879464
patch: Iterator iter = res . iterator ( ) ; while ( ) {
rank: 246
score: 99.2147725423177
patch: while ( entries . has CaMeL Next ( ) ) {
rank: 247
score: 99.29143524169922
patch: Iterator iter = res . size ( ) * v . iterator ( ) ;
rank: 247
score: 99.27801920572917
patch: Iterator iter = ( Iterator ) res . entries . entries ( ) ;
rank: 247
score: 99.24598693847656
patch: Iterator iter = res . size ( ) : entries . iterator ( ) ;
rank: 247
score: 99.238623046875
patch: Iterator < res . length > iter = res . iterator ( ) ;
rank: 247
score: 99.23152669270833
patch: Iterator iter = res . entries . to CaMeL Array ( ) . entries ( ) ;
rank: 247
score: 99.21367938701923
patch: while ( res . has CaMeL Next ( ) ) { {
rank: 248
score: 99.29934692382812
patch: Iterator iter = res . entries ( ) = res . iterator ( ) ;
rank: 248
score: 99.29132080078125
patch: Iterator iter = res . size . iterator ( ) ;
rank: 248
score: 99.27764485677083
patch: Iterator iter = res . parse ( res . iterator ( ) ) ;
rank: 248
score: 99.25755399816177
patch: Iterator iter = res . add ( res ) . entries . iterator ( ) ;
rank: 248
score: 99.25633138020834
patch: Iterator < ] > iter = res . map . iterator ( ) ;
rank: 248
score: 99.25607167119566
patch: Iterator iter = res . entries . iterator ( ) ; while ( Iterator iter . has CaMeL Next ( ) )
rank: 248
score: 99.23816499255952
patch: if ( res . entries != null ) res . entries = res . entries . iterator ( ) ;
rank: 248
score: 99.21340506417411
patch: Iterator iter = res . entries . size ( ) ; for (
rank: 249
score: 99.28944396972656
patch: Iterator iter = res . entries . entries . length . iterator ( ) ;
rank: 249
score: 99.25694056919643
patch: Iterator iter = res . add . entries . iterator ( ) ;
rank: 249
score: 99.255859375
patch: this . res . entries = res . entries . iterator ( ) ;
rank: 249
score: 99.25513805042614
patch: Iterator iter = res . has CaMeL Next ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 249
score: 99.24559020996094
patch: Iterator iter = res . iterator ( ) : res . entries ( ) ;
rank: 249
score: 99.23814174107143
patch: if ( res . res != null ) res . res = res . entries . size ( ) ;
rank: 249
score: 99.23089958639706
patch: Iterator < String > iter = v . entries . entries . iterator ( ) ;
rank: 250
score: 99.29884440104166
patch: Iterator < Iterator > iter = res . entries . iter ( ) ;
rank: 250
score: 99.27579752604167
patch: Iterator iter = $STRING$ . entries . iterator ( ) ;
rank: 250
score: 99.25673540900735
patch: Iterator iter = res . entries ( ) . ( ) . entries ( ) ;
rank: 250
score: 99.25564395680146
patch: synchronized ( res ) { Iterator iter = res . value . iterator ( ) ;
rank: 250
score: 99.25462582236842
patch: Iterator iter = res . entries [ res . size ( ) ] . iterator ( ) ;
rank: 250
score: 99.2452621459961
patch: Iterator iter = res != null ? res . iterator ( ) : null ;
rank: 250
score: 99.23744506835938
patch: res . res = res ; Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 250
score: 99.23018798828124
patch: Iterator iter = res . get CaMeL Entry ( ) . entries ( ) . iterator ( ) ;
rank: 251
score: 99.29875631893383
patch: Iterator < String > iterator = res . entries ( ) . iterator ( ) ;
rank: 251
score: 99.28904622395834
patch: Iterator iter = ebe CaMeL Multiply ( res ) . iterator ( ) ;
rank: 251
score: 99.2756118774414
patch: Iterator iter = res . get CaMeL Row ( ) . iterator ( ) ;
rank: 251
score: 99.25656127929688
patch: for ( Iterator iter = res . entries ( ) . size ( ) ;
rank: 251
score: 99.25562395368304
patch: Iterator [ ] iter = res . entries . iterator ( ) ;
rank: 251
score: 99.25460994944854
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . )
rank: 251
score: 99.23741957720588
patch: if ( res . res != null && res . res . res != null )
rank: 251
score: 99.22993549547698
patch: Iterator < Object > iter = res . entries . entries . entries . iterator ( ) ;
rank: 252
score: 99.28839470358456
patch: synchronized ( res ) { res . set CaMeL Entry ( iter . key ) ;
rank: 252
score: 99.27554141773896
patch: Iterator iter = res . iterator ( ) ; = res . iterator ( ) ;
rank: 252
score: 99.255224609375
patch: Iterator < int >> iter = res . entries . iterator ( ) ;
rank: 252
score: 99.25459428267045
patch: Iterator iter = res . v . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 252
score: 99.24371337890625
patch: Iterator iter = res != null ? res . length : res . length ;
rank: 252
score: 99.23679896763393
patch: Iterator iter = res . iterator ( . size ( ) ) ;
rank: 252
score: 99.22980700041118
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) ; )
rank: 253
score: 99.2982177734375
patch: Iterator < Object > entries = res . entries ( ) ;
rank: 253
score: 99.27504069010416
patch: Iterator iter = res . entries . iterator ( ) ; = $NUMBER$ ;
rank: 253
score: 99.25587373621323
patch: Iterator iter = res . index CaMeL Of ( 0 ) . entries ( ) ;
rank: 253
score: 99.25522286551339
patch: Iterator iter = res . entries . value . iterator ( ) ;
rank: 253
score: 99.25427856445313
patch: System . arraycopy ( res , 0 , res . entries , 0 , res . length ) ;
rank: 253
score: 99.22927856445312
patch: Iterator iter = res . entries . entries [ ) . iterator ( ) ;
rank: 253
score: 99.21144456129808
patch: Iterator iter = entries . ( ) . iterator ( ) ;
rank: 254
score: 99.28673598345588
patch: Iterator iter = ebe CaMeL Multiply ( res . length ) . iterator ( ) ;
rank: 254
score: 99.25515747070312
patch: int iterator = res . entries . iterator ( ) ;
rank: 254
score: 99.25427827380952
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = v . iterator ( ) ;
rank: 254
score: 99.23646850585938
patch: Iterator iterator = v . entries ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 254
score: 99.22910563151042
patch: Iterator iter ? res . iterator ( ) . has CaMeL Next ( ) ; ) ;
rank: 255
score: 99.2978046123798
patch: res . iterator = res . entries . iterator ( ) ;
rank: 255
score: 99.25544738769531
patch: else iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 255
score: 99.25392552425987
patch: Iterator iter = v . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 255
score: 99.2425537109375
patch: Iterator iter = v [ - 1 ] . entries . iterator ( ) ;
rank: 255
score: 99.23615373883929
patch: if ( res . length != res . length ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 256
score: 99.2974853515625
patch: Iterator < T > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 256
score: 99.25419108072917
patch: final int iterator = res . entries ( ) . size ( ) ;
rank: 256
score: 99.242431640625
patch: Iterator iter = res == null ? null : res . iterator ( ) ;
rank: 256
score: 99.236083984375
patch: Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) ;
rank: 256
score: 99.21066284179688
patch: Vector res = res . entries . iterator ( ) ;
rank: 257
score: 99.28570149739583
patch: Iterator iter = res . entries [ $NUMBER$ ] . iterator ( ) ;
rank: 257
score: 99.27247721354166
patch: Iterator iter = res . contains ( res . iterator ( ) ) ;
rank: 257
score: 99.25476792279412
patch: Iterator iter = res . entries . entries ) . entries . iterator ( ) ;
rank: 257
score: 99.25360576923077
patch: Iterator < ] > entries = res . iterator ( ) ;
rank: 257
score: 99.25351097470238
patch: Iterator iter = res . iterator ( ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 257
score: 99.24217878069196
patch: Iterator iter = res == null ? null : res . length ;
rank: 257
score: 99.21021321614583
patch: Iterator iter = res . . entries ( ) . iterator ( ) ;
rank: 258
score: 99.27239990234375
patch: Iterator iter = res . iter . iter ( ) ;
rank: 258
score: 99.25444479549633
patch: Iterator iter = res . substring ( 1 ) . entries . iterator ( ) ;
rank: 258
score: 99.25355440027573
patch: res . value = res . entries . iterator ( ) . next ( ) ;
rank: 258
score: 99.241943359375
patch: Iterator iter = this . v . iterator ( ) ;
rank: 258
score: 99.23509979248047
patch: Iterator iter = res . entries ( ) . iterator ( ) + 1 ;
rank: 258
score: 99.21018763950893
patch: Iterator iter = res . entries . res . iterator ( ) ;
rank: 259
score: 99.29691859654018
patch: Iterator iter = res . entries . size ( ) - 1 ;
rank: 259
score: 99.28539021809895
patch: Iterator iter = res . entries ( ) . length ;
rank: 259
score: 99.2542724609375
patch: Iterator iter = res . Real CaMeL Vector ( ) . entries ( ) ;
rank: 259
score: 99.25294596354166
patch: Iterator iter = res ; Iterator iter = res . iterator ( ) ;
rank: 259
score: 99.2342758178711
patch: Iterator iter = res . entries ( ) . iterator ( ) ; * /
rank: 259
score: 99.22771253083882
patch: Iterator iter = res . entries . to CaMeL Array ( 0 ) . iterator ( ) ;
rank: 259
score: 99.210107421875
patch: Iterator iter = res . ( ) . entries . size ( ) ;
rank: 260
score: 99.29688218060662
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ; else
rank: 260
score: 99.27103365384616
patch: Iterator iter = res . iterator ( ) ; = null ;
rank: 260
score: 99.25293686810662
patch: Iterator iter = res . entries ( ) . replace CaMeL All ( res ) ;
rank: 260
score: 99.24141148158482
patch: Iterator iter = res . entries . iterator ( ) * 1 ;
rank: 260
score: 99.23400268554687
patch: Iterator iter = res . entries ( . size ( ) - 1 ) . iterator ( ) ;
rank: 260
score: 99.21009928385416
patch: Iterator iter = res . arraycopy ( v ) . iterator ( ) ;
rank: 261
score: 99.29623413085938
patch: int iter . iterator ( ) . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 261
score: 99.28424835205078
patch: Iterator iter = res . entries = v . entries . iterator ( ) ;
rank: 261
score: 99.25189763849431
patch: Iterator iter = res . for . iterator ( ) ; iter . has CaMeL Next ( ) ; ) {
rank: 261
score: 99.25186157226562
patch: Iterator iter = res . entries ( ) . iterator ( ) ; ) ;
rank: 261
score: 99.24094525505515
patch: Iterator iter = res == new Open CaMeL Map CaMeL Real CaMeL Vector ( this )
rank: 261
score: 99.22761804917279
patch: for ( ) { iter = res . entries . entries . iterator ( ) ;
rank: 261
score: 99.20990862165179
patch: Iterator iter = res . floor ( ) . iterator ( ) ;
rank: 262
score: 99.29525936351104
patch: Iterator < void > iter = res . entries ( ) . iterator ( ) ;
rank: 262
score: 99.28410993303571
patch: Iterator iter = res == null : res . iterator ( ) ;
rank: 262
score: 99.25338745117188
patch: Iterator iter = res . entries . index CaMeL Of ( - 1 ) ;
rank: 262
score: 99.2513760653409
patch: Iterator iter = res . entries . iter ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 262
score: 99.23383178710938
patch: Iterator iter = v . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 262
score: 99.2274234169408
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries ) {
rank: 262
score: 99.20875767299107
patch: Iterator iter = res . read ( ) . size ( ) ;
rank: 263
score: 99.29525320870536
patch: Iterator iter = res . entries . iterator ( ) - 0 ;
rank: 263
score: 99.28395708869485
patch: Iterator iter = res . entries . entries [ 0 ] . iterator ( ) ;
rank: 263
score: 99.26939392089844
patch: Iterator iter = res . entries . reverse ( ) . iterator ( ) ;
rank: 263
score: 99.25269317626953
patch: Iterator iter = res . entries . v . entries . iterator ( ) ;
rank: 263
score: 99.25089888139205
patch: List list = res . entries . iterator ( ) ; while ( list . has CaMeL Next ( ) )
rank: 263
score: 99.24978458180146
patch: Iterator < String > iter = res . entries ( ) . entries ( ) ;
rank: 263
score: 99.23329264322916
patch: Iterator iter = res . entries ( entries ) . iterator ( ) ;
rank: 263
score: 99.22672895951705
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . . iterator ( ) ;
rank: 264
score: 99.29412482766544
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ) ;
rank: 264
score: 99.26925659179688
patch: Iterator iter = res . next . entries . entries . iterator ( ) ;
rank: 264
score: 99.25262810202206
patch: Iterator iter = res . entries . index CaMeL Of ( v . length ) ;
rank: 264
score: 99.25076426630434
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) )
rank: 264
score: 99.2495361328125
patch: Iterator iter = res . entries ( $NUMBER$ ) . entries ( ) ;
rank: 264
score: 99.23313903808594
patch: if ( res != null ) Iterator iter = res . iterator ( ) ;
rank: 264
score: 99.22627981085526
patch: Iterator iter = res . get CaMeL Entry ( 0 ) . entries . iterator ( ) ;
rank: 264
score: 99.20751953125
patch: Iterator iter = res . . iterator ( ) ;
rank: 265
score: 99.29381606158088
patch: final Iterator iter = res . entries . entries ( ) . entries ( ) ;
rank: 265
score: 99.2829230813419
patch: Iterator iter = ( ( Iterator ) res . entries . iterator ( ) ) ;
rank: 265
score: 99.26810709635417
patch: Iterator iter = res . entries . remove ( ) ;
rank: 265
score: 99.25252039292279
patch: Iterator iter = res [ 0 ] . entries . entries . size ( ) ;
rank: 265
score: 99.25063254616477
patch: System . Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 265
score: 99.23943219866071
patch: Iterator iter = res . length : res . size ( ) ;
rank: 265
score: 99.23236405222039
patch: if ( res != null ) res . entries = res . entries . size ( ) ;
rank: 265
score: 99.20741373697916
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter
rank: 266
score: 99.2937899502841
patch: Iterator iter = res . iterator ( ) ; else
rank: 266
score: 99.28259995404412
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . length ) {
rank: 266
score: 99.25035028872283
patch: Iterator iter = res . list . iterator ( ) ; ; while ( iter . has CaMeL Next ( ) )
rank: 266
score: 99.24898587740384
patch: final int iter = res . entries . size ( ) ;
rank: 266
score: 99.23881530761719
patch: Iterator iter = res . iterator ( ) ; has CaMeL Next ( ) ;
rank: 266
score: 99.23106971153847
patch: Object res = res . entries . get ( 0 ) ;
rank: 266
score: 99.22526041666667
patch: Iterator iter = out . entries . iterator ( ) ;
rank: 267
score: 99.28246307373047
patch: Vector v = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 267
score: 99.2680419921875
patch: Iterator < ? > iter = res . entries . iter ( ) ;
rank: 267
score: 99.24989536830357
patch: res . set CaMeL Length ( res . length ) ; Iterator iter = res . iterator ( ) ;
rank: 267
score: 99.24867876838235
patch: Iterator iter = res . entries . iterator ( ) ; int iter = 0 ;
rank: 267
score: 99.23836023667279
patch: Iterator iter = res . contains ( 0 ) : res . size ( ) ;
rank: 267
score: 99.20652553013393
patch: if ( res . entries . size ( ) > 0 ) {
rank: 268
score: 99.29347229003906
patch: Iterator iter = res . entries ( ) . iter . iterator ( ) ;
rank: 268
score: 99.28242492675781
patch: Iterator iter = v . entries . entries ( ) . size ( ) ;
rank: 268
score: 99.2513916015625
patch: iter = res . entries . entries . entries . iterator ( ) ;
rank: 268
score: 99.24968610491071
patch: Iterator iter = res . map . entries . iterator ( ) ;
rank: 268
score: 99.23087855747768
patch: Iterator iter = res . entries ( . size ( ) ) ;
rank: 268
score: 99.22465434827302
patch: Iterator < String > iter = this . res . entries . entries . iterator ( ) ;
rank: 268
score: 99.206298828125
patch: Object [ ] v = res . entries . iterator ( ) ;
rank: 269
score: 99.282421875
patch: Iterator iter = ebe CaMeL Multiply ( this ) . iterator ( ) ;
rank: 269
score: 99.2677230834961
patch: Iterator iter = res . iter ( ) ; res . iterator ( ) ;
rank: 269
score: 99.25089263916016
patch: Iterator iter = res . substring ( ) . entries . iterator ( ) ;
rank: 269
score: 99.24925648082386
patch: Iterator iter = res . get . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 269
score: 99.24803059895834
patch: Iterator < T > iterator = res . entries . iterator ( ) ;
rank: 269
score: 99.23069458007812
patch: if ( res . entries == null ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 269
score: 99.20594889322916
patch: int < String > iter = res . entries . iterator ( ) ;
rank: 270
score: 99.24911644345238
patch: Iterator iter = res . list . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 270
score: 99.24798583984375
patch: final Iterator < ] > iter = res . entries . iterator ( ) ;
rank: 270
score: 99.23806762695312
patch: Iterator iter = res . get CaMeL Name ( ) . size ( ) ;
rank: 270
score: 99.20574951171875
patch: Iterator iter = res . end . entries . iterator ( ) ;
rank: 271
score: 99.2928237915039
patch: Iterator < String > iter = res . entries . iterator ( ) ; else
rank: 271
score: 99.27939022288604
patch: Iterator iter = res [ v . length ] . entries . iterator ( ) ;
rank: 271
score: 99.26742117745536
patch: Iterator iter = new Iterator ( res . next ( ) ) ;
rank: 271
score: 99.24889555431548
patch: Iterator iter = v . iterator ( ) ; ; while ( iter . has CaMeL Next ( ) )
rank: 271
score: 99.24789225260416
patch: int < ] > entries = res . entries . iterator ( ) ;
rank: 271
score: 99.238037109375
patch: Iterator iter = res . clone ( ) : res . iterator ( ) ;
rank: 271
score: 99.23004509420956
patch: Iterator iter ; Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 271
score: 99.22396850585938
patch: Iterator iter = res . entries . entries . iter . iterator ( ) ;
rank: 271
score: 99.20564488002232
patch: while ( res != null ) { iter . advance ( ) ;
rank: 272
score: 99.26729329427083
patch: Iterator iter = res . entries . iterator ( ) ; iter -- ;
rank: 272
score: 99.24794224330357
patch: int [ ] v = new int [ v . length ] ;
rank: 272
score: 99.24756673177083
patch: Iterator iter = res . parse ( res ) . iterator ( ) ;
rank: 272
score: 99.22984483506944
patch: if ( res != null ) res . entries = res . entries . entries ; else
rank: 273
score: 99.29185575597427
patch: Iterator < Object > iter = res . entries ( ) . iter ( ) ;
rank: 273
score: 99.278857421875
patch: Iterator iter = res . entries . entries ( ) [ 0 ] ;
rank: 273
score: 99.26723345588235
patch: Iterator iter = new Object > ( res . entries . iterator ( ) ) ;
rank: 273
score: 99.24867553710938
patch: synchronized ( res ) { res . entries = res . entries . entries . iterator ( ) ;
rank: 273
score: 99.24758676382211
patch: Iterator iter advance = res . entries . iterator ( ) ;
rank: 273
score: 99.22977388822116
patch: Iterator < String > iter = v . iterator ( ) ;
rank: 273
score: 99.20537109375
patch: int < String > res = res . entries . iterator ( ) ;
rank: 274
score: 99.29132080078125
patch: Set res . iterator ( ) . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 274
score: 99.27869524274554
patch: Iterator iter = res . length : res . iterator ( ) ;
rank: 274
score: 99.26713053385417
patch: iter iter = res . entries . iterator ( ) ;
rank: 274
score: 99.24714211856617
patch: Iterator iter = res . entries ( - - 1 ) . iterator ( ) ;
rank: 274
score: 99.23676300048828
patch: Iterator iter = res . get CaMeL Index ( ) . iterator ( ) ;
rank: 274
score: 99.2296142578125
patch: Iterator iter = res = res . entries ( ) . iterator ( ) ;
rank: 274
score: 99.20521036783855
patch: Iterator iter = Iterator . has CaMeL Next ( ) ;
rank: 275
score: 99.27859061104911
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector ;
rank: 275
score: 99.24770285866477
patch: Iterator iter = in . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 275
score: 99.24678802490234
patch: Iterator iter = res . entries . copy ( ) . iterator ( ) ;
rank: 275
score: 99.22947692871094
patch: Iterator iter = v = res . entries ( ) . iterator ( ) ;
rank: 275
score: 99.22234552556819
patch: Iterator iter = res . entries ( ) . to CaMeL Array ( ) . entries . iterator ( ) ;
rank: 276
score: 99.29125104631696
patch: Iterator iter = map . entries ( ) . iterator ( ) ;
rank: 276
score: 99.27857971191406
patch: Iterator iter = v . entries = res . entries . iterator ( ) ;
rank: 276
score: 99.26607840401786
patch: Iterator iter = this . res . entries . iter ( ) ;
rank: 276
score: 99.24739937160327
patch: Iterator iter = res . split . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 276
score: 99.24642240084134
patch: Iterator < ] : res . entries . iterator ( ) ;
rank: 276
score: 99.23658854166666
patch: Iterator iter = res . split ( 0 ) . iterator ( ) ;
rank: 276
score: 99.22868266858552
patch: if ( res != null ) { Iterator iter = res . iterator . iterator ( ) ;
rank: 276
score: 99.22216796875
patch: Iterator iter = res . entries . to CaMeL Array ( - 1 ) . iterator ( ) ;
rank: 276
score: 99.20272827148438
patch: Iterator iter = entries . has CaMeL Next ( ) ;
rank: 277
score: 99.26605987548828
patch: Iterator iter = res . entries . iterator ( ) . iter ( ) ;
rank: 277
score: 99.24628044577206
patch: Iterator iter = res . entries ( ) . replace CaMeL All ( $STRING$ ) ;
rank: 277
score: 99.24604034423828
patch: Iterator iter = res . set ( ) . entries . iterator ( ) ;
rank: 277
score: 99.23625183105469
patch: Iterator iter = res . trim ( ) . entries . iterator ( ) ;
rank: 277
score: 99.22837727864584
patch: Iterator iter = res . entries ( res . entries . length ) ;
rank: 277
score: 99.2023681640625
patch: Iterator iter = res . add ( res ) . size ( ) ;
rank: 278
score: 99.27702780330883
patch: Iterator iter = res . entries [ iter . has CaMeL Next ( ) ] ;
rank: 278
score: 99.26560621995192
patch: / Iterator iter = res . entries . iterator ( ) ;
rank: 278
score: 99.24710886101974
patch: if ( res . length == 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 278
score: 99.24618765024039
patch: Iterator < ] >> iter = res . entries ( ) ;
rank: 278
score: 99.24600982666016
patch: Iterator iter = res . length . entries ( ) . size ( ) ;
rank: 278
score: 99.22836143092105
patch: Iterator iter = res . entries ( ) ; while . has CaMeL Next ( ) ; )
rank: 278
score: 99.20210774739583
patch: Iterator iter = res . false . iterator ( ) ;
rank: 279
score: 99.29071403952206
patch: Iterator < Byte > iter = res . entries ( ) . iterator ( ) ;
rank: 279
score: 99.27674865722656
patch: Iterator iter = res [ iter . length 1 ] . iterator ( ) ;
rank: 279
score: 99.26505533854167
patch: Iterator iter = res . iterator ( ) ; Iterator iter = 0 ;
rank: 279
score: 99.24662449048913
patch: Iterator iter = res . entries 1 . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 279
score: 99.24516296386719
patch: Iterator iter = res . [ iter . has CaMeL Next ( ) ] ;
rank: 279
score: 99.22813656455592
patch: if ( res != null ) res . res = res . get CaMeL Value ( ) ;
rank: 279
score: 99.2210205078125
patch: list . set CaMeL Entry ( iter . key ( ) , iter . value ( ) ) ;
rank: 279
score: 99.20176595052084
patch: Iterator iter = res . entries . iterator ( ) ; for ( else
rank: 280
score: 99.290087890625
patch: int size = res . iterator ( ) . iterator ( ) . iterator ( ) . length ;
rank: 280
score: 99.27667236328125
patch: Iterator iter = iter . entries . entries ( ) . iterator ( ) ;
rank: 280
score: 99.2647933959961
patch: Iterator iter = res . entries . iterator ( ) ; entries = null ;
rank: 280
score: 99.24606502757354
patch: Iterator iter = res . entries ( $NUMBER$ - 1 ) . iterator ( ) ;
rank: 280
score: 99.24526145241477
patch: Iterator iter = res . entries . Iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 280
score: 99.23516845703125
patch: Iterator iter = res . get CaMeL Data ( ) . size ( ) ;
rank: 280
score: 99.22772216796875
patch: Iterator iterator = res . iterator . iterator ( ) ;
rank: 280
score: 99.22035319010416
patch: for ( ) { iter = res . entries . iterator ( ) ;
rank: 281
score: 99.28872501148896
patch: Iterator iter = res . entries ( ) . = res . iterator ( ) ;
rank: 281
score: 99.26435089111328
patch: Iterator iter = res . iterator ( ) ; res . size ( ) ;
rank: 281
score: 99.24505974264706
patch: Iterator iter = res . get CaMeL Bytes ( 0 ) . iterator ( ) ;
rank: 281
score: 99.24491882324219
patch: Iterator iter = res . entries . [ ) . size ( ) ] ;
rank: 281
score: 99.23458862304688
patch: Iterator iter = res . remove . entries ( ) . iterator ( ) ;
rank: 281
score: 99.22746725643383
patch: synchronized ( res ) { Iterator iter = res . iterator . iterator ( ) ;
rank: 281
score: 99.2199348000919
patch: Iterator < Long > iter = res . entries . entries . iterator ( ) ;
rank: 281
score: 99.20082310267857
patch: Vector res = res . entries . entries . iterator ( ) ;
rank: 282
score: 99.28819928850446
patch: Iterator iter = copy . entries ( ) . iterator ( ) ;
rank: 282
score: 99.27637481689453
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = iter . advance ( ) ;
rank: 282
score: 99.26344401041666
patch: Iterator iter ( res . iterator ( ) . iterator ( ) ) ;
rank: 282
score: 99.24479166666667
patch: for ( Iterator iter = res . size ( ) ;
rank: 282
score: 99.22740173339844
patch: entries = res . entries ; Iterator iter = res . iterator ( ) ;
rank: 282
score: 99.21988075657895
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iterator = res . iterator ( ) ;
rank: 282
score: 99.20027669270833
patch: Iterator iter = res . split . iterator ( ) ;
rank: 283
score: 99.27616613051471
patch: Iterator iter = ebe CaMeL Multiply ( v . length ) . iterator ( ) ;
rank: 283
score: 99.2439826516544
patch: Iterator iter = System . get CaMeL Property ( $STRING$ ) . iterator ( ) ;
rank: 283
score: 99.22698102678571
patch: if ( v != null ) res . res = res . entries . entries . size ( ) ;
rank: 283
score: 99.21979631696429
patch: Iterator iter : res . entries ( ) . iterator ( ) ;
rank: 284
score: 99.28737505744485
patch: Iterator < Iterator < ) > iter = res . entries . iterator ( ) ;
rank: 284
score: 99.2629623413086
patch: Iterator iter = res . entries . this . entries . iterator ( ) ;
rank: 284
score: 99.2446517944336
patch: else res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 284
score: 99.24372209821429
patch: Iterator iterator = v . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 284
score: 99.21952989366319
patch: for ( } Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) {
rank: 285
score: 99.28720703125
patch: final Iterator iter = res . entries ( ) . size ( ) ;
rank: 285
score: 99.27486419677734
patch: Iterator iter = list . entries ( ) . entries . iterator ( ) ;
rank: 285
score: 99.24453735351562
patch: Iterator iter = res . entries . size ( ) . size ( ) ;
rank: 285
score: 99.24393717447917
patch: Iterator < E > entries = res . entries . iterator ( ) ;
rank: 285
score: 99.24348449707031
patch: Object [ ] list = res . entries . to CaMeL Array ( ) ;
rank: 285
score: 99.2315444946289
patch: Iterator iter = this . v . entries . entries . iterator ( ) ;
rank: 285
score: 99.2263412475586
patch: if ( res != null ) res . ) res . res = res ;
rank: 285
score: 99.21904064360119
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . key . iterator ( ) ;
rank: 285
score: 99.19781494140625
patch: Iterator iter = res . false . entries . iterator ( ) ;
rank: 286
score: 99.24324544270833
patch: Iterator iter = Math . min ( res . entries . size ( ) , v . length ) ;
rank: 286
score: 99.23017229352679
patch: Iterator iter = res . out . entries . iterator ( ) ;
rank: 286
score: 99.19769287109375
patch: else { Iterator iter = res . entries . iterator ( ) ;
rank: 287
score: 99.2869384765625
patch: Iterator iter = res . entries ( ) . iterator ( ) ; res . iterator ( ) ;
rank: 287
score: 99.27324676513672
patch: Iterator iter = entries . entries ( ) . entries . iterator ( ) ;
rank: 287
score: 99.26216125488281
patch: Iterator iter = res . ; Iterator iter = res . iterator ( ) ;
rank: 287
score: 99.2429836107337
patch: Iterator iter = res . list . iterator ( ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 287
score: 99.24083709716797
patch: Iterator iter = res . entries . entries . entries . next ( ) ;
rank: 287
score: 99.2294921875
patch: Iterator iter = res . size ( ) : v . size ( ) ;
rank: 287
score: 99.22584635416666
patch: Iterator < Iterator < E > iter = res . iterator ( ) ;
rank: 287
score: 99.1976318359375
patch: Iterator iter = res . entries . contains . iterator ( ) ;
rank: 288
score: 99.27322387695312
patch: Iterator iter = res . entries . entries ( ) . Iterator ( ) ;
rank: 288
score: 99.26162719726562
patch: Iterator iter = res . length ; iter = res . iterator ( ) ;
rank: 288
score: 99.24284532335069
patch: Iterator iter = this . res ; while ( iter . has CaMeL Next ( ) )
rank: 288
score: 99.2423957375919
patch: Iterator iter = res [ null ] . entries ( ) . iterator ( ) ;
rank: 289
score: 99.28521728515625
patch: Iterator iter = res . entries ( ) . iterator ( ) - $NUMBER$ ;
rank: 289
score: 99.26048787434895
patch: Iterator iter . iter = res . iterator ( ) ;
rank: 289
score: 99.2427978515625
patch: Iterator iterator = v . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 289
score: 99.24053192138672
patch: Iterator iter = res . get CaMeL Format ( ) . entries ( ) ;
rank: 289
score: 99.22898864746094
patch: Iterator iter = res . remove ( - 1 ) . iterator ( ) ;
rank: 289
score: 99.22566053602431
patch: Iterator iter = res . iterator ; while ( iter . has CaMeL Next ( ) )
rank: 289
score: 99.21797943115234
patch: for ( int ) { iter = res . entries . iterator ( ) ;
rank: 289
score: 99.19704367897727
patch: final Iterator iter = entries . iterator ( ) ;
rank: 290
score: 99.28443100873162
patch: final int iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 290
score: 99.2724609375
patch: Iterator iter = res . entries . length : res . iterator ( ) ;
rank: 290
score: 99.24260919744319
patch: if ( res . length != res . length ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 290
score: 99.22893415178571
patch: Iterator iter = res . join ( ) . iterator ( ) ;
rank: 290
score: 99.2255923622533
patch: if ( res . entries != null ) res . entries = res . entries . length ;
rank: 290
score: 99.19697788783482
patch: Iterator iter = res . entries . iterator ( ) ; / *
rank: 291
score: 99.28438313802083
patch: boolean iter = res . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 291
score: 99.27217320033482
patch: Iterator iter = data . entries . entries . iterator ( ) ;
rank: 291
score: 99.2602871981534
patch: Iterator iter ( res . iterator ( ) ) ;
rank: 291
score: 99.24252464657738
patch: res . set CaMeL Length ( 0 ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 291
score: 99.24226888020833
patch: Iterator iter = res . entries ( ) . parse ( res ) ;
rank: 291
score: 99.24000767299107
patch: int [ ] res = new double [ v . length ] ;
rank: 291
score: 99.22521254595588
patch: if ( res == null ) throw new Null CaMeL Pointer CaMeL Exception ( ) ;
rank: 291
score: 99.21751644736842
patch: for ( ) { iter = res . entries . entries . entries . iterator ( ) ;
rank: 291
score: 99.19588797433036
patch: Iterator iter = res . abs ( ) . iterator ( ) ;
rank: 292
score: 99.2601318359375
patch: Iterator iter = null ; Iterator iter = res . entries . iterator ( ) ;
rank: 292
score: 99.24229329427084
patch: Iterator iter = ( int ) res . entries . iterator ( ) ;
rank: 292
score: 99.24207356770833
patch: Iterator < String > iter = res . map . iterator ( ) ;
rank: 292
score: 99.23926544189453
patch: Iterator iter = res . v . entries ( ) . size ( ) ;
rank: 292
score: 99.22515510110294
patch: if ( res != null ) res . res = res . entries ( ) ;
rank: 292
score: 99.2168212890625
patch: Iterator iter = res . entries . entries . . iterator ( ) ;
rank: 292
score: 99.1957499186198
patch: Iterator iter = res . remove . iterator ( ) ;
rank: 293
score: 99.26010131835938
patch: Iterator iter = new Iterator ( res . entries . next ( ) ) ;
rank: 293
score: 99.24198913574219
patch: Iterator * ] res . entries = res . entries . iterator ( ) ;
rank: 293
score: 99.2264175415039
patch: Iterator iter = res != null ? res . length : v . length ;
rank: 293
score: 99.21677652994792
patch: for ( int ) { iter = res . entries . entries . iterator ( ) ;
rank: 294
score: 99.27198028564453
patch: Iterator iter = res != null + v . entries . iterator ( ) ;
rank: 294
score: 99.22366768973214
patch: Object [ ] res = new Object [ res . length ] ;
rank: 294
score: 99.19520920973558
patch: Iterator < Object > iter = res . size ( ) ;
rank: 295
score: 99.28375244140625
patch: Iterator < String > iter = res . entries . iterator ( ) ) ;
rank: 295
score: 99.27163899739584
patch: Iterator iter = v [ iter . has CaMeL Next ( ) ] ;
rank: 295
score: 99.25921630859375
patch: Iterator iter = res . entries . iterator ( ) ; iterator = false ;
rank: 295
score: 99.24183872767857
patch: Iterator iter = res . entries ( ) . intern ( ) ;
rank: 295
score: 99.24163263494319
patch: System . arraycopy ( res , 0 , res . entries , 0 , res . entries . length ) ;
rank: 295
score: 99.23854166666666
patch: Iterator Iterator iter = res . entries . entries . iterator ( ) ;
rank: 295
score: 99.2247314453125
patch: Iterator iter = res . has CaMeL Next ( ) : res . length ;
rank: 295
score: 99.22097981770834
patch: Iterator iter = res . entries ( entries . iterator ( ) ) ;
rank: 295
score: 99.21626499720982
patch: Enumeration iter = res . entries ( ) . iterator ( ) ;
rank: 296
score: 99.27069091796875
patch: Iterator iter = res . length * v . entries . iterator ( ) ;
rank: 296
score: 99.24156775841347
patch: Iterator iter = res . entries . iterator ( ) ; )
rank: 296
score: 99.2383041381836
patch: Iterator iter = res . get CaMeL Type ( ) . entries ( ) ;
rank: 296
score: 99.22426350911458
patch: Iterator iter = res [ 0 ] ;
rank: 296
score: 99.22096653988487
patch: if ( v != null ) res . res = res . entries . iterator ( ) ;
rank: 296
score: 99.21614155016448
patch: Iterator iter = res . get CaMeL Entry ( this ) . entries . iterator ( ) ;
rank: 296
score: 99.19462076822917
patch: Iterator iter = res . entries . iterator ( ) ; for ( (
rank: 297
score: 99.28317696707589
patch: Iterator iter = res . iterator ( ) ; else return null ;
rank: 297
score: 99.25902381310097
patch: Iterator iter = res . entries . iterator ( ) ; .
rank: 297
score: 99.24092320033482
patch: Iterator iter = res . entries = res . size ( ) ;
rank: 297
score: 99.24076334635417
patch: Iterator iter = res . list ( 0 ) . iterator ( ) ;
rank: 297
score: 99.22074890136719
patch: if ( v != null ) res . entries . add ( res ) ;
rank: 297
score: 99.21570696149554
patch: Iterator iter >> iter = res . entries . iterator ( ) ;
rank: 297
score: 99.19385637555804
patch: Iterator iter = ebe CaMeL Multiply . entries . size ( ) ;
rank: 298
score: 99.28316004136029
patch: Iterator < Iterator > iter = res . entries ( ) . iter ( ) ;
rank: 298
score: 99.27051499310662
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = ebe CaMeL Multiply ( v ) ;
rank: 298
score: 99.25900268554688
patch: Iterator iter = res . iter ( ) ; iterator . iterator ( ) ;
rank: 298
score: 99.2406994047619
patch: Iterator iter = res . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 298
score: 99.24061802455357
patch: Iterator iter = res . entries . key . iterator ( ) ;
rank: 298
score: 99.22062683105469
patch: if ( res != null ) res . res = res . entries . ;
rank: 298
score: 99.21536593967014
patch: for ( int Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) {
rank: 298
score: 99.19382887620192
patch: Iterator > iter = res . entries . iterator ( ) ;
rank: 299
score: 99.28272840711806
patch: boolean iter = res . entries . iterator ( ) . iterator ( ) != null ;
rank: 299
score: 99.25898088727679
patch: Iterator iter = res . entries . name . iterator ( ) ;
rank: 299
score: 99.24046325683594
patch: Iterator iter = res . entries ( ) . start . entries ( ) ;
rank: 299
score: 99.22059849330357
patch: Iterator iter = v . iterator ( ) ; while ( ; iter . has CaMeL Next ( ) )
rank: 299
score: 99.19364711216518
patch: Iterator iter = res . get ( ) . size ( ) ;
rank: 300
score: 99.28193664550781
patch: final Iterator < Class > iter = res . entries . iterator ( ) ;
rank: 300
score: 99.25884540264423
patch: Iterator iter = res . iterator ( ) ; iterator ++ ;
rank: 300
score: 99.24019077845982
patch: Iterator * ] res = res . entries . iterator ( ) ;
rank: 300
score: 99.24016779119319
patch: Iterator iter = get . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 300
score: 99.23733956473214
patch: int [ ] res = new double [ res . length ] ;
rank: 300
score: 99.22137451171875
patch: Iterator iter = res . exp . entries . iterator ( ) ;
rank: 300
score: 99.22030639648438
patch: Iterator iter . has CaMeL Next ( ) ;
rank: 300
score: 99.21511840820312
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector >
rank: 300
score: 99.19357096354166
patch: Iterator iter = res [ iter . has CaMeL Next ( ) ) ;
rank: 301
score: 99.28084564208984
patch: int iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 301
score: 99.26832580566406
patch: res . set CaMeL Entry ( iter . has CaMeL Next ( ) ) ;
rank: 301
score: 99.25823567708333
patch: Iterator < Entry > iter = res . entries . iter ( ) ;
rank: 301
score: 99.24017333984375
patch: / * ] res . entries = res . entries . iterator ( ) ;
rank: 301
score: 99.2400390625
patch: Iterator iter = Integer . parse CaMeL Int ( v [ 0 ] ) . iterator ( ) ;
rank: 301
score: 99.22047526041666
patch: Iterator iter = Math . iterator ( res . size ( ) ) ;
rank: 301
score: 99.22020612444196
patch: / * Iterator iter = res . iterator . iterator ( ) ;
rank: 301
score: 99.21495297080592
patch: Iterator iter = res . entries [ res . length ] . entries . iterator ( ) ;
rank: 302
score: 99.26786041259766
patch: Iterator iter = res . length . entries ( ) . entries ( ) ;
rank: 302
score: 99.23985706676136
patch: entries . iterator ( ) . iterator ( ) ;
rank: 302
score: 99.23961871603261
patch: Iterator iter = Integer . parse CaMeL Int ( res . to CaMeL String ( ) . trim ( ) ) ;
rank: 302
score: 99.236572265625
patch: if ( res . length > 0 ) { res . advance ( ) ;
rank: 302
score: 99.22023010253906
patch: Iterator iter = res != null ? res . size ( ) : 1 ;
rank: 302
score: 99.22014973958333
patch: Iterator < E > iter = res . iterator . iterator ( ) ;
rank: 302
score: 99.21487862723214
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( res . iterator ( ) ) ;
rank: 302
score: 99.1917215983073
patch: Iterator iter = v . length . iterator ( ) ;
rank: 303
score: 99.2806037454044
patch: Iterator < Short > iter = res . entries ( ) . iterator ( ) ;
rank: 303
score: 99.26738630022321
patch: Iterator iter = res . entries . get . iterator ( ) ;
rank: 303
score: 99.25707289751838
patch: Iterator iter = res . length ; Iterator iter = res . iterator ( ) ;
rank: 303
score: 99.23970794677734
patch: Iterator iter = res . get CaMeL Parent ( ) . entries ( ) ;
rank: 303
score: 99.22009887695313
patch: Iterator iter = res . entries ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 303
score: 99.2141446200284
patch: Iterator iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) . entries . iterator ( ) ;
rank: 303
score: 99.19126674107143
patch: Iterator iter = entries . trim ( ) . iterator ( ) ;
rank: 304
score: 99.25667317708333
patch: Iterator iter = $STRING$ . iter ( res . iterator ( ) ) ;
rank: 304
score: 99.23960182883523
patch: Iterator iter = v . iterator . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 304
score: 99.2396011352539
patch: Iterator iter = res . entries ( ) ; list . iterator ( ) ;
rank: 304
score: 99.219677734375
patch: Iterator iter = v . entries ( ) ) . iterator ( ) ;
rank: 304
score: 99.2140625
patch: final Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 304
score: 99.1907207782452
patch: Iterator iter = res . contains ( v . length ) ;
rank: 305
score: 99.28025309244792
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) - 1 ;
rank: 305
score: 99.26603698730469
patch: Iterator iter = v != null : res . entries . iterator ( ) ;
rank: 305
score: 99.21963019120066
patch: if ( v != null ) { Iterator iter = res . entries . iterator ( ) ;
rank: 305
score: 99.19063023158482
patch: Iterator iter = res . decode ( ) . iterator ( ) ;
rank: 306
score: 99.2801154641544
patch: Iterator < boolean > iter = res . entries ( ) . iterator ( ) ;
rank: 306
score: 99.2393863075658
patch: Iterator iter = res . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 306
score: 99.21942138671875
patch: if ( res != null ) res . ) res . entries = res . entries . length ;
rank: 306
score: 99.21796526227679
patch: Iterator iter = res . value ( ) . iterator ( ) ;
rank: 306
score: 99.21343587239583
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res ) {
rank: 306
score: 99.19050816127232
patch: Iterator iter = v . trim ( ) . iterator ( ) ;
rank: 307
score: 99.2545166015625
patch: Iterator iterator = res . entries . entries . iterator ( ) ;
rank: 307
score: 99.23929036458334
patch: synchronized ( res ) { res . entries = res . entries ; }
rank: 307
score: 99.23819673978366
patch: this . res . iterator ( ) . iterator ( ) ;
rank: 307
score: 99.218994140625
patch: if ( res != null ) { Iterator iter = v . iterator ( ) ;
rank: 307
score: 99.2131014737216
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector > iter ;
rank: 308
score: 99.2799072265625
patch: int entries = res . entries . iterator ( ) . size ( ) ;
rank: 308
score: 99.26528751148896
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . set CaMeL Entry ( res ) ;
rank: 308
score: 99.25449044363839
patch: Iterator iter = res . entries . iterator ( ) ; / /
rank: 308
score: 99.23910701976104
patch: if ( res == null ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 308
score: 99.23784637451172
patch: Iterator iter = res . entries ( ) ; super . entries ( ) ;
rank: 308
score: 99.23446655273438
patch: Iterator iter = res . Real CaMeL Vector ( ) . size ( ) ;
rank: 308
score: 99.21888950892857
patch: Iterator iter = res . iterator ( ) ; while ( ; )
rank: 308
score: 99.21259508634868
patch: Iterator iter . advance ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 308
score: 99.18992106119792
patch: Iterator iter = res . v . size ( ) ;
rank: 309
score: 99.25444684709821
patch: Iterator iter = new Iterator ( res . size ( ) ) ;
rank: 309
score: 99.23900305706522
patch: Iterator iter = res 1 . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 309
score: 99.2374267578125
patch: int iter = res . size ( ) ;
rank: 309
score: 99.23395538330078
patch: if ( v . length > 0 ) { res . advance ( ) ;
rank: 309
score: 99.21829044117646
patch: Iterator iter = res . iterator ( res . size ( ) - 1 ) ;
rank: 309
score: 99.21666541466347
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector
rank: 309
score: 99.2123779296875
patch: data = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 309
score: 99.18962751116071
patch: Iterator iter = res . log . entries . iterator ( ) ;
rank: 310
score: 99.27938039679276
patch: Iterator iter = res . entries entries ( ) . entries ( ) . iterator ( ) ;
rank: 310
score: 99.25444684709821
patch: Iterator iter = this . res . entries . entries ( ) ;
rank: 310
score: 99.23797052556819
patch: Iterator iter = data . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 310
score: 99.23728841145834
patch: Iterator < ] : res . entries ( ) . iterator ( ) ;
rank: 310
score: 99.233935546875
patch: Iterator iter = res . add ( this ) . size ( ) ;
rank: 310
score: 99.218017578125
patch: if ( res . res != null ) res . res = res . entries . iterator ( ) ;
rank: 310
score: 99.21624755859375
patch: Iterator iter = res . read . entries ( ) . iterator ( ) ;
rank: 310
score: 99.1893798828125
patch: Iterator iter = res [ ) . entries . iterator ( ) ] ;
rank: 311
score: 99.27923905222039
patch: Iterator < Iterator < ? > iter = res . entries ( ) . iterator ( ) ;
rank: 311
score: 99.25347137451172
patch: Iterator iter = res . entries . iterator ( ) ; iterator < ) ;
rank: 311
score: 99.23680701622597
patch: Iterator < ] > iter = res . size ( ) ;
rank: 311
score: 99.2179943266369
patch: for ( Iterator iter = res . entries ( ) ; iter . has CaMeL Next ( ) ; )
rank: 311
score: 99.21621704101562
patch: Iterator iter = res . get CaMeL Index ( ) ;
rank: 312
score: 99.25337219238281
patch: Iterator iter = res . get $NUMBER$ res ( ) . iterator ( ) ;
rank: 312
score: 99.2177001953125
patch: synchronized ( res ) { Iterator iter = v . iterator ( ) ;
rank: 312
score: 99.21601104736328
patch: Iterator iter = res . iterator ( ) : v . iterator ( ) ;
rank: 312
score: 99.2122802734375
patch: while ( res . iterator ( ) . has CaMeL Next ( ) ) {
rank: 312
score: 99.18905436197916
patch: Iterator iter = res . [ iter . has CaMeL Next ( ) ;
rank: 313
score: 99.27880096435547
patch: Iterator iter = 0 . res . entries ( ) . iterator ( ) ;
rank: 313
score: 99.23757934570312
patch: System . arraycopy ( res . entries , 0 , res . entries ) ;
rank: 313
score: 99.18836059570313
patch: Iterator iter = res . advance ( ) ;
rank: 314
score: 99.27773565995066
patch: Iterator < String > iter = res . entries = res . entries . iterator ( ) ;
rank: 314
score: 99.26392319623162
patch: synchronized ( iter ) { Iterator iter = res . entries . iterator ( ) ;
rank: 314
score: 99.23752759850544
patch: Iterator iter = res . set . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 314
score: 99.23326110839844
patch: Iterator iter = res . entries . to CaMeL Array ( ) . length ;
rank: 314
score: 99.21764555431548
patch: Iterator iter = res . entries ( ) . iterator ( ) ; 0 . = v . length ;
rank: 314
score: 99.21142578125
patch: Iterator < Object > iter = v . entries . iterator ( ) ;
rank: 315
score: 99.27647399902344
patch: Iterator < int 1 : res . entries ( ) . iterator ( ) ;
rank: 315
score: 99.25324358258929
patch: Iterator iter Iterator iter = res . entries . iterator ( ) ;
rank: 315
score: 99.23609924316406
patch: Iterator iter = res . entries ( ) . notify CaMeL All ( ) ;
rank: 315
score: 99.21759643554688
patch: if ( res != null ) res . res = res . entries . entries . iterator ( )
rank: 315
score: 99.21135397518383
patch: Iterator iter = res . entries [ res . length ] . iterator ( ) ;
rank: 315
score: 99.18751831054688
patch: int iter = res . entries . length ;
rank: 316
score: 99.26334874770221
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . set CaMeL Entry ( v ) ;
rank: 316
score: 99.2366610440341
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) continue ;
rank: 316
score: 99.23599679129464
patch: Iterator iter = res . delete ( ) . iterator ( ) ;
rank: 316
score: 99.23294830322266
patch: Iterator iter = res . add . entries . entries . iterator ( ) ;
rank: 316
score: 99.21750710227273
patch: Iterator iter = res . entries ( res ) ;
rank: 316
score: 99.18634033203125
patch: Iterator iter = res . class . iterator ( ) ;
rank: 317
score: 99.276123046875
patch: boolean iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 317
score: 99.26328412224265
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ; *
rank: 317
score: 99.25270080566406
patch: Iterator iter = res . entries . iterator ( ) ; iterator != null ;
rank: 317
score: 99.23651733398438
patch: Iterator list = res . iterator ( ) ; while ( list . has CaMeL Next ( ) )
rank: 317
score: 99.2350082397461
patch: Iterator iter = res . entries ( ) . min . iterator ( ) ;
rank: 317
score: 99.21714564732143
patch: Iterator iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) ) ;
rank: 318
score: 99.26268813189338
patch: Iterator iter = res . entries . ebe CaMeL Multiply ( v . length ) ;
rank: 318
score: 99.23628566576087
patch: Iterator iter = res . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) ) {
rank: 318
score: 99.234814453125
patch: Iterator iter = res . list ( ) ;
rank: 318
score: 99.23189544677734
patch: Iterator iter = res != null ? res . entries . iterator ( ) ;
rank: 318
score: 99.21685180664062
patch: Iterator iter = res . Iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 318
score: 99.21054559004934
patch: Iterator < float [ ] > iter = res . entries . entries . iterator ( ) ;
rank: 318
score: 99.1846923828125
patch: Iterator iter = res . matches ( this ) . iterator ( ) ;
rank: 319
score: 99.27549743652344
patch: Iterator iter = res . entries , entries = res . iterator ( ) ;
rank: 319
score: 99.25204903738839
patch: Iterator iter = new Iterator ( res . entries ( ) ) ;
rank: 319
score: 99.23595081676136
patch: Iterator iter = res . key . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 319
score: 99.23399861653645
patch: Iterator iter = res . entries . copy ( ) ;
rank: 319
score: 99.23172760009766
patch: Iterator iter = res . get CaMeL Class ( ) . size ( ) ;
rank: 319
score: 99.21684713924633
patch: if ( v != null ) res . entries = res . entries . length ;
rank: 319
score: 99.21259416852679
patch: Iterator iter = res . trim ( ) . entries ( ) ;
rank: 319
score: 99.21036783854167
patch: Iterator iter += res . entries . iterator ( ) ;
rank: 319
score: 99.1845703125
patch: Iterator < Class > iter = res . entries . size ( ) ;
rank: 320
score: 99.26140998391544
patch: Iterator iter = ( double [ ] ) res . entries . iterator ( ) ;
rank: 320
score: 99.25164031982422
patch: Iterator iter = 0 ; iter = res . entries . iterator ( ) ;
rank: 320
score: 99.23587036132812
patch: Iterator iter = this . list . iterator ( ) ;
rank: 320
score: 99.23394220525569
patch: final int iter = res . iterator ( ) ;
rank: 320
score: 99.23165457589286
patch: int [ ] v = new int [ res . length ] ;
rank: 320
score: 99.21669921875
patch: Iterator res = res . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 320
score: 99.2099609375
patch: Iterator iter = res . entries . entries . iterator ( ) ; while (
rank: 320
score: 99.18405386117789
patch: if ( res != null ) res . advance ( ) ;
rank: 321
score: 99.27490234375
patch: Iterator < String > iter = res . entries . iterator ( ) ; }
rank: 321
score: 99.26123046875
patch: Iterator iter = ( res . entries ( ) ) . iterator ( ) ;
rank: 321
score: 99.25110581341912
patch: Iterator iter = res . entries . reverse ( res . entries ( ) ) ;
rank: 321
score: 99.23563058035714
patch: try { Iterator iter = res . list . iterator ( ) ;
rank: 321
score: 99.23349233774039
patch: final int iter = res . entries ( ) . length ;
rank: 321
score: 99.23158264160156
patch: Iterator iter = res . get CaMeL Id ( ) . size ( ) ;
rank: 321
score: 99.2166278545673
patch: if ( v != null && v . length > 0 )
rank: 321
score: 99.20985171669408
patch: Iterator iter = res . get CaMeL Entry ( $STRING$ ) . entries . iterator ( ) ;
rank: 321
score: 99.18365948016827
patch: Iterator ] res = res . entries . iterator ( ) ;
rank: 322
score: 99.274658203125
patch: Iterator < Class > iter = res . iterator ( ) ;
rank: 322
score: 99.26074981689453
patch: Iterator iter = res . length = res . entries . iterator ( ) ;
rank: 322
score: 99.24976399739583
patch: Iterator iter . Iterator iter = res . entries . iterator ( ) ;
rank: 322
score: 99.2352627840909
patch: Vector iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 322
score: 99.23237609863281
patch: res . entries = ( Iterator [ ] ) res . entries ( ) ;
rank: 322
score: 99.23115539550781
patch: Iterator iter = res . ebe CaMeL Multiply ( ) . entries ( ) ;
rank: 322
score: 99.21586528577302
patch: if ( res . entries != null && res . entries . entries . length > 0 )
rank: 322
score: 99.18316650390625
patch: List res = res . entries . entries . iterator ( ) ;
rank: 323
score: 99.27460075827206
patch: Iterator < Iterator < Iterator > iter = res . entries . iterator ( ) ;
rank: 323
score: 99.26034109933036
patch: Iterator iter = key . entries ( ) . iterator ( ) ;
rank: 323
score: 99.24969012920673
patch: Iterator iter = res . entries . iter ( ) ; ;
rank: 323
score: 99.23524058948864
patch: Iterator iter = list . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 323
score: 99.23227108226104
patch: if ( res . entries == null ) res . entries = res . entries ;
rank: 323
score: 99.21578543526786
patch: if ( res != null ) res . res = res . entries . entries . get ( ) ;
rank: 323
score: 99.20934477306548
patch: Iterator iter = res . entries ( ) . Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 324
score: 99.27440688189338
patch: Iterator < Iterator > iterator = res . entries ( ) . iterator ( ) ;
rank: 324
score: 99.24949645996094
patch: Iterator iter = res . entries . iterator ( ) ; iterator = ) ;
rank: 324
score: 99.23519897460938
patch: Iterator iter = size . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 324
score: 99.21483503069196
patch: Iterator iter ; try { iter = res . iterator ( ) ;
rank: 325
score: 99.27430635340073
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ; }
rank: 325
score: 99.26009928385416
patch: Iterator iter = this . ( ) . entries . iterator ( ) ;
rank: 325
score: 99.2347745028409
patch: iter = res . entries . size ( ) ;
rank: 325
score: 99.23069545200893
patch: int iterator = res . entries ( ) . size ( ) ;
rank: 325
score: 99.23054504394531
patch: / * try { Iterator iter = res . entries . iterator ( ) ;
rank: 325
score: 99.21470424107143
patch: Iterator iter = res ) . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 325
score: 99.21060180664062
patch: Iterator iter = Iterator . entries . iterator ( ) ;
rank: 325
score: 99.20828450520834
patch: Iterator < String > iter = this . entries . iterator ( ) ;
rank: 325
score: 99.18242536272321
patch: Iterator iter = res . name ( ) . iterator ( ) ;
rank: 326
score: 99.2600326538086
patch: Iterator iter = res . entries ( ) == null . iterator ( ) ;
rank: 326
score: 99.24869791666667
patch: Iterator iter = res . entries . = res . entries ( ) ;
rank: 326
score: 99.23040008544922
patch: return new Open CaMeL Map CaMeL Real CaMeL Vector ( res , this ) ;
rank: 326
score: 99.21433803013393
patch: if ( res . length != res . length ) return res ;
rank: 326
score: 99.2098388671875
patch: Iterator iter > res = res . entries . iterator ( ) ;
rank: 326
score: 99.20750843394886
patch: Iterator iter = res . entries . Open CaMeL Map CaMeL Real CaMeL Vector ( ) . entries ( ) ;
rank: 326
score: 99.18219401041667
patch: Iterator iter = res . entries . iterator ( ) ; return null ;
rank: 327
score: 99.25931549072266
patch: Iterator iter = res . [ 1 ] . entries . iterator ( ) ;
rank: 327
score: 99.23039027622768
patch: return new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 327
score: 99.20688011532738
patch: Iterator < double [ ] > iter = res . entries . entries . entries . iterator ( ) ;
rank: 327
score: 99.18158830915179
patch: Iterator iter = res . true . entries . iterator ( ) ;
rank: 328
score: 99.27369791666666
patch: Iterator < String > res = res . entries . iterator ( ) ;
rank: 328
score: 99.24798943014706
patch: Iterator iter = ( Iterator ) res . entries ( ) . entries ( ) ;
rank: 328
score: 99.23429790296052
patch: Iterator iter = v . iterator ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 328
score: 99.22992350260417
patch: Iterator iter = res . entries . to CaMeL Array ( res ) ;
rank: 328
score: 99.21400282118056
patch: Iterator iter = v . iterator ( ) ; while . has CaMeL Next ( ) )
rank: 328
score: 99.20625305175781
patch: for ( } Open CaMeL Map CaMeL Real CaMeL Vector res : res ) {
rank: 328
score: 99.18070845170455
patch: Iterator iter = res . size ( ) ; }
rank: 329
score: 99.27359212239584
patch: final Iterator iter = res . iterator ( ) . iterator ( ) ;
rank: 329
score: 99.24771554129464
patch: Iterator iter = res . entries . iterator ( ) ; ) ;
rank: 329
score: 99.22990417480469
patch: int iter = res . entries . to CaMeL Array ( ) . length ;
rank: 329
score: 99.2136474609375
patch: Iterator iter = res . entries . iterator ( ) ; while . has CaMeL Next ( ) )
rank: 329
score: 99.20613367417279
patch: Iterator < String > iter = this . entries . entries . iterator ( ) ;
rank: 329
score: 99.18059430803571
patch: Iterator iter = v . copy ( ) . iterator ( ) ;
rank: 330
score: 99.27357393152573
patch: Iterator < String > iter = res . entries = res . iterator ( ) ;
rank: 330
score: 99.23401460193452
patch: Iterator iter = iter . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 330
score: 99.22985076904297
patch: Iterator iter = res . get CaMeL Instance ( ) . entries ( ) ;
rank: 331
score: 99.27340494791666
patch: Iterator < ? > iterator = res . entries . iterator ( ) ;
rank: 331
score: 99.25765991210938
patch: Real CaMeL Vector res = new Real CaMeL Vector ( this , this ) ;
rank: 331
score: 99.24728628305289
patch: Iterator iter = res . iterator ( ) ; return res ;
rank: 331
score: 99.23355102539062
patch: Iterator iter = v . list . iterator ( ) ;
rank: 331
score: 99.2298095703125
patch: Iterator < E > iterator = res . entries . iterator ( ) ;
rank: 331
score: 99.21300330528847
patch: Iterator < T > iter = v . iterator ( ) ;
rank: 331
score: 99.17906842912946
patch: Iterator iter = res . load ( ) . entries ( ) ;
rank: 332
score: 99.2731574563419
patch: Iterator < Long > iter = res . entries ( ) . iterator ( ) ;
rank: 332
score: 99.2469711303711
patch: Iterator iter = res . entries . iterator ( ) ; ) return res ;
rank: 332
score: 99.2331210049716
patch: iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 332
score: 99.22909545898438
patch: Iterator < ? ] : res . entries ( ) . iterator ( ) ;
rank: 332
score: 99.20657784598214
patch: Iterator iter < String > iter = res . iterator ( ) ;
rank: 332
score: 99.20417865953948
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = res . entries ( ) ;
rank: 332
score: 99.17849731445312
patch: Iterator iter = res . entries . clone ( ) ;
rank: 333
score: 99.2468505859375
patch: Iterator iter = entries . get ( res . iterator ( ) ) ;
rank: 333
score: 99.23258463541667
patch: Iterator iter = map . entries . iterator ( ) ;
rank: 333
score: 99.20636749267578
patch: Iterator iter = res != null ? res . iterator ( ) : 0 ;
rank: 333
score: 99.20396931966145
patch: Iterator iter . has CaMeL Next ( ) ; ) ;
rank: 333
score: 99.17843862680289
patch: Iterator iter = v . entries . iterator ( ) ; ;
rank: 334
score: 99.25674002511161
patch: Iterator iter = iter . entries ( ) . entries ( ) ;
rank: 334
score: 99.23248612253289
patch: Iterator iter = v . length ; while ( iter . has CaMeL Next ( ) ) {
rank: 334
score: 99.22804260253906
patch: Iterator iter = res . entries ( ) ; iterator . next ( ) ;
rank: 334
score: 99.2126697358631
patch: Iterator Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 334
score: 99.20370965254934
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : this . res . entries ) {
rank: 335
score: 99.27215576171875
patch: int size = res . entries . iterator ( ) . size ( ) ;
rank: 335
score: 99.25661057692308
patch: Iterator iter = v [ iter . iterator ( ) ] ;
rank: 335
score: 99.24636606069711
patch: Iterator iter iterator = res . entries . iterator ( ) ;
rank: 335
score: 99.2324855638587
patch: Iterator iter = res . get ( res . entries . size ( ) - 1 ) . iterator ( ) ;
rank: 335
score: 99.22766927083333
patch: Iterator < T > iter = res . entries . entries ( ) ;
rank: 335
score: 99.22752380371094
patch: Iterator iter = res . entries . entries . data . iterator ( ) ;
rank: 335
score: 99.21255313648896
patch: Iterator iter = v . entries ( ) . iterator ( ) ; while ( )
rank: 335
score: 99.20608285757211
patch: Iterator iter = res . index CaMeL Of ( null ) ;
rank: 335
score: 99.17804827008929
patch: int iter = res . entries . entries . size ( ) ;
rank: 336
score: 99.27201120476974
patch: if ( res . entries != null ) iter = res . entries . iterator ( ) ;
rank: 336
score: 99.25658416748047
patch: Iterator iter = res . entries . length . entries . iterator ( ) ;
rank: 336
score: 99.24593912760416
patch: Iterator iter = Math . list ( res . iterator ( ) ) ;
rank: 336
score: 99.23246042351974
patch: synchronized ( this ) { res . entries = res . entries . iterator ( ) ; }
rank: 336
score: 99.2266845703125
patch: List iter = res . entries . entries . entries . iterator ( ) ;
rank: 336
score: 99.2122802734375
patch: System . arraycopy ( res , 0 , res , 0 , res . length ) ;
rank: 336
score: 99.20316938920455
patch: Iterator iter = ! res . iterator ( ) ;
rank: 337
score: 99.27158900669643
patch: int size = res . iterator ( ) . size ( ) ;
rank: 337
score: 99.24557291666666
patch: Iterator iter = res . get ( $STRING$ ) . iterator ( ) ;
rank: 337
score: 99.2321246603261
patch: for ( int iterator = res . entries . size ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 337
score: 99.212255859375
patch: Iterator iter = res . iterator ( ) Iterator . iterator ( ) ;
rank: 337
score: 99.2056884765625
patch: Iterator iter = res . arraycopy ( res ) . iterator ( ) ;
rank: 337
score: 99.20271381578948
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector >= iter = res . iterator ( ) ;
rank: 338
score: 99.27093864889706
patch: Iterator < res > iter = res . entries ( ) . iterator ( ) ;
rank: 338
score: 99.2455322265625
patch: Iterator iter = res . get ( null ) . iterator ( ) ;
rank: 338
score: 99.23175920758929
patch: Iterator iter = Math . max ( res . entries . size ( ) , v . length ) ;
rank: 338
score: 99.22655378069196
patch: synchronized ( res ) { iter = res . iterator ( ) ;
rank: 338
score: 99.226318359375
patch: Iterator iter = res . entries . size ( ) . entries ( ) ;
rank: 338
score: 99.21204898231908
patch: Iterator iter = res . entries ( ) ; Iterator iter = res . iterator ( ) ;
rank: 338
score: 99.20564488002232
patch: Iterator iter = res . name . entries . iterator ( ) ;
rank: 338
score: 99.20233154296875
patch: Iterator iter = res . entries . length ; while ( iter . has CaMeL Next ( ) )
rank: 339
score: 99.26993560791016
patch: Iterator iter = $NUMBER$ : res . entries ( ) . iterator ( ) ;
rank: 339
score: 99.24478352864584
patch: Iterator iter = res . get ( $NUMBER$ ) . iterator ( ) ;
rank: 339
score: 99.23173191236413
patch: Iterator iter = res . entries $NUMBER$ . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 339
score: 99.22587585449219
patch: Iterator iter = res . [ iter . entries . size ( ) ] ;
rank: 339
score: 99.21195678710937
patch: Iterator entries = res . iterator ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 339
score: 99.20541817801339
patch: Iterator iter = res . set . entries . iterator ( ) ;
rank: 339
score: 99.20142886513158
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = iter . iterator ( ) ;
rank: 339
score: 99.17770385742188
patch: Iterator iter = res . Math . iterator ( ) ;
rank: 340
score: 99.26946614583333
patch: iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 340
score: 99.25572967529297
patch: Iterator iter = v == null : res . entries . iterator ( ) ;
rank: 340
score: 99.24474080403645
patch: / iter = res . entries . iterator ( ) ;
rank: 340
score: 99.23159644717262
patch: iter = res . entries . size ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 340
score: 99.22535807291666
patch: Iterator iter = res [ 1 ] . entries . size ( ) ;
rank: 340
score: 99.22394670758929
patch: Iterator * ] entries = res . entries . iterator ( ) ;
rank: 340
score: 99.20496368408203
patch: Iterator iter = res . get CaMeL Format ( ) . iterator ( ) ;
rank: 340
score: 99.17769077845982
patch: try { Iterator iter = res . entries . size ( ) ;
rank: 341
score: 99.23114304315476
patch: Iterator iter = res . iterator ( ) ; while ( res . has CaMeL Next ( ) ) {
rank: 341
score: 99.2237079326923
patch: int < ] : res . entries . iterator ( ) ;
rank: 341
score: 99.21168009440105
patch: Collection iter = res . entries . iterator ( ) ;
rank: 341
score: 99.20364379882812
patch: Iterator iter = res . iterator ( ) : v . size ( ) ;
rank: 341
score: 99.20014504825367
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : this . res ) {
rank: 342
score: 99.26912747896634
patch: Iterator < ) > iter = res . iterator ( ) ;
rank: 342
score: 99.25541687011719
patch: Iterator iter = list . entries . entries ( ) . iterator ( ) ;
rank: 342
score: 99.23105690696023
patch: Iterator iter = res . entries . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 342
score: 99.22514343261719
patch: Iterator iter = res . add ( ) . entries . iterator ( ) ;
rank: 342
score: 99.22343175551471
patch: synchronized ( res ) { Iterator iter = res . entries . size ( ) ;
rank: 342
score: 99.2115478515625
patch: Iterator iter = v . iterator ( res . entries ( ) ) ;
rank: 342
score: 99.1995620727539
patch: Iterator < int ) { iter = res . entries . iterator ( ) ;
rank: 342
score: 99.17679268973214
patch: Iterator iter = v . this . entries . iterator ( ) ;
rank: 343
score: 99.25529479980469
patch: Iterator iter = res [ v . length 1 ] . iterator ( ) ;
rank: 343
score: 99.24410247802734
patch: Iterator iter = res . length ; iterator = res . entries ( ) ;
rank: 343
score: 99.23097922585227
patch: Iterator iter = res . list . iter ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 343
score: 99.22486290564903
patch: Iterator iter = res . entries . iterator iterator ( ) ;
rank: 343
score: 99.2035903930664
patch: Iterator iter = res . get CaMeL Type ( ) . iter ( ) ;
rank: 343
score: 99.1994987936581
patch: Iterator < Open CaMeL Map CaMeL Entry > iter = res . iterator ( ) ;
rank: 343
score: 99.17647879464286
patch: Iterator iter = res . entries > entries . iterator ( ) ;
rank: 344
score: 99.26896587171052
patch: final int entries = res . iterator ( ) . iterator ( ) . size ( ) ;
rank: 344
score: 99.24341692243304
patch: Iterator iter = res . entries . map . iterator ( ) ;
rank: 344
score: 99.22304124098558
patch: final int iterator = res . entries . iterator ( ) ;
rank: 344
score: 99.21087239583333
patch: if ( res != null ) res . res = res . res ;
rank: 344
score: 99.19934953962054
patch: Iterator iter += res . entries . entries . iterator ( ) ;
rank: 344
score: 99.1761474609375
patch: Iterator v = res . entries . iterator ( ) ;
rank: 345
score: 99.25444793701172
patch: Open CaMeL Map CaMeL Real CaMeL Vector ( res , v . length ) ;
rank: 345
score: 99.24324544270833
patch: Iterator iter = res . load ( res . iterator ( ) ) ;
rank: 345
score: 99.23046875
patch: System . arraycopy ( res , 0 , res . entries , 0 , v . length ) ;
rank: 345
score: 99.22286987304688
patch: Iterator iter = res . entries . iterator = res . entries ( ) ;
rank: 345
score: 99.2108154296875
patch: if ( res != res . entries . size ( ) ) return res ;
rank: 345
score: 99.19896298363095
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter . has CaMeL Next ( ) ; ) {
rank: 345
score: 99.17490931919643
patch: Iterator iter = res . get . entries . iterator ( ) ;
rank: 346
score: 99.26750183105469
patch: Iterator iter = res . entries ( ) . iterator ( ) ; break ;
rank: 346
score: 99.23036411830357
patch: iter = v . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 346
score: 99.22386932373047
patch: Iterator iter = res . entries . iterator ( . size ( ) ) ;
rank: 346
score: 99.22271728515625
patch: Iterator iter = new String [ res . entries . iterator ( ) ] ;
rank: 346
score: 99.2107177734375
patch: Iterator iter = res . iterator ( ) res . iterator ( ) ;
rank: 346
score: 99.19892963610198
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = v . entries ( ) ;
rank: 347
score: 99.26738424862133
patch: Iterator < Object > iterator = res . entries ( ) . iterator ( ) ;
rank: 347
score: 99.2302013578869
patch: Iterator iter = v . iterator ( ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 347
score: 99.21035621279762
patch: Iterator iter = res . iterator . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 347
score: 99.19880676269531
patch: Iterator iter && res . iterator ( ) . has CaMeL Next ( ) ;
rank: 347
score: 99.17458089192708
patch: int res = iter . has CaMeL Next ( ) ;
rank: 348
score: 99.26692708333333
patch: final Iterator iterator = res . entries ( ) . iterator ( ) ;
rank: 348
score: 99.24290114182692
patch: Iterator iter = res . entries . iterator ( ) ; iter
rank: 348
score: 99.2294391134511
patch: Iterator list = res . entries . iterator ( ) ; while ( list . has CaMeL Next ( ) ) {
rank: 348
score: 99.2232437133789
patch: Iterator iter = res . entries . substring ( ) . iterator ( ) ;
rank: 348
score: 99.22203871783088
patch: Iterator < ] >> iter = res . entries ( ) . iterator ( ) ;
rank: 348
score: 99.20970394736842
patch: if ( v != null ) res . entries = res . entries . iterator ( ) ;
rank: 348
score: 99.1985196200284
patch: Iterator iter = res . entries . to CaMeL Array ( ) . entries ( ) . iterator ( ) ;
rank: 348
score: 99.17442220052084
patch: Iterator iter = res . entries . iterator ( ) ; ) { {
rank: 349
score: 99.2530158547794
patch: Iterator iter = res . entries ( ) [ 1 ] . iterator ( ) ;
rank: 349
score: 99.24285419170673
patch: final Iterator iter = res . entries . iter ( ) ;
rank: 349
score: 99.22913128396739
patch: Iterator iter = res . entries . iterator ( ) ) ; while ( iter . has CaMeL Next ( ) )
rank: 349
score: 99.22315325055804
patch: int [ ] v = new double [ v . length ] ;
rank: 349
score: 99.22201538085938
patch: int res . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 349
score: 99.19817793996711
patch: for ( int } Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) {
rank: 349
score: 99.17372639973958
patch: if ( iter . has CaMeL Next ( ) ) {
rank: 350
score: 99.26616075303819
patch: Iterator iter = res . entries != null ? res . iterator ( ) : null ;
rank: 350
score: 99.24274040670956
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ; iterator
rank: 350
score: 99.2227783203125
patch: Iterator iter = res . next ( ) . entries . iter ( ) ;
rank: 350
score: 99.22194260817308
patch: Iterator < T > entries = res . entries ( ) ;
rank: 350
score: 99.20930032169117
patch: Iterator iter = res [ res . size ( ) ] . iterator ( ) ;
rank: 350
score: 99.17340557391827
patch: Iterator iter = v [ ) . size ( ) ] ;
rank: 351
score: 99.25233369715073
patch: Iterator iter = res . entries ( ) . entries ( ) . iterator ( )
rank: 351
score: 99.242431640625
patch: Iterator iter = entries . iterator ( ) ; iterator . iterator ( ) ;
rank: 351
score: 99.22822709517045
patch: Collection iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 351
score: 99.22244466145834
patch: Iterator iter = res . entries [ ) . size ( ) ] ;
rank: 351
score: 99.22132065716912
patch: Iterator iter = res . entries . to CaMeL Array ( res . entries ) ;
rank: 351
score: 99.20885416666667
patch: res . res = res . entries . entries . size ( ) ;
rank: 351
score: 99.20079627403847
patch: Iterator iter = res [ 0 ] . size ( ) ;
rank: 351
score: 99.19768608940973
patch: Object [ ] res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 352
score: 99.2657470703125
patch: Iterator iter = $NUMBER$ * res . entries . iterator ( ) ;
rank: 352
score: 99.2420654296875
patch: Iterator < ) = res . entries . iterator ( ) ;
rank: 352
score: 99.22801298253677
patch: synchronized ( res ) { Iterator iter = res . list . iterator ( ) ;
rank: 352
score: 99.2084209735577
patch: Iterator iter = res . entries ( res . length ) ;
rank: 352
score: 99.2006103515625
patch: Iterator iter = res . split ( 1 ) . iterator ( ) ;
rank: 353
score: 99.2420184795673
patch: Iterator iter = ( Iterator ) res . next ( ) ;
rank: 353
score: 99.22740589488636
patch: Iterator iter = res . iterator ( ) ; ; while ( iter . has CaMeL Next ( ) ) {
rank: 353
score: 99.20828012319711
patch: Object res = res . entries . get ( res ) ;
rank: 353
score: 99.19937569754464
patch: Iterator iter = res . intern ( ) . iterator ( ) ;
rank: 353
score: 99.17229755108173
patch: else Iterator iter = res . entries . iterator ( ) ;
rank: 354
score: 99.26556755514706
patch: Iterator < / > iter = res . entries ( ) . iterator ( ) ;
rank: 354
score: 99.25100708007812
patch: Iterator iter = res . length : v . entries . iterator ( ) ;
rank: 354
score: 99.2417236328125
patch: Iterator < ? > iter = res . entries . entries ( ) ;
rank: 354
score: 99.22720336914062
patch: Object [ ] entries = res . entries . to CaMeL Array ( ) ;
rank: 354
score: 99.22004699707031
patch: int entries . iterator ( ) . iterator ( ) . size ( ) ;
rank: 354
score: 99.20822143554688
patch: Iterator iter = res . entries . iterator ( ) ; while ( ; )
rank: 354
score: 99.1990966796875
patch: Iterator iter = res > this . entries . iterator ( ) ;
rank: 354
score: 99.19713541666667
patch: Iterator iter = ! this . res . entries . iterator ( ) ;
rank: 354
score: 99.17200578962054
patch: final Iterator iter = res . entries . iterator ( ) ; }
rank: 355
score: 99.26531575520833
patch: Iterator < int > iterator = res . entries . iterator ( ) ;
rank: 355
score: 99.25059157151442
patch: Iterator iter = res [ $NUMBER$ ] . iterator ( ) ;
rank: 355
score: 99.22711736505681
patch: for ( Iterator iter = v . iterator ( ) ; iter . has CaMeL Next ( ) ; ) {
rank: 355
score: 99.22086588541667
patch: Iterator iter = v [ 0 ] . entries . size ( ) ;
rank: 355
score: 99.21947370256696
patch: Iterator * ] list = res . entries . iterator ( ) ;
rank: 355
score: 99.20818684895833
patch: Iterator iter = res . entries ( entries . size ( ) ) ;
rank: 355
score: 99.19871012369792
patch: Iterator iter = in . entries . iterator ( ) ;
rank: 355
score: 99.19654605263158
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter : res . iterator ( ) ;
rank: 355
score: 99.1719970703125
patch: Iterator iter = res . ( ) . entries ( ) ;
rank: 356
score: 99.26424407958984
patch: Iterator iter = res . entries = res . list . iterator ( ) ;
rank: 356
score: 99.25052083333334
patch: Iterator iter = res . entries . . entries . iterator ( ) ;
rank: 356
score: 99.22687322443181
patch: Iterator iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 356
score: 99.21907261439732
patch: Iterator iter = res . entries ( ) . add ( ) ;
rank: 356
score: 99.19642639160156
patch: Iterator iter = res . entries . iterator ( ) + v . length ;
rank: 357
score: 99.2637939453125
patch: final int [ ] iter = res . entries . iterator ( ) ;
rank: 357
score: 99.25030517578125
patch: Iterator iter = this . res . entries . iterator ( ) ; for (
rank: 357
score: 99.22676595052083
patch: Iterator iter = res . iterator ( ) ; while ( iter . )
rank: 357
score: 99.21904962713069
patch: res . entries = res . entries ( ) ;
rank: 357
score: 99.20772058823529
patch: Iterator iter = res . entries ( ) [ res . size ( ) ] ;
rank: 358
score: 99.22622282608695
patch: Iterator iter = res . list . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 358
score: 99.218896484375
patch: Iterator iter = res . entries . index CaMeL Of ( $NUMBER$ ) ;
rank: 358
score: 99.20652770996094
patch: if ( res != null ) res . set CaMeL Value ( res ) ;
rank: 358
score: 99.19823404947917
patch: Iterator iter = res . entries [ ) . iterator ( ) ] ;
rank: 358
score: 99.19612630208333
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res ) { iter . advance ( ) ;
rank: 359
score: 99.26329752604167
patch: Iterator iter = 0 . iter ( res . iterator ( ) ) ;
rank: 359
score: 99.24911499023438
patch: Iterator iter = v . entries . entries ( ) ;
rank: 359
score: 99.21884155273438
patch: return new Open CaMeL Map CaMeL Real CaMeL Vector ( v . length ) ;
rank: 359
score: 99.21881975446429
patch: Iterator * ] res . entries = res . entries ( ) ;
rank: 359
score: 99.206494140625
patch: final Iterator iter = v . entries ( ) . iterator ( ) ;
rank: 359
score: 99.19817243303571
patch: Iterator iter = v [ ] . entries . iterator ( ) ;
rank: 359
score: 99.19609142485119
patch: Iterator iter = ( Open CaMeL Map CaMeL Real CaMeL Vector ) this . res . iterator ( ) ;
rank: 359
score: 99.1707763671875
patch: Iterator < Object > iter = entries . iterator ( ) ;
rank: 360
score: 99.26289367675781
patch: Iterator iter = res . entries , iterator = res . iterator ( ) ;
rank: 360
score: 99.24052211216518
patch: Iterator iter = 0 ; iter = res . iterator ( ) ;
rank: 360
score: 99.21870727539063
patch: int iter = res . entries ( ) ;
rank: 360
score: 99.20625
patch: if ( res . size ( ) != res . size ( ) )
rank: 360
score: 99.19764709472656
patch: Iterator iter = res . contains ( ) : res . entries ( ) ;
rank: 360
score: 99.19605364118304
patch: Iterator iter = super . entries . entries . iterator ( ) ;
rank: 360
score: 99.170654296875
patch: Iterator iter = ebe CaMeL Multiply . iterator ( ) ;
rank: 361
score: 99.24041389016544
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = null ;
rank: 361
score: 99.2248868075284
patch: Iterator list = res . list . iterator ( ) ; while ( list . has CaMeL Next ( ) )
rank: 361
score: 99.21824017693015
patch: synchronized ( res ) { Iterator entries = res . entries . iterator ( ) ;
rank: 361
score: 99.2182147686298
patch: new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 361
score: 99.20606282552083
patch: Iterator < res . length > iter = v . iterator ( ) ;
rank: 361
score: 99.19675990513393
patch: Iterator entries = res . entries ( ) . entries ( ) ;
rank: 361
score: 99.17057582310268
patch: Iterator [ ] entries = res . entries . iterator ( ) ;
rank: 362
score: 99.26214192708333
patch: Iterator < int > iter = res . entries . size ( ) ;
rank: 362
score: 99.24755096435547
patch: List res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 362
score: 99.2403076171875
patch: Iterator iter = res . iterator ( ) ; . iterator ( ) ;
rank: 362
score: 99.22467595880681
patch: Iterator iter = res . list . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 362
score: 99.21812337239584
patch: new Open CaMeL Map CaMeL Real CaMeL Vector ( v . length ) ;
rank: 362
score: 99.21770477294922
patch: int iter = res . entries ( ) . entries ( ) . length ;
rank: 362
score: 99.20601712740384
patch: Iterator iter = res . iterator . iterator ( ) ; ;
rank: 363
score: 99.26141357421875
patch: Iterator < Object > iter = res . entries . iterator ( ) ; else
rank: 363
score: 99.2471923828125
patch: Iterator iter = name . entries ( ) . iterator ( ) ;
rank: 363
score: 99.20567975725446
patch: try { Iterator iter = res . iterator . iterator ( ) ;
rank: 364
score: 99.23942057291667
patch: Iterator iter = this . res . entries . iterator ( ) ; ;
rank: 364
score: 99.22433338994566
patch: Iterator iter = res . get CaMeL Entries ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 364
score: 99.21700846354166
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 364
score: 99.20505593039773
patch: Iterator iter = res ) . iterator ( ) ;
rank: 365
score: 99.23938860212054
patch: Iterator iter = res . iterator ( ) ; ; return res ;
rank: 365
score: 99.22405395507812
patch: System . arraycopy ( res . entries . size ( ) , 0 , res . entries ) ;
rank: 365
score: 99.2049072265625
patch: if ( res . entries != null ) res . entries = res . entries . entries ; else
rank: 365
score: 99.16928335336539
patch: Iterator iter = ( res . entries . iterator ( ) ;
rank: 366
score: 99.26000162760417
patch: Iterator iter = copy ( res . entries . iterator ( ) ) ;
rank: 366
score: 99.24628448486328
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . iter ( ) ;
rank: 366
score: 99.23907470703125
patch: Iterator < ) . Iterator iter = res . iterator ( ) ;
rank: 366
score: 99.21582845052083
patch: Iterator iter = res . entries . ( ) . iter ( ) ;
rank: 366
score: 99.21546282087054
patch: Iterator < ? ] : res . entries . iterator ( ) ;
rank: 366
score: 99.20485432942708
patch: res . entries = res . entries ;
rank: 366
score: 99.19200032552084
patch: Iterator iter = res [ 0 ) . entries . iterator ( ) ;
rank: 366
score: 99.16892496744792
patch: Iterator iter = iterator . has CaMeL Next ( ) ;
rank: 367
score: 99.2594482421875
patch: Iterator < int > entries = res . entries . iterator ( ) ;
rank: 367
score: 99.22321883491848
patch: Iterator iter = v . iterator ( ) ; while ( iter . ; iter . has CaMeL Next ( ) )
rank: 367
score: 99.2147705078125
patch: Iterator iter = res . substring ( $NUMBER$ ) . iterator ( ) ;
rank: 367
score: 99.20462375217014
patch: if ( res != null ) res . res = res . entries . entries . ;
rank: 367
score: 99.19414728338069
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) . remove ( ) ;
rank: 367
score: 99.16880104758523
patch: Iterator iter = entries . iterator ( ) ; }
rank: 368
score: 99.25919835707721
patch: final boolean iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 368
score: 99.23877716064453
patch: Iterator iter = res . entries . iterator ( ) ; iter return res ;
rank: 368
score: 99.2231976052989
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ; )
rank: 368
score: 99.20435384114583
patch: Iterator iter = res . iterator ( entries . iterator ( ) ) ;
rank: 368
score: 99.19388834635417
patch: if ( res . size ( ) > 0 ) {
rank: 368
score: 99.18929617745536
patch: Iterator iter = res . remove ( ) . entries ( ) ;
rank: 369
score: 99.25914655412946
patch: Iterator iter = res . entries . size ( ) - 0 ;
rank: 369
score: 99.2455825805664
patch: Iterator iter = res . entries . name . entries . iterator ( ) ;
rank: 369
score: 99.2230808423913
patch: Iterator iter = map . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 369
score: 99.21373748779297
patch: Iterator iter = res . entries . copy ( ) . entries ( ) ;
rank: 369
score: 99.21330261230469
patch: entries . put ( res . get CaMeL Name ( ) , res ) ;
rank: 369
score: 99.19383329503677
patch: Iterator < Real CaMeL Vector > iter = v . entries . iterator ( ) ;
rank: 369
score: 99.16846720377605
patch: Iterator iter = res . SIZE . iterator ( ) ;
rank: 370
score: 99.25897216796875
patch: Iterator iter = copy . entries . iterator ( ) ;
rank: 370
score: 99.2455825805664
patch: Object res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 370
score: 99.22268880208334
patch: Iterator iter = res . get ( res ) . iterator ( ) ;
rank: 370
score: 99.2132927389706
patch: synchronized ( res ) { Iterator iter = res . map . iterator ( ) ;
rank: 370
score: 99.1878662109375
patch: Iterator iter = res . remove ( $STRING$ ) . iterator ( ) ;
rank: 370
score: 99.16843825120192
patch: Iterator iter = this . entries . iterator ( ) ; ;
rank: 371
score: 99.258544921875
patch: this . res . iterator = res . entries . iterator ( ) ;
rank: 371
score: 99.2381591796875
patch: Iterator iter = res . entries ( ) . iterator ( ) ; ) {
rank: 371
score: 99.22256071671195
patch: final Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 371
score: 99.21319986979167
patch: int iter = res . entries . ( ) . size ( ) ;
rank: 371
score: 99.20378032483552
patch: if ( res . entries . iterator ( ) . has CaMeL Next ( ) ) continue ;
rank: 371
score: 99.19332885742188
patch: Iterator iter = res . entries . entries . iterator ( ) ; iterator . advance ( ) ;
rank: 371
score: 99.16787283761161
patch: Object [ ] res = res . entries . iterator ( ) ;
rank: 372
score: 99.24555969238281
patch: Iterator iter = res . size ( ) . entries . iterator ( ) ;
rank: 372
score: 99.2380840594952
patch: Iterator iter . = res . entries . iterator ( ) ;
rank: 372
score: 99.21284754136029
patch: synchronized ( res ) { Iterator iterator = res . entries . iterator ( ) ;
rank: 372
score: 99.20376586914062
patch: Collection iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 372
score: 99.16782924107143
patch: if ( res != null ) { iter . advance ( ) ;
rank: 373
score: 99.23798014322917
patch: Iterator iter = res . entries . iterator ( ) ; iterator else ;
rank: 373
score: 99.21261831430289
patch: Iterator < String > entries = res . iterator ( ) ;
rank: 373
score: 99.2074686686198
patch: Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 373
score: 99.19315962357955
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector > entries ;
rank: 373
score: 99.18570382254464
patch: Iterator iter = v . remove ( ) . iterator ( ) ;
rank: 374
score: 99.245361328125
patch: Iterator iter = res , iterator = res . entries . iterator ( ) ;
rank: 374
score: 99.23795318603516
patch: Iterator iter = res . get CaMeL Entries ( ) . entries ( ) ;
rank: 374
score: 99.21256510416667
patch: Iterator iter = res . entries . trim ( ) ;
rank: 374
score: 99.20720563616071
patch: int [ ] v = new double [ res . length ] ;
rank: 374
score: 99.20369466145833
patch: Iterator iter = v [ res . entries . length - 1 ] ;
rank: 374
score: 99.19285999644886
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries . iterator ( ) )
rank: 375
score: 99.25787674753289
patch: boolean < ? > iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 375
score: 99.24516745174633
patch: Iterator iter = res . entries ( ) . entries ( ) [ 0 ] ;
rank: 375
score: 99.23770141601562
patch: res . Iterator iter = res . iterator ( ) ;
rank: 375
score: 99.22097778320312
patch: Iterator iter = res . get CaMeL Annotations ( ) . iterator ( ) ;
rank: 375
score: 99.21255929129464
patch: Iterator end = res . entries ( ) . iterator ( ) ;
rank: 375
score: 99.203662109375
patch: Iterator iter = res . entries ( ) ; if ( iter . has CaMeL Next ( ) )
rank: 375
score: 99.1924715909091
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res ) res . set CaMeL Entry ( ) ;
rank: 375
score: 99.18525913783482
patch: Iterator iter = res != null ? res . length : 0 ;
rank: 375
score: 99.16627854567308
patch: Iterator iter = ( Iterator ) res . size ( ) ;
rank: 376
score: 99.25760091145834
patch: if ( res != null ) iter = res . entries ( ) ;
rank: 376
score: 99.23760223388672
patch: Iterator iter = res . entries . iterator ( ) ; iterator = 1 ;
rank: 376
score: 99.2209228515625
patch: Iterator iter = ( int [ ] ) res . clone ( ) ;
rank: 376
score: 99.21255258413461
patch: Iterator < ] >> iter = res . iterator ( ) ;
rank: 376
score: 99.20322552849265
patch: synchronized ( res . entries ) { Iterator iter = res . iterator ( ) ;
rank: 377
score: 99.24507359095982
patch: Iterator iter = res . iterator ( ) ; for ( for (
rank: 377
score: 99.21236165364583
patch: Iterator < E > iter = res . entries . entries ( ) ;
rank: 377
score: 99.204833984375
patch: Iterator iter = res . entries . entries ( ) . ( ) ;
rank: 377
score: 99.20280905330883
patch: Iterator iter = res [ res . length - 1 ] . iterator ( ) ;
rank: 377
score: 99.19213256835937
patch: for ( int ) { iter = res . entries . entries . entries . iterator ( ) ;
rank: 377
score: 99.16570172991071
patch: Iterator iter = res . directory . entries . iterator ( ) ;
rank: 378
score: 99.25693088107639
patch: Iterator iter = res . entries . iterator ( ) ; while . . != null ;
rank: 378
score: 99.23702239990234
patch: Iterator iter = res . entries . iterator ( ) ; iterator = true ;
rank: 378
score: 99.21869303385417
patch: result = res . entries . iterator ( ) . next ( ) ;
rank: 378
score: 99.21174172794117
patch: synchronized ( res ) { Iterator iter = res . entries . entries ( ) ;
rank: 378
score: 99.18334197998047
patch: Iterator iter = res . entries . iterator ( v [ 0 ] ) ;
rank: 378
score: 99.1653583233173
patch: Iterator < double > iter = res . iterator ( ) ;
rank: 379
score: 99.24385070800781
patch: Iterator iter = res . entries ( ) . entries . iter ( ) ;
rank: 379
score: 99.21842094089673
patch: for ( Iterator iter = v . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 379
score: 99.20203857421875
patch: if ( res != null ) res . res = res . entries . get ( 0 ) ;
rank: 379
score: 99.18309674944196
patch: Iterator iter = res . size ( ) : res . length ;
rank: 379
score: 99.16530936104911
patch: Iterator iter = res . super . entries . iterator ( ) ;
rank: 380
score: 99.24370574951172
patch: Iterator iter = ebe CaMeL Multiply . entries . entries . iterator ( ) ;
rank: 380
score: 99.21832885742188
patch: System . arraycopy ( res , 0 , res . entries , 0 , res . size ) ;
rank: 380
score: 99.21094621930804
patch: Iterator 1 = res . entries ( ) . iterator ( ) ;
rank: 380
score: 99.20183919270833
patch: Iterator < Integer > iter = res . iterator . iterator ( ) ;
rank: 380
score: 99.19111772017045
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) . advance ( ) ;
rank: 380
score: 99.16526576450893
patch: Iterator iter = res . substring ( ) . iterator ( ) ;
rank: 381
score: 99.25541178385417
patch: final Iterator iter = res . entries = res . entries ( ) ;
rank: 381
score: 99.23524576822916
patch: Iterator iter = res . get ( entries . iterator ( ) ) ;
rank: 381
score: 99.21075846354167
patch: Iterator iter = res . entries ( ) . iterator ( $STRING$ ) ;
rank: 381
score: 99.20306803385417
patch: Iterator iter = res . . entries . entries . iterator ( ) ;
rank: 381
score: 99.2016845703125
patch: Iterator iter = v . entries ( ) . iterator ( ) ) ;
rank: 381
score: 99.1652587890625
patch: Iterator iter = res . this . entries . iterator ( ) ; ;
rank: 382
score: 99.25523466222427
patch: Iterator < String > iter = res . entries ( ) . size ( ) ;
rank: 382
score: 99.21781005859376
patch: if ( v . length == 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 382
score: 99.2104961688702
patch: Iterator < E > entries = res . entries ( ) ;
rank: 382
score: 99.20270647321429
patch: Iterator iter = res . entries . entries . entries . length ;
rank: 382
score: 99.19051784939236
patch: Iterator iter = res . length ; while ( iter . has CaMeL Next ( ) )
rank: 382
score: 99.1649881998698
patch: Iterator iter = res . matches . iterator ( ) ;
rank: 383
score: 99.2552131204044
patch: Iterator < Thread > iter = res . entries ( ) . iterator ( ) ;
rank: 383
score: 99.24221801757812
patch: Iterator iter : res . entries = res . entries . iterator ( ) ;
rank: 383
score: 99.2345832375919
patch: Iterator iter = res . get . entries ( ) . iterator ( ) ; ;
rank: 383
score: 99.21031087239584
patch: Iterator iter = res . entries ( 1 ) . next ( ) ;
rank: 383
score: 99.20266723632812
patch: Iterator iter = res . entries . entries . iterator ( ) ( ) ;
rank: 383
score: 99.20134534333882
patch: Iterator iter = res . iterator ( ) ; 0 . = res . size ( ) ;
rank: 383
score: 99.19050598144531
patch: if ( res . iterator ( ) . has CaMeL Next ( ) ) {
rank: 383
score: 99.16462925502232
patch: Iterator iter = res . random ( ) . iterator ( ) ;
rank: 384
score: 99.24204388786765
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = ebe CaMeL Multiply ( iter ) ;
rank: 384
score: 99.2340087890625
patch: Iterator iter = res . entries ( ) . iterator ( ) ; iterator
rank: 384
score: 99.21693821957237
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( )
rank: 384
score: 99.21011788504464
patch: Iterator iter = value . entries ( ) . iterator ( ) ;
rank: 384
score: 99.20131321957237
patch: Iterator iter = res . entries ( ) ; Iterator iter = v . iterator ( ) ;
rank: 384
score: 99.19044189453125
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector (
rank: 384
score: 99.17902483258929
patch: Iterator iter < Object > iter = res . iterator ( ) ;
rank: 384
score: 99.164306640625
patch: iter . iterator ( ) . has CaMeL Next ( ) ;
rank: 385
score: 99.24201311383929
patch: int iter = this . res . entries . iterator ( ) ;
rank: 385
score: 99.216796875
patch: Iterator iter = res . min . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 385
score: 99.21007486979167
patch: Iterator iter = res . load ( res . entries ( ) ) ;
rank: 385
score: 99.20130830652573
patch: if ( res . entries != null ) res . res = res . entries ;
rank: 385
score: 99.19004193474265
patch: Iterator < double [ ] > iter = v . entries . iterator ( ) ;
rank: 385
score: 99.17902483258929
patch: Iterator iter = iter . next ( ) . entries ( ) ;
rank: 385
score: 99.16410319010417
patch: Iterator iter = res . entries . read ( ) ;
rank: 386
score: 99.23375746783088
patch: Iterator iter = res . iterator ( ) ; Iterator iter . iterator ( ) ;
rank: 386
score: 99.2012710571289
patch: res . res = res ; Iterator iter = res . entries ( ) ;
rank: 386
score: 99.18922061011905
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( (
rank: 386
score: 99.17836507161458
patch: Iterator iter = value . entries . iterator ( ) ;
rank: 386
score: 99.1639873798077
patch: Iterator iter = ! res . has CaMeL Next ( ) ;
rank: 387
score: 99.2527214499081
patch: Iterator < Boolean > iter = res . entries ( ) . iterator ( ) ;
rank: 387
score: 99.24165852864583
patch: Iterator iter = iter . entries . iterator ( ) ;
rank: 387
score: 99.2165759858631
patch: Iterator iter = res . list ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 387
score: 99.20098876953125
patch: Collection iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 387
score: 99.18877883184524
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries ( ) ) {
rank: 388
score: 99.24122721354166
patch: Iterator < double [ ] > iter = res . iterator ( ) ;
rank: 388
score: 99.21648615056819
patch: Iterator iter = res . matches . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 388
score: 99.20909881591797
patch: res . iterator ( ) ; Iterator iter = res . entries ( ) ;
rank: 388
score: 99.20096842447917
patch: Iterator iter = v [ res . length ] . iterator ( ) ;
rank: 388
score: 99.17759486607143
patch: Iterator iter >> res = res . entries . iterator ( ) ;
rank: 388
score: 99.16373384915866
patch: Iterator iter = res ) . entries . iterator ( ) ;
rank: 389
score: 99.25170180376838
patch: final int entries = res . entries . iterator ( ) . iterator ( ) ;
rank: 389
score: 99.23993997012867
patch: Real CaMeL Vector v = new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 389
score: 99.2326171875
patch: Iterator iter = res . entries . iterator ( ) ; = 1 ;
rank: 389
score: 99.21615745907738
patch: Iterator iter = res . iterator ( ) ; while ( Iterator iter . has CaMeL Next ( ) )
rank: 389
score: 99.20895821707589
patch: Iterator iter = res . list ( ) . entries ( ) ;
rank: 389
score: 99.20034308182566
patch: if ( res != null ) res . res = res . entries . get ( ) ;
rank: 389
score: 99.16322835286458
patch: Iterator iter = res . format . iterator ( ) ;
rank: 390
score: 99.21536254882812
patch: Iterator iter = res . get CaMeL Interfaces ( ) . iterator ( ) ;
rank: 390
score: 99.20850423177083
patch: Iterator iter = res . entries ( ) . remove ( res ) ;
rank: 390
score: 99.20104108537946
patch: for ( Iterator iter = res . entries . size ( ) ;
rank: 390
score: 99.18825073242188
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter . has CaMeL Next ( ) ; )
rank: 390
score: 99.17694091796875
patch: Iterator iter = res . is CaMeL Empty ( ) : res . length ;
rank: 390
score: 99.16313825334821
patch: Iterator iter = v . next ( ) . entries ( ) ;
rank: 391
score: 99.2392578125
patch: Iterator iter = res == null . iterator ( ) ;
rank: 391
score: 99.23197428385417
patch: Iterator < Entry > iter = res . entries . entries ( ) ;
rank: 391
score: 99.21519165039062
patch: System . arraycopy ( res . entries , 0 , res . entries , res . size ) ;
rank: 391
score: 99.20801499310662
patch: Iterator iter = res . replace ( $STRING$ , $STRING$ ) . iterator ( ) ;
rank: 391
score: 99.20073699951172
patch: Iterator iter = res . get CaMeL Name ( ) . entries ( ) ;
rank: 391
score: 99.19985525948661
patch: if ( res . size ( ) > 0 ) return res ;
rank: 391
score: 99.18793801700367
patch: Iterator < String > entries = res . entries . entries . iterator ( ) ;
rank: 391
score: 99.17642211914062
patch: Iterator iter = name . entries . iterator ( ) ;
rank: 391
score: 99.16312953404018
patch: Iterator iter = res . matches ( ) . iterator ( ) ;
rank: 392
score: 99.25027465820312
patch: Iterator iter = res . entries = res . entries . entries ( ) ;
rank: 392
score: 99.2317756204044
patch: Iterator iter = res . entries . iterator ( ) ; . iterator = 0 ;
rank: 392
score: 99.21503448486328
patch: synchronized ( this ) { iter = res . entries . iterator ( ) ;
rank: 392
score: 99.2079833984375
patch: Iterator >> iter = res . entries ( ) . iterator ( ) ;
rank: 392
score: 99.19933471679687
patch: Iterator iter = v . iterator ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 392
score: 99.1876220703125
patch: Iterator iter = res . get CaMeL Entry ( iter ) . iterator ( ) ;
rank: 392
score: 99.16215297154018
patch: Iterator iter = res . check CaMeL Vector CaMeL Dimensions ( ) ;
rank: 393
score: 99.2498550415039
patch: final Iterator iter = res . entries ( ) . iterator ( ) ; else
rank: 393
score: 99.23069661458334
patch: Iterator iter = res . entries . iterator ( ) ; ) / /
rank: 393
score: 99.21498509457237
patch: Iterator iter = res . list ; while ( iter . has CaMeL Next ( ) ) {
rank: 393
score: 99.2077277688419
patch: Iterator iter = ( ( int ) res . entries . iterator ( ) ) ;
rank: 393
score: 99.19887473366477
patch: Iterator iter = res . entries ( ) ; ;
rank: 393
score: 99.18717651367187
patch: Iterator < final Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 393
score: 99.17572021484375
patch: Iterator iter = res . entries . iterator ( ) * $NUMBER$ ;
rank: 393
score: 99.16187395368304
patch: while ( v . entries . size ( ) > 0 ) {
rank: 394
score: 99.23065592447917
patch: Iterator iter = res . replace ( res . iterator ( ) ) ;
rank: 394
score: 99.21420433407738
patch: Iterator iter = res 1 . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 394
score: 99.20723230698529
patch: Iterator iter = res . entries . iterator ( ) ; int iter = null ;
rank: 394
score: 99.19999694824219
patch: Iterator iter = res . next ( ) . entries ( ) . length ;
rank: 394
score: 99.19833374023438
patch: Iterator iter = res . entries ( ) ; while ( res . has CaMeL Next ( ) )
rank: 394
score: 99.18632956112133
patch: final Iterator iter = res . entries ( ) . entries . iterator ( ) ;
rank: 394
score: 99.16184488932292
patch: Iterator iter = res . insert . iterator ( ) ;
rank: 395
score: 99.24971226283482
patch: Iterator < int 1 : res . entries . iterator ( ) ;
rank: 395
score: 99.23048311121323
patch: Iterator iter = res . entries . iterator ( ) ; . iterator = null ;
rank: 395
score: 99.21412194293478
patch: Iterator Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 395
score: 99.20715942382813
patch: Iterator iter = res . remove ( ) ;
rank: 395
score: 99.1617431640625
patch: while ( iter . has CaMeL Next ( ) ) { {
rank: 396
score: 99.24957275390625
patch: Iterator iter = 0 + res . entries . iterator ( ) ;
rank: 396
score: 99.23427734375
patch: Open CaMeL Map CaMeL Real CaMeL Vector res ;
rank: 396
score: 99.2288330078125
patch: Iterator < ) = res . entries ( ) . iterator ( ) ;
rank: 396
score: 99.21380256204044
patch: Iterator iter = res . entries ; Iterator iter = res . iterator ( ) ;
rank: 396
score: 99.20714222301136
patch: Iterator iter = res . entries ( true ) ;
rank: 396
score: 99.19824829101563
patch: if ( v != null ) res . ) res . res . res . res . ) ;
rank: 396
score: 99.18580264136905
patch: iterator = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 396
score: 99.16110229492188
patch: Iterator iter = res . advance . iterator ( ) ;
rank: 397
score: 99.2340087890625
patch: Iterator iter = v . entries ( ) . iter ( ) ;
rank: 397
score: 99.22811185396634
patch: Iterator iter = new ( res . iterator ( ) ) ;
rank: 397
score: 99.21366373697917
patch: Iterator list = res . entries . iterator ( ) ;
rank: 397
score: 99.20705740792411
patch: int res . entries . iterator ( ) . iterator ( ) ;
rank: 397
score: 99.19823608398437
patch: Iterator iter = data . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 398
score: 99.24917763157895
patch: Iterator < String > iter = res . entries . entries ( ) . iter ( ) ;
rank: 398
score: 99.22794596354167
patch: Iterator iter = res . get ( 1 ) . iterator ( ) ;
rank: 398
score: 99.213623046875
patch: Iterator iter = res . entries . iterator ( ) ; while ( entries . has CaMeL Next ( ) ) {
rank: 398
score: 99.1979248046875
patch: Iterator map = res . iterator ( ) ; while ( map . has CaMeL Next ( ) )
rank: 398
score: 99.18565538194444
patch: Iterator iter = res . entries . iterator ( ) ; has CaMeL Next ( ) ;
rank: 398
score: 99.15931047712054
patch: Iterator iter = res . copy . entries . iterator ( ) ;
rank: 399
score: 99.24905598958334
patch: Iterator < char > iter = res . entries . iterator ( ) ;
rank: 399
score: 99.19732666015625
patch: Iterator iter = res . Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 399
score: 99.18556906960227
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . index CaMeL Of ( this ) ;
rank: 399
score: 99.17371544471153
patch: Iterator iter $NUMBER$ = res . entries . iterator ( ) ;
rank: 399
score: 99.1590576171875
patch: Iterator iter = entries . entries ( ) . size ( ) ;
rank: 400
score: 99.23303985595703
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector . length ;
rank: 400
score: 99.22760009765625
patch: Iterator iter = res . entries . entries ( ) ; iterator = 0 ;
rank: 400
score: 99.21323939732143
patch: for ( Iterator iterator = res . iterator ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 400
score: 99.205810546875
patch: Iterator iter = res . value . value . iterator ( ) ;
rank: 400
score: 99.19684196920956
patch: Iterator < Double > iter = res . entries ( ) . iterator ( ) ;
rank: 400
score: 99.1854607077206
patch: Iterator iter ? res . iterator ( ) . has CaMeL Next ( ) ; )
rank: 400
score: 99.17267315204327
patch: Iterator iter = res . index CaMeL Of ( $NUMBER$ ) ;
rank: 400
score: 99.15782674153645
patch: Iterator iter = res . read . entries ( ) ;
rank: 401
score: 99.23295323988971
patch: Iterator iter = res [ iter . entries ( ) . iterator ( ) ] ;
rank: 401
score: 99.22711944580078
patch: Iterator iter = res . entries . iter ( ) ; iterator = null ;
rank: 401
score: 99.21323649088542
patch: Iterator iterator = res . list . iterator ( ) ;
rank: 401
score: 99.20529610770089
patch: Iterator iter = res . entries . iterator ( ) ; else {
rank: 401
score: 99.1970443725586
patch: return new Open CaMeL Map CaMeL Real CaMeL Vector ( res . length ) ;
rank: 401
score: 99.1851447610294
patch: Iterator iter = res [ res . length ] . entries . iterator ( ) ;
rank: 401
score: 99.157470703125
patch: Iterator iter = entries . entries . iterator ( ) ; ;
rank: 402
score: 99.24761603860294
patch: if ( res != null ) iter = res . entries . entries ( ) ;
rank: 402
score: 99.2129794034091
patch: Iterator iter = map . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 402
score: 99.205078125
patch: Iterator iter = res . entries ( false ) ;
rank: 402
score: 99.19681222098214
patch: Iterator iter = res . entries . 1 . iterator ( ) ;
rank: 402
score: 99.19679768880208
patch: System . arraycopy ( v , 0 , res , 0 , res . length ) ;
rank: 402
score: 99.1850650185033
patch: Enumeration < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ( ) ;
rank: 402
score: 99.17205810546875
patch: Iterator iter = res . index CaMeL Of ( - 1 ) ;
rank: 403
score: 99.23278090533088
patch: Iterator iter = v [ iter . entries ( ) ] . iterator ( ) ;
rank: 403
score: 99.22635904947917
patch: Iterator iter = Math . iter ( res . iterator ( ) ) ;
rank: 403
score: 99.21294611150569
patch: Iterator iter = res . iterator ( ) ; ; finally { iter . has CaMeL Next ( ) ; }
rank: 403
score: 99.20493570963542
patch: Iterator end = res . entries . iterator ( ) ;
rank: 403
score: 99.19640299479167
patch: Iterator iter = res . entries . get ( v . length ) ;
rank: 403
score: 99.15680541992188
patch: Iterator iter = res . contains ( ) ;
rank: 404
score: 99.24696451822916
patch: Iterator < String > iter : res . entries . iterator ( ) ;
rank: 404
score: 99.21293334960937
patch: System . arraycopy ( v , 0 , res . entries , 0 , v . length ) ;
rank: 404
score: 99.20419921875
patch: Iterator iter = res . entries ( $NUMBER$ ) . size ( ) ;
rank: 404
score: 99.19639485677084
patch: Iterator iter = res [ res . entries . size ( ) ] ;
rank: 404
score: 99.17040252685547
patch: Iterator iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 404
score: 99.15653773716518
patch: Iterator iter = res . this . res . iterator ( ) ;
rank: 405
score: 99.24689797794117
patch: Iterator < Character > iter = res . entries ( ) . iterator ( ) ;
rank: 405
score: 99.20358511117789
patch: int < ] > iter = res . entries ( ) ;
rank: 405
score: 99.19605305989583
patch: Iterator iter = res . next ( ) . entries . ( ) ;
rank: 405
score: 99.19563802083333
patch: Iterator iter = res 1 . entries ( ) . iterator ( ) ;
rank: 405
score: 99.18392605251736
patch: for ( int } Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries )
rank: 405
score: 99.17006429036458
patch: Iterator iter = res = res . iterator ( ) ;
rank: 406
score: 99.2468620749081
patch: Iterator < ? > iter = res . entries ( ) . iter ( ) ;
rank: 406
score: 99.21257990056819
patch: Iterator iter = entries . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 406
score: 99.20266488882211
patch: Iterator < ] > iterator = res . entries ( ) ;
rank: 406
score: 99.19583892822266
patch: Iterator iter = res . entries . index CaMeL Of ( - $NUMBER$ ) ;
rank: 406
score: 99.19557883522727
patch: Iterator iter = v . iterator ( ) ) ;
rank: 406
score: 99.18353630514706
patch: Iterator < Object > iter = this . res . entries . iterator ( ) ;
rank: 406
score: 99.1697998046875
patch: Iterator iter = this . res . size ( ) ;
rank: 406
score: 99.15505545479911
patch: final iter = res . entries . entries . iterator ( ) ;
rank: 407
score: 99.24681854248047
patch: Iterator iter = res . entries ( ) = res . entries ( ) ;
rank: 407
score: 99.21256749770221
patch: synchronized ( res ) { iter = res . entries . size ( ) ; }
rank: 407
score: 99.20233154296875
patch: Iterator iter = new byte [ res . size ( ) ] ;
rank: 407
score: 99.1954345703125
patch: do { Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 407
score: 99.16896275111607
patch: Iterator iter < String > iter = res . size ( ) ;
rank: 407
score: 99.15502057756696
patch: Iterator iter = res . [ ) . iterator ( ) ] ;
rank: 408
score: 99.24680463005515
patch: Iterator < Object > iter = res . entries = res . iterator ( ) ;
rank: 408
score: 99.23088727678571
patch: Iterator iter = super . entries ( ) . iterator ( ) ;
rank: 408
score: 99.22362342247597
patch: Iterator iter ( res . entries . iterator ( ) ) ;
rank: 408
score: 99.1951840049342
patch: if ( res . entries == null ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 408
score: 99.18328857421875
patch: for ( int Open CaMeL Map CaMeL Real CaMeL Vector res : res ) {
rank: 408
score: 99.16810825892857
patch: Iterator iter = res . parse ( ) . entries ( ) ;
rank: 408
score: 99.15497698102679
patch: int [ ] v = res . entries . iterator ( ) ;
rank: 409
score: 99.2463019875919
patch: Iterator < Iterator < Entry > iter = res . entries . iterator ( ) ;
rank: 409
score: 99.22311401367188
patch: Iterator iter = res . entries . iter ( ) ; iterator = 0 ;
rank: 409
score: 99.21144797585227
patch: Iterator iter = res . list . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 409
score: 99.20069986979166
patch: Iterator iter = res . entries ( ) ; int iter = 0 ;
rank: 409
score: 99.1947380514706
patch: if ( res != null ) . Iterator iter = res . iterator ( ) ;
rank: 409
score: 99.18309326171875
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( )
rank: 409
score: 99.16782924107143
patch: Iterator iter = Iterator . entries ( ) . iterator ( ) ;
rank: 410
score: 99.21076311383929
patch: for ( int iterator = res . size ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 410
score: 99.20050518329327
patch: Iterator < Entry > iter = res . entries ( ) ;
rank: 410
score: 99.19412994384766
patch: Iterator iter = res . entries . entries . entries ( ) . length ;
rank: 410
score: 99.18297758556548
patch: Iterator iter = . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 410
score: 99.15439077524039
patch: Iterator < String > iter = entries . iterator ( ) ;
rank: 411
score: 99.24549624794408
patch: Iterator iter = res . entries . iterator ( ) ; res . add ( res ) ;
rank: 411
score: 99.22231876148896
patch: if ( res == null ) iter = res . entries . iterator ( ) ;
rank: 411
score: 99.20049579326923
patch: Iterator < String >> iter = res . iterator ( ) ;
rank: 411
score: 99.18205710018383
patch: for ( int } Open CaMeL Map CaMeL Real CaMeL Vector res : res ) {
rank: 411
score: 99.15435321514423
patch: final Iterator iter = res . has CaMeL Next ( ) ;
rank: 412
score: 99.24532318115234
patch: int entries = res . entries . iterator ( ) . iterator ( ) ;
rank: 412
score: 99.22219669117646
patch: synchronized ( res ) { Iterator iter = res . entries . iter ( ) ;
rank: 412
score: 99.21042767693015
patch: Iterator iter = res . to CaMeL Array ( ) . iterator ( ) ; ;
rank: 412
score: 99.20013897235577
patch: Iterator < ] > iterator = res . iterator ( ) ;
rank: 412
score: 99.19434611002605
patch: Collection res = res . entries . iterator ( ) ;
rank: 412
score: 99.19326346261161
patch: double [ ] res = new double [ res . length ] ;
rank: 412
score: 99.18157958984375
patch: Iterator iter : res . iterator ( ) ;
rank: 412
score: 99.16748046875
patch: Iterator iter = v . to CaMeL Array ( ) . entries ( ) ;
rank: 413
score: 99.22911071777344
patch: Iterator iter = res . entries . entries ( ) . entries . length ;
rank: 413
score: 99.22187356387867
patch: Iterator iter = res . entries . entries ( ) ; Iterator iter = 0 ;
rank: 413
score: 99.21010131835938
patch: Iterator iter = res . entries ; while ( iter . has CaMeL Next ( ) ) { )
rank: 413
score: 99.19999694824219
patch: synchronized ( res ) { res . iterator ( ) . iterator ( ) ;
rank: 413
score: 99.19306640625
patch: it = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 413
score: 99.18156352796052
patch: synchronized ( res ) { Iterator iter = res . entries . entries . iterator ( ) ;
rank: 413
score: 99.16727447509766
patch: Iterator iter = res . entries . iterator ( ) : res . entries ;
rank: 413
score: 99.15244704026442
patch: Iterator iter = res . sleep ( v . length ) ;
rank: 414
score: 99.24503326416016
patch: Iterator iter = res . entries . list ( ) . entries ( ) ;
rank: 414
score: 99.2096637228261
patch: Iterator iter = res . entries . iterator ( ) ; finally { iter . has CaMeL Next ( ) ; }
rank: 414
score: 99.19989885602679
patch: / * ] iter = res . entries . iterator ( ) ;
rank: 414
score: 99.19405788845486
patch: Iterator iter = res . entries ( ) ; while . has CaMeL Next ( ) )
rank: 415
score: 99.2443783408717
patch: Iterator < String > iter = res . entries . entries ( ) . entries ( ) ;
rank: 415
score: 99.221240234375
patch: Iterator iter = res . remove ( res . iterator ( ) ) ;
rank: 415
score: 99.20952292049633
patch: Iterator iter = res . list ( res . entries . size ( ) ) ;
rank: 415
score: 99.19976337139423
patch: Iterator iter = res . entries . remove ( null ) ;
rank: 415
score: 99.19386985085227
patch: iter = res . entries . entries ( ) ;
rank: 415
score: 99.19242858886719
patch: for ( Iterator iter = res . entries . entries . size ( ) ;
rank: 415
score: 99.18108258928571
patch: for ( int ) { res . set CaMeL Entry ( ) ;
rank: 416
score: 99.24396158854167
patch: Iterator < Iterator > iter = res . entries . entries ( ) ;
rank: 416
score: 99.20902876420455
patch: Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) ; )
rank: 416
score: 99.19386919806985
patch: int iter = v . length ; Iterator iter = res . iterator ( ) ;
rank: 416
score: 99.19239153180804
patch: double [ ] res = new double [ v . length ] ;
rank: 416
score: 99.1810302734375
patch: Iterator < boolean >= iter = res . entries . iterator ( ) ;
rank: 417
score: 99.243896484375
patch: Iterator iter = res . entries . iterator ( ) - $NUMBER$ ;
rank: 417
score: 99.20887822690217
patch: Iterator iter = res . list . iterator ( ) ; Iterator iter = res . list . iterator ( ) ;
rank: 417
score: 99.1993896484375
patch: Iterator iter = Math . iterator ( res . entries ( ) ) ;
rank: 417
score: 99.19384765625
patch: try { Iterator iter = v . iterator ( ) ;
rank: 417
score: 99.1809414950284
patch: Iterator iter ? res . entries . entries . iterator ( ) . has CaMeL Next ( ) ; ) ;
rank: 417
score: 99.1664047241211
patch: Iterator iter = res . iter . next ( ) . entries ( ) ;
rank: 417
score: 99.15148053850446
patch: while ( res . entries . size ( ) > 0 ) {
rank: 418
score: 99.24339948381696
patch: Iterator iter = $NUMBER$ + res . entries . iterator ( ) ;
rank: 418
score: 99.2269287109375
patch: Iterator iter = res [ length ] . entries . iterator ( ) ;
rank: 418
score: 99.22050258091518
patch: Iterator iter = res . get ( res . iterator ( ) ;
rank: 418
score: 99.2085848721591
patch: System . arraycopy ( v , 0 , res . entries , 0 , res . entries . length ) ;
rank: 418
score: 99.1993637084961
patch: Iterator iter = res . entries != null ? res . iterator ( ) ;
rank: 418
score: 99.19366455078125
patch: if ( v != null ) res . res . res . res . res . res . )
rank: 418
score: 99.18087948069854
patch: Iterator < Class > iter = res . entries . entries . iterator ( ) ;
rank: 418
score: 99.16634427584134
patch: Iterator iter = res . entries . iterator ( $NUMBER$ ) ;
rank: 419
score: 99.22683279854911
patch: Iterator iter = v . entries . iterator ( ) ; for (
rank: 419
score: 99.22044881184895
patch: Iterator iter = res . iterator ( ) ; ) ;
rank: 419
score: 99.1992899576823
patch: Iterator [ ] res = res . entries ( ) ;
rank: 419
score: 99.1935546875
patch: res . res = res . entries . entries . iterator ( ) ;
rank: 419
score: 99.15059116908482
patch: Object [ ] iter = res . entries . iterator ( ) ;
rank: 420
score: 99.242333984375
patch: Iterator < Iterator < ? > iter = res . iterator ( ) ;
rank: 420
score: 99.2265625
patch: Iterator iter = res . entries ( ) . iterator ( ) ; *
rank: 420
score: 99.22028350830078
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter .
rank: 420
score: 99.19889322916667
patch: Iterator iter = res . entries ( ) . add ( this ) ;
rank: 420
score: 99.19351196289062
patch: Iterator iter = res . entries ( ) . iterator ( ) ; null ;
rank: 420
score: 99.17990112304688
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries ( ) )
rank: 420
score: 99.14984130859375
patch: Iterator iter = res . next ( ) . entries . length ;
rank: 421
score: 99.24200439453125
patch: int entries = res . iterator ( ) . size ( ) ;
rank: 421
score: 99.198583984375
patch: List iter = res . entries ( ) ;
rank: 421
score: 99.193359375
patch: if ( ! res . is CaMeL Empty ( ) ) return res ;
rank: 421
score: 99.19163295200893
patch: Iterator iter = res . close ( ) . entries ( ) ;
rank: 421
score: 99.17975725446429
patch: Iterator < String > iter = res . entries . to CaMeL Array ( ) . iterator ( ) ;
rank: 421
score: 99.16475830078124
patch: Iterator iter = res . length ( ) ;
rank: 421
score: 99.14899151141827
patch: Iterator iter = ( Iterator ) entries . iterator ( ) ;
rank: 422
score: 99.24135916573661
patch: if ( res != null ) res . remove ( res ) ;
rank: 422
score: 99.2258544921875
patch: Iterator iter = res . entries . entries ( ) [ 1 ] ;
rank: 422
score: 99.21861049107143
patch: Iterator iter = res . iterator ( ) ; entries = 0 ;
rank: 422
score: 99.19851449819711
patch: Iterator < ] > iter = entries . iterator ( ) ;
rank: 422
score: 99.19333065257354
patch: Iterator iter = v [ 1 ] . entries ( ) . iterator ( ) ;
rank: 422
score: 99.1912841796875
patch: Iterator iter = $NUMBER$ : res . entries . iterator ( ) ;
rank: 422
score: 99.17920532226563
patch: Iterator iter = res . entries ( ) . Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 422
score: 99.16464669363839
patch: Iterator iter = res . contains ( v [ 0 ] ) ;
rank: 422
score: 99.14896937779018
patch: Iterator iter = res . entries . Math . iterator ( ) ;
rank: 423
score: 99.20809775904605
patch: iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 423
score: 99.19827270507812
patch: Iterator size = res . entries . iterator ( ) ;
rank: 423
score: 99.19317626953125
patch: Collection res = res . entries ( ) . iterator ( ) ;
rank: 423
score: 99.19073955829327
patch: Iterator iter = res . entries ( ) . ( ) ;
rank: 424
score: 99.24080657958984
patch: Iterator < String > iter = res . entries . iterator ( ) ; ;
rank: 424
score: 99.2239501953125
patch: synchronized ( this ) { Iterator iter = res . iterator ( ) ;
rank: 424
score: 99.21694946289062
patch: / ; Iterator iter = res . iterator ( ) ;
rank: 424
score: 99.20777994791666
patch: res . entries = new Iterator [ res . size ( ) ] ;
rank: 424
score: 99.1982421875
patch: int iter . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 424
score: 99.19313677619485
patch: int iter = v . length ; Iterator iter = v . iterator ( ) ;
rank: 424
score: 99.1784732216283
patch: Iterator < String > iter = res . entries ( ) . entries . iterator ( ) ;
rank: 424
score: 99.14794921875
patch: int iter = iter . has CaMeL Next ( ) ;
rank: 425
score: 99.24067957261029
patch: Iterator < Iterator > ] = res . entries ( ) . iterator ( ) ;
rank: 425
score: 99.20755137567934
patch: iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 425
score: 99.193115234375
patch: Iterator < Iterator < T > iter = res . iterator ( ) ;
rank: 425
score: 99.17790004185268
patch: final final Iterator iter = res . entries . iterator ( ) ;
rank: 425
score: 99.1630859375
patch: Iterator iter 1 = res . entries . iterator ( ) ;
rank: 425
score: 99.14789287860577
patch: Iterator < Entry = res . entries . iterator ( ) ;
rank: 426
score: 99.22349548339844
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector [ ] ;
rank: 426
score: 99.21624755859375
patch: Iterator iter . iterator = res . entries . iterator ( ) ;
rank: 426
score: 99.20731977982955
patch: Iterator iter = key . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 426
score: 99.19757549579327
patch: Iterator < Class > iter = res . entries ( ) ;
rank: 426
score: 99.17789306640626
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) ; ) {
rank: 426
score: 99.16165364583334
patch: Iterator < int [ ] > iter = res . iterator ( ) ;
rank: 426
score: 99.14732947716347
patch: final Iterator iter = v . entries . iterator ( ) ;
rank: 427
score: 99.24045235770089
patch: final Iterator < String > iter = res . entries ( ) ;
rank: 427
score: 99.2231201171875
patch: Iterator iter = ebe CaMeL Multiply ( v ) . iterator ( ) ;
rank: 427
score: 99.21621268136161
patch: entries . Iterator iter = res . entries . iterator ( ) ;
rank: 427
score: 99.2072521391369
patch: Iterator iter = v . entries ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 427
score: 99.19275665283203
patch: if ( res . entries . size ( ) != 0 ) return res ;
rank: 427
score: 99.188525390625
patch: for ( final Iterator iter = res . entries . iterator ( ) ;
rank: 427
score: 99.17767803485577
patch: Iterator iter = res . entries [ v . length ] ;
rank: 428
score: 99.24034016927084
patch: final Iterator iter = res . list ( ) . iterator ( ) ;
rank: 428
score: 99.19227600097656
patch: if ( res . entries . size ( ) <= 0 ) return res ;
rank: 428
score: 99.18798828125
patch: new Open CaMeL Map CaMeL Real CaMeL Vector ( this , res ) ;
rank: 428
score: 99.16139322916666
patch: Iterator iter = res . entries . iterator ( res . length ) ;
rank: 428
score: 99.14621206430289
patch: final Iterator iter = this . entries . iterator ( ) ;
rank: 429
score: 99.22229766845703
patch: Iterator iter = res . entries . iterator ( ) ; / * for (
rank: 429
score: 99.20695356889205
patch: Iterator iter = res . list . Iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 429
score: 99.19669596354167
patch: Iterator iter = res . entries ( ) . remove ( 1 ) ;
rank: 429
score: 99.19205729166667
patch: Iterator iter = res . entries ( ) 1 . iterator ( ) ;
rank: 429
score: 99.1876220703125
patch: Iterator iter = res . substring ( 1 ) . iterator ( ) ;
rank: 429
score: 99.17619054457721
patch: Iterator < iter > iter = res . entries . entries . iterator ( ) ;
rank: 429
score: 99.16106708233173
patch: iter = res . entries ( ) . iterator ( ) ;
rank: 429
score: 99.1455586751302
patch: Iterator iter |= res . entries . iterator ( ) ;
rank: 430
score: 99.2401984719669
patch: Iterator < double > iter = res . entries ( ) . iterator ( ) ;
rank: 430
score: 99.22227260044643
patch: Iterator iter = res . entries . size . iterator ( ) ;
rank: 430
score: 99.21507161458334
patch: Iterator iter = null ; Iterator iter = res . iterator ( ) ;
rank: 430
score: 99.20637650923295
patch: Iterator iter = exp . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 430
score: 99.19655354817708
patch: iterator = res . entries ( ) ;
rank: 430
score: 99.19166475183823
patch: Iterator iter = v [ entries . size ( ) ] . iterator ( ) ;
rank: 430
score: 99.1873046875
patch: Iterator iter = res . entries . entries . iterator ( 1 ) ;
rank: 430
score: 99.17604758522727
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector > iter =
rank: 430
score: 99.14520733173077
patch: Iterator ++ iter = res . entries . iterator ( ) ;
rank: 431
score: 99.22218951056985
patch: synchronized ( res ) { Iterator iter = v . entries . iterator ( ) ;
rank: 431
score: 99.19650704520089
patch: Iterator next = res . entries ( ) . iterator ( ) ;
rank: 431
score: 99.19158325195312
patch: Iterator entries = res . entries ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 431
score: 99.18727805397727
patch: Iterator iter = res . add ( this ) ;
rank: 431
score: 99.17599283854166
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector ) ;
rank: 431
score: 99.158984375
patch: Iterator iter = res . add ( iter . next ( ) ) ;
rank: 432
score: 99.2397689819336
patch: Iterator < Object > iter = res . entries . iterator ( ) ; }
rank: 432
score: 99.22200520833333
patch: Iterator iter = res [ $STRING$ ] . entries . iterator ( ) ;
rank: 432
score: 99.21462833180146
patch: Iterator iter = res . entries . iter ( ) ; Iterator iter = 0 ;
rank: 432
score: 99.20636858258929
patch: Iterator iter = res . size ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 432
score: 99.1915283203125
patch: Iterator iter = v . entries ( ) ; while ( . has CaMeL Next ( ) )
rank: 432
score: 99.1872314453125
patch: Iterator iter = res . entries . entries . iterator ( ) ) ;
rank: 432
score: 99.17585100446429
patch: this . res . set CaMeL Entry ( iter . key ( ) , iter . value ( ) *
rank: 432
score: 99.15836275540866
patch: Iterator iter = res [ iter . length - 1 ] ;
rank: 432
score: 99.143310546875
patch: Iterator < double > iter = entries . iterator ( ) ;
rank: 433
score: 99.23880208333334
patch: Iterator < ? > entries = res . entries . iterator ( ) ;
rank: 433
score: 99.20584445529514
patch: Iterator iter = res ; while ( iter . has CaMeL Next ( ) ) { )
rank: 433
score: 99.19603620256696
patch: Iterator size = res . entries ( ) . iterator ( ) ;
rank: 433
score: 99.1913592998798
patch: Iterator < E > iter = v . iterator ( ) ;
rank: 433
score: 99.17583937872024
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . clone ( ) ;
rank: 433
score: 99.14162973257211
patch: Iterator iter ( res . has CaMeL Next ( ) ) {
rank: 434
score: 99.23872884114583
patch: final Iterator < T > iter = res . entries ( ) . iterator ( ) ;
rank: 434
score: 99.21431187220982
patch: Iterator iter = res . iterator ( ) ; iterator = 0 ;
rank: 434
score: 99.20547340029762
patch: Iterator iter = res . get ( res . get CaMeL Id ( ) ) . entries ( ) ;
rank: 434
score: 99.1912906044408
patch: synchronized ( this ) { Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 434
score: 99.18617466517857
patch: Iterator iter = res . format . entries . iterator ( ) ;
rank: 434
score: 99.17557525634766
patch: Iterator iter = res . entries [ iter . has CaMeL Next ( ) ;
rank: 435
score: 99.23797200520833
patch: Iterator < byte > iter = res . entries . iterator ( ) ;
rank: 435
score: 99.21408315805289
patch: iterator = res . entries . entries . iterator ( ) ;
rank: 435
score: 99.20539994673295
patch: Iterator iter = res . data . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 435
score: 99.17547607421875
patch: Iterator iter = res . entries ( ) . entries ( ) . entries . iterator ( ) ;
rank: 435
score: 99.14069475446429
patch: Iterator iter = res . entries . iterator ( ) ; / :
rank: 436
score: 99.20537651909723
patch: Iterator iter = res ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 436
score: 99.19561767578125
patch: Iterator iter = res . entries = res . copy ( ) ;
rank: 436
score: 99.1853271484375
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . set ( v ) ;
rank: 436
score: 99.1406719501202
patch: Iterator iter = v . entries . iterator ( ) ; }
rank: 437
score: 99.237158203125
patch: Iterator < Object > res = res . entries . iterator ( ) ;
rank: 437
score: 99.21988932291667
patch: Iterator iter = res . get CaMeL Entry ( v . length ) ;
rank: 437
score: 99.20526677911931
patch: Iterator entries = res . entries . iterator ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 437
score: 99.19529215494792
patch: int iter = res . value . iterator ( ) ;
rank: 437
score: 99.1907097311581
patch: Iterator iter = v [ entries . length - 1 ] . iterator ( ) ;
rank: 437
score: 99.14030238560268
patch: entries . Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 438
score: 99.2197265625
patch: Iterator iter = res . entries = v . iterator ( ) ;
rank: 438
score: 99.21292550223214
patch: Iterator iter = new Object [ res . size ( ) ] ;
rank: 438
score: 99.20526123046875
patch: synchronized ( res ) { iter = res . entries . size ( ) ;
rank: 438
score: 99.19510591947116
patch: int < ] > entries = res . entries ( ) ;
rank: 438
score: 99.19069213867188
patch: if ( res . entries != null ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 438
score: 99.18468424479167
patch: Iterator iter = v . entries . ( ) . iterator ( ) ;
rank: 438
score: 99.17410098805146
patch: Iterator < Class < ? > iter = res . entries . iterator ( ) ;
rank: 438
score: 99.1568603515625
patch: Iterator iter = res . get CaMeL Data ( ) . entries ( ) ;
rank: 438
score: 99.14029366629464
patch: Iterator iter = res . [ v . length - 1 ] ;
rank: 439
score: 99.21932547433036
patch: Iterator iter = this . res . length . iterator ( ) ;
rank: 439
score: 99.20522238991477
patch: Iterator map = res . entries . iterator ( ) ; while ( map . has CaMeL Next ( ) )
rank: 439
score: 99.19508579799107
patch: final Iterator < ] > iter = res . entries ( ) ;
rank: 439
score: 99.1901123046875
patch: List iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 439
score: 99.17409104567308
patch: Iterator iter = res . entries . iterator ( length ) ;
rank: 440
score: 99.2365234375
patch: Iterator < Iterator > ] = res . entries . iterator ( ) ;
rank: 440
score: 99.2192023782169
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . length ;
rank: 440
score: 99.212646484375
patch: Iterator iter = res . entries ( ) . iterator ( ) ; Iterator
rank: 440
score: 99.2051669034091
patch: Iterator iter = min . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 440
score: 99.17405870225694
patch: Iterator iter = res . entries . iterator ( ) ; System . iterator ( ) ;
rank: 440
score: 99.13898174579327
patch: Iterator < double > iter = res . size ( ) ;
rank: 441
score: 99.23607680376838
patch: Iterator < String > res = res . entries ( ) . iterator ( ) ;
rank: 441
score: 99.2051025390625
patch: System . arraycopy ( v , 0 , res . entries , 0 , res . length ) ;
rank: 441
score: 99.19391276041667
patch: Iterator iter = res . entries ( ) . append ( res ) ;
rank: 441
score: 99.18943876378677
patch: Iterator iter = res . entries ; Iterator iter = v . iterator ( ) ;
rank: 441
score: 99.173828125
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries [ v . length ] ;
rank: 441
score: 99.13883666992187
patch: Iterator res = res . iterator ( ) ;
rank: 442
score: 99.23568021334134
patch: Iterator < int > iter = res . size ( ) ;
rank: 442
score: 99.21152630974265
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . }
rank: 442
score: 99.20492393092105
patch: Iterator iter = v . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 442
score: 99.1936543782552
patch: Iterator * ] entries = res . entries ( ) ;
rank: 442
score: 99.18898111979166
patch: res . res = res . entries . size ( ) - 1 ;
rank: 442
score: 99.1824951171875
patch: Iterator iter = res . entries . ( ) ;
rank: 442
score: 99.15481131417411
patch: Iterator iter = res . iter ( ) . iterator ( ) ;
rank: 443
score: 99.235107421875
patch: Iterator < float > iter = res . entries . iterator ( ) ;
rank: 443
score: 99.21814778645833
patch: Iterator iter = res . entries . entries ( ) . iterator ( )
rank: 443
score: 99.18884995404412
patch: Iterator < Number > iter = res . entries ( ) . iterator ( ) ;
rank: 443
score: 99.13829627403847
patch: final Iterator iterator = res . entries . iterator ( ) ;
rank: 444
score: 99.21731567382812
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . set CaMeL Entry ( ) ;
rank: 444
score: 99.21151733398438
patch: Iterator iter = res . iterator ( ) ; ) {
rank: 444
score: 99.2046630859375
patch: Iterator iter = res . list ( 1 ) . iterator ( ) ;
rank: 444
score: 99.18882446289062
patch: if ( res != null ) res . Iterator iter = res . iterator . iterator ( ) ;
rank: 444
score: 99.17353166852679
patch: Iterator iter = data . entries ( ) . iterator ( ) ;
rank: 444
score: 99.13765775240384
patch: Iterator iter = iter . has CaMeL Next ( ) ; {
rank: 445
score: 99.21644694010416
patch: Iterator iter { Iterator iter = res . entries . iterator ( ) ;
rank: 445
score: 99.20451049804687
patch: Iterator iter = key . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 445
score: 99.19239220252403
patch: Iterator < String >> iter = res . entries ( ) ;
rank: 445
score: 99.18779553865132
patch: if ( res != null ) { res . entries = res . entries . entries ; }
rank: 445
score: 99.18134307861328
patch: Iterator iter = res . entries . entries . entries . entries . length ;
rank: 445
score: 99.17341694078948
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ( ) .
rank: 445
score: 99.1373291015625
patch: Iterator iter = res . entries . iterator ( ) ; ; ;
rank: 446
score: 99.23487006293402
patch: Iterator iter = res . entries == null ? null : res . iterator ( ) ;
rank: 446
score: 99.18732048483456
patch: Collection res = res . entries ; Iterator iter = res . iterator ( ) ;
rank: 446
score: 99.17335420496323
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector entries : res . entries ) {
rank: 446
score: 99.1531982421875
patch: Iterator iter = iter . next ( ) . iterator ( ) ;
rank: 446
score: 99.13636271158855
patch: Iterator iter = res . copy . iterator ( ) ;
rank: 447
score: 99.20408993675595
patch: Iterator iter = res . entries . iterator ( ) ; finally { res . close ( ) ; }
rank: 447
score: 99.19109700520833
patch: for ( Iterator iter = res . entries . iterator ( ) ; }
rank: 447
score: 99.18698299632354
patch: Iterator < Iterator < E > iter = res . entries . iterator ( ) ;
rank: 447
score: 99.15254974365234
patch: Iterator iter = res != null ? res . size ( ) : false ;
rank: 447
score: 99.13622029622395
patch: Iterator iter = res . data . size ( ) ;
rank: 448
score: 99.23479147518383
patch: Iterator < char [ ] > iter = res . entries . iterator ( ) ;
rank: 448
score: 99.21024263822116
patch: Iterator iter = res . iterator ( ) ; iter ++ ;
rank: 448
score: 99.20364815848214
patch: Iterator iter = v . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 448
score: 99.19087524414063
patch: Iterator iter = entries . entries ( ) ;
rank: 448
score: 99.18692819695724
patch: Iterator iter = res . iterator ( ) ; else iter = res . iterator ( ) ;
rank: 449
score: 99.23468981291118
patch: Iterator iter = res . entries ( ) . entries ( ) . iterator ( ) ) ;
rank: 449
score: 99.20356830797698
patch: Iterator iter = res . entries ; ; while ( iter . has CaMeL Next ( ) )
rank: 449
score: 99.18660794771634
patch: Iterator iter = res . entries 1 . iterator ( ) ;
rank: 449
score: 99.13536376953125
patch: Iterator res = res . size ( ) ;
rank: 450
score: 99.23463841488487
patch: Iterator < Iterator < String > iter = res . entries ( ) . iterator ( ) ;
rank: 450
score: 99.21221160888672
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = new Entry ( this ) ;
rank: 450
score: 99.20962289663461
patch: final Iterator iter = res . entries . entries ( ) ;
rank: 450
score: 99.2034579190341
patch: Iterator iter = res . entries . next ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 450
score: 99.18564453125
patch: Iterator iter 1 = res . entries ( ) . iterator ( ) ;
rank: 450
score: 99.1712646484375
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( res .
rank: 451
score: 99.2116928100586
patch: Iterator iter = new while ( iter . has CaMeL Next ( ) ) {
rank: 451
score: 99.20953776041667
patch: Iterator iter = res . entries . iterator ( ) ; = 0 ;
rank: 451
score: 99.20338023792614
patch: Iterator iter = this . iterator . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 451
score: 99.18551974826389
patch: if ( res != null ) res . res = res . entries ( ) . ;
rank: 451
score: 99.17115129743304
patch: if ( res instanceof Open CaMeL Map CaMeL Real CaMeL Vector ) {
rank: 451
score: 99.15166766826923
patch: Iterator iter = res [ iter . next ( ) ] ;
rank: 451
score: 99.1353290264423
patch: Iterator iter = res . entries . size ( ) ; {
rank: 452
score: 99.23450520833333
patch: Iterator < ? > iter = res . entries . size ( ) ;
rank: 452
score: 99.20926920572917
patch: Iterator iter = ( Iterator ) res . entries . iter ( ) ;
rank: 452
score: 99.18546236478366
patch: Iterator iter = v [ entries . size ( ) ] ;
rank: 452
score: 99.17094282670455
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( 0 ) ;
rank: 452
score: 99.15089634486607
patch: Object [ ] res = new int [ res . length ] ;
rank: 452
score: 99.13323102678571
patch: Iterator iter = res . entries . iterator ( ) ; do {
rank: 453
score: 99.21048409598214
patch: Iterator iter = res . length * v . iterator ( ) ;
rank: 453
score: 99.20891974954044
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ; Iterator
rank: 453
score: 99.18894606370192
patch: Iterator iter = res [ null ] . iterator ( ) ;
rank: 453
score: 99.16984419389205
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector > < )
rank: 453
score: 99.15000406901042
patch: Iterator iter = res : res . iterator ( ) ;
rank: 454
score: 99.23416341145834
patch: final Iterator iter = res . size ( ) . iterator ( ) ;
rank: 454
score: 99.18365071614583
patch: if ( res . size ( ) > res . size ( ) )
rank: 454
score: 99.16938781738281
patch: Iterator iter = res . entries . entries . iterator ( ) - 1 ;
rank: 454
score: 99.14923967633929
patch: Iterator iter = res . trim ( ) . iter ( ) ;
rank: 455
score: 99.2028475674716
patch: Iterator iter = res . list . iterator ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 455
score: 99.18811907087054
patch: Iterator < * T : res . entries . iterator ( ) ;
rank: 455
score: 99.18352194393383
patch: if ( res . entries != null && res . entries . size ( ) ;
rank: 455
score: 99.16890462239583
patch: while ( res . iterator ( ) . has CaMeL Next ( ) )
rank: 455
score: 99.13186645507812
patch: Iterator iter = res . err . iterator ( ) ;
rank: 456
score: 99.20976257324219
patch: Iterator iter = res . list . entries ( ) . entries ( ) ;
rank: 456
score: 99.20790728400735
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = 1 ;
rank: 456
score: 99.20281110491071
patch: Iterator iter = res . iterator ( ) ; while ( entries . has CaMeL Next ( ) ) {
rank: 456
score: 99.18807983398438
patch: Iterator next = res . entries . iterator ( ) ;
rank: 456
score: 99.18284098307292
patch: if ( res != null ) res . ) res . res = res . entries ;
rank: 456
score: 99.17665201822916
patch: Iterator iter = res . format ( this ) . iterator ( ) ;
rank: 457
score: 99.20974934895834
patch: Iterator iter = v [ iter . entries . iterator ( ) ] ;
rank: 457
score: 99.2022769325658
patch: Iterator iter = for . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 457
score: 99.18280639648438
patch: if ( v != null ) res . Iterator iter = res . entries . iterator ( ) ;
rank: 457
score: 99.14884948730469
patch: Iterator iter = res . value . entries ( ) . entries ( ) ;
rank: 458
score: 99.20771789550781
patch: res . set CaMeL Entry ( iter . advance ( ) , this ) ;
rank: 458
score: 99.20183919270833
patch: Iterator < Exception > iter = res . entries . iterator ( ) ;
rank: 458
score: 99.18749186197917
patch: Iterator iter = res . entries . index CaMeL Of ( res ) ;
rank: 458
score: 99.1824951171875
patch: Collection res = res . entries ( ) ;
rank: 458
score: 99.14884730747768
patch: Iterator iter = v . size ( ) . iterator ( ) ;
rank: 458
score: 99.13055889423077
patch: final Iterator iter = entries . entries . iterator ( ) ;
rank: 459
score: 99.20748901367188
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = ebe CaMeL Multiply ( ) ;
rank: 459
score: 99.20536534926471
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ; .
rank: 459
score: 99.20183771306819
patch: Iterator iter = res . entries . iterator ( ) ; ; finally { res . close ( ) ; }
rank: 459
score: 99.1824951171875
patch: if ( res != null ) Iterator iter = res . iterator . iterator ( ) ;
rank: 459
score: 99.13036092122395
patch: List iter = res . entries . size ( ) ;
rank: 460
score: 99.2330322265625
patch: Iterator iter = 0 . entries . iterator ( ) ;
rank: 460
score: 99.2073465983073
patch: check CaMeL Vector CaMeL Dimensions ( res . length ) ;
rank: 460
score: 99.20515659877232
patch: Iterator iter = res . iterator ( ) ; entries = null ;
rank: 460
score: 99.20177641369048
patch: for ( Iterator iterator = v . iterator ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 460
score: 99.18723842075893
patch: Iterator iter = res . entries ( ) . append ( ) ;
rank: 460
score: 99.18224225725446
patch: Iterator iter ; while ( iter . has CaMeL Next ( ) )
rank: 460
score: 99.16644577752976
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . Iterator ( ) ;
rank: 460
score: 99.1480484008789
patch: Iterator iter = res == new Open CaMeL Map CaMeL Real CaMeL Vector ( )
rank: 460
score: 99.13023963341347
patch: Iterator iter = entries [ entries . size ( ) ] ;
rank: 461
score: 99.23288861443015
patch: Iterator < long > iter = res . entries ( ) . iterator ( ) ;
rank: 461
score: 99.18545968191964
patch: Iterator iter = res . entries = entries . iterator ( ) ;
rank: 461
score: 99.17513020833333
patch: Open CaMeL Map CaMeL Real CaMeL Vector res ( res , this ) ;
rank: 461
score: 99.16614879261364
patch: Iterator iter = res . entries != null ? res . entries . entries . iterator ( ) : null ;
rank: 461
score: 99.14745221819196
patch: Iterator iter = this . this . entries . iterator ( ) ;
rank: 461
score: 99.13001598011364
patch: Iterator iter = res . contains ( this ) ;
rank: 462
score: 99.23282063802084
patch: Iterator iter = 0 . iter ( res . size ( ) ) ;
rank: 462
score: 99.20461856617646
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = false ;
rank: 462
score: 99.20149739583333
patch: Iterator iter = res . iter ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 462
score: 99.18538120814732
patch: Iterator iter = res . entries ( ) ; for ( ) {
rank: 462
score: 99.18136257595486
patch: if ( res != null ) res . res = res . entries . iterator ( )
rank: 462
score: 99.14704241071429
patch: Real CaMeL Vector iter = res . entries . iterator ( ) ;
rank: 463
score: 99.23269418569711
patch: final Iterator iter = res . list . iterator ( ) ;
rank: 463
score: 99.20645141601562
patch: Iterator iter = v . entries ( ) . iterator ( ) ; for (
rank: 463
score: 99.20415852864583
patch: Iterator iter = res . entries . iter ( ) ; = null ;
rank: 463
score: 99.18122209821429
patch: boolean iter = res . entries . size ( ) > 0 ;
rank: 463
score: 99.173828125
patch: Iterator iter = res . entries . entries . iterator ( 0 ) ;
rank: 464
score: 99.23197667738971
patch: Iterator < byte [ ] > iter = res . entries . iterator ( ) ;
rank: 464
score: 99.20322265625
patch: Iterator iter = res . entries . iterator ( ) ; ; / /
rank: 464
score: 99.20139973958334
patch: Iterator iter ; while ( iter . has CaMeL Next ( ) ) {
rank: 464
score: 99.1811767578125
patch: Iterator iter = res . entries ( ) . iterator ( ) ; System . out . ) ;
rank: 464
score: 99.17382049560547
patch: Iterator iter = res . get CaMeL Id ( ) . entries ( ) ;
rank: 464
score: 99.16515299479167
patch: Iterator < int ) iter = res . entries . iterator ( ) ;
rank: 464
score: 99.14695739746094
patch: Iterator iter = res != null ? res . iterator ( ) : false ;
rank: 464
score: 99.12890625
patch: for ( while ( iter . has CaMeL Next ( ) ) {
rank: 465
score: 99.23172200520834
patch: Iterator < Iterator > iter = res . entries . size ( ) ;
rank: 465
score: 99.20611165364583
patch: Iterator iter = res . length [ 0 ] . iterator ( ) ;
rank: 465
score: 99.20106090198864
patch: Iterator iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 465
score: 99.18453543526786
patch: Iterator iter = res . round ( ) . iterator ( ) ;
rank: 465
score: 99.18088989257812
patch: List iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 465
score: 99.17359924316406
patch: Iterator iter = res . next ( ) . ebe CaMeL Multiply ( ) ;
rank: 465
score: 99.1645740327381
patch: Iterator < Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 465
score: 99.12872314453125
patch: int iter = v . entries . iterator ( ) ;
rank: 466
score: 99.20082310267857
patch: Iterator iter = map . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 466
score: 99.18408203125
patch: Iterator iter = res . Entry . entries . iterator ( ) ;
rank: 466
score: 99.18068284254808
patch: Iterator iter = res . entries $NUMBER$ . iterator ( ) ;
rank: 466
score: 99.16453450520834
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res .
rank: 466
score: 99.14641927083333
patch: Iterator iter = res . contains ( res . size ( ) ) ;
rank: 466
score: 99.12869966947116
patch: Iterator iter = res [ v . length - 1 ] ;
rank: 467
score: 99.23068673270089
patch: Iterator iter = res . iterator = res . iterator ( ) ;
rank: 467
score: 99.20584542410714
patch: Iterator iter = ebe CaMeL Multiply ( ) . iterator ( ) ;
rank: 467
score: 99.20094651442308
patch: Iterator iter = res . entries . entries iterator ( ) ;
rank: 467
score: 99.20014784071181
patch: Iterator iterator = res . entries ; while ( iterator . has CaMeL Next ( ) )
rank: 467
score: 99.18306187220982
patch: Iterator list = res . entries ( ) . iterator ( ) ;
rank: 467
score: 99.18043736049107
patch: Object [ ] res = new Object [ v . length ] ;
rank: 467
score: 99.17279052734375
patch: do { Iterator iter = res . entries . iterator ( ) ;
rank: 467
score: 99.16451822916666
patch: Iterator < Integer > iter = v . entries . iterator ( ) ;
rank: 467
score: 99.14591471354167
patch: Iterator iter = res . entries . entries . iterator ( ) 1 ;
rank: 468
score: 99.20009202223558
patch: Iterator < void > iter = res . iterator ( ) ;
rank: 468
score: 99.1803955078125
patch: Iterator iter = res . iterator ( ) ; this . res = res . iterator ( ) ;
rank: 468
score: 99.17222493489584
patch: Iterator iter = res . entries . read ( v . length ) ;
rank: 468
score: 99.14565805288461
patch: Iterator iter = res 1 . entries . iterator ( ) ;
rank: 468
score: 99.12660435267857
patch: Iterator iter = res . floor ( ) . entries ( ) ;
rank: 469
score: 99.22977447509766
patch: Iterator < int > iter = res . entries . iterator ( ) ; else
rank: 469
score: 99.2055908203125
patch: Iterator iter = res . ebe CaMeL Multiply ( v . length ) ;
rank: 469
score: 99.20005696614584
patch: Iterator iter = res . entries . iter ( ) ; iterator ++ ;
rank: 469
score: 99.18274864783653
patch: Iterator < ] > iter = res . copy ( ) ;
rank: 469
score: 99.18032355057566
patch: if ( res . entries . iterator ( ) . has CaMeL Next ( ) ) break ;
rank: 469
score: 99.14534214564732
patch: Iterator iter = v . data . entries . iterator ( ) ;
rank: 469
score: 99.12621131310097
patch: entries . iterator ( ) . has CaMeL Next ( ) ;
rank: 470
score: 99.2296612079327
patch: Iterator < synchronized > iter = res . iterator ( ) ;
rank: 470
score: 99.20526529947917
patch: Iterator iter = res . length [ 1 ] . iterator ( ) ;
rank: 470
score: 99.19981800426136
patch: Iterator iter = res . map . size ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 470
score: 99.17130533854167
patch: Iterator iter = 1 . entries . iterator ( ) ;
rank: 471
score: 99.19964599609375
patch: Iterator iter = new Object [ res . iterator ( ) ] ;
rank: 471
score: 99.18230329241071
patch: Iterator iter = new String [ res . size ( ) ] ;
rank: 471
score: 99.17974384014423
patch: Object res = res . entries . get ( $STRING$ ) ;
rank: 471
score: 99.16332289751838
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . res ) {
rank: 471
score: 99.14473179408482
patch: Iterator iter >> iterator = res . entries . iterator ( ) ;
rank: 471
score: 99.12588266225961
patch: final Iterator entries = res . entries . iterator ( ) ;
rank: 472
score: 99.22901153564453
patch: Iterator iter = res . entries ( ) . size ( ) - 1 ;
rank: 472
score: 99.19954136439732
patch: iter iter = res . entries . entries . iterator ( ) ;
rank: 472
score: 99.18137032645089
patch: for ( ) { Iterator iter = res . iterator ( ) ;
rank: 472
score: 99.14462716238839
patch: Iterator iter = res . entries . iterator ( ) : res ;
rank: 473
score: 99.20126953125
patch: Iterator iter = res [ v . length ] . iterator ( ) ;
rank: 473
score: 99.19922593060662
patch: for ( int iter = 0 ; iter . has CaMeL Next ( ) ; )
rank: 473
score: 99.17937762920673
patch: Iterator iter = res . entries ( iterator ( ) ) ;
rank: 473
score: 99.17011369977679
patch: check CaMeL Vector CaMeL Dimensions ( res . size ( ) ) ;
rank: 473
score: 99.12561645507813
patch: Iterator iter = entries . iter ( ) ;
rank: 474
score: 99.22859700520833
patch: if ( res == null ) Iterator iter = res . entries . iterator ( ) ;
rank: 474
score: 99.1991854580966
patch: Iterator iter = v . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 474
score: 99.17935884915866
patch: Iterator iter = res . entries ( ) . iterator ( ;
rank: 475
score: 99.228564453125
patch: Iterator < private > iter = res . entries . iterator ( ) ;
rank: 475
score: 99.19911822150735
patch: Iterator iter = res . get CaMeL Classes ( ) . iterator ( ) ; ;
rank: 475
score: 99.1980842141544
patch: synchronized ( $STRING$ ) { Iterator iter = res . entries . iterator ( ) ;
rank: 475
score: 99.180908203125
patch: Iterator iter = res . entries ( ) . Iterator ( ) ;
rank: 475
score: 99.17901141826923
patch: res . entries = res . entries . size ( ) ;
rank: 475
score: 99.14364188058036
patch: Iterator iter = start . entries ( ) . iterator ( ) ;
rank: 475
score: 99.1248309795673
patch: Iterator Iterator iter = res . entries . size ( ) ;
rank: 476
score: 99.22847493489583
patch: res . iterator = res . entries ( ) . iterator ( ) ;
rank: 476
score: 99.19910481770833
patch: Iterator iter = res . entries . entries . iterator ( ) ; *
rank: 476
score: 99.17991420200893
patch: Iterator iter = res . map ( ) . iterator ( ) ;
rank: 476
score: 99.17900739397321
patch: Collection res = res . iterator ( ) . next ( ) ;
rank: 476
score: 99.16240900213069
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ( v . length ) ;
rank: 476
score: 99.14316231863839
patch: Iterator iter = res . max ( ) . entries ( ) ;
rank: 476
score: 99.12428501674107
patch: Iterator iter = res . entries . size ( ) ; while (
rank: 477
score: 99.22802734375
patch: Iterator < while > iter = res . entries . iterator ( ) ;
rank: 477
score: 99.1969353170956
patch: synchronized ( res ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 477
score: 99.17900647615132
patch: if ( res != null ) res . entries = res . entries . entries . entries ;
rank: 477
score: 99.16945103236607
patch: if ( res != null ) { res . advance ( ) ;
rank: 477
score: 99.16239624023437
patch: Iterator iter = res . entries . iterator ( ) ; System . out . iterator ( ) ;
rank: 478
score: 99.22737121582031
patch: Iterator iter = res . entries ( ) . iterator ( ) + 0 ;
rank: 478
score: 99.19828657670455
patch: Iterator iter = this . v . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 478
score: 99.1961337002841
patch: Iterator iter iter = res . iterator ( ) ;
rank: 478
score: 99.1790059407552
patch: / * Iterator iter = v . iterator ( ) ;
rank: 478
score: 99.16191755022321
patch: Iterator iter = res . entries : res . iterator ( ) ;
rank: 478
score: 99.123291015625
patch: Iterator iter = res . entries . iterator ( ) ; if (
rank: 479
score: 99.19823109019886
patch: iter = res . entries . iterator ( ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 479
score: 99.19617716471355
patch: res . set CaMeL Entry ( iter . key ) ;
rank: 479
score: 99.16167249177632
patch: Iterator < double [ ] > iter = this . res . entries . iterator ( ) ;
rank: 479
score: 99.12255859375
patch: final Iterator res = res . entries . iterator ( ) ;
rank: 480
score: 99.22701590401786
patch: final Iterator < String > entries = res . entries ( ) ;
rank: 480
score: 99.19821999289773
patch: Object iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 480
score: 99.1954704733456
patch: Iterator iter = 1 ; Iterator iter = res . entries . iterator ( ) ;
rank: 480
score: 99.17854139539931
patch: if ( res == null ) throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ;
rank: 480
score: 99.17829241071429
patch: Iterator iter = res . entries ( ) . join ( ) ;
rank: 480
score: 99.14210728236607
patch: Iterator iter = res != null ? res . length : 1 ;
rank: 481
score: 99.22689056396484
patch: Iterator iter = res . entries ( ) . entries ( ) != null ;
rank: 481
score: 99.19769287109375
patch: Iterator iter = res . entries ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 481
score: 99.19187709263393
patch: Iterator iter = res . [ 0 ] . iterator ( ) ;
rank: 481
score: 99.17849496694711
patch: Iterator iter = res . iterator ( res . length ) ;
rank: 481
score: 99.16744791666666
patch: Open CaMeL Map CaMeL Real CaMeL Vector res ( res * this ) ;
rank: 481
score: 99.16134207589286
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = v . entries . entries ( ) ;
rank: 482
score: 99.22648351332721
patch: Iterator < ? > iterator = res . entries ( ) . iterator ( ) ;
rank: 482
score: 99.19747314453124
patch: System . arraycopy ( res . entries , 0 , res , 0 , res . length ) ;
rank: 482
score: 99.17843424479166
patch: Iterator iter = res . iterator ( res . entries . length ) ;
rank: 482
score: 99.17817034040179
patch: Iterator iter = res . round ( ) . entries ( ) ;
rank: 482
score: 99.16725376674107
patch: Iterator iter = this . entries . entries . size ( ) ;
rank: 482
score: 99.16115851151316
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries ( ) ) {
rank: 482
score: 99.14193289620536
patch: Iterator iter = res . insert ( ) . iterator ( ) ;
rank: 483
score: 99.19746537642045
patch: Iter iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 483
score: 99.19480387369792
patch: Iterator iter = res . list . iter ( ) ;
rank: 483
score: 99.1783218383789
patch: Iterator iter = res . iterator ( ) ; synchronized ( res . entries )
rank: 483
score: 99.17814127604167
patch: Iterator iter = res . value . entries ( ) ;
rank: 483
score: 99.16725260416666
patch: Iterator iter = res . contains ( this ) + v . length ;
rank: 483
score: 99.16022600446429
patch: Iterator < Open CaMeL Map CaMeL Entry > iter = res . entries ( ) . iterator ( ) ;
rank: 483
score: 99.12102399553571
patch: for ( while ( res . has CaMeL Next ( ) ) {
rank: 484
score: 99.22623988560268
patch: final Iterator < Integer > iter = res . iterator ( ) ;
rank: 484
score: 99.19745950137867
patch: synchronized ( res ) { res . entries = res . entries . entries ; }
rank: 484
score: 99.19466458834134
patch: Iterator iter = res . entries . iterator ( ) ; Iterator
rank: 484
score: 99.17781575520833
patch: Iterator < ? extends E > iter = res . iterator ( ) ;
rank: 484
score: 99.159912109375
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . length ;
rank: 484
score: 99.14118194580078
patch: Iterator iter = res != null ? res . size ( ) : true ;
rank: 485
score: 99.19690551757813
patch: Iterator iter = res . remove ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 485
score: 99.1942626953125
patch: Iterator iter = res . entries ( ) . iterator ( ) ; .
rank: 485
score: 99.17752075195312
patch: Iterator list = res . entries ( ) ; while ( list . has CaMeL Next ( ) )
rank: 485
score: 99.1770489032452
patch: Iterator < String > iter = res . copy ( ) ;
rank: 485
score: 99.11985085227273
patch: Iterator iter = res . . size ( ) ;
rank: 486
score: 99.22514125279018
patch: final Iterator < String > iter = res . size ( ) ;
rank: 486
score: 99.1768798828125
patch: Iterator iter = res . entries ( ) . remove ( this ) ;
rank: 486
score: 99.15967610677083
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = null ;
rank: 487
score: 99.19328756893383
patch: Iterator iter = res . iterator ( ) ; = res . next ( ) ;
rank: 487
score: 99.18791060014205
patch: Iterator iter = res . entries . iterator ( )
rank: 487
score: 99.17678493923611
patch: if ( res != null ) res . Iterator iter = v . iterator ( ) ;
rank: 487
score: 99.15962357954545
patch: for ( int ) { iter = res . entries . entries . entries . entries . iterator ( ) ;
rank: 487
score: 99.13865152994792
patch: Iterator iter = res + v . size ( ) ;
rank: 488
score: 99.19314340444711
patch: Iterator iter = res . entries . iterator ( ) ; public
rank: 488
score: 99.1768086751302
patch: int entries = res . entries . size ( ) ;
rank: 488
score: 99.17659076891448
patch: if ( res . res != null ) res . res . res . res = res ;
rank: 488
score: 99.1595458984375
patch: Iterator iter && res . entries . iterator ( ) ;
rank: 488
score: 99.13809204101562
patch: Iterator iter = res != null ? res . size ( ) : null ;
rank: 488
score: 99.11947866586539
patch: Iterator iter = this . entries . iterator ( ) ; }
rank: 489
score: 99.19306291852679
patch: / iter Iterator iter = res . entries . iterator ( ) ;
rank: 489
score: 99.17636544363839
patch: Object [ ] data = res . get CaMeL Data ( ) ;
rank: 489
score: 99.17629770132211
patch: Iterator < int > iter = res . entries ( ) ;
rank: 489
score: 99.15951334635416
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = 0 ;
rank: 489
score: 99.13751220703125
patch: Iterator iter = res . entries ;
rank: 489
score: 99.11936732700893
patch: while ( res . has CaMeL Next ( ) ) { ) {
rank: 490
score: 99.22429456208882
patch: if ( res . entries . entries . iterator ( ) . has CaMeL Next ( ) )
rank: 490
score: 99.19544982910156
patch: Iterator iter = res . get CaMeL Packages ( ) . iterator ( ) ;
rank: 490
score: 99.18694661458333
patch: if ( iter . has CaMeL Next ( ) ) { return res ;
rank: 490
score: 99.17570277622768
patch: Iterator iter = new String [ res . iterator ( ) ] ;
rank: 490
score: 99.16551208496094
patch: Iterator iter = res . name . entries ( ) . entries ( ) ;
rank: 490
score: 99.1591796875
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res ) { res . set CaMeL Entry (
rank: 490
score: 99.11922781808036
patch: Iterator iter = res . get CaMeL Type ( ) . length ;
rank: 491
score: 99.22407801011029
patch: Iterator < String > iter = res . entries = res . entries ( ) ;
rank: 491
score: 99.19516823508523
patch: Iterator map = res . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 491
score: 99.19183349609375
patch: Iterator iter = res . next . entries ( ) ;
rank: 491
score: 99.18685477120536
patch: Iterator iter = ( v . entries . iterator ( ) ) ;
rank: 491
score: 99.1650390625
patch: Iterator iter = res . entries . entries . index CaMeL Of ( ) ;
rank: 491
score: 99.15896124588816
patch: Iterator < while . has CaMeL Next ( ) ; ) { iter . advance ( ) ;
rank: 491
score: 99.13695417131696
patch: Iterator iter = res . iterator ( ) : res . length ;
rank: 492
score: 99.19492409446023
patch: Iterator iter = res . iterator ( ) ; while ( iter . entries . has CaMeL Next ( ) )
rank: 492
score: 99.19150390625
patch: Iterator iter ( res . entries ( ) . iterator ( ) ) ;
rank: 492
score: 99.17494111902573
patch: Iterator iter = v [ res . size ( ) ] . entries ( ) ;
rank: 492
score: 99.15890066964286
patch: Iterator iter = res . entries . length ; while ( iter . has CaMeL Next ( ) ) {
rank: 492
score: 99.11881510416667
patch: Iterator iter = res . size ( ) ( ) ;
rank: 493
score: 99.2235107421875
patch: Iterator iter = ( res . iterator ( ) ) ;
rank: 493
score: 99.19469105113636
patch: res . entries = res . entries . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 493
score: 99.1914794921875
patch: Iterator iter = res . add ( res . entries ( ) ) ;
rank: 493
score: 99.17485495174633
patch: if ( v != null ) { Iterator iter = res . iterator ( ) ;
rank: 493
score: 99.15846252441406
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this ) ;
rank: 493
score: 99.11703725961539
patch: Iterator < Entry > iter = res . size ( ) ;
rank: 494
score: 99.22340611049107
patch: Iterator < int * : res . entries . iterator ( ) ;
rank: 494
score: 99.1943692294034
patch: List res = res . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 494
score: 99.19114583333334
patch: Iterator iter = res . entries . iterator ( ) ; iter else ;
rank: 494
score: 99.18587820870536
patch: if ( iter . has CaMeL Next ( ) ) return res ;
rank: 494
score: 99.17483038651316
patch: int iter = res . size ( ) ; Iterator iter = res . iterator ( ) ;
rank: 494
score: 99.17479451497395
patch: Iterator iter = res . entries ( ) != null ;
rank: 494
score: 99.11690848214286
patch: Iterator iter = res . entries . iterator ( ) ; ; }
rank: 495
score: 99.22290757123162
patch: Iterator < Iterator > iter = res . entries ( ) . entries ( ) ;
rank: 495
score: 99.19110514322917
patch: Iterator iter = res . entries . iterator ( ) ; iterator / /
rank: 495
score: 99.17469889322916
patch: if ( res != null && res . length != res . length )
rank: 495
score: 99.17403971354166
patch: Iterator iter = res . entries ( ) . contains ( res ) ;
rank: 495
score: 99.15823364257812
patch: for ( int } Open CaMeL Map CaMeL Real CaMeL Vector res : res )
rank: 495
score: 99.1355972290039
patch: Iterator iter = res != null ? res . size ( ) : $NUMBER$ ;
rank: 495
score: 99.11659458705357
patch: if ( this . entries . size ( ) > 0 ) {
rank: 496
score: 99.1939697265625
patch: Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) break ;
rank: 496
score: 99.18409075055804
patch: Iterator iter = ( Iterator . has CaMeL Next ( ) ) ;
rank: 496
score: 99.17460414341518
patch: Iterator iter = v . iterator ( ) ; while ( ; )
rank: 496
score: 99.17366536458333
patch: Iterator iter = res . entries ( 1 ) . entries ( ) ;
rank: 496
score: 99.1349868774414
patch: Iterator iter = res . get CaMeL Entry ( ) . entries ( ) ;
rank: 496
score: 99.11573204627403
patch: final Iterator iter = res . length . iterator ( ) ;
rank: 497
score: 99.22230747767857
patch: final Iterator < Object > iter = res . entries ( ) ;
rank: 497
score: 99.19084028764205
patch: Iterator iter = res . iterator ( ) ; iterator
rank: 497
score: 99.18405587332589
patch: Vector iter = this . res . entries . iterator ( ) ;
rank: 497
score: 99.17438821231617
patch: if ( res != null ) res . res = res . entries . ) ;
rank: 497
score: 99.17282339242789
patch: List < String > iter = res . entries ( ) ;
rank: 497
score: 99.13489641462054
patch: Iterator iter = res != null ? res . size ( ) ;
rank: 497
score: 99.11553955078125
patch: Iterator iter = res . res . entries ( ) ;
rank: 498
score: 99.2218768780048
patch: final int [ ] entries = res . entries ( ) ;
rank: 498
score: 99.19378107244319
patch: Iterator iter = res . get CaMeL Classes ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 498
score: 99.19068321814903
patch: Iterator iter . Iterator iter = res . iterator ( ) ;
rank: 498
score: 99.1743496981534
patch: Iterator iter = res . iterator ( ) ; )
rank: 498
score: 99.16319173177084
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . add ( res ) ;
rank: 498
score: 99.15770048253677
patch: for ( final Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries )
rank: 498
score: 99.13460083007813
patch: Iterator iter = iter . advance ( ) ;
rank: 498
score: 99.11465890066964
patch: if ( res . entries . size ( ) > 1 ) {
rank: 499
score: 99.22176106770833
patch: Iterator < Package > iter = res . entries . iterator ( ) ;
rank: 499
score: 99.19340963924633
patch: Iterator iter = res . get CaMeL Entries ( ) . iterator ( ) ; ;
rank: 499
score: 99.19041224888393
patch: Iterator iter = res . entries . end . iterator ( ) ;
rank: 499
score: 99.18352399553571
patch: if ( iter . has CaMeL Next ( ) ) { for (
rank: 499
score: 99.1735506924716
patch: Iterator iter = v ) . iterator ( ) ;
rank: 499
score: 99.1724853515625
patch: Iterator iter = res . entries ( null ) . entries ( ) ;
rank: 499
score: 99.16173444475446
patch: Iterator iter = res . data . entries . size ( ) ;
rank: 499
score: 99.15744198069854
patch: Object [ ] res = Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 499
score: 99.13443196614584
patch: Iterator iter = res . contains ( 0 ) : res . length ;
rank: 499
score: 99.11440805288461
patch: Iterator iter = v [ ) . iterator ( ) ] ;
rank: 500
score: 99.19337864925987
patch: Iterator iter = this . res ; while ( iter . has CaMeL Next ( ) ) {
rank: 500
score: 99.19027944711539
patch: res . iter = res . entries . iterator ( ) ;
rank: 500
score: 99.17347412109375
patch: if ( res . res != null ) res . res . res . res . res . )
rank: 500
score: 99.17243303571429
patch: int iter = res . entries . to CaMeL Array ( ) ;
rank: 500
score: 99.16145542689732
patch: Iterator iter = res . entries . ( ) . ( ) ;
rank: 500
score: 99.15742631392045
patch: Iterator iter = res . to CaMeL Array ( Open CaMeL Map CaMeL Real CaMeL Vector . size ( ) )
rank: 500
score: 99.13441975911458
patch: Iterator iter = res . set . iterator ( ) ;
rank: 501
score: 99.22032255284927
patch: Iterator < Iterator > iter = res . entries = res . iterator ( ) ;
rank: 501
score: 99.19337864925987
patch: res . set CaMeL Length ( 0 ) ; Iterator iter = res . iterator ( ) ;
rank: 501
score: 99.19017682756696
patch: Iterator iter = res . entries . matches . iterator ( ) ;
rank: 501
score: 99.1826923076923
patch: Iterator iter = res [ iter . entries ( ) ] ;
rank: 501
score: 99.1734619140625
patch: Collection res = res . entries . entries ( ) ;
rank: 501
score: 99.172119140625
patch: int iterator = res . entries . size ( ) ;
rank: 501
score: 99.16133939302884
patch: List Iterator iter = res . entries . iterator ( ) ;
rank: 501
score: 99.13346099853516
patch: Iterator iter = res != null ? res . iterator ( ) : true ;
rank: 501
score: 99.11294320913461
patch: Iterator iter = entries . entries . iterator ( ) ; }
rank: 502
score: 99.22031121504934
patch: final int entries = res . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 502
score: 99.18223219651442
patch: Iterator iter = res . entries ( ) . iterator ( )
rank: 502
score: 99.17335269325658
patch: if ( res . entries != null && res . entries . size ( ) != 0 )
rank: 502
score: 99.17193134014423
patch: Iterator < ] >> entries = res . entries ( ) ;
rank: 502
score: 99.15676443917411
patch: Iterator iter = res . get CaMeL Entry . iterator ( ) ;
rank: 502
score: 99.13330078125
patch: Iterator iter = res . class . entries ( ) . entries ( ) ;
rank: 503
score: 99.22026715959821
patch: final Iterator < T > iter = res . iterator ( ) ;
rank: 503
score: 99.19328169389205
patch: Iterator v = res . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 503
score: 99.18879045758929
patch: Iterator iter = res . entries . entries . Iterator ( ) ;
rank: 503
score: 99.18107386997768
patch: Iterator iter = res . entries == null . iterator ( ) ;
rank: 503
score: 99.17190987723214
patch: synchronized ( res ) { iter . add ( res ) ; }
rank: 503
score: 99.15668801700367
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector == null ? null : res .
rank: 503
score: 99.1114032451923
patch: Iterator iter = res . read ( v . length ) ;
rank: 504
score: 99.2198974609375
patch: Iterator < int > iter = res . entries . iter ( ) ;
rank: 504
score: 99.18097795758929
patch: Iterator iter = iter . entries ( ) . size ( ) ;
rank: 504
score: 99.17310180664063
patch: if ( res != null ) res . res = res . entries . iterator ( ) . ;
rank: 504
score: 99.15639038085938
patch: for ( iter = res . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 504
score: 99.11118570963542
patch: Iterator iter = res . add . size ( ) ;
rank: 505
score: 99.19318181818181
patch: Iterator iter = clone . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 505
score: 99.17282104492188
patch: Iterator size = res . iterator ( ) ; while ( size . has CaMeL Next ( ) )
rank: 505
score: 99.17091471354166
patch: Iterator iter = res . parse ( res . entries ( ) ) ;
rank: 505
score: 99.16036224365234
patch: Iterator iter = entries . entries . entries ( ) . entries ( ) ;
rank: 505
score: 99.15629650297619
patch: ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) . set CaMeL Entry ( iter ) ;
rank: 505
score: 99.13194928850446
patch: Object [ ] res = new int [ v . length ] ;
rank: 506
score: 99.21922392003677
patch: Iterator < Iterator < Integer > iter = res . entries . iterator ( ) ;
rank: 506
score: 99.19261585582386
patch: Iterator iter = value . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 506
score: 99.17277446546052
patch: if ( res != null ) res . res = res . entries . entries . ) ;
rank: 506
score: 99.13123372395833
patch: Iterator iter = res . contains ( iter . next ( ) ) ;
rank: 506
score: 99.11077880859375
patch: Object res = res . entries . get ( ) ;
rank: 507
score: 99.21896701388889
patch: final Iterator < Integer > iter = res . entries ( ) . iterator ( ) ;
rank: 507
score: 99.19182942708333
patch: Iterator iter = res . entries [ res . size ( ) ] ;
rank: 507
score: 99.18648856026786
patch: Iterator iter = this . res . entries . next ( ) ;
rank: 507
score: 99.18007986886161
patch: Iterator iter = $NUMBER$ . entries ( ) . iterator ( ) ;
rank: 507
score: 99.17190755208334
patch: if ( res != null && res . entries . length > 0 )
rank: 507
score: 99.1306621844952
patch: Iterator iter = res . entries [ size ( ) ] ;
rank: 508
score: 99.19166148792614
patch: Iterator iter = res . entries . iterator ( ) ; iterator . has CaMeL Next ( ) ; ) {
rank: 508
score: 99.18636380709134
patch: Iterator iter = res . entries . remove ( 0 ) ;
rank: 508
score: 99.16022600446429
patch: double [ ] v = new double [ v . length ] ;
rank: 508
score: 99.155859375
patch: Iterator iter < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 508
score: 99.10969543457031
patch: int iter = res . length ;
rank: 509
score: 99.21866861979167
patch: Iterator < Iterator > entries = res . entries . iterator ( ) ;
rank: 509
score: 99.18599759615384
patch: Iterator iter = res . entries . iterator ( ) ; entries
rank: 509
score: 99.17101372612848
patch: if ( v != null ) res . Iterator iter = res . iterator ( ) ;
rank: 509
score: 99.155712890625
patch: Iterator < String > iter = res . list . iterator ( ) ;
rank: 509
score: 99.13058471679688
patch: Iterator iter = res . get CaMeL Index ( ) . entries ( ) ;
rank: 510
score: 99.21792763157895
patch: Iterator < Object > iter = res . entries . entries ( ) . entries ( ) ;
rank: 510
score: 99.18568638392857
patch: Iterator iter = res . get = res . iterator ( ) ;
rank: 510
score: 99.16875
patch: Iterator iter = res . substring ( 0 , res . length ) ;
rank: 510
score: 99.15964181082589
patch: int [ ] res = new String [ res . length ] ;
rank: 510
score: 99.15553283691406
patch: Iterator < int + 1 ] : res . entries . iterator ( ) ;
rank: 510
score: 99.10837026742789
patch: while ( entries . has CaMeL Next ( ) ) { {
rank: 511
score: 99.217529296875
patch: Iterator < Iterator iter = res . entries . iterator ( ) ;
rank: 511
score: 99.1902099609375
patch: Iterator iter = res . entries . iterator ( ) ; ; finally {
rank: 511
score: 99.18536376953125
patch: Iterator iterator = res . entries . iter ( ) ;
rank: 511
score: 99.17001003689236
patch: int iter = res . entries . size ( ) ; while ( iter < iter )
rank: 511
score: 99.16677621694711
patch: Iterator < T > entries = res . iterator ( ) ;
rank: 512
score: 99.18470255533855
patch: iterator iter = res . entries . iterator ( ) ;
rank: 512
score: 99.17845662434895
patch: Iterator iter = v . entries . iter ( ) ;
rank: 512
score: 99.16941324869792
patch: if ( res != null ) res . res = res . entries [ 0 ] ;
rank: 512
score: 99.15424053485577
patch: Iterator iter = res . entries ( v . length ) ;
rank: 512
score: 99.12991768973214
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector >
rank: 512
score: 99.1082012469952
patch: Iterator iter = res [ res . length - 1 ] ;
rank: 513
score: 99.21738106863839
patch: final Iterator < Entry > iter = res . iterator ( ) ;
rank: 513
score: 99.18443952287946
patch: Iterator iter = res . entries . iterator ( ) ; iterator }
rank: 513
score: 99.1782735188802
patch: Iterator iter = key . entries . iterator ( ) ;
rank: 513
score: 99.16928280101104
patch: if ( res . res != null ) res . res = res . entries ;
rank: 513
score: 99.16611938476562
patch: Collection iter = res . entries ( ) ;
rank: 513
score: 99.15413411458333
patch: Iterator iter . has CaMeL Next ( ) ; ) { Open CaMeL Map CaMeL Real CaMeL Vector res ;
rank: 513
score: 99.12990897042411
patch: Iterator iter = res . entries . iterator ( ) ; * /
rank: 513
score: 99.108154296875
patch: Iterator >= iter = res . entries . iterator ( ) ;
rank: 514
score: 99.21735026041667
patch: Iterator < Enum > iter = res . entries . iterator ( ) ;
rank: 514
score: 99.1884521484375
patch: Iterator iter = value . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 514
score: 99.18423897879464
patch: Iterator iter = res . entries . put . iterator ( ) ;
rank: 514
score: 99.16909308182566
patch: if ( res . entries != null ) res . res = res . entries . entries ;
rank: 514
score: 99.16548374720982
patch: Iterator iter = res . entries ( ) . wait ( ) ;
rank: 514
score: 99.15751429966518
patch: Iterator iter = res * this . entries . iterator ( ) ;
rank: 514
score: 99.15412340666118
patch: Iterator < double [ ] > iter = v . entries . entries . iterator ( ) ;
rank: 514
score: 99.12990025111607
patch: Iterator iter = res . entries . iterator ( ) / 1 ;
rank: 515
score: 99.21624286358173
patch: Iterator < Iterator > entries = res . entries ( ) ;
rank: 515
score: 99.17707170758929
patch: Iterator iter = res . entries != null . iterator ( ) ;
rank: 515
score: 99.16849772135417
patch: if ( res != null ) res . entries = res . entries . length ; else
rank: 515
score: 99.16496276855469
patch: Iterator iter = res . entries . iterator ( ) ; int * * /
rank: 515
score: 99.1568603515625
patch: int [ ] res = new String [ v . length ] ;
rank: 515
score: 99.15401785714286
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . iterator ( ) ) ;
rank: 515
score: 99.12977818080357
patch: Iterator iter = res . entries . iterator ( ) : 0 ;
rank: 515
score: 99.1072998046875
patch: Iterator iter = res . entries . iterator ( ) ; / ?
rank: 516
score: 99.21622408353366
patch: final Object iter = res . entries . iterator ( ) ;
rank: 516
score: 99.18836885340073
patch: Iterator iter = ( int [ ] ) res . list . iterator ( ) ;
rank: 516
score: 99.18296595982143
patch: Iterator iter = res . iterator ( res . iterator ( ) ;
rank: 516
score: 99.16466413225446
patch: Iterator iter = res . entries ( ) . read ( ) ;
rank: 516
score: 99.15398615056819
patch: Iterator iter . has CaMeL Next ( ) ; )
rank: 516
score: 99.107177734375
patch: Iterator iter = v . ( ) . iterator ( ) ;
rank: 517
score: 99.21586339613971
patch: Iterator < int * ? > iter = res . entries . iterator ( ) ;
rank: 517
score: 99.18834771050348
patch: Iterator iter = size ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 517
score: 99.1678799715909
patch: final Iterator iter = v . iterator ( ) ;
rank: 517
score: 99.16376495361328
patch: Iterator < ] > iter = res . entries . iterator ( ) ; else
rank: 517
score: 99.1534423828125
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries ( ) )
rank: 517
score: 99.12957763671875
patch: Iterator iter = res > 0 . iterator ( ) ;
rank: 518
score: 99.21522281044408
patch: Iterator iter = res . entries ( ) . entries ( ) . iterator ( ) ; }
rank: 518
score: 99.18273111979167
patch: Iterator iter = res . entries . iterator ( ) ; break ; }
rank: 518
score: 99.1678466796875
patch: final Iterator iter = res . iterator . iterator ( ) ;
rank: 518
score: 99.16363525390625
patch: Iterator * ] res = res . entries ( ) ;
rank: 518
score: 99.15574428013393
patch: Open CaMeL Map CaMeL Real CaMeL Vector [ ] res = null ;
rank: 518
score: 99.15311373197116
patch: Iterator ( iter = res . entries . iterator ( ) ;
rank: 518
score: 99.12952599158653
patch: Iterator iter >> = res . entries . iterator ( ) ;
rank: 518
score: 99.10653921274039
patch: if ( res != null ) iter . advance ( ) ;
rank: 519
score: 99.21495145909927
patch: Iterator < Iterator < int > iter = res . entries . iterator ( ) ;
rank: 519
score: 99.18679970189145
patch: Iterator iter = res . entries [ res . length - 1 ] . iterator ( ) ;
rank: 519
score: 99.18252127511161
patch: Iterator iter = res . entries . iterator . iter ( ) ;
rank: 519
score: 99.16759575737848
patch: if ( v != null ) Iterator iter = res . entries . iterator ( ) ;
rank: 519
score: 99.16248575846355
patch: int iter . iterator ( ) . iterator ( ) ;
rank: 519
score: 99.15564836774554
patch: Iterator iter = res . to CaMeL Array ( ) . length ;
rank: 519
score: 99.12680053710938
patch: Iterator iter = start . entries . iterator ( ) ;
rank: 519
score: 99.10523399939903
patch: Iterator iter = res . has CaMeL Next ( ) ; ;
rank: 520
score: 99.21424696180556
patch: Iterator iter = res . entries ( ) . iterator ( ) ; else return null ;
rank: 520
score: 99.18603515625
patch: Iterator iter = res . next ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 520
score: 99.17454310825893
patch: Iterator iter = res . entries . iterator . entries ( ) ;
rank: 520
score: 99.16685726768092
patch: for ( int iter = v . length ; iter < v . length ; iter ++ )
rank: 520
score: 99.12647356305804
patch: Iterator iter = res . next ( ) . iter ( ) ;
rank: 520
score: 99.1051534016927
patch: Iterator iter = res . start . entries ( ) ;
rank: 521
score: 99.21414523654514
patch: final Iterator < Entry > iter = res . entries ( ) . iterator ( ) ;
rank: 521
score: 99.18603515625
patch: if ( res . length > 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 521
score: 99.18222878196023
patch: Iterator iter = res . add ( res ) ;
rank: 521
score: 99.17428823617789
patch: Iterator iter = v [ 1 ] . iterator ( ) ;
rank: 521
score: 99.16610013521634
patch: Iterator < Integer > iter = v . iterator ( ) ;
rank: 521
score: 99.1619873046875
patch: Iterator < T > iter = res . size ( ) ;
rank: 521
score: 99.15252685546875
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ( )
rank: 521
score: 99.12576059194711
patch: Iterator iter = res . index CaMeL Of ( 1 ) ;
rank: 521
score: 99.10487717848558
patch: Iterator iter = res . put ( v . length ) ;
rank: 522
score: 99.21402138157895
patch: Iterator iter = res . iterator ( ) ; Iterator iter = res . entries ( ) ;
rank: 522
score: 99.18581814236111
patch: Iterator iter = res . entries ; while ( iterator . has CaMeL Next ( ) )
rank: 522
score: 99.1658935546875
patch: Object [ ] res = res . to CaMeL Array ( ) ;
rank: 522
score: 99.16182767427884
patch: Iterator < String > iterator = res . iterator ( ) ;
rank: 522
score: 99.15244140625
patch: if ( res . iterator ( ) . has CaMeL Next ( ) )
rank: 522
score: 99.12465256911058
patch: Iterator iter = res . entries . iterator ( v ) ;
rank: 522
score: 99.10364786783855
patch: Iterator iter = res . load . iterator ( ) ;
rank: 523
score: 99.21354457310268
patch: synchronized ( res ) { res . add ( res ) ; }
rank: 523
score: 99.1857421875
patch: iter = new Iterator ( res . entries . iterator ( ) ) ;
rank: 523
score: 99.18114420572917
patch: Iterator iter = res . entries . iterator ( ) ; for ( {
rank: 523
score: 99.1737060546875
patch: Iterator iter = this . this . res . iterator ( ) ;
rank: 523
score: 99.16576209435097
patch: Iterator iter = res . entries . iterator ( res ) ;
rank: 523
score: 99.16147286551339
patch: final Iterator < T > iter = res . entries ( ) ;
rank: 523
score: 99.15242919921874
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = ! res . iterator ( ) ;
rank: 524
score: 99.185009765625
patch: Iterator iterator = list . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 524
score: 99.18096051897321
patch: Iterator iter = res . iterator ( ) ; while ( iter .
rank: 524
score: 99.17366536458333
patch: Iterator iter = res . entries . entries ( ) [ $NUMBER$ ] ;
rank: 524
score: 99.16543097245066
patch: if ( res . res != null ) res . res . res = res . entries ;
rank: 524
score: 99.15214029947917
patch: Iterator iter = res . entries . iterator ( ) ; iter . advance ( ) ;
rank: 524
score: 99.12345668247768
patch: Iterator iter = res != null ? res . iterator ( ) ;
rank: 524
score: 99.10333721454327
patch: Iterator ] entries = res . entries . iterator ( ) ;
rank: 525
score: 99.16505191200658
patch: if ( res . entries != null ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 525
score: 99.16051374162946
patch: Iterator iter = res . entries ( . entries ( ) ) ;
rank: 525
score: 99.15194363064236
patch: Iterator iter ? res . iterator ( ) . has CaMeL Next ( ) ; ) {
rank: 525
score: 99.10325113932292
patch: Iterator iter = res . Math . size ( ) ;
rank: 526
score: 99.17274983723958
patch: check CaMeL Vector CaMeL Dimensions ( v . length ) ;
rank: 526
score: 99.15132068452381
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = res . entries . entries ( ) ;
rank: 526
score: 99.102783203125
patch: Iterator iter = res . end . entries ( ) ;
rank: 527
score: 99.18457641601563
patch: Iterator iter = min . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 527
score: 99.18036358173077
patch: Iterator iter = res . entries . iterator ( ) ; final
rank: 527
score: 99.16473858173077
patch: Iterator < Number > iter = res . iterator ( ) ;
rank: 527
score: 99.16015625
patch: int iter = res . entries . trim ( ) . length ;
rank: 527
score: 99.15127418154762
patch: Enumeration < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries ( ) ;
rank: 527
score: 99.15087890625
patch: Iterator iter = res . entries . entries . ( ) ;
rank: 527
score: 99.1027362530048
patch: Iterator ] iter = res . entries . iterator ( ) ;
rank: 528
score: 99.21148681640625
patch: int size = res . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 528
score: 99.18427124023438
patch: Iterator iter = res . iterator ( ) ; iterator . has CaMeL Next ( ) ; ) {
rank: 528
score: 99.17201334635416
patch: Iterator iter = res . entries . entries ( ) . entries ( )
rank: 528
score: 99.164306640625
patch: Iterator < Iterator < Integer > iter = res . iterator ( ) ;
rank: 528
score: 99.15992954799107
patch: Iterator iter = res . entries ( ) . parse ( ) ;
rank: 528
score: 99.15056501116071
patch: double [ ] v = new double [ res . length ] ;
rank: 529
score: 99.2114616842831
patch: Iterator < Object > iter = res . entries ( ) . entries ( ) ;
rank: 529
score: 99.1802509014423
patch: Iterator iter = res . iterator ( ) ; iterator -- ;
rank: 529
score: 99.16414097377232
patch: Collection res = res . entries . entries . iterator ( ) ;
rank: 529
score: 99.15850423177083
patch: final int res . entries . iterator ( ) . iterator ( ) ;
rank: 529
score: 99.15066046463816
patch: Iterator while ( res . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 529
score: 99.14999825613839
patch: Iterator iter = res . gc . entries . iterator ( ) ;
rank: 529
score: 99.11819458007812
patch: Iterator iter = res : res . size ( ) ;
rank: 529
score: 99.10199444110577
patch: Iterator iter = res . entries . Iterator ( this ) ;
rank: 530
score: 99.21140950520834
patch: Iterator < Comparable > iter = res . entries . iterator ( ) ;
rank: 530
score: 99.18375651041667
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . ) {
rank: 530
score: 99.17989095052083
patch: Iterator iter = res . entries ( ) ; Iterator iter = 0 ;
rank: 530
score: 99.1627261513158
patch: Iterator iter = res . iterator ( ) ; int size = res . size ( ) ;
rank: 530
score: 99.15772356305804
patch: Iterator iter = res . entries ( ) . Enum ( ) ;
rank: 530
score: 99.15049050071023
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( length ) ;
rank: 530
score: 99.11805138221153
patch: Iterator iter = res . entries . iterator ( SIZE ) ;
rank: 531
score: 99.18331748560855
patch: int size = res . entries . length ; Iterator iter = res . iterator ( ) ;
rank: 531
score: 99.17093098958334
patch: Iterator iter = res . entries . contains ( v . length ) ;
rank: 531
score: 99.161865234375
patch: if ( res . entries != null ) { Iterator iter = res . iterator ( ) ;
rank: 531
score: 99.15729229266827
patch: Iterator < String : res . entries . iterator ( ) ;
rank: 531
score: 99.15034315321181
patch: Iterator < int ) { iter = res . entries . entries . iterator ( ) ;
rank: 531
score: 99.14901297433036
patch: Iterator iter = res != null + v . size ( ) ;
rank: 531
score: 99.10145920973558
patch: Iterator iter = res . add . iterator ( this ) ;
rank: 532
score: 99.21132986886161
patch: Iterator iter = exp . entries ( ) . iterator ( ) ;
rank: 532
score: 99.17976888020833
patch: Iterator iter = res . get ( $NUMBER$ ) . entries ( ) ;
rank: 532
score: 99.16953688401442
patch: Iterator iter = ebe CaMeL Multiply ( v . length ) ;
rank: 532
score: 99.16137017144098
patch: if ( res != null ) { res . entries = res . entries . entries ;
rank: 532
score: 99.15024928042763
patch: Iterator < Real CaMeL Vector > iter = res . entries ( ) . iterator ( ) ;
rank: 532
score: 99.14882114955357
patch: Iterator iter = res . entries . TRUE . iterator ( ) ;
rank: 532
score: 99.11786358173077
patch: Iterator iter = Math . iterator ( res . length ) ;
rank: 532
score: 99.1013934795673
patch: Iterator ] v = res . entries . iterator ( ) ;
rank: 533
score: 99.18199811662946
patch: Iterator iter = v . list ( ) . iterator ( ) ;
rank: 533
score: 99.17970275878906
patch: Iterator iter . iterator ( ) ;
rank: 533
score: 99.16095525568181
patch: Iterator iter = res . iterator ( res ) ;
rank: 533
score: 99.15686974158653
patch: Enumeration < ] > iter = res . entries ( ) ;
rank: 533
score: 99.15023367745536
patch: Iterator iter += res . iterator ( ) . iterator ( ) ;
rank: 533
score: 99.10128784179688
patch: Iterator iter = res . next ( ) . length ;
rank: 534
score: 99.21026204427083
patch: final int [ ] entries = res . entries . iterator ( ) ;
rank: 534
score: 99.16091918945312
patch: if ( res . entries != null ) return res ;
rank: 534
score: 99.11650739397321
patch: Iterator iter = res . entries . iterator ( ) * 0 ;
rank: 534
score: 99.1007792154948
patch: while ( iterator . has CaMeL Next ( ) ) {
rank: 535
score: 99.18117065429688
patch: Iterator iter = res . entries ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 535
score: 99.1688232421875
patch: Iterator iter = res . entries . ebe CaMeL Multiply ( this ) ;
rank: 535
score: 99.16073947482639
patch: if ( res != null ) res . Iterator iter = res . entries ( ) ;
rank: 535
score: 99.1564453125
patch: Iterator iter = res . entries . iterator ( ) ; case 1 :
rank: 535
score: 99.11643763950893
patch: Iterator iter = res . advance ( ) . entries ( ) ;
rank: 536
score: 99.18035888671875
patch: iter = res . entries . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 536
score: 99.16843959263393
patch: Iterator iter = res != null * v . iterator ( ) ;
rank: 536
score: 99.16046612079327
patch: res . res = res . entries . iterator ( ) ;
rank: 536
score: 99.15643310546875
patch: Iterator * ] iter = res . entries ( ) ;
rank: 536
score: 99.14867553710937
patch: Iterator iter = res . entries ( ) . entries . entries ( ) . iterator ( ) ;
rank: 536
score: 99.115478515625
patch: Iterator iter = res . iter ( ) . next ( ) ;
rank: 536
score: 99.1000264485677
patch: Iterator iter = res . put . iterator ( ) ;
rank: 537
score: 99.20956217447916
patch: Iterator iter = res . entries ( ) . entries ( ) ) ;
rank: 537
score: 99.17828838641827
patch: / iter iter = res . entries . iterator ( ) ;
rank: 537
score: 99.16778157552083
patch: synchronized ( v ) { Iterator iter = res . iterator ( ) ;
rank: 537
score: 99.15912628173828
patch: Iterator iter ; try { iter = res . iterator . iterator ( ) ;
rank: 537
score: 99.14848981584821
patch: Iterator iter = list . entries . entries . iterator ( ) ;
rank: 537
score: 99.1480224609375
patch: new Open CaMeL Map CaMeL Real CaMeL Vector ( this , this ) ;
rank: 537
score: 99.1150634765625
patch: Iterator iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this )
rank: 538
score: 99.20953047902961
patch: Iterator < Iterator < Object > iter = res . entries ( ) . iterator ( ) ;
rank: 538
score: 99.17820638020834
patch: Iterator iter = new Object > ( res . iterator ( ) ) ;
rank: 538
score: 99.15863037109375
patch: if ( res != null ) res . entries = new ) ;
rank: 538
score: 99.15636189778645
patch: Iterator [ ] entries = res . entries ( ) ;
rank: 538
score: 99.14722493489583
patch: Iterator iter = res . entries . index CaMeL Of ( iter ) ;
rank: 538
score: 99.1148212139423
patch: Iterator iter = res [ 0 ) . iterator ( ) ;
rank: 538
score: 99.09939340444711
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = null ;
rank: 539
score: 99.20927159926471
patch: Iterator < Entry < ? > iter = res . entries . iterator ( ) ;
rank: 539
score: 99.17948150634766
patch: if ( res . size ( ) > res . size ( ) ) {
rank: 539
score: 99.15843290441177
patch: if ( res != null ) { res . entries = res . entries ; }
rank: 539
score: 99.15511067708333
patch: Iterator iter = res . entries ( ) . set ( res ) ;
rank: 539
score: 99.14705810546874
patch: Iterator iter ? res . iterator ( ) . has CaMeL Next ( ) . advance ( ) ;
rank: 539
score: 99.14677211216518
patch: Iterator iter = res . entries . entries . clone ( ) ;
rank: 539
score: 99.09906005859375
patch: Iterator iter = res . contains . size ( ) ;
rank: 540
score: 99.20913260323661
patch: if ( res != null ) return res . entries ( ) ;
rank: 540
score: 99.17918701171875
patch: Iterator iter = res . copy ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 540
score: 99.17791748046875
patch: Iterator . Iterator iter = res . entries . iterator ( ) ;
rank: 540
score: 99.1666259765625
patch: Iterator iter = set . entries . iterator ( ) ;
rank: 540
score: 99.15822466681985
patch: Iterator iter = res . iterator ( ) ; int size = v . length ;
rank: 540
score: 99.1547119140625
patch: Iterator iter = res . iterator ( ) ; int iter = 0 ;
rank: 540
score: 99.14666748046875
patch: Iterator iter = res . intern ( ) . entries ( ) ;
rank: 540
score: 99.0948486328125
patch: Iterator iter = res . 1 . iterator ( ) ;
rank: 541
score: 99.20900364925987
patch: Iterator < Iterator < Iterator > iter = res . entries ( ) . iterator ( ) ;
rank: 541
score: 99.17909071180556
patch: Iterator iter = res == null ? null : res . entries . iterator ( ) ;
rank: 541
score: 99.17776692708334
patch: Iterator iter = res . get ( null ) . entries ( ) ;
rank: 541
score: 99.16647573617789
patch: Iterator iter = res $NUMBER$ . entries . iterator ( ) ;
rank: 541
score: 99.15456321022727
patch: final int iter = res . entries ( ) ;
rank: 541
score: 99.14679918791118
patch: Iterator iter = res . entries . Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 541
score: 99.09459431966145
patch: Iterator iter = res . size ( ) ; ) {
rank: 542
score: 99.20879049862133
patch: Iterator < ? > iter = res . entries = res . iterator ( ) ;
rank: 542
score: 99.17891235351563
patch: System . arraycopy ( v , 0 , res . entries , 0 , res . size ) ;
rank: 542
score: 99.177734375
patch: iter = res . iterator ( ) ;
rank: 542
score: 99.16615513392857
patch: Iterator iter = v . entries = res . iterator ( ) ;
rank: 542
score: 99.15683419363839
patch: Iterator iter = res . iterator . iterator ( ) - 1 ;
rank: 542
score: 99.15447998046875
patch: boolean iter = res . entries . iterator ( ) ;
rank: 542
score: 99.14657156808036
patch: Set iter = res . entries . entries . iterator ( ) ;
rank: 542
score: 99.1124755859375
patch: synchronized ( this ) { Iterator iter = res . size ( ) ;
rank: 542
score: 99.09375
patch: Iterator iter = res . entries . contains ( this ) ;
rank: 543
score: 99.20843975360577
patch: Iterator < ? > entries = res . entries ( ) ;
rank: 543
score: 99.17875366210937
patch: Iterator v = res . iterator ( ) ; while ( v . has CaMeL Next ( ) )
rank: 543
score: 99.16598074776786
patch: Iterator iter = res . length : v . iterator ( ) ;
rank: 543
score: 99.15678967927632
patch: if ( res != null ) { Iterator iterator = res . entries . iterator ( ) ;
rank: 543
score: 99.15402657645089
patch: Iterator iter = res . entries ( ) . floor ( ) ;
rank: 543
score: 99.11179024832589
patch: Iterator iter = res . has CaMeL Next ( ) : res ;
rank: 543
score: 99.09365609975961
patch: Iterator iter = res . entries . contains ( v ) ;
rank: 544
score: 99.1564471905048
patch: Iterator iter = res [ res . size ( ) ] ;
rank: 544
score: 99.1539815266927
patch: Iterator [ ] res = res . iterator ( ) ;
rank: 544
score: 99.14360700334821
patch: Iterator iter = v . entries . entries . size ( ) ;
rank: 544
score: 99.09363731971153
patch: for ( iter . has CaMeL Next ( ) ; ) {
rank: 545
score: 99.20771227384868
patch: Iterator iter = res . iterator ( ) ; Iterator iterator = res . iterator ( ) ;
rank: 545
score: 99.17749741498162
patch: Iterator iter = res . iterator ( ) ; res . add ( res ) ;
rank: 545
score: 99.15619659423828
patch: if ( res != null ) { res . entries = res . entries ;
rank: 545
score: 99.14609375
patch: Iterator iter = res != null ? res . entries . entries . iterator ( ) : null ;
rank: 545
score: 99.09357158954327
patch: Iterator iter = res . length . iterator ( ) ; ;
rank: 546
score: 99.1767333984375
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . next ( ) )
rank: 546
score: 99.15353829520089
patch: final int < ] > entries = res . entries ( ) ;
rank: 546
score: 99.0921122233073
patch: Iterator iter = res . entries . close ( ) ;
rank: 547
score: 99.20547921316964
patch: final Iterator < int > iter = res . iterator ( ) ;
rank: 547
score: 99.176513671875
patch: synchronized ( this ) { iter = res . entries . size ( ) ; }
rank: 547
score: 99.16350446428571
patch: double [ ] v = new int [ v . length ] ;
rank: 547
score: 99.15571145450367
patch: if ( res != null ) { Iterator iter = res . entries ( ) ;
rank: 547
score: 99.1528828938802
patch: Object iter = res . entries . iterator ( ) ;
rank: 547
score: 99.14593184621711
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) ; }
rank: 547
score: 99.142578125
patch: Iterator iter = res . set ( ) . iterator ( ) ;
rank: 547
score: 99.092041015625
patch: Iterator iter = res . entries ) iterator ( ) ;
rank: 548
score: 99.20543148643092
patch: Iterator iter = res . entries ( ) . entries ( ) . iterator ( ) ; else
rank: 548
score: 99.17606608072917
patch: Iterator iter Iterator iter = res . iterator ( ) ;
rank: 548
score: 99.155517578125
patch: Iterator iter = v . entries ( ) ; while ( )
rank: 548
score: 99.1525127704327
patch: final int entries . iterator ( ) . iterator ( ) ;
rank: 549
score: 99.17589569091797
patch: Iterator iter = size ; while ( iter . has CaMeL Next ( ) )
rank: 549
score: 99.15517290900735
patch: if ( res != null ) res . entries = res . entries ( ) ;
rank: 549
score: 99.1524658203125
patch: Iterator < Boolean > iter = res . iterator ( ) ;
rank: 549
score: 99.14212239583334
patch: Iterator iter = res . to CaMeL Array ( v . length ) ;
rank: 550
score: 99.20405847886029
patch: Iterator < ) [ ] > iter = res . entries . iterator ( ) ;
rank: 550
score: 99.16249302455357
patch: Iterator iter = res . entries . iterator ( ) ; System .
rank: 550
score: 99.1550357216283
patch: if ( res != null ) res . entries = res . entries . entries ( ) ;
rank: 550
score: 99.15224984975961
patch: Iterator iter = res . entries res . iterator ( ) ;
rank: 550
score: 99.14556329900569
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ) . iterator ( ) ;
rank: 550
score: 99.14178466796875
patch: Iterator iter = $STRING$ . entries . entries . iterator ( ) ;
rank: 550
score: 99.10850423177084
patch: Iterator < int [ ] > iter = res . size ( ) ;
rank: 550
score: 99.09116821289062
patch: Iterator iter = res . close ( ) ;
rank: 551
score: 99.17542521158855
patch: res . set CaMeL Length ( res . length ) ;
rank: 551
score: 99.17502848307292
patch: Iterator iter . iterator ( ) . iterator ( ) ;
rank: 551
score: 99.1074951171875
patch: synchronized ( res ) { Iterator iter = res . size ( ) ;
rank: 551
score: 99.0898946126302
patch: Iterator iter = res . is CaMeL Array ( ) ;
rank: 552
score: 99.20361328125
patch: final boolean iter = res . entries . iterator ( ) != null ;
rank: 552
score: 99.17503446691177
patch: Iterator iter = Math . abs ( res . entries . size ( ) ) ;
rank: 552
score: 99.15474759615384
patch: Iterator iter = res . iterator . iterator ( ) ) ;
rank: 552
score: 99.15114182692308
patch: Collection < String > iter = res . entries ( ) ;
rank: 552
score: 99.14513050426136
patch: iterator = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 552
score: 99.08937581380208
patch: Iterator iter = res . round . iterator ( ) ;
rank: 553
score: 99.20319281684027
patch: final Iterator < E > iter = res . entries ( ) . iterator ( ) ;
rank: 553
score: 99.1744893391927
patch: Iterator iter = res . iter . entries ( ) ;
rank: 553
score: 99.15957205636161
patch: Iterator iter = v != null : res . iterator ( ) ;
rank: 553
score: 99.15472412109375
patch: Iterator iter = res . entries ( . length ) ;
rank: 553
score: 99.15103149414062
patch: Iterator [ ] iter = res . entries ( ) ;
rank: 553
score: 99.14487526633523
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this .
rank: 553
score: 99.1060791015625
patch: Iterator iter = res . has CaMeL Next ( ) * 1 ;
rank: 553
score: 99.08936564127605
patch: Iterator iter = res . FALSE . iterator ( ) ;
rank: 554
score: 99.20310345818015
patch: Iterator < Iterator < T > iter = res . entries . iterator ( ) ;
rank: 554
score: 99.1741943359375
patch: Iterator iter = res . entries . entries ( ) ) ;
rank: 554
score: 99.15456717354911
patch: Iterator iter = v . iterator ( ) ; while ( ) {
rank: 554
score: 99.15048653738839
patch: Iterator iter = res . iterator ( ) ; next ( ) ;
rank: 555
score: 99.20298365542763
patch: if ( res != null ) { iter = res . entries . iterator ( ) ; }
rank: 555
score: 99.17409842354911
patch: / iter = res . entries . entries . iterator ( ) ;
rank: 555
score: 99.1739501953125
patch: Iterator iter = sum . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 555
score: 99.15866524832589
patch: Iterator iter = res . size . entries . iterator ( ) ;
rank: 555
score: 99.15394005408653
patch: / * * Iterator iter = res . iterator ( ) ;
rank: 555
score: 99.1504375751202
patch: Iterator iter ; Iterator iter = res . entries ( ) ;
rank: 555
score: 99.14458937872024
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this
rank: 555
score: 99.13770470252403
patch: Iterator iter = = res . entries . iterator ( ) ;
rank: 555
score: 99.087890625
patch: Iterator iter = res . reverse . iterator ( ) ;
rank: 556
score: 99.15851702008929
patch: v . set CaMeL Entry ( iter . advance ( ) ) ;
rank: 556
score: 99.15384714226974
patch: Collection res = res . entries ( ) ; Iterator iter = res . iterator ( ) ;
rank: 556
score: 99.1497802734375
patch: Iterator iter = res . entries $NUMBER$ iterator ( ) ;
rank: 556
score: 99.14442202919408
patch: Iterator < iter . has CaMeL Next ( ) ; ) { iter . advance ( ) ;
rank: 556
score: 99.10518391927083
patch: Iterator iter = res . add ( v ) . entries ( ) ;
rank: 557
score: 99.17384248621323
patch: Iterator iter = res . entries . iterator ( ) . iterator ( ) ; ;
rank: 557
score: 99.173291015625
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter ;
rank: 557
score: 99.15841674804688
patch: Iterator iter = ( iter . iterator ( ) ) ;
rank: 557
score: 99.15348510742187
patch: if ( res == null ) return res ;
rank: 557
score: 99.1494384765625
patch: synchronized ( res ) { Iterator entries = res . entries ( ) ;
rank: 557
score: 99.14372815583882
patch: Iterator iter = res . length ; while ( iter . has CaMeL Next ( ) ) {
rank: 557
score: 99.10490199497768
patch: Iterator iter = res . min ( ) . entries ( ) ;
rank: 558
score: 99.202392578125
patch: synchronized ( res ) { Iterator iter = res . entries . iterator ( ) ; }
rank: 558
score: 99.1738052368164
patch: Iterator iter = true ; while ( iter . has CaMeL Next ( ) )
rank: 558
score: 99.17325265066964
patch: Iterator iter = res . iterator ( ) ; iterator return res ;
rank: 558
score: 99.15798514229911
patch: Open CaMeL Map CaMeL Real CaMeL Vector . add ( res ) ;
rank: 558
score: 99.15331353081598
patch: Iterator iter ; while ( iter . has CaMeL Next ( ) ) { res . ;
rank: 558
score: 99.1488788311298
patch: Enumeration < String > iter = res . entries ( ) ;
rank: 558
score: 99.14358859592014
patch: for ( ) { Iterator iter = res . entries . entries . iterator ( ) ;
rank: 558
score: 99.10445731026786
patch: Iterator iter = res . entries . iterator ( ) >> 1 ;
rank: 558
score: 99.0852383700284
patch: Iterator Iterator iter = res . iterator ( ) ;
rank: 559
score: 99.2023566750919
patch: Iterator < int > iter = res . entries = res . iterator ( ) ;
rank: 559
score: 99.17311197916666
patch: Iterator iter = res . iterator ( ) ; while ( iter . }
rank: 559
score: 99.15785435267857
patch: Iterator iter = v != null . entries . iterator ( ) ;
rank: 559
score: 99.15242727179276
patch: if ( res . entries == null || res . entries . size ( ) == 0 )
rank: 559
score: 99.1487325032552
patch: Iterator iter = data . entries . size ( ) ;
rank: 559
score: 99.14356689453125
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries iterator ( ) ;
rank: 559
score: 99.1357421875
patch: Iterator iter = res . entries . format . iterator ( ) ;
rank: 559
score: 99.10413536658653
patch: Iterator < long > iter = res . iterator ( ) ;
rank: 559
score: 99.08476118607955
patch: Iterator iter = res . contains ( 0 ) ;
rank: 560
score: 99.20233154296875
patch: Iterator iter = System . entries ( ) . iterator ( ) ;
rank: 560
score: 99.15212530838816
patch: List iter = res . entries ( ) ; Iterator iter = iter . iterator ( ) ;
rank: 560
score: 99.1435546875
patch: Iterator < double ) = res . entries . iterator ( ) ;
rank: 560
score: 99.13539341517857
patch: Object [ ] res = new double [ res . length ] ;
rank: 560
score: 99.10407366071429
patch: Iterator iter = res . contains ( ) : res . length ;
rank: 560
score: 99.0842793782552
patch: Iterator iter = res [ ) . iterator ( ) ;
rank: 561
score: 99.17306954520089
patch: for ( ; iter . has CaMeL Next ( ) ; ) {
rank: 561
score: 99.17275390625
patch: Iterator iter = res . entries . iterator ( ) ; iterator * /
rank: 561
score: 99.1470947265625
patch: Iterator entries = res . value . iterator ( ) ;
rank: 561
score: 99.14329528808594
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries )
rank: 561
score: 99.13539341517857
patch: Iterator iter = res . [ iter . size ( ) ] ;
rank: 561
score: 99.10379732572116
patch: Iterator iter = res . entries . iterator ( ) : )
rank: 561
score: 99.08315805288461
patch: Iterator res = res . entries . iterator ( ) ; ;
rank: 562
score: 99.2021484375
patch: Iterator iter = res . entries ( ) . iterator ( ) ; return res ;
rank: 562
score: 99.17263357979911
patch: for ( Iterator iter = res . entries . iter ( ) ;
rank: 562
score: 99.14642803485577
patch: Iterator < / >> iter = res . iterator ( ) ;
rank: 562
score: 99.14323874080883
patch: Iterator < String > iter = v . entries ( ) . iterator ( ) ;
rank: 562
score: 99.13534109933036
patch: Iterator iter = res . entries . data . size ( ) ;
rank: 562
score: 99.10244315011161
patch: Iterator iter = res . entries . iterator ( ) : true ;
rank: 562
score: 99.08279418945312
patch: Iterator iter = res . stop . iterator ( ) ;
rank: 563
score: 99.20205349392361
patch: if ( res != null ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 563
score: 99.17236938476563
patch: Iterator iter = $STRING$ . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 563
score: 99.15672956194196
patch: Iterator iter = iterator . entries ( ) . iterator ( ) ;
rank: 563
score: 99.15082659040179
patch: Collection iter = res . entries ( ) . iterator ( ) ;
rank: 563
score: 99.14625244140625
patch: int entries = res . entries ( ) ;
rank: 563
score: 99.10145060221355
patch: Iterator iter = res . iter . next ( ) ;
rank: 563
score: 99.08277384440105
patch: Iterator iterator = res . entries . size ( ) ;
rank: 564
score: 99.20199148995536
patch: final Iterator < Iterator > iter = res . entries ( ) ;
rank: 564
score: 99.17254638671875
patch: Iterator iter = res . iterator ( ) ; ) return res ;
rank: 564
score: 99.15653773716518
patch: Iterator iter = res [ - 1 ] . iterator ( ) ;
rank: 564
score: 99.15049641927084
patch: if ( res . size ( ) >= res . size ( ) )
rank: 564
score: 99.14547526041666
patch: Iterator iter = res . entries ( ) ; int iter = null ;
rank: 564
score: 99.1419677734375
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ; }
rank: 564
score: 99.13500104631696
patch: Object [ ] res = new double [ v . length ] ;
rank: 564
score: 99.09971266526442
patch: Iterator iter = v [ 0 ] . size ( ) ;
rank: 564
score: 99.08228556315105
patch: if ( res . entries . length > 0 ) {
rank: 565
score: 99.20178833007813
patch: int size = res . size ( ) ;
rank: 565
score: 99.17246500651042
patch: Iterator iter = res . iterator ( ) ; / /
rank: 565
score: 99.17228560014205
patch: iter = res . list . iterator ( ) ;
rank: 565
score: 99.1563720703125
patch: Iterator iter = res . entries . iterator ( ) ; finally {
rank: 565
score: 99.14492563100961
patch: res . value = res . entries . iterator ( ) ;
rank: 565
score: 99.14154343377976
patch: Iterator < double [ ] > iter = this . res . entries . entries . iterator ( ) ;
rank: 565
score: 99.13466099330357
patch: Iterator iter = 1 . entries . entries . iterator ( ) ;
rank: 565
score: 99.0822002704327
patch: Iterator iter = res . load ( v . length ) ;
rank: 566
score: 99.20143229166666
patch: final Iterator iter = res . entries . iterator ( ) - 1 ;
rank: 566
score: 99.17196494654605
patch: Iterator iter = res . entries [ res . size ( ) ] . entries ( ) ;
rank: 566
score: 99.17194475446429
patch: Iterator iter . entries = res . entries . iterator ( ) ;
rank: 566
score: 99.14466349283855
patch: Iterator iter = res . iterator ( ) ; try {
rank: 566
score: 99.14125462582237
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . next ( ) ;
rank: 566
score: 99.09808349609375
patch: Iterator iter = res [ iter . length 1 ] ;
rank: 567
score: 99.19896589006696
patch: boolean iter = res . entries . iterator ( ) != null ;
rank: 567
score: 99.17181396484375
patch: try ; Iterator iter = res . entries . iterator ( ) ;
rank: 567
score: 99.14434344951923
patch: Iterator -- iter = res . entries . iterator ( ) ;
rank: 567
score: 99.1409912109375
patch: for ( iter = v . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 567
score: 99.0797831217448
patch: if ( entries . size ( ) > 0 ) {
rank: 568
score: 99.17172475961539
patch: Iterator < / > iter = res . iterator ( ) ;
rank: 568
score: 99.14948381696429
patch: Iterator iter ; try { iter = res . entries ( ) ;
rank: 568
score: 99.14417521158855
patch: Iterator < int 1 : res . iterator ( ) ;
rank: 568
score: 99.14031110491071
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector == null ? null : res . entries ( ) ;
rank: 568
score: 99.13379778180804
patch: Iterator iter = res . entries . size ( ) ( ) ;
rank: 568
score: 99.09731038411458
patch: Iterator iter = res [ ] . iterator ( ) ;
rank: 568
score: 99.07918294270833
patch: int iter = entries . entries . iterator ( ) ;
rank: 569
score: 99.17159598214286
patch: iter . Iterator iter = res . entries . iterator ( ) ;
rank: 569
score: 99.15575299944196
patch: Iterator iter = v . entries . iterator . iterator ( ) ;
rank: 569
score: 99.14926583426339
patch: Object iter = res . entries ( ) . iterator ( ) ;
rank: 569
score: 99.14405235877403
patch: Iterator < E > entries = res . iterator ( ) ;
rank: 569
score: 99.07894897460938
patch: Iterator iter = res . wait . iterator ( ) ;
rank: 570
score: 99.19858685661765
patch: Iterator < Class > iter = res . entries ( ) . iter ( ) ;
rank: 570
score: 99.15570068359375
patch: Iterator iter = list . entries ( ) . entries ( ) ;
rank: 570
score: 99.14889365748355
patch: if ( res != null ) res . res = res . entries . entries ( ) ;
rank: 570
score: 99.1437518780048
patch: this . entries . iterator ( ) . iterator ( ) ;
rank: 570
score: 99.13905736019737
patch: Iterator while ( iter . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 570
score: 99.13375651041666
patch: Iterator iter = res . entries . index CaMeL Of ( 1 ) ;
rank: 570
score: 99.09721069335937
patch: Iterator iter += res . size ( ) ;
rank: 571
score: 99.19834681919643
patch: if ( res != null ) return iter . next ( ) ;
rank: 571
score: 99.17117745535714
patch: Iterator iter = res . entries . Override . iterator ( ) ;
rank: 571
score: 99.16999053955078
patch: Iterator iter = false ; while ( iter . has CaMeL Next ( ) )
rank: 571
score: 99.1553203876202
patch: Iterator iter = ebe CaMeL Multiply ( res . length ) ;
rank: 571
score: 99.14862060546875
patch: if ( res . length == 0 ) return res ;
rank: 571
score: 99.13877650669643
patch: Iterator iter = res . get CaMeL Entry ( iter . key ( ) ) . iterator ( ) ;
rank: 572
score: 99.17075020926339
patch: Iterator iter = res . iterator ( ) . entries ( ) ;
rank: 572
score: 99.16954694475446
patch: System . Iterator iter = res . entries . iterator ( ) ;
rank: 572
score: 99.15528215680804
patch: Iterator iter = res != null + v . iterator ( ) ;
rank: 572
score: 99.14781358506944
patch: if ( res . size ( ) != res . size ( ) ) return res ;
rank: 572
score: 99.07813517252605
patch: Iterator iter = res != null + v . length ;
rank: 573
score: 99.19818670099431
patch: final int iter = res . size ( ) ;
rank: 573
score: 99.17046649639423
patch: Iterator iter = res . iterator ( ) ; = $NUMBER$ ;
rank: 573
score: 99.16841634114583
patch: Iterator iter = res . list ( res . size ( ) ) ;
rank: 573
score: 99.1477912454044
patch: Iterator iter = res . entries ( ) . iterator ( ) ; 0 ++ ;
rank: 573
score: 99.13833957248264
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries )
rank: 573
score: 99.09517728365384
patch: Iterator iter = v [ iter . size ( ) ] ;
rank: 573
score: 99.07703653971355
patch: int v = iter . has CaMeL Next ( ) ;
rank: 574
score: 99.19716971261161
patch: final Iterator < Object > entries = res . entries ( ) ;
rank: 574
score: 99.17022705078125
patch: Iterator iter = res . iterator . entries . iterator ( ) ;
rank: 574
score: 99.1548602764423
patch: Iterator iter > = res . entries . iterator ( ) ;
rank: 574
score: 99.1473388671875
patch: synchronized ( this ) { Iterator iter = res . iterator . iterator ( ) ;
rank: 574
score: 99.14076450892857
patch: Iterator iter = res . entries ( ) . put ( ) ;
rank: 574
score: 99.13152204241071
patch: Iterator iter = res . put ( ) . size ( ) ;
rank: 574
score: 99.09510294596355
patch: Iterator iter = res = res . size ( ) ;
rank: 574
score: 99.076904296875
patch: Iterator iter = res . exit . iterator ( ) ;
rank: 575
score: 99.19711538461539
patch: Iterator < Object > entries = res . iterator ( ) ;
rank: 575
score: 99.16970389229911
patch: Iterator iter = res . iterator ( ) ; iterator = null ;
rank: 575
score: 99.15444510323661
patch: Iterator iter = res . entries . length . entries ( ) ;
rank: 575
score: 99.14715983072917
patch: if ( res != null && res . size ( ) > 0 )
rank: 575
score: 99.140185546875
patch: Iterator iter = res . entries ( ) ; copy ( res ) ;
rank: 575
score: 99.13828125
patch: Iterator iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) . iterator ( ) ;
rank: 575
score: 99.07616248497597
patch: Iterator iter = res . matches ( v . length ) ;
rank: 576
score: 99.16788058810764
patch: if ( v == null ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 576
score: 99.16779436383929
patch: Iterator iterator = this . res . entries . iterator ( ) ;
rank: 576
score: 99.15436662946429
patch: Iterator iter = res . [ 1 ] . iterator ( ) ;
rank: 576
score: 99.14693410773026
patch: Iterator < Iterator < E > iter = res . entries ( ) . iterator ( ) ;
rank: 576
score: 99.13821847098214
patch: Iterator < float [ ] > iter = res . entries . entries . entries . iterator ( ) ;
rank: 576
score: 99.13113839285714
patch: int [ ] v = new String [ v . length ] ;
rank: 576
score: 99.09439522879464
patch: Iterator iter = res . entries . iterator ( ) : null ;
rank: 576
score: 99.0757344563802
patch: Iterator iter = res . random . iterator ( ) ;
rank: 577
score: 99.14627278645834
patch: Iterator < Iterator < E >> iter = res . iterator ( ) ;
rank: 577
score: 99.1393798828125
patch: synchronized ( res ) { iter = res . entries ( ) ; }
rank: 577
score: 99.13789295014881
patch: for ( iter = res . iterator ( ) ; iter . has CaMeL Next ( ) ; ) {
rank: 577
score: 99.09438650948661
patch: Iterator iter = res . entries . iterator ( ) : false ;
rank: 577
score: 99.07466634114583
patch: int res = res . entries . iterator ( ) ;
rank: 578
score: 99.19690813337054
patch: Iterator iter = res . entries . size ( ) - $NUMBER$ ;
rank: 578
score: 99.166015625
patch: Iterator iter = 0 ; iterator = res . iterator ( ) ;
rank: 578
score: 99.16581508091518
patch: Iterator iter = res . split . entries . iterator ( ) ;
rank: 578
score: 99.14599609375
patch: Iterator iter = res . entries ( ) . iterator ( ) ; ; ;
rank: 578
score: 99.13905843098958
patch: Iterator iter = res . entries ( ) ; try {
rank: 579
score: 99.19647686298077
patch: Iterator < int > entries = res . entries ( ) ;
rank: 579
score: 99.14576822916666
patch: if ( res . entries != null && res . entries != null )
rank: 579
score: 99.13869065504808
patch: final Iterator iter = res . value . iterator ( ) ;
rank: 579
score: 99.13059645432692
patch: Iterator iter = res . entries . size ( ) ) ;
rank: 579
score: 99.07303873697917
patch: Iterator iter = entries . iterator ( ) ; ) {
rank: 580
score: 99.19557407924107
patch: Iterator iter = res . entries = res . iter ( ) ;
rank: 580
score: 99.14491489955357
patch: Iterator iter = res . iterator ( ) ; synchronized ( this )
rank: 580
score: 99.13047572544643
patch: Iterator v = res . entries . entries . iterator ( ) ;
rank: 580
score: 99.0924960049716
patch: Iterator iter = res . size ( ) 1 ;
rank: 581
score: 99.1950439453125
patch: Iterator < Iterator < String > iter = res . iterator ( ) ;
rank: 581
score: 99.16547100360577
patch: Iterator iter = res . entries . put ( res ) ;
rank: 581
score: 99.16496276855469
patch: Iterator iter = res ; while ( iterator . has CaMeL Next ( ) )
rank: 581
score: 99.13009643554688
patch: int [ ] v = res . size ( ) ;
rank: 581
score: 99.09244384765626
patch: Iterator entries = res . size ( ) ;
rank: 581
score: 99.07264200846355
patch: int iter = res . length . size ( ) ;
rank: 582
score: 99.19448416573661
patch: final Iterator < E > iter = res . iterator ( ) ;
rank: 582
score: 99.15263148716518
patch: Iterator iter = this . data . entries . iterator ( ) ;
rank: 582
score: 99.14415067784927
patch: Iterator iter = v . iterator ( ) ; int size = v . length ;
rank: 582
score: 99.13747934194711
patch: Iterator < Float > iter = res . entries ( ) ;
rank: 582
score: 99.13728601792279
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ;
rank: 582
score: 99.1298828125
patch: Iterator iter = res . to CaMeL Array ( ) . ( ) ;
rank: 582
score: 99.07078043619792
patch: else iter = res . entries . iterator ( ) ;
rank: 583
score: 99.19427490234375
patch: Iterator iter = res . entries . entries ( ) != null ;
rank: 583
score: 99.13717215401786
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector == null ? null : v . iterator ( ) ;
rank: 583
score: 99.13656850961539
patch: Iterator < int >> iter = res . iterator ( ) ;
rank: 584
score: 99.15223039899554
patch: Iterator iter = res . entries . entries ( ) ; for (
rank: 584
score: 99.1436767578125
patch: res . entries = res . entries . length ;
rank: 584
score: 99.13682047526042
patch: for ( int ) { iter . advance ( ) ;
rank: 584
score: 99.13649338942308
patch: for ( Iterator iter : res . entries ( ) ) {
rank: 584
score: 99.09097726004464
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector 1
rank: 584
score: 99.06764729817708
patch: Iterator iter = res . false . size ( ) ;
rank: 585
score: 99.16495186941964
patch: Iterator iter . iter = res . entries . iter ( ) ;
rank: 585
score: 99.14358520507812
patch: if ( res != null ) Iterator iter = v . iterator ( ) ;
rank: 585
score: 99.13645426432292
patch: Iterator 1 = res . entries . iterator ( ) ;
rank: 585
score: 99.13645306755515
patch: Iterator < int , int > iter = res . entries . iterator ( ) ;
rank: 585
score: 99.12826538085938
patch: Iterator iter = res . iter . size ( ) ;
rank: 586
score: 99.19359479631696
patch: final Object res = res . entries . get ( 0 ) ;
rank: 586
score: 99.15211704799107
patch: Iterator iter = size . entries ( ) . iterator ( ) ;
rank: 586
score: 99.1434685202206
patch: if ( v != null ) { Iterator iter = v . iterator ( ) ;
rank: 586
score: 99.1364013671875
patch: synchronized ( res ) { iter = res . entries . entries . entries . iterator ( ) ;
rank: 586
score: 99.13594876802884
patch: Iterator < $STRING$ : res . entries . iterator ( ) ;
rank: 586
score: 99.0672607421875
patch: Iterator iter = res . equals ( this . v ) ;
rank: 587
score: 99.1932014016544
patch: Iterator < Object > iter = res . entries = res . entries ( ) ;
rank: 587
score: 99.16465541294643
patch: Iterator iter = res . entries . start . entries ( ) ;
rank: 587
score: 99.16326904296875
patch: res . set CaMeL Length ( res . size ( ) ) ;
rank: 587
score: 99.15167236328125
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = null ; for (
rank: 587
score: 99.14340645926339
patch: Iterator iter = v . iterator ( . iterator ( ) ) ;
rank: 587
score: 99.12540690104167
patch: Iterator iter = res . entries . entries . entries . entries ) ;
rank: 587
score: 99.06709798177083
patch: Iterator res = v . entries . iterator ( ) ;
rank: 588
score: 99.19290964226974
patch: if ( res . iterator ( ) . iterator ( ) . has CaMeL Next ( ) )
rank: 588
score: 99.16379220145089
patch: Iterator iter = res . entries . remove . iterator ( ) ;
rank: 588
score: 99.16205155222039
patch: Iterator iter = v . entries ; while ( iter . has CaMeL Next ( ) ) {
rank: 588
score: 99.14324396306819
patch: res . entries = res . entries . entries ;
rank: 588
score: 99.13577609592014
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) { {
rank: 588
score: 99.1327616373698
patch: Iterator * ] list = res . entries ( ) ;
rank: 588
score: 99.08890787760417
patch: Iterator iter = res [ 0 ] : res . size ( ) ;
rank: 588
score: 99.06692504882812
patch: Iterator iter = res . chars . iterator ( ) ;
rank: 589
score: 99.16359299879808
patch: Iterator iter = res . entries . iter ( ) ; iterator
rank: 589
score: 99.1507568359375
patch: Iterator iter = res != null : v . iterator ( ) ;
rank: 589
score: 99.14290945870536
patch: if ( res . is CaMeL Empty ( ) ) return res ;
rank: 589
score: 99.13540504092262
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . index CaMeL Of ( ) ;
rank: 589
score: 99.13216552734374
patch: Iterator iterator = res . entries ( ) ;
rank: 589
score: 99.08888753255208
patch: Iterator iter = res . size ( ) * 1 ;
rank: 589
score: 99.06687418619792
patch: int iter = v . entries . size ( ) ;
rank: 590
score: 99.16277204241071
patch: Iterator iter = res . entries . iterator ( ) ; continue ;
rank: 590
score: 99.1506014737216
patch: Iterator iter = res . iterator ( ) ; *
rank: 590
score: 99.13490513392857
patch: ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) . set CaMeL Entry ( this ) ;
rank: 590
score: 99.13140869140625
patch: Iterator iter = res . entries > size ( ) ;
rank: 590
score: 99.06658935546875
patch: Iterator iter = res . true . size ( ) ;
rank: 591
score: 99.16244070870536
patch: Iterator iter = res . entries . iterator ( ) ; ) /
rank: 591
score: 99.16127415707237
patch: if ( v . length == 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 591
score: 99.14235968338816
patch: Iterator iter = v . entries ( ) ; while . has CaMeL Next ( ) ; )
rank: 591
score: 99.13021850585938
patch: Integer iter = res . entries . iterator ( ) ;
rank: 591
score: 99.08739295372597
patch: Iterator iter = res . entries . iterator ( false ) ;
rank: 591
score: 99.06631469726562
patch: Iterator iter = res . in . entries ( ) ;
rank: 592
score: 99.19108072916667
patch: final Iterator < Class > iter = res . entries ( ) . iterator ( ) ;
rank: 592
score: 99.16205388849431
patch: Iterator iter = res . iterator ( ) ; .
rank: 592
score: 99.16115897042411
patch: if ( res . size ( ) == 0 ) return null ;
rank: 592
score: 99.14896937779018
patch: Iterator iter = res . entries ( ) . entries . length ;
rank: 592
score: 99.12418306790866
patch: Iterator iter = res . entries ) . size ( ) ;
rank: 593
score: 99.1908023231908
patch: Iterator iter = res . entries ( ) . entries ( ) . iterator ( ) ; ;
rank: 593
score: 99.1619873046875
patch: Iterator iter = res . entries . list ( ) ;
rank: 593
score: 99.14859713040866
patch: Iterator iter = res . entries ( ) [ 0 ] ;
rank: 593
score: 99.134375
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : this ) {
rank: 593
score: 99.12986403245192
patch: Iterator < E > iter = res . size ( ) ;
rank: 593
score: 99.12385777064732
patch: Iterator iter = res . join ( ) . entries ( ) ;
rank: 593
score: 99.06571138822116
patch: Iterator iter = res . length . iterator ( ) ; }
rank: 594
score: 99.190673828125
patch: final Iterator iter = res . entries . iterator ( ) ) ;
rank: 594
score: 99.16097586495536
patch: / / Iterator iter = res . entries . iterator ( ) ;
rank: 594
score: 99.14825439453125
patch: Open CaMeL Map CaMeL Real CaMeL Vector ( res , this ) ;
rank: 594
score: 99.14183807373047
patch: Iterator iter = res . entries ( ) . iterator ( ) ; int ;
rank: 594
score: 99.13392740885416
patch: Iterator < short > iter = res . entries . iterator ( ) ;
rank: 594
score: 99.08689528245192
patch: Iterator iter = res . contains ( v [ 0 ] )
rank: 594
score: 99.06480055588942
patch: Iterator iter = res . is CaMeL Instance ( this ) ;
rank: 595
score: 99.14149693080357
patch: Collection res = res . entries ( ) . entries ( ) ;
rank: 595
score: 99.12159075055804
patch: double [ ] res = new int [ v . length ] ;
rank: 595
score: 99.08652907151442
patch: Iterator iter = res [ v . size ( ) ] ;
rank: 595
score: 99.06473482572116
patch: Iterator iter = res . has CaMeL Next ( ) ) ;
rank: 596
score: 99.18991524832589
patch: Iterator iter = null . entries ( ) . iterator ( ) ;
rank: 596
score: 99.15889195033482
patch: Iterator iter = res . entries . iterator ( ) ; iterator .
rank: 596
score: 99.14715576171875
patch: res . set CaMeL Entry ( iter . key ( ) ) ;
rank: 596
score: 99.14148821149554
patch: if ( res != ) res . entries = res . entries ;
rank: 596
score: 99.1338752297794
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) .
rank: 596
score: 99.12959428267045
patch: final Iterator entries = res . entries ( ) ;
rank: 596
score: 99.12096296037946
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . length ;
rank: 596
score: 99.08619035993304
patch: Iterator iter = res . add ( v [ 1 ] ) ;
rank: 596
score: 99.06455078125
patch: Iterator res = entries . iterator ( ) ;
rank: 597
score: 99.1576416015625
patch: Iterator iter = res ; Iterator iter = v . iterator ( ) ;
rank: 597
score: 99.14148821149554
patch: if ( v . length != res . length ) return res ;
rank: 597
score: 99.12945149739583
patch: Iterator iter = res . entries ( ) ; int iterator = 0 ;
rank: 597
score: 99.11994280133929
patch: int [ ] v = new String [ res . length ] ;
rank: 597
score: 99.06376139322917
patch: Iterator iter = res > entries . iterator ( ) ;
rank: 598
score: 99.15792410714286
patch: Iterator iter = res . get = res . entries ( ) ;
rank: 598
score: 99.15693882533482
patch: res . res = res . entries . get ( 0 ) ;
rank: 598
score: 99.14547293526786
patch: int iter = v . entries . entries . iterator ( ) ;
rank: 598
score: 99.14108712332589
patch: if ( res != null ) res . entries = . entries ;
rank: 598
score: 99.06280517578125
patch: Iterator iter = res . advance . entries ( ) ;
rank: 599
score: 99.18924110814145
patch: final Object res = res . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 599
score: 99.13298688616071
patch: if ( res instanceof Open CaMeL Map CaMeL Real CaMeL Vector ) res . set CaMeL Entry ( ) ;
rank: 599
score: 99.12832641601562
patch: Iterator entries = res . entries . size ( ) ;
rank: 600
score: 99.18922183388158
patch: Iterator iter = ( ( Iterator ) res . iterator ( ) ) . iterator ( ) ;
rank: 600
score: 99.15672471788194
patch: synchronized ( this ) { res . entries = res . entries . iterator ( ) ;
rank: 600
score: 99.1566670735677
patch: Iterator iter = res . entries . delete ( ) ;
rank: 600
score: 99.14434814453125
patch: Iterator iter = res . size . entries ( ) ;
rank: 600
score: 99.13287712545956
patch: for ( int ) { Iterator iter = res . entries . iterator ( ) ;
rank: 600
score: 99.1272684733073
patch: Iterator iter = res . entries ( ) == null ;
rank: 600
score: 99.06116832386364
patch: Iterator iter = res . equals ( this ) ;
rank: 601
score: 99.15596829927884
patch: entries = res . entries . entries . iterator ( ) ;
rank: 601
score: 99.1414794921875
patch: Iterator iter = entries . entries ( ) . entries ( ) ;
rank: 601
score: 99.13257553998162
patch: for ( while ( res . iterator ( ) . has CaMeL Next ( ) )
rank: 601
score: 99.12716471354166
patch: Iterator iter = res . entries ( ) . entries ( ) ; else
rank: 601
score: 99.11812046595982
patch: double [ ] res = new int [ res . length ] ;
rank: 601
score: 99.06062825520833
patch: Iterator iter = res . min . size ( ) ;
rank: 602
score: 99.15554373604911
patch: Iterator iter ; iter = res . entries . iterator ( ) ;
rank: 602
score: 99.13987821691177
patch: synchronized ( res . entries ) { Iterator iter = v . iterator ( ) ;
rank: 602
score: 99.13243001302084
patch: Iterator < Object > iter = this . entries . iterator ( ) ;
rank: 602
score: 99.12681070963542
patch: Iterator * ] iter = res . iterator ( ) ;
rank: 602
score: 99.05914306640625
patch: Iterator res = this . entries . iterator ( ) ;
rank: 603
score: 99.18754359654018
patch: Iterator iter = get . entries ( ) . iterator ( ) ;
rank: 603
score: 99.15505981445312
patch: Iterator iter = res . list . entries ( ) ;
rank: 603
score: 99.15405951605902
patch: for ( ; ; ) { Iterator iter = res . entries . iterator ( ) ;
rank: 603
score: 99.13966200086806
patch: Iterator iter = res . iterator ( ) ; synchronized ( res . iterator ( ) )
rank: 603
score: 99.12669020432692
patch: Iterator < T > iterator = res . iterator ( ) ;
rank: 603
score: 99.08025251116071
patch: Iterator iter = res != null ? res . size ( ) :
rank: 604
score: 99.15501051682692
patch: Iterator iter = res . entries . entries ( ) ; ;
rank: 604
score: 99.138916015625
patch: if ( res . entries . size ( ) > 0 )
rank: 604
score: 99.13224962022569
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ) ;
rank: 604
score: 99.07763671875
patch: Iterator iter = min . entries . iterator ( ) ;
rank: 604
score: 99.05765787760417
patch: Iterator iter = entries . res . iterator ( ) ;
rank: 605
score: 99.15275065104167
patch: if ( res != null ) { iter = res . entries . iterator ( ) ;
rank: 605
score: 99.14017159598214
patch: try { res . set CaMeL Entry ( iter . key ) ;
rank: 605
score: 99.13223087086396
patch: Iterator iter = res . get CaMeL Entry ( iter . key ( ) ) ;
rank: 605
score: 99.12656947544643
patch: Iterator iter = res . entries ( ) . min ( ) ;
rank: 605
score: 99.05759840745192
patch: Iterator iter = res . contains ( this . v ) ;
rank: 606
score: 99.18631142064145
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = res . length ;
rank: 606
score: 99.13848876953125
patch: Iterator iter = res != null ? res . entries ( ) : null ;
rank: 606
score: 99.12655639648438
patch: Collection [ ] iter = res . entries ( ) ;
rank: 606
score: 99.11530412946429
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . set ( ) ;
rank: 606
score: 99.0762939453125
patch: Iterator = res . entries . iterator ( ) ;
rank: 606
score: 99.05756084735577
patch: List iter = res . entries . iterator ( ) ; ;
rank: 607
score: 99.18565266927084
patch: Iterator iter = res . entries . iterator ( ) ; else * /
rank: 607
score: 99.15353628305289
patch: Iterator iter = res . entries . . iter ( ) ;
rank: 607
score: 99.13657924107143
patch: while ( res . has CaMeL Next ( ) ) { for (
rank: 607
score: 99.13197544642857
patch: Iterator < boolean < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 607
score: 99.12607046274039
patch: Iterator < ] > iter = res . iter ( ) ;
rank: 607
score: 99.07603963216145
patch: Iterator iter = res . index CaMeL Of ( ) ;
rank: 607
score: 99.05723063151042
patch: Iterator iter = res . entries . contains ( ) ;
rank: 608
score: 99.15008075420673
patch: Iterator iter 0 = res . entries . iterator ( ) ;
rank: 608
score: 99.13805474175348
patch: if ( v != null ) res . entries = res . entries . entries ; else
rank: 608
score: 99.13580791766827
patch: Real CaMeL Vector res = new Real CaMeL Vector ( ) ;
rank: 608
score: 99.13190460205078
patch: Iterator iter = res . entries . entries . iterator ( ) ; try {
rank: 608
score: 99.11480243389423
patch: Iterator iter = res . entries . iterator ( $STRING$ ) ;
rank: 609
score: 99.18517388237848
patch: final Iterator < ) > iter = res . entries ( ) . iterator ( ) ;
rank: 609
score: 99.1532491048177
patch: Iterator iter = res . iterator ( ) ; break ;
rank: 609
score: 99.1317202919408
patch: Iterator < Class < ? > iter = res . entries . entries . iterator ( ) ;
rank: 609
score: 99.1144510904948
patch: Iterator iter = res . entries . iterator ( ) }
rank: 609
score: 99.0568339029948
patch: Iterator iter = res . sum . iterator ( ) ;
rank: 610
score: 99.184326171875
patch: Iterator iter = res . entries ( ) ; Iterator iter = res . entries ( ) ;
rank: 610
score: 99.15220289963942
patch: Iterator iter = res . entries ( ) ; = null ;
rank: 610
score: 99.137451171875
patch: if ( res . size ( ) != 0 ) return res ;
rank: 610
score: 99.13170708550348
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) +
rank: 610
score: 99.12465413411458
patch: Iterator iter = res . entries $NUMBER$ size ( ) ;
rank: 610
score: 99.05606079101562
patch: while ( v . has CaMeL Next ( ) ) {
rank: 611
score: 99.13255964006696
patch: Iterator iter = this . res . iterator ( ) ; for (
rank: 611
score: 99.13097272600446
patch: Iterator iter = out . entries . entries . iterator ( ) ;
rank: 611
score: 99.1244608561198
patch: Iterator iter = new int entries . iterator ( ) ;
rank: 612
score: 99.18327113560268
patch: final Iterator < ? > iter = res . entries ( ) ;
rank: 612
score: 99.14805201480263
patch: if ( res != null ) { Iterator iter = res . list . iterator ( ) ;
rank: 612
score: 99.12432861328125
patch: int entries . iterator ( ) . iterator ( ) ;
rank: 612
score: 99.07379705255681
patch: Iterator iter = res . iterator ( 1 ) ;
rank: 612
score: 99.05570475260417
patch: int iter = this . entries . iterator ( ) ;
rank: 613
score: 99.18299018012152
patch: final Iterator < int > iter = res . entries ( ) . iterator ( ) ;
rank: 613
score: 99.13718959263393
patch: Iterator iter = res . entries . iterator ( ) + 1 ;
rank: 613
score: 99.13209751674107
patch: Iterator iter . has CaMeL Next ( ) ; ) { for (
rank: 613
score: 99.11362711588542
patch: Vector iter = res . entries . size ( ) ;
rank: 613
score: 99.07289632161458
patch: Iterator iter = res . to CaMeL Array ( ) ;
rank: 613
score: 99.0553487141927
patch: int iter = res . entries . entries . length ;
rank: 614
score: 99.15098063151042
patch: Iterator iter = res . entries . Enum ( ) ;
rank: 614
score: 99.12369478665866
patch: Iterator < Integer > entries = res . entries ( ) ;
rank: 614
score: 99.0728251139323
patch: Iterator iter = this . entries . iter ( ) ;
rank: 615
score: 99.14740953947368
patch: Iterator iter = res . iterator ( ) ; finally { res . close ( ) ; }
rank: 615
score: 99.136474609375
patch: if ( res . entries . iterator ( ) . has CaMeL Next ( ) ) { )
rank: 615
score: 99.05517578125
patch: Iterator iter = res . clone . iterator ( ) ;
rank: 616
score: 99.18254743303571
patch: Iterator iter = res . entries ( ) ; else return null ;
rank: 616
score: 99.15020282451923
patch: Iterator iter = res . ( . iterator ( ) ) ;
rank: 616
score: 99.1363525390625
patch: if ( res . entries == null ) return res ;
rank: 616
score: 99.12350698617789
patch: Vector < String > iter = res . entries ( ) ;
rank: 617
score: 99.15005929129464
patch: iterator . Iterator iter = res . entries . iterator ( ) ;
rank: 617
score: 99.14674479166666
patch: Iterator iter = res . list ( ) . iterator ( ) ; ;
rank: 617
score: 99.13603379991319
patch: System . arraycopy ( v , 0 , res , 0 , v . length ) ;
rank: 617
score: 99.12974330357143
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries ( ) .
rank: 617
score: 99.05397542317708
patch: while ( v . size ( ) > 0 ) {
rank: 618
score: 99.1460693359375
patch: Iterator iter = map . iterator ( ) ;
rank: 618
score: 99.1269061748798
patch: Iterator iter = res . entries . entries . iterator ( )
rank: 618
score: 99.12201799665179
patch: Iterator iter = res . entries ( ) . matches ( ) ;
rank: 618
score: 99.10833270733173
patch: Iterator iter = res . entries . iterator ( ) ] ;
rank: 618
score: 99.05394490559895
patch: Iterator res = res . has CaMeL Next ( ) ;
rank: 619
score: 99.1357891376202
patch: if ( res != null && res . length != 0 )
rank: 619
score: 99.12960012335526
patch: Iterator < double [ ] > iter = this . entries . entries . iterator ( ) ;
rank: 619
score: 99.12181803385417
patch: Iterator iter = 0 ; Iterator iter = res . entries ( ) ;
rank: 619
score: 99.10799734933036
patch: Iterator iter = res . next ( ) . next ( ) ;
rank: 619
score: 99.05394490559895
patch: Iterator iter = res . null . iterator ( ) ;
rank: 620
score: 99.14493815104167
patch: System . arraycopy ( res , 0 , res , 0 , v . length ) ;
rank: 620
score: 99.13559857536765
patch: try { Iterator iter = res . entries ( ) . iterator ( ) ; ;
rank: 620
score: 99.10741315569196
patch: Iterator iter = v . copy ( ) . entries ( ) ;
rank: 620
score: 99.05364990234375
patch: List iter = entries . entries . iterator ( ) ;
rank: 621
score: 99.1478740985577
patch: Iterator iter = res . entries . contains ( res ) ;
rank: 621
score: 99.13510131835938
patch: Iterator iter = res . entries . iterator ( ) ; while ( ) {
rank: 621
score: 99.12907191685268
patch: for ( ) { res . set CaMeL Entry ( iter ) ;
rank: 621
score: 99.12461344401042
patch: int entries = iter . has CaMeL Next ( ) ;
rank: 621
score: 99.12102801983173
patch: Iterator < T > iter = res . copy ( ) ;
rank: 621
score: 99.10731090198864
patch: Iterator iter = res . entries . entries ) ;
rank: 621
score: 99.06836876502403
patch: Iterator iter = v . index CaMeL Of ( this ) ;
rank: 622
score: 99.14339192708333
patch: Iterator iter = ( ( Iterator ) res ) . iterator ( ) ;
rank: 622
score: 99.12035023082386
patch: Iterator >> iter = res . entries ( ) ;
rank: 622
score: 99.10639299665179
patch: Iterator iter = res . entries . entries . entries . entries ;
rank: 622
score: 99.06746419270833
patch: Iterator iter = res . next ( ) . entries ;
rank: 623
score: 99.17960902622768
patch: Iterator iter = res . iterator ( ) ; for ( ) {
rank: 623
score: 99.14559232271634
patch: Iterator iter = new res . entries . iterator ( ) ;
rank: 623
score: 99.13445172991071
patch: assert res != null : $STRING$ + res . size ( ) ;
rank: 623
score: 99.12875802176339
patch: Iterator iter = res . key ( ) . iterator ( ) ;
rank: 623
score: 99.12262432391827
patch: Iterator iter = res . entries = new > ( ) ;
rank: 624
score: 99.1337890625
patch: if ( res != null ) res . res = res . entries . entries ;
rank: 624
score: 99.12868826729911
patch: synchronized ( res ) { res . set CaMeL Entry ( ) ;
rank: 624
score: 99.11925397600446
patch: int iter = res . entries . entries ( ) . length ;
rank: 624
score: 99.10308837890625
patch: Iterator iter = res . contains ( ) + v . length ;
rank: 624
score: 99.06322224934895
patch: Iterator iter = res > list . iterator ( ) ;
rank: 624
score: 99.05138050426136
patch: Iterator Iterator iter = res . size ( ) ;
rank: 625
score: 99.1793212890625
patch: if ( res != null ) Iterator iterator = res . entries . iterator ( ) ;
rank: 625
score: 99.13375051398026
patch: if ( res != null ) res . res = res . get CaMeL Bytes ( ) ;
rank: 625
score: 99.12160237630208
patch: Iterator iter = new Iterator ( res . length ) ;
rank: 625
score: 99.11913123497597
patch: Iterator < T > iterator = res . entries ( ) ;
rank: 625
score: 99.1025390625
patch: Iterator iter = res . entries . entries ;
rank: 625
score: 99.05093383789062
patch: Iterator iter = res . delete . iterator ( ) ;
rank: 626
score: 99.17929311899039
patch: Iterator < Iterator > iter = res . iter ( ) ;
rank: 626
score: 99.14215642755681
patch: / Iterator iter = res . iterator ( ) ;
rank: 626
score: 99.1416259765625
patch: Iterator iter = res . list ( res . entries ( ) ) ;
rank: 626
score: 99.1337139423077
patch: Iterator < Double > iter = res . iterator ( ) ;
rank: 626
score: 99.1277847290039
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res .
rank: 626
score: 99.12035115559895
patch: int iter = res . length . iterator ( ) ;
rank: 626
score: 99.11905924479167
patch: double iter = res . entries . iterator ( ) ;
rank: 626
score: 99.05081176757812
patch: Iterator iter = res . ) . iterator ( ) ;
rank: 627
score: 99.17908653846153
patch: final int [ ] res = res . entries ( ) ;
rank: 627
score: 99.1419677734375
patch: Iterator iter = iterator ( res . iterator ( ) ) ;
rank: 627
score: 99.13348709909539
patch: if ( v != null ) res . res = res . entries . get ( ) ;
rank: 627
score: 99.11745981069711
patch: final int iter . iterator ( ) . iterator ( ) ;
rank: 627
score: 99.0984619140625
patch: Iterator iter = res > size ( ) ;
rank: 627
score: 99.0507303873698
patch: Iterator iter = res . size ( ) ; for (
rank: 628
score: 99.17901611328125
patch: final synchronized ( res ) { iter = res . entries . iterator ( ) ; }
rank: 628
score: 99.14036458333334
patch: synchronized ( this ) { res . entries = res . entries ; }
rank: 628
score: 99.133056640625
patch: if ( v != null ) res . res . res . res . res . )
rank: 628
score: 99.11737530048077
patch: List < T > iter = res . entries ( ) ;
rank: 628
score: 99.0499267578125
patch: Iterator iter = res . list . size ( ) ;
rank: 629
score: 99.13301908052884
patch: if ( v != null ) res . res = res ;
rank: 629
score: 99.11878380408653
patch: Iterator iter = res [ $STRING$ ] . iterator ( ) ;
rank: 629
score: 99.11722506009616
patch: Iterator < T >> iter = res . entries ( ) ;
rank: 629
score: 99.04944864908855
patch: Iterator iter = this . size . iterator ( ) ;
rank: 630
score: 99.17874581473214
patch: final Iterator iter = res . entries . iterator ( ) ; else
rank: 630
score: 99.14115084134616
patch: Iterator iter = ( Iterator ) res . iter ( ) ;
rank: 630
score: 99.1328369140625
patch: Iterator < ? extends res > iter = res . iterator ( ) ;
rank: 630
score: 99.12684983473558
patch: Iterator < iter = res . entries . iterator ( ) ;
rank: 630
score: 99.117138671875
patch: Iterator iter = res . entries ( ) ; add ( res ) ;
rank: 630
score: 99.0483907063802
patch: Iterator iter = res . entries . min ( ) ;
rank: 631
score: 99.1407001201923
patch: Iterator iter entries = res . entries . iterator ( ) ;
rank: 631
score: 99.13263408954327
patch: Iterator iter = v [ res . length - 1 ] ;
rank: 631
score: 99.12675258091518
patch: Iterator < int ) = v . entries . iterator ( ) ;
rank: 631
score: 99.11703927176339
patch: Iterator iter = res != null ? res . entries ( ) ;
rank: 631
score: 99.09255981445312
patch: Iterator iter = res . entries . entries . entries ;
rank: 631
score: 99.0481669108073
patch: Iterator iter = res . start . size ( ) ;
rank: 632
score: 99.17721993582589
patch: final ? Iterator iter = res . entries . iterator ( ) ;
rank: 632
score: 99.13892711292614
patch: Iterator iter = res . get ( res ) ;
rank: 632
score: 99.13222142269737
patch: System . arraycopy ( res . entries , 0 , res . entries , 0 , ) ;
rank: 632
score: 99.11573137555804
patch: Iterator iter = res . entries ( ) . reverse ( ) ;
rank: 633
score: 99.13793006310097
patch: try { iter = res . entries . iterator ( ) ;
rank: 633
score: 99.13221153846153
patch: Iterator iter = res . iterator ( iterator ( ) ) ;
rank: 633
score: 99.12669542100694
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . entries .
rank: 633
score: 99.09181565504808
patch: Iterator iter = res . entries . entries . entries ) ;
rank: 633
score: 99.05804443359375
patch: Iterator iter = res . join . iterator ( ) ;
rank: 633
score: 99.0462137858073
patch: Iterator iter = res = entries . iterator ( ) ;
rank: 634
score: 99.13826497395833
patch: Iterator iterator = res . entries . entries ( ) ;
rank: 634
score: 99.13173314144737
patch: if ( v != null ) { Iterator iter = res . iterator . iterator ( ) ;
rank: 634
score: 99.1148173014323
patch: res . set CaMeL Entry ( v . length ) ;
rank: 634
score: 99.09176199776786
patch: if ( res . length > 0 ) { return res ; }
rank: 634
score: 99.04617309570312
patch: Iterator iter = res . environment . iterator ( ) ;
rank: 635
score: 99.17667061941964
patch: Iterator iter = res . entries . iterator ( ) ; else ;
rank: 635
score: 99.1373623934659
patch: Iterator iter = res . read ( res ) ;
rank: 635
score: 99.13164319490132
patch: Iterator iter = res . entries ( res . entries . size ( ) - 1 ) ;
rank: 635
score: 99.11510120738636
patch: Iterator < ] : res . iterator ( ) ;
rank: 635
score: 99.04608154296875
patch: if ( v . length > 0 ) {
rank: 636
score: 99.17631312779018
patch: final Iterator < ) > iter = res . iterator ( ) ;
rank: 636
score: 99.13139125279018
patch: res . res = res . get CaMeL Bytes ( $STRING$ ) ;
rank: 636
score: 99.05718994140625
patch: Iterator iter = res + v . iterator ( ) ;
rank: 636
score: 99.04508463541667
patch: Iterator iter = res . TRUE . iterator ( ) ;
rank: 637
score: 99.1344706217448
patch: Iterator iter = entries . entries . iter ( ) ;
rank: 637
score: 99.12523129111842
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) . entries .
rank: 637
score: 99.11404184194711
patch: Vector < ] > iter = res . entries ( ) ;
rank: 637
score: 99.04462224786931
patch: Iterator iter = res . matches ( this ) ;
rank: 638
score: 99.13218180338542
patch: Iterator iter = this . res . entries ( ) ;
rank: 638
score: 99.1307373046875
patch: lock ( ) ; Iterator iter = res . iterator ( ) ;
rank: 638
score: 99.12505139802632
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . index CaMeL Of (
rank: 638
score: 99.044189453125
patch: Iterator iter . has CaMeL Next ( ) ; {
rank: 639
score: 99.1333984375
patch: try { Iterator iter = res . entries . iterator ( ) ; ;
rank: 639
score: 99.13204956054688
patch: entries iter = res . entries . iterator ( ) ;
rank: 639
score: 99.12488810221355
patch: Iterator < int ) = res . iterator ( ) ;
rank: 639
score: 99.0561190518466
patch: Iterator iter = v [ length - 1 ] ;
rank: 639
score: 99.04351806640625
patch: Iterator iter = res . 0 . iterator ( ) ;
rank: 640
score: 99.13201434795673
patch: Iterator iter = res . entries . compare ( res ) ;
rank: 640
score: 99.124755859375
patch: Iterator iter = res . entries [ 0 ] . entries ( ) . iterator ( ) ;
rank: 640
score: 99.11290486653645
patch: Iterator iter = size . entries . iterator ( ) ;
rank: 640
score: 99.04334513346355
patch: Set iter = res . entries . size ( ) ;
rank: 641
score: 99.13274274553571
patch: Object [ ] data = new Object [ res . length ] ;
rank: 641
score: 99.13181559244792
patch: Iterator iter = res . get CaMeL Entries ( ) ;
rank: 641
score: 99.12970440204327
patch: res . entries = res . get CaMeL Entries ( ) ;
rank: 641
score: 99.0554950420673
patch: Iterator iter = ! iter . has CaMeL Next ( ) ;
rank: 642
score: 99.13258463541666
patch: Iterator iter = v . iterator ( ) ; while ( iter . )
rank: 642
score: 99.13153545673077
patch: Iterator iter iter = res . entries . iter ( ) ;
rank: 642
score: 99.1293586282169
patch: if ( res != null ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 642
score: 99.12468872070312
patch: for ( final Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ( ) ) {
rank: 642
score: 99.11273803710938
patch: Vector iter = res . iterator ( ) ;
rank: 642
score: 99.11151592548077
patch: Iterator < Boolean > iter = res . entries ( ) ;
rank: 642
score: 99.05414287860577
patch: Iterator iter = res . contains ( res . length ) ;
rank: 642
score: 99.04166666666667
patch: Iterator iter = entries . iterator ( ) ; for (
rank: 643
score: 99.13101900540866
patch: Iterator iter = res . iterator ( ) ; = 0 ;
rank: 643
score: 99.12916917067308
patch: Iterator < res > iter = v . iterator ( ) ;
rank: 643
score: 99.12440592447916
patch: Enumeration < String > iter = res . entries . iterator ( ) ;
rank: 643
score: 99.11236102764423
patch: iter = this . res . entries . iterator ( ) ;
rank: 643
score: 99.11128540039063
patch: Iterator iter = list . entries ( ) ;
rank: 643
score: 99.04136149088542
patch: Iterator ( res . has CaMeL Next ( ) ) {
rank: 644
score: 99.12819126674107
patch: if ( res != null ) res . res = res ) ;
rank: 644
score: 99.12434895833333
patch: synchronized ( res ) { iter = res . entries . entries . iterator ( ) ;
rank: 644
score: 99.1099141438802
patch: Iterator iter = exp . entries . iterator ( ) ;
rank: 644
score: 99.05251057942708
patch: Iterator iter = res . entries . iterator ( ) :
rank: 645
score: 99.13082181490384
patch: Iterator iter = res . iterator ( ) ; iter -- ;
rank: 645
score: 99.12779947916667
patch: assert res != null ; Iterator iter = res . iterator ( ) ;
rank: 645
score: 99.12417763157895
patch: Iterator < byte [ ] > iter = res . entries . entries . iterator ( ) ;
rank: 645
score: 99.10983511117789
patch: List < String > entries = res . entries ( ) ;
rank: 645
score: 99.10968627929688
patch: Iterator iter = iter . iter ( ) ;
rank: 645
score: 99.04002888997395
patch: Iterator iter = res . name . size ( ) ;
rank: 646
score: 99.1741943359375
patch: Iterator < boolean > iter = res . iterator ( ) ;
rank: 646
score: 99.131005859375
patch: Iterator iter = res . get ( res ) . entries ( ) ;
rank: 646
score: 99.12645545372597
patch: Iterator < res > iter = res . entries ( ) ;
rank: 646
score: 99.03997192382812
patch: if ( res . length > 0 ) {
rank: 647
score: 99.1739501953125
patch: Iterator < ? > iter = res . size ( ) ;
rank: 647
score: 99.13076346261161
patch: Disposer . Iterator iter = res . entries . iterator ( ) ;
rank: 647
score: 99.12608991350446
patch: Iterator iter = res . iterator ( ) ; synchronized ( res )
rank: 647
score: 99.10788981119792
patch: float iter = res . entries . iterator ( ) ;
rank: 647
score: 99.05095880681819
patch: Iterator iter = res . size ( ) ) ;
rank: 647
score: 99.03987630208333
patch: try { Iterator iter = res . size ( ) ;
rank: 648
score: 99.12535749162946
patch: if ( res . size ( ) == 1 ) return res ;
rank: 648
score: 99.12366943359375
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) + ) ;
rank: 648
score: 99.10725233289931
patch: entries = res . entries ( ) ;
rank: 648
score: 99.03973943536931
patch: final Iterator iter = res . entries . length ;
rank: 649
score: 99.1278963955966
patch: Iterator iter = res . iterator ( ) ; Iterator
rank: 649
score: 99.12523600260417
patch: if ( res != null && res . length < res . length )
rank: 649
score: 99.10701293945313
patch: Iterator iter = size . iterator ( ) ;
rank: 649
score: 99.03968302408855
patch: Iterator iter = res . end . size ( ) ;
rank: 650
score: 99.12769571940105
patch: Iterator iter = res . iterator ( ) ; ) /
rank: 650
score: 99.12321166992187
patch: for ( iter = res . entries ( ) ; iter . has CaMeL Next ( ) ; )
rank: 650
score: 99.12218424479167
patch: Iterator < Iterator < Integer >> iter = res . iterator ( ) ;
rank: 650
score: 99.1068827311198
patch: int value = iter . has CaMeL Next ( ) ;
rank: 650
score: 99.07847243088942
patch: int value = v [ 0 ] . value ( ) ;
rank: 650
score: 99.03826904296875
patch: Iterator iter = v . contains . iterator ( ) ;
rank: 651
score: 99.1712137858073
patch: Iterator iter = $NUMBER$ * res . iterator ( ) ;
rank: 651
score: 99.12987467447917
patch: switch ( res . entries . size ( ) ) { case 1 :
rank: 651
score: 99.12680288461539
patch: Iterator iter = res . = res . iterator ( ) ;
rank: 651
score: 99.12082926432292
patch: Iterator iter = res . iterator . next ( ) ;
rank: 651
score: 99.10666910807292
patch: Iterator iter = v . iterator ( ) ; for (
rank: 651
score: 99.10530598958333
patch: Iterator * ] res = res . iterator ( ) ;
rank: 651
score: 99.078369140625
patch: Iterator entries = res . entries . entries ( ) ;
rank: 651
score: 99.0372823079427
patch: Iterator iter = v . map . iterator ( ) ;
rank: 652
score: 99.12775530133929
patch: Iterator iter = res . list . list . iterator ( ) ;
rank: 652
score: 99.1253662109375
patch: Iterator iter = res . max . entries ( ) ;
rank: 652
score: 99.11855246803977
patch: Iterator iter = v . iterator ( res ) ;
rank: 652
score: 99.0772235576923
patch: Iterator iter = res . entries . size iterator ( ) ;
rank: 652
score: 99.04886881510417
patch: Iterator iter = res [ size ] ;
rank: 652
score: 99.03694915771484
patch: Iterator iter = res . entries .
rank: 653
score: 99.11844576322116
patch: Iterator iter = res . iterator ( . iterator ( ) ;
rank: 653
score: 99.10419170673077
patch: Iterator < E > iterator = res . entries ( ) ;
rank: 653
score: 99.0753643329327
patch: Iterator iter = res . entries . ( ) . length ;
rank: 653
score: 99.0369160970052
patch: List res = res . entries . size ( ) ;
rank: 654
score: 99.12579345703125
patch: Iterator iter = list . iterator ( ) . iterator ( ) ;
rank: 654
score: 99.12286017922794
patch: for ( int Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries )
rank: 654
score: 99.10393817608173
patch: int iter = res . entries . ( ) . length ;
rank: 654
score: 99.07520470252403
patch: iter = res . entries . entries . size ( ) ;
rank: 654
score: 99.0349833170573
patch: Iterator iter = res . class . entries ( ) ;
rank: 655
score: 99.1232158954327
patch: Iterator iter = res . iterator ( ) ; ; / /
rank: 655
score: 99.12260167738971
patch: if ( v . length > 0 ) res . set CaMeL Entry ( ) ;
rank: 655
score: 99.07488544170673
patch: Iterator iter = res [ 0 . size ( ) ] ;
rank: 656
score: 99.12317833533653
patch: Iterator iter = res . entries . reverse ( res ) ;
rank: 656
score: 99.11527506510417
patch: Object [ ] res = res . entries ( ) ;
rank: 656
score: 99.10438842773438
patch: Iterator iter = iterator . iterator ( ) ;
rank: 656
score: 99.10301717122395
patch: long iter = res . entries . iterator ( ) ;
rank: 657
score: 99.16778564453125
patch: Iterator < Iterator iter = res . iterator ( ) ;
rank: 657
score: 99.12290602463942
patch: Iterator iter = res . entries . . entries ( ) ;
rank: 657
score: 99.11446126302083
patch: Collection iter = res . entries . entries ( ) ;
rank: 657
score: 99.10292746803977
patch: res . entries ( ) . iterator ( ) ;
rank: 657
score: 99.03270467122395
patch: Set res = res . entries . iterator ( ) ;
rank: 658
score: 99.16683523995536
patch: int [ ] iter = res . entries . iterator ( ) ;
rank: 658
score: 99.12205153245192
patch: iter Iterator iter = res . entries . iterator ( ) ;
rank: 659
score: 99.12204461348684
patch: list . set CaMeL Entry ( iter . key ( ) , iter . value ( ) *
rank: 659
score: 99.10319010416667
patch: Iterator iter = max . entries . iterator ( ) ;
rank: 659
score: 99.1018778483073
patch: Iterator iter = res . entries ( ) ; break ;
rank: 659
score: 99.04400634765625
patch: Iterator iter = res >> entries . iterator ( ) ;
rank: 660
score: 99.11191813151042
patch: Iterator iter = v . iterator . entries ( ) ;
rank: 660
score: 99.10184420072116
patch: Iterator < String > iterator = res . entries ( ) ;
rank: 660
score: 99.1017315204327
patch: Iterator iter = ( Iterator ) iter . iterator ( ) ;
rank: 660
score: 99.04197340745192
patch: Iterator iter = res [ 0 ] . entries ( ) ;
rank: 660
score: 99.03136189778645
patch: Iterator iter = res . length . iter ( ) ;
rank: 661
score: 99.166015625
patch: Iterator < Iterator > iterator = res . iterator ( ) ;
rank: 661
score: 99.12002328725961
patch: Iterator iter = res . iterator ( ) ; ) / /
rank: 661
score: 99.11182579627403
patch: Iterator < Object > iter = v . iterator ( ) ;
rank: 661
score: 99.101806640625
patch: Iterator iter = res . out . size ( ) ;
rank: 661
score: 99.06911057692308
patch: Iterator iter = res . entries . add ( this ) ;
rank: 661
score: 99.03091430664062
patch: iter . has CaMeL Next ( ) ; {
rank: 662
score: 99.16579965444711
patch: Iterator iter = res . entries ( ) ; return res ;
rank: 662
score: 99.12080601283482
patch: Iterator has CaMeL Next = res . entries . iterator ( ) ;
rank: 662
score: 99.12001389723558
patch: Iterator iter = res . iterator ( ) ; = 1 ;
rank: 662
score: 99.1016337076823
patch: try { Iterator iter = res . entries ( ) ;
rank: 662
score: 99.09981282552083
patch: Vector iter = v . entries . iterator ( ) ;
rank: 662
score: 99.0406494140625
patch: Iterator iter = res . exp . iterator ( ) ;
rank: 662
score: 99.02998860677083
patch: Vector res = entries . entries . iterator ( ) ;
rank: 663
score: 99.12080078125
patch: Iterator iter = res . entries ( v ) . iterator ( ) ;
rank: 663
score: 99.11957341974431
patch: Iterator iter iterator = res . iterator ( ) ;
rank: 663
score: 99.10071739783653
patch: Iterator < / >> iter = res . entries ( ) ;
rank: 663
score: 99.09959716796875
patch: Iterator iter = iter . size ( ) ;
rank: 663
score: 99.06406813401442
patch: Iterator iter = res . compare CaMeL To ( this ) ;
rank: 663
score: 99.04042561848958
patch: Iterator iter = end . entries . iterator ( ) ;
rank: 663
score: 99.02946333451705
patch: Iterator iter = res . iterator ( 0 ) ;
rank: 664
score: 99.11748395647321
patch: Iterator iter = res = res . list . iterator ( ) ;
rank: 664
score: 99.11004083806819
patch: entries = res . entries . entries ( ) ;
rank: 664
score: 99.09954833984375
patch: Iterator iter = res . replace . iterator ( ) ;
rank: 664
score: 99.06331380208333
patch: Iterator iter = res . entries . index CaMeL Of (
rank: 664
score: 99.04010009765625
patch: Iterator entries = this . entries . iterator ( ) ;
rank: 665
score: 99.12059674944196
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : v )
rank: 665
score: 99.11663348858173
patch: Iterator iter = res . iterator ( ) ; ; finally {
rank: 665
score: 99.10882098858173
patch: entries = res . entries . to CaMeL Array ( ) ;
rank: 665
score: 99.09854125976562
patch: Iterator [ ] iter = res . iterator ( ) ;
rank: 665
score: 99.02835083007812
patch: Iterator iter = res . get CaMeL Id ( ) ;
rank: 666
score: 99.12058392693015
patch: for ( } Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries )
rank: 666
score: 99.1156005859375
patch: Iterator iter = System . current CaMeL Time CaMeL Millis ( ) ;
rank: 666
score: 99.10877482096355
patch: Iterator iter = res . iterator ( ) ; * /
rank: 666
score: 99.0987548828125
patch: Iterator iter = res . ebe CaMeL Multiply ( this ) ;
rank: 667
score: 99.12054084329044
patch: Iterator < long [ ] > iter = res . entries . iterator ( ) ;
rank: 667
score: 99.11485706676136
patch: Iterator iter = res 1 . iterator ( ) ;
rank: 667
score: 99.0986328125
patch: Iterator iter = res [ length ] . iterator ( ) ;
rank: 667
score: 99.03768920898438
patch: Iterator iter = this . iter . iterator ( ) ;
rank: 667
score: 99.02826482599431
patch: final Iterator iter = entries . size ( ) ;
rank: 668
score: 99.12024739583333
patch: if ( res != null ) res . set CaMeL Entry ( ) ;
rank: 668
score: 99.11480712890625
patch: Iterator iter = this . get . entries . iterator ( ) ;
rank: 668
score: 99.1083514873798
patch: res . res = res . entries . clone ( ) ;
rank: 668
score: 99.09812418619792
patch: Iterator < * T : res . iterator ( ) ;
rank: 668
score: 99.09751539963942
patch: Iterator iter = res . iterator ( v . length ) ;
rank: 668
score: 99.02750651041667
patch: Iterator iter = res .
rank: 669
score: 99.15976186899039
patch: Iterator < Throwable > iter = res . iterator ( ) ;
rank: 669
score: 99.11658732096355
patch: Iterator iter = res . entries . split ( ) ;
rank: 669
score: 99.1126708984375
patch: List list = res . entries . iterator ( ) ;
rank: 669
score: 99.10817464192708
patch: List iter = res . entries . entries ( ) ;
rank: 669
score: 99.09775015024039
patch: Iterator iter = res . entries ( null , null ) ;
rank: 669
score: 99.0957500751202
patch: Iterator iter = res [ iter . length ( ) ] ;
rank: 669
score: 99.03707885742188
patch: Iterator iter = res . entries . iterator ( ) ?
rank: 669
score: 99.02726236979167
patch: Iterator iter = v . read . iterator ( ) ;
rank: 670
score: 99.15963040865384
patch: Iterator < Short > iter = res . iterator ( ) ;
rank: 670
score: 99.1064120205966
patch: Iterator Iterator iter = v . iterator ( ) ;
rank: 670
score: 99.03639526367188
patch: Iterator iterator = res . size ( ) ;
rank: 670
score: 99.02682495117188
patch: Iterator iter = res . start ( ) ;
rank: 671
score: 99.15932053786058
patch: Iterator < Byte > iter = res . iterator ( ) ;
rank: 671
score: 99.05507590553977
patch: Iterator iter = res . is CaMeL Empty ( )
rank: 671
score: 99.02630615234375
patch: Iterator iter = res . entries . get ( ) ;
rank: 672
score: 99.15838153545673
patch: Iterator < String > iter = res . iter ( ) ;
rank: 672
score: 99.1151123046875
patch: Iterator . Iterator iter = res . iterator ( ) ;
rank: 672
score: 99.10623873197116
patch: Iterator < Comparable > iter = res . iterator ( ) ;
rank: 672
score: 99.0951436360677
patch: int iter = res . map . iterator ( ) ;
rank: 672
score: 99.0928243001302
patch: Vector iter = res . entries . entries ( ) ;
rank: 672
score: 99.02489362444196
patch: iter . advance ( ) ;
rank: 673
score: 99.1582919034091
patch: Iterator iter = res . entries ( ) ) ;
rank: 673
score: 99.11477426382211
patch: Iterator iter = res . index CaMeL Of ( res ) ;
rank: 673
score: 99.10336538461539
patch: if ( res != null && res . res != null )
rank: 673
score: 99.09501953125
patch: int entries = res . iterator ( ) ;
rank: 673
score: 99.05335489908855
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = this ;
rank: 673
score: 99.03480881911058
patch: Iterator iter = res . has CaMeL Next ( ) 1 ;
rank: 673
score: 99.02414772727273
patch: Iterator iter = res . iterator ( this ) ;
rank: 674
score: 99.11785567434211
patch: synchronized ( this ) { Iterator iter = res . entries . entries . iterator ( ) ;
rank: 674
score: 99.11392916165866
patch: Iterator iter = res . entries . matches ( res ) ;
rank: 674
score: 99.08777794471153
patch: Iterator iter = v [ iter . entries ( ) ] ;
rank: 674
score: 99.03426106770833
patch: Iterator iter = this . v . size ( ) ;
rank: 674
score: 99.02335205078126
patch: Iterator iter = res != null ? res .
rank: 675
score: 99.09176635742188
patch: Collection [ ] res = res . entries ( ) ;
rank: 675
score: 99.02333762428977
patch: Iterator iter = res . contains ( v ) ;
rank: 676
score: 99.102294921875
patch: if ( v . length == 0 ) return res ;
rank: 676
score: 99.101318359375
patch: Iterator iter = size ( ) . iterator ( ) ;
rank: 676
score: 99.09171919389205
patch: Iterator < ] : res . entries ( ) ;
rank: 676
score: 99.085693359375
patch: Iterator iterator = v . entries . iterator ( ) ;
rank: 676
score: 99.02333577473958
patch: Iterator iter = ) . has CaMeL Next ( ) ;
rank: 677
score: 99.15624060997597
patch: Iterator < Object > iter = res . iter ( ) ;
rank: 677
score: 99.11319986979167
patch: Iterator iter = res . entries . put ( ) ;
rank: 677
score: 99.0995624248798
patch: for ( ; iter . has CaMeL Next ( ) ; )
rank: 677
score: 99.08566284179688
patch: Iterator iter = v != null . iterator ( ) ;
rank: 678
score: 99.11311479048295
patch: Iterator < ) = res . iterator ( ) ;
rank: 678
score: 99.09954364483173
patch: Iterator iter = res . list . iterator ( 0 ) ;
rank: 678
score: 99.09879557291667
patch: Iterator iter = res . iterator ( ) - 1 ;
rank: 678
score: 99.08378092447917
patch: int iter = this . res . iterator ( ) ;
rank: 678
score: 99.0221835049716
patch: Iterator iter = entries . . iterator ( ) ;
rank: 679
score: 99.09871419270833
patch: List res = res . entries . entries ( ) ;
rank: 679
score: 99.09138997395833
patch: Iterator < ? ] : res . iterator ( ) ;
rank: 679
score: 99.08328951322116
patch: Iterator iter = res . entries ( ) [ 1 ] ;
rank: 679
score: 99.03319702148437
patch: Iterator iter = v . iter ( ) ;
rank: 679
score: 99.02213134765626
patch: Iterator iter = v . read ( ) ;
rank: 680
score: 99.11191969651442
patch: Iterator iter = res . entries . iter ( ) ) ;
rank: 680
score: 99.0961162860577
patch: Iterator iter = ( int ) iter . next ( ) ;
rank: 680
score: 99.09076397235577
patch: Iterator < $STRING$ > iter = res . entries ( ) ;
rank: 680
score: 99.04678109975961
patch: Open CaMeL Map CaMeL Real CaMeL Vector res ( this ) ;
rank: 681
score: 99.11539499383224
patch: Iterator iter . has CaMeL Next ( ) ; ) { iter . advance ( ) ; }
rank: 681
score: 99.11159104567308
patch: Iterator iter = res . entries . iterator ( ) ; /
rank: 681
score: 99.09426879882812
patch: Object res = res . get CaMeL Value ( ) ;
rank: 681
score: 99.09000651041667
patch: Iterator iter = res . out . entries ( ) ;
rank: 681
score: 99.0823974609375
patch: Iterator iter = res . entries ( ) ; for (
rank: 681
score: 99.03175862630208
patch: Iterator iter = res . import . iterator ( ) ;
rank: 681
score: 99.0199483235677
patch: Iterator iter = res != null ? res . length ;
rank: 682
score: 99.0952899639423
patch: dim . entries = res . entries . iterator ( ) ;
rank: 682
score: 99.0940829190341
patch: Iterator iter = res . entries ( iterator ) ;
rank: 682
score: 99.04329427083333
patch: iter = res . size ( ) ;
rank: 682
score: 99.01987526633523
patch: Iterator iter = v . size ( ) ; ;
rank: 683
score: 99.15128267728366
patch: Iterator < Integer > iter = res . size ( ) ;
rank: 683
score: 99.10884915865384
patch: Iterator iter = res . entries . load ( res ) ;
rank: 683
score: 99.0930645282452
patch: entries = new Iterator ( res . size ( ) ) ;
rank: 683
score: 99.08784993489583
patch: int iter = res . value . size ( ) ;
rank: 683
score: 99.08079020182292
patch: Open CaMeL Map CaMeL Real CaMeL Vector res ; for (
rank: 683
score: 99.01962280273438
patch: Iterator iter = v [ ) . iterator ( ) ;
rank: 684
score: 99.11529900045956
patch: Iterator < double [ ] > iter = this . entries . iterator ( ) ;
rank: 684
score: 99.08974984975961
patch: Iterator iterator = res . entries . iterator ( ) ; ;
rank: 684
score: 99.08739124644886
patch: Iterator >> iter = res . iterator ( ) ;
rank: 684
score: 99.04158528645833
patch: if ( res == null ) { return null ; }
rank: 684
score: 99.02998046875
patch: Iterator iter = res . max ( ) ;
rank: 684
score: 99.01956176757812
patch: Iterator iter = v . add . iterator ( ) ;
rank: 685
score: 99.14755483774039
patch: super . entries = res . entries . iterator ( ) ;
rank: 685
score: 99.09088604266827
patch: Iterator iter = v [ 0 ] . entries ( ) ;
rank: 685
score: 99.08661358173077
patch: Iterator iter = res . arraycopy ( res . entries ) ;
rank: 685
score: 99.01947576349431
patch: Iterator iter = entries . size ( ) ; ;
rank: 686
score: 99.14655010516827
patch: Iterator < Iterator > iter = res . size ( ) ;
rank: 686
score: 99.10728102463942
patch: Iterator iter = res . iterator ( ) ; iterator else ;
rank: 686
score: 99.09034142127403
patch: if ( res != null ) res . ) return res ;
rank: 686
score: 99.08633188100961
patch: Iterator iter = res . entries ( ) ; case 1 :
rank: 686
score: 99.016845703125
patch: final Iterator iter = v . size ( ) ;
rank: 687
score: 99.14632161458333
patch: Iterator iter = 0 + res . iterator ( ) ;
rank: 687
score: 99.11341050091912
patch: Iterator < boolean < String > iter = res . entries . iterator ( ) ;
rank: 687
score: 99.10707444411058
patch: res . entries . iterator ( ) . iterator ( ) .
rank: 687
score: 99.0899991122159
patch: if ( res . size ( ) > 0 )
rank: 687
score: 99.0409444173177
patch: int [ ] entries = res . size ( ) ;
rank: 687
score: 99.02713012695312
patch: Iterator iter = res . size ( ) * $NUMBER$ ;
rank: 687
score: 99.0164794921875
patch: Iterator iter = res . [ 0 ] ;
rank: 688
score: 99.14608060396634
patch: final Object res = res . entries . get ( ) ;
rank: 688
score: 99.11329409950658
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries .
rank: 688
score: 99.08688589242789
patch: if ( res . entries . size ( ) == 0 )
rank: 688
score: 99.08614095052083
patch: List [ ] iter = res . entries ( ) ;
rank: 688
score: 99.07689412434895
patch: int iter = this . res . entries . length ;
rank: 688
score: 99.02693684895833
patch: Iterator iter = System . entries . iterator ( ) ;
rank: 688
score: 99.01375732421874
patch: Iterator iter = res . end ( ) ;
rank: 689
score: 99.1449725811298
patch: Iterator < Object > iterator = res . iterator ( ) ;
rank: 689
score: 99.11260986328125
patch: Iterator iter = res != null ? res . entries . iterator ( ) : null ;
rank: 689
score: 99.1070087139423
patch: Iterator iter = res . entries . append ( res ) ;
rank: 689
score: 99.08887657752403
patch: res . res . res . entries = res . entries ;
rank: 689
score: 99.08383413461539
patch: Iterator iter = res . list . iterator ( ) ; )
rank: 689
score: 99.07672119140625
patch: int iter = res . entries . length : 0 ;
rank: 689
score: 99.03908284505208
patch: Iterator iter = res . entries ) ;
rank: 689
score: 99.02669270833333
patch: Iterator iter = v [ ] . iterator ( ) ;
rank: 690
score: 99.14438100961539
patch: Iterator < Iterator > entries = res . iterator ( ) ;
rank: 690
score: 99.1124331825658
patch: for ( iter . has CaMeL Next ( ) ; ) { iter . advance ( ) ;
rank: 690
score: 99.1070048014323
patch: Iterator iter = entries . entries . entries ( ) ;
rank: 690
score: 99.0851542154948
patch: res . entries . add ( res . entries ) ;
rank: 690
score: 99.08191856971153
patch: Iterator < Exception > iter = res . iterator ( ) ;
rank: 690
score: 99.03872680664062
patch: double [ ] v = res . size ( ) ;
rank: 690
score: 99.0071133700284
patch: Iterator iter = res . add ( iter ) ;
rank: 691
score: 99.14409930889423
patch: final Object [ ] res = res . entries ( ) ;
rank: 691
score: 99.11164293791118
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) this ) . entries .
rank: 691
score: 99.08080037434895
patch: Iterator list = res . list . iterator ( ) ;
rank: 691
score: 99.07625325520833
patch: int [ ] entries = res . entries ( ) ;
rank: 691
score: 99.03851873224431
patch: Iterator iter = res . size iterator ( ) ;
rank: 691
score: 99.0037353515625
patch: Iterator iter = res . matches ( ) ;
rank: 692
score: 99.08713600852273
patch: Iterator iter = v . iterator ( ) ; )
rank: 692
score: 99.08397327769886
patch: Iterator iter = res . entries iter ( ) ;
rank: 692
score: 99.07456461588542
patch: Iterator iter = v . entries ( ) . length ;
rank: 692
score: 99.02412553267045
patch: it = res . entries . iterator ( ) ;
rank: 692
score: 99.00226384943181
patch: Iterator iter = res . Iterator ( this ) ;
rank: 693
score: 99.08642578125
patch: Iterator iter = res . iterator ( ) ; while ( ;
rank: 693
score: 99.0839374248798
patch: final int iterator = res . entries ( ) . length ;
rank: 694
score: 99.14308860085227
patch: Iterator iter = res . entries Iterator ( ) ;
rank: 694
score: 99.085205078125
patch: Iterator iterator = v . iterator . iterator ( ) ;
rank: 694
score: 99.0837871844952
patch: Iterator iter = res . entries . join ( res ) ;
rank: 695
score: 99.08502197265625
patch: Iterator iter = res . iterator ( ) ; null ;
rank: 695
score: 99.0833251953125
patch: Iterator list = res . entries ( ) ;
rank: 695
score: 99.07954915364583
patch: Iterator map = res . entries . iterator ( ) ;
rank: 695
score: 99.01953125
patch: Iterator iter = res . entries >> iterator ( ) ;
rank: 696
score: 99.1102294921875
patch: Iterator iter = res . iterator ( ) ; while (
rank: 696
score: 99.1039151278409
patch: Iterator iter = res . get ( 0 ) ;
rank: 696
score: 99.08319091796875
patch: List [ ] res = res . entries ( ) ;
rank: 696
score: 99.07938639322917
patch: while ( res . size ( ) > 0 ) {
rank: 696
score: 99.03305053710938
patch: Vector entries = res . entries . iterator ( ) ;
rank: 696
score: 98.99757080078125
patch: Iterator iter = entries . next ( ) ;
rank: 697
score: 99.1422870342548
patch: this . entries = res . entries . iterator ( ) ;
rank: 697
score: 99.10977172851562
patch: Iterator < int $STRING$ > iter = res . entries . iterator ( ) ;
rank: 697
score: 99.08455716646634
patch: Object res = res . entries . remove ( 0 ) ;
rank: 697
score: 99.01853434244792
patch: Iterator iter . has CaMeL Next ( ) ; - 1
rank: 697
score: 98.9974032315341
patch: Iterator iter = entries . iterator ( this ) ;
rank: 698
score: 99.14151000976562
patch: Iterator iter = 0 . size ( ) ;
rank: 698
score: 99.10964786305146
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries .
rank: 698
score: 99.103271484375
patch: / ) ; Iterator iter = res . iterator ( ) ;
rank: 698
score: 99.08412522536058
patch: res . entries = new Iterator [ v . length ] ;
rank: 698
score: 99.0818583170573
patch: int iter = res . list . iterator ( ) ;
rank: 698
score: 99.0699462890625
patch: Iterator iter = v . length . entries ( ) ;
rank: 698
score: 99.01812744140625
patch: Iterator iter = v . length ;
rank: 699
score: 99.10240589488636
patch: Iterator iter = res . iterator ( ) ; iter
rank: 699
score: 99.08115641276042
patch: Iterator iterator = res . value . iterator ( ) ;
rank: 699
score: 99.01793823242187
patch: Iterator iter : res . size ( ) ;
rank: 699
score: 98.99478759765626
patch: int iter = entries . size ( ) ;
rank: 700
score: 99.07973410866477
patch: final int iterator = res . iterator ( ) ;
rank: 700
score: 99.02628580729167
patch: Iterator iter = res . entries . advance ( ) ;
rank: 700
score: 98.99224298650569
patch: Iterator . has CaMeL Next ( ) ; ) {
rank: 701
score: 99.10906623391544
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( )
rank: 701
score: 99.08168381911058
patch: if ( v != null ) res . res = v ;
rank: 701
score: 99.07445271809895
patch: Iterator iter = res . iterator ( ) ( ) ;
rank: 701
score: 98.9917879971591
patch: Iterator Iterator iter = entries . iterator ( ) ;
rank: 702
score: 99.14041841947116
patch: Iterator < synchronized > iter = res . entries ( ) ;
rank: 702
score: 99.0805194561298
patch: if ( res != null ) res . res = ) ;
rank: 702
score: 99.06477864583333
patch: Iterator iter = chars . entries . iterator ( ) ;
rank: 702
score: 98.9912841796875
patch: Iterator iter = entries . Iterator ( ) ;
rank: 703
score: 99.13990196814903
patch: Iterator < Long > iter = res . iterator ( ) ;
rank: 703
score: 99.10764723557692
patch: if ( res instanceof Open CaMeL Map CaMeL Real CaMeL Vector )
rank: 703
score: 99.1011493389423
patch: Iterator < ? > iter = res . next ( ) ;
rank: 703
score: 99.08033165564903
patch: Iterator < Serializable > iter = res . iterator ( ) ;
rank: 703
score: 99.07886759440105
patch: Iterator value = res . entries . iterator ( ) ;
rank: 703
score: 99.0632832845052
patch: Vector iterator = res . entries . iterator ( ) ;
rank: 703
score: 99.01554565429687
patch: Iterator iter = Iterator . iterator ( ) ;
rank: 703
score: 98.98821466619319
patch: Iterator iter = res . iterator ( ) ; {
rank: 704
score: 99.1398174579327
patch: Iterator < Class > entries = res . entries ( ) ;
rank: 704
score: 99.10068766276042
patch: / iter Iterator iter = res . iterator ( ) ;
rank: 704
score: 99.0787353515625
patch: Iterator iter = res . entries . size ( ) ; else
rank: 704
score: 99.06986490885417
patch: Iterator iter = res . iterator ( ) ; ; ;
rank: 704
score: 99.06285511363636
patch: Iterator iter = res $NUMBER$ . iterator ( ) ;
rank: 704
score: 99.02554321289062
patch: Vector entries = res . entries . size ( ) ;
rank: 704
score: 98.98720481178977
patch: Iterator iter = v . iterator ( ) ; }
rank: 705
score: 99.10054524739583
patch: Iterator iter = res . entries . capacity ( ) ;
rank: 705
score: 99.07907104492188
patch: / * Iterator iter = res . entries ( ) ;
rank: 705
score: 99.06275431315105
patch: Iterator iter = res != null . entries ( ) ;
rank: 705
score: 98.9849365234375
patch: int res = res . entries . length ;
rank: 706
score: 99.10031127929688
patch: Iterator iter = res . entries . interrupt ( ) ;
rank: 706
score: 99.0762939453125
patch: this . res . entries . add ( res ) ;
rank: 706
score: 98.98238525390624
patch: Iterator iter = v . next ( ) ;
rank: 707
score: 99.105908203125
patch: Iterator iter [ 0 ] = res . entries . iterator ( ) ;
rank: 707
score: 99.09972205528847
patch: iter . iter = res . entries . iterator ( ) ;
rank: 707
score: 99.07744891826923
patch: if ( v != null && res . entries != null )
rank: 707
score: 99.07501831054688
patch: int iterator = res . iterator ( ) ;
rank: 707
score: 99.01377360026042
patch: Iterator iter = v . data . iterator ( ) ;
rank: 707
score: 98.9817227450284
patch: Iterator iter = entries . iterator ( 0 ) ;
rank: 708
score: 99.10560021033653
patch: Iterator iter = res . entries [ res . length ] ;
rank: 708
score: 99.06815592447917
patch: System . Iterator iter = res . iterator ( ) ;
rank: 708
score: 99.01998901367188
patch: int [ ] res = res . size ( ) ;
rank: 708
score: 98.9796371459961
patch: Iterator iter = entries . length ;
rank: 709
score: 99.13738544170673
patch: Iterator < String > iter : res . iterator ( ) ;
rank: 709
score: 99.10545247395834
patch: for ( final Open CaMeL Map CaMeL Real CaMeL Vector res : res )
rank: 709
score: 99.09824625651042
patch: iter = res . entries . iterator ( ) ; ;
rank: 709
score: 99.07595825195312
patch: List res = res . entries ( ) ;
rank: 709
score: 99.07440655048077
patch: Iterator iter = res [ null ] . entries ( ) ;
rank: 709
score: 99.060546875
patch: Iterator iter = res [ iter . length 0 ] ;
rank: 709
score: 99.01971435546875
patch: Vector res = res . entries . size ( ) ;
rank: 709
score: 98.97667347301136
patch: Iterator iter . has CaMeL Next ( ) ; &&
rank: 710
score: 99.137060546875
patch: int entries = res . size ( ) ;
rank: 710
score: 99.10543619791666
patch: Iterator < int + $NUMBER$ : res . entries . iterator ( ) ;
rank: 710
score: 99.0979755108173
patch: Iterator iter = res . iterator ( ) ; entries ++ ;
rank: 710
score: 99.07430326021634
patch: Iterator < int >> iter = res . entries ( ) ;
rank: 710
score: 99.01106400923295
patch: Iterator iter = res [ length - 1 ] ;
rank: 711
score: 99.13667436079545
patch: final Iterator iter = 0 . iterator ( ) ;
rank: 711
score: 99.073291015625
patch: res . entries . add ( res ) ;
rank: 711
score: 99.01849365234375
patch: Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 711
score: 98.97472034801136
patch: iter = entries . entries . iterator ( ) ;
rank: 712
score: 99.10460611979167
patch: Iterator < Integer > entries = res . entries . iterator ( ) ;
rank: 712
score: 99.09762573242188
patch: Iterator iter = sum . entries . iterator ( ) ;
rank: 712
score: 99.01844482421875
patch: List iter = res . size ( ) ;
rank: 713
score: 99.13373357599431
patch: final Iterator iter = res . iter ( ) ;
rank: 713
score: 99.10459271599265
patch: Iterator < float [ ] > iter = v . entries . iterator ( ) ;
rank: 713
score: 99.07156137319711
patch: try { Iterator iter = res . iterator ( ) ; ;
rank: 713
score: 99.07107883029514
patch: iterator = res . iterator ( ) ;
rank: 713
score: 98.973486328125
patch: int iter = v . size ( ) ;
rank: 714
score: 99.13367638221153
patch: Iterator = res . entries ( ) . iterator ( ) ;
rank: 714
score: 99.09691365559895
patch: Iterator iter = res . compare . iterator ( ) ;
rank: 714
score: 99.07057698567708
patch: int 1 = res . entries . size ( ) ;
rank: 714
score: 99.0651104266827
patch: Iterator iter = ( int ) list . iterator ( ) ;
rank: 714
score: 99.01713053385417
patch: Object [ ] res = res . size ( ) ;
rank: 714
score: 99.00792439778645
patch: Iterator iter = res > iter . iterator ( ) ;
rank: 714
score: 98.9695157137784
patch: Iterator iter = res . contains ( false ) ;
rank: 715
score: 99.10327911376953
patch: Iterator iter = res . entries . entries . iterator ( ) ; / *
rank: 715
score: 99.09676419771634
patch: / * iter = res . entries . iterator ( ) ;
rank: 715
score: 99.0644775390625
patch: res . set CaMeL Length ( 0 ) ;
rank: 715
score: 99.0560302734375
patch: res . set CaMeL Entry ( iter . value ) ;
rank: 715
score: 98.9695157137784
patch: Iterator iter = entries . size ( ) ; }
rank: 716
score: 99.13234299879808
patch: final Iterator iter = copy . entries . iterator ( ) ;
rank: 716
score: 99.09674072265625
patch: Iterator iter . iterator = res . iterator ( ) ;
rank: 716
score: 99.06938032670455
patch: res . entries = res . iterator ( ) ;
rank: 716
score: 99.0689697265625
patch: Iterator iter = res . iterator . Iterator ( ) ;
rank: 716
score: 99.0640117938702
patch: Iterator iter = ( int ) entries . iterator ( ) ;
rank: 717
score: 99.09609750600961
patch: Iterator < Entry > iter = res . iter ( ) ;
rank: 717
score: 99.06932576497395
patch: Iterator [ ] list = res . entries ( ) ;
rank: 717
score: 99.06785231370192
patch: res . res = res . get CaMeL Bytes ( ) ;
rank: 717
score: 99.06317608173077
patch: res . list = res . entries . iterator ( ) ;
rank: 717
score: 99.05419311523437
patch: Iterator iter = data . iterator ( ) ;
rank: 717
score: 99.01249186197917
patch: Iterator iter = ) . entries . iterator ( ) ;
rank: 717
score: 98.96604614257812
patch: if ( res . length > 1 ) {
rank: 718
score: 99.09579702524039
patch: Iterator . iter = res . entries . iterator ( ) ;
rank: 718
score: 99.06931374289773
patch: int < ] : res . entries ( ) ;
rank: 718
score: 99.06728891225961
patch: if ( res == null || res . entries != null )
rank: 718
score: 99.00552368164062
patch: Iterator iter = res > res . iterator ( ) ;
rank: 719
score: 99.12991098257211
patch: final Iterator iter = data . entries . iterator ( ) ;
rank: 719
score: 99.06709798177083
patch: List iter = res . list . entries ( ) ;
rank: 719
score: 99.011962890625
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = true ;
rank: 719
score: 98.96589799360795
patch: Iterator iter = v . size ( ) ; }
rank: 720
score: 99.1292724609375
patch: Iterator iter = res . entries ( ) ; else
rank: 720
score: 99.09535725911458
patch: Iterator iter = res . min . entries ( ) ;
rank: 720
score: 99.06800426136364
patch: Iterator < String : res . iterator ( ) ;
rank: 720
score: 99.06663161057692
patch: Iterator iter = res . iterator ( ) ; for ( )
rank: 720
score: 98.9654541015625
patch: Iterator iter = res . size ( ) ; {
rank: 721
score: 99.0949237530048
patch: Iterator iter ( res . iter . iterator ( ) ) ;
rank: 721
score: 99.06634051983173
patch: Iterator < Number > iter = res . entries ( ) ;
rank: 721
score: 98.96462180397727
patch: else res . set CaMeL Entry ( $STRING$ ) ;
rank: 722
score: 99.09858972886029
patch: Iterator < int , String > iter = res . entries . iterator ( ) ;
rank: 722
score: 99.0942852313702
patch: Iterator iter = res . next ( ) . ( ) ;
rank: 722
score: 99.06622314453125
patch: List iter = res . list . iterator ( ) ;
rank: 722
score: 99.05819702148438
patch: long size = res . entries . size ( ) ;
rank: 722
score: 99.05164591471355
patch: Iterator iter = new Object [ v . length ] ;
rank: 722
score: 99.01095581054688
patch: for ( Iterator iter = v . size ( ) ;
rank: 722
score: 99.00321451822917
patch: Iterator iter = res . to CaMeL Array ( ) .
rank: 722
score: 98.9641446200284
patch: Iterator iter = res ) . size ( ) ;
rank: 723
score: 99.12787334735577
patch: Iterator < int > entries = res . iterator ( ) ;
rank: 723
score: 99.0675537109375
patch: Iterator * ] res . iterator ( ) ;
rank: 723
score: 99.06619601779514
patch: if ( res . entries != null )
rank: 723
score: 99.04995727539062
patch: Iterator iter = new int [ v . length ] ;
rank: 724
score: 99.09545084635417
patch: Iterator < String >= iter = res . entries . iterator ( ) ;
rank: 724
score: 99.0928067294034
patch: Iterator iter = res . get > ( ) ;
rank: 724
score: 99.06751505533855
patch: Iterator iter = res . entries . start ( ) ;
rank: 724
score: 99.06605834960938
patch: Set res = res . entries ( ) ;
rank: 724
score: 99.00194202769886
patch: Iterator iter = ! res . size ( ) ;
rank: 724
score: 98.96115112304688
patch: int v = res . entries . length ;
rank: 725
score: 99.06744995117188
patch: Iterator [ ] res . iterator ( ) ;
rank: 725
score: 99.06114705403645
patch: if ( res . length != 0 ) return res ;
rank: 725
score: 99.00103759765625
patch: Iterator iter = res . length : res . length ;
rank: 725
score: 98.96076202392578
patch: Iterator iter = res . get CaMeL
rank: 726
score: 99.0922100360577
patch: Iterator iter = ( > ) res . entries ( ) ;
rank: 726
score: 99.06645063920455
patch: Iterator iter = res . entries entries ( ) ;
rank: 726
score: 99.060400390625
patch: Collection res = res . clone ( ) ;
rank: 726
score: 99.0478182705966
patch: Iterator iter = res [ iter . length ] ;
rank: 726
score: 98.96061567826705
patch: final Iterator iter = res . read ( ) ;
rank: 727
score: 99.1270751953125
patch: Iterator < int * : res . iterator ( ) ;
rank: 727
score: 99.0918680826823
patch: Iterator iter = res . entries . matches ( ) ;
rank: 727
score: 99.06596235795455
patch: Iterator iter = res . iterator ( $NUMBER$ ) ;
rank: 727
score: 99.0586446126302
patch: List res = res . entries . list ( ) ;
rank: 727
score: 99.0562744140625
patch: switch ( res . size ( ) ) { case 1 :
rank: 727
score: 99.04719848632813
patch: res . set CaMeL Entry ( iter ) ;
rank: 727
score: 99.00034586588542
patch: Iterator iter = res . class . iter ( ) ;
rank: 727
score: 98.96038208007812
patch: Iterator iter = res . [ 1 ] ;
rank: 728
score: 99.0917635830966
patch: Iterator iter = new res . iterator ( ) ;
rank: 728
score: 99.04693603515625
patch: Iterator iter = res . length + v . length ;
rank: 729
score: 99.1237323467548
patch: if ( res != null ) res . close ( ) ;
rank: 729
score: 99.06297810872395
patch: / * ] iter = res . entries ( ) ;
rank: 729
score: 98.99851481119792
patch: else { Iterator iter = res . size ( ) ;
rank: 729
score: 98.95766379616477
patch: Iterator iter = entries . iterator ( ) ; {
rank: 730
score: 99.09067007211539
patch: Iterator iter = this . res . iterator ( ) ; ;
rank: 730
score: 99.05694580078125
patch: if ( res . res == null ) return res ;
rank: 730
score: 99.05257568359374
patch: if ( res == null ) return null ;
rank: 730
score: 98.95632102272727
patch: for ( ) { iter . advance ( ) ;
rank: 731
score: 99.12164776141827
patch: final int [ ] iter = res . entries ( ) ;
rank: 731
score: 99.0509033203125
patch: m iter = res . entries . iterator ( ) ;
rank: 731
score: 98.99762517755681
patch: Iterator iter = res . iterator ( ) 1 ;
rank: 731
score: 98.95485617897727
patch: Iterator iter = res . contains ( $NUMBER$ ) ;
rank: 732
score: 99.08970133463542
patch: entries . Iterator iter = res . iterator ( ) ;
rank: 732
score: 99.06201171875
patch: this . res . entries = res . entries ;
rank: 732
score: 99.05653889973958
patch: res . Iterator iter = v . iterator ( ) ;
rank: 732
score: 99.0437723795573
patch: Iterator iter = this . res . entries . length ;
rank: 732
score: 99.00290934244792
patch: List entries = res . entries . iterator ( ) ;
rank: 732
score: 98.99720458984375
patch: Iterator iter = res . Enum ( ) ;
rank: 733
score: 99.0875244140625
patch: Iterator iter . = res . iterator ( ) ;
rank: 733
score: 99.0619229403409
patch: Iterator iter = res . entries ( ) . ;
rank: 733
score: 99.0557528409091
patch: res . res . entries = res . entries ;
rank: 733
score: 99.04227701822917
patch: Iterator iter = new Iterator ( v . length ) ;
rank: 733
score: 99.00203450520833
patch: Object [ ] v = res . size ( ) ;
rank: 733
score: 98.99666341145833
patch: Iterator iter = res != null ? res . entries ;
rank: 733
score: 98.95213012695312
patch: Iterator iter = res . add ( ) ;
rank: 734
score: 99.08439127604167
patch: Iterator entries = res . entries . iter ( ) ;
rank: 734
score: 99.05572509765625
patch: Collection entries = res . entries . iterator ( ) ;
rank: 734
score: 99.04451127485795
patch: if ( res . size ( ) == 0 )
rank: 734
score: 99.04160378196023
patch: Iterator iter = res [ v . length ] ;
rank: 734
score: 98.9516268643466
patch: Iterator ++ res . has CaMeL Next ( ) ;
rank: 735
score: 99.08406205610795
patch: Iterator iter = res . iterator ( ) ; final
rank: 735
score: 99.04066975911458
patch: Iterator iter = $NUMBER$ . entries . iterator ( ) ;
rank: 735
score: 98.98790486653645
patch: Iterator iter = res != null : res . length ;
rank: 735
score: 98.9497403231534
patch: Iterator iter = res . contains ( $STRING$ ) ;
rank: 736
score: 99.0836690266927
patch: Enumeration iter = res . entries . entries ( ) ;
rank: 736
score: 99.04013061523438
patch: Iterator iter = iter . iterator ( ) ; for (
rank: 737
score: 99.0834248860677
patch: Iterator iter = res . get . iter ( ) ;
rank: 737
score: 99.05942789713542
patch: long iter = res . entries . size ( ) ;
rank: 737
score: 99.04386596679687
patch: Iterator list = res . iterator ( ) ;
rank: 737
score: 98.99758911132812
patch: check CaMeL Vector CaMeL Dimensions ( res ) ;
rank: 737
score: 98.98656005859375
patch: Iterator iter = res [ - 1 ] ;
rank: 737
score: 98.94768676757812
patch: Iterator iter = res . capacity ( ) ;
rank: 738
score: 99.0845196063702
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector != null ;
rank: 738
score: 99.05886840820312
patch: short iter = res . entries . iterator ( ) ;
rank: 738
score: 99.0399169921875
patch: if ( iter . has CaMeL Next ( ) )
rank: 738
score: 98.98274061414931
patch: Iterator iter = v [ 0 ] ;
rank: 738
score: 98.94740600585938
patch: List iter = entries . iterator ( ) ;
rank: 739
score: 99.08194986979167
patch: Iterator iter = $STRING$ . entries . iter ( ) ;
rank: 739
score: 99.05881754557292
patch: Iterator * ] entries = res . iterator ( ) ;
rank: 739
score: 99.05213419596355
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;
rank: 739
score: 99.0432637532552
patch: do { Iterator iter = res . iterator ( ) ;
rank: 739
score: 98.9810791015625
patch: Iterator iter = v [ size ] ;
rank: 739
score: 98.94709916548295
patch: Iterator iter = v . . iterator ( ) ;
rank: 740
score: 99.08401254507211
patch: Iterator iter = res . entries [ iter . length ] ;
rank: 740
score: 99.05842729048295
patch: final Iterator entries = res . iterator ( ) ;
rank: 740
score: 99.05137125651042
patch: Iterator iter = res . iterator ( ) ; else {
rank: 740
score: 99.0428133877841
patch: Iterator iter $NUMBER$ = res . iterator ( ) ;
rank: 740
score: 99.03842163085938
patch: int ( iter . has CaMeL Next ( ) ) {
rank: 740
score: 98.9779385653409
patch: Iterator iter = res . size ( 1 ) ;
rank: 741
score: 99.11603252704327
patch: final int res . size = res . size ( ) ;
rank: 741
score: 99.05051491477273
patch: Iterator iter = res . entries ( entries ) ;
rank: 741
score: 99.04219563802083
patch: Iterator iter = get . entries . iterator ( ) ;
rank: 741
score: 99.03778076171875
patch: Iterator iter = directory . entries . iterator ( ) ;
rank: 741
score: 98.99258422851562
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = res ;
rank: 741
score: 98.94575639204545
patch: Iterator iter = res . $NUMBER$ iterator ( ) ;
rank: 742
score: 99.11533425071023
patch: final int size = res . size ( ) ;
rank: 742
score: 99.0782803622159
patch: Iterator iter = res . parse ( res ) ;
rank: 742
score: 99.03777521306819
patch: Iterator iter = res . entries [ 0 ] ;
rank: 742
score: 98.9755526455966
patch: Iterator iter = res [ 0 ] . entries ;
rank: 742
score: 98.94410289417614
patch: iterator = res . entries . size ( ) ;
rank: 743
score: 99.05667724609376
patch: Enumeration iter = res . iterator ( ) ;
rank: 743
score: 99.04083251953125
patch: Iterator iter = map . list . iterator ( ) ;
rank: 743
score: 98.97463156960227
patch: for ( if ( res . length > 0 )
rank: 743
score: 98.94408069957386
patch: Iterator iter = res . visit ( this ) ;
rank: 744
score: 99.11173502604167
patch: Iterator iter = res . iterator ( ) - $NUMBER$ ;
rank: 744
score: 99.077392578125
patch: Iterator iter = res . iter ( ) ; ;
rank: 744
score: 99.03553263346355
patch: Object res = res . get CaMeL Entry ( ) ;
rank: 744
score: 98.99022216796875
patch: Iterator iter = res . entries . FALSE ;
rank: 744
score: 98.97015380859375
patch: Iterator iter = v . clone ( ) ;
rank: 744
score: 98.94340209960937
patch: Iterator iter = res . split ( ) ;
rank: 745
score: 99.07700602213542
patch: Iterator iter = res . iterator ( ) ; ; /
rank: 745
score: 99.05562337239583
patch: Iterator iter = res . entries ( - 1 ) ;
rank: 745
score: 99.03518676757812
patch: Iterator iter = res != null . size ( ) ;
rank: 745
score: 98.99007568359374
patch: int value = v . length ( ) ;
rank: 745
score: 98.96943495008681
patch: Iterator iter = res [ 1 ] ;
rank: 745
score: 98.94226684570313
patch: if ( v . length > 1 ) {
rank: 746
score: 99.11082874644886
patch: final int entries = res . size ( ) ;
rank: 746
score: 99.05550130208333
patch: res . Iterator iter = res . entries ( ) ;
rank: 746
score: 99.03424072265625
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = false ;
rank: 746
score: 98.9419677734375
patch: Iterator iter = res . load ( ) ;
rank: 747
score: 99.1074727376302
patch: String res = res . to CaMeL String ( ) ;
rank: 747
score: 99.07140096028645
patch: iter . Iterator iter = res . iterator ( ) ;
rank: 747
score: 99.05408732096355
patch: Collection [ ] entries = res . entries ( ) ;
rank: 747
score: 99.03379128196023
patch: Iterator ( res . entries . iterator ( ) )
rank: 747
score: 98.94086248224431
patch: Iterator iter = res . contains ( true ) ;
rank: 748
score: 99.07045491536458
patch: Iterator iter = res . entries . reverse ( ) ;
rank: 748
score: 99.05333455403645
patch: Iterator < * Integer : res . iterator ( ) ;
rank: 748
score: 99.03900701349431
patch: if ( res . length != res . length )
rank: 748
score: 99.037109375
patch: Iterator iter = res . list . Iterator ( ) ;
rank: 748
score: 99.03341674804688
patch: int iter = res . length : v . length ;
rank: 748
score: 98.96122602982955
patch: Iterator iter ( res . size ( ) ) ;
rank: 749
score: 99.1044413248698
patch: Iterator iter = $NUMBER$ + res . iterator ( ) ;
rank: 749
score: 99.07765549879808
patch: for ( ) { res . set CaMeL Entry ( ) ;
rank: 749
score: 99.05221557617188
patch: Iterator iter = res . map . entries ( ) ;
rank: 749
score: 99.03636585582386
patch: Iterator iter = v . iterator ( ) ; else
rank: 750
score: 99.1034647623698
patch: Iterator iter = $NUMBER$ : res . iterator ( ) ;
rank: 750
score: 99.0765380859375
patch: List iterator = res . entries . iterator ( ) ;
rank: 750
score: 99.04942737926136
patch: Iterator iter = res . . entries ( ) ;
rank: 750
score: 99.03032892400569
patch: Iterator iter = ebe CaMeL Multiply ( this ) ;
rank: 750
score: 98.9786709872159
patch: Iterator iter = res . entries . iterator ++ ;
rank: 750
score: 98.93894264914773
patch: Iterator iter ++ = res . iterator ( ) ;
rank: 751
score: 99.03281471946023
patch: res . res = res . entries ( ) ;
rank: 751
score: 99.03021240234375
patch: int length = iter . has CaMeL Next ( ) ;
rank: 751
score: 98.95635375976562
patch: Iterator iter |= res . size ( ) ;
rank: 751
score: 98.93867631392045
patch: Iterator iter = res . contains ( 1 ) ;
rank: 752
score: 99.0736416903409
patch: Iterator iter = . entries . iterator ( ) ;
rank: 752
score: 99.03643243963069
patch: size = res . entries . size ( ) ;
rank: 752
score: 98.955810546875
patch: Iterator iter = ! entries . iterator ( ) ;
rank: 752
score: 98.93779296875
patch: Iterator iter = res . entries . has CaMeL
rank: 753
score: 99.07212477463942
patch: Iterator iter = res . get CaMeL Entry ( iter ) ;
rank: 753
score: 99.06500244140625
patch: / ; Iterator iter = res . entries ( ) ;
rank: 753
score: 98.9744384765625
patch: Vector iter = res . size ( ) ;
rank: 753
score: 98.9542236328125
patch: Iterator iter = res . size ( 0 ) ;
rank: 753
score: 98.93524724786931
patch: Iterator iter = res . matches ( 0 ) ;
rank: 754
score: 99.06338500976562
patch: Iterator iter = res . close . iterator ( ) ;
rank: 754
score: 99.04670854048295
patch: Iterator iter = res . entries ( $NUMBER$ ) ;
rank: 754
score: 99.03517659505208
patch: Disposer . Iterator iter = res . iterator ( ) ;
rank: 754
score: 99.0310770670573
patch: Collection res = res . get . entries ( ) ;
rank: 754
score: 99.02799849076705
patch: iter = v . entries . iterator ( ) ;
rank: 754
score: 98.9541748046875
patch: List iter = res . iterator ( ) ;
rank: 754
score: 98.93448486328126
patch: int entries = res . entries . length ;
rank: 755
score: 99.03426106770833
patch: result = res . entries . get ( 0 ) ;
rank: 755
score: 98.93408203125
patch: Iterator iter = res . intern ( ) ;
rank: 756
score: 99.09822591145833
patch: Iterator iter = res . size ( ) - 1 ;
rank: 756
score: 99.0614901455966
patch: Iterator iter = res . contains ( res ) ;
rank: 756
score: 99.02942504882813
patch: Object res = res . clone ( ) ;
rank: 756
score: 98.95053100585938
patch: Iterator iter = iter . next ( ) ;
rank: 756
score: 98.93405983664773
patch: Iterator iter = res . entries . iterator 1 ;
rank: 757
score: 99.0286865234375
patch: List res = res . list . entries ( ) ;
rank: 757
score: 99.02051890980114
patch: int Iterator iter = res . iterator ( ) ;
rank: 757
score: 98.93280584161931
patch: iter . has CaMeL Next ( ) ; ) {
rank: 758
score: 99.06050618489583
patch: Iterator iter ; iter = res . iterator ( ) ;
rank: 758
score: 99.03232828776042
patch: Iterator iter = data . list . iterator ( ) ;
rank: 758
score: 98.96569213867187
patch: Iterator iter = res . contains ( this )
rank: 758
score: 98.93273315429687
patch: Iterator iter = v . entries . length ;
rank: 759
score: 99.06007690429688
patch: Iterator iter = $STRING$ . iter ( ) ;
rank: 759
score: 99.04029337565105
patch: int iterator = res . entries ( ) . length ;
rank: 759
score: 99.02815755208333
patch: if ( res . length > 0 ) return res ;
rank: 759
score: 98.9320956143466
patch: Iterator iter = res . entries . length ; ;
rank: 760
score: 99.09440104166667
patch: Iterator iter = 0 + res . size ( ) ;
rank: 760
score: 99.0677998860677
patch: Iterator iter ? res . entries . iterator ( ) ;
rank: 760
score: 99.05975341796875
patch: Iterator iter = res . iterator ( ) ; iterator }
rank: 760
score: 99.0399169921875
patch: res . entries = this . res . entries ;
rank: 760
score: 99.02803548177083
patch: Collection entries = res . entries . entries ( ) ;
rank: 760
score: 98.94138793945312
patch: Iterator iter = Iterator . size ( ) ;
rank: 760
score: 98.93095703125
patch: Iterator iter = res . entries . end ;
rank: 761
score: 99.05969848632813
patch: Iterator iter = res . get ( ) ;
rank: 761
score: 99.03852982954545
patch: Iterator iter = res . entries = ( ) ;
rank: 761
score: 99.02743530273438
patch: Object res = res . entries . next ( ) ;
rank: 762
score: 99.06543986002605
patch: Iterator iter -= res . entries . iterator ( ) ;
rank: 762
score: 99.05911254882812
patch: Iterator iter = 0 ;
rank: 762
score: 99.03736461292614
patch: iter . iterator ( ) . iterator ( ) ;
rank: 762
score: 99.02625528971355
patch: double iter = res . entries . size ( ) ;
rank: 762
score: 99.007275390625
patch: int iter = iter . iterator ( ) ;
rank: 762
score: 98.95448996803977
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = new
rank: 762
score: 98.9287841796875
patch: Iterator iter = res . put ( ) ;
rank: 763
score: 99.02039591471355
patch: int res = res . entries . size ( ) ;
rank: 763
score: 98.9264803799716
patch: for ( double [ ] v : res ) {
rank: 764
score: 99.03612670898437
patch: int iter = entries . iterator ( ) ;
rank: 764
score: 99.01944580078126
patch: int size = res . entries . length ;
rank: 764
score: 99.00414428710937
patch: res . set CaMeL Entry ( this ) ;
rank: 764
score: 98.952880859375
patch: Iterator iter = res . read ( this ) ;
rank: 764
score: 98.92561479048295
patch: Iterator iter = res . contains ( null ) ;
rank: 765
score: 99.05728149414062
patch: Iterator iter = res . entries . add ( ) ;
rank: 765
score: 99.03391723632812
patch: Collection entries = res . entries ( ) ;
rank: 765
score: 99.02206420898438
patch: Set entries = res . get CaMeL Entries ( ) ;
rank: 765
score: 99.00278930664062
patch: int length = res . entries . length ;
rank: 765
score: 98.93809925426136
patch: Iterator iter = res . add ( v ) ;
rank: 766
score: 99.08841959635417
patch: final Iterator iter = res . iterator ( ) ; else
rank: 766
score: 99.0570576985677
patch: Iterator iter = res . iterator ( ) ; else ;
rank: 766
score: 99.02183948863636
patch: Iterator iter = v . entries ( ) ; ;
rank: 767
score: 99.03321329752605
patch: Iterator iter = res . entries ( ) ; ) {
rank: 767
score: 99.02035522460938
patch: Object [ ] res = res . clone ( ) ;
rank: 767
score: 99.01344807942708
patch: Iterator iter = res = v . iterator ( ) ;
rank: 767
score: 98.9973876953125
patch: Iterator iter = $NUMBER$ . iterator ( ) ;
rank: 768
score: 99.08517456054688
patch: int res . size = res . size ( ) ;
rank: 768
score: 99.0629413311298
patch: Iterator < iter > iter = res . iterator ( ) ;
rank: 768
score: 99.05657958984375
patch: Iterator iter = res . get != null ;
rank: 768
score: 99.020263671875
patch: Object res = res . entries . iterator ( ) ;
rank: 768
score: 98.9933749112216
patch: Iterator iter = res . entries size ( ) ;
rank: 768
score: 98.93316095525569
patch: Iterator iter $NUMBER$ = res . size ( ) ;
rank: 768
score: 98.923046875
patch: Iterator iter = res . interrupt ( ) ;
rank: 769
score: 99.02988503196023
patch: Iterator iter = res . entries ( ) ; }
rank: 769
score: 99.01336669921875
patch: List list = res . entries . size ( ) ;
rank: 769
score: 98.99235534667969
patch: int length = res . length ;
rank: 769
score: 98.94615589488636
patch: Iterator iter = res . put ( this ) ;
rank: 769
score: 98.91986083984375
patch: int iter = res . length . length ;
rank: 770
score: 99.07879638671875
patch: Iterator iter = res . size ( ) - $NUMBER$ ;
rank: 770
score: 99.05435180664062
patch: Iterator iter = res . entries ( ) ; ) ;
rank: 770
score: 99.02815551757813
patch: Iterator res = res . entries ( ) ;
rank: 770
score: 99.01868693033855
patch: if ( v . length > 0 ) return res ;
rank: 770
score: 99.0100809733073
patch: Iterator iter = this . iterator . iterator ( ) ;
rank: 770
score: 98.99129638671874
patch: Iterator iter = size . entries ( ) ;
rank: 770
score: 98.9393310546875
patch: Iterator iter = res . stop ( ) ;
rank: 771
score: 99.05369059244792
patch: Iterator iter = res . iterator ( ) ; continue ;
rank: 771
score: 99.02784312855114
patch: final int iter = res . entries . length ;
rank: 771
score: 99.01852416992188
patch: Iterator iter = res . iterator ( ) + 1 ;
rank: 771
score: 98.99116821289063
patch: Iterator iter = 1 . iterator ( ) ;
rank: 771
score: 98.93778852982955
patch: Iterator iter advance = res . size ( ) ;
rank: 771
score: 98.92960981889205
patch: Iterator iter = res . read ( 0 ) ;
rank: 772
score: 99.0057705965909
patch: list = res . entries . iterator ( ) ;
rank: 772
score: 98.9292325106534
patch: Iterator iter 1 = res . size ( ) ;
rank: 772
score: 98.91829681396484
patch: int iter = v . length ;
rank: 773
score: 99.05990835336539
patch: Iterator iter = res . entries . entries [ 0 ] ;
rank: 773
score: 99.02588907877605
patch: Iterator iter = res . entries ( ) ; else {
rank: 773
score: 99.0052823153409
patch: iter = res . list . size ( ) ;
rank: 773
score: 98.92866821289063
patch: Iterator iter += res . iterator ( ) ;
rank: 774
score: 99.02480246803977
patch: int < ] : res . iterator ( ) ;
rank: 774
score: 99.01732288707386
patch: Iterator iter = res . entries ( ) ; )
rank: 774
score: 98.93553577769886
patch: Iterator iter = res . length . ( ) ;
rank: 774
score: 98.92771402994792
patch: Iterator iter = res [ length ] ;
rank: 774
score: 98.91497192382812
patch: Iterator res = v . iterator ( ) ;
rank: 775
score: 99.05019124348958
patch: try ; Iterator iter = res . iterator ( ) ;
rank: 775
score: 99.00277709960938
patch: Iterator iter = new Iterator ( res . entries ) ;
rank: 775
score: 98.98380737304687
patch: Iterator iter = iterator . entries ( ) ;
rank: 775
score: 98.92980346679687
patch: Iterator iter = res . entries . 0 ;
rank: 775
score: 98.92685768821023
patch: int Iterator iter = res . size ( ) ;
rank: 775
score: 98.91485595703125
patch: int iter = res . length ( ) ;
rank: 776
score: 99.02384033203126
patch: List entries = res . entries ( ) ;
rank: 776
score: 99.00223795572917
patch: if ( res . length == 0 ) return null ;
rank: 776
score: 98.91131591796875
patch: Iterator iter = res . min ( ) ;
rank: 777
score: 99.01645914713542
patch: res ; Iterator iter = res . iterator ( ) ;
rank: 777
score: 98.98347611860795
patch: Iterator iter = res . length [ 0 ] ;
rank: 777
score: 98.92493785511364
patch: Iterator iter 1 = res . iterator ( ) ;
rank: 777
score: 98.91044311523437
patch: Iterator iter = key . iterator ( ) ;
rank: 778
score: 99.06974487304687
patch: if ( res != null ) throw null ;
rank: 778
score: 99.0475565592448
patch: Iterator iter = $STRING$ . entries . entries ( ) ;
rank: 778
score: 99.01641845703125
patch: res . res = res . entries [ 0 ] ;
rank: 778
score: 98.98282470703126
patch: int iter = v . entries . length ;
rank: 778
score: 98.9244140625
patch: Iterator iter >= res . iterator ( ) ;
rank: 778
score: 98.91031494140626
patch: Iterator iter = res . entries . false ;
rank: 779
score: 99.04664306640625
patch: Iterator iter = $STRING$ . entries ( ) ;
rank: 779
score: 98.90958862304687
patch: int res = res . size ( ) ;
rank: 780
score: 99.0583965594952
patch: Iterator < while . has CaMeL Next ( ) ; ) {
rank: 780
score: 99.04616292317708
patch: Iterator iter = res . get $NUMBER$ iterator ( ) ;
rank: 780
score: 99.01917724609375
patch: Iterator iter = out . iterator ( ) ;
rank: 780
score: 98.98095703125
patch: Iterator iter = new Object . iterator ( ) ;
rank: 780
score: 98.9197665127841
patch: Iterator iter = res . is CaMeL Array ( )
rank: 780
score: 98.90927124023438
patch: iter . advance ( v . length ) ;
rank: 781
score: 99.0445048014323
patch: Iterator iter . iter = res . entries ( ) ;
rank: 781
score: 99.01552327473958
patch: Collection res = res . get CaMeL Classes ( ) ;
rank: 781
score: 98.9227294921875
patch: Iterator iter = this . size ( ) ;
rank: 781
score: 98.91923217773437
patch: Iterator iter = v . length ( ) ;
rank: 781
score: 98.90490112304687
patch: Iterator iter = this . entries . length ;
rank: 782
score: 99.05624624399039
patch: Iterator while ( res . has CaMeL Next ( ) ) {
rank: 782
score: 99.04352361505681
patch: Iterator iter entries = res . entries ( ) ;
rank: 782
score: 99.01826171875
patch: Iterator iter = value . iterator ( ) ;
rank: 782
score: 99.01442464192708
patch: Iterator iter = v = res . iterator ( ) ;
rank: 782
score: 99.0003662109375
patch: Iterator iter 0 = res . iterator ( ) ;
rank: 782
score: 98.97817993164062
patch: Iterator iter = name . iterator ( ) ;
rank: 782
score: 98.92267400568181
patch: Iterator iter = ! v . iterator ( ) ;
rank: 783
score: 99.06599934895833
patch: Iterator iter = res . iterator . size ( ) ;
rank: 783
score: 99.04321899414063
patch: iter iter = res . iterator ( ) ;
rank: 783
score: 99.0177334872159
patch: iter = res . map . iterator ( ) ;
rank: 783
score: 99.01387532552083
patch: Iterator iter = v . ) . iterator ( ) ;
rank: 783
score: 98.97685546875
patch: Iterator iter = in . entries ( ) ;
rank: 783
score: 98.91725463867188
patch: Iterator iter = res . size ( ) )
rank: 783
score: 98.90419311523438
patch: Iterator res = v . size ( ) ;
rank: 784
score: 99.06591186523437
patch: Iterator iter = 0 . iter ( ) ;
rank: 784
score: 99.0128682454427
patch: if ( res . res != null ) return res ;
rank: 784
score: 98.97538618607955
patch: Iterator iter = ebe CaMeL Multiply ( iter ) ;
rank: 784
score: 98.90335083007812
patch: Iterator iter = res . get CaMeL Real CaMeL
rank: 785
score: 99.05354817708333
patch: Iterator iter > iter = res . iterator ( ) ;
rank: 785
score: 99.01585693359375
patch: Iterator iter = copy . iterator ( ) ;
rank: 785
score: 98.9930752840909
patch: Iterator iter = list . iterator ( ) ; ;
rank: 785
score: 98.973291015625
patch: int iter = v . iterator ( ) ;
rank: 786
score: 98.91541637073864
patch: Iterator iter = res . split ( 0 ) ;
rank: 787
score: 99.01561279296875
patch: Iterator iter : res . entries ( ) ;
rank: 787
score: 98.98984596946023
patch: result = res . entries . iterator ( ) ;
rank: 787
score: 98.91466674804687
patch: Iterator iter = res . length * 1 ;
rank: 787
score: 98.91193237304688
patch: List res = res . size ( ) ;
rank: 787
score: 98.89829508463542
patch: Iterator iter = res . ( ) ;
rank: 788
score: 99.01429443359375
patch: Iterator iter = out . entries ( ) ;
rank: 788
score: 99.00181274414062
patch: if ( v != null ) return res ;
rank: 788
score: 98.9144775390625
patch: Iterator iter = res . entries . iterator ;
rank: 788
score: 98.89683227539062
patch: Iterator iter = entries . entries . length ;
rank: 789
score: 99.06144575639205
patch: final Iterator iterator = res . iterator ( ) ;
rank: 789
score: 99.01295055042614
patch: Iterator < ] > iter . iterator ( ) ;
rank: 789
score: 99.00119357638889
patch: Iterator iter = res . entries ( ;
rank: 789
score: 98.91422895951705
patch: Iterator iter = v [ length - $NUMBER$ ] ;
rank: 789
score: 98.91073608398438
patch: int value = res . size ( ) ;
rank: 789
score: 98.893212890625
patch: Iterator iter = res . delete ( ) ;
rank: 790
score: 99.0611572265625
patch: res . iterator ( ) . add ( res ) ;
rank: 790
score: 99.04720365084134
patch: for ( while ( iter . has CaMeL Next ( ) )
rank: 790
score: 99.03893025716145
patch: Iterator iter = super . entries . iter ( ) ;
rank: 790
score: 98.99896795099431
patch: entries = res . entries . size ( ) ;
rank: 790
score: 98.96788330078125
patch: res . set CaMeL Entry ( v ) ;
rank: 790
score: 98.90608354048295
patch: Iterator iter = res . format ( this ) ;
rank: 790
score: 98.8931396484375
patch: Iterator iterator = entries . iterator ( ) ;
rank: 791
score: 99.05872691761364
patch: res . iterator = res . iterator ( ) ;
rank: 791
score: 99.04562612680289
patch: Iterator < iter . has CaMeL Next ( ) ; ) {
rank: 791
score: 99.03848266601562
patch: Iterator iter = res . entries . end ( ) ;
rank: 791
score: 99.0125399502841
patch: Iterator < $STRING$ : res . iterator ( ) ;
rank: 791
score: 98.99861283735795
patch: Iterator iter = v . entries ( res ) ;
rank: 791
score: 98.98467462713069
patch: while ( res . size ( ) > 0 )
rank: 791
score: 98.96748490767045
patch: iter = iter . has CaMeL Next ( ) ;
rank: 791
score: 98.90570623224431
patch: entries = new Real CaMeL Vector ( this ) ;
rank: 791
score: 98.891015625
patch: Iterator iter = res . entries . true ;
rank: 792
score: 99.03809611002605
patch: Iter iter = res . entries . iterator ( ) ;
rank: 792
score: 99.01174094460227
patch: Iterator < String > iter . iterator ( ) ;
rank: 792
score: 98.90531005859376
patch: Iterator iter = res . wait ( ) ;
rank: 793
score: 99.0110751065341
patch: final int entries = res . entries ( ) ;
rank: 794
score: 99.01088256835938
patch: Vector entries = res . entries ( ) ;
rank: 794
score: 98.995556640625
patch: if ( v == null ) return res ;
rank: 794
score: 98.90507507324219
patch: Iterator iter = res . entries )
rank: 794
score: 98.88975830078125
patch: Iterator iter = res . entries . max ;
rank: 795
score: 99.0356778231534
patch: Iterator iter entries = res . iterator ( ) ;
rank: 795
score: 99.01079450334821
patch: res . iterator ( ) ;
rank: 795
score: 98.99500621448864
patch: Iterator iter = res . iterator ( ( ) ;
rank: 795
score: 98.90484619140625
patch: Iterator iter = iter . remove ( ) ;
rank: 795
score: 98.8871337890625
patch: Iterator iter = entries . read ( ) ;
rank: 796
score: 99.0348233309659
patch: res . iterator ( ) . iterator ( ) .
rank: 796
score: 98.9929532137784
patch: Iterator < res . entries . iterator ( ) ;
rank: 796
score: 98.9745205965909
patch: switch ( res . get CaMeL Type ( ) )
rank: 796
score: 98.95973899147727
patch: Iterator iter = ebe CaMeL Multiply ( res ) ;
rank: 796
score: 98.90281982421875
patch: Iterator iter = res . length ; for (
rank: 796
score: 98.88597276475694
patch: Iterator . has CaMeL Next ( ) ;
rank: 797
score: 99.04236857096355
patch: Iterator iter = new int [ res . length ] ;
rank: 797
score: 99.00908868963069
patch: Iterator >> entries = res . entries ( ) ;
rank: 797
score: 98.99019775390624
patch: Set iter = res . entries ( ) ;
rank: 797
score: 98.90252075195312
patch: Iterator iter = ) . iterator ( ) ;
rank: 798
score: 99.0558573404948
patch: Iterator iter = res . entries . while ( ) ;
rank: 798
score: 99.0337905883789
patch: res . add ( res ) ;
rank: 798
score: 99.00666947798295
patch: Iterator < String : res . entries ( ) ;
rank: 798
score: 98.95756392045455
patch: Iterator iter = res . entries [ 1 ] ;
rank: 798
score: 98.884228515625
patch: Iterator iter = res . entries ( ) .
rank: 799
score: 99.0334139737216
patch: Iterator iter = res . load ( res ) ;
rank: 799
score: 98.98704944957386
patch: res . entries = res . res . entries ;
rank: 800
score: 99.04007975260417
patch: for ( if ( v . length > 0 ) {
rank: 800
score: 99.03086159446023
patch: Iterator iter = res . iterator ( ) ; entries
rank: 800
score: 99.00455932617187
patch: Object iter = res . entries ( ) ;
rank: 800
score: 98.98358709161931
patch: Iterator iter = res . iterator ( iterator ) ;
rank: 800
score: 98.96095275878906
patch: Iterator iter = size ( ) ;
rank: 800
score: 98.9539794921875
patch: super . ebe CaMeL Multiply ( res ) ;
rank: 800
score: 98.88229370117188
patch: if ( entries . length > 0 ) {
rank: 801
score: 99.0550028483073
patch: Insets iter = res . entries . iterator ( ) ;
rank: 801
score: 99.0291748046875
patch: Iterator iter = res . get ( false ) ;
rank: 801
score: 99.0034512606534
patch: final Iterator iterator = res . entries ( ) ;
rank: 801
score: 98.9600497159091
patch: ; Iterator iter = res . iterator ( ) ;
rank: 801
score: 98.88136121961806
patch: Iterator iter = entries . ( ) ;
rank: 802
score: 99.05316162109375
patch: Iterator iter = 0 . res . iterator ( ) ;
rank: 802
score: 99.03848266601562
patch: if ( res . size ( ) == 0 ) {
rank: 802
score: 99.02396850585937
patch: Iterator iter = sum . iterator ( ) ;
rank: 802
score: 99.002685546875
patch: Iterator Iterator iter = res . entries ( ) ;
rank: 802
score: 98.97752796519886
patch: Object res = res . entries [ 0 ] ;
rank: 802
score: 98.95700905539773
patch: switch ( res . length ) { case 1 :
rank: 802
score: 98.9513272372159
patch: Iterator iter = res . length [ 1 ] ;
rank: 802
score: 98.87950439453125
patch: List res = entries . iterator ( ) ;
rank: 803
score: 99.05192427201705
patch: Iterator < int ++ res . size ( ) ;
rank: 803
score: 99.03790283203125
patch: Set entries = res . entries . iterator ( ) ;
rank: 803
score: 99.00196533203125
patch: Iterator size = res . iterator ( ) ;
rank: 803
score: 98.97693980823864
patch: Iterator < res . entries . size ( ) ;
rank: 803
score: 98.95100541548295
patch: Iterator iter > = res . iterator ( ) ;
rank: 803
score: 98.8942138671875
patch: Iterator iter = list . size ( ) ;
rank: 803
score: 98.8853515625
patch: int value = iter . advance ( ) ;
rank: 803
score: 98.87893676757812
patch: if ( res != null ) {
rank: 804
score: 99.05069986979167
patch: Iterator iter = res . iterator ( ) - 0 ;
rank: 804
score: 99.03581237792969
patch: Iterator iter . advance ( ) ;
rank: 804
score: 99.02192826704545
patch: Iterator iter = res . compare ( res ) ;
rank: 804
score: 98.97659912109376
patch: Collection iter = res . iterator ( ) ;
rank: 804
score: 98.88353881835937
patch: int [ ] v = res . length ;
rank: 805
score: 98.9998779296875
patch: Iterator < ] > entries . iterator ( ) ;
rank: 805
score: 98.9761962890625
patch: Iterator iter = res . entries . iterator ( ;
rank: 805
score: 98.95220392400569
patch: Iterator iterator = res . iterator ( ) ; ;
rank: 805
score: 98.89166937934027
patch: Iterator iter = v [ length ] ;
rank: 805
score: 98.88323974609375
patch: Iterator iter = res . sleep ( ) ;
rank: 806
score: 99.0210293856534
patch: iterator = res . entries . entries ( ) ;
rank: 806
score: 98.97441755022321
patch: res . res = res ;
rank: 806
score: 98.95070578835227
patch: Iterator iter = res . clone ( ) ; ;
rank: 806
score: 98.87672729492188
patch: Iterator entries = entries . iterator ( ) ;
rank: 807
score: 99.03395774147727
patch: Iterator iter = res . entries ( length ) ;
rank: 807
score: 98.94757634943181
patch: Iterator iter = res . entries . size ( )
rank: 807
score: 98.8812255859375
patch: int v = res . size ( ) ;
rank: 807
score: 98.8764404296875
patch: int iter = res . value . length ;
rank: 808
score: 99.0205965909091
patch: Iterator iter = entries . get ( res ) ;
rank: 808
score: 98.99910111860795
patch: Iterator -- iter = res . iterator ( ) ;
rank: 808
score: 98.94681396484376
patch: Enumeration iter = v . entries ( ) ;
rank: 808
score: 98.87569580078124
patch: int iterator = res . entries . length ;
rank: 809
score: 99.0316162109375
patch: Set list = res . entries . iterator ( ) ;
rank: 809
score: 99.01899857954545
patch: Iterator iter iter = res . entries ( ) ;
rank: 809
score: 98.9703369140625
patch: Iterator iter = res ) . entries ( ) ;
rank: 809
score: 98.87692260742188
patch: Iterator iter = res > iterator ( ) ;
rank: 810
score: 98.99795532226562
patch: int iter = res . copy ( ) ;
rank: 810
score: 98.9698153409091
patch: new Iterator iter = res . iterator ( ) ;
rank: 810
score: 98.94420166015625
patch: Iterator iter = set . iterator ( ) ;
rank: 810
score: 98.87307739257812
patch: Iterator res = entries . size ( ) ;
rank: 811
score: 98.96824815538194
patch: Iterator iter = res . iterator ( ;
rank: 811
score: 98.87105102539063
patch: Iterator iter = v . Iterator ( ) ;
rank: 812
score: 99.0408447265625
patch: int length = res . size ( ) ;
rank: 812
score: 99.00997314453124
patch: Iterator iter = res . entries != null ;
rank: 812
score: 98.99770285866477
patch: final Iterator iter = res . copy ( ) ;
rank: 812
score: 98.96649780273438
patch: Iterator iterator = v . entries ( ) ;
rank: 812
score: 98.87350463867188
patch: Iterator iter = res + v . length ;
rank: 812
score: 98.872509765625
patch: int [ ] v = v . length ;
rank: 813
score: 99.03884055397727
patch: final Object res = res . get ( ) ;
rank: 813
score: 98.9964599609375
patch: protected Iterator iter = res . entries ( ) ;
rank: 813
score: 98.94211647727273
patch: Iterator iter = res size . iterator ( ) ;
rank: 813
score: 98.93321644176136
patch: private Iterator iter = res . iterator ( ) ;
rank: 814
score: 99.02234903971355
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > }
rank: 814
score: 98.96431107954545
patch: entries = res . entries . clone ( ) ;
rank: 814
score: 98.87006378173828
patch: int length = v . length ;
rank: 814
score: 98.86680908203125
patch: Iterator iter = v . remove ( ) ;
rank: 815
score: 99.00791015625
patch: Iterator iter = res . get > null ;
rank: 815
score: 98.9957763671875
patch: Iterator end = res . iterator ( ) ;
rank: 815
score: 98.96309814453124
patch: Set res = res . clone ( ) ;
rank: 815
score: 98.87001953125
patch: Iterator iter = res . ebe CaMeL Multiply ;
rank: 816
score: 99.03325861150569
patch: final Object res = res . entries ( ) ;
rank: 816
score: 99.00632546164773
patch: Iterator iter = res . split ( res ) ;
rank: 816
score: 98.99456787109375
patch: Integer iter = res . entries ( ) ;
rank: 816
score: 98.95885120738636
patch: Iterator iter = res . iterator ( entries ) ;
rank: 816
score: 98.93584650213069
patch: Open CaMeL Map CaMeL Real CaMeL Vector res ++ ;
rank: 816
score: 98.86703830295139
patch: Iterator iter = res . contains ( )
rank: 816
score: 98.86698608398437
patch: Iterator iter >= res . size ( ) ;
rank: 817
score: 99.03251953125
patch: Object res = res . get ( ) ;
rank: 817
score: 98.99257590553977
patch: Iterator iter = res . get ( null ) ;
rank: 817
score: 98.93494262695313
patch: Object iter = res . iterator ( ) ;
rank: 817
score: 98.86375732421875
patch: Iterator iter = res . signum ( ) ;
rank: 817
score: 98.86159057617188
patch: Iterator iter = res != null ? iter .
rank: 818
score: 98.99245383522727
patch: Iterator iter = res . iterator ( ) ; public
rank: 818
score: 98.95734320746527
patch: Iterator iter = res . entries ( )
rank: 818
score: 98.9342041015625
patch: int iter = this . res . length ;
rank: 818
score: 98.8627685546875
patch: Iterator iter = res . contains ( 0 )
rank: 818
score: 98.86259765625
patch: int iter = v . length ( ) ;
rank: 819
score: 99.02863103693181
patch: super . res . entries = res . entries ;
rank: 819
score: 99.01922607421875
patch: Iterator iter == res . entries . iterator ( ) ;
rank: 819
score: 98.99240944602273
patch: Iterator iter = res . entries ( ) ; .
rank: 819
score: 98.99228515625
patch: Enumeration entries = res . entries ( ) ;
rank: 819
score: 98.95676491477273
patch: if ( res != null ) { for ( )
rank: 819
score: 98.93389337713069
patch: Iterator iter = res . entries [ $NUMBER$ ] ;
rank: 819
score: 98.92388916015625
patch: Iterator iter = min . iterator ( ) ;
rank: 820
score: 99.01915486653645
patch: Iterator while ( res . has CaMeL Next ( ) )
rank: 820
score: 98.99085582386364
patch: iter Iterator iter = res . iterator ( ) ;
rank: 820
score: 98.98984596946023
patch: Iterator iter = res . iterator ( true ) ;
rank: 820
score: 98.9565762606534
patch: res . res = res . clone ( ) ;
rank: 820
score: 98.8604248046875
patch: Iterator iter = res . length . length ;
rank: 821
score: 99.01898193359375
patch: Iterator iter *= res . entries . iterator ( ) ;
rank: 821
score: 98.9885498046875
patch: Iterator iter = super . entries ( ) ;
rank: 821
score: 98.93165418836806
patch: Iterator iter = res . iterator ( )
rank: 821
score: 98.86094970703125
patch: Iterator iter = Math . size ( ) ;
rank: 821
score: 98.8599609375
patch: Iterator iter = v . contains ( ) ;
rank: 822
score: 99.01710001627605
patch: Iterator iter || res . entries . iterator ( ) ;
rank: 822
score: 98.985498046875
patch: Iterator iter = super . iterator ( ) ;
rank: 822
score: 98.95496715198864
patch: res . size = res . size ( ) ;
rank: 822
score: 98.92931518554687
patch: Iterator iter = this . res . length ;
rank: 822
score: 98.86058959960937
patch: int iterator = res . size ( ) ;
rank: 822
score: 98.85879516601562
patch: Iterator iter = v [ length 0 ] ;
rank: 823
score: 98.98652787642045
patch: iterator . iterator ( ) . iterator ( ) ;
rank: 823
score: 98.95308227539063
patch: Set entries = res . entries ( ) ;
rank: 823
score: 98.92853393554688
patch: Iterator iter = new Object [ 0 ] ;
rank: 823
score: 98.91956787109375
patch: Iterator iter = new Iterator ( res ) ;
rank: 823
score: 98.85770263671876
patch: Iterator iter = entries . max ( ) ;
rank: 824
score: 98.98643188476562
patch: int iter = res . next ( ) ;
rank: 824
score: 98.9284335049716
patch: Iterator iter = res . entries . entries ( )
rank: 824
score: 98.919140625
patch: Iterator v = res . iterator ( ) ;
rank: 824
score: 98.85765991210937
patch: Iterator iter = in . iterator ( ) ;
rank: 825
score: 98.98581271701389
patch: this . res . iterator ( ) ;
rank: 825
score: 98.98020241477273
patch: Iterator iter = res . iterator ( ) ; /
rank: 825
score: 98.95172674005681
patch: if ( res . size ( ) != 0 )
rank: 825
score: 98.8585693359375
patch: int v = v . length ( ) ;
rank: 825
score: 98.85543212890624
patch: List iter = entries . size ( ) ;
rank: 826
score: 98.98344282670455
patch: this . res . entries . iterator ( ) ;
rank: 826
score: 98.92659135298295
patch: while ( res . has CaMeL Next ( ) )
rank: 826
score: 98.91632634943181
patch: Iterator iter = v 1 . iterator ( ) ;
rank: 827
score: 99.02266068892045
patch: final Iterator iter = list . iterator ( ) ;
rank: 827
score: 98.97664018110795
patch: Iterator iter ( res . iterator ( ) ) {
rank: 827
score: 98.94932972301136
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;
rank: 827
score: 98.92632501775569
patch: Iterator iter = ( iter . iterator ( ) ;
rank: 827
score: 98.91546075994319
patch: iterator = res . list . iterator ( ) ;
rank: 827
score: 98.85614013671875
patch: int value = iter . size ( ) ;
rank: 827
score: 98.85493774414063
patch: Iterator iter = this . iterator ( ) ;
rank: 827
score: 98.8540771484375
patch: else res . set CaMeL Entry ( ) ;
rank: 828
score: 98.98122336647727
patch: b . iterator ( ) . iterator ( ) ;
rank: 828
score: 98.975341796875
patch: entries . iterator ( ) . iterator ( ) .
rank: 828
score: 98.94572310014205
patch: Iterator < ) : res . iterator ( ) ;
rank: 828
score: 98.92607421875
patch: Iterator iter = chars . iterator ( ) ;
rank: 828
score: 98.8527323404948
patch: Iterator iter = res ;
rank: 829
score: 98.9941739169034
patch: Iterator iter = res . entries ( 0 ) ;
rank: 829
score: 98.98106800426136
patch: res . value = res . entries ( ) ;
rank: 829
score: 98.97470925071023
patch: Iterator iter = res . entries ( ) ; iterator
rank: 829
score: 98.92363891601562
patch: int length = this . res . length ;
rank: 829
score: 98.91310813210227
patch: n = res . entries . size ( ) ;
rank: 829
score: 98.8520263671875
patch: Set iter = res . size ( ) ;
rank: 830
score: 98.97927024147727
patch: Iterator ] res = res . entries ( ) ;
rank: 830
score: 98.84906005859375
patch: Iterator iter += v . size ( ) ;
rank: 831
score: 98.97868347167969
patch: int iter . iterator ( ) ;
rank: 831
score: 98.90748291015625
patch: res . entries [ 0 ] = res ;
rank: 831
score: 98.85025634765626
patch: Iterator iter = 1 . size ( ) ;
rank: 832
score: 99.01593572443181
patch: final int iterator = res . size ( ) ;
rank: 832
score: 98.97239990234375
patch: Iterator iter = res . entries ( ) )
rank: 832
score: 98.94081809303977
patch: this . res = res . entries ( ) ;
rank: 832
score: 98.84655151367187
patch: Vector res = res . size ( ) ;
rank: 832
score: 98.84378051757812
patch: Iterator iter = res >> iterator ( ) ;
rank: 833
score: 98.84610595703126
patch: Iterator iter = res . entries . TRUE ;
rank: 834
score: 98.976220703125
patch: int iter = res . iter ( ) ;
rank: 834
score: 98.9731112393466
patch: Iterator < String > iter . advance ( ) ;
rank: 834
score: 98.93792169744319
patch: for ( res : res . entries ( ) )
rank: 834
score: 98.84698486328125
patch: Iterator iter = res . [ $NUMBER$ ] ;
rank: 834
score: 98.8460464477539
patch: int size = res . length ;
rank: 834
score: 98.84217529296875
patch: Iterator iter |= res . iterator ( ) ;
rank: 835
score: 99.00996537642045
patch: Iterator iter = res . size ( ) ; else
rank: 835
score: 98.90317993164062
patch: Iterator iterator = list . iterator ( ) ;
rank: 835
score: 98.84684753417969
patch: Iterator iter = res . false ;
rank: 835
score: 98.84215698242187
patch: Iterator entries = v . iterator ( ) ;
rank: 836
score: 98.97352183948864
patch: Iterator iter = res . remove ( null ) ;
rank: 836
score: 98.83977508544922
patch: Iterator iter += res . length ;
rank: 837
score: 98.9728759765625
patch: Collection list = res . entries ( ) ;
rank: 837
score: 98.9669522372159
patch: Iterator iter = res . next ( ) ; ;
rank: 837
score: 98.91419067382813
patch: Object res = iter . advance ( ) ;
rank: 837
score: 98.89671630859375
patch: assert iter . has CaMeL Next ( ) ;
rank: 837
score: 98.84088134765625
patch: Iterator iter = res . has CaMeL
rank: 838
score: 99.00511585582386
patch: res . iterator = res . entries ( ) ;
rank: 838
score: 98.9712801846591
patch: Iterator $NUMBER$ ] = res . entries ( ) ;
rank: 838
score: 98.96360270182292
patch: Iterator iter = new Iterator ( ) ;
rank: 838
score: 98.93000932173295
patch: res . entries = res . size ( ) ;
rank: 838
score: 98.91254272460938
patch: int length = res . length ( ) ;
rank: 838
score: 98.84053955078124
patch: Iterator iter = $STRING$ . size ( ) ;
rank: 838
score: 98.83838653564453
patch: Iterator iter = res . null ;
rank: 838
score: 98.83458862304687
patch: Iterator iter = res [ - $NUMBER$ ] ;
rank: 839
score: 98.92833251953125
patch: Collection res = res . iterator ( ) ;
rank: 839
score: 98.9068359375
patch: Iterator iter = Iterator . entries ( ) ;
rank: 839
score: 98.83390299479167
patch: iter = entries . iterator ( ) ;
rank: 840
score: 98.92746407645089
patch: if ( res != null )
rank: 840
score: 98.905810546875
patch: Iterator iter = Iterator . iter ( ) ;
rank: 840
score: 98.83124389648438
patch: Iterator entries = v . size ( ) ;
rank: 841
score: 98.95787464488636
patch: for ( if ( v . length > 0 )
rank: 841
score: 98.92530517578125
patch: Set iter = res . iterator ( ) ;
rank: 841
score: 98.90534057617188
patch: int length = res . length . length ;
rank: 841
score: 98.83699340820313
patch: Open CaMeL Map CaMeL Real CaMeL Vector -- ;
rank: 841
score: 98.80643717447917
patch: Iterator iter = res [ $NUMBER$ ] ;
rank: 842
score: 98.95817427201705
patch: Iterator iter = $STRING$ . iterator ( ) ; ;
rank: 842
score: 98.92266167534723
patch: if ( res . res != null )
rank: 842
score: 98.87930908203126
patch: while ( res . length > 0 ) {
rank: 842
score: 98.80638970269098
patch: res . set CaMeL Entry ( ) ;
rank: 843
score: 98.95720880681819
patch: Iterator . iter = res . iterator ( ) ;
rank: 843
score: 98.90199584960938
patch: double res = iter . advance ( ) ;
rank: 843
score: 98.82969156901042
patch: final Iterator iter = res . length ;
rank: 843
score: 98.80216217041016
patch: else res . advance ( ) ;
rank: 844
score: 98.9998446377841
patch: final int entries = res . entries . length ;
rank: 844
score: 98.95659845525569
patch: Iterator iter ( entries . iterator ( ) ) ;
rank: 844
score: 98.79635620117188
patch: int res = res . length ;
rank: 845
score: 98.91242065429688
patch: Object iter = res . clone ( ) ;
rank: 845
score: 98.87860717773438
patch: Iterator list = v . iterator ( ) ;
rank: 845
score: 98.83280639648437
patch: int [ ] res = res . length ;
rank: 846
score: 98.95534446022727
patch: Iterator iter = new ) . iterator ( ) ;
rank: 846
score: 98.95233709161931
patch: while ( iter . has CaMeL Next ( ) )
rank: 846
score: 98.911474609375
patch: if ( res != null ) res . ;
rank: 846
score: 98.87567138671875
patch: res . set CaMeL Index ( 0 ) ;
rank: 846
score: 98.83221435546875
patch: Iterator iter = res . join ( ) ;
rank: 846
score: 98.827294921875
patch: Iterator iter = res [ length 0 ] ;
rank: 847
score: 98.9635009765625
patch: Iterator < T > iter . iterator ( ) ;
rank: 847
score: 98.86812133789063
patch: System . arraycopy ( res . entries ) ;
rank: 848
score: 98.96326793323864
patch: res . iterator ( ) . next ( ) ;
rank: 848
score: 98.95341352982955
patch: Iterator iter = new entries . iterator ( ) ;
rank: 848
score: 98.897802734375
patch: int key = iter . advance ( ) ;
rank: 848
score: 98.8253662109375
patch: Iterator iter -= res . size ( ) ;
rank: 849
score: 98.99178059895833
patch: if ( res != null ) continue ;
rank: 849
score: 98.9531582919034
patch: Iterator iter = res . replace ( res ) ;
rank: 849
score: 98.9048828125
patch: Iterator iter = res . iterator . ) ;
rank: 849
score: 98.82903442382812
patch: res . set CaMeL Entry ( $STRING$ ) ;
rank: 849
score: 98.76554107666016
patch: while ( res != null ) {
rank: 850
score: 98.95794122869319
patch: Iterator < String > entries . iterator ( ) ;
rank: 850
score: 98.90123155381944
patch: res . res = res . entries ;
rank: 850
score: 98.8286865234375
patch: double iter = res . size ( ) ;
rank: 850
score: 98.821044921875
patch: Iterator iter = res [ size ++ ] ;
rank: 850
score: 98.76476287841797
patch: Iterator iter = res . true ;
rank: 851
score: 98.95637650923295
patch: Iterator * ] = res . entries ( ) ;
rank: 851
score: 98.95210404829545
patch: * Iterator iter = res . iterator ( ) ;
rank: 851
score: 98.90068359375
patch: Vector res = res . entries ( ) ;
rank: 851
score: 98.892333984375
patch: int length = this . v . length ;
rank: 851
score: 98.82845458984374
patch: Iterator iter = res . MAX _ VALUE ;
rank: 851
score: 98.76311492919922
patch: int iterator = res . length ;
rank: 852
score: 98.98862526633523
patch: final Object iter = res . iterator ( ) ;
rank: 852
score: 98.94959605823864
patch: iterator = res . iterator . iterator ( ) ;
rank: 852
score: 98.8994384765625
patch: if ( res != res ) return res ;
rank: 852
score: 98.85802001953125
patch: if ( v == null ) return null ;
rank: 852
score: 98.76116943359375
patch: int iter = entries . length ;
rank: 853
score: 98.9540127840909
patch: final int iterator = res . entries ( ) ;
rank: 853
score: 98.9494384765625
patch: iterator iter = res . iterator ( ) ;
rank: 853
score: 98.89835205078126
patch: res . res = res ; return res ;
rank: 853
score: 98.888330078125
patch: Iterator iter = Math . iterator ( ) ;
rank: 853
score: 98.85518101283482
patch: for ( ; ; ) {
rank: 853
score: 98.81727905273438
patch: Iterator iter = res . run ( ) ;
rank: 853
score: 98.74978637695312
patch: int v = res . length ;
rank: 854
score: 98.98765980113636
patch: final Iterator res = res . iterator ( ) ;
rank: 854
score: 98.89662679036458
patch: res . res = res . res ;
rank: 854
score: 98.82694091796876
patch: res . advance ( v . length ) ;
rank: 854
score: 98.81640625
patch: Iterator iter = res . length * $NUMBER$ ;
rank: 854
score: 98.74002075195312
patch: int res = v . length ;
rank: 855
score: 98.98726806640624
patch: if ( res == null ) return false ;
rank: 855
score: 98.95032348632813
patch: Hashtable iter = res . entries ( ) ;
rank: 855
score: 98.88621215820312
patch: Iterator iter = new Object [ 1 ] ;
rank: 855
score: 98.849267578125
patch: Iterator map = res . iterator ( ) ;
rank: 855
score: 98.81631469726562
patch: Iterator iter = res . entries ; for (
rank: 855
score: 98.73830159505208
patch: iterator = res . size ( ) ;
rank: 856
score: 98.9866943359375
patch: final Object iter = res . entries ( ) ;
rank: 856
score: 98.94610595703125
patch: Iterator iter = $STRING$ . next ( ) ;
rank: 856
score: 98.84591674804688
patch: List list = res . entries ( ) ;
rank: 856
score: 98.81549072265625
patch: Iterator iter = start . iterator ( ) ;
rank: 856
score: 98.73462677001953
patch: if ( res == null ) {
rank: 857
score: 98.93897705078125
patch: Iterator iter && res . iterator ( ) ;
rank: 857
score: 98.8456787109375
patch: assert res . size ( ) > 0 ;
rank: 857
score: 98.8123779296875
patch: Iterator iter = res != null
rank: 857
score: 98.73414442274306
patch: Iterator iter = res != null ? v
rank: 858
score: 98.98333129882812
patch: int max = res . size ( ) ;
rank: 858
score: 98.94727172851563
patch: this . entries . add ( res ) ;
rank: 858
score: 98.94282362196181
patch: Iterator iter = . iterator ( ) ;
rank: 858
score: 98.89229125976563
patch: List res = res . list ( ) ;
rank: 858
score: 98.72791399274554
patch: entries . advance ( ) ;
rank: 859
score: 98.9823885830966
patch: if ( res . entries != null ) continue ;
rank: 859
score: 98.94615478515625
patch: int iter = res . clone ( ) ;
rank: 859
score: 98.940185546875
patch: Iterator iterator = res . iter ( ) ;
rank: 859
score: 98.84380493164062
patch: res . entries [ 0 ] = null ;
rank: 859
score: 98.77833557128906
patch: Iterator iter = res . length )
rank: 859
score: 98.72757393973214
patch: res . advance ( ) ;
rank: 860
score: 98.93311656605114
patch: Iterator < int ) res . advance ( ) ;
rank: 860
score: 98.82052612304688
patch: int length = this . entries . length ;
rank: 860
score: 98.76982116699219
patch: Iterator iter = res [ 0 ]
rank: 860
score: 98.72386338975694
patch: Iterator iter = res . length ) ;
rank: 861
score: 98.97467595880681
patch: final Object res = res . size ( ) ;
rank: 861
score: 98.94184027777777
patch: Iterator < ) . iterator ( ) ;
rank: 861
score: 98.93302778764205
patch: Iterator iter = res [ res . length ] ;
rank: 861
score: 98.932177734375
patch: Iterator iter = new . iterator ( ) ;
rank: 861
score: 98.884814453125
patch: Object res = res . entries ( ) ;
rank: 861
score: 98.83991088867188
patch: Iterator iter = get . iterator ( ) ;
rank: 861
score: 98.76877170138889
patch: Iterator iter = res . size ( )
rank: 861
score: 98.72261810302734
patch: int v = v . length ;
rank: 862
score: 98.94125366210938
patch: Iterator next = res . iterator ( ) ;
rank: 862
score: 98.76732720269098
patch: Iterator iter = res [ null ] ;
rank: 862
score: 98.71984185112848
patch: Iterator iter = res . [ ) ;
rank: 863
score: 98.87736002604167
patch: entries = res . entries . entries ;
rank: 863
score: 98.81956787109375
patch: Iterator iter = res . equals ( this )
rank: 863
score: 98.76625569661458
patch: Iterator = res . iterator ( ) ;
rank: 863
score: 98.70927429199219
patch: final iter . advance ( ) ;
rank: 864
score: 98.94056396484375
patch: Iterator iter = res . entries - 0 ;
rank: 864
score: 98.92388237847223
patch: Iterator iter = new iterator ( ) ;
rank: 864
score: 98.92259632457386
patch: Iterator > iter = res . iterator ( ) ;
rank: 864
score: 98.83775024414062
patch: long size = res . size ( ) ;
rank: 864
score: 98.69786071777344
patch: Iterator iter = res . 0 ;
rank: 865
score: 98.93651471819196
patch: res . entries ( ) ;
rank: 865
score: 98.8765625
patch: List iter = res . list ( ) ;
rank: 865
score: 98.87373657226563
patch: int length = v . length ( ) ;
rank: 865
score: 98.69731140136719
patch: Iterator iter = res != null ;
rank: 866
score: 98.97251198508523
patch: Iterator iter = res . entries > ( ) ;
rank: 866
score: 98.93325805664062
patch: res . entries = res . entries ) ;
rank: 866
score: 98.91943359375
patch: Iterator iter = ( res . iterator ( ) ;
rank: 866
score: 98.87545776367188
patch: Iterator < = v . iterator ( ) ;
rank: 866
score: 98.87373657226563
patch: Iterator iter = new Iterator ( this ) ;
rank: 866
score: 98.83333740234374
patch: Enumeration iter = v . iterator ( ) ;
rank: 867
score: 98.97109375
patch: if ( res != null ) return iter ;
rank: 867
score: 98.932763671875
patch: Iterator iter = res . entries > length ;
rank: 867
score: 98.87280883789063
patch: int iter = iter . entries ( ) ;
rank: 867
score: 98.74641248914931
patch: Iterator = res . size ( ) ;
rank: 867
score: 98.69268035888672
patch: int iter = res . entries .
rank: 868
score: 98.97076416015625
patch: Iterator iter = 0 . entries ( ) ;
rank: 868
score: 98.92731323242188
patch: Iterator iter = copy . entries ( ) ;
rank: 868
score: 98.91893174913194
patch: if ( v . length > 0 )
rank: 868
score: 98.91780395507813
patch: / iter = res . iterator ( ) ;
rank: 868
score: 98.8737548828125
patch: Iterator size = v . iterator ( ) ;
rank: 868
score: 98.68345642089844
patch: Iterator iter = res . current CaMeL
rank: 869
score: 98.97069634331598
patch: if ( res != null ) break ;
rank: 869
score: 98.92720336914063
patch: Iterator iter = res . entries == null ;
rank: 869
score: 98.87149658203126
patch: Iterator iter = new int [ 0 ] ;
rank: 869
score: 98.81669921875
patch: Iterator iter = max . iterator ( ) ;
rank: 869
score: 98.81492309570312
patch: res . set CaMeL Entry ( 0 ) ;
rank: 869
score: 98.7294921875
patch: Iterator iter = res . entries [ 0
rank: 869
score: 98.68230329241071
patch: Iterator iter = res ) ;
rank: 870
score: 98.92588500976562
patch: Iterator iter = res . entries - 1 ;
rank: 870
score: 98.914501953125
patch: Iterator iter = log . iterator ( ) ;
rank: 870
score: 98.9136474609375
patch: long iter = res . iterator ( ) ;
rank: 870
score: 98.87093505859374
patch: Vector iter = v . iterator ( ) ;
rank: 870
score: 98.68113708496094
patch: int entries . size ( ) ;
rank: 871
score: 98.86505737304688
patch: List res = res . clone ( ) ;
rank: 871
score: 98.8126220703125
patch: Collection res = res . size ( ) ;
rank: 871
score: 98.6790771484375
patch: Iterator iter = res . is CaMeL
rank: 872
score: 98.9649169921875
patch: int 1 = res . size ( ) ;
rank: 872
score: 98.92498779296875
patch: Iterator entries = res . iter ( ) ;
rank: 872
score: 98.91034545898438
patch: while ( v . length > 0 ) {
rank: 872
score: 98.67411586216518
patch: iterator . advance ( ) ;
rank: 873
score: 98.92296142578125
patch: int size = res . iterator ( ) ;
rank: 873
score: 98.86317749023438
patch: Open CaMeL Map CaMeL Real CaMeL Vector ++ ;
rank: 873
score: 98.86046685112848
patch: if ( res . length != 0 )
rank: 873
score: 98.71742248535156
patch: Iterator iter = res [ ] ;
rank: 874
score: 98.90933227539062
patch: iter = res . iterator ( ) ; ;
rank: 874
score: 98.899365234375
patch: Iterator iter = System . iterator ( ) ;
rank: 874
score: 98.86065063476562
patch: int length = v . entries . length ;
rank: 874
score: 98.71484375
patch: Iterator iter = iterator ( ) ;
rank: 875
score: 98.96165771484375
patch: Iterator iter = map . entries ( ) ;
rank: 875
score: 98.91735229492187
patch: Object entries = res . entries ( ) ;
rank: 875
score: 98.908251953125
patch: iter iter = res . entries ( ) ;
rank: 875
score: 98.85940551757812
patch: Iterator iter = res . length [ ] ;
rank: 875
score: 98.78287760416667
patch: int [ ] res = new ) ;
rank: 875
score: 98.66416931152344
patch: Iterator iter = res [ iter .
rank: 876
score: 98.96087646484375
patch: if ( res == null ) throw null ;
rank: 876
score: 98.88883666992187
patch: List list = res . iterator ( ) ;
rank: 876
score: 98.85700819227431
patch: if ( res . length > 0 )
rank: 876
score: 98.79366048177083
patch: size = res . size ( ) ;
rank: 876
score: 98.7587890625
patch: int size = v . length ;
rank: 876
score: 98.70870632595486
patch: Iterator iter = iter . ( ) ;
rank: 876
score: 98.650634765625
patch: Iterator iter = res . start ;
rank: 877
score: 98.8856201171875
patch: if ( this . res != null ) {
rank: 877
score: 98.85750732421874
patch: res . set CaMeL Entry ( res ) ;
rank: 877
score: 98.85518391927083
patch: Iterator < res . size ( ) ;
rank: 877
score: 98.79129367404514
patch: dim . entries = res . entries ;
rank: 877
score: 98.64576721191406
patch: Iterator iter = res . to CaMeL
rank: 878
score: 98.95739135742187
patch: Iterator iter = null . iterator ( ) ;
rank: 878
score: 98.91488037109374
patch: Iterator iter = res . value . length ;
rank: 878
score: 98.89837646484375
patch: Iterator iter = res . trim ( ) ;
rank: 878
score: 98.88534545898438
patch: synchronized ( res ) {
rank: 878
score: 98.85748901367188
patch: Vector iter = iter . iterator ( ) ;
rank: 878
score: 98.8540771484375
patch: Collection v = res . entries ( ) ;
rank: 878
score: 98.6406478881836
patch: int value = v . length ;
rank: 879
score: 98.74854193793402
patch: int [ ] v = new ) ;
rank: 879
score: 98.69449191623264
patch: Iterator iter = res [ SIZE ] ;
rank: 879
score: 98.63819231305804
patch: Iterator iter = res . ;
rank: 880
score: 98.91070556640625
patch: Iterator entries = res . next ( ) ;
rank: 880
score: 98.87804565429687
patch: super . ebe CaMeL Multiply ( v ) ;
rank: 880
score: 98.76822916666667
patch: if ( res . length == 0 )
rank: 880
score: 98.69408501519098
patch: Iterator iter = res [ iterator ] ;
rank: 880
score: 98.63519287109375
patch: Iterator iter = res . set CaMeL
rank: 881
score: 98.9099609375
patch: iter = res . entries ( null ) ;
rank: 881
score: 98.895849609375
patch: = res . entries . iterator ( ) ;
rank: 881
score: 98.87689208984375
patch: List entries = res . iterator ( ) ;
rank: 881
score: 98.85410766601562
patch: Iterator iter = data . size ( ) ;
rank: 881
score: 98.73527018229167
patch: Iterator iter = res . entries . }
rank: 881
score: 98.6325912475586
patch: while ( res == null ) {
rank: 882
score: 98.90914306640624
patch: Iterator iter = value . entries ( ) ;
rank: 882
score: 98.8478515625
patch: Collection res = res . list ( ) ;
rank: 882
score: 98.69078826904297
patch: Iterator iter = res . end ;
rank: 882
score: 98.6317138671875
patch: if ( v != null ) {
rank: 883
score: 98.94984130859375
patch: if ( res == null ) return 0 ;
rank: 883
score: 98.9087890625
patch: iter = res . entries ( $NUMBER$ ) ;
rank: 883
score: 98.85126953125
patch: Vector iter = v . entries ( ) ;
rank: 883
score: 98.73091634114583
patch: Iterator iter = null ;
rank: 883
score: 98.68994140625
patch: iter = v . size ( ) ;
rank: 883
score: 98.63140106201172
patch: Iterator iter = res . ) ;
rank: 884
score: 98.90611572265625
patch: Iterator iter = random . entries ( ) ;
rank: 884
score: 98.68771362304688
patch: Iterator iter = res > null ;
rank: 884
score: 98.62841796875
patch: int entries = res . length ;
rank: 885
score: 98.9043212890625
patch: Iterator entries = res . copy ( ) ;
rank: 885
score: 98.88792724609375
patch: res . add ( res . res ) ;
rank: 885
score: 98.8439697265625
patch: int length = iter . entries . length ;
rank: 885
score: 98.74688042534723
patch: res . entries = res . list ;
rank: 885
score: 98.68388536241319
patch: Iterator iter = res [ true ] ;
rank: 886
score: 98.90350341796875
patch: boolean iter = res . iterator ( ) ;
rank: 886
score: 98.73337131076389
patch: iter = res . clone ( ) ;
rank: 886
score: 98.68262590680804
patch: Iterator iter = res == null
rank: 886
score: 98.62217712402344
patch: int entries = v . length ;
rank: 887
score: 98.86433715820313
patch: list . set CaMeL Entry ( iter ) ;
rank: 887
score: 98.8434814453125
patch: int length = iter . iterator ( ) ;
rank: 887
score: 98.8349609375
patch: assert res != null : $STRING$ + res ;
rank: 887
score: 98.73168267144098
patch: result . entries = res . entries ;
rank: 887
score: 98.621337890625
patch: if ( entries != null ) {
rank: 888
score: 98.9003662109375
patch: Iterator * ] entries . iterator ( ) ;
rank: 888
score: 98.86397298177083
patch: for ( int ) {
rank: 888
score: 98.84271850585938
patch: int entries = res . length ( ) ;
rank: 888
score: 98.83482055664062
patch: if ( res != null ) return ) ;
rank: 888
score: 98.72319200303819
patch: iter = res . entries . length ;
rank: 888
score: 98.61543273925781
patch: Iterator iter = res . last CaMeL
rank: 889
score: 98.8778076171875
patch: Iterator iter = sum . entries ( ) ;
rank: 889
score: 98.85750122070313
patch: Vector res = new Iterator ( this ) ;
rank: 889
score: 98.84257202148437
patch: Iterator iter = length . iterator ( ) ;
rank: 889
score: 98.833984375
patch: entries = res . entries ;
rank: 889
score: 98.6142578125
patch: int iterator = v . length ;
rank: 890
score: 98.93954467773438
patch: int 0 = res . size ( ) ;
rank: 890
score: 98.8976318359375
patch: Iterator iter = exp . iterator ( ) ;
rank: 890
score: 98.87605590820313
patch: Iterator iter = list . iter ( ) ;
rank: 890
score: 98.84196166992187
patch: int entries = this . res . length ;
rank: 890
score: 98.66783905029297
patch: Vector iter = res . length ;
rank: 890
score: 98.61104583740234
patch: Iterator iter = res . -- ;
rank: 891
score: 98.89732666015625
patch: Iterator iter = res . entries = null ;
rank: 891
score: 98.87545166015624
patch: Iterator iterator = res . next ( ) ;
rank: 891
score: 98.85369262695312
patch: Iterator iter , res . iterator ( ) ;
rank: 891
score: 98.81886121961806
patch: Iterator iter = v . iterator ( ;
rank: 891
score: 98.65806361607143
patch: Iterator iter = res [ 0
rank: 891
score: 98.60696411132812
patch: Iterator iter = res . max CaMeL
rank: 892
score: 98.93688354492187
patch: if ( res . entries != null ) {
rank: 892
score: 98.89714965820312
patch: Iterator * ] list . iterator ( ) ;
rank: 892
score: 98.87352294921875
patch: Iterator iter = res . parse ( ) ;
rank: 892
score: 98.65621185302734
patch: List iter = res . length ;
rank: 892
score: 98.60218811035156
patch: int res = entries . length ;
rank: 893
score: 98.89541625976562
patch: int iter = list . iterator ( ) ;
rank: 893
score: 98.79123942057292
patch: res = res . entries ( ) ;
rank: 893
score: 98.71949114118304
patch: res . entries = res ;
rank: 893
score: 98.70020887586806
patch: new Real CaMeL Vector ( this ) ;
rank: 893
score: 98.60011509486607
patch: Iterator iter = res . }
rank: 894
score: 98.9313232421875
patch: int res . entries = res . entries ;
rank: 894
score: 98.89512939453125
patch: int end = res . size ( ) ;
rank: 894
score: 98.8692138671875
patch: iter = res . entries . ( ) ;
rank: 894
score: 98.78917778862848
patch: Iterator iter = res . iterator . ;
rank: 894
score: 98.70476616753473
patch: size = res . entries . length ;
rank: 894
score: 98.69096544053819
patch: double [ ] res = new ) ;
rank: 894
score: 98.59585571289062
patch: int entries . next ( ) ;
rank: 895
score: 98.92923583984376
patch: synchronized ( res ) { return res ; }
rank: 895
score: 98.86467895507812
patch: Iterator iter = res . replace ( ) ;
rank: 895
score: 98.78658040364583
patch: m = res . entries ( ) ;
rank: 895
score: 98.70011393229167
patch: if ( res == null ) continue ;
rank: 895
score: 98.5918197631836
patch: for ( Iterator iter = res .
rank: 896
score: 98.77606201171875
patch: Iterator < ) . next ( ) ;
rank: 896
score: 98.6973876953125
patch: res . entries = res . map ;
rank: 896
score: 98.63916887555804
patch: iter = res . length ;
rank: 896
score: 98.58870152064732
patch: it . advance ( ) ;
rank: 897
score: 98.9275146484375
patch: super . res . add ( res ) ;
rank: 897
score: 98.89034695095486
patch: final int iter . iterator ( ) ;
rank: 897
score: 98.77282036675348
patch: if ( res . length != $NUMBER$ )
rank: 897
score: 98.69559733072917
patch: iter = list . iterator ( ) ;
rank: 897
score: 98.58767700195312
patch: Iterator iter = res [ ( (
rank: 898
score: 98.88846435546876
patch: Enumeration res = res . entries ( ) ;
rank: 898
score: 98.83190239800348
patch: Iterator < iter . advance ( ) ;
rank: 898
score: 98.78983561197917
patch: Iterator iter = res . entries . length
rank: 898
score: 98.760986328125
patch: if ( res . entries == null )
rank: 898
score: 98.69061279296875
patch: res . entries = new ) ;
rank: 898
score: 98.61997985839844
patch: Iterator iter = res ; for (
rank: 898
score: 98.58758544921875
patch: Iterator res = res . length ;
rank: 899
score: 98.75644259982639
patch: entries = res . entries . length ;
rank: 899
score: 98.68996175130208
patch: res . list = res . entries ;
rank: 899
score: 98.65524291992188
patch: int [ ] res = null ;
rank: 899
score: 98.58293805803571
patch: Iterator iter = res . {
rank: 900
score: 98.92090454101563
patch: while ( res != null ) return res ;
rank: 900
score: 98.88565673828126
patch: Object list = res . entries ( ) ;
rank: 900
score: 98.81381564670139
patch: for ( String key : res ) {
rank: 900
score: 98.7530517578125
patch: Iterator iter = res . iterator ) ;
rank: 901
score: 98.81340196397569
patch: Iterator < String > iter = res .
rank: 901
score: 98.750244140625
patch: this . res = res ;
rank: 902
score: 98.88328857421875
patch: Iterator iter = res . entries = 0 ;
rank: 902
score: 98.64418029785156
patch: Iterator iter = res . FALSE ;
rank: 902
score: 98.60248565673828
patch: Iterator iter |= res . length ;
rank: 902
score: 98.5599365234375
patch: Iterator iter = v .
rank: 903
score: 98.911083984375
patch: int $NUMBER$ = res . size ( ) ;
rank: 903
score: 98.87313842773438
patch: entries . add ( res ) ;
rank: 903
score: 98.85538940429687
patch: entries iter = res . entries ( ) ;
rank: 903
score: 98.80516221788194
patch: Vector res = new Iterator ( ) ;
rank: 903
score: 98.67800564236111
patch: iter = res . list ( ) ;
rank: 903
score: 98.59864044189453
patch: Iterator iter = res > true ;
rank: 904
score: 98.80514187282986
patch: for ( String key : v ) {
rank: 904
score: 98.74367947048611
patch: for ( res : res . entries )
rank: 904
score: 98.67780219184027
patch: if ( res == null ) break ;
rank: 904
score: 98.59770965576172
patch: Iterator iter = res > false ;
rank: 904
score: 98.53446742466518
patch: final Iterator iter = res .
rank: 905
score: 98.86079915364583
patch: final int entries . iterator ( ) ;
rank: 905
score: 98.73989529079861
patch: iter = iter . iterator ( ) ;
rank: 905
score: 98.63861083984375
patch: Iterator iter = - 1 ;
rank: 905
score: 98.5964584350586
patch: Iterator entries = res . length ;
rank: 905
score: 98.53429158528645
patch: Iterator iter = entries .
rank: 906
score: 98.8519287109375
patch: Iterator iterator = $STRING$ . iterator ( ) ;
rank: 906
score: 98.74036322699652
patch: if ( v . length != 0 )
rank: 906
score: 98.73883819580078
patch: Iterator iter = iter . length ;
rank: 906
score: 98.63841756184895
patch: Iterator iter = false ;
rank: 907
score: 98.84478759765625
patch: this . res . entries = res ;
rank: 907
score: 98.799072265625
patch: Iterator < ) . advance ( ) ;
rank: 907
score: 98.7374267578125
patch: Collection res = res . entries ;
rank: 907
score: 98.67099434988839
patch: res . entries = new ;
rank: 908
score: 98.84048122829861
patch: res . out . iterator ( ) ;
rank: 908
score: 98.66909450954861
patch: Iterator iter = res . entries ; ;
rank: 908
score: 98.63127136230469
patch: int [ ] v = null ;
rank: 908
score: 98.57188415527344
patch: Iterator iter = res . max ;
rank: 909
score: 98.89818725585937
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 909
score: 98.624755859375
patch: Iterator iter = true ;
rank: 910
score: 98.89793090820312
patch: Object iter = res . size ( ) ;
rank: 910
score: 98.84842529296876
patch: Iterator iter ( res . iterator ( ) ;
rank: 910
score: 98.82939317491319
patch: this . res . entries ( ) ;
rank: 910
score: 98.56414031982422
patch: Iterator iter = res . contains ;
rank: 910
score: 98.44740513392857
patch: i . advance ( ) ;
rank: 911
score: 98.82619222005208
patch: Iterator * ) . iterator ( ) ;
rank: 911
score: 98.77067057291667
patch: Iterator < String > iter = 0 ;
rank: 911
score: 98.72613525390625
patch: Iterator iter = res . length
rank: 911
score: 98.71806504991319
patch: res . res = this . res ;
rank: 911
score: 98.64332580566406
patch: int entries = res . entries ;
rank: 911
score: 98.44718715122768
patch: Iterator iter = res . entries
rank: 912
score: 98.889404296875
patch: else iter = res . entries ( ) ;
rank: 912
score: 98.84711303710938
patch: Iterator iter = name . entries ( ) ;
rank: 912
score: 98.82061089409723
patch: entries = res . iterator ( ) ;
rank: 912
score: 98.76736789279514
patch: Iterator < String > iter = null ;
rank: 912
score: 98.71367645263672
patch: Iterator iter = res . iterator ;
rank: 912
score: 98.55966186523438
patch: double iter = res . length ;
rank: 912
score: 98.43972342354911
patch: Iterator iter = entries ) ;
rank: 913
score: 98.88818359375
patch: res . to CaMeL Array ( res ) ;
rank: 913
score: 98.80650329589844
patch: res . add ( $STRING$ ) ;
rank: 913
score: 98.71332465277777
patch: if ( v . length == 0 )
rank: 913
score: 98.42831420898438
patch: synchronized ( this ) {
rank: 914
score: 98.798095703125
patch: Iterator iter = . iter ( ) ;
rank: 914
score: 98.72351752387152
patch: Iterator iter = res . length ) {
rank: 914
score: 98.71322970920139
patch: if ( v . entries != null )
rank: 914
score: 98.55384063720703
patch: Vector iter = res . entries ;
rank: 914
score: 98.4266357421875
patch: Iterator iter = res [ 1
rank: 915
score: 98.8871826171875
patch: int key = res . size ( ) ;
rank: 915
score: 98.80623626708984
patch: Iterator entries . iterator ( ) ;
rank: 915
score: 98.74855550130208
patch: Iterator < int ) {
rank: 915
score: 98.71120198567708
patch: if ( res != null ) return ;
rank: 915
score: 98.60111999511719
patch: res . add ( this ) ;
rank: 916
score: 98.80028618706598
patch: Iterator = res . entries ( ) ;
rank: 916
score: 98.71185980902777
patch: return ebe CaMeL Multiply ( res ) ;
rank: 916
score: 98.5955810546875
patch: assert ( res != null ) ;
rank: 916
score: 98.57868303571429
patch: Iterator iter = - $NUMBER$ ;
rank: 917
score: 98.79623074001736
patch: res . entries . iterator ( ) ;
rank: 917
score: 98.73919677734375
patch: for ( Object res : res ) {
rank: 917
score: 98.7066650390625
patch: data = res . entries ( ) ;
rank: 917
score: 98.58737618582589
patch: iter = res . entries ;
rank: 917
score: 98.5478744506836
patch: Iterator iter = res . SIZE ;
rank: 917
score: 98.40574137369792
patch: int res = ) ;
rank: 918
score: 98.78598361545139
patch: res . res . entries ( ) ;
rank: 918
score: 98.76215277777777
patch: Iterator iter . iterator ( ) ; ;
rank: 918
score: 98.73100280761719
patch: synchronized ( res . entries ) {
rank: 918
score: 98.70096842447917
patch: this . res = res . entries ;
rank: 918
score: 98.58499908447266
patch: assert res . length > 0 ;
rank: 918
score: 98.5477294921875
patch: List iter = res . entries ;
rank: 918
score: 98.40071323939732
patch: int [ ] v = new
rank: 919
score: 98.7823486328125
patch: Iterator < ] > iter = 0 ;
rank: 919
score: 98.70068359375
patch: if ( res . length != 1 )
rank: 919
score: 98.58362579345703
patch: for ( ; ; ) { ;
rank: 919
score: 98.54328155517578
patch: Iterator iterator = res . length ;
rank: 919
score: 98.37159729003906
patch: Iterator iter ;
rank: 920
score: 98.74360487196181
patch: Iterator iter = load ( res ) ;
rank: 920
score: 98.67327117919922
patch: int length = iter . length ;
rank: 920
score: 98.57906341552734
patch: res . set ( res ) ;
rank: 920
score: 98.36973353794643
patch: Iterator iter = res . [
rank: 921
score: 98.88410034179688
patch: Iterator iterator = 0 . iterator ( ) ;
rank: 921
score: 98.71592203776042
patch: Iterator iter = 0 ; for ( {
rank: 921
score: 98.69538709852431
patch: if ( res != null ) res ;
rank: 921
score: 98.67256164550781
patch: Real CaMeL Vector res = null ;
rank: 921
score: 98.57883126395089
patch: res . entries = null ;
rank: 921
score: 98.53956604003906
patch: Iterator entries = res . entries ;
rank: 922
score: 98.8817626953125
patch: List iterator = res . entries ( ) ;
rank: 922
score: 98.76655578613281
patch: int iter . next ( ) ;
rank: 922
score: 98.71314832899306
patch: Iterator iter = copy ( res ) ;
rank: 922
score: 98.67313058035714
patch: if ( v != null )
rank: 922
score: 98.571044921875
patch: Iterator iter . remove ( ) ;
rank: 922
score: 98.53465270996094
patch: Iterator iter = v . entries ;
rank: 922
score: 98.35982259114583
patch: Iterator iter = entries ;
rank: 923
score: 98.710693359375
patch: if ( this . res == null )
rank: 923
score: 98.66603088378906
patch: int iter . advance ( ) ;
rank: 923
score: 98.66587829589844
patch: assert res != null : $STRING$ ;
rank: 923
score: 98.55355834960938
patch: int key = v . length ;
rank: 923
score: 98.53427124023438
patch: Iterator iter -= res . length ;
rank: 923
score: 98.35694231305804
patch: Iterator iter = v [ 0
rank: 924
score: 98.83852810329861
patch: final int iter = res . length ;
rank: 924
score: 98.71299235026042
patch: res . entries . iterator ( ) .
rank: 924
score: 98.66189575195312
patch: List res = res . entries ;
rank: 924
score: 98.55389404296875
patch: Iterator iter . next ( ) ;
rank: 924
score: 98.35648018973214
patch: Iterator iter = res . count
rank: 925
score: 98.83633422851562
patch: res . remove ( res ) ;
rank: 925
score: 98.64733123779297
patch: Object res = res . res ;
rank: 925
score: 98.53732299804688
patch: result . add ( res ) ;
rank: 926
score: 98.7588882446289
patch: int entries . iterator ( ) ;
rank: 926
score: 98.69389125279018
patch: Iterator iter = new ) ;
rank: 926
score: 98.64624786376953
patch: Iterator iter = res . entries {
rank: 926
score: 98.34932163783482
patch: list . advance ( ) ;
rank: 927
score: 98.75523546006944
patch: itr = res . entries ( ) ;
rank: 927
score: 98.52942766462054
patch: if ( res == null )
rank: 927
score: 98.52584075927734
patch: res . advance ( this ) ;
rank: 927
score: 98.33794294084821
patch: int [ ] res = new
rank: 928
score: 98.81948513454861
patch: super . entries = res . entries ;
rank: 928
score: 98.66648864746094
patch: iter . add ( res ) ;
rank: 928
score: 98.63454182942708
patch: Iterator iter = v ;
rank: 928
score: 98.52774047851562
patch: System . exit ( 0 ) ;
rank: 928
score: 98.52507019042969
patch: Iterator iter = res . data ;
rank: 928
score: 98.33481852213542
patch: Iterator iter = ( (
rank: 929
score: 98.81677924262152
patch: final int entries . size ( ) ;
rank: 929
score: 98.7474594116211
patch: Vector res . iterator ( ) ;
rank: 929
score: 98.66385650634766
patch: for ( synchronized ( res ) {
rank: 929
score: 98.65287780761719
patch: Iterator iter . size ( ) ;
rank: 929
score: 98.62445940290179
patch: res . res = v ;
rank: 929
score: 98.52601841517857
patch: Iterator iter = res ; ;
rank: 929
score: 98.5239486694336
patch: int value = res . length ;
rank: 929
score: 98.52029418945312
patch: Iterator iter = res . ] ;
rank: 929
score: 98.3104756673177
patch: Iterator iter = res [
rank: 930
score: 98.73101806640625
patch: iter . iterator ( ) ;
rank: 930
score: 98.62380981445312
patch: if ( res != null ) ;
rank: 930
score: 98.5219955444336
patch: List list = res . entries ;
rank: 930
score: 98.51766967773438
patch: Iterator iter : res . length ;
rank: 930
score: 98.27803548177083
patch: int iter = res .
rank: 931
score: 98.80414496527777
patch: super . res . entries = res ;
rank: 931
score: 98.6130599975586
patch: res . remove ( 0 ) ;
rank: 931
score: 98.60963439941406
patch: ebe CaMeL Multiply ( res ) ;
rank: 931
score: 98.603271484375
patch: Iterator iter ; synchronized ( res )
rank: 931
score: 98.52188110351562
patch: return res . entries ( ) ;
rank: 931
score: 98.24119059244792
patch: synchronized ( v ) {
rank: 932
score: 98.63982391357422
patch: Iterator iter = res . entries [
rank: 932
score: 98.60113525390625
patch: Collection entries = res . entries ;
rank: 932
score: 98.51851654052734
patch: for ( int ; ; ) {
rank: 932
score: 98.4960428873698
patch: Iterator iter = res )
rank: 932
score: 98.22115071614583
patch: int res = 0 ;
rank: 933
score: 98.79826524522569
patch: Iterator -- res . iterator ( ) ;
rank: 933
score: 98.60257975260417
patch: Iterator iter = 1 ;
rank: 933
score: 98.59912109375
patch: res . res = res ) ;
rank: 933
score: 98.45047433035714
patch: Iterator . advance ( ) ;
rank: 933
score: 98.20831298828125
patch: Iterator iter = $NUMBER$ ;
rank: 934
score: 98.7002182006836
patch: Iterator iter = capacity ( ) ;
rank: 934
score: 98.62895202636719
patch: Iterator iter = this . entries ;
rank: 934
score: 98.1874491373698
patch: Iterator iter = ) ;
rank: 935
score: 98.79636637369792
patch: Iterator < int ++ res . length ;
rank: 935
score: 98.58861541748047
patch: Set res = res . entries ;
rank: 935
score: 98.49940708705357
patch: res . entries = entries ;
rank: 935
score: 98.1864725748698
patch: int value = ) ;
rank: 936
score: 98.79401991102431
patch: final int size = res . length ;
rank: 936
score: 98.68896484375
patch: Iterator res . iterator ( ) ;
rank: 936
score: 98.57547760009766
patch: int iter = res . entries ;
rank: 936
score: 98.48871721540179
patch: v . advance ( ) ;
rank: 936
score: 98.18032836914062
patch: Iterator iter = v [
rank: 937
score: 98.62274169921875
patch: Iterator < int ++ - 1 ;
rank: 937
score: 98.57479095458984
patch: while ( v != null ) {
rank: 937
score: 98.48059953962054
patch: res . entries = 0 ;
rank: 937
score: 98.4746805826823
patch: int value = 0 ;
rank: 938
score: 98.67772565569196
patch: res . size ( ) ;
rank: 938
score: 98.61396789550781
patch: return iter . advance ( ) ;
rank: 938
score: 98.5736312866211
patch: int length = entries . length ;
rank: 938
score: 98.46861775716145
patch: int key = 0 ;
rank: 938
score: 98.15694173177083
patch: int key = ) ;
rank: 939
score: 98.57732282366071
patch: res . iterator ( ) .
rank: 939
score: 98.57538604736328
patch: Set entries = res . entries ;
rank: 939
score: 98.46133422851562
patch: for ( ; ; )
rank: 939
score: 98.1539306640625
patch: List res = null ;
rank: 940
score: 98.58033752441406
patch: synchronized ( res . res ) {
rank: 940
score: 98.54866027832031
patch: List entries = res . entries ;
rank: 941
score: 98.65979875837054
patch: res . list ( ) ;
rank: 941
score: 98.56433868408203
patch: for ( synchronized ( this ) {
rank: 941
score: 98.39991978236607
patch: synchronized ( res . entries )
rank: 941
score: 98.11764526367188
patch: Iterator res = res .
rank: 942
score: 98.53340911865234
patch: entries = new Iterator ( ) ;
rank: 942
score: 98.42844935825893
patch: Iterator iter = - 0 ;
rank: 942
score: 98.39967564174107
patch: res . add ( new ;
rank: 942
score: 98.11667887369792
patch: synchronized ( entries ) {
rank: 943
score: 98.64413888113839
patch: entries . iterator ( ) ;
rank: 943
score: 98.55545479910714
patch: for ( } return res ;
rank: 943
score: 98.40544782366071
patch: Iterator iter = res -- ;
rank: 943
score: 98.09835815429688
patch: int res = 1 ;
rank: 944
score: 98.64273834228516
patch: super . entries ( res ) ;
rank: 944
score: 98.54889678955078
patch: res . iterator ( ) . ;
rank: 944
score: 98.52410016741071
patch: Iterator iter = res ) {
rank: 944
score: 98.37659563337054
patch: iter = v . length ;
rank: 945
score: 98.6417465209961
patch: res . parse ( res ) ;
rank: 945
score: 98.54824829101562
patch: Iterator iter = get != null ;
rank: 945
score: 98.5264892578125
patch: res . entries = . entries ;
rank: 945
score: 98.43131801060268
patch: int iter = res . length
rank: 945
score: 98.37535749162946
patch: this . v = res ;
rank: 945
score: 98.37462506975446
patch: notify CaMeL All ( ) ;
rank: 945
score: 98.05499267578125
patch: Iterator iter ++ ;
rank: 946
score: 98.71360778808594
patch: Iterator iter = 0 . 0 ;
rank: 946
score: 98.63089752197266
patch: Iterator iter = next ( ) ;
rank: 946
score: 98.52571105957031
patch: Collection iter = res . entries ;
rank: 946
score: 98.51377650669643
patch: Iterator iter = this ) ;
rank: 946
score: 98.35219029017857
patch: res . res = 0 ;
rank: 946
score: 97.96023559570312
patch: return res ;
rank: 947
score: 98.62698364257812
patch: Arrays . iterator ( res ) ;
rank: 947
score: 98.52369907924107
patch: super . res = res ;
rank: 947
score: 98.48342895507812
patch: Iterator < int ) ;
rank: 947
score: 98.35995047433036
patch: int value = - 1 ;
rank: 947
score: 98.34796142578125
patch: list = res . entries ;
rank: 947
score: 97.936572265625
patch: for ( for (
rank: 948
score: 98.69104766845703
patch: super . res ( res ) ;
rank: 948
score: 98.51480538504464
patch: for ( res : res )
rank: 948
score: 98.47743443080357
patch: Iterator < int ++ ) {
rank: 948
score: 98.34342738560268
patch: Iterator iter = v != null
rank: 948
score: 97.9176025390625
patch: for ( ) {
rank: 949
score: 98.62284851074219
patch: Vector iter . iterator ( ) ;
rank: 949
score: 98.46977015904018
patch: Iterator < ( iter ) ;
rank: 949
score: 98.31849016462054
patch: res . entries = v ;
rank: 949
score: 97.81500244140625
patch: Iterator < ) {
rank: 950
score: 98.6195068359375
patch: int res . iterator ( ) ;
rank: 950
score: 98.51161411830357
patch: res . res = null ;
rank: 950
score: 98.46064976283482
patch: for ( final int ) {
rank: 950
score: 98.33025251116071
patch: int key = - 1 ;
rank: 950
score: 98.31401715959821
patch: Iterator iter = v ) ;
rank: 950
score: 97.79144287109375
patch: for ( / *
rank: 951
score: 98.44761439732143
patch: Iterator iter < int ) {
rank: 951
score: 98.30685860770089
patch: Iterator iter = res . ebe
rank: 951
score: 97.78768920898438
patch: while ( ) {
rank: 952
score: 98.65933227539062
patch: Iterator iter = 0 . length ;
rank: 952
score: 98.61194719587054
patch: res . next ( ) ;
rank: 952
score: 98.46745954241071
patch: res . add ( ) ;
rank: 952
score: 98.43551199776786
patch: Iterator < int ) ) {
rank: 952
score: 98.31039864676339
patch: Iterator iter = res . )
rank: 952
score: 98.30095563616071
patch: res . entries = true ;
rank: 952
score: 97.77322387695312
patch: Iterator < ) ;
rank: 953
score: 98.65666852678571
patch: super . entries = res ;
rank: 953
score: 98.61135864257812
patch: Iterator iter = clone ( ) ;
rank: 953
score: 98.46029227120536
patch: final Iterator iter = 0 ;
rank: 953
score: 98.30889020647321
patch: Iterator iter = res >= 0
rank: 953
score: 98.29991803850446
patch: switch ( res . length )
rank: 953
score: 98.28890555245536
patch: this . v = v ;
rank: 953
score: 97.76969604492187
patch: Iterator iter = {
rank: 954
score: 98.61928885323661
patch: final synchronized ( res ) {
rank: 954
score: 98.60045514787946
patch: res . clone ( ) ;
rank: 954
score: 98.42628696986607
patch: Iterator < iter < int )
rank: 954
score: 98.29683430989583
patch: assert res != null ;
rank: 954
score: 97.74627685546875
patch: while ( v .
rank: 955
score: 98.45100620814732
patch: if ( res != null ;
rank: 955
score: 98.40822056361607
patch: Iterator < final int ) {
rank: 955
score: 98.29414585658482
patch: dim . res = res ;
rank: 955
score: 98.24001057942708
patch: int value = 1 ;
rank: 955
score: 97.71199340820313
patch: Vector res = new
rank: 956
score: 98.44806780133929
patch: Iterator < res . length ;
rank: 956
score: 98.29114990234375
patch: synchronized ( res )
rank: 956
score: 98.22889200846355
patch: int key = 1 ;
rank: 956
score: 97.6957763671875
patch: Iterator iter -- ;
rank: 957
score: 98.40410505022321
patch: res . close ( ) ;
rank: 957
score: 98.2445068359375
patch: Real CaMeL Vector res ;
rank: 957
score: 97.68983154296875
patch: if ( res .
rank: 958
score: 98.50142124720982
patch: res . list = res ;
rank: 958
score: 98.39570835658482
patch: res . next = null ;
rank: 958
score: 98.23707071940105
patch: Iterator iter = iter ;
rank: 958
score: 98.19605509440105
patch: Object res = null ;
rank: 958
score: 97.6846923828125
patch: Iterator ( ) ;
rank: 959
score: 98.42841448102679
patch: if ( res != res )
rank: 959
score: 98.37928118024554
patch: for ( int } else {
rank: 959
score: 98.21356201171875
patch: Iterator iter { for (
rank: 959
score: 98.17898559570312
patch: Iterator iter = this ;
rank: 959
score: 98.17604573567708
patch: while ( true ) {
rank: 959
score: 98.15099080403645
patch: Iterator iter = iter .
rank: 959
score: 97.67647705078124
patch: final Iterator iter ;
rank: 960
score: 98.48228236607143
patch: res . entries = ) ;
rank: 960
score: 98.42535400390625
patch: if ( res != ;
rank: 960
score: 98.37513950892857
patch: Iterator iter ( 0 ) ;
rank: 960
score: 98.17171223958333
patch: int entries = 0 ;
rank: 960
score: 98.16651407877605
patch: int value = null ;
rank: 960
score: 97.6576416015625
patch: int [ ) ;
rank: 961
score: 98.44769287109375
patch: for ( ) return res ;
rank: 961
score: 98.42112223307292
patch: initialize ( res ) ;
rank: 961
score: 98.14883422851562
patch: int iter = 0 ;
rank: 961
score: 97.64603424072266
patch: Iterator iter =
rank: 962
score: 98.41033935546875
patch: for ( res : v )
rank: 962
score: 98.1439717610677
patch: assert iter != null ;
rank: 962
score: 98.13546752929688
patch: int next = 0 ;
rank: 962
score: 97.64557495117188
patch: Iterator iter = res
rank: 963
score: 98.46630859375
patch: iterator . iterator ( ) ;
rank: 963
score: 98.33977399553571
patch: res . list = null ;
rank: 963
score: 98.30750528971355
patch: Iterator < int ++ ;
rank: 963
score: 98.12240600585938
patch: Iterator iter = size ;
rank: 963
score: 98.10448201497395
patch: Iterator iter ( ) ;
rank: 963
score: 97.63748779296876
patch: if ( v .
rank: 964
score: 98.12454223632812
patch: int v = ) ;
rank: 964
score: 98.103759765625
patch: Iterator iter = new ;
rank: 964
score: 98.07344563802083
patch: int iter = null ;
rank: 964
score: 97.62806396484375
patch: Iterator < double [
rank: 965
score: 98.31925746372768
patch: Iterator < res != null ;
rank: 965
score: 98.28304036458333
patch: for ( int iter =
rank: 965
score: 98.23690795898438
patch: Iterator iterator = 0 ;
rank: 965
score: 98.12069702148438
patch: Iterator iter = $STRING$ ;
rank: 965
score: 98.08873494466145
patch: Iterator iter ; for (
rank: 965
score: 97.61731567382813
patch: Iterator [ ) ;
rank: 966
score: 98.21436564127605
patch: Iterator iter . -- ;
rank: 966
score: 98.0823974609375
patch: int value = false ;
rank: 966
score: 98.08113606770833
patch: Iterator iter = res ==
rank: 966
score: 98.07168579101562
patch: int iter = iter ;
rank: 966
score: 98.037353515625
patch: result = new ) ;
rank: 966
score: 97.61290893554687
patch: Iterator iter = }
rank: 967
score: 98.44806780133929
patch: Iterator < T ++ ) ;
rank: 967
score: 98.29684448242188
patch: lock ( res ) ;
rank: 967
score: 98.18006388346355
patch: res . = res ;
rank: 967
score: 98.07798258463542
patch: int v = 0 ;
rank: 967
score: 98.07681274414062
patch: Iterator iter = res !=
rank: 967
score: 98.04653930664062
patch: int iter = false ;
rank: 967
score: 98.03286743164062
patch: Object res = res ;
rank: 967
score: 97.58802490234375
patch: Iterator iter / *
rank: 968
score: 98.29013061523438
patch: Collection res = null ;
rank: 968
score: 98.19937133789062
patch: Set res = null ;
rank: 968
score: 98.06369018554688
patch: Vector res = null ;
rank: 968
score: 98.02999877929688
patch: boolean entries = false ;
rank: 968
score: 97.57974853515626
patch: int [ ) {
rank: 969
score: 98.44029889787946
patch: b . iterator ( ) ;
rank: 969
score: 98.13716634114583
patch: synchronized ( res ) ;
rank: 969
score: 98.04832763671875
patch: return res ; }
rank: 969
score: 98.012548828125
patch: Iterator iter = new
rank: 969
score: 97.57817993164062
patch: Iterator [ ) {
rank: 970
score: 98.43804059709821
patch: res . iter ( ) ;
rank: 970
score: 98.23062133789062
patch: copy ( res ) ;
rank: 970
score: 98.1844482421875
patch: Iterator iter < int )
rank: 970
score: 98.04123942057292
patch: boolean res = null ;
rank: 970
score: 98.01243082682292
patch: while ( false ) {
rank: 970
score: 97.5729248046875
patch: for ( double [
rank: 971
score: 98.42868477957589
patch: super . entries ( ) ;
rank: 971
score: 98.2001444498698
patch: for ( int ) ;
rank: 971
score: 98.18130493164062
patch: Iterator < String > }
rank: 971
score: 98.09212239583333
patch: Iterator iter . else /
rank: 971
score: 98.03995768229167
patch: int key = null ;
rank: 971
score: 98.01209513346355
patch: Image res = null ;
rank: 972
score: 98.42228480747768
patch: res . entries = false ;
rank: 972
score: 98.1323954264323
patch: boolean res = false ;
rank: 972
score: 98.02452596028645
patch: int value ( ) ;
rank: 972
score: 98.02060953776042
patch: Iterator iter = res >
rank: 972
score: 97.946435546875
patch: synchronized ( this )
rank: 972
score: 97.5464599609375
patch: Iterator iter = *
rank: 973
score: 98.19138590494792
patch: List ( res ) ;
rank: 973
score: 98.16434733072917
patch: for ( double ) {
rank: 973
score: 98.02015177408855
patch: int value = true ;
rank: 973
score: 97.91256713867188
patch: result = null ;
rank: 973
score: 97.83570861816406
patch: Iterator iter {
rank: 973
score: 97.4896240234375
patch: for ( double
rank: 974
score: 98.40996442522321
patch: public int iterator ( ) {
rank: 974
score: 98.16079711914062
patch: for ( int } else
rank: 974
score: 98.12628173828125
patch: load ( res ) ;
rank: 974
score: 97.86138153076172
patch: for ( )
rank: 974
score: 97.38017272949219
patch: for ( else
rank: 975
score: 98.15958658854167
patch: Iterator < int ++ )
rank: 975
score: 98.1228739420573
patch: if ( v != ;
rank: 975
score: 98.07668050130208
patch: Iterator entries = 0 ;
rank: 975
score: 98.00478108723958
patch: int value = $STRING$ ;
rank: 975
score: 97.37610626220703
patch: for ( Iterator
rank: 976
score: 98.07457478841145
patch: Iterator < ) . )
rank: 976
score: 97.99634806315105
patch: int length ( ) ;
rank: 976
score: 97.36068725585938
patch: for ( (
rank: 977
score: 98.40144566127232
patch: final int iter = 0 ;
rank: 977
score: 98.15968831380208
patch: / * return res ;
rank: 977
score: 98.14330037434895
patch: assert res == null ;
rank: 977
score: 98.1104736328125
patch: entries = new ) ;
rank: 977
score: 98.06576538085938
patch: long iter = 0 ;
rank: 977
score: 97.82147216796875
patch: lock ( ) ;
rank: 977
score: 97.35858154296875
patch: for ( int
rank: 978
score: 98.39744349888393
patch: res . delete ( ) ;
rank: 978
score: 98.15104166666667
patch: for ( ) continue ;
rank: 978
score: 98.09771728515625
patch: . res = res ;
rank: 978
score: 98.0630391438802
patch: Iterator iterator = null ;
rank: 978
score: 97.80043334960938
patch: entries = new ;
rank: 978
score: 97.61380004882812
patch: Iterator iter * /
rank: 978
score: 97.32808685302734
patch: Iterator < )
rank: 979
score: 98.12537638346355
patch: int iter = ) ;
rank: 979
score: 98.0915018717448
patch: update ( res ) ;
rank: 979
score: 97.77271118164063
patch: repaint ( ) ;
rank: 979
score: 97.45401000976562
patch: int iter {
rank: 979
score: 97.31559753417969
patch: for ( final
rank: 980
score: 98.07692260742188
patch: for ( ) ;
rank: 980
score: 98.05576578776042
patch: Iterator iter = 0 )
rank: 980
score: 97.7647216796875
patch: result = new ;
rank: 980
score: 97.57874755859375
patch: Iterator iter = )
rank: 980
score: 97.31549835205078
patch: int ) {
rank: 980
score: 97.26438903808594
patch: int res =
rank: 981
score: 98.12315877278645
patch: Iterator < double [ }
rank: 981
score: 97.76133422851562
patch: iter = res ;
rank: 981
score: 97.31521606445312
patch: int iter ;
rank: 981
score: 97.25980377197266
patch: for ( }
rank: 982
score: 98.11904907226562
patch: Set ( res ) ;
rank: 982
score: 98.03958129882812
patch: int iterator = 0 ;
rank: 982
score: 97.9464599609375
patch: / * * /
rank: 982
score: 97.72431640625
patch: result = res ;
rank: 982
score: 97.5470947265625
patch: iter = res .
rank: 982
score: 97.2596435546875
patch: int length {
rank: 983
score: 98.11788940429688
patch: for ( final int )
rank: 983
score: 98.0337422688802
patch: Iterator < ) . ;
rank: 983
score: 97.93687744140625
patch: if ( res ;
rank: 983
score: 97.68050537109374
patch: entries = null ;
rank: 983
score: 97.6545166015625
patch: Iterator iter = ;
rank: 983
score: 97.24610900878906
patch: final for (
rank: 983
score: 97.12349700927734
patch: int ) ;
rank: 984
score: 98.1178690592448
patch: Iterator < final int )
rank: 984
score: 97.6755126953125
patch: entries = res ;
rank: 984
score: 97.59765625
patch: int [ ] v
rank: 984
score: 97.465283203125
patch: while ( res .
rank: 984
score: 97.19828796386719
patch: int length ;
rank: 984
score: 97.11811828613281
patch: int value ;
rank: 985
score: 97.7168701171875
patch: Iterator < ) .
rank: 985
score: 97.656884765625
patch: iter = null ;
rank: 985
score: 97.32936096191406
patch: Iterator iter *
rank: 985
score: 97.19575500488281
patch: Iterator for (
rank: 985
score: 97.10858154296875
patch: Iterator ++ ;
rank: 986
score: 98.10204060872395
patch: synchronized ( null ) {
rank: 986
score: 97.68257446289063
patch: entries = 0 ;
rank: 986
score: 97.55233154296874
patch: int [ ] res
rank: 986
score: 97.150634765625
patch: return iter ;
rank: 987
score: 98.02933349609376
patch: for ( int )
rank: 987
score: 98.0267822265625
patch: revalidate ( ) ;
rank: 987
score: 97.6394775390625
patch: iter = 0 ;
rank: 987
score: 97.52301635742188
patch: Iterator iter = $NUMBER$
rank: 987
score: 97.09956868489583
patch: for (
rank: 987
score: 97.07600402832031
patch: Iterator * ;
rank: 988
score: 97.92142333984376
patch: Iterator * ) ;
rank: 988
score: 97.77244262695312
patch: for ( ) }
rank: 988
score: 97.63903198242187
patch: Iterator iter ) ;
rank: 988
score: 97.63299560546875
patch: running = true ;
rank: 988
score: 97.088623046875
patch: int iterator {
rank: 988
score: 97.07376861572266
patch: / * /
rank: 989
score: 98.00040283203126
patch: Iterator < int )
rank: 989
score: 97.5921875
patch: = new ) ;
rank: 989
score: 97.06300354003906
patch: Iterator iter <=
rank: 990
score: 97.92609252929688
patch: for ( int }
rank: 990
score: 97.82518310546875
patch: throw ( ) ;
rank: 990
score: 97.66586303710938
patch: final ) ;
rank: 990
score: 97.62760009765626
patch: changed = true ;
rank: 990
score: 97.45182800292969
patch: / ) ;
rank: 990
score: 97.05973052978516
patch: int entries {
rank: 990
score: 97.02479553222656
patch: return v ;
rank: 991
score: 97.61627197265625
patch: data = res ;
rank: 991
score: 97.595458984375
patch: if ( v ;
rank: 991
score: 97.30582427978516
patch: Iterator -- ;
rank: 991
score: 97.04733276367188
patch: if ( res
rank: 991
score: 96.99474334716797
patch: int res ;
rank: 991
score: 96.94583129882812
patch: Iterator iter ++
rank: 992
score: 97.79476318359374
patch: final int iter ;
rank: 992
score: 97.6143798828125
patch: res = new ;
rank: 992
score: 97.33375549316406
patch: = null ;
rank: 992
score: 97.28128051757812
patch: Iterator * /
rank: 992
score: 97.02908325195312
patch: int key ;
rank: 992
score: 96.93927001953125
patch: Iterator iter &&
rank: 993
score: 97.7928466796875
patch: / * ) ;
rank: 993
score: 97.59358520507813
patch: f = res ;
rank: 993
score: 97.32681274414062
patch: = res ;
rank: 993
score: 97.00239562988281
patch: int v ;
rank: 993
score: 96.86747741699219
patch: break ; }
rank: 994
score: 97.73724365234375
patch: reset ( ) ;
rank: 994
score: 97.27442169189453
patch: Iterator iter .
rank: 994
score: 97.24433898925781
patch: Iterator iter )
rank: 994
score: 97.20755767822266
patch: int entries ;
rank: 994
score: 96.86082458496094
patch: Iterator iter |
rank: 994
score: 95.98228963216145
patch: / *
rank: 995
score: 97.58121337890626
patch: res = null ;
rank: 995
score: 97.24092864990234
patch: throw res ;
rank: 995
score: 97.20613098144531
patch: final ) {
rank: 995
score: 97.10322570800781
patch: long ) ;
rank: 995
score: 95.89809163411458
patch: try {
rank: 996
score: 97.09235382080078
patch: = $NUMBER$ ;
rank: 996
score: 97.06693267822266
patch: double ) ;
rank: 996
score: 96.97148132324219
patch: int ( (
rank: 996
score: 95.76648966471355
patch: / /
rank: 997
score: 97.56882934570312
patch: data = null ;
rank: 997
score: 97.19767761230469
patch: } else {
rank: 997
score: 96.97697448730469
patch: Object ) ;
rank: 997
score: 96.96770477294922
patch: int entries :
rank: 997
score: 94.49295043945312
patch: final
rank: 998
score: 96.96878051757812
patch: I ) ;
rank: 998
score: 96.92569732666016
patch: / * }
rank: 998
score: 93.94620513916016
patch: int
rank: 998
score: 93.79307556152344
patch: }
rank: 999
score: 97.03900146484375
patch: = 0 ;
rank: 999
score: 96.96755981445312
patch: m ) ;
rank: 999
score: 96.2108154296875
patch: Iterator iter
rank: 999
score: 93.81363677978516
patch: Iterator
rank: 999
score: 93.1594467163086
patch: try
rank: 1000
score: 97.240234375
patch: int * /
rank: 1000
score: 96.99370574951172
patch: int size ;
rank: 1000
score: 96.96049499511719
patch: assert ) ;
rank: 1000
score: 93.88282012939453
patch: /
rank: 1000
score: 93.44584655761719
patch: else
