rank: 1
score: 99.9235131048387
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 2
score: 99.88279030539773
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 2
score: 99.87434334590517
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 2
score: 99.83123944256756
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 2
score: 99.80905151367188
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 2
score: 99.77211441532258
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 2
score: 99.74750346522177
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 3
score: 99.87034737723214
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 3
score: 99.85066469254032
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 3
score: 99.80464812247983
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 3
score: 99.8015845514113
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 3
score: 99.77613067626953
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 3
score: 99.75983960700758
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 4
score: 99.78099888392858
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 4
score: 99.76941964285714
patch: double observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 4
score: 99.7578545932112
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 4
score: 99.75777633101852
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 4
score: 99.74685489430146
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 5
score: 99.78633256392045
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 5
score: 99.74878647748162
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 5
score: 99.73506164550781
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 5
score: 99.73292451746323
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 6
score: 99.82663056344697
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 6
score: 99.74118134469697
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev / expected [ i ] ;
rank: 6
score: 99.73470633370536
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 7
score: 99.82322782628677
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ;
rank: 7
score: 99.77918836805556
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 7
score: 99.73426649305556
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 8
score: 99.80947963169643
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / dev / expected [ i ] ;
rank: 8
score: 99.78158864667338
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 8
score: 99.77482316300676
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 8
score: 99.75299835205078
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 8
score: 99.74958801269531
patch: if ( observed [ i ] - expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 8
score: 99.73325020926339
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev ;
rank: 8
score: 99.73316824776786
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 9
score: 99.80561787373311
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 9
score: 99.77217864990234
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 9
score: 99.7449618252841
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 9
score: 99.72848510742188
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 9
score: 99.72831217447917
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev ;
rank: 9
score: 99.72577582465277
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 10
score: 99.77176920572917
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 10
score: 99.74421909877232
patch: if ( observed [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 10
score: 99.74383903952206
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 10
score: 99.71713692801339
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev ;
rank: 10
score: 99.71415858114919
patch: dev = ( ( double ) observed [ i ] ) . expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 11
score: 99.78527113970588
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 11
score: 99.77753557477679
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 11
score: 99.74305462015086
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 11
score: 99.7116066261574
patch: double dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 12
score: 99.79873318142361
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] ;
rank: 12
score: 99.779150390625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev * dev / expected [ i ] ;
rank: 12
score: 99.76747759650735
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 12
score: 99.76409357244319
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * dev ;
rank: 12
score: 99.73291015625
patch: dev = ( ( double ) observed [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 13
score: 99.78681904560811
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 13
score: 99.7783203125
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 13
score: 99.76688639322917
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 13
score: 99.76328597530242
patch: dev = ( ( double ) observed [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 13
score: 99.74113695549242
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 13
score: 99.70566587094908
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] ;
rank: 14
score: 99.77569395123106
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev [ i ] ;
rank: 14
score: 99.76213304924242
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 14
score: 99.73983272429436
patch: dev = ( ( double ) observed [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 14
score: 99.71628705193015
patch: observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 14
score: 99.7038345336914
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] / expected [ i ] ;
rank: 15
score: 99.773681640625
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 15
score: 99.73328818044355
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq -= dev * dev / expected [ i ] ;
rank: 15
score: 99.73121861049107
patch: if ( expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 15
score: 99.71533203125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 15
score: 99.70522173713235
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 15
score: 99.70394112723214
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 16
score: 99.77257037984914
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev [ i ] ;
rank: 16
score: 99.75771077473958
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 16
score: 99.7311302923387
patch: i = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 16
score: 99.73043823242188
patch: double expected = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 16
score: 99.71314912683823
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 16
score: 99.7013298483456
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 17
score: 99.7792450875947
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ;
rank: 17
score: 99.77235736268939
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 17
score: 99.72975852272727
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 17
score: 99.70107693142361
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; return sum CaMeL Sq ;
rank: 17
score: 99.699951171875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] * expected [ i ] ;
rank: 18
score: 99.72656947544642
patch: if observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 18
score: 99.70764508928572
patch: observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 18
score: 99.70082002527573
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 18
score: 99.69392395019531
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev ;
rank: 19
score: 99.76024603074596
patch: dev = expected [ i ] - expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 19
score: 99.70421993371212
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 19
score: 99.69391946231617
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] + expected [ i ] ;
rank: 20
score: 99.77429592993951
patch: dev = ( double ) ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 20
score: 99.76934291294643
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 20
score: 99.75645446777344
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 20
score: 99.72201334635416
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 20
score: 99.70361328125
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 20
score: 99.69993024553571
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 20
score: 99.69305943080357
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev / dev / expected [ i ] ;
rank: 21
score: 99.77052260890152
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 21
score: 99.768505859375
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 21
score: 99.75579637096774
patch: dev = observed [ i ] - expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 21
score: 99.72570430871212
patch: if ( observed [ i ] - expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 21
score: 99.72022964015152
patch: dev = ( ( double ) observed [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 21
score: 99.69988335503473
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 21
score: 99.6923828125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] / dev / expected [ i ] ;
rank: 22
score: 99.76821604082662
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev [ i ] ;
rank: 22
score: 99.7552978515625
patch: sum CaMeL Sq += ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 22
score: 99.7196273803711
patch: { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 22
score: 99.70196533203125
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 22
score: 99.69943359375
patch: dev = observed [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 22
score: 99.69463058997844
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 22
score: 99.6916015625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev / dev ;
rank: 23
score: 99.76808675130208
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] + expected [ i ] ;
rank: 23
score: 99.76675502232143
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev * expected [ i ] ;
rank: 23
score: 99.75482177734375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 23
score: 99.74549967447916
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 23
score: 99.716796875
patch: int dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 23
score: 99.69784109933036
patch: if ( observed [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 23
score: 99.69452776227679
patch: dev += ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 23
score: 99.69098977481617
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 24
score: 99.76701085707721
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 24
score: 99.71874260179925
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / observed [ i ] ;
rank: 24
score: 99.71568714488636
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 24
score: 99.69670553768383
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 24
score: 99.69153201941288
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 24
score: 99.689140625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev / expected [ i ] ;
rank: 25
score: 99.76699916294643
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return dev ;
rank: 25
score: 99.76643640854779
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 25
score: 99.74505780194256
patch: dev = ( ( double ) observed [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 25
score: 99.69612910829741
patch: sum CaMeL Sq = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 25
score: 99.69568241003788
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / dev / expected [ i ] ;
rank: 26
score: 99.74893083243535
patch: ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 26
score: 99.71464686239919
patch: dev = ( ( double ) observed [ i ] , expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 26
score: 99.69240500710227
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * expected [ i ] ;
rank: 26
score: 99.688623046875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev / expected [ i ] ;
rank: 27
score: 99.7648037997159
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 27
score: 99.71272547104779
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 27
score: 99.69381466427365
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 27
score: 99.69229910714286
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 27
score: 99.6844149502841
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev * dev / expected [ i ] ;
rank: 28
score: 99.74344758064517
patch: dev = ( ( double ) observed [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 28
score: 99.71242947048611
patch: if ( observed [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 28
score: 99.69225725446428
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 28
score: 99.68984087775735
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 28
score: 99.68719841452206
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 29
score: 99.76398064108456
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] [ i ] ;
rank: 29
score: 99.71241629464286
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) == dev ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 29
score: 99.6861213235294
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] - expected [ i ] ;
rank: 29
score: 99.68292433215726
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev * expected [ i ] ;
rank: 30
score: 99.76275449810606
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 30
score: 99.76238335503473
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 30
score: 99.74430025540866
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 30
score: 99.74274976325758
patch: dev = ( ( ( double ) observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 30
score: 99.71239392510776
patch: dev = ( ( double ) observed [ i ] ) [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 30
score: 99.69113498263889
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } else { sum CaMeL Sq += dev * expected [ i ] ; }
rank: 31
score: 99.76198381696429
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev [ i ] ; } return sum CaMeL Sq ;
rank: 31
score: 99.76002296241555
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 31
score: 99.74371744791667
patch: sum CaMeL Sq += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 31
score: 99.71214340672348
patch: i = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 31
score: 99.71160016741071
patch: if ( expected [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 31
score: 99.68180577895221
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] * dev / expected [ i ] ;
rank: 32
score: 99.75910578547297
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 32
score: 99.74330491286058
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 32
score: 99.71195845170455
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } else
rank: 32
score: 99.71102701822916
patch: double observed [ i ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 33
score: 99.76094193892045
patch: dev = ( ( int ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 33
score: 99.75754045758929
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 33
score: 99.74196144386575
patch: dev = expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 33
score: 99.7343947951858
patch: dev = ( ( double ) observed [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 33
score: 99.68772259880515
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 33
score: 99.68650251116071
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 33
score: 99.68023322610294
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 34
score: 99.76026965725806
patch: dev = ( ( int ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 34
score: 99.7338669235642
patch: dev = ( ( double ) observed [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 34
score: 99.71113725142045
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq -= dev * dev / dev / expected [ i ] ;
rank: 34
score: 99.70977424172794
patch: dev [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 34
score: 99.68522135416667
patch: double observed [ i ] = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 34
score: 99.68482232862904
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ;
rank: 34
score: 99.67997741699219
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ; }
rank: 35
score: 99.75963309151786
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 35
score: 99.70753528225806
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected / expected [ i ] ;
rank: 35
score: 99.67612896543561
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] + dev ;
rank: 36
score: 99.75924775094697
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 36
score: 99.73795318603516
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 36
score: 99.73197318412163
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 36
score: 99.7099373109879
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / observed [ i ] ;
rank: 36
score: 99.70692661830357
patch: if ( observed [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 36
score: 99.675830078125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev / expected [ i ] ;
rank: 37
score: 99.75406222873264
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] / expected [ i ] ;
rank: 37
score: 99.70936908143939
patch: if ( observed [ i ] - expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 37
score: 99.6843197471217
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 37
score: 99.68371212121212
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / $NUMBER$ / expected [ i ] ;
rank: 38
score: 99.75362025669642
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] / sum CaMeL Sq ;
rank: 38
score: 99.70869584517045
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i - 1 ] ;
rank: 38
score: 99.684130859375
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 38
score: 99.68304443359375
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 39
score: 99.70344543457031
patch: if ( observed [ i ] - expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 39
score: 99.68289620535714
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) * expected [ i ] ;
rank: 40
score: 99.75291442871094
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 40
score: 99.73599160684121
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 40
score: 99.70224790219908
patch: double dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 40
score: 99.68212172564338
patch: ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 41
score: 99.75643136160714
patch: dev = ( ( ( double ) observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 41
score: 99.7287368774414
patch: dev = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 41
score: 99.68180601058468
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 41
score: 99.68148803710938
patch: dev = ( ( double ) observed [ i ] ) . double CaMeL Value ( ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 42
score: 99.75634068080358
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev [ i ] ;
rank: 42
score: 99.7517448874081
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 42
score: 99.73552971917229
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 42
score: 99.68167114257812
patch: synchronized ( dev ) { dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 42
score: 99.67718864889706
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 42
score: 99.67230027721774
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 43
score: 99.75611069623162
patch: dev = ( ( double ) observed [ i ] - expected [ i 1 ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 43
score: 99.75060272216797
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 43
score: 99.70038519965277
patch: if ( expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 43
score: 99.68069118923611
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 43
score: 99.6719109030331
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] + expected [ i ] ;
rank: 44
score: 99.75579659598215
patch: dev = ( ( int ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 44
score: 99.75035439768145
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev * expected [ i ] ;
rank: 44
score: 99.73448079427084
patch: sum CaMeL Sq += ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 44
score: 99.70591735839844
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 44
score: 99.70011393229167
patch: if ( ( ( double ) observed [ i ] ) == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 44
score: 99.6796677048142
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 44
score: 99.67569754464286
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 44
score: 99.671875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] / expected [ i ] ;
rank: 45
score: 99.73447397592905
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 45
score: 99.70540889616936
patch: p = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 45
score: 99.70005798339844
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ++ ] ;
rank: 46
score: 99.74933733258929
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 46
score: 99.73327184606481
patch: dev = observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 46
score: 99.72499408143939
patch: dev = ( ( double ) observed [ i ] - expected : expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 46
score: 99.67994559151786
patch: dev = dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 46
score: 99.67289595170455
patch: dev = observed [ i ] - ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 47
score: 99.755078125
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 47
score: 99.74932676373106
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 47
score: 99.73259943181819
patch: dev = observed [ i ] ; dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 47
score: 99.72440592447917
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ;
rank: 47
score: 99.70456025094697
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i + 1 ] ;
rank: 47
score: 99.69872283935547
patch: double dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 47
score: 99.67670200892857
patch: for ( int i = 0 ; i < expected . length ; i ++ ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 48
score: 99.74917423023896
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 48
score: 99.7234404592803
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; break ;
rank: 48
score: 99.70421181955645
patch: dev = ( ( float ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 48
score: 99.698486328125
patch: f = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 48
score: 99.67860412597656
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ; }
rank: 48
score: 99.67590784143519
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 48
score: 99.66844128024194
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] / dev ;
rank: 49
score: 99.74896647135417
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 49
score: 99.72195095486111
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 49
score: 99.69784780649039
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 49
score: 99.67858208550348
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 50
score: 99.74991422086148
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 50
score: 99.73066929408482
patch: dev = observed [ i ] ; dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 50
score: 99.67839102909483
patch: observed [ i ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 50
score: 99.67572846283784
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 50
score: 99.67085905997983
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 50
score: 99.66792937247983
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev + dev / expected [ i ] ;
rank: 51
score: 99.70123487903226
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / max [ i ] ;
rank: 51
score: 99.697509765625
patch: double expected [ ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 51
score: 99.67804129464285
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 51
score: 99.67518525965073
patch: dev = observed [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 51
score: 99.67024230957031
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ) ;
rank: 52
score: 99.74887827280405
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] ;
rank: 52
score: 99.7278464988426
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 52
score: 99.69685363769531
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 52
score: 99.677978515625
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * dev / expected [ i ] ;
rank: 52
score: 99.66958155776516
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 52
score: 99.66766357421875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] * expected [ i ] ;
rank: 53
score: 99.74488740808823
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 53
score: 99.72737630208333
patch: dev = expected [ i ] - expected [ i ] ; dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 53
score: 99.70101165771484
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * * dev / expected [ i ] ;
rank: 53
score: 99.67371786794355
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * 1 / expected [ i ] ;
rank: 54
score: 99.74354553222656
patch: dev = ( ( double ) observed [ i ] - expected [ i 1 ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 54
score: 99.72709386488971
patch: dev = dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 54
score: 99.70040246212122
patch: dev = ( ( double ) observed [ i ] - expected [ i - 1 ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 54
score: 99.6964973000919
patch: int observed [ ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 54
score: 99.67660435267857
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 54
score: 99.67317488386824
patch: dev = ( double ) ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 54
score: 99.66736711774554
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) / expected [ i ] ;
rank: 54
score: 99.66542681525735
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ( expected [ i ] - expected [ i ] ) ;
rank: 55
score: 99.7266142874053
patch: dev = observed [ i ] - expected [ i ] ; dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 55
score: 99.7186982125947
patch: dev = ( ( double ) observed [ i ] - expected + expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 55
score: 99.7001091452206
patch: if ( observed [ i ] - expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 55
score: 99.67657470703125
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 55
score: 99.66525170110887
patch: dev = ( ( double ) observed [ i ] - 1 [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 56
score: 99.69936050907258
patch: ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 56
score: 99.69482421875
patch: long dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 56
score: 99.67631261488971
patch: sum CaMeL Sq += ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 56
score: 99.66650390625
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev / expected [ i ] ;
rank: 57
score: 99.71794976128473
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] - expected [ i ] ;
rank: 57
score: 99.67230815272177
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += 1 * dev / expected [ i ] ;
rank: 57
score: 99.66475793087122
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / ( expected [ i ] - expected [ i ] ) ;
rank: 58
score: 99.74531513935811
patch: dev = ( ( int ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 58
score: 99.67607264364919
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] ;
rank: 58
score: 99.67200127963362
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 58
score: 99.66560311153017
patch: double dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 58
score: 99.66471354166667
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / dev ;
rank: 59
score: 99.693603515625
patch: this . dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 59
score: 99.67519244025735
patch: sum CaMeL Sq = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 59
score: 99.67190906613372
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 59
score: 99.665283203125
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ;
rank: 59
score: 99.664697265625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ; }
rank: 60
score: 99.74509564568015
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 60
score: 99.69339636600378
patch: if ( expected [ i ] - expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 60
score: 99.66467633928572
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev ;
rank: 61
score: 99.74431218327703
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev [ i ] ; } return sum CaMeL Sq ;
rank: 61
score: 99.73840725806451
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ( dev * expected [ i ] ) ;
rank: 61
score: 99.69713903356481
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev / dev / expected [ i ] ;
rank: 61
score: 99.67442321777344
patch: synchronized ( expected ) { dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 61
score: 99.67183061079545
patch: dev = observed [ i ] ; dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 61
score: 99.6647240423387
patch: dev = ( ( double ) observed [ i ] ) . observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 61
score: 99.66290072737068
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] / dev ;
rank: 62
score: 99.697119140625
patch: if ( observed [ i ] - expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * expected [ i ] ;
rank: 62
score: 99.66259765625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected ;
rank: 63
score: 99.74357335707721
patch: int dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 63
score: 99.72208878800676
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 63
score: 99.7149991122159
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 63
score: 99.69095495975378
patch: if ( observed [ i ] - expected [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 63
score: 99.66342625473484
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev * expected [ i ] ;
rank: 64
score: 99.72065873579545
patch: dev = expected [ i ] ; dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 64
score: 99.69538648200758
patch: dev = ( ( double ) observed [ i ] - expected [ i + 1 ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 64
score: 99.67343602035984
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 64
score: 99.66901929450758
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * 1 / dev / expected [ i ] ;
rank: 64
score: 99.66328125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 64
score: 99.66187286376953
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] + expected [ i ] ;
rank: 65
score: 99.74116908482142
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] ;
rank: 65
score: 99.7137451171875
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 65
score: 99.68905639648438
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 65
score: 99.67320667613636
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 66
score: 99.73580285274622
patch: dev = ( ( double ) ( expected [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 66
score: 99.69383190524194
patch: dev = ( ( String ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 66
score: 99.6886848000919
patch: double observed [ ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 66
score: 99.66845043285473
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 67
score: 99.73562622070312
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 67
score: 99.71889175907258
patch: dev = ( ( double ) observed [ i ] - 0 [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 67
score: 99.69371448863636
patch: dev ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 67
score: 99.67256303267045
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * dev * expected [ i ] ;
rank: 67
score: 99.66768391927083
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 67
score: 99.660400390625
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / dev / dev / expected [ i ] ;
rank: 68
score: 99.73466639364919
patch: dev = ( ( double ) observed [ i ] + expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 68
score: 99.71847098214286
patch: dev = ( ( double ) observed [ i ] - expected [ i - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 68
score: 99.71287742820945
patch: dev = ( ( double ) observed [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 68
score: 99.67250689338235
patch: expected [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 68
score: 99.66034458705357
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] + dev ;
rank: 69
score: 99.73823816636029
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / dev ;
rank: 69
score: 99.71808539496527
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 69
score: 99.71283482142857
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 69
score: 99.69179214969758
patch: tmp = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 69
score: 99.68760770909927
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) == dev ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 69
score: 99.67236328125
patch: observed [ i ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 70
score: 99.73796037946428
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / dev / dev / expected [ i ] ;
rank: 70
score: 99.73399522569444
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 70
score: 99.71778738839286
patch: dev = observed [ i ] ; sum CaMeL Sq += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 70
score: 99.69179214969758
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq *= dev * dev / expected [ i ] ;
rank: 70
score: 99.66613399621212
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += 1 * dev / dev / expected [ i ] ;
rank: 70
score: 99.65964084201389
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * ( expected [ i ] - expected [ i ] ) ;
rank: 71
score: 99.71695149739584
patch: double observed [ i ] = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 71
score: 99.71204659598214
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; else sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 71
score: 99.69124086441532
patch: d = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 71
score: 99.66609914679276
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 71
score: 99.65918628589527
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev ;
rank: 72
score: 99.73662567138672
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] ;
rank: 72
score: 99.7333563442888
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * expected [ i ] ;
rank: 72
score: 99.68986742424242
patch: p = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 72
score: 99.67139434814453
patch: dev = ( ( double ) observed [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 72
score: 99.65911458333333
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected . length ;
rank: 73
score: 99.73609076605902
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 73
score: 99.71491350446429
patch: dev = observed [ i ] ; dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 73
score: 99.7117217092803
patch: dev = ( ( double ) observed : observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 73
score: 99.68610174005681
patch: for ( int i = 0 ; i < observed [ i ] ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 73
score: 99.66105143229167
patch: if ( observed [ i ] - expected [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 73
score: 99.65910570549242
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev + dev / dev / expected [ i ] ;
rank: 74
score: 99.71103515625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] * dev ;
rank: 74
score: 99.68961063508064
patch: dev = ( ( byte ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 74
score: 99.6843779592803
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected / expected [ i ] ;
rank: 75
score: 99.71429268973215
patch: double observed [ i ] = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 75
score: 99.709228515625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev ; } return sum CaMeL Sq ;
rank: 75
score: 99.68922378077652
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 75
score: 99.68406677246094
patch: dev = ( ( double ) observed [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 75
score: 99.66066607306985
patch: double sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 75
score: 99.65799289279514
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 76
score: 99.73312557444854
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ) ;
rank: 76
score: 99.70913400957662
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * $NUMBER$ / expected [ i ] ;
rank: 76
score: 99.6683578491211
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 76
score: 99.66462336359797
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 76
score: 99.65711630544355
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev ;
rank: 77
score: 99.73240792410714
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] . sum CaMeL Sq ;
rank: 77
score: 99.71314871651786
patch: dev = expected [ i ] - expected [ i ] ; dev = dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 77
score: 99.68260955810547
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 77
score: 99.66813390395221
patch: dev = ( ( ( double ) observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 77
score: 99.66410558363971
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 77
score: 99.65698982007575
patch: dev = ( ( double ) observed [ i ] - 1 [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 78
score: 99.73215134079392
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 78
score: 99.71314380787037
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 78
score: 99.70891256893383
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 78
score: 99.68880462646484
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ] ;
rank: 78
score: 99.6800178079044
patch: for ( int i = 0 ; i < observed [ i ] . length ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 78
score: 99.66796875
patch: dev [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 78
score: 99.65916573660714
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 78
score: 99.656904296875
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) / dev / expected [ i ] ;
rank: 79
score: 99.73262532552083
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 79
score: 99.70859966856061
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] - dev ;
rank: 79
score: 99.68837298768939
patch: dev = ( ( double ) observed , observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 79
score: 99.66783558238636
patch: sum CaMeL Sq = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 79
score: 99.65663725754311
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 80
score: 99.71296296296296
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 80
score: 99.68804931640625
patch: if ( observed [ i ] - expected [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 80
score: 99.67932498816288
patch: double expected = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 80
score: 99.66776646205358
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev ;
rank: 80
score: 99.65618699596774
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev + expected [ i ] ;
rank: 81
score: 99.73150449810606
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } return dev ;
rank: 81
score: 99.730224609375
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 81
score: 99.68670022898706
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * observed [ i ] ;
rank: 81
score: 99.67890167236328
patch: float dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 82
score: 99.7313461303711
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] [ i ] ;
rank: 82
score: 99.72976345486111
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 82
score: 99.71164032907197
patch: dev = observed [ i ] ; dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 82
score: 99.6865752249053
patch: dev = ( ( float ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 82
score: 99.66731031013258
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 82
score: 99.65675354003906
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] - expected [ i ] ;
rank: 83
score: 99.73095005580358
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 83
score: 99.71155831473214
patch: dev = observed [ i ] - expected [ i ] ; dev = dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 83
score: 99.68549962197581
patch: s = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 83
score: 99.6784439086914
patch: double observed = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 83
score: 99.656494140625
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] - expected [ i ] ;
rank: 83
score: 99.65548270089286
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev * dev / dev / expected [ i ] ;
rank: 84
score: 99.72931082589285
patch: else { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 84
score: 99.71139962332589
patch: dev = expected [ i ] ; dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 84
score: 99.706640625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev / dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 84
score: 99.68529575892858
patch: ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 84
score: 99.67803955078125
patch: for ( int i = 0 ; i < observed [ i ] ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 84
score: 99.66242133246527
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 84
score: 99.65623520359848
patch: dev += ( observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 85
score: 99.72584443933823
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 85
score: 99.67782888104838
patch: b = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 85
score: 99.66232561383929
patch: dev = observed [ i ] ; dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 85
score: 99.65619659423828
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += expected [ i ] ;
rank: 85
score: 99.6546963778409
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ( dev * dev / expected [ i ] ) ;
rank: 86
score: 99.72930385044643
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 86
score: 99.72427455357143
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / observed [ i ] ;
rank: 86
score: 99.7104071255388
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 86
score: 99.68392452116936
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / min [ i ] ;
rank: 86
score: 99.67776396780303
patch: final double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 86
score: 99.66583426339285
patch: ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 86
score: 99.65604073660714
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 86
score: 99.65462239583333
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] / dev / expected [ i ] ;
rank: 87
score: 99.72913275824652
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 87
score: 99.67730712890625
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 87
score: 99.66578776041666
patch: ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 87
score: 99.65579322076613
patch: dev = observed [ i ] [ expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] [ expected [ i ] ;
rank: 88
score: 99.70516880580357
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev ; sum CaMeL Sq += dev * dev / expected [ i ] * dev ;
rank: 88
score: 99.67717742919922
patch: dev = ( ( double ) observed [ i ] ) / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 88
score: 99.66569750236742
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 88
score: 99.66196017795139
patch: dev = observed [ i ] ; sum CaMeL Sq = dev * dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 88
score: 99.65563616071428
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 89
score: 99.72869194878473
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] . expected [ i ] ;
rank: 89
score: 99.7220394736842
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 89
score: 99.70936104910714
patch: sum CaMeL Sq += ( ( ( double ) observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 89
score: 99.70492350260416
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ]
rank: 89
score: 99.68287707913306
patch: dev = ( ( double ) observed [ i ] - out [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 89
score: 99.66188003077652
patch: if ( ! is CaMeL Positive ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 89
score: 99.65413992745536
patch: dev = ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 90
score: 99.72161865234375
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 90
score: 99.70339704241071
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i + expected [ i ] ;
rank: 90
score: 99.68279832409274
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 90
score: 99.67664683948864
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; this . sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 90
score: 99.66533745659723
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 90
score: 99.66172006967905
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * 1 / expected [ i ] ; } return sum CaMeL Sq ;
rank: 90
score: 99.6552734375
patch: dev = ( ( double ) observed [ i ] ) . expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 90
score: 99.65380199535473
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ; sum CaMeL Sq += dev ;
rank: 91
score: 99.7086082664696
patch: sum CaMeL Sq += observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 91
score: 99.70293598790323
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 91
score: 99.68257279829545
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * $NUMBER$ / dev / expected [ i ] ;
rank: 91
score: 99.67630004882812
patch: dev = ( double ) ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 91
score: 99.66515764508928
patch: sum CaMeL Sq += ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 91
score: 99.6551154641544
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] * expected [ i ] ;
rank: 92
score: 99.72107979910714
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; break ;
rank: 92
score: 99.70259817023026
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 92
score: 99.682421875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 92
score: 99.67619323730469
patch: dev = ( ( double ) observed [ i ] , expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 92
score: 99.66424386160715
patch: sum CaMeL Sq = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 92
score: 99.66154210707721
patch: dev -- ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 92
score: 99.65361958165323
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * ( expected [ i ] - expected [ i ] ) ;
rank: 93
score: 99.72667410714286
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] / sum CaMeL Sq ;
rank: 93
score: 99.72092633928571
patch: dev = ( ( double ) observed [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 93
score: 99.70241292317708
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 93
score: 99.67574310302734
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 93
score: 99.66128104073661
patch: dev = ( double ) observed [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 93
score: 99.65340169270833
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] / dev ;
rank: 94
score: 99.72665405273438
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i 1 ] ;
rank: 94
score: 99.72079380580357
patch: dev = ( ( double [ ] ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 94
score: 99.70691311743951
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] - expected [ i ] ;
rank: 94
score: 99.68130493164062
patch: dev = ( ( double ) observed [ i ] - expected [ i i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 94
score: 99.67514217601104
patch: double sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 94
score: 99.66409737723214
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 94
score: 99.65465045797414
patch: ( ( double ) observed [ i ] - expected [ i ] ) . sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 94
score: 99.65288229549633
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 95
score: 99.72611120975378
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev * dev / expected [ i ] ;
rank: 95
score: 99.72015904017857
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev * dev / expected [ i ] ;
rank: 95
score: 99.70653599330358
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 95
score: 99.68095545614919
patch: l = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 95
score: 99.66396303530092
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 95
score: 99.6546297940341
patch: dev = ( ( double ) observed [ i ] ) . expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 95
score: 99.65280052923387
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev / dev ;
rank: 96
score: 99.7064541903409
patch: dev = expected [ i ] ; dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 96
score: 99.70202266808712
patch: dev = ( ( double ) observed [ i ] - expected : observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 96
score: 99.66369280133928
patch: expected [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 96
score: 99.65434434678819
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 97
score: 99.70636617726294
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 97
score: 99.67993903882575
patch: dev = ( ( double ) observed + observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 97
score: 99.67449396306819
patch: if ( observed [ i ] == ( ( double ) observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 97
score: 99.66331528172348
patch: if ( observed [ i ] < expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 97
score: 99.66070197610294
patch: if ( is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 98
score: 99.72597524282095
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 98
score: 99.71900153882575
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 98
score: 99.67987419577206
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } else {
rank: 98
score: 99.67420789930556
patch: if ( expected [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 98
score: 99.66313620174633
patch: observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 98
score: 99.65409342447917
patch: double observed [ i ] = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 98
score: 99.65166877297794
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev / expected [ i ] ; }
rank: 99
score: 99.71873372395834
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 99
score: 99.67984771728516
patch: if ( observed [ i ] - expected [ i ] - observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 99
score: 99.6741943359375
patch: for ( int i = ( ( double ) observed [ i ] ) ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 99
score: 99.66284857855902
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } else { sum CaMeL Sq += dev * expected [ i ] ; }
rank: 99
score: 99.65991973876953
patch: dev = observed [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev / expected [ i ] ;
rank: 100
score: 99.71871512276786
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i - 0 ] ;
rank: 100
score: 99.70594443044355
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 100
score: 99.70070513556985
patch: dev = ( double ) ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 100
score: 99.67349679129464
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 100
score: 99.66244686351104
patch: dev = observed [ i ] ; dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 100
score: 99.65949781013258
patch: dev = ( double ) ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 101
score: 99.7244073275862
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 101
score: 99.71821424696181
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 101
score: 99.70589425223214
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev ;
rank: 101
score: 99.67277018229167
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) == 0 ) sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 101
score: 99.66209457859848
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * expected [ i ] ;
rank: 101
score: 99.65337924299568
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] * expected [ i ] ;
rank: 101
score: 99.65132279829545
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev / dev / dev ;
rank: 102
score: 99.72412109375
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 102
score: 99.70497349330357
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev = dev / expected [ i ] ;
rank: 102
score: 99.7002189390121
patch: dev = observed [ i ] - expected [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 102
score: 99.67891570060483
patch: c = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 102
score: 99.67175686743951
patch: if ( ( double ) observed [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 102
score: 99.66165476831897
patch: dev = observed [ i ] ; dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 102
score: 99.65937243009868
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 102
score: 99.65298954133064
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] ;
rank: 103
score: 99.70484212239583
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 103
score: 99.67782888104838
patch: j = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 103
score: 99.67167811239919
patch: dev = ( ( double ) dev [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 103
score: 99.66108534071181
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 103
score: 99.65925598144531
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; return sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 103
score: 99.65257213961694
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev [ i ] ;
rank: 103
score: 99.65103934151786
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 104
score: 99.69941149259868
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev ;
rank: 104
score: 99.67727399553571
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] + sum CaMeL Sq ;
rank: 104
score: 99.66080050998264
patch: double observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 104
score: 99.658935546875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += 1 * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 104
score: 99.6525390625
patch: dev = ( ( double ) observed [ i ] ) . sum CaMeL Sq += expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 104
score: 99.65086410984848
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] / dev / dev ;
rank: 105
score: 99.67137192234848
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 105
score: 99.66050889756944
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 105
score: 99.65886296452703
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 105
score: 99.65073939732143
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 106
score: 99.72310144761029
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 106
score: 99.71652483258929
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * $NUMBER$ / dev / dev / expected [ i ] ;
rank: 106
score: 99.70461018880208
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 106
score: 99.69903399493244
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; else return sum CaMeL Sq ;
rank: 106
score: 99.67640269886364
patch: dev = ( ( String ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 106
score: 99.67126858618951
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 106
score: 99.66031668526786
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 106
score: 99.65882912660257
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; return sum CaMeL Sq ;
rank: 106
score: 99.65183454241071
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected . length ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 106
score: 99.65033482142857
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ; } return dev ;
rank: 107
score: 99.7162568063447
patch: dev = ( ( double ) observed [ i ] + expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 107
score: 99.70457589285714
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev ;
rank: 107
score: 99.67588806152344
patch: dev ++ = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 107
score: 99.6712417602539
patch: if ( expected [ i ] - expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 107
score: 99.66029575892857
patch: double observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 107
score: 99.64996534778226
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] + dev ;
rank: 108
score: 99.7161532315341
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 108
score: 99.70437622070312
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 108
score: 99.6756258877841
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected , expected [ i ] ;
rank: 108
score: 99.67106628417969
patch: if ( ( ( double ) observed [ i ] ) == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 108
score: 99.65176212086396
patch: double dev = observed [ i ] - ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 108
score: 99.64972795758929
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / ( dev * expected [ i ] ) ;
rank: 109
score: 99.71578093497983
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 109
score: 99.70405430947581
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 109
score: 99.69808568709936
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 109
score: 99.67528557054925
patch: tmp = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 109
score: 99.6709220640121
patch: if = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 109
score: 99.66002699908088
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 109
score: 99.65148532006049
patch: dev = ( ( double ) observed [ i ] ) . sum [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 109
score: 99.64972686767578
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += expected [ i ] ;
rank: 110
score: 99.72170122931985
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; return sum CaMeL Sq ;
rank: 110
score: 99.71535295758929
patch: dev = ( double ) ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 110
score: 99.70389229910714
patch: sum CaMeL Sq += ( ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 111
score: 99.72161187065973
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 111
score: 99.71511579241071
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 111
score: 99.70350167410714
patch: dev = expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 111
score: 99.69784884982639
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 111
score: 99.67064689867425
patch: int dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 111
score: 99.65787179129464
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ;
rank: 111
score: 99.64876302083333
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / ( expected [ i ] - expected [ i ] ) ;
rank: 112
score: 99.7031486265121
patch: dev = ( ( double ) expected [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 112
score: 99.69780970982143
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) * dev ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 112
score: 99.65825892857143
patch: dev = observed [ i ] ; if ( observed [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 112
score: 99.6504142515121
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 112
score: 99.64837646484375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected . length ;
rank: 113
score: 99.72114955357142
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ;
rank: 113
score: 99.71476236979167
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ; }
rank: 113
score: 99.67013888888889
patch: if ( observed [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 113
score: 99.64820075757575
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev + dev / expected [ i ] ;
rank: 114
score: 99.72042939157197
patch: dev = ( ( double [ ] ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 114
score: 99.70252278645833
patch: dev = observed [ i ] ; dev = dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 114
score: 99.69711216517857
patch: dev = ( double ) observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 114
score: 99.66952311197916
patch: dev = ( ( double ) observed [ i ] ) [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 114
score: 99.65809286794355
patch: double observed [ i ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 114
score: 99.65742043887867
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 115
score: 99.71363699776786
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / $NUMBER$ / dev / expected [ i ] ;
rank: 115
score: 99.70240071614583
patch: sum CaMeL Sq = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 115
score: 99.69705447635135
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 115
score: 99.657666015625
patch: observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 115
score: 99.65006510416667
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 116
score: 99.7196844692888
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] ;
rank: 116
score: 99.69610072544643
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 116
score: 99.67367733226104
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } else { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 116
score: 99.66852165670956
patch: int sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 116
score: 99.65637969970703
patch: dev = dev [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 116
score: 99.64794921875
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 117
score: 99.71347508285984
patch: else { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 117
score: 99.69592706088362
patch: dev = ( double ) observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 117
score: 99.67346585181451
patch: if ( observed [ i ] - expected [ i ] - expected [ i ] ) sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 117
score: 99.6682990579044
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) == 0 ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 117
score: 99.6567023782169
patch: sum CaMeL Sq = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 117
score: 99.65635357481061
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / 1 / expected [ i ] ;
rank: 117
score: 99.64970545614919
patch: dev *= ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 118
score: 99.71932220458984
patch: dev = ( ( double ) observed . [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 118
score: 99.701904296875
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 118
score: 99.69573343211206
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; } return sum CaMeL Sq ;
rank: 118
score: 99.67325846354167
patch: dev = ( ( byte ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 118
score: 99.65632180606617
patch: dev = observed [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 118
score: 99.64767020089286
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev ;
rank: 119
score: 99.70178940716912
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; i ++ ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 119
score: 99.67267608642578
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / * expected [ i ] ;
rank: 119
score: 99.66768761837122
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) == dev ) sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 119
score: 99.65630425347223
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 119
score: 99.65619187127976
patch: if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 120
score: 99.71889361213235
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] [ i ] ;
rank: 120
score: 99.71291097005208
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev ; } return sum CaMeL Sq ;
rank: 120
score: 99.69543087121212
patch: dev = ( ( double ) observed [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 120
score: 99.67245945785984
patch: d = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 120
score: 99.66762408088235
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ; }
rank: 120
score: 99.65536678538604
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = expected [ i ] ;
rank: 120
score: 99.64891764322917
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) * dev / expected [ i ] ;
rank: 120
score: 99.64740175189394
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 121
score: 99.71861143369932
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 121
score: 99.712646484375
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 121
score: 99.67244746767241
patch: if ( observed [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 121
score: 99.66753387451172
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; int sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 121
score: 99.65506867439517
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 121
score: 99.64698107489224
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev + expected [ i ] ;
rank: 122
score: 99.71858504011824
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ;
rank: 122
score: 99.71257467830883
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i 1 ] ;
rank: 122
score: 99.70157199435764
patch: dev = ( ( double ) observed [ i ] - expected [ i ] , expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 122
score: 99.69499376085069
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 122
score: 99.67225748697916
patch: dev = ( ( double ) observed [ i ] - $STRING$ ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 122
score: 99.66744559151786
patch: dev = ( ( double ) observed [ i ] - 1 ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 122
score: 99.64835357666016
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / / expected [ i ] ;
rank: 122
score: 99.6465835571289
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / ( dev * dev ) ;
rank: 123
score: 99.7181640625
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 123
score: 99.71250697544643
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * 1 / dev / dev / expected [ i ] ;
rank: 123
score: 99.67211100260417
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * ( expected [ i ] - expected [ i ] ) ;
rank: 123
score: 99.66740171370968
patch: dev = Math . min ( observed [ i ] , expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 123
score: 99.65511924342105
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 123
score: 99.65467834472656
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 124
score: 99.71217974494485
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev ; } return sum CaMeL Sq ;
rank: 124
score: 99.70138210720486
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 124
score: 99.66733990293561
patch: if ( ( ( double ) observed [ i ] ) != expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 124
score: 99.65500057444854
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; return sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 124
score: 99.65464564732143
patch: dev = observed [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 124
score: 99.64804513113839
patch: dev += ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) * expected [ i ] ;
rank: 124
score: 99.64641039299242
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev / dev ;
rank: 125
score: 99.71195475260417
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 125
score: 99.70132785373264
patch: dev = observed [ i ] ; sum CaMeL Sq += observed [ i ] - expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 125
score: 99.69416920731707
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 125
score: 99.67172536542338
patch: dev = ( ( Object ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 125
score: 99.66711819556451
patch: observed = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 125
score: 99.65443929036458
patch: double expected = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 125
score: 99.6541748046875
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 125
score: 99.64634195963542
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / ( expected [ i ] - expected [ i ] ) ;
rank: 126
score: 99.71748310810811
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 126
score: 99.71189313616071
patch: dev = ( ( double ) observed [ i ] + expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 126
score: 99.69415457589285
patch: dev = ( ( double ) observed [ i ] - expected [ i + expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 126
score: 99.67160866477273
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq *= dev * dev / dev / expected [ i ] ;
rank: 126
score: 99.65428331163194
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; } else { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 126
score: 99.64619140625
patch: dev = ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 127
score: 99.71730041503906
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 127
score: 99.69399282094595
patch: i = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 127
score: 99.6665926846591
patch: if ( observed [ i ] != ( ( double ) observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 127
score: 99.64615360383064
patch: z = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 128
score: 99.716552734375
patch: dev = ( double ) ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 128
score: 99.71149553571429
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / 1 / dev / expected [ i ] ;
rank: 128
score: 99.70108768857759
patch: sum CaMeL Sq += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 128
score: 99.69363223805146
patch: buf [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 128
score: 99.67124938964844
patch: dev = ( ( double ) observed [ i ] - expected [ i ++ ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 128
score: 99.64750671386719
patch: double observed [ i ] = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 128
score: 99.64613560267857
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev ;
rank: 129
score: 99.7109375
patch: final double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 129
score: 99.70100648941532
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * 0 / expected [ i ] ;
rank: 129
score: 99.69358317057292
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 129
score: 99.67109818892045
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / i / expected [ i ] ;
rank: 129
score: 99.65345982142857
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 129
score: 99.65194702148438
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected / expected [ i ] ; }
rank: 129
score: 99.64734933035714
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . sum CaMeL Sq ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 129
score: 99.64612210181451
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] + expected [ i ] ;
rank: 130
score: 99.69300426136364
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 130
score: 99.67069128787878
patch: double dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 130
score: 99.6658706665039
patch: for ( int i = 0 ; i < expected . length ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 130
score: 99.65321978400735
patch: dev = ( double ) observed [ i ] ; dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 130
score: 99.64724392361111
patch: dev += ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 131
score: 99.71590401785714
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 131
score: 99.71034458705357
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / dev * expected [ i ] ;
rank: 131
score: 99.700927734375
patch: dev = new ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 131
score: 99.69284057617188
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 131
score: 99.670166015625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; else sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 131
score: 99.66579302619485
patch: m [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 131
score: 99.65295097155449
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 131
score: 99.647216796875
patch: dev += ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 131
score: 99.64587796118951
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] / dev / dev ;
rank: 132
score: 99.71587057674633
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] ;
rank: 132
score: 99.7006599672379
patch: dev = expected [ i ] - expected [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 132
score: 99.67013729319854
patch: { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 132
score: 99.65292697482639
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ;
rank: 132
score: 99.64697265625
patch: dev = ( ( double ) observed [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 132
score: 99.64541163589016
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev / expected [ i ] ;
rank: 133
score: 99.71583606350806
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 133
score: 99.70992024739583
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] ;
rank: 133
score: 99.70062255859375
patch: dev = expected [ i ] ; dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 133
score: 99.66544342041016
patch: } dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 133
score: 99.65151798023896
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 134
score: 99.71579505657327
patch: dev = ( ( double ) observed [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 134
score: 99.66524011948529
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; else { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 134
score: 99.6522936698718
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 134
score: 99.65143694196429
patch: dev = observed [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 134
score: 99.64690803079044
patch: dev = ( ( double ) observed [ i ] ) . expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] [ i ] ;
rank: 134
score: 99.64470880681819
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 135
score: 99.70954663825758
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i - 0 ] ;
rank: 135
score: 99.66987462197581
patch: t = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 135
score: 99.64680727066532
patch: dev = ( ( double ) observed [ i ] ) . expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 135
score: 99.64464879918981
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev / dev / expected [ i ] ;
rank: 136
score: 99.70040130615234
patch: sum CaMeL Sq += ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 136
score: 99.64675071022727
patch: dev = ( ( double ) observed [ i ] - 1 ) / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 136
score: 99.64397834329044
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 137
score: 99.70912798713235
patch: else dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 137
score: 99.7001953125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; ;
rank: 137
score: 99.691845703125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum ;
rank: 137
score: 99.66897321428571
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * observed [ i ] ; } return sum CaMeL Sq ;
rank: 137
score: 99.66453552246094
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ; { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 137
score: 99.6516177528783
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ; }
rank: 137
score: 99.65065160290948
patch: try { dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 137
score: 99.64658794981061
patch: if ( observed [ i ] - expected [ i ] > expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 137
score: 99.64389217601104
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev [ i ] / expected [ i ] ;
rank: 138
score: 99.715625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; } return dev ;
rank: 138
score: 99.70908610026042
patch: dev = ( ( double ) observed [ i ] - expected [ i 1 ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 138
score: 99.70011858258928
patch: dev = expected [ i ] ; sum CaMeL Sq += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 138
score: 99.69179214969758
patch: result = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 138
score: 99.65154854910715
patch: dev = observed [ i ] ; if ( observed [ i ] == observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 138
score: 99.650537109375
patch: sum CaMeL Sq = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 138
score: 99.6437279485887
patch: dev = ( ( double ) observed [ i ] - 1 [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 139
score: 99.71562194824219
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev ) / expected [ i ] ;
rank: 139
score: 99.70889047475961
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 139
score: 99.69991629464286
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev = dev / expected [ i ] ;
rank: 139
score: 99.66833102318549
patch: dev = ( ( double ) observed [ i ] - expected [ 0 ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 139
score: 99.66412712545956
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 139
score: 99.6497002963362
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 139
score: 99.64579920614919
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 139
score: 99.64356208570075
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 140
score: 99.70883178710938
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] ;
rank: 140
score: 99.69138532366071
patch: int dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 140
score: 99.66385650634766
patch: int i = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 140
score: 99.64925362723214
patch: dev = observed [ i ] ; if ( expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 140
score: 99.64570756392045
patch: dev = ( ( double ) observed [ i ] ) . sum CaMeL Sq [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 140
score: 99.64322636045259
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev ; }
rank: 141
score: 99.69898332868304
patch: sum CaMeL Sq += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 141
score: 99.66815948486328
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] $NUMBER$ ;
rank: 141
score: 99.6491935483871
patch: dev = ( ( double - observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 142
score: 99.71508071001838
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] / observed [ i ] ;
rank: 142
score: 99.70852568655303
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 142
score: 99.66802300347223
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ; }
rank: 142
score: 99.66366872479838
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 142
score: 99.64865451388889
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } else { sum CaMeL Sq += dev ; }
rank: 142
score: 99.64294039818549
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev / dev / expected [ i ] ;
rank: 143
score: 99.71494932432432
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 143
score: 99.70845424107142
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i - 1 ] ;
rank: 143
score: 99.69114056755515
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 143
score: 99.66801600302419
patch: r = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 143
score: 99.66338239397321
patch: dev = ( ( double ) observed [ i ] ) / dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 143
score: 99.65016682942708
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 143
score: 99.64853922526042
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } else { sum CaMeL Sq += dev / expected [ i ] ; }
rank: 143
score: 99.64535861545139
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . sum [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 143
score: 99.64231714709052
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev [ i ] ;
rank: 144
score: 99.71477864583333
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 144
score: 99.7083984375
patch: dev = ( ( double ) ( expected [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 144
score: 99.69818325700432
patch: sum CaMeL Sq += observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 144
score: 99.69108537946428
patch: double dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 144
score: 99.66769310735887
patch: dev = ( ( double ) observed [ i ] [ expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 144
score: 99.66328486689815
patch: dev = ( ( double ) observed [ i ] ) ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 144
score: 99.64807807074652
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } sum CaMeL Sq += dev * expected [ i ] ;
rank: 144
score: 99.64522429435483
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev [ i ] ;
rank: 145
score: 99.7083020332532
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { return sum CaMeL Sq ;
rank: 145
score: 99.66310029871323
patch: long observed [ ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 145
score: 99.64975155101104
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 145
score: 99.6414306640625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + ( expected [ i ] - expected [ i ] ) ;
rank: 146
score: 99.71469295726104
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 146
score: 99.69745232077206
patch: dev = expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 146
score: 99.64971738873106
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] + expected [ i ] ;
rank: 146
score: 99.64134954637096
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 147
score: 99.70805089613971
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 147
score: 99.66705519153226
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 147
score: 99.64953161168981
patch: dev = observed [ i ] [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] [ i ] ;
rank: 147
score: 99.64108537946429
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] / dev ;
rank: 148
score: 99.7080078125
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 148
score: 99.69066130809294
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . sum ;
rank: 148
score: 99.66700902478448
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ; } return sum CaMeL Sq ;
rank: 148
score: 99.66253662109375
patch: if ( observed [ i ] > expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 148
score: 99.64942801339286
patch: dev ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 148
score: 99.64689867424242
patch: observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 148
score: 99.64105224609375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected ;
rank: 149
score: 99.71365356445312
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 149
score: 99.7078956397804
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 149
score: 99.69699189157197
patch: dev = ( ( double ) observed [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 149
score: 99.66656283674568
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev / dev / dev / expected [ i ] ;
rank: 149
score: 99.66221963205645
patch: if ( observed [ i ] == ( double ) expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 149
score: 99.64935467694256
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * $NUMBER$ / expected [ i ] ; } return sum CaMeL Sq ;
rank: 149
score: 99.64587751116072
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 149
score: 99.64427806712963
patch: double dev = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 149
score: 99.6409209280303
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev * expected [ i ] ;
rank: 150
score: 99.71350775824652
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 150
score: 99.70757533482143
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev * dev / dev / expected [ i ] ;
rank: 150
score: 99.66631895123106
patch: dev = ( ( double ) observed [ i ] - out [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 150
score: 99.66190222537878
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) * dev ) sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 150
score: 99.64928481158088
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 150
score: 99.64561806955645
patch: sum = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 150
score: 99.64424133300781
patch: if ( observed [ i ] - expected [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 151
score: 99.71307176159274
patch: dev = is CaMeL Positive ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 151
score: 99.6967544555664
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 151
score: 99.69023605872844
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; } return sum CaMeL Sq ;
rank: 151
score: 99.66603042140152
patch: s = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 151
score: 99.64556884765625
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev / expected [ i ] ;
rank: 151
score: 99.64384909237133
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / ( double ) expected [ i ] ;
rank: 151
score: 99.64071163054436
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / ( expected [ i ] - expected [ i ] ) ;
rank: 152
score: 99.69020034327652
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) : dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 152
score: 99.66593191964286
patch: double dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 152
score: 99.66131036931819
patch: if ( expected [ i ] - expected [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 152
score: 99.64033647017045
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 153
score: 99.71237275094697
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . expected ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 153
score: 99.70662214949324
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 153
score: 99.69012636126894
patch: dev = ( ( double ) ( observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 153
score: 99.6655791311553
patch: c = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 153
score: 99.64504172585227
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 153
score: 99.64366957720588
patch: dev = ( ( double ) observed [ i ] - 1 [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 153
score: 99.63922293526785
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / ( expected [ i ] - expected [ i ] ) ;
rank: 154
score: 99.71230061848958
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; return sum CaMeL Sq ;
rank: 154
score: 99.70652860753677
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 154
score: 99.66540897253788
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / max [ i ] ;
rank: 154
score: 99.64906070106908
patch: for ( int i = 0 ; i < expected . length ; i ++ ) { dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 154
score: 99.64492335464016
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 154
score: 99.64356186810662
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] - expected [ i ] ;
rank: 154
score: 99.63906069155092
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev ; }
rank: 155
score: 99.69552951388889
patch: sum CaMeL Sq += observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 155
score: 99.6894302368164
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) 1 ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 155
score: 99.66041564941406
patch: int expected = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 155
score: 99.64905966481855
patch: dev = ( ( long ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 155
score: 99.64488699776786
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 155
score: 99.64264090401785
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 156
score: 99.71199984163852
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 156
score: 99.7060546875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / dev [ i ] ;
rank: 156
score: 99.68931884765625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += sum CaMeL Sq ;
rank: 156
score: 99.64484514508929
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 156
score: 99.63869341681985
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] + dev / expected [ i ] ;
rank: 157
score: 99.69521011844758
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] + expected [ i ] ;
rank: 157
score: 99.6891571969697
patch: dev = ( ( double ) observed : expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 157
score: 99.65941642992425
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - 1 ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 157
score: 99.64455217633929
patch: sum CaMeL Sq = ( ( ( double ) observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 157
score: 99.64250631893383
patch: double dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev / expected [ i ] ;
rank: 158
score: 99.70579769736842
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return return sum CaMeL Sq ;
rank: 158
score: 99.69511274857955
patch: sum CaMeL Sq += ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 158
score: 99.6647087545956
patch: dev = ( ( double ) observed [ i ] - $STRING$ ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 158
score: 99.65939232610887
patch: for ( int i = 0 ; i < expected . length ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 159
score: 99.71117376512096
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 159
score: 99.65925867417279
patch: for ( int i = 0 ; i < expected [ i ] . length ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 159
score: 99.64847935267858
patch: if ( ! is CaMeL Positive ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 159
score: 99.64216657366072
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * dev * dev /
rank: 159
score: 99.6383544921875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / dev ;
rank: 160
score: 99.71102102179276
patch: dev = ( ( double ) is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 160
score: 99.69460797991071
patch: dev = observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 160
score: 99.66441689768145
patch: dev = ( ( Integer ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 160
score: 99.65915009469697
patch: for ( int i = ( ( double ) observed [ i ] ) ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 160
score: 99.64811626233552
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 161
score: 99.70563239020271
patch: dev = ( ( double ) observed [ i ] + expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 161
score: 99.69421056798987
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 161
score: 99.68834164268092
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 161
score: 99.66422526041667
patch: l = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 161
score: 99.65908351089016
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 161
score: 99.64414760044643
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 161
score: 99.637451171875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev / dev / expected [ i ] ;
rank: 162
score: 99.71101209852431
patch: dev = observed [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 162
score: 99.69381374782986
patch: dev = dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 162
score: 99.66422526041667
patch: { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 162
score: 99.63730153729838
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev ;
rank: 163
score: 99.70559599905303
patch: dev = ( ( int ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 163
score: 99.66414388020833
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected + expected [ i ] ;
rank: 163
score: 99.65863037109375
patch: dev = ( ( double ) observed [ i ] ) . expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 163
score: 99.64370265151516
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 163
score: 99.64173889160156
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += expected [ i ] ;
rank: 163
score: 99.63702182112068
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev ;
rank: 164
score: 99.71081891741072
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 164
score: 99.7055599814967
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; return sum CaMeL Sq ;
rank: 164
score: 99.69328019425676
patch: dev = observed [ i ] ; sum CaMeL Sq += ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 164
score: 99.66410064697266
patch: observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 164
score: 99.6585693359375
patch: byte expected [ ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 164
score: 99.64143880208333
patch: dev = Math . min ( observed [ i ] , expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 164
score: 99.63660386029412
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] - expected [ i ] ;
rank: 165
score: 99.71073404947917
patch: dev = ( ( double ) is CaMeL Positive ( observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 165
score: 99.70551060267857
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 165
score: 99.6932040127841
patch: dev = expected [ i ] - expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 165
score: 99.66395305765086
patch: if ( observed [ i ] - expected [ i ] != 0 ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 165
score: 99.65847876764113
patch: if ( observed [ i ] == ( double ) observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 165
score: 99.647705078125
patch: dev = observed [ i ] ; if ( observed [ i ] == observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 165
score: 99.64354596819196
patch: if ( expected [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 165
score: 99.63632497479838
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 166
score: 99.70477479876894
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 166
score: 99.69283040364583
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 166
score: 99.68681483114919
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += $NUMBER$ * dev / expected [ i ] ;
rank: 166
score: 99.66392933238636
patch: dev = ( ( double ) observed . length [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 166
score: 99.64353989109848
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } }
rank: 166
score: 99.63623046875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] / dev * expected [ i ] ;
rank: 167
score: 99.69276165140086
patch: sum CaMeL Sq += observed [ i ] - expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 167
score: 99.68651683910473
patch: dev = observed [ i ] - expected [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 167
score: 99.65813654119319
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 167
score: 99.64702606201172
patch: dev = observed [ i ] ; for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ;
rank: 167
score: 99.64340672348484
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected / expected [ i ] ;
rank: 167
score: 99.64121380974265
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ;
rank: 167
score: 99.63550502232142
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] + dev / dev ;
rank: 168
score: 99.7038337953629
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 168
score: 99.69267272949219
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 168
score: 99.64682006835938
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 168
score: 99.64115513392858
patch: dev += ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / ( expected [ i ] - expected [ i ] ) ;
rank: 168
score: 99.63517930772569
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 169
score: 99.70986599392361
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 169
score: 99.66375732421875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } else { sum CaMeL Sq += dev * expected [ i ] ;
rank: 169
score: 99.65773111979166
patch: double ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 169
score: 99.64672191722973
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; return sum CaMeL Sq ; }
rank: 169
score: 99.63503935842803
patch: z = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 170
score: 99.69210379464286
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev = dev * expected [ i ] ;
rank: 170
score: 99.63460286458333
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / ( expected [ i ] ) ;
rank: 171
score: 99.6918236517137
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += Math * dev / expected [ i ] ;
rank: 171
score: 99.66343365293561
patch: f = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 171
score: 99.64657888104838
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += 0 * dev / expected [ i ] ;
rank: 171
score: 99.64281384698276
patch: sum CaMeL Sq += ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 171
score: 99.63450753348214
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / ( dev / expected [ i ] ) ;
rank: 172
score: 99.70945231119792
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] + expected [ i ] ;
rank: 172
score: 99.70290798611111
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ) ;
rank: 172
score: 99.69171697443181
patch: dev = observed [ i ] - expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 172
score: 99.68613413217905
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev ; } return sum CaMeL Sq ;
rank: 172
score: 99.66338520665323
patch: if ( observed [ i ] - expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * expected [ i ] ; }
rank: 172
score: 99.64647565569196
patch: dev = dev [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 172
score: 99.64003092447916
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) * expected [ i ] ;
rank: 172
score: 99.63444230363176
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / ( expected . length - expected [ i ] ) ;
rank: 173
score: 99.70232795266544
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ++ ] ;
rank: 173
score: 99.66331432711694
patch: v = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 173
score: 99.65638078962054
patch: dev = ( ( double ) observed [ i ] - $NUMBER$ ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 173
score: 99.64606391059027
patch: dev = dev [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 173
score: 99.642578125
patch: i = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 173
score: 99.634326171875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ( dev * dev / dev ) ;
rank: 174
score: 99.70226004464286
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 174
score: 99.69127604166667
patch: dev = expected [ i ] ; dev = dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 174
score: 99.66318696120689
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * max [ i ] ;
rank: 174
score: 99.64241817079741
patch: sum CaMeL Sq += ( ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 175
score: 99.70224609375
patch: dev = ( ( float ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 175
score: 99.66315375434027
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq + sum CaMeL Sq ;
rank: 175
score: 99.64230439157197
patch: dev = expected [ i ] ; dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 175
score: 99.63915111400463
patch: double expected = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 175
score: 99.63427734375
patch: dev += ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 176
score: 99.70196707589285
patch: dev = ( ( ( double ) observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 176
score: 99.69080946180556
patch: dev = expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 176
score: 99.68537139892578
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 176
score: 99.6628935842803
patch: dev = ( ( double ) observed [ i - 1 ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 176
score: 99.65568773674242
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 176
score: 99.64554719002017
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; return sum CaMeL Sq ;
rank: 176
score: 99.63908116957721
patch: dev = ( ( double ) observed [ i ] ) . double CaMeL Value ( ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 177
score: 99.70840454101562
patch: dev = ( ( double ) ! observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 177
score: 99.66267163825758
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ; }
rank: 177
score: 99.65540268841912
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 177
score: 99.64548746744792
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ; return sum CaMeL Sq ;
rank: 177
score: 99.64213169642858
patch: observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 177
score: 99.63886876260081
patch: if ( observed [ i ] - expected [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * expected [ i ] ; }
rank: 177
score: 99.63423919677734
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev / dev / dev ;
rank: 178
score: 99.68485260009766
patch: dev = observed [ i ] * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 178
score: 99.6452577172256
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 178
score: 99.64210340711806
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } else { sum CaMeL Sq = dev * expected [ i ] ; }
rank: 178
score: 99.63406470514113
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev ; }
rank: 179
score: 99.65534973144531
patch: double dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 179
score: 99.64501953125
patch: dev = ( double ) ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 179
score: 99.64205169677734
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev [ i ] ; }
rank: 179
score: 99.63821976273148
patch: double dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 179
score: 99.63402557373047
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 180
score: 99.70722260346284
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 180
score: 99.70160675048828
patch: dev = ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 180
score: 99.69035295758928
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 180
score: 99.6548210592831
patch: dev = ( ( double ) observed [ i ] ) ; if ( dev == 0 ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 180
score: 99.64193830818965
patch: dev = observed [ i ] ; dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 181
score: 99.70694461945564
patch: dev = ( double ) ( observed [ i ] + expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 181
score: 99.68972365920608
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq = dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 181
score: 99.66143973214285
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - sum CaMeL Sq ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 181
score: 99.65473002772177
patch: dev = ( ( double ) observed [ i ] / expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 181
score: 99.64179845010081
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev ;
rank: 182
score: 99.70685969172297
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 182
score: 99.70116424560547
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 182
score: 99.68464704241072
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ]
rank: 182
score: 99.644775390625
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 182
score: 99.64170619419643
patch: dev = observed [ i ] ; if ( observed [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 182
score: 99.63753255208333
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * sum CaMeL Sq / expected [ i ] ;
rank: 183
score: 99.70657596072635
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected / expected [ i ] ; } return sum CaMeL Sq ;
rank: 183
score: 99.70110212053571
patch: i = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 183
score: 99.66114021070075
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 183
score: 99.64476776123047
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 183
score: 99.64147497106481
patch: double expected = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 183
score: 99.63750630040323
patch: dev = ( ( double ) observed [ i ] ) . expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 183
score: 99.63328503024194
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] + dev ;
rank: 184
score: 99.70650597774622
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 184
score: 99.66095525568181
patch: j = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 184
score: 99.65374755859375
patch: f = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 184
score: 99.64466050091912
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; return dev ;
rank: 184
score: 99.64127866683468
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = dev / expected [ i ] ;
rank: 184
score: 99.63735961914062
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 185
score: 99.68930136190879
patch: sum CaMeL Sq += ( ( observed [ i ] - expected [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 185
score: 99.6608025045956
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] [ 0 ] ;
rank: 185
score: 99.65364292689732
patch: try { dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 185
score: 99.64451688878677
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; for ( int i = 0 ; i < observed . length ; i ++ )
rank: 185
score: 99.63726596174568
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ;
rank: 185
score: 99.63282569679055
patch: dev = ( ( Double ) observed [ i ] - expected [ i ] ) . double CaMeL Value ( ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 186
score: 99.70638950892857
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 186
score: 99.70054867393092
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } } return sum CaMeL Sq ;
rank: 186
score: 99.68918372844827
patch: dev = new ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 186
score: 99.68349609375
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return dev ;
rank: 186
score: 99.64109933035714
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 186
score: 99.63726043701172
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] * expected [ i ] ;
rank: 186
score: 99.63274274553571
patch: dev = ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 187
score: 99.70637141047297
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 187
score: 99.7000796669408
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 187
score: 99.6891381048387
patch: dev = expected [ i ] - expected [ i ] / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 187
score: 99.6834617820946
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev ; } return sum CaMeL Sq ;
rank: 187
score: 99.64107513427734
patch: sum = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 187
score: 99.637060546875
patch: sum CaMeL Sq += ( observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 187
score: 99.63255356297348
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] + dev ;
rank: 188
score: 99.66067603326613
patch: n = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 188
score: 99.65310668945312
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 188
score: 99.6368075284091
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ;
rank: 189
score: 99.70612726984797
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 189
score: 99.6830818422379
patch: dev = observed [ i ] + expected [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 189
score: 99.65300750732422
patch: long expected = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 189
score: 99.64066199100378
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev ;
rank: 189
score: 99.63680013020833
patch: if ( observed [ i ] instanceof double [ ] ) { sum CaMeL Sq += ( ( double [ ] ) observed [ i ] ) . double CaMeL Value ( ) ; }
rank: 189
score: 99.63238002232143
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev * dev / expected [ i ] ;
rank: 190
score: 99.69970703125
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * dev / dev / expected [ i ] ;
rank: 190
score: 99.68890545819256
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } else { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 190
score: 99.64409877232143
patch: dev = observed [ i ] ; if ( observed [ i ] < observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 191
score: 99.68877650669643
patch: dev = observed [ i ] ; int sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 191
score: 99.65984700520833
patch: dev = ( ( double ) [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 191
score: 99.65280983664773
patch: if ( observed [ i ] == expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 191
score: 99.63667515345982
patch: double observed [ i ] = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 192
score: 99.65938683712122
patch: ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 192
score: 99.65267207704741
patch: dev = ( double ) observed [ i ] / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 192
score: 99.6437100497159
patch: dev = observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 192
score: 99.64036560058594
patch: dev = ( ( float ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 192
score: 99.63199637276786
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * ( dev * dev / expected [ i ] ) ;
rank: 193
score: 99.70551893446181
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 193
score: 99.69916848575367
patch: dev = ( ( double ) observed [ i ] - - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 193
score: 99.68229906486742
patch: sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 193
score: 99.6593246459961
patch: if ( observed [ i ] - expected [ i ] != observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 193
score: 99.64368393841912
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * 1 / expected [ i ] ;
rank: 193
score: 99.6402587890625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ; }
rank: 193
score: 99.636474609375
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev * expected [ i ] ;
rank: 193
score: 99.63169950597427
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ( expected [ i ] - expected [ i ] ) ;
rank: 194
score: 99.70542124155405
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 194
score: 99.68174833409927
patch: dev ++ ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 194
score: 99.65196126302084
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } dev = dev * dev / expected [ i ] ;
rank: 194
score: 99.64009602864583
patch: sum CaMeL Sq = ( ( ( double ) observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 194
score: 99.63621690538194
patch: dev = Math . min ( observed [ i ] - expected [ i ] , expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 194
score: 99.63145003780242
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev / dev ;
rank: 195
score: 99.70527479383681
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] / dev * expected [ i ] ;
rank: 195
score: 99.69892578125
patch: dev = ( ( int ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 195
score: 99.65884399414062
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 195
score: 99.65156693892045
patch: double dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 195
score: 99.64307358685662
patch: if ( ! is CaMeL Positive ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 195
score: 99.63980887276786
patch: sum CaMeL Sq += ( ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 195
score: 99.63615373883928
patch: dev = ( ( double ) observed [ i ] ) . sum CaMeL Sq / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 195
score: 99.63134765625
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 196
score: 99.70527200137867
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * expected [ i ] / expected [ i ] ;
rank: 196
score: 99.68795677923387
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / 0 [ i ] ;
rank: 196
score: 99.68173828125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ]
rank: 196
score: 99.6588363647461
patch: if ( observed [ i ] - observed [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 196
score: 99.64286951864919
patch: if ( observed [ i ] < observed [ i ] ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 196
score: 99.63974294354838
patch: dev = ( ( Double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 196
score: 99.6361083984375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] ;
rank: 196
score: 99.63126627604167
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev / dev / dev ;
rank: 197
score: 99.70505777994792
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 197
score: 99.69833553538604
patch: else { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 197
score: 99.68778935185185
patch: sum CaMeL Sq += ( ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ) ;
rank: 197
score: 99.68154994419643
patch: dev = ( ( double ) observed [ i ] ) [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 197
score: 99.65874837239583
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - ( expected [ i ] - expected [ i ] ) ;
rank: 197
score: 99.65145670572916
patch: if ( ( observed [ i ] == expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 197
score: 99.63973911830357
patch: if ( observed [ i ] == ( expected [ i ] < expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 197
score: 99.6360614483173
patch: observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ;
rank: 197
score: 99.6312255859375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected ;
rank: 198
score: 99.7049560546875
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 198
score: 99.69786161534927
patch: dev = ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 198
score: 99.65132141113281
patch: double dev = ( ( double ) observed [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 198
score: 99.63102678571428
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 199
score: 99.68740931919643
patch: double expected [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 199
score: 99.68128380408653
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . dev ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 199
score: 99.65841767282197
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += $NUMBER$ * dev / dev / expected [ i ] ;
rank: 199
score: 99.65124963831019
patch: dev = ( ( double ) observed [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 199
score: 99.63968331473214
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 200
score: 99.70484834558823
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; i ++ ;
rank: 200
score: 99.69738420758928
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] *
rank: 200
score: 99.68723366477273
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - dev ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 200
score: 99.65113879788306
patch: if ( observed [ i ] - expected [ i ] == expected [ i ] ) sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 200
score: 99.64237467447917
patch: dev = observed [ i ] ; for ( int i = 0 ; i < observed . length ; i ++ ) { sum CaMeL Sq += dev * dev [ i ] ;
rank: 200
score: 99.63947889539931
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * expected [ i ] ;
rank: 200
score: 99.63557264539931
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 200
score: 99.63088091681985
patch: double observed [ ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 201
score: 99.69691975911458
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } return return sum CaMeL Sq ;
rank: 201
score: 99.68722795758929
patch: dev = expected [ i ] - expected [ i ] ; dev = dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 201
score: 99.65786447832662
patch: double dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 201
score: 99.65113740808823
patch: dev = observed [ i ] ; if ( expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 201
score: 99.64232700892858
patch: dev = observed [ i ] ; double sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 201
score: 99.63912200927734
patch: double ( observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 201
score: 99.63082978219697
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ; } return dev ;
rank: 202
score: 99.70455025337837
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 202
score: 99.69686550564236
patch: dev = ( ( double ) observed [ i ] - expected [ i ] + expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 202
score: 99.68027630974265
patch: dev = ( ( double ) observed [ i ] ) [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 202
score: 99.65784061316288
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * ( dev / expected [ i ] ) ;
rank: 202
score: 99.65092917049633
patch: try { double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 202
score: 99.64224330357143
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 202
score: 99.63899274553572
patch: synchronized ( observed [ i ] ) { dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 202
score: 99.63528878348214
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / $NUMBER$ / expected [ i ] ;
rank: 203
score: 99.70442708333333
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 203
score: 99.69673665364583
patch: int dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 203
score: 99.68011639569256
patch: dev = ( ( double ) observed [ i ] ) . observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 203
score: 99.63509114583333
patch: dev = ( ( double ) observed [ i ] ) . expected [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 203
score: 99.6305443548387
patch: dev = ( ( float ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 204
score: 99.70424212831439
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . 0 ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 204
score: 99.68609619140625
patch: dev = observed [ i ] ; { sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 204
score: 99.68004653033088
patch: buffer [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 204
score: 99.65087890625
patch: double dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 204
score: 99.64199086782095
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] + expected [ i ] ; } return sum CaMeL Sq ;
rank: 204
score: 99.63492838541667
patch: dev = ( ( double ) observed [ i ] . observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 204
score: 99.63027491714016
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / ( expected [ i ] - expected [ i ] ) ;
rank: 205
score: 99.70416434151785
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return observed ;
rank: 205
score: 99.67991129557292
patch: dev = ( ( double ) ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 205
score: 99.65765206473215
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } else { return sum CaMeL Sq ; }
rank: 205
score: 99.65077533143939
patch: if ( observed [ i ] - expected [ i ] <= expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 205
score: 99.64166618795956
patch: dev = observed [ i ] ; dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 205
score: 99.63874162946429
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 205
score: 99.63024139404297
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / ( dev / dev ) ;
rank: 206
score: 99.70389597039474
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 206
score: 99.69658833165323
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev [ i ] ;
rank: 206
score: 99.68583286830358
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev = dev * expected [ i ] ;
rank: 206
score: 99.65064380787037
patch: double ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 206
score: 99.63863002232142
patch: synchronized ( expected [ i ] ) { dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 206
score: 99.63023792613636
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev + expected [ i ] ;
rank: 207
score: 99.70380463471284
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * dev ;
rank: 207
score: 99.68583286830358
patch: dev = observed [ i ] - expected [ i ] ; dev = dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 207
score: 99.65750220514113
patch: if ( observed [ i ] - expected [ i ] != 0 ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 207
score: 99.65033721923828
patch: double dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 207
score: 99.63021065848214
patch: dev = ( ( double ) observed [ i ] - 1 [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 208
score: 99.69645743534483
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq ++ ; } return sum CaMeL Sq ;
rank: 208
score: 99.67941036739865
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . double CaMeL Value ( ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 208
score: 99.65004410282258
patch: dev = ( ( double ) observed [ i ] ) [ i ] ; { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 208
score: 99.63837028952206
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 208
score: 99.62989676339286
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / ( dev - expected [ i ] ) ;
rank: 209
score: 99.6961669921875
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / dev / dev / expected [ i ] ;
rank: 209
score: 99.68477507560483
patch: dev = observed [ i ] - expected [ i ] / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 209
score: 99.67932739257813
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ; return sum CaMeL Sq ;
rank: 209
score: 99.65710079308712
patch: dev = ( ( double ) observed [ i ] - expected [ i - 0 ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 209
score: 99.64134900323276
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 209
score: 99.63824821920956
patch: sum CaMeL Sq += dev * dev / ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 209
score: 99.63424366918103
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] - expected [ i ] ;
rank: 209
score: 99.62945915670956
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] * dev * expected [ i ] ;
rank: 210
score: 99.70338948567708
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] / observed [ i ] ;
rank: 210
score: 99.67919921875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] * dev ; } return sum CaMeL Sq ;
rank: 210
score: 99.65686798095703
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } if ( ! is CaMeL Non CaMeL Negative ( observed ) ) {
rank: 210
score: 99.64963600852273
patch: long dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 210
score: 99.63789367675781
patch: dev = ( ( double - observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 210
score: 99.634228515625
patch: double dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 210
score: 99.62935267857142
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev / dev / dev / dev ;
rank: 211
score: 99.68458510890152
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev = expected [ i ] ;
rank: 211
score: 99.67907384923987
patch: dev = ( ( double ) observed [ i ] - 1 [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 211
score: 99.63736049107143
patch: double observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 211
score: 99.63416708669355
patch: if ( observed [ i ] != null ) { sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 212
score: 99.70310756138393
patch: dev = ( dev [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 212
score: 99.67892548532197
patch: dev = observed : ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 212
score: 99.65670013427734
patch: dev = ( ( double ) observed [ i i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 212
score: 99.64921569824219
patch: byte dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 212
score: 99.63414809283088
patch: dev = ( ( double ) observed [ i ] - ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 212
score: 99.62901395909927
patch: float observed [ ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 213
score: 99.70277622767857
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 213
score: 99.65620561079545
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . max ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 213
score: 99.64915466308594
patch: dev = ( ( double ) observed [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 213
score: 99.64120662913604
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 214
score: 99.6787109375
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev ; return sum CaMeL Sq ;
rank: 214
score: 99.6561982125947
patch: dev = ( ( double ) observed [ i ] - expected , observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 214
score: 99.63705357142857
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 214
score: 99.62860630580357
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev ; sum CaMeL Sq += dev / dev / dev / expected [ i ] ;
rank: 215
score: 99.70239997632575
patch: dev = is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 215
score: 99.69576119087837
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 215
score: 99.65604285037878
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i + $NUMBER$ ] ;
rank: 215
score: 99.6489486694336
patch: dev = ( ( double - observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 215
score: 99.63688151041667
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 216
score: 99.6956558227539
patch: else dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 216
score: 99.68400327620968
patch: dev = ( ( double ) observed [ i ] - max [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 216
score: 99.67854077888258
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 216
score: 99.63685518152573
patch: double expected = observed [ i ] ; dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 216
score: 99.62825055803572
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev ; sum CaMeL Sq += dev / dev / dev / expected [ i ] ;
rank: 217
score: 99.70219870174633
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ;
rank: 217
score: 99.6956298828125
patch: dev = ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 217
score: 99.67848074776786
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev ; sum CaMeL Sq += dev * dev / expected [ i ] + dev ;
rank: 217
score: 99.65597626657197
patch: dev = ( ( Object ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 217
score: 99.64873676915323
patch: m = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 217
score: 99.63673270089286
patch: if ( ( observed [ i ] < expected [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 217
score: 99.6339111328125
patch: dev = Math . min ( observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 217
score: 99.62803548177084
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev * dev ;
rank: 218
score: 99.70179332386364
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 218
score: 99.69543087121212
patch: dev = ( ( long ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 218
score: 99.65583570075758
patch: if ( observed [ i ] - expected [ i ] - expected [ i ] ) sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 218
score: 99.64037272135417
patch: dev = ( ( double ) observed [ i ] ) ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 218
score: 99.63669162326389
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ; }
rank: 218
score: 99.62798549107143
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev / dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 219
score: 99.70143176663306
patch: dev = ( double ) ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 219
score: 99.6953125
patch: dev = ( ( int ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / dev / expected [ i ] ;
rank: 219
score: 99.67826450892858
patch: dev = ( ( ( double ) observed [ i ] ) - expected [ i ] ) * dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 219
score: 99.64848801185344
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if = dev * dev / expected [ i ] ;
rank: 219
score: 99.64027315027573
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 219
score: 99.6338408499053
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] + dev / expected [ i ] ;
rank: 219
score: 99.6279296875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] + dev / expected [ i ] ;
rank: 220
score: 99.70135663006756
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ;
rank: 220
score: 99.68340386284723
patch: dev = observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 220
score: 99.65567779541016
patch: dev = ( ( double ) observed [ i ] - expected . length ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 220
score: 99.64018031529018
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq = dev * dev / dev / expected [ i ] ;
rank: 220
score: 99.63633099724265
patch: dev = expected [ i ] ; dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 220
score: 99.63374720982142
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 221
score: 99.70123126055744
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 221
score: 99.695068359375
patch: dev = ( ( double ) observed [ i ] - expected [ i 1 ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 221
score: 99.68334197998047
patch: sum CaMeL Sq += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 221
score: 99.67811414930556
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) : expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 221
score: 99.64807891845703
patch: if ( observed [ i ] == ( ( double ) observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 221
score: 99.63623888739224
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] * expected [ i ] ;
rank: 221
score: 99.633515625
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) * dev / expected [ i ] ;
rank: 221
score: 99.62772623697917
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ) ;
rank: 222
score: 99.64803873697916
patch: ( ( double ) observed [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 222
score: 99.63330796185662
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / ( double ) expected [ i ] ;
rank: 222
score: 99.62762254284274
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 223
score: 99.68290201822917
patch: sum CaMeL Sq += dev * expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 223
score: 99.67743598090277
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev ;
rank: 223
score: 99.65525124289773
patch: dev = observed [ i ] - expected [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 223
score: 99.64767892020089
patch: if ( observed [ i ] == observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 223
score: 99.63602701822917
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] * expected [ i ] ;
rank: 223
score: 99.63328721788194
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 223
score: 99.6274773092831
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / ( double ) expected [ i ] ;
rank: 224
score: 99.70039220010081
patch: dev = ( ( double ) observed [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 224
score: 99.69462890625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev ;
rank: 224
score: 99.68255440848215
patch: float observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 224
score: 99.67721819196429
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return 0 ;
rank: 224
score: 99.63593885633681
patch: dev = dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } else { sum CaMeL Sq += dev * expected [ i ] ; }
rank: 224
score: 99.63315993088942
patch: observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ;
rank: 224
score: 99.62742614746094
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ) ;
rank: 225
score: 99.694580078125
patch: dev = ( ( double ) observed [ i ] ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 225
score: 99.63588169642857
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * dev * dev / expected [ i ] ;
rank: 225
score: 99.6330925436581
patch: if ( observed [ i ] - expected [ i ] < expected [ i ] ) { sum CaMeL Sq += observed [ i ] - expected [ i ] ; }
rank: 225
score: 99.62724451864919
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 226
score: 99.70030628551136
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] / sum CaMeL Sq ;
rank: 226
score: 99.6466423483456
patch: double expected = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 226
score: 99.63552024147727
patch: sum CaMeL Sq = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ;
rank: 226
score: 99.63292585100446
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) + expected [ i ] ;
rank: 226
score: 99.62713808001894
patch: if ( observed [ i ] - expected [ i ] > dev ) { sum CaMeL Sq += ( expected [ i ] - expected [ i ] ) ; }
rank: 227
score: 99.69425223214286
patch: dev = ( ( long ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 227
score: 99.68211495535714
patch: sum CaMeL Sq += observed [ i ] - expected [ i ] ; dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 227
score: 99.67696236275337
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * dev / expected [ i ] ; return sum CaMeL Sq ;
rank: 227
score: 99.65430405560662
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } else { return sum CaMeL Sq ;
rank: 227
score: 99.64649963378906
patch: double Math = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 227
score: 99.63546845407197
patch: dev = ( ( double ) observed [ i ] ) ; dev = dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 227
score: 99.63274468315973
patch: dev = ( ( double ) observed [ i ] ) . expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 227
score: 99.62703450520833
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) / ( expected [ i ] - expected [ i ] ) ;
rank: 228
score: 99.69422649515086
patch: dev = observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 228
score: 99.68204520089286
patch: dev = observed [ i ] ; sum CaMeL Sq += expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 228
score: 99.646240234375
patch: if ( observed [ i ] <= expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 228
score: 99.63955349392361
patch: dev = observed [ i ] ; sum CaMeL Sq += dev / dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 228
score: 99.62702985491072
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev / dev / dev / expected [ i ] ;
rank: 229
score: 99.69958948206019
patch: ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 229
score: 99.69366776315789
patch: dev = ( ( double ) observed [ i ] - expected [ i 1 ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 229
score: 99.64576822916666
patch: if observed [ i ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 229
score: 99.63950892857143
patch: dev = observed [ i ] ; for ( int i = 0 ; i < observed . length ; i ++ ) { dev = ( double ) observed [ i ] ;
rank: 229
score: 99.63500258501838
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ; }
rank: 229
score: 99.63227395450367
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq = dev * expected [ i ] ;
rank: 229
score: 99.62683526400862
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] * dev ;
rank: 230
score: 99.69953962053572
patch: sum CaMeL Sq += dev * ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 230
score: 99.693603515625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 230
score: 99.67684444304436
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 230
score: 99.65340169270833
patch: t = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 230
score: 99.63945007324219
patch: if ( observed [ i ] < observed [ i ] ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 230
score: 99.63487413194444
patch: dev = ( ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 230
score: 99.63216400146484
patch: double dev = ( ( double ) observed [ i ] ) . expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 230
score: 99.62665318080357
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev ;
rank: 231
score: 99.69927793560606
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] ; } return sum CaMeL Sq ;
rank: 231
score: 99.69345835092905
patch: if ( ! is CaMeL Positive ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 231
score: 99.68146383351294
patch: dev = expected [ i ] - expected [ i ] [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 231
score: 99.65318196614584
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev = expected [ i ] - expected [ i ] ;
rank: 231
score: 99.64562618371212
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if observed [ i ] = dev * dev / expected [ i ] ;
rank: 231
score: 99.63934129284274
patch: dev = observed [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } return sum CaMeL Sq ;
rank: 231
score: 99.63162878787878
patch: double dev = ( ( double ) observed [ i ] ) . double CaMeL Value ( ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 232
score: 99.69916130514706
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) [ 0 ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 232
score: 99.68145948840726
patch: dev = ( double ) observed [ i ] ; dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 232
score: 99.67657111672794
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } break ;
rank: 232
score: 99.65311104910714
patch: dev = ( ( double ) observed . length [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 232
score: 99.64556699810606
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 232
score: 99.63906565020162
patch: if ( observed [ i ] == observed [ i ] ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 232
score: 99.63465791590073
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev += expected [ i ] ;
rank: 232
score: 99.63159897748162
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] * expected [ i ] ;
rank: 233
score: 99.69907358530405
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev / dev * expected [ i ] ;
rank: 233
score: 99.69323052300348
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 233
score: 99.68140411376953
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 233
score: 99.67626293285473
patch: dev = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 233
score: 99.65309096827652
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected , observed [ i ] ;
rank: 233
score: 99.64554850260417
patch: dev = ( dev * observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 233
score: 99.6387939453125
patch: dev = observed [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ;
rank: 233
score: 99.63458426339285
patch: synchronized ( dev ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 233
score: 99.63153666834677
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 234
score: 99.68138292100694
patch: dev = expected [ i ] ; sum CaMeL Sq += observed [ i ] - expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 234
score: 99.63420104980469
patch: result = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 234
score: 99.63150024414062
patch: dev = ( ( double ) observed [ i ] - expected . [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 234
score: 99.6261689157197
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 235
score: 99.69297960069444
patch: dev = ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 235
score: 99.68119812011719
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 235
score: 99.67587280273438
patch: dev = ( ( double ) observed [ i ] - - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 235
score: 99.65287642045455
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i + 0 ] ;
rank: 235
score: 99.63849235983456
patch: dev = observed [ i ] ; if ( observed [ i ] < observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 235
score: 99.63411458333333
patch: dev = dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * expected [ i ] ;
rank: 235
score: 99.63142225477431
patch: dev = ( ( double ) observed [ i ] ) . expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ;
rank: 235
score: 99.62591911764706
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev [ i ] / dev [ i ] ;
rank: 236
score: 99.69873744419642
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 236
score: 99.69267003676471
patch: int dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 236
score: 99.68118625217014
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += expected [ i ] ;
rank: 236
score: 99.67578864820075
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] += dev ;
rank: 236
score: 99.65262726814517
patch: cur = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 236
score: 99.63141547309027
patch: dev = ( ( double ) observed [ i ] . expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 236
score: 99.6258544921875
patch: dev += ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 237
score: 99.69867907072368
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 237
score: 99.69265407986111
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 237
score: 99.6806869506836
patch: sum CaMeL Sq += ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 237
score: 99.65250418526786
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } return sum CaMeL Sq ; }
rank: 237
score: 99.631201171875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] * expected [ i ] ; }
rank: 237
score: 99.62585055443549
patch: z = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 238
score: 99.69251924402573
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 238
score: 99.68058530745968
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] ;
rank: 238
score: 99.67565524193549
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * max / expected [ i ] ;
rank: 238
score: 99.645263671875
patch: dev = ( ( double ) observed [ i ] - 0 . 0 ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 238
score: 99.638037109375
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 238
score: 99.62580640388258
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / dev / ( expected [ i ] - expected [ i ] ) ;
rank: 239
score: 99.69243706597223
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 239
score: 99.68034319196428
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) - dev ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 239
score: 99.67563608530405
patch: c = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 239
score: 99.64521340762867
patch: double expected = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected / expected [ i ] ;
rank: 239
score: 99.63799285888672
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 239
score: 99.6337890625
patch: dev ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 239
score: 99.63090515136719
patch: double dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] ;
rank: 239
score: 99.62575050636575
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev ; }
rank: 240
score: 99.6923828125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / dev / dev / expected [ i ] ;
rank: 240
score: 99.67562948690879
patch: tmp = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 240
score: 99.6522216796875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; else
rank: 240
score: 99.63762133049242
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += 0 * dev / dev / expected [ i ] ;
rank: 240
score: 99.6308349609375
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 240
score: 99.62566779641544
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / ( ( double ) observed [ i ] ) ;
rank: 241
score: 99.69232342694256
patch: dev = ( ( float ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 241
score: 99.67543153505068
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 241
score: 99.64515596277573
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) * dev ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 241
score: 99.63751715582771
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; else sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 241
score: 99.633203125
patch: sum CaMeL Sq = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * dev / expected [ i ] ;
rank: 241
score: 99.63068181818181
patch: dev = ( ( double ) observed [ i ] - 1 ) * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 241
score: 99.62557779947916
patch: if ( observed [ i ] - expected [ i ] > dev ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 242
score: 99.69709858141448
patch: ( ( double ) observed [ i ] - expected [ i ] ) . sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 242
score: 99.67989464962122
patch: sum CaMeL Sq = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 242
score: 99.67535041360294
patch: dev = ( ( double ) observed [ i ] ) . dev ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 242
score: 99.65205383300781
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } else {
rank: 242
score: 99.62548828125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev / dev ;
rank: 243
score: 99.69223764780405
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } else { return sum CaMeL Sq ;
rank: 243
score: 99.67530014935662
patch: i ++ ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 243
score: 99.65202562736742
patch: dev = ( ( double ) observed [ i ] - expected [ 0 ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 243
score: 99.64496034564394
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ expected [ i ] ;
rank: 243
score: 99.63726283482143
patch: dev = observed [ i ] ; if ( observed [ i ] > observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 243
score: 99.62529296875
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev / expected [ i ] ;
rank: 244
score: 99.63285688920455
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] / dev / expected [ i ] ;
rank: 244
score: 99.63005514705883
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * observed [ i ] ;
rank: 245
score: 99.69637276785714
patch: dev = null ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 245
score: 99.69213149126838
patch: dev = ( double ) observed [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } return sum CaMeL Sq ;
rank: 245
score: 99.67506810238487
patch: dev = ( ( double ) observed . [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 245
score: 99.65202085433468
patch: prev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 245
score: 99.6444794625947
patch: if ( observed [ i ] == ( ( double ) expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 245
score: 99.63278724407327
patch: dev [ i ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 245
score: 99.62998383620689
patch: double dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 246
score: 99.69607204861111
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } } return sum CaMeL Sq ;
rank: 246
score: 99.69209681919642
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / dev / expected [ i ] ;
rank: 246
score: 99.67474168346774
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] * dev ;
rank: 246
score: 99.64437103271484
patch: dev = ( ( double ) observed [ i ] ) * expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 246
score: 99.63276198814656
patch: sum CaMeL Sq = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 246
score: 99.62993621826172
patch: double dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ;
rank: 247
score: 99.69203096277573
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [
rank: 247
score: 99.67930160030242
patch: dev = ( ( double ) expected [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 247
score: 99.67465444711539
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 247
score: 99.65193684895833
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 247
score: 99.63273577008928
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ;
rank: 247
score: 99.62986127068015
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] [ expected [ i ] ;
rank: 247
score: 99.62489536830357
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev + dev / dev / expected [ i ] ;
rank: 248
score: 99.69589572482639
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] / expected [ i ] ;
rank: 248
score: 99.67903137207031
patch: sum CaMeL Sq += ( dev * observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 248
score: 99.65179966517857
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * sum CaMeL Sq ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 248
score: 99.64374542236328
patch: dev = ! ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 248
score: 99.63691541883681
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev / dev / dev / expected [ i ] ;
rank: 248
score: 99.63233100043402
patch: dev = ( ( double ) observed [ i ] - observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 249
score: 99.69578758445945
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 249
score: 99.691748046875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return false ;
rank: 249
score: 99.67444196428572
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ) * dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 249
score: 99.6517001065341
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; continue ;
rank: 249
score: 99.63658040364584
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev * dev / expected [ i ] ;
rank: 249
score: 99.63231743706598
patch: sum CaMeL Sq += dev * expected [ i ] ; } dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 249
score: 99.629150390625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] - expected [ i ] ; }
rank: 249
score: 99.62432338169643
patch: if ( observed [ i ] - expected [ i ] > expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 250
score: 99.69568241003788
patch: dev = ( ( double ) observed [ i ] - expected , expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 250
score: 99.65157433712122
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / min [ i ] ;
rank: 250
score: 99.64319241431451
patch: if ( observed [ i ] != ( double ) observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 250
score: 99.63600027901786
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i + observed . length ] ;
rank: 250
score: 99.6322533392137
patch: dev = observed [ i ] ; dev = dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 250
score: 99.62909146012932
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 250
score: 99.624267578125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] + dev / dev ;
rank: 251
score: 99.67891068892045
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev = expected [ i ] ;
rank: 251
score: 99.63599200581395
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { return sum CaMeL Sq ; }
rank: 251
score: 99.62908380681819
patch: dev = ( ( double ) observed [ i ] - expected . length [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 251
score: 99.62420654296875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev / ( expected [ i ] - expected [ i ] ) ;
rank: 252
score: 99.69527950802365
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 252
score: 99.69130859375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] * dev ;
rank: 252
score: 99.67870330810547
patch: dev = ( ( double ) observed [ i ] ) ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 252
score: 99.67422146267361
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) += expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 252
score: 99.65122662168561
patch: r = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 252
score: 99.64297688802084
patch: dev = ( double - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 252
score: 99.62904268152573
patch: if ( observed [ i ] != observed [ i ] ) { sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 253
score: 99.69527762276786
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ;
rank: 253
score: 99.65115356445312
patch: dev = ( ( double ) observed [ i ++ ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 253
score: 99.6428931451613
patch: dev = ( ( double ) observed [ i ] ) [ expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 253
score: 99.63203938802083
patch: sum CaMeL Sq += observed [ i ] ; } dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 253
score: 99.62373310810811
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 254
score: 99.69122149493244
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev [ i ] ; } return sum CaMeL Sq ;
rank: 254
score: 99.67844460227273
patch: double observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 254
score: 99.64288736979167
patch: dev = ( dev * expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 254
score: 99.63563939144737
patch: dev = observed [ i ] ; for ( int i = 0 ; i < observed . length ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 254
score: 99.62872129498106
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / $NUMBER$ ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 254
score: 99.62362093538852
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 255
score: 99.69116908482142
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / dev / dev [ i ] ;
rank: 255
score: 99.67820785984848
patch: sum CaMeL Sq = observed [ i ] - expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 255
score: 99.67392914870689
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; } return sum CaMeL Sq ;
rank: 255
score: 99.65104906486742
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / $STRING$ / expected [ i ] ;
rank: 255
score: 99.6428451538086
patch: double ( ( ( double ) observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 255
score: 99.62868430397727
patch: dev += ( ( ( double ) observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 255
score: 99.62349446614583
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] + expected [ i ] ;
rank: 256
score: 99.69108634159483
patch: dev = ( ( int ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 256
score: 99.67820231119792
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += expected [ i ] ;
rank: 256
score: 99.65104166666667
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 256
score: 99.6353056936553
patch: dev = observed [ i ] [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] [ i ] ; } return sum CaMeL Sq ;
rank: 256
score: 99.63172496448864
patch: dev = dev [ i ] ; dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 256
score: 99.62839642693015
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] * dev / expected [ i ] ;
rank: 256
score: 99.62326142282197
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] / dev ;
rank: 257
score: 99.69106313344595
patch: dev = ( ( ( double ) observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 257
score: 99.67368296030405
patch: dev = observed [ i ] + expected [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 257
score: 99.65092329545455
patch: dev = ( ( double ) observed [ i ] [ expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 257
score: 99.6427334872159
patch: for ( int i = 0 ; i < expected [ i ] ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 257
score: 99.63162051930146
patch: double observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 257
score: 99.62321428571428
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ; sum CaMeL Sq += dev ;
rank: 258
score: 99.69454048775337
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ( dev * expected [ i ] ) ; } return sum CaMeL Sq ;
rank: 258
score: 99.67791748046875
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 258
score: 99.67361357717803
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev ;
rank: 258
score: 99.62818100873162
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * expected [ i ] - expected [ i ] ;
rank: 258
score: 99.6231918334961
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] / expected [ i ] ;
rank: 259
score: 99.69078408518145
patch: if ( ! is CaMeL Positive ( observed [ i ] - expected [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 259
score: 99.67784534801136
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; ) ;
rank: 259
score: 99.65084838867188
patch: if ( observed [ i ] - expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 259
score: 99.63497585720486
patch: if ( is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 259
score: 99.63141500538794
patch: sum CaMeL Sq = ( ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 259
score: 99.62306167140152
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * ( dev * expected [ i ] ) ;
rank: 260
score: 99.67339922930744
patch: dev = ( ( double ) observed [ i ] ) * observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 260
score: 99.6424919577206
patch: dev = observed [ i ] ; if ( observed [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 260
score: 99.63490188953489
patch: if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 260
score: 99.63125949435764
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 260
score: 99.62803994455645
patch: if ( observed [ i ] instanceof double ) { sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 260
score: 99.62303112399194
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev + expected [ i ] ;
rank: 261
score: 99.69426335515203
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 261
score: 99.67756696428572
patch: dev = expected [ i ] ; int sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 261
score: 99.65043501420455
patch: dev = ( ( Integer ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 261
score: 99.6346435546875
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / 1 / expected [ i ] ;
rank: 262
score: 99.694091796875
patch: sum CaMeL Sq += dev * ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * ( expected [ i ] + expected [ i ] ) ;
rank: 262
score: 99.67733651620371
patch: dev = expected [ i ] - expected [ i ] ; { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 262
score: 99.64223040956439
patch: dev = ( ( double ) observed [ i ] ) / expected [ i ] ; { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 262
score: 99.63445848034274
patch: dev = observed [ i ] - expected [ i ] * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 262
score: 99.63114711216518
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev * expected [ i ] ;
rank: 263
score: 99.69381975446429
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] - sum CaMeL Sq ;
rank: 263
score: 99.63099016462054
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ;
rank: 263
score: 99.62763829385081
patch: dev += observed [ i ] [ expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] [ expected [ i ] ;
rank: 263
score: 99.62290852864584
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev * dev / dev ;
rank: 264
score: 99.69376847550676
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] ;
rank: 264
score: 99.69022042410714
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / $NUMBER$ / expected [ i ] ;
rank: 264
score: 99.67724609375
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 264
score: 99.67286900111607
patch: dev = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 264
score: 99.649267578125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * * expected [ i ] ;
rank: 264
score: 99.64192708333333
patch: if ( expected [ i ] - expected [ i ] > expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 264
score: 99.63087417140152
patch: dev = ( ( double - observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 264
score: 99.62756717566288
patch: dev += observed [ i ] - ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 264
score: 99.622900390625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ) ;
rank: 265
score: 99.69361049107142
patch: dev = ( double ) ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 265
score: 99.69020708869485
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ) ;
rank: 265
score: 99.6728451377467
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * expected [ i ] ; return sum CaMeL Sq ;
rank: 265
score: 99.64917755126953
patch: dev = ( ( double ) [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 265
score: 99.63082570043103
patch: expected [ i ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 265
score: 99.62288411458333
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 266
score: 99.69357392282197
patch: dev : dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 266
score: 99.69007025824652
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ) ; } return sum CaMeL Sq ;
rank: 266
score: 99.677197265625
patch: dev = observed [ i ] ; ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 266
score: 99.67281668526786
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] + dev * dev ;
rank: 266
score: 99.64913940429688
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ]
rank: 266
score: 99.64165581597223
patch: dev = observed [ i ] / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 266
score: 99.63401227678571
patch: dev = observed [ i ] ; if ( observed [ i ] >= observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 266
score: 99.63080424647177
patch: k = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 266
score: 99.62741181344697
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / $NUMBER$ / expected [ i ] ;
rank: 266
score: 99.62279485887096
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] / dev / expected [ i ] ;
rank: 267
score: 99.69332546657986
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] + observed [ i ] ;
rank: 267
score: 99.67712751116072
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev = dev ;
rank: 267
score: 99.67268660261824
patch: dev = observed [ i ] - expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 267
score: 99.64897303427419
patch: dev = ( ( short ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 267
score: 99.64159368699596
patch: dev = ( ( double ) observed [ i ] ) [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 267
score: 99.63077566964286
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return dev * expected [ i ] ;
rank: 267
score: 99.62736563846983
patch: dev += observed [ i ] * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] * expected [ i ] ;
rank: 267
score: 99.62268460181451
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 268
score: 99.69310863597973
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return 0 . 0 ;
rank: 268
score: 99.67710141782408
patch: dev = observed [ i ] - expected [ i ] ; { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 268
score: 99.67254143792229
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 268
score: 99.648681640625
patch: dev = ( ( double ) observed [ i ] - expected . length ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 268
score: 99.64158676609848
patch: for ( int i = observed [ i ] ; i > 0 ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 268
score: 99.63396895559211
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 268
score: 99.62721819196429
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . double CaMeL Value ( ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 268
score: 99.62257893880208
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] * dev / expected [ i ] ;
rank: 269
score: 99.6894013375947
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) ;
rank: 269
score: 99.67708042689732
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ;
rank: 269
score: 99.67247721354167
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 269
score: 99.64151000976562
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * expected / expected [ i ] ;
rank: 269
score: 99.62705993652344
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 269
score: 99.62247983870968
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] / dev ;
rank: 270
score: 99.6930731411638
patch: ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 270
score: 99.677001953125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 270
score: 99.6481697328629
patch: h = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 270
score: 99.6414566040039
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected / expected [ i ] ;
rank: 270
score: 99.63345829133064
patch: dev = observed [ i ] ; dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 270
score: 99.62684286794355
patch: dev = ( ( double ) observed [ i ] - start [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 270
score: 99.62236064189189
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ; sum CaMeL Sq += dev / dev ;
rank: 271
score: 99.68938337053571
patch: dev = ( ( ( double ) observed [ i ] ) + expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 271
score: 99.6723869077621
patch: dev = ( ( double ) observed [ i ] ) - observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 271
score: 99.64812677556819
patch: dev = ( ( double ) observed [ i ] - expected [ i + 0 ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 271
score: 99.64124971277573
patch: for ( int i = 0 ; i < dev / expected [ i ] ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 271
score: 99.63046061197916
patch: if ( ( observed [ i ] < expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 272
score: 99.67623465401786
patch: sum CaMeL Sq = ( ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 272
score: 99.67227957589286
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) / dev ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 272
score: 99.63336859809027
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq ++ ;
rank: 272
score: 99.63016880580358
patch: if ( observed [ i ] < expected [ i ] ) { dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 272
score: 99.62652587890625
patch: if ( observed [ i ] - expected [ i ] > expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 273
score: 99.69277211782095
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 273
score: 99.68899274553571
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev * dev / dev / expected [ i ] ;
rank: 273
score: 99.67554498487904
patch: dev = dev [ i ] - expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 273
score: 99.67203336148648
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += $NUMBER$ * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 273
score: 99.64784683719758
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ) ; } return sum CaMeL Sq ;
rank: 273
score: 99.633349609375
patch: dev = observed [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ;
rank: 273
score: 99.63006232766544
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev ;
rank: 273
score: 99.62618582589286
patch: dev = ( ( double ) observed [ i ] ) . sum CaMeL Sq [ expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 273
score: 99.62222782258064
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] * dev / dev ;
rank: 274
score: 99.69271047491776
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 274
score: 99.68875769412878
patch: dev = ( ( double ) observed [ i ] - value [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 274
score: 99.67532784598214
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 274
score: 99.63003627232143
patch: sum CaMeL Sq += dev * dev / ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 274
score: 99.62581380208333
patch: sum CaMeL Sq += ( observed [ i ] - expected [ i ] - expected [ i ] ) * expected [ i ] ;
rank: 274
score: 99.62209903492646
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 275
score: 99.68875200320512
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 275
score: 99.67189534505208
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * observed [ i ] ;
rank: 275
score: 99.64105435075432
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev = dev * dev / expected [ i ] ;
rank: 275
score: 99.62990993923611
patch: dev = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 275
score: 99.62202845982142
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev ;
rank: 276
score: 99.69233972886029
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] . expected [ i ] ;
rank: 276
score: 99.67496744791667
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 276
score: 99.671630859375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev ; sum CaMeL Sq += dev * dev / expected [ i ] * dev ;
rank: 276
score: 99.64739990234375
patch: dev = = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 276
score: 99.63332868303571
patch: if ( is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 276
score: 99.62988959418402
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; } else { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 277
score: 99.69230883049242
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . i ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 277
score: 99.67488887392241
patch: dev = ( ( double ) observed [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 277
score: 99.64735855594758
patch: temp = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 277
score: 99.6407470703125
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) - dev ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 277
score: 99.62985491071429
patch: double sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 277
score: 99.6256103515625
patch: double dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] - expected [ i ] ;
rank: 278
score: 99.69212341308594
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ;
rank: 278
score: 99.68857106854838
patch: dev = observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 278
score: 99.67138012035473
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 278
score: 99.64716954385081
patch: dev = observed [ i ] - expected [ i ] [ expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 278
score: 99.64072117660984
patch: if ( observed [ i ] * expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 278
score: 99.63325500488281
patch: if ( observed [ i ] == observed [ i ] ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 278
score: 99.6297966452206
patch: observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 278
score: 99.62546735491071
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 279
score: 99.69209248310811
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 279
score: 99.67469618055556
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 279
score: 99.6471435546875
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] - expected [ i ] ;
rank: 279
score: 99.64069366455078
patch: dev = ( ( Integer ) observed [ i ] ) . int CaMeL Value ( ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 279
score: 99.62967681884766
patch: dev = ( ( Double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 279
score: 99.62156628024194
patch: j = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 280
score: 99.69196912977431
patch: dev = ( ( double ) is CaMeL Positive ( expected [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 280
score: 99.68834267893145
patch: dev = ( ( ( double ) observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 280
score: 99.67121930803572
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected . length ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 280
score: 99.64683948863636
patch: b = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 280
score: 99.6406021118164
patch: double observed [ i ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 280
score: 99.62956686580883
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * expected [ i ] ;
rank: 280
score: 99.62143049568965
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] + expected [ i ] ;
rank: 281
score: 99.64677290482955
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] . length ;
rank: 281
score: 99.64043426513672
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 281
score: 99.63310546875
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 281
score: 99.62131696428571
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev + dev / dev / dev / expected [ i ] ;
rank: 282
score: 99.69168338260135
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 282
score: 99.68807198660714
patch: dev = ( ( double ) observed [ i ] - value [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 282
score: 99.67438299005681
patch: dev = expected [ i ] - expected [ i ] ; dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 282
score: 99.6710433959961
patch: dev = observed [ i ] ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 282
score: 99.64033777573529
patch: final double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 282
score: 99.629541015625
patch: dev = observed [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 282
score: 99.62469482421875
patch: dev += ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) / expected [ i ] ;
rank: 282
score: 99.62117745535714
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( expected [ i ] > dev ) { sum CaMeL Sq += dev ; }
rank: 283
score: 99.62928989955357
patch: dev = observed [ i ] ; dev = dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 283
score: 99.62108696831598
patch: dev = observed [ i ] - expected [ i ] ; if ( sum CaMeL Sq > dev ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 284
score: 99.68779839409723
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 284
score: 99.67094029017858
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev / dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 284
score: 99.64012932054925
patch: if ( expected [ i ] == ( ( double ) observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 284
score: 99.62926876183712
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev / expected [ i ] ;
rank: 284
score: 99.62456752232143
patch: dev = ( ( double ) observed [ i ] ) . sum CaMeL Sq += dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 284
score: 99.621044921875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected / expected [ i ] ;
rank: 285
score: 99.69147283380681
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected / expected [ i ] ;
rank: 285
score: 99.68767346833882
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } sum CaMeL Sq += sum CaMeL Sq ;
rank: 285
score: 99.67059129284274
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] + expected [ i ] ;
rank: 285
score: 99.6465552545363
patch: dev = ( ( double ) observed [ i ] - expected [ 1 ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 285
score: 99.64011056082589
patch: dev = ( ( double ) observed [ i ] ) - dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 285
score: 99.62906376008064
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; } sum CaMeL Sq += dev * expected [ i ] ;
rank: 285
score: 99.62431640625
patch: sum CaMeL Sq += ( observed [ i ] - expected [ i ] ) ; } dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 285
score: 99.62092420789931
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] / expected [ i ] ;
rank: 286
score: 99.67052892736487
patch: dev = ( ( double ) observed [ i ] ) - observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 286
score: 99.64645911907327
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq -= dev * expected [ i ] ;
rank: 286
score: 99.62904866536458
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = dev / expected [ i ] ;
rank: 286
score: 99.62408040364583
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) * expected [ i ] ;
rank: 287
score: 99.69114815848214
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 287
score: 99.68739149305556
patch: dev = ( ( double ) observed [ i ] - expected [ i 1 ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 287
score: 99.67404267282197
patch: sum CaMeL Sq += ( ( float ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 287
score: 99.67042335304055
patch: result = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 287
score: 99.64645478219697
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * true / dev / expected [ i ] ;
rank: 287
score: 99.6400146484375
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 287
score: 99.62898297991072
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 287
score: 99.62366440716912
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / ( double ) observed [ i ] ;
rank: 287
score: 99.62088919974663
patch: dev = ( ( Double ) observed [ i ] - expected [ i ] ) . double CaMeL Value ( ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 288
score: 99.67396988407258
patch: dev = expected [ i ] - expected [ i ] * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 288
score: 99.67035435267857
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] - dev ;
rank: 288
score: 99.62897491455078
patch: sum CaMeL Sq += dev * ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 288
score: 99.62082170758929
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] / dev / dev ;
rank: 289
score: 99.6738702182112
patch: dev = observed [ i ] - expected [ i ] [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 289
score: 99.62880859375
patch: sum CaMeL Sq += ( ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 289
score: 99.62350463867188
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] - expected [ i ] ;
rank: 290
score: 99.68731166294643
patch: dev = ( ( double ) observed [ i ] - expected [ i - 1 ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 290
score: 99.6737572454637
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 290
score: 99.66981090198864
patch: dev = ( ( double ) observed [ i ] - ( expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 290
score: 99.63194274902344
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / - expected [ i ] ;
rank: 290
score: 99.62876892089844
patch: dev = ( ( double ) observed [ i ] ) . observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 290
score: 99.6234375
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) / expected [ i ] ;
rank: 290
score: 99.62037612452652
patch: dev = ( ( double ) observed [ i ] - 1 [ i ] ) ; sum CaMeL Sq += dev / dev / dev / expected [ i ] ;
rank: 291
score: 99.67361765894397
patch: ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 291
score: 99.64607979910714
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * max [ i ] ; } return sum CaMeL Sq ;
rank: 291
score: 99.6396255493164
patch: if ( observed [ i ] != ( ( double ) observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 291
score: 99.62326882102273
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * dev /
rank: 291
score: 99.62009193157327
patch: dev = ( ( double ) observed [ i ] - 1 [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 292
score: 99.6904929832176
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ;
rank: 292
score: 99.68722286739865
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ 0 ] ; } return sum CaMeL Sq ;
rank: 292
score: 99.67344835069444
patch: dev = ( ( double ) expected [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 292
score: 99.66960375236742
patch: dev = ( ( double ) observed [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 292
score: 99.645947265625
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += expected [ i ] ;
rank: 292
score: 99.63942649147727
patch: if ( expected [ i ] == expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 292
score: 99.62872129498106
patch: dev = ( ( double ) observed [ i ] ) ; dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 292
score: 99.62005060369319
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 293
score: 99.68713772681451
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ 0 ] ;
rank: 293
score: 99.67336943655303
patch: sum CaMeL Sq += observed [ i ] - expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 293
score: 99.66959897933468
patch: dev = observed [ i ] + expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 293
score: 99.63938993566177
patch: this . dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 293
score: 99.6286980124081
patch: dev = ( ( double ) observed [ i ] ) ; dev = dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 294
score: 99.68712660845588
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev [ i ] ;
rank: 294
score: 99.67336018880208
patch: dev = observed [ i ] ; sum CaMeL Sq += expected [ i ] - expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 294
score: 99.64590454101562
patch: if ( observed [ i ] - expected [ i ] + expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 294
score: 99.63930191532258
patch: double ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 294
score: 99.62865532769098
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; } else { sum CaMeL Sq += dev * expected [ i ] ; }
rank: 294
score: 99.62295352711396
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ;
rank: 295
score: 99.63909553079044
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) != dev ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 295
score: 99.63120524088542
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 295
score: 99.62864685058594
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; ;
rank: 295
score: 99.62291434151786
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { sum CaMeL Sq += ( observed [ i ] - expected [ i ] ) ; }
rank: 295
score: 99.61988661024306
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] / dev / dev / expected [ i ] ;
rank: 296
score: 99.68986467633928
patch: dev = ( ( expected [ i ] - expected [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 296
score: 99.66926203547297
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ; } return sum CaMeL Sq ;
rank: 296
score: 99.64569276751894
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . length ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 296
score: 99.63905164930556
patch: sum CaMeL Sq += ( ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ) ;
rank: 296
score: 99.63119303385416
patch: dev = observed [ i ] ; dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 296
score: 99.62855050223214
patch: double expected [ ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 296
score: 99.6228386374081
patch: for ( int i = 0 ; i < observed [ i ] ; i ++ ) { sum CaMeL Sq += observed [ i ] - expected [ i ] ; }
rank: 297
score: 99.64569276751894
patch: v = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 297
score: 99.63880112591912
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 297
score: 99.63108197380515
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * $NUMBER$ / expected [ i ] ;
rank: 297
score: 99.62827435661765
patch: sum CaMeL Sq += ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 297
score: 99.622802734375
patch: dev = ( ( double ) observed [ i ] ) . sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 297
score: 99.61976947206439
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev / dev [ i ] ;
rank: 298
score: 99.68665597098214
patch: dev = ( ( double ) observed [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 298
score: 99.6692092483108
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ; } return sum CaMeL Sq ;
rank: 298
score: 99.64548561789773
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev << dev / dev / expected [ i ] ;
rank: 298
score: 99.6385986328125
patch: if ( ( double ) observed [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 298
score: 99.628173828125
patch: if ( observed [ i ] >= expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 298
score: 99.61976725260416
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev ;
rank: 299
score: 99.68969029017858
patch: dev = ( ( double ) observed [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 299
score: 99.67293548583984
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 299
score: 99.62798713235294
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected / expected [ i ] ; }
rank: 299
score: 99.62269112723214
patch: if ( observed [ i ] - expected [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 300
score: 99.66865619860198
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 300
score: 99.64508819580078
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) $NUMBER$ ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 300
score: 99.63081752232142
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += 1 * dev / dev / dev / expected [ i ] ;
rank: 300
score: 99.62790934244792
patch: dev = ( ( double ) observed [ i ] ) ; dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 300
score: 99.62261439732143
patch: if ( observed [ i ] instanceof double [ ] ) { sum CaMeL Sq += ( ( double [ ] ) observed [ i ] ) . double CaMeL Value ( ) ;
rank: 301
score: 99.68643765836148
patch: dev = ( ( long ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 301
score: 99.6685279107863
patch: dev = observed [ i ] * expected [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 301
score: 99.64499733664773
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . start ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 301
score: 99.6277743252841
patch: sum CaMeL Sq = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] ;
rank: 301
score: 99.62258818655303
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ) ; }
rank: 301
score: 99.619482421875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( expected [ i ] == dev ) { sum CaMeL Sq += dev ; }
rank: 302
score: 99.68924386160714
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return expected ;
rank: 302
score: 99.67284416429925
patch: dev = ( ( double ) observed [ i ] - expected [ i ] , dev ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 302
score: 99.63837260584677
patch: dev = ( ( double ) observed [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 302
score: 99.63073381696428
patch: dev = observed [ i ] ; if ( observed [ i ] >= expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 302
score: 99.61939216382575
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / dev ;
rank: 303
score: 99.67269112723214
patch: dev = observed [ i ] ; sum CaMeL Sq = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 303
score: 99.64484197443181
patch: n = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 303
score: 99.63827514648438
patch: b = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 303
score: 99.63046746504934
patch: dev = observed [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 303
score: 99.6276496438419
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * expected [ i ] ; }
rank: 303
score: 99.62235884232955
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / $NUMBER$ / dev [ i ] ;
rank: 303
score: 99.61933244977679
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev ;
rank: 304
score: 99.686279296875
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] - expected [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 304
score: 99.67244466145833
patch: dev = observed [ i ] ; sum CaMeL Sq += observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 304
score: 99.64473601310483
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev << dev / expected [ i ] ;
rank: 304
score: 99.63821411132812
patch: p = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 304
score: 99.62755533854167
patch: dev [ i ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 304
score: 99.6222908266129
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev / expected [ i ] ;
rank: 304
score: 99.61931218327703
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / ( expected [ i ] - sum CaMeL Sq ) ;
rank: 305
score: 99.68625139508929
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ 0 ] ;
rank: 305
score: 99.66831527217742
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev ;
rank: 305
score: 99.64460523200758
patch: dev = ( ( double ) observed [ i ] - expected [ i + $NUMBER$ ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 305
score: 99.61925920758928
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / ( expected [ i ] - dev ) ;
rank: 306
score: 99.68904903017241
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] + expected [ i ] ;
rank: 306
score: 99.68592664930556
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] ;
rank: 306
score: 99.64448399697581
patch: dev = ( ( double ) observed [ i ] - err [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 306
score: 99.63801820816532
patch: if ( ( double ) observed [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 306
score: 99.6269172219669
patch: dev = dev [ i ] ; dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 306
score: 99.62222377232143
patch: dev = observed [ i ] - ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 306
score: 99.61923104745371
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] ;
rank: 307
score: 99.64396158854167
patch: dev = ( ( double ) observed [ i ] - dev ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 307
score: 99.637939453125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 307
score: 99.62681361607143
patch: synchronized ( expected ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 307
score: 99.62215169270833
patch: dev = observed [ i ] - expected [ i ] ; ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 308
score: 99.64337565104167
patch: dev = ( ( double ) observed [ i ] - [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 308
score: 99.6220939390121
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 308
score: 99.61891276041666
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * ( dev / dev ) ;
rank: 309
score: 99.68538411458333
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } sum CaMeL Sq += dev ;
rank: 309
score: 99.67206401209677
patch: dev = ( ( double ) observed [ i ] ) / expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 309
score: 99.66789476799242
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 309
score: 99.63746744791666
patch: dev = ( ( double ) observed [ i ] ) [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 309
score: 99.62671576605902
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 309
score: 99.62201518397177
patch: dev = Math . floor ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 309
score: 99.61885579427083
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / dev / dev ;
rank: 310
score: 99.685302734375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 310
score: 99.67188856336806
patch: dev = dev / observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 310
score: 99.64312220982143
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . max ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 310
score: 99.63735499526516
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 310
score: 99.62647879464286
patch: dev = dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 310
score: 99.61885209517045
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev / dev / dev / expected [ i ] ;
rank: 311
score: 99.68860212053572
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 311
score: 99.68528793797348
patch: if ( ! is CaMeL Non CaMeL Negative ( expected [ i ] - expected [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 311
score: 99.6372265625
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) - expected [ i ] ) ;
rank: 311
score: 99.62947126116072
patch: dev = observed [ i ] ; if ( observed [ i ] != observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 311
score: 99.62642785274622
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] / dev * expected [ i ] ;
rank: 312
score: 99.68511372227823
patch: dev = ( ( double ) observed [ i ] - value [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 312
score: 99.66762222782258
patch: start = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 312
score: 99.64261750252017
patch: Positive = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 312
score: 99.63713836669922
patch: dev = ( double ) ( observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 312
score: 99.62944479549633
patch: dev = observed [ i ] ; if ( observed [ i ] > observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 312
score: 99.62640183971774
patch: dev = ( ( double ) observed [ i ] * expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 312
score: 99.62184053308823
patch: if ( observed [ i ] == observed [ i ] ) { sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 312
score: 99.61874684979838
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev - dev / expected [ i ] ;
rank: 313
score: 99.68498973357372
patch: dev = ( ( double ) observed [ i ] || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) ;
rank: 313
score: 99.67169867621527
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; } sum CaMeL Sq += dev * expected [ i ] ;
rank: 313
score: 99.66758510044643
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev ;
rank: 313
score: 99.64246786794355
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / double [ i ] ;
rank: 313
score: 99.63712040070564
patch: g = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 313
score: 99.62633514404297
patch: j = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 313
score: 99.62174944196428
patch: double observed [ i ] = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ;
rank: 314
score: 99.66755964949324
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * 0 / expected [ i ] ; } return sum CaMeL Sq ;
rank: 314
score: 99.64244791666667
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * expected [ i ] ;
rank: 314
score: 99.6370261863426
patch: int dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 314
score: 99.6291144875919
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += 1 * dev / expected [ i ] ;
rank: 314
score: 99.62174479166667
patch: dev += observed [ i ] - expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 314
score: 99.61870659722223
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += expected [ i ] / expected [ i ] ;
rank: 315
score: 99.688232421875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 315
score: 99.68475526751894
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += observed [ i ] ; } return sum CaMeL Sq ;
rank: 315
score: 99.67137315538194
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += observed [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 315
score: 99.6369865171371
patch: dev -= ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 315
score: 99.62892104640152
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * 0 / dev / expected [ i ] ;
rank: 315
score: 99.62624782986111
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += expected [ i ] ;
rank: 315
score: 99.62173574942129
patch: double dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 315
score: 99.61869812011719
patch: dev = ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 316
score: 99.6881462545956
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] + expected [ i ] ;
rank: 316
score: 99.68473772321428
patch: c = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 316
score: 99.67127182904412
patch: dev = expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 316
score: 99.64223947832662
patch: if ( observed [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 316
score: 99.62872314453125
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 316
score: 99.6262451171875
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev ;
rank: 316
score: 99.62166101792279
patch: double dev = ( observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 316
score: 99.61863141741071
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev + expected [ i ] ;
rank: 317
score: 99.68794869087837
patch: sum CaMeL Sq += dev * ( expected [ i ] + expected [ i ] ) ; sum CaMeL Sq += dev * ( expected [ i ] - expected [ i ] ) ;
rank: 317
score: 99.67100306919643
patch: dev = observed [ i ] ; dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 317
score: 99.66740788640203
patch: l = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 317
score: 99.64206891741071
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . max ( ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 317
score: 99.62610581341912
patch: int sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 317
score: 99.62145278033088
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return ;
rank: 318
score: 99.68775893702652
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; try { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 318
score: 99.64176432291667
patch: if ( observed [ i ] - expected [ i ] - observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 318
score: 99.63655308314732
patch: if ( expected [ i ] == observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 318
score: 99.61822324810606
patch: dev = ( ( double [ ] ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 319
score: 99.68770714962122
patch: dev = ( ( double ) ( observed [ i ] + expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 319
score: 99.68450753348215
patch: tmp = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 319
score: 99.67068797144397
patch: dev = ( double ) expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 319
score: 99.66713075380068
patch: dev = observed [ i ] - expected [ i ] * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 319
score: 99.64160943800404
patch: x = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 319
score: 99.63624572753906
patch: d = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 319
score: 99.62839577414773
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; return sum CaMeL Sq ;
rank: 319
score: 99.62129350142045
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / ( observed [ i ] - expected [ i ] ) ;
rank: 319
score: 99.61798967633929
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ; } return dev / dev ;
rank: 320
score: 99.68761877111487
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq + dev ;
rank: 320
score: 99.68438895089285
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; * /
rank: 320
score: 99.64153421336206
patch: i = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 320
score: 99.63615148207721
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 320
score: 99.62578268612133
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; } else { sum CaMeL Sq += dev * expected [ i ] ; }
rank: 320
score: 99.61797885237068
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev / expected [ i ] ;
rank: 321
score: 99.63611209753788
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected / dev / expected [ i ] ;
rank: 321
score: 99.62120768229167
patch: dev = ( ( double ) observed [ i ] - ( expected [ i ] - expected [ i ] ) ) * expected [ i ] ;
rank: 322
score: 99.66694641113281
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 322
score: 99.63602447509766
patch: if ( expected [ i ] - expected [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 322
score: 99.62528351814517
patch: sum CaMeL Sq += ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 322
score: 99.61796431107955
patch: if ( observed [ i ] - expected [ i ] > expected [ i ] ) { sum CaMeL Sq += dev / dev / expected [ i ] ; }
rank: 323
score: 99.68732766544117
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] + observed [ i ] ;
rank: 323
score: 99.68379211425781
patch: if ( ! is CaMeL Positive ( observed [ i ] - expected [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 323
score: 99.66688755580357
patch: dev = ( double ) observed [ i ] * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 323
score: 99.62510770909927
patch: dev = ( ( double ) observed [ i ] ) ; dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 323
score: 99.61731377963362
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev ;
rank: 324
score: 99.687255859375
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 324
score: 99.66969129774306
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; } sum CaMeL Sq += dev * expected [ i ] ;
rank: 324
score: 99.66655815972223
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) % expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 324
score: 99.64059627757354
patch: if ( observed [ i ] - expected [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 324
score: 99.63573478929925
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = dev * dev / expected [ i ] ;
rank: 324
score: 99.6209013967803
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - $STRING$ ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 324
score: 99.61730238970588
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev / dev / dev / expected [ i ] ;
rank: 325
score: 99.68716091579861
patch: dev = ( ( double ) is CaMeL Positive ( expected [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 325
score: 99.68360246930804
patch: if ( observed [ i ] != null ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 325
score: 99.66944986979166
patch: dev = observed [ i ] ; dev = expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 325
score: 99.6665275327621
patch: dev = ( ( double ) observed [ i ] ) / observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 325
score: 99.63556315104167
patch: double observed [ i ] = observed [ i ] * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 325
score: 99.62496185302734
patch: double expected = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 325
score: 99.62075510332662
patch: dev = ( ( double ) observed [ i ] & expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 325
score: 99.61724330357143
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ; }
rank: 326
score: 99.68709309895833
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . sum ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 326
score: 99.66939871651786
patch: final double expected [ ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 326
score: 99.64035126657197
patch: if ( ! observed [ i ] - expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 326
score: 99.62494659423828
patch: dev = ( ( double ) observed [ i ] * expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 326
score: 99.61723327636719
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / dev / dev ;
rank: 327
score: 99.68688201904297
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 327
score: 99.683544921875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev ; } return sum CaMeL Sq ;
rank: 327
score: 99.66938612196181
patch: dev = observed [ i ] ; ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 327
score: 99.66636149088542
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 327
score: 99.6247802734375
patch: ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 327
score: 99.62071572580645
patch: dev = ( ( double ) observed [ i ] ) . sum CaMeL Sq ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 327
score: 99.61699362362133
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ( ( double ) dev ) / expected [ i ] ;
rank: 328
score: 99.66933186848958
patch: dev = observed [ i ] ; ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 328
score: 99.66635214315879
patch: dev = ( double ) ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 328
score: 99.64013671875
patch: { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 328
score: 99.63529968261719
patch: if ( ( ( double ) observed [ i ] ) != expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 328
score: 99.6275993795956
patch: dev = dev [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 328
score: 99.62472713694854
patch: sum CaMeL Sq += ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 328
score: 99.62059705010776
patch: dev = ( ( double ) observed [ i ] ) . expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 329
score: 99.68344198690879
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev * dev / expected [ i ] ;
rank: 329
score: 99.66912841796875
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev = dev * dev / expected [ i ] ;
rank: 329
score: 99.66621398925781
patch: ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 329
score: 99.64008331298828
patch: dev = ( ( double ) observed [ i ] ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 329
score: 99.63514364919355
patch: if ( expected [ i ] == ( double ) expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 329
score: 99.62059020996094
patch: dev = ( ( double ) observed [ i ] ) . sum CaMeL Sq ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 329
score: 99.616943359375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev += dev * dev / dev / expected [ i ] ;
rank: 330
score: 99.68672688802083
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * ( expected [ i ] + expected [ i ] ) ;
rank: 330
score: 99.66888834635417
patch: sum CaMeL Sq += ( observed [ i ] , expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 330
score: 99.66614118303572
patch: double dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 330
score: 99.63996233258929
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 330
score: 99.6350326538086
patch: for ( int i = observed [ i ] ; i > 0 ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 330
score: 99.62728794642857
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i + expected . length ] ;
rank: 330
score: 99.6205825805664
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ) ;
rank: 330
score: 99.61693572998047
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 331
score: 99.68620749080883
patch: dev = ( double ) ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ;
rank: 331
score: 99.66613399621212
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 331
score: 99.63982957409274
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev / dev / dev / dev / expected [ i ] ;
rank: 331
score: 99.63486013104838
patch: if ( observed [ i ] != ( double ) expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 331
score: 99.62464057074652
patch: double dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 331
score: 99.62056187220982
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev /
rank: 331
score: 99.61682581018519
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) / dev / dev / expected [ i ] ;
rank: 332
score: 99.68618691934121
patch: dev = ( double ) expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 332
score: 99.68303148674242
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ 0 ] ;
rank: 332
score: 99.63482862903226
patch: val = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 332
score: 99.62463727678572
patch: dev = observed [ i ] ; if ( expected [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 332
score: 99.61679311899039
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev ;
rank: 333
score: 99.68604835304055
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] / sum CaMeL Sq ;
rank: 333
score: 99.66841888427734
patch: sum CaMeL Sq += dev * dev / expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 333
score: 99.66607840401785
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ) / dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 333
score: 99.63472747802734
patch: if = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 333
score: 99.62461410030242
patch: dev = ( ( Float ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 333
score: 99.6204474954044
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 334
score: 99.68598896748311
patch: sum CaMeL Sq += dev * ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * ( expected [ i ] - expected [ i ] ) ;
rank: 334
score: 99.6826171875
patch: dev = observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 334
score: 99.66829187729779
patch: int expected [ ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 334
score: 99.63930812026516
patch: dev = ( ( double ) observed [ i + 1 ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 334
score: 99.63463245738636
patch: float dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 334
score: 99.62041364397321
patch: double dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 335
score: 99.6825463079637
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 335
score: 99.66822102864583
patch: sum CaMeL Sq += expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 335
score: 99.66591005067568
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev ; } return sum CaMeL Sq ;
rank: 335
score: 99.63921356201172
patch: while ( observed [ i ] - expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 335
score: 99.63450712316177
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 335
score: 99.62674197635135
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 335
score: 99.62452607996323
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 335
score: 99.61636439732143
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ; }
rank: 336
score: 99.6681892641129
patch: dev = ( ( double ) expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 336
score: 99.665869140625
patch: dev = ( ( double ) observed [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 336
score: 99.63916015625
patch: dev = ( ( double ) observed $NUMBER$ [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 336
score: 99.62660217285156
patch: if ( observed [ i ] - expected [ i ] < observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 336
score: 99.62452566964286
patch: double expected = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 336
score: 99.62025107106855
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev [ i ] / expected [ i ] ;
rank: 336
score: 99.616357421875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( dev > expected [ i ] ) { sum CaMeL Sq += dev ; }
rank: 337
score: 99.68229386613176
patch: dev = ( ( double ) observed [ i ] - value [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 337
score: 99.66801060267858
patch: sum CaMeL Sq = observed [ i ] - expected [ i ] ; dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 337
score: 99.62449488146552
patch: dev = observed [ i ] ; dev = dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 337
score: 99.61631651182432
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev / dev ;
rank: 338
score: 99.68560112847223
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] ;
rank: 338
score: 99.66578468116555
patch: dev = observed [ i ] * expected [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 338
score: 99.63886260986328
patch: if ( observed [ i ] - expected [ i ] <= expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 338
score: 99.63385009765625
patch: dev = ( ( double ) dev [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 338
score: 99.62648010253906
patch: dev = observed [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev / expected [ i ] ;
rank: 339
score: 99.68553331163194
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] . expected [ i ] ;
rank: 339
score: 99.66796875
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 339
score: 99.6657006048387
patch: dev = ( ( double ) observed [ i ] ) * observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 339
score: 99.6388272372159
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i - $NUMBER$ ] ;
rank: 339
score: 99.633818359375
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ) ;
rank: 339
score: 99.62638811383928
patch: dev = observed [ i ] ; if ( observed [ i ] > expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 340
score: 99.68546769425676
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 340
score: 99.66742621527777
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += observed [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 340
score: 99.63876638104838
patch: 0 = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 340
score: 99.63374597886029
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) == expected ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 340
score: 99.62447916666666
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev = ( ( double ) observed [ i ] ) ;
rank: 341
score: 99.68539511190879
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] ; } return sum CaMeL Sq ;
rank: 341
score: 99.68157784598215
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / Math / dev / expected [ i ] ;
rank: 341
score: 99.63373393397177
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 341
score: 99.62626255580358
patch: dev = observed [ i ] ; dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 341
score: 99.62444661458333
patch: synchronized ( dev ) { dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 341
score: 99.61566685267857
patch: dev = observed [ i ] - expected [ i ] ; if ( dev > expected [ i ] ) { sum CaMeL Sq += dev / expected [ i ] ; }
rank: 342
score: 99.6853386374081
patch: dev = ( ( double ) observed [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ;
rank: 342
score: 99.68154611895162
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / dev / dev / expected [ i ] ;
rank: 342
score: 99.66718606387867
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 342
score: 99.6654755563447
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] : dev ;
rank: 342
score: 99.63373161764706
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * dev / expected [ expected [ i ] ;
rank: 342
score: 99.62431640625
patch: if ( observed [ i ] == expected [ i ] ) { dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 342
score: 99.61981560202206
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 343
score: 99.66534102590461
patch: int dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 343
score: 99.63819077435662
patch: dev = ( ( double ) observed [ i ] - dev ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 343
score: 99.63344439338235
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev ++ ;
rank: 343
score: 99.62620849609375
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 344
score: 99.68500518798828
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected . [ i ] ;
rank: 344
score: 99.6813605813419
patch: dev = ( ( double ) observed [ i ] - expected [ i ] + expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 344
score: 99.66708553538604
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = expected [ i ] ;
rank: 344
score: 99.66515435112848
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; return sum CaMeL Sq ;
rank: 344
score: 99.63787841796875
patch: dev = ( ( double ) observed [ i ] - $STRING$ ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 344
score: 99.63327462332589
patch: if ( expected [ i ] > expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 344
score: 99.62430245535714
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * expected / expected [ i ] ;
rank: 344
score: 99.6154296875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] / dev / dev / dev ;
rank: 345
score: 99.68495396205357
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 345
score: 99.68132250236742
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 345
score: 99.66700902478448
patch: sum CaMeL Sq += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 345
score: 99.66507056451613
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += max * dev / expected [ i ] ;
rank: 345
score: 99.63781368371212
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / double / expected [ i ] ;
rank: 345
score: 99.6332275390625
patch: if ( observed [ i ] == ( double ) expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 345
score: 99.62428114149306
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 346
score: 99.6849365234375
patch: ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] ;
rank: 346
score: 99.66499597886029
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev ; } return sum CaMeL Sq ;
rank: 347
score: 99.68107561383928
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev ;
rank: 347
score: 99.63770967371323
patch: if ( observed [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } } return sum CaMeL Sq ;
rank: 347
score: 99.63304227941177
patch: dev = observed [ i ] ; if ( expected [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 347
score: 99.62406281502017
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = dev ;
rank: 347
score: 99.619580078125
patch: double observed [ i ] = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] ;
rank: 347
score: 99.61492745535715
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / ( expected [ i ] ) ;
rank: 348
score: 99.66651088169642
patch: dev = observed [ i ] - expected [ i ] ; dev = expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 348
score: 99.66486890388258
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return
rank: 348
score: 99.63766741071429
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . i ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 348
score: 99.63295611213235
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) != 0 ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 348
score: 99.61957146139706
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] - expected [ i ] ;
rank: 348
score: 99.61478308475378
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / ( expected [ i ] ) ;
rank: 349
score: 99.6809332431891
patch: if ( ! is CaMeL Non CaMeL Negative ( expected [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 349
score: 99.66641055836396
patch: observed [ i ] = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 349
score: 99.63765832149622
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev & dev / dev / expected [ i ] ;
rank: 349
score: 99.63252898185483
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ; { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 349
score: 99.6253074363426
patch: if ( observed [ i ] < observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 349
score: 99.62398035386029
patch: sum CaMeL Sq = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 349
score: 99.61956612723215
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 349
score: 99.6146752142137
patch: dev += ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ( expected [ i ] - expected [ i ] ) ;
rank: 350
score: 99.66608960700758
patch: dev = observed [ i ] - expected [ i ] ; dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 350
score: 99.63758433948864
patch: dev = ( ( double ) observed [ i ] - expected [ i - $NUMBER$ ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 350
score: 99.63230846774194
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += true * dev / expected [ i ] ;
rank: 350
score: 99.62523788060898
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 350
score: 99.61944939108456
patch: dev = ( ( double ) observed [ i ] ) . expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] * expected [ i ] ;
rank: 350
score: 99.61464051942568
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ; sum CaMeL Sq += dev * dev ;
rank: 351
score: 99.68081485523896
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev [ i ] ;
rank: 351
score: 99.66605377197266
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; expected [ i ] = dev * dev / expected [ i ] ;
rank: 351
score: 99.66385323660714
patch: double dev = dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 351
score: 99.62364676339286
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / observed [ i ] ;
rank: 351
score: 99.61456657858456
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = ( ( double ) dev ) / expected [ i ] ;
rank: 352
score: 99.68077048277243
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] - expected [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 352
score: 99.66598849826389
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 352
score: 99.66376809512867
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev [ i ] ; sum CaMeL Sq += dev * dev [ i ] ;
rank: 352
score: 99.62517438616071
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] + expected [ i ] ;
rank: 352
score: 99.62356305803571
patch: dev = expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 352
score: 99.61455775669643
patch: dev = observed [ i ] - expected [ i ] ; if ( expected [ i ] == dev ) { sum CaMeL Sq += dev / expected [ i ] ; }
rank: 353
score: 99.68354627821181
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq ++ ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 353
score: 99.6807158499053
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; * /
rank: 353
score: 99.66595865885417
patch: sum CaMeL Sq = dev * expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 353
score: 99.6636629971591
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev ; return sum CaMeL Sq ;
rank: 353
score: 99.623486328125
patch: int observed [ ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 353
score: 99.61929025957662
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / ( expected [ i ] - expected [ i ] ) ;
rank: 353
score: 99.61455078125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ; } return dev * dev ;
rank: 354
score: 99.68340879498106
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / dev * expected [ i ] ;
rank: 354
score: 99.68060825892857
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / 1 / expected [ i ] ;
rank: 354
score: 99.66366238064236
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) : observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 354
score: 99.63702182112068
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev += dev * dev / expected [ i ] ;
rank: 354
score: 99.63154602050781
patch: for ( int i = 0 ; i < expected [ i ] ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 354
score: 99.6234375
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 354
score: 99.61928119081439
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev [ i ] ;
rank: 355
score: 99.68330235635081
patch: dev = is CaMeL Positive ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 355
score: 99.68059008049242
patch: dev = ( ( double ) observed [ i ] - $NUMBER$ [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 355
score: 99.66365792410714
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - dev / dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 355
score: 99.6315030184659
patch: try { dev = ( double ) ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 355
score: 99.62499281939338
patch: dev = observed [ i ] ; if ( observed [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 355
score: 99.62327706473214
patch: dev = dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 355
score: 99.61445617675781
patch: if ( observed [ i ] - expected [ i ] > dev ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 356
score: 99.68056126644737
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + observed [ i ] ) ;
rank: 356
score: 99.63683712121212
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) != 0 ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 356
score: 99.62494973575367
patch: dev = observed [ i ] ; if ( observed [ i ] >= observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 356
score: 99.61915457589286
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev * dev / expected [ i ] ;
rank: 356
score: 99.61394391741071
patch: if ( observed [ i ] - expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 357
score: 99.68286920362904
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev , expected [ i ] ;
rank: 357
score: 99.66548919677734
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += observed [ i ] - expected [ i ] ;
rank: 357
score: 99.66329520089286
patch: dev = ( ( double ) observed [ i ] - expected . length ) + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 357
score: 99.62494255514706
patch: dev = observed [ i ] ; if ( observed [ i ] >= expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 357
score: 99.62327008928571
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += expected [ i ] ;
rank: 357
score: 99.61912582859848
patch: dev = observed [ i ] - ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 357
score: 99.61380767822266
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / ( expected [ i ] ;
rank: 358
score: 99.66529895413306
patch: real = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 358
score: 99.6363192471591
patch: cur = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 358
score: 99.62494081439394
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] * expected [ i ] ;
rank: 358
score: 99.618896484375
patch: if ( observed [ i ] - expected [ i ] > expected [ i ] ) { sum CaMeL Sq += dev * expected [ i ] ; }
rank: 358
score: 99.61377650669642
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } return dev / dev ;
rank: 359
score: 99.68047018612133
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev / expected [ i ] ;
rank: 359
score: 99.66514369419643
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 359
score: 99.66299258961396
patch: dev = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 359
score: 99.63618861607142
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] / observed . length ;
rank: 359
score: 99.61883370535715
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 359
score: 99.61372767857142
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] + dev ;
rank: 360
score: 99.68270874023438
patch: dev = ( ( double ) observed [ i ] - expected [ i 1 ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 360
score: 99.6651099420363
patch: dev = ( ( Integer ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 360
score: 99.66291577888258
patch: dev = ( ( ( double ) observed [ i ] ) + expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 360
score: 99.63604525862068
patch: if ( observed [ i ] - expected [ i ] != 1 ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 360
score: 99.62300109863281
patch: synchronized ( observed ) { dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 360
score: 99.61362033420139
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] * dev / dev / expected [ i ] ;
rank: 361
score: 99.68040364583334
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * dev / dev / expected [ i ] ;
rank: 361
score: 99.66504603794642
patch: dev = expected [ i ] - expected [ i ] ; dev = expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 361
score: 99.63601684570312
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += - dev * dev / expected [ i ] ;
rank: 361
score: 99.63104458512932
patch: ( ( double ) observed [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 361
score: 99.62444285857372
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 361
score: 99.62296549479167
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 361
score: 99.61881749770221
patch: if ( observed [ i ] - expected [ i ] < expected [ i ] ) { sum CaMeL Sq += observed [ i ] * expected [ i ] ; }
rank: 362
score: 99.66273716517857
patch: dev = ( ( double ) observed [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 362
score: 99.63575613839286
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . length ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 362
score: 99.63094075520833
patch: for ( int i = expected [ i ] ; i > 0 ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 362
score: 99.62420654296875
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 362
score: 99.62286191998106
patch: sum CaMeL Sq = ( ( float ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 362
score: 99.61878704202586
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . sum CaMeL Sq += dev / expected [ i ] ;
rank: 362
score: 99.61350504557292
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 363
score: 99.68034093520221
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * * dev / dev / expected [ i ] ;
rank: 363
score: 99.66488560267857
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 363
score: 99.66252983940973
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq + sum CaMeL Sq ;
rank: 363
score: 99.63570280997983
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq + dev * dev / expected [ i ] ;
rank: 363
score: 99.63087512600806
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * true / expected [ i ] ;
rank: 363
score: 99.62412701231061
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] - expected [ i ] ;
rank: 363
score: 99.61345358455883
patch: if ( observed [ i ] - expected [ i ] > expected [ i ] ) { sum CaMeL Sq += expected [ i ] - expected [ i ] ; }
rank: 364
score: 99.6623779296875
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return dev ;
rank: 364
score: 99.63536071777344
patch: dev = ( ( double ) observed [ i ] - [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 364
score: 99.62392578125
patch: if ( ! is CaMeL Non CaMeL Negative ( expected [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 364
score: 99.61863659274194
patch: dev = Math . abs ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 364
score: 99.61345108695652
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ;
rank: 365
score: 99.66458892822266
patch: sum CaMeL Sq += observed [ i ] - expected [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 365
score: 99.63529698988971
patch: if ( observed [ i ] - expected [ i ] - observed [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 365
score: 99.62387547348484
patch: if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 365
score: 99.62265625
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } sum CaMeL Sq += dev * expected [ i ] ;
rank: 365
score: 99.61297433035715
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev ;
rank: 366
score: 99.63513553503788
patch: dev = observed [ i ] - expected [ i ] [ expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 366
score: 99.62372878502156
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev ;
rank: 366
score: 99.62247983870968
patch: synchronized ( dev ) { dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 366
score: 99.61859537760417
patch: sum CaMeL Sq += ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 367
score: 99.68185177364865
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] / expected [ i ] ;
rank: 367
score: 99.68023158482143
patch: dev = ( ( double ) observed [ i ] - $NUMBER$ [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 367
score: 99.66449652777777
patch: dev = dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 367
score: 99.63480631510417
patch: if ( observed [ i ] - expected [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * expected [ i ] ;
rank: 367
score: 99.63018391927083
patch: if ( observed [ i ] == ( double ) observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 367
score: 99.62224047111742
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 368
score: 99.68006089154412
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * - dev / dev / expected [ i ] ;
rank: 368
score: 99.66160824424342
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; else sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 368
score: 99.63478781960227
patch: k = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 368
score: 99.6298828125
patch: dev = ( ( double ) observed [ i ] - dev ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 368
score: 99.61856571320564
patch: dev += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] - expected [ i ] ;
rank: 368
score: 99.61277553013393
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev * dev ;
rank: 369
score: 99.68175920758928
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ]
rank: 369
score: 99.66154436383928
patch: dev = ( ( double ) observed [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 369
score: 99.63477404364224
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * min [ i ] ;
rank: 369
score: 99.62987493699596
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += false * dev / expected [ i ] ;
rank: 369
score: 99.62344473379629
patch: if ( observed [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 369
score: 99.6219841452206
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ; }
rank: 369
score: 99.61848397090517
patch: double sum CaMeL Sq = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 369
score: 99.61271449497768
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / dev ;
rank: 370
score: 99.68163299560547
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ [ i ] ;
rank: 370
score: 99.66431427001953
patch: dev = observed [ i ] ; sum CaMeL Sq = dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 370
score: 99.66126534598214
patch: dev = ( ( double ) observed [ i ] - expected : expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 370
score: 99.63467301993535
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev += dev / dev / expected [ i ] ;
rank: 370
score: 99.6297940340909
patch: double observed = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 370
score: 99.62190987723214
patch: dev = dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * expected [ i ] ;
rank: 370
score: 99.61267438616072
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( dev > dev ) { sum CaMeL Sq += expected [ i ] ; }
rank: 371
score: 99.68158123944256
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 371
score: 99.62941028225806
patch: exc = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 371
score: 99.62327665441177
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev ;
rank: 371
score: 99.6218497983871
patch: observed [ i ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 371
score: 99.61829723011364
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 371
score: 99.61257498604911
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev + dev / dev ;
rank: 372
score: 99.68153036794355
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev . expected [ i ] ;
rank: 372
score: 99.66082589285715
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += sum CaMeL Sq ;
rank: 372
score: 99.62910313760081
patch: for ( int i = 0 / expected [ i ] ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 372
score: 99.62315458409927
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 372
score: 99.62156575520834
patch: expected [ i ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 372
score: 99.61827177159927
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / ( double ) observed [ i ] ;
rank: 372
score: 99.61245930989584
patch: dev = ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev / expected [ i ] ;
rank: 373
score: 99.68151485558712
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ( dev * dev * expected [ i ] ) ;
rank: 373
score: 99.67995198567708
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ]
rank: 373
score: 99.66407012939453
patch: dev = observed [ i ] ; dev = dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 373
score: 99.62906901041667
patch: if ( dev * expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 373
score: 99.61820714613971
patch: if ( observed [ i ] == expected [ i ] ) { sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 373
score: 99.61244201660156
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev [ i ] / expected [ i ] ;
rank: 374
score: 99.66405378069196
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq = dev * dev / dev / expected [ i ] ;
rank: 374
score: 99.66069216844512
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . sum CaMeL Sq ;
rank: 374
score: 99.63439547631049
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * i / expected [ i ] ;
rank: 374
score: 99.62863498263889
patch: dev = observed [ i ] / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 374
score: 99.62149047851562
patch: dev = ( ( double ) observed [ i ] + expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 374
score: 99.61812918526786
patch: dev += ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 375
score: 99.68106571320564
patch: dev = ( ( Number ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 375
score: 99.67950439453125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [
rank: 375
score: 99.66065848214286
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] += dev ;
rank: 375
score: 99.62148752520162
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] * expected [ i ] ;
rank: 375
score: 99.61806788589016
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / dev / expected [ i ] ;
rank: 375
score: 99.61232561383929
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 376
score: 99.66053989955357
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ]
rank: 376
score: 99.6343291311553
patch: dev = ( ( short ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 376
score: 99.62844756155303
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 376
score: 99.62289341517857
patch: dev = observed [ i ] ; if ( expected [ i ] < observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 376
score: 99.61780503216912
patch: dev = ( ( double ) observed [ i ] ) . double CaMeL Value ( ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 376
score: 99.61228785021552
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev - expected [ i ] ;
rank: 377
score: 99.68073586856617
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) : expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 377
score: 99.66378876657197
patch: dev = ( ( double ) observed [ i ] , expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 377
score: 99.66028594970703
patch: dev = ( ( double ) observed [ i ] ) + expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 377
score: 99.63432042738971
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . ( ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 377
score: 99.62133026123047
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev ; }
rank: 377
score: 99.61774040670956
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq *= dev * expected [ i ] ;
rank: 377
score: 99.61208871694711
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev ;
rank: 378
score: 99.6806576377467
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] / sum CaMeL Sq / expected [ i ] ;
rank: 378
score: 99.6343009702621
patch: a = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 378
score: 99.6226806640625
patch: dev = observed [ i ] ; if ( observed [ i ] > expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 378
score: 99.62120056152344
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * dev / sum CaMeL Sq ;
rank: 379
score: 99.67928059895833
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 379
score: 99.62836456298828
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; long sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 379
score: 99.61200714111328
patch: if ( observed [ i ] != expected [ i ] ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 380
score: 99.68059339021382
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ;
rank: 380
score: 99.67914341517857
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected / dev / expected [ i ] ;
rank: 380
score: 99.66001981847427
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev [ i ] ; sum CaMeL Sq += dev * dev [ i ] ;
rank: 380
score: 99.63415157433712
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev / observed [ i ] ;
rank: 380
score: 99.6209487915039
patch: dev = ( ( int ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 380
score: 99.61725484913794
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev ;
rank: 380
score: 99.61198656486742
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev / dev / dev ;
rank: 381
score: 99.68055848817568
patch: dev = ( dev ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 381
score: 99.66355846774194
patch: dev = expected [ i ] - expected [ i ] - expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 381
score: 99.6599609375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ]
rank: 381
score: 99.62233599494485
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 381
score: 99.62093680245536
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * dev ;
rank: 381
score: 99.61711883544922
patch: double observed [ i ] = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 382
score: 99.67893580386513
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ) ; } return sum CaMeL Sq ;
rank: 382
score: 99.6634521484375
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / dev ;
rank: 382
score: 99.65989176432292
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 382
score: 99.63400794719827
patch: observed [ i ] = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 382
score: 99.62799944196429
patch: double observed [ i ] = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 383
score: 99.68043348524306
patch: dev = ( double ) is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 383
score: 99.67891322544642
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * dev / dev / dev / expected [ i ] ;
rank: 383
score: 99.63393267463235
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] * observed [ i ] ;
rank: 383
score: 99.62796667850378
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ++ ] ; }
rank: 383
score: 99.62091064453125
patch: sum CaMeL Sq = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 384
score: 99.65977957589286
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev ; sum CaMeL Sq += dev * dev / expected [ i ] - dev ;
rank: 384
score: 99.62752559267241
patch: int observed [ ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 384
score: 99.6170142389113
patch: dev += ( ( double ) observed [ i ] - 1 [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 384
score: 99.61127068014706
patch: if ( observed [ i ] - expected [ i ] - expected [ i ] ) { sum CaMeL Sq += expected [ i ] - expected [ i ] ; }
rank: 385
score: 99.68024444580078
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 385
score: 99.6787109375
patch: j = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 385
score: 99.65960693359375
patch: dev = ( ( double ) observed [ i ] - observed [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 385
score: 99.63357451467803
patch: prev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 385
score: 99.62185668945312
patch: dev = observed [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 385
score: 99.62074110243056
patch: sum CaMeL Sq += ( ( ( double ) observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 385
score: 99.61120975378788
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] * dev / dev / dev ;
rank: 386
score: 99.63353704637096
patch: dev = ( ( double ) out [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 386
score: 99.62732696533203
patch: dev = Math . min ( observed [ i ] , expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 386
score: 99.61112467447917
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev / expected [ i ] ;
rank: 387
score: 99.68023856026785
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 387
score: 99.67834866431451
patch: dev = ( ( int ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 387
score: 99.62723541259766
patch: if ( observed [ i ] == expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 387
score: 99.62151902721774
patch: if ( observed [ i ] < expected [ i ] ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 387
score: 99.62062026515152
patch: double ( observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 388
score: 99.68017578125
patch: dev = ( ( double ) is CaMeL Non CaMeL Negative ( observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 388
score: 99.67833426339286
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return null ;
rank: 388
score: 99.6593376608456
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev [ i ] ;
rank: 388
score: 99.63325892857142
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq -= dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 388
score: 99.62696940104166
patch: dev = ( ( double ) observed [ i ] ) expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 388
score: 99.62143406723484
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / 0 / expected [ i ] ;
rank: 388
score: 99.62059807054925
patch: dev = ( observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 389
score: 99.6801398782169
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ;
rank: 389
score: 99.67825564822635
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 389
score: 99.66280480587122
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; ; }
rank: 389
score: 99.63316345214844
patch: observed [ i ] = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 389
score: 99.6269022623698
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 389
score: 99.62141418457031
patch: dev = observed [ i ] / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 389
score: 99.62050494025735
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev [ i ] ; }
rank: 389
score: 99.61110552619485
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected . length ;
rank: 390
score: 99.66272342566288
patch: dev = expected [ i ] - ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 390
score: 99.65907915900735
patch: c = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 390
score: 99.63304924242425
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; else {
rank: 390
score: 99.62678475215517
patch: if ( observed [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 390
score: 99.61682498816288
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev ;
rank: 390
score: 99.61084724195075
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / ( dev * expected [ i ] ) ;
rank: 391
score: 99.67983926309121
patch: dev = ( double ) ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 391
score: 99.67808948863636
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / dev / dev / dev / expected [ i ] ;
rank: 391
score: 99.66249593098958
patch: dev = ( ( double ) observed [ i ] , expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 391
score: 99.65895647321429
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * dev * dev ;
rank: 391
score: 99.63300637637867
patch: ++ i ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 391
score: 99.62667281539352
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ++ ] ;
rank: 391
score: 99.6167510061553
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / dev / expected [ i ] ;
rank: 391
score: 99.61069020917338
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev > dev / expected [ i ] ;
rank: 392
score: 99.67933565027573
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] / expected [ i ] ;
rank: 392
score: 99.6779296875
patch: dev = ( ( double ) observed [ i ] - expected [ i 1 ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 392
score: 99.63293063256049
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } else
rank: 392
score: 99.62646484375
patch: value = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 392
score: 99.62026515151516
patch: if ( expected [ i ] < expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 392
score: 99.6167351217831
patch: if ( observed [ i ] - expected . length > expected . length ) { sum CaMeL Sq += ( observed [ i ] - expected [ i ] ) ; }
rank: 392
score: 99.61067940848214
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] + expected [ i ] ; }
rank: 393
score: 99.67925262451172
patch: dev = ( ( double ) observed [ i 1 ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 393
score: 99.67782931857639
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / dev / dev ;
rank: 393
score: 99.662109375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i - expected [ i ] ;
rank: 393
score: 99.6327607125947
patch: h = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 393
score: 99.6263786764706
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) == 0 ) sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 393
score: 99.61668346774194
patch: dev = observed [ i ] - ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 394
score: 99.67924948299633
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * expected [ i ] + expected [ i ] ;
rank: 394
score: 99.67777622767858
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / dev * dev / expected [ i ] ;
rank: 394
score: 99.6620857484879
patch: dev = expected [ i ] + expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 394
score: 99.62629968979779
patch: if ( observed [ i ] - expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 394
score: 99.62117952913852
patch: dev = observed [ i ] ; for ( int i = 0 ; i < observed . length ; i ++ ) { sum CaMeL Sq += dev * dev [ i ] ; }
rank: 394
score: 99.62017059326172
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 394
score: 99.61662046370968
patch: dev = Math . dev ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 394
score: 99.61046685112848
patch: if ( observed [ i ] - expected [ i ] > dev ) { sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 395
score: 99.67774757179055
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( ! is CaMeL Non CaMeL Negative ( observed ) ) { return sum CaMeL Sq ; }
rank: 395
score: 99.65878591229838
patch: pos = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 395
score: 99.63228722774622
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / package / expected [ i ] ;
rank: 395
score: 99.62016465928819
patch: sum CaMeL Sq += ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 395
score: 99.61661551339286
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ) ;
rank: 396
score: 99.6777145798142
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } ++ sum CaMeL Sq ;
rank: 396
score: 99.662060546875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; ;
rank: 396
score: 99.63218060661765
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] [ dev ] ;
rank: 396
score: 99.62096354166667
patch: dev = observed [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ;
rank: 396
score: 99.62008928571429
patch: sum CaMeL Sq += ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 396
score: 99.61641199448529
patch: if ( observed [ i ] - expected [ i ] > expected [ i ] ) { sum CaMeL Sq += observed [ i ] - expected [ i ] ; }
rank: 396
score: 99.61011505126953
patch: double observed [ ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 397
score: 99.67889083059211
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] / sum CaMeL Sq ;
rank: 397
score: 99.67762974330357
patch: dev = ( ( double ) observed [ i ] - expected [ i - 0 ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 397
score: 99.661962890625
patch: dev = observed [ i ] ; dev = dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 397
score: 99.65874167049633
patch: dev = ( ( double ) observed [ i ] ) * dev ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 397
score: 99.6259765625
patch: dev [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 397
score: 99.62006487165179
patch: if ( observed [ i ] < observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 397
score: 99.61628766741072
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / $NUMBER$ . 0 ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 398
score: 99.66190962357955
patch: dev = ( ( double ) observed [ i ] - 0 [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 398
score: 99.65869140625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * dev / dev ;
rank: 398
score: 99.6209383877841
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 398
score: 99.62006138392857
patch: sum CaMeL Sq = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * dev * expected [ i ] ;
rank: 399
score: 99.67849319045608
patch: dev = ( ( double ) observed [ i ] , expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 399
score: 99.65857303503788
patch: dev = ( ( double ) observed : dev [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 399
score: 99.63185029871323
patch: if ( observed [ i ] - expected . length != observed . length ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 399
score: 99.625732421875
patch: for ( int i = 0 / expected [ i ] ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 399
score: 99.61996459960938
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; double sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 400
score: 99.661669921875
patch: sum CaMeL Sq = ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 400
score: 99.65856539818549
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] - expected [ i ] ;
rank: 400
score: 99.625732421875
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ++ ] ;
rank: 400
score: 99.61996120876736
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected / expected [ i ] ;
rank: 400
score: 99.61600864955358
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 400
score: 99.6097412109375
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / dev / dev / dev / expected [ i ] ;
rank: 401
score: 99.67836122255068
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] / sum CaMeL Sq ;
rank: 401
score: 99.67694614955357
patch: double dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 401
score: 99.66159955193015
patch: dev = ( ( double ) observed [ i ] - expected [ i ] , expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 401
score: 99.65854779411765
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq + dev ;
rank: 401
score: 99.63176935369319
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev << dev / expected [ i ] ;
rank: 401
score: 99.62565366683468
patch: if ( expected [ i ] == ( double ) observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 401
score: 99.62073863636364
patch: if ( observed [ i ] - expected [ i ] < observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 401
score: 99.61982421875
patch: double expected = observed [ i ] ; dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 401
score: 99.61588541666667
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ) ;
rank: 401
score: 99.60946834788604
patch: float dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 402
score: 99.67827544341216
patch: dev = observed [ i ] / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 402
score: 99.67664755544355
patch: dev = ( ( double ) observed [ i ] - $NUMBER$ [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 402
score: 99.63157743566177
patch: dev = ( ( double ) observed [ i ] - expected [ i i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 402
score: 99.62049449573864
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; return sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 402
score: 99.61981724330357
patch: sum CaMeL Sq = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 402
score: 99.60946451822916
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / ( dev * dev ) ;
rank: 403
score: 99.67824358258929
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 403
score: 99.66129796645221
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = expected [ i ] ;
rank: 403
score: 99.63145536534927
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / * dev / expected [ i ] ;
rank: 403
score: 99.61968994140625
patch: k = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 403
score: 99.61579446231617
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ;
rank: 403
score: 99.6093513734879
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 404
score: 99.67821587456598
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] * expected [ i ] ;
rank: 404
score: 99.67648407907197
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev [ i ] ;
rank: 404
score: 99.65825037802419
patch: dev = observed [ i ] + expected [ i ] * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 404
score: 99.63141424005681
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * i / dev / expected [ i ] ;
rank: 404
score: 99.62523509837963
patch: if ( observed [ i ] > expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 404
score: 99.62022662984914
patch: dev = observed [ i ] [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] [ i ] ;
rank: 404
score: 99.61576843261719
patch: if ( observed [ i ] instanceof double ) { sum CaMeL Sq += ( ( double ) observed [ i ] ) . double CaMeL Value ( ) ; }
rank: 405
score: 99.6313994436553
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . min ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 405
score: 99.62005440848215
patch: dev = observed [ i ] ; if ( ! is CaMeL Positive ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 405
score: 99.60922154017857
patch: dev = observed [ i ] - expected [ i ] ; if ( expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 406
score: 99.67820829503677
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev / dev * expected [ i ] ;
rank: 406
score: 99.67626111260776
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 406
score: 99.66106414794922
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ; ;
rank: 406
score: 99.63137724905303
patch: dev = ( ( double ) observed [ i ] - expected [ 1 ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 406
score: 99.6199722290039
patch: if ( observed [ i ] != observed [ i ] ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 406
score: 99.61957864200367
patch: ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 406
score: 99.61572265625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev [ i ] * dev [ i ] ;
rank: 406
score: 99.60920715332031
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev / ( expected [ i ] - expected [ i ] ) ;
rank: 407
score: 99.67815530711206
patch: dev = ( ( double ) observed [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 407
score: 99.62502219460227
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 407
score: 99.61951104525862
patch: dev = expected [ i ] ; dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 408
score: 99.66077922952586
patch: dev = expected [ i ] - expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 408
score: 99.65804036458333
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) : 0 ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 408
score: 99.63067823840726
patch: if ( observed [ i ] - expected [ i ] != 1 ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 408
score: 99.62471771240234
patch: s = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 408
score: 99.6152861624053
patch: dev = ( ( double ) observed [ i ] ) . sum CaMeL Sq += expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 409
score: 99.66067843967014
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 409
score: 99.65799836189517
patch: dev = ( ( double ) observed [ i ] ) < expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 409
score: 99.6306388608871
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev & dev / expected [ i ] ;
rank: 409
score: 99.62471277573529
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected / expected [ i ] ;
rank: 409
score: 99.61510049143145
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ) ;
rank: 409
score: 99.60901227678572
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( dev == expected [ i ] ) { sum CaMeL Sq += dev ; }
rank: 410
score: 99.65791713169642
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ]
rank: 410
score: 99.630615234375
patch: temp = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 410
score: 99.62449544270834
patch: if ( observed [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 410
score: 99.61960100446429
patch: dev = observed [ i ] ; if ( observed [ i ] <= observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 410
score: 99.60895538330078
patch: dev += ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 411
score: 99.67804918791118
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 411
score: 99.6578369140625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ) * dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 411
score: 99.63016394412878
patch: dev = ( ( double ) observed [ i ] - err [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 411
score: 99.6244888305664
patch: observed = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 411
score: 99.61934777462122
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } ;
rank: 411
score: 99.61490885416667
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; expected [ i ] = expected [ i ] ;
rank: 412
score: 99.67800903320312
patch: sum CaMeL Sq += dev * ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 412
score: 99.67568864493535
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq -- ; } return sum CaMeL Sq ;
rank: 412
score: 99.65769958496094
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev ; } return sum CaMeL Sq ;
rank: 412
score: 99.63000882056451
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev = expected [ i ] ; } return sum CaMeL Sq ;
rank: 412
score: 99.6244599313447
patch: try { dev = ( ( double ) observed [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 412
score: 99.6193359375
patch: dev = expected [ i ] ; if ( observed [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 412
score: 99.61489572832662
patch: dev = Math . round ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 412
score: 99.60880533854167
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] + dev / expected [ i ] ;
rank: 413
score: 99.66045379638672
patch: double observed [ i ] = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 413
score: 99.62991240530303
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] . max ;
rank: 413
score: 99.62415986902573
patch: dev = dev [ i ] ; if ( expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 413
score: 99.61914825439453
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq -= dev * dev / expected [ i ] ; }
rank: 413
score: 99.6191047219669
patch: dev = observed [ i ] ; if ( expected [ i ] < observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 413
score: 99.6147881869612
patch: if ( observed [ i ] instanceof double ) { dev = ( ( double ) observed [ i ] ) . double CaMeL Value ( ) ;
rank: 413
score: 99.60852864583333
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * ( dev * dev ) ;
rank: 414
score: 99.67564871651786
patch: dev = ( ( double ) ( observed [ i ] + expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 414
score: 99.6298095703125
patch: if ( observed [ i ] - expected [ i ] != 0 ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 414
score: 99.6241455078125
patch: dev = ( ( double ) observed [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 414
score: 99.619140625
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = expected [ i ] ;
rank: 414
score: 99.61896623883929
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [
rank: 415
score: 99.66035012637867
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ; sum CaMeL Sq = dev * expected [ i ] ;
rank: 415
score: 99.65752988873106
patch: i = ( ( double ) observed [ i ] - expected [ i ] ) * dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 415
score: 99.62409319196429
patch: dev = ( ( double ) observed [ i ] ) ; { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 415
score: 99.61881510416667
patch: if ( ! is CaMeL Positive ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 415
score: 99.61467428768383
patch: dev += ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 415
score: 99.60849104256465
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] + dev ;
rank: 416
score: 99.67557669974663
patch: if ( ! is CaMeL Non CaMeL Negative ( expected [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 416
score: 99.65752814797794
patch: array [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 416
score: 99.62968893612133
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 416
score: 99.62385559082031
patch: for ( int i = expected [ i ] ; i > 0 ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 416
score: 99.61882990056819
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev [ i ] ;
rank: 416
score: 99.60839056199596
patch: if ( observed [ i ] - expected [ i ] > expected [ i ] ) { sum CaMeL Sq += dev / expected [ i ] ; }
rank: 417
score: 99.67738850911458
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 417
score: 99.67547772381756
patch: if ( ! is CaMeL Positive ( expected [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 417
score: 99.6601326234879
patch: logger = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 417
score: 99.65752650669643
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * sum CaMeL Sq ;
rank: 417
score: 99.62968306107955
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected . length [ i ] ;
rank: 417
score: 99.62381998697917
patch: dev = ( ( double ) observed [ i ] expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 417
score: 99.61873109879032
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq |= dev * dev / expected [ i ] ;
rank: 417
score: 99.614501953125
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] * expected [ i ] ;
rank: 418
score: 99.6599609375
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 418
score: 99.65731319304436
patch: dev = observed [ i ] * expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 418
score: 99.62967936197917
patch: = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 418
score: 99.61856079101562
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 419
score: 99.67713838465073
patch: dev = ( double ) is CaMeL Positive ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 419
score: 99.67519962086396
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) != observed . length ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 419
score: 99.65727996826172
patch: dev = expected [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 419
score: 99.61851917613636
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; } sum CaMeL Sq += dev * expected [ i ] ;
rank: 419
score: 99.61444302262932
patch: double observed [ ] = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 419
score: 99.6081963900862
patch: dev = ( ( double ) observed [ i ] - 1 [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 420
score: 99.67513275146484
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * - dev / expected [ i ] ;
rank: 420
score: 99.65986902573529
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 420
score: 99.6572624655331
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev [ i ] ;
rank: 420
score: 99.62952922952586
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; } return sum CaMeL Sq ;
rank: 420
score: 99.61853448275862
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 420
score: 99.6143465909091
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev * expected [ i ] ;
rank: 420
score: 99.6081963900862
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += expected [ i ] / dev / expected [ i ] ;
rank: 421
score: 99.65717075892857
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev ; return sum CaMeL Sq ;
rank: 421
score: 99.61424301609848
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * dev ;
rank: 421
score: 99.60812279485887
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev ;
rank: 422
score: 99.67676478794642
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] ; } return sum CaMeL Sq ;
rank: 422
score: 99.6596908569336
patch: dev = expected [ i ] - expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 422
score: 99.65711558948864
patch: dev = ( ( double ) observed [ i ] - i - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 422
score: 99.62351707175925
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 422
score: 99.61834161931819
patch: dev = ( double ) ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 422
score: 99.61810302734375
patch: dev = observed [ i ] ; dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 422
score: 99.61420355902777
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) * dev / expected [ i ] ;
rank: 422
score: 99.60809685202206
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( dev > dev ) { sum CaMeL Sq += dev / dev ; }
rank: 423
score: 99.67439350328948
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + expected [ i ] ) ;
rank: 423
score: 99.65958077566964
patch: sum CaMeL Sq = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 423
score: 99.656982421875
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; break ;
rank: 423
score: 99.62324793198529
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - dev ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 423
score: 99.61829376220703
patch: if ( observed [ i ] - expected [ i ] > observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 423
score: 99.60808031486742
patch: dev = ( ( float ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev / expected [ i ] ;
rank: 424
score: 99.67635531038852
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] + sum CaMeL Sq ;
rank: 424
score: 99.67437744140625
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) != 0 . 0 ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 424
score: 99.65692303631756
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; else { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 424
score: 99.62916614163306
patch: observed [ i ] = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 424
score: 99.62324793198529
patch: if ( observed [ i ] ) { dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 424
score: 99.61771515877017
patch: dev = ( ( double - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 424
score: 99.61410030241936
patch: dev = Math . min ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 424
score: 99.60807554183468
patch: if ( observed [ i ] - expected [ i ] > dev ) { sum CaMeL Sq += expected [ i ] - expected [ i ] ; }
rank: 425
score: 99.67417689732143
patch: if ( ! is CaMeL Positive ( expected [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 425
score: 99.65686383928572
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] - dev * dev ;
rank: 425
score: 99.629150390625
patch: dev ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 425
score: 99.6181640625
patch: if ( is CaMeL Positive ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 425
score: 99.61408996582031
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev [ i ] ;
rank: 426
score: 99.67627612964527
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] . sum CaMeL Sq ;
rank: 426
score: 99.6179832175926
patch: dev = observed [ i ] ; dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ) ;
rank: 426
score: 99.60776959043561
patch: if ( observed [ i ] - expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev / dev / expected [ i ] ; }
rank: 427
score: 99.61740291819854
patch: expected [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 427
score: 99.61397668087122
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev * dev [ i ] ;
rank: 428
score: 99.67613096494932
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] + expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 428
score: 99.67382134331598
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / dev / expected [ i ] ;
rank: 428
score: 99.65907505580357
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] - dev ;
rank: 428
score: 99.61777195785984
patch: dev = observed [ i ] ; dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 429
score: 99.62903594970703
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] [ 0 ] ;
rank: 429
score: 99.61758915070564
patch: if ( observed [ i ] == expected [ i ] ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 429
score: 99.61723497178819
patch: synchronized ( dev ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 429
score: 99.61391129032258
patch: if ( observed [ i ] instanceof double ) { sum CaMeL Sq += ( ( double ) observed [ i ] ) . expected [ i ] ; }
rank: 429
score: 99.60745886600378
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev / dev ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 430
score: 99.67604631696429
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 430
score: 99.67333984375
patch: dev = ( ( double ) observed [ i ] - expected [ i ++ ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 430
score: 99.65899447737068
patch: dev = expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 430
score: 99.65624373998398
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . dev ;
rank: 430
score: 99.6221220999053
patch: dev = ( ( double ) observed [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 430
score: 99.61757298519737
patch: dev = observed [ i ] ; for ( int i = 0 ; i < expected . length ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 430
score: 99.60745442708334
patch: if ( observed [ i ] - expected [ i ] > dev ) { sum CaMeL Sq += dev / dev / expected [ i ] ; }
rank: 431
score: 99.67333266314338
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / - dev / expected [ i ] ;
rank: 431
score: 99.65896267361111
patch: ( ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 431
score: 99.65619659423828
patch: dev = observed [ i ] [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] [ i ] ;
rank: 431
score: 99.62880267518939
patch: if ( observed [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 431
score: 99.62186431884766
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 431
score: 99.61757220643939
patch: if ( observed [ i ] - expected [ i ] > observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 431
score: 99.61709933810764
patch: observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 431
score: 99.61389553931451
patch: dev = ( ( double ) observed [ i ] ) . expected [ 0 ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 431
score: 99.60743582589286
patch: z = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 432
score: 99.67331891741071
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return true ;
rank: 432
score: 99.65618341619319
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; else sum CaMeL Sq += dev * expected [ i ] ;
rank: 432
score: 99.621630859375
patch: dev = ( ( double ) observed [ i ] ) ; if ( dev ) sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 432
score: 99.61754653033088
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + expected [ i ] ) ;
rank: 432
score: 99.61709681919643
patch: dev [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 432
score: 99.61385091145833
patch: if ( observed [ i ] - expected [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * expected [ i ] ;
rank: 432
score: 99.60738699776786
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev / dev / dev / dev ;
rank: 433
score: 99.67331891741071
patch: f = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 433
score: 99.65890066964286
patch: dev = expected [ i ] ; dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 433
score: 99.65603458180146
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 433
score: 99.62146389868951
patch: if ( expected [ i ] . equals ( expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 433
score: 99.60728934151786
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } return dev * dev ;
rank: 434
score: 99.67586263020833
patch: dev = ( ( double ) observed [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 434
score: 99.67305261948529
patch: String dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 434
score: 99.65882783777573
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = observed [ i ] ;
rank: 434
score: 99.62858335433468
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / abs [ i ] ;
rank: 434
score: 99.62125890395221
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) == dev ) sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 434
score: 99.61374240451389
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) * dev / expected [ i ] ;
rank: 434
score: 99.60722824622844
patch: dev = ( ( float ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 435
score: 99.67291618795956
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 435
score: 99.65587158203125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev . length ;
rank: 435
score: 99.62857818603516
patch: if ( observed [ i ] - observed [ i ] - observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 435
score: 99.62122300091912
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 435
score: 99.6171357125947
patch: dev = observed [ i ] ; dev = ( ( double ) expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 435
score: 99.61367618336396
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * expected [ i ] * expected [ i ] ;
rank: 435
score: 99.60716378348214
patch: dev = observed [ i ] - expected [ i ] ; if ( expected [ i ] == dev ) { sum CaMeL Sq += dev * expected [ i ] ; }
rank: 436
score: 99.67561848958333
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] . observed [ i ] ;
rank: 436
score: 99.65861511230469
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 436
score: 99.65573381696429
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] - dev / dev ;
rank: 436
score: 99.62118326822916
patch: final double observed [ ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 436
score: 99.61690398185483
patch: synchronized ( expected ) { dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 436
score: 99.613623046875
patch: double observed [ i ] = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 436
score: 99.6070785522461
patch: double observed [ ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 437
score: 99.65854061351104
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 437
score: 99.62851414535984
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = ( double ) observed [ i ] - expected [ i ] ;
rank: 437
score: 99.62117222377232
patch: if ( observed [ i ] != observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 437
score: 99.6170883178711
patch: dev = observed [ i ] - observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 437
score: 99.60705987338362
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += ( expected [ i ] - expected [ i ] ) ;
rank: 438
score: 99.67260024126838
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ) ] ;
rank: 438
score: 99.62107747395834
patch: dev = ( ( double ) observed [ i ] ) [ i ] ; { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 438
score: 99.613525390625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / $NUMBER$ . expected [ i ] ;
rank: 438
score: 99.60684988839286
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( expected [ i ] != dev ) { sum CaMeL Sq += dev ; }
rank: 439
score: 99.67248883928572
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev ;
rank: 439
score: 99.62841009324596
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / observed [ i ] ;
rank: 439
score: 99.62101236979167
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 439
score: 99.61666554418103
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 439
score: 99.61351102941177
patch: double dev = ( observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 439
score: 99.6068115234375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] ; }
rank: 440
score: 99.67539535030242
patch: dev = ( ( double ) ( expected [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 440
score: 99.67247425426136
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 440
score: 99.65834263392857
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev += dev / expected [ i ] ;
rank: 440
score: 99.62833133820564
patch: dev = ( ( double ) observed [ i ] - byte [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 440
score: 99.62092859604779
patch: dev = expected [ i ] ; if ( expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 440
score: 99.61664643158784
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; for ( int i = 0 ; i < observed . length ; i ++ )
rank: 440
score: 99.61663818359375
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ; }
rank: 440
score: 99.61348839962122
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected . length ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 440
score: 99.60653599330357
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / dev ;
rank: 441
score: 99.67535574776785
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . [ 0 ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 441
score: 99.67229147518383
patch: dev = ( ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 441
score: 99.6583251953125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ;
rank: 441
score: 99.628173828125
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * expected [ i ] ;
rank: 441
score: 99.61660024282095
patch: dev = observed [ i ] ; for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ; sum CaMeL Sq ++ ;
rank: 441
score: 99.60650044102823
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev / dev ;
rank: 442
score: 99.67500697544642
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 442
score: 99.65816497802734
patch: sum CaMeL Sq += ( dev * expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 442
score: 99.65459127987133
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * dev ; } return sum CaMeL Sq ;
rank: 442
score: 99.62069807381465
patch: if ( ( observed [ i ] == expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 442
score: 99.61644287109375
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 442
score: 99.60648716517858
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / ( dev * expected [ i ] ) ;
rank: 443
score: 99.67214483963816
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 443
score: 99.65813577586206
patch: sum CaMeL Sq = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 443
score: 99.62049967447916
patch: if ( observed [ i ] - expected [ i ] == 0 ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 444
score: 99.6721427671371
patch: dev = ( double ) expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 444
score: 99.65806924143145
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * $STRING$ / expected [ i ] ;
rank: 444
score: 99.65454711914063
patch: sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 444
score: 99.62798665364583
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / [ i ] ;
rank: 444
score: 99.6204833984375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; throw new Runtime CaMeL Exception ( $STRING$ + observed [ i ] ) ;
rank: 444
score: 99.6164787046371
patch: dev = ( ( double ) observed [ i ] - dev [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 444
score: 99.61328938802083
patch: dev += ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 444
score: 99.60630474668561
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; } return dev * dev / dev / dev / expected [ i ] ;
rank: 445
score: 99.67208426339286
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i - $NUMBER$ ] ;
rank: 445
score: 99.62793731689453
patch: dev : = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 445
score: 99.62042051373106
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 445
score: 99.61644635881696
patch: if ( observed [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 445
score: 99.6161911423142
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 445
score: 99.61325599407327
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ;
rank: 445
score: 99.60616048177083
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( expected . length > expected . length ) { sum CaMeL Sq += dev ; }
rank: 446
score: 99.67207166883681
patch: if ( ! is CaMeL Positive ( observed [ i ] - expected [ i ] - expected [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 446
score: 99.65789598034274
patch: dev = observed [ i ] - expected [ i ] - expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 446
score: 99.65434434678819
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] - observed [ i ] ;
rank: 446
score: 99.61635044642857
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev ++ ;
rank: 446
score: 99.61592980587122
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / ( expected [ i ] + expected [ i ] ) ;
rank: 446
score: 99.60615066002156
patch: z = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 447
score: 99.65788225446428
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev = dev / expected [ i ] ;
rank: 447
score: 99.65425872802734
patch: dev = ( ( double ) observed [ i ] ) . - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 447
score: 99.62021309988839
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected / expected [ i ] ;
rank: 447
score: 99.61591254340277
patch: dev = observed [ i ] ; if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 447
score: 99.61316680908203
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ( ( double ) observed [ i ] ) ;
rank: 448
score: 99.67450629340277
patch: dev = ( ( double ) ( expected [ i ] - expected [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 448
score: 99.67196219308036
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev * dev / dev / expected [ i ] ;
rank: 448
score: 99.6541847022804
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] * sum CaMeL Sq ;
rank: 448
score: 99.62774658203125
patch: dev += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 448
score: 99.61561908143939
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i + i ] ;
rank: 448
score: 99.613134765625
patch: final ( ( double ) observed [ i ] - expected [ i ] ) . sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 449
score: 99.6744896673387
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] / expected [ i ] ;
rank: 449
score: 99.6201400756836
patch: dev = ( ( double ) observed [ i ] ) / expected [ i ] ; { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 449
score: 99.61625532670455
patch: sum CaMeL Sq = ( ( double ) dev [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 449
score: 99.6130888967803
patch: double observed [ i ] = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] * expected [ i ] ;
rank: 449
score: 99.60599190848214
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev / expected [ i ] + dev ;
rank: 450
score: 99.67166573660714
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) != observed . length ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 450
score: 99.65775101273148
patch: dev = ( ( double ) observed [ i ] ) ; { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 450
score: 99.62763671875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] % observed . length ;
rank: 450
score: 99.6201171875
patch: if ( expected [ i ] != observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 450
score: 99.61608492943549
patch: dev = ( ( double ) observed [ i ] < expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 450
score: 99.61553955078125
patch: for ( int i = 0 ; i < observed [ i ] . length ; i ++ ) { dev = ( ( double ) observed [ i ] [ i ] ) ;
rank: 450
score: 99.60593483664773
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] / dev / dev / dev ;
rank: 451
score: 99.67431640625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] + expected [ i ] ;
rank: 451
score: 99.65772224195075
patch: dev = ( double ) observed [ i ] ; dev = dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 451
score: 99.65397374770221
patch: dev = ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 451
score: 99.61551706414474
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 451
score: 99.61306861139113
patch: dev += ( observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 452
score: 99.67153033088235
patch: if ( ! is CaMeL Non CaMeL Negative ( expected [ i ] - expected [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 452
score: 99.65756138392857
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 452
score: 99.65394176136364
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) double dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 452
score: 99.62009102957589
patch: if ( expected [ i ] <= expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 452
score: 99.61579000538794
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ;
rank: 452
score: 99.61548529730902
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev ;
rank: 452
score: 99.61300751657197
patch: dev = ( ( double ) observed [ i ] ) . expected [ i ] ; sum CaMeL Sq += dev * dev / $NUMBER$ / expected [ i ] ;
rank: 453
score: 99.67430114746094
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ) ;
rank: 453
score: 99.6575127963362
patch: sum CaMeL Sq = observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 453
score: 99.65370008680556
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) << expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 453
score: 99.62737482244319
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] [ ) ;
rank: 453
score: 99.61999932650862
patch: double observed [ ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 453
score: 99.6153564453125
patch: dev = observed [ i ] ; if ( ! is CaMeL Positive ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 453
score: 99.60586085464016
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] + dev ;
rank: 454
score: 99.657470703125
patch: dev = observed [ i ] - expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 454
score: 99.62734522964016
patch: ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 454
score: 99.61990921585648
patch: dev = ( ( double ) observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 454
score: 99.61561584472656
patch: dev = ( ( double ) observed [ i ] < expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 454
score: 99.61294642857143
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 454
score: 99.60572007123162
patch: if ( observed [ i ] - expected [ i ] > expected [ i ] ) { sum CaMeL Sq += expected [ i ] / expected [ i ] ; }
rank: 455
score: 99.67402200137867
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * observed [ i ] / expected [ i ] ;
rank: 455
score: 99.6709213256836
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 455
score: 99.61979166666667
patch: dev = observed [ i ] ; if ( dev ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 455
score: 99.61282348632812
patch: double observed [ i ] = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 456
score: 99.67392147288604
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev ) / dev / expected [ i ] ;
rank: 456
score: 99.65719039351852
patch: double dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 456
score: 99.65334743923611
patch: dev = ( ( double ) ( ( double ) observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 456
score: 99.62724165482955
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev . dev / dev / expected [ i ] ;
rank: 456
score: 99.61974334716797
patch: int dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 456
score: 99.6154426125919
patch: ( ( double ) observed [ i ] - observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 456
score: 99.6151984719669
patch: if ( observed [ i ] - expected [ i ] < observed [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 456
score: 99.61280036695075
patch: dev = ( ( double ) observed [ i ] ) . observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 457
score: 99.65715874565973
patch: dev = ( ( double ) observed [ i ] - observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 457
score: 99.6271728515625
patch: dev = ( ( double ) observed [ i ] - i ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 457
score: 99.61965762867646
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 457
score: 99.60549094460227
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev + dev * dev / expected [ i ] ;
rank: 458
score: 99.67361037795608
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 458
score: 99.67059151785715
patch: dev = ( double ) ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 458
score: 99.65700767780173
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 458
score: 99.6154076360887
patch: ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 458
score: 99.61470301011029
patch: dev = observed [ i ] ; if ( observed [ i ] != observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 458
score: 99.61262758316532
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] - expected [ i ] ;
rank: 458
score: 99.60545131138393
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev / dev / dev / expected [ i ] ;
rank: 459
score: 99.67051937705592
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 459
score: 99.652783203125
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += sum CaMeL Sq ;
rank: 459
score: 99.62696838378906
patch: if ( expected [ i ] - expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 459
score: 99.61961263020834
patch: dev = ( double ) observed [ i ] ; if ( dev ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 459
score: 99.61535274621212
patch: try { dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } catch ( ) {
rank: 459
score: 99.61251395089286
patch: dev += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 459
score: 99.6054451234879
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev - expected [ i ] ;
rank: 460
score: 99.67350260416667
patch: dev = ( ( double ) is CaMeL Positive ( observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 460
score: 99.67050083705357
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ length ] ;
rank: 460
score: 99.65676047585227
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; ; ;
rank: 460
score: 99.65274540070564
patch: dev = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ;
rank: 460
score: 99.61521218039773
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev * expected [ i ] ;
rank: 460
score: 99.61449477251838
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i + [ i ] ;
rank: 461
score: 99.67323931525735
patch: dev = ( ( double ) observed [ i ] - expected [ i ] [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 461
score: 99.67048475477431
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) != observed . length ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 461
score: 99.65666961669922
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev = dev / dev / expected [ i ] ;
rank: 461
score: 99.65273585464016
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i + dev ] ;
rank: 461
score: 99.62681136592742
patch: dev = ( ( double ) observed [ i ] - t [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 461
score: 99.61518411075367
patch: sum CaMeL Sq = ( ( float ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 461
score: 99.6143798828125
patch: if ( observed [ i ] - expected [ i ] <= observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 462
score: 99.67315848214285
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ( dev * dev / dev / expected [ i ] ) ;
rank: 462
score: 99.65663589969758
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / Math [ i ] ;
rank: 462
score: 99.62669418797348
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * double / dev / expected [ i ] ;
rank: 462
score: 99.61925397600446
patch: if ( ( ( double ) observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 462
score: 99.61204575047348
patch: dev = ( ( double ) observed [ i ] ) . expected / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 463
score: 99.67311145413306
patch: dev = ( double ) ( observed [ i ] , expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 463
score: 99.67028090533088
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev [ i ] ;
rank: 463
score: 99.61196437026516
patch: double observed [ i ] = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 463
score: 99.60508285030242
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; } return dev * dev / dev / expected [ i ] ;
rank: 464
score: 99.65636813256049
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * this / expected [ i ] ;
rank: 464
score: 99.62658321496212
patch: do { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 464
score: 99.61412217881944
patch: int dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 464
score: 99.61196001838235
patch: for ( int i = 0 ; i < observed [ i ] . length ; i ++ ) { sum CaMeL Sq += observed [ i ] [ i ] ; }
rank: 464
score: 99.60498046875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / ( expected [ i ] ) ;
rank: 465
score: 99.67006138392857
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / 0 / dev / expected [ i ] ;
rank: 465
score: 99.65635850694444
patch: dev = expected [ i ] ; ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 465
score: 99.65267159598214
patch: dev = ( ( double ) observed [ i ] - expected + expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 465
score: 99.62656841856061
patch: x = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 465
score: 99.61866861979166
patch: dev = ( ( double ) observed [ i ] observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 465
score: 99.61195283777573
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / / expected [ i ] ;
rank: 466
score: 99.6729033499053
patch: dev = ( double ) ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 466
score: 99.67001425253379
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i + expected . length ] ;
rank: 466
score: 99.65254480698529
patch: dev = ( ( double ) observed [ i ] ) [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 466
score: 99.62653266059027
patch: dev = ( ( double ) observed . equals ( observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 466
score: 99.61832682291667
patch: dev = ( double - observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 466
score: 99.61472455193015
patch: double expected = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * expected [ i ] ;
rank: 466
score: 99.61397976345486
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ; }
rank: 466
score: 99.61192737926136
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { sum CaMeL Sq += observed [ i ] - expected [ i ] ; }
rank: 466
score: 99.60481770833333
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } return dev * dev / dev / dev / expected [ i ] ;
rank: 467
score: 99.6727393897804
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq * dev ;
rank: 467
score: 99.65226976799242
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * max / dev / expected [ i ] ;
rank: 467
score: 99.62652402935606
patch: if ( observed [ i ] - expected [ i ] != 0 ) { sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 467
score: 99.61828192349138
patch: sum CaMeL Sq += observed [ i ] / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 468
score: 99.65593610491071
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; expected [ i ] = dev * dev / expected [ i ] ;
rank: 468
score: 99.61825741038604
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) * dev ) sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 468
score: 99.61455620659723
patch: sum CaMeL Sq = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = expected [ i ] ;
rank: 468
score: 99.60467936197917
patch: dev = ( ( double ) observed [ i ] - 1 [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev ;
rank: 469
score: 99.6182061557112
patch: sum CaMeL Sq += observed [ i ] * expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 469
score: 99.61354466488487
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; return sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 469
score: 99.6118392944336
patch: double dev = observed [ i ] - expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 469
score: 99.60466851128473
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev / expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 470
score: 99.67242752878289
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 470
score: 99.6180908203125
patch: if ( ( ( double ) observed [ i ] ) == dev ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 470
score: 99.61448567708334
patch: sum CaMeL Sq = ( ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 470
score: 99.60461055871212
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] / expected [ i ] ; }
rank: 471
score: 99.67239718967014
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] - expected [ i ] ;
rank: 471
score: 99.6697136374081
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ;
rank: 471
score: 99.65586224724265
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 471
score: 99.61801326976104
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - 1 ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 471
score: 99.6143798828125
patch: if ( observed [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 471
score: 99.61313949092742
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev ;
rank: 471
score: 99.60441080729167
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ( dev * expected [ i ] - expected [ i ] ) ;
rank: 472
score: 99.67235486260776
patch: dev = ( ( double ) observed [ i ] + expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 472
score: 99.66960706208882
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return - sum CaMeL Sq ;
rank: 472
score: 99.65148555871212
patch: dev = ( ( double [ ] ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 472
score: 99.6177116842831
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 472
score: 99.61434936523438
patch: double expected = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected / expected [ i ] ;
rank: 472
score: 99.60439627511161
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev ;
rank: 473
score: 99.62595436789773
patch: dev = ( ( double ) observed && observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 473
score: 99.60435042842742
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * ( expected [ i ] - expected [ i ] ) ;
rank: 474
score: 99.66956612723214
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev / dev / dev / dev / expected [ i ] ;
rank: 474
score: 99.6556884765625
patch: dev = observed [ i ] - expected [ i - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 474
score: 99.61735765861742
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 474
score: 99.61414388020833
patch: observed [ i ] = ( ( double ) observed [ i ] ) ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 474
score: 99.61294376148896
patch: dev = observed [ i ] ; if ( observed [ i ] <= expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 474
score: 99.61149088541667
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; expected [ i ] = expected [ i ] ;
rank: 474
score: 99.60430317540323
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * ( expected [ i ] ) ;
rank: 475
score: 99.67218017578125
patch: dev = observed [ i ] ; sum CaMeL Sq += dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 475
score: 99.66949869791667
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 475
score: 99.65568033854167
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 475
score: 99.62592930947581
patch: curr = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 475
score: 99.61729847301136
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; else { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 475
score: 99.61412048339844
patch: dev = ( ( Float ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 475
score: 99.61144625756049
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / $NUMBER$ [ i ] ;
rank: 475
score: 99.60425676618304
patch: dev = observed [ i ] / expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 476
score: 99.65564727783203
patch: dev = dev [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 476
score: 99.62583344558189
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] [ i ] ;
rank: 476
score: 99.61729694234914
patch: dev = observed [ i ] ; if ( dev == dev ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 476
score: 99.61391872829861
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 476
score: 99.61129760742188
patch: double dev = ( ( double ) observed [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 476
score: 99.6041962594697
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev / dev / dev ;
rank: 477
score: 99.67212677001953
patch: sum CaMeL Sq += dev * ( expected [ i ] + expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 477
score: 99.66930042613636
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev / dev / dev / expected [ i ] ;
rank: 477
score: 99.65115017361111
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 477
score: 99.62571022727273
patch: if ( observed [ i ] - expected [ i ] != observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 477
score: 99.61707356770833
patch: double dev = ( ( double ) observed [ i ] ) [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 477
score: 99.61372205946181
patch: double expected = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 477
score: 99.611279296875
patch: double expected = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 477
score: 99.60397600446429
patch: if ( ( observed [ i ] - expected [ i ] ) > expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 478
score: 99.672119140625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev * expected [ i ] / sum CaMeL Sq ;
rank: 478
score: 99.65548270089286
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev += dev / expected [ i ] ;
rank: 478
score: 99.65111400462963
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 478
score: 99.61671447753906
patch: if ( observed [ i ] == ( ( double ) expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 478
score: 99.6136474609375
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * dev * expected [ i ] ; }
rank: 478
score: 99.61119249131944
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += expected [ i ] * expected [ i ] ;
rank: 478
score: 99.60393880208333
patch: dev += ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev / expected [ i ] ;
rank: 479
score: 99.67209821428571
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 479
score: 99.65534319196429
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - dev ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 479
score: 99.61667049632354
patch: if ( observed [ i ] - expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } }
rank: 479
score: 99.61358432112068
patch: double expected [ ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 479
score: 99.612548828125
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 479
score: 99.60376790364583
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / ( dev / dev ) ;
rank: 480
score: 99.67205995501894
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . Integer ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 480
score: 99.65533806295956
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = observed [ i ] ;
rank: 480
score: 99.62551787405303
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ++ i ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 480
score: 99.61252170138889
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev [ i ] ;
rank: 480
score: 99.61096585181451
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev [ i ] * expected [ i ] ;
rank: 480
score: 99.60373853600544
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ;
rank: 481
score: 99.66922075320512
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + observed [ i ] ) ; }
rank: 481
score: 99.65533644153226
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected * dev / expected [ i ] ;
rank: 481
score: 99.65091828377017
patch: i = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 481
score: 99.62537339154412
patch: dev ++ = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 481
score: 99.61086077008929
patch: if ( observed [ i ] instanceof double [ ] ) { sum CaMeL Sq += ( ( double [ ] ) observed [ i ] ) . expected [ i ] ; }
rank: 481
score: 99.6036376953125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 482
score: 99.6719970703125
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] ; } return sum CaMeL Sq ;
rank: 482
score: 99.66910552978516
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / dev / dev / expected [ i ] ;
rank: 482
score: 99.65089285714286
patch: dev = ( ( double ) observed [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return dev ;
rank: 482
score: 99.62536227318549
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev += dev / dev / dev / expected [ i ] ;
rank: 482
score: 99.61640930175781
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum [ i ] = dev * dev / expected [ i ] ;
rank: 482
score: 99.61334043560606
patch: dev = ( dev [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 482
score: 99.61241803850446
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] + expected [ i ] ;
rank: 482
score: 99.60350623497597
patch: observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ;
rank: 483
score: 99.66908707157258
patch: if ( ! is CaMeL Positive ( expected [ i ] - expected [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 483
score: 99.65522984095982
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / dev ;
rank: 483
score: 99.65080915178571
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; else return dev ;
rank: 483
score: 99.6252959280303
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 483
score: 99.61633694556451
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * false / expected [ i ] ;
rank: 483
score: 99.61229564525463
patch: if ( observed [ i ] == observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 483
score: 99.61082409274194
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected / expected [ i ] ;
rank: 483
score: 99.60322097252156
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / observed [ i ] ;
rank: 484
score: 99.67159695095486
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 484
score: 99.66905302159927
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 484
score: 99.65503627232142
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] - dev * dev / expected [ i ] ;
rank: 484
score: 99.6507901278409
patch: dev = ( ( double ) observed [ i ] ) . ( expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 484
score: 99.6251553622159
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + $NUMBER$ ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 484
score: 99.6122687844669
patch: dev = observed [ i ] ; if ( observed [ i ] <= observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 484
score: 99.61081891741071
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / dev * dev / expected [ i ] ;
rank: 485
score: 99.66880170036765
patch: double dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 485
score: 99.6507504111842
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; else sum CaMeL Sq += dev * expected [ i ] ;
rank: 485
score: 99.62502959280303
patch: dev = ( ( double ) observed [ i - 0 ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 485
score: 99.6160888671875
patch: if ( expected [ i ] - expected [ i ] > expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 485
score: 99.61320944393383
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 485
score: 99.61221313476562
patch: dev = observed [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev / expected [ i ] ;
rank: 485
score: 99.6107666015625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 485
score: 99.60301892510776
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] + expected [ i ] ;
rank: 486
score: 99.6713349313447
patch: ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 486
score: 99.66876035748106
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += 1 * dev * dev / expected [ i ] ;
rank: 486
score: 99.65489612926136
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += Math * dev / dev / expected [ i ] ;
rank: 486
score: 99.61317274305556
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = dev ;
rank: 486
score: 99.61211395263672
patch: if ( observed [ i ] < expected [ i ] ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 486
score: 99.61073303222656
patch: if ( observed [ i ] - expected . length > expected . length ) { sum CaMeL Sq += observed [ i ] - expected [ i ] ; }
rank: 487
score: 99.654833984375
patch: dev = expected [ i ] ; dev = dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 487
score: 99.61307896205358
patch: expected [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 487
score: 99.61060310132575
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected . sum [ i ] ;
rank: 487
score: 99.6029564642137
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 488
score: 99.668701171875
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 488
score: 99.65051663306451
patch: dev = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] + expected [ i ] ;
rank: 488
score: 99.62482984138258
patch: dev = ( ( double ) observed , expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 488
score: 99.61581307870371
patch: dev = observed [ i ] * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 488
score: 99.60292053222656
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / dev / dev ;
rank: 489
score: 99.67103576660156
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 489
score: 99.66867327008929
patch: dev = ( ( byte ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 489
score: 99.65479910714286
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev / dev ;
rank: 489
score: 99.6505062705592
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } break ;
rank: 489
score: 99.62481330422794
patch: sum CaMeL Sq += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 489
score: 99.61026785714286
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ; }
rank: 489
score: 99.60285780164931
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( sum CaMeL Sq > dev ) { sum CaMeL Sq += dev / dev ; }
rank: 490
score: 99.66853376116072
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev * dev * expected [ i ] ;
rank: 490
score: 99.624755859375
patch: dev = ( ( double ) observed [ i ] - expected [ i - i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 490
score: 99.61552290482955
patch: if ( observed [ i ] - expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 490
score: 99.61278557054925
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = dev / dev / expected [ i ] ;
rank: 490
score: 99.6102523803711
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; dev += dev / expected [ i ] ;
rank: 490
score: 99.60280004040948
patch: if ( observed [ i ] - expected [ i ] > expected [ i ] ) { sum CaMeL Sq += expected [ i ] ; }
rank: 491
score: 99.62452651515152
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected , dev / expected [ i ] ;
rank: 491
score: 99.6154364224138
patch: dev = ( ( double ) observed [ i ] - 1 ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 491
score: 99.61180877685547
patch: dev = observed [ i ] ; dev = ( ( double ) ( observed [ i ] - expected [ i ] ) - expected [ i ] ) ;
rank: 491
score: 99.60279756433823
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / ( dev * dev / dev ) ;
rank: 492
score: 99.67097553453948
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += expected [ i ] ;
rank: 492
score: 99.6682990579044
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 492
score: 99.6503673735119
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } } return sum CaMeL Sq ;
rank: 492
score: 99.61533794981061
patch: if ( observed [ i ] - expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev / dev / expected [ i ] ; }
rank: 492
score: 99.61272638494319
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } else { sum CaMeL Sq += dev * dev ; }
rank: 492
score: 99.61180355674342
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; else sum CaMeL Sq += dev ;
rank: 492
score: 99.60275361032197
patch: dev = observed [ i ] - expected [ i ] ; if ( expected [ i ] == dev ) { sum CaMeL Sq += expected [ i ] ; }
rank: 493
score: 99.6708755493164
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i $NUMBER$ ] ;
rank: 493
score: 99.66811671401516
patch: dev = ( double ) expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 493
score: 99.65432559742646
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev -- ;
rank: 493
score: 99.62436208417338
patch: dev = ( ( double ) observed [ i ] - expected [ i - 1 ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 493
score: 99.61018371582031
patch: dev = ( ( double ) observed [ i ] ) . double CaMeL Value ( ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 493
score: 99.60270182291667
patch: if ( observed [ i ] - expected [ i ] >= expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 494
score: 99.6543212890625
patch: sum CaMeL Sq += dev * observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 494
score: 99.65019395616319
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; else { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 494
score: 99.61522595635776
patch: if ( observed [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } }
rank: 494
score: 99.61146850585938
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 494
score: 99.61006164550781
patch: dev = ( ( double ) observed [ i ] ) . double CaMeL Value ( ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 494
score: 99.60267740885416
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev + dev / dev / dev ;
rank: 495
score: 99.67045593261719
patch: dev = observed [ i ] ; dev = ( ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ) ;
rank: 495
score: 99.66805639022436
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { return sum CaMeL Sq ; }
rank: 495
score: 99.6243408203125
patch: if ( observed [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 495
score: 99.61003766741071
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; } sum CaMeL Sq += dev * expected [ i ] ;
rank: 495
score: 99.60260009765625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) [ i ] ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 496
score: 99.67039730674342
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 496
score: 99.65013970269098
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] += expected [ i ] ;
rank: 496
score: 99.61513384650735
patch: double expected = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 496
score: 99.60997488839286
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev * dev / expected [ i ] ;
rank: 497
score: 99.66795518663194
patch: else { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 497
score: 99.65009307861328
patch: dev = ( ( double ) observed [ i ] ) ) + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 497
score: 99.62400309244792
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] } return sum CaMeL Sq ;
rank: 497
score: 99.61512102399554
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ? expected [ i ] : expected [ i ] ;
rank: 497
score: 99.61258697509766
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev * expected [ i ] ; }
rank: 497
score: 99.61120975378788
patch: dev = observed [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev ;
rank: 497
score: 99.60984933035714
patch: if ( observed [ i ] - expected . length > $NUMBER$ ) { sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 497
score: 99.60253228081598
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] / dev / expected [ i ] ;
rank: 498
score: 99.67032877604167
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 498
score: 99.6500603170956
patch: dev = ( ( double ) observed [ i ] ) / dev ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 498
score: 99.6239346590909
patch: Positive = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 498
score: 99.61499837239583
patch: if ( dev * expected [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 498
score: 99.61258581912878
patch: sum CaMeL Sq += dev * ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 498
score: 99.61112015335648
patch: dev = observed [ i ] [ 0 ] ; sum CaMeL Sq += dev * dev / expected [ i ] [ 0 ] ;
rank: 498
score: 99.60251871744792
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev / expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 499
score: 99.66780133928572
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ; break ;
rank: 499
score: 99.65383078835227
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / ( expected [ i ] - expected [ i ] ) ;
rank: 499
score: 99.6499252319336
patch: dev = dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 499
score: 99.614990234375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] [ 1 ] ;
rank: 499
score: 99.61245265151516
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected / expected [ i ] ;
rank: 499
score: 99.60982390372983
patch: dev += observed [ i ] * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ;
rank: 500
score: 99.67013549804688
patch: dev = ( ( double ) observed [ i ] - expected [ i $NUMBER$ ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 500
score: 99.65377160274622
patch: dev = expected [ i ] - expected [ i ] ; if ( sum CaMeL Sq ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 500
score: 99.61490885416667
patch: if ( ( ( double ) observed [ i ] ) == expected ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 500
score: 99.61226029829545
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; } sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 500
score: 99.60968889508929
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / dev / expected [ i ] ;
rank: 501
score: 99.67008463541667
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / max / expected [ i ] ;
rank: 501
score: 99.66758149245689
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; return sum CaMeL Sq ; } return sum CaMeL Sq ;
rank: 501
score: 99.64986572265624
patch: dev = dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 501
score: 99.61490071614584
patch: if ( ( observed [ i ] > expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 501
score: 99.61223493303571
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } }
rank: 501
score: 99.61104543585526
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 501
score: 99.60967426915323
patch: dev = ( ( double ) observed [ i ] ) . expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 501
score: 99.60239955357143
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] / dev / expected [ i ] ; }
rank: 502
score: 99.6700668334961
patch: dev = observed [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 502
score: 99.66751534598214
patch: else { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 502
score: 99.6496818296371
patch: is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 502
score: 99.623779296875
patch: double dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] ;
rank: 502
score: 99.61484711745689
patch: double dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 502
score: 99.61100006103516
patch: if ( observed [ i ] < observed [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 502
score: 99.60960338961694
patch: dev = ( ( double ) observed [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 503
score: 99.66749572753906
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 503
score: 99.65350526751894
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] - expected [ i ] ;
rank: 503
score: 99.62369266633064
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq << dev * dev / expected [ i ] ;
rank: 503
score: 99.61461588541667
patch: dev = observed [ i ] ; if ( observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 503
score: 99.60959123883929
patch: if ( observed [ i ] - expected [ i ] < expected [ i ] ) { sum CaMeL Sq += ( observed [ i ] - expected [ i ] ) ;
rank: 503
score: 99.60232979910714
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / dev ;
rank: 504
score: 99.67004788306451
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev . dev / expected [ i ] ;
rank: 504
score: 99.66745334201389
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ++ ;
rank: 504
score: 99.6534423828125
patch: dev = expected [ i ] - observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 504
score: 99.62367876838235
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ] ;
rank: 504
score: 99.6145728326613
patch: dev = ( ( double ) observed [ i ] , expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 504
score: 99.61084771925404
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ;
rank: 504
score: 99.60958297164352
patch: double observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ;
rank: 505
score: 99.67001522288604
patch: dev -- ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 505
score: 99.66728071732955
patch: dev = ( ( ( double ) observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 505
score: 99.62360913825758
patch: 0 = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 505
score: 99.61215672348484
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } else { dev = dev / expected [ i ] ;
rank: 505
score: 99.61061604817708
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ; sum CaMeL Sq += dev * dev [ i ] ;
rank: 505
score: 99.60956401209677
patch: dev += ( ( double ) observed [ i ] + expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 505
score: 99.60228794642858
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( dev < dev ) { sum CaMeL Sq += expected [ i ] ; }
rank: 506
score: 99.66978870738636
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ? dev ;
rank: 506
score: 99.66726422991071
patch: if ( ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ) ;
rank: 506
score: 99.65335648148148
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += observed [ i ] ;
rank: 506
score: 99.61213452888258
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / this . expected [ i ] ;
rank: 506
score: 99.60950469970703
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev [ i ] ; sum CaMeL Sq += dev [ i ] ;
rank: 506
score: 99.60216522216797
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( dev > dev ) { sum CaMeL Sq += dev ; }
rank: 507
score: 99.66945286800987
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 507
score: 99.66719563802083
patch: int dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 507
score: 99.65330674913194
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - sum [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 507
score: 99.64888218470982
patch: dev = ( ( double ) observed [ i ] ) * dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 507
score: 99.62357584635417
patch: if ( observed [ i ] - expected [ i ] - observed [ i ] ) { sum CaMeL Sq += dev * expected [ i ] ;
rank: 507
score: 99.61438751220703
patch: if ( observed [ i ] == expected [ i ] ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 507
score: 99.61204479586694
patch: if ( observed [ i ] < expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * expected [ i ] ; }
rank: 507
score: 99.61035766601563
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 507
score: 99.60198777721774
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] + expected [ i ] ;
rank: 508
score: 99.6694091796875
patch: dev = ( ( double ) observed [ i ] - expected . length ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 508
score: 99.66715734145221
patch: dev = ( ( double ) observed [ i ] - expected [ i $NUMBER$ ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 508
score: 99.64878266433189
patch: dev = ( double ) observed [ i ] * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 508
score: 99.6143310546875
patch: if ( ( ( double ) observed [ i ] ) == 0 ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 508
score: 99.61025053879311
patch: dev = observed [ i ] - expected [ i ] ; for ( int i = 0 ; i < observed . length ; i ++ )
rank: 508
score: 99.6019646139706
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev / expected [ i ] ; sum CaMeL Sq += expected [ i ] ;
rank: 509
score: 99.66710662841797
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ) ] ;
rank: 509
score: 99.61431477864583
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if dev = dev * dev / expected [ i ] ;
rank: 509
score: 99.61186161747685
patch: dev = ( ( double ) expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 509
score: 99.61013997395834
patch: dev = ( ( double ) observed [ i ] ) . [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 509
score: 99.60193264868951
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } return dev * dev / dev / expected [ i ] ;
rank: 510
score: 99.66909450954861
patch: dev = ( double ) ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] ;
rank: 510
score: 99.66708286830357
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 510
score: 99.64864464962122
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev ;
rank: 510
score: 99.62323760986328
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * / dev / expected [ i ] ;
rank: 510
score: 99.6118392944336
patch: dev = ( ( double ) observed [ i ] - dev [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 510
score: 99.60994203629032
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 510
score: 99.60929601332721
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 510
score: 99.60179088961694
patch: dev = ( ( double ) observed [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 511
score: 99.66895228794642
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] / dev * dev ;
rank: 511
score: 99.66681985294117
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ]
rank: 511
score: 99.65320870535714
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev / dev ;
rank: 511
score: 99.62322443181819
patch: dev = ( ( double ) observed [ i ] - expected - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 511
score: 99.60927908761161
patch: dev += ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 511
score: 99.60172001008064
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev / dev ;
rank: 512
score: 99.66890832149622
patch: dev = ( double ) observed [ i ] - expected [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 512
score: 99.65316569010416
patch: dev = expected [ i ] ; sum CaMeL Sq += observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 512
score: 99.62320149739584
patch: dev = observed [ i ] - expected [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 512
score: 99.61410086495536
patch: if ( observed [ i ] == expected [ i ] ) { sum CaMeL Sq += dev / dev / expected [ i ] ; }
rank: 512
score: 99.61169803503788
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] * expected [ i ] ;
rank: 512
score: 99.60944366455078
patch: if ( ! is CaMeL Positive ( observed [ i ] ) ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 512
score: 99.60927036830357
patch: if ( observed [ i ] - expected . length > 0 ) { sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 512
score: 99.60167738970588
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / ( dev * dev ) ;
rank: 513
score: 99.64830186631944
patch: dev = ( ( double ) observed [ i ] - observed [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 513
score: 99.61396484375
patch: if ( observed [ i ] != ( double ) observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 513
score: 99.61168715533088
patch: dev = ( ( ( double ) observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 513
score: 99.60923138786765
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / ( expected [ i ] - expected [ i ] ) ; }
rank: 514
score: 99.66880219558189
patch: dev = ( double ) observed [ i ] - observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 514
score: 99.652978515625
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] + dev * dev / expected [ i ] ;
rank: 514
score: 99.60942021122685
patch: dev = observed [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev ;
rank: 514
score: 99.6092017389113
patch: dev += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ;
rank: 515
score: 99.66671845407197
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * $NUMBER$ * dev / expected [ i ] ;
rank: 515
score: 99.65291341145833
patch: dev = expected [ i ] - expected [ i - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 515
score: 99.64780865293561
patch: dev = ( ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 515
score: 99.62296549479167
patch: dev = ( ( double ) observed [ i ] - this . expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 515
score: 99.6139453125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev = expected [ i ] ;
rank: 515
score: 99.611572265625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 515
score: 99.6093947951858
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev [ i ] ; }
rank: 515
score: 99.60919744318181
patch: if ( observed [ i ] instanceof double [ ] ) { dev = ( ( double [ ] ) observed [ i ] ) . double CaMeL Value ( ) ;
rank: 515
score: 99.6013671875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / ( dev ) ;
rank: 516
score: 99.66872209821429
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 516
score: 99.66670496323529
patch: long dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 516
score: 99.65286254882812
patch: sum CaMeL Sq += ( dev / expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 516
score: 99.61383056640625
patch: if ( observed [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 516
score: 99.61155072380515
patch: observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 516
score: 99.6093521118164
patch: if ( observed [ i ] >= observed [ i ] ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 516
score: 99.60912322998047
patch: double sum CaMeL Sq = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 517
score: 99.66664341517857
patch: p = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 517
score: 99.61377716064453
patch: dev = ( ( String ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 517
score: 99.61149088541667
patch: sum CaMeL Sq = ( ( double - observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 517
score: 99.60926055908203
patch: dev = observed [ i ] ; dev = ( ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ) ;
rank: 518
score: 99.66864372702206
patch: dev = observed [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 518
score: 99.6666015625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; else { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 518
score: 99.65271366003788
patch: dev = observed [ i ] - expected [ i ] ; if ( sum CaMeL Sq ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 518
score: 99.6474250344669
patch: dev = ( double ) observed [ i ] - expected [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 518
score: 99.62283423639113
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i - 1 ] ;
rank: 518
score: 99.61356353759766
patch: if ( expected [ i ] == expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 518
score: 99.611376953125
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * dev ;
rank: 518
score: 99.60921223958333
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { return sum CaMeL Sq ;
rank: 518
score: 99.60909271240234
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; expected [ i ] = dev * dev / expected [ i ] ;
rank: 518
score: 99.60096740722656
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev ;
rank: 519
score: 99.66654575892858
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += $NUMBER$ * dev / dev / dev / expected [ i ] ;
rank: 519
score: 99.64739793346774
patch: dev = ( ( int ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 519
score: 99.61348100142045
patch: byte dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 519
score: 99.611376953125
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ; }
rank: 519
score: 99.60908059512867
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / / dev / expected [ i ] ;
rank: 520
score: 99.6685791015625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] - observed [ i ] ;
rank: 520
score: 99.64739631204044
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] * expected [ i ] ; } return sum CaMeL Sq ;
rank: 520
score: 99.62269694010416
patch: dev = ( ( double ) observed , i - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 520
score: 99.61135031960227
patch: dev = dev [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 520
score: 99.60901272681451
patch: dev = ( ( double ) observed [ i ] ) . expected [ i ] ; sum CaMeL Sq += dev * dev / dev [ i ] ;
rank: 520
score: 99.60897909628379
patch: dev = ( double ) observed [ i ] ; for ( int i = 0 ; i < observed . length ; i ++ ) { sum CaMeL Sq += dev [ i ] ;
rank: 520
score: 99.60085227272727
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] * dev / dev ;
rank: 521
score: 99.66857231987848
patch: dev = ( ( double ) observed [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] ;
rank: 521
score: 99.65252685546875
patch: dev = expected [ i ] ; dev = dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 521
score: 99.64723899147727
patch: dev = ( ( double ) observed [ i ] - observed [ i ] ) * dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 521
score: 99.61099446614584
patch: synchronized ( expected ) { dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 521
score: 99.60893950591216
patch: dev = observed [ i ] ; if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 521
score: 99.60890826056985
patch: if ( observed [ i ] - expected [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 521
score: 99.60080217633929
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ; }
rank: 522
score: 99.66856166294643
patch: dev = ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 522
score: 99.65251922607422
patch: if ( observed [ i ] - expected [ i ] , expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 522
score: 99.64712344898896
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + observed [ i ] ) ;
rank: 522
score: 99.62262517755681
patch: dev = ( ( double ) dev [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 522
score: 99.61335305606617
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 522
score: 99.60076141357422
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev * dev / dev ;
rank: 523
score: 99.66609700520833
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( dev == 0 ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 523
score: 99.61090850830078
patch: ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 523
score: 99.60886863425925
patch: dev = observed [ i ] - expected [ i 1 ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 523
score: 99.60878092447916
patch: dev += ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) * dev / expected [ i ] ;
rank: 523
score: 99.60073770059121
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( expected . length > observed [ i ] ) { sum CaMeL Sq += dev ; }
rank: 524
score: 99.66602918836806
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i 1 ] ;
rank: 524
score: 99.65222588900862
patch: dev = observed [ i ] - expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 524
score: 99.64683209043561
patch: i = ( ( double ) observed [ i ] - expected [ i ] ) / dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 524
score: 99.62251134072581
patch: ret = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 524
score: 99.61316636029412
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } if ;
rank: 524
score: 99.61066351996527
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ; }
rank: 524
score: 99.60883532072368
patch: if ( is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 524
score: 99.60875283518145
patch: dev = ( ( double ) observed [ i ] - 1 ) * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 524
score: 99.60071910511364
patch: if ( observed [ i ] - expected [ i ] < expected [ i ] ) { sum CaMeL Sq += dev / dev / expected [ i ] ; }
rank: 525
score: 99.66596536075367
patch: dev = ( ( ( int ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 525
score: 99.6520004272461
patch: sum CaMeL Sq += ( dev / observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 525
score: 99.64668104383681
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 525
score: 99.6131258877841
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 525
score: 99.61058090672348
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 525
score: 99.60879516601562
patch: dev = observed [ i ] ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 526
score: 99.66826171875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . sum ( ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 526
score: 99.66584014892578
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev [ i ] ;
rank: 526
score: 99.62247983870968
patch: dev : ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 526
score: 99.61055131392045
patch: dev = ( ( double ) observed [ i ] ) ; dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 526
score: 99.60874495967742
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev [ i ] / dev [ i ] ;
rank: 526
score: 99.60832868303571
patch: dev = observed [ i ] - expected [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed ) || ! is CaMeL Non CaMeL Negative ( observed ) ) { return sum CaMeL Sq ; }
rank: 526
score: 99.60065774356617
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev / expected [ i ] ) ;
rank: 527
score: 99.6658073874081
patch: dev = ( ( double ) observed [ i ] - expected [ i 1 ] ) ; sum CaMeL Sq += dev * dev / dev / dev [ i ] ;
rank: 527
score: 99.6517333984375
patch: dev = ( ( double ) observed [ i ] ) ? expected [ i ] : expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 527
score: 99.64653862847223
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] + dev ;
rank: 527
score: 99.6224365234375
patch: dev = ( ( double ) observed [ i ] - expected [ i 0 ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 527
score: 99.61294450431035
patch: for ( int i = observed [ i ] ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 527
score: 99.6105069247159
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] * dev / expected [ i ] ;
rank: 527
score: 99.60868983114919
patch: dev = Math . ceil ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 527
score: 99.60831705729167
patch: dev = ( double ) observed [ i ] ; dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 528
score: 99.66819196428571
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ; } return sum CaMeL Sq ;
rank: 528
score: 99.66580636160714
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * 1 / dev / expected [ i ] ;
rank: 528
score: 99.65163845486111
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - 1 [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 528
score: 99.62234700520834
patch: dev = ( ( double ) observed [ i ] - expected [ ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 528
score: 99.6128817471591
patch: double dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 528
score: 99.60052315848215
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( dev == dev ) { sum CaMeL Sq += expected [ i ] ; }
rank: 529
score: 99.66562352035984
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev [ i ] ; } return sum CaMeL Sq ;
rank: 529
score: 99.651611328125
patch: dev = expected [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 529
score: 99.6221435546875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev = expected [ i ] + expected [ i ] ;
rank: 529
score: 99.61279296875
patch: dev = observed [ i ] ; if ( dev == 0 ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 529
score: 99.61045102719908
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ; }
rank: 529
score: 99.60862682711694
patch: observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) * expected [ i ] ;
rank: 529
score: 99.60049438476562
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev * dev ;
rank: 530
score: 99.66784298058712
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . 1 ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 530
score: 99.6655075485642
patch: dev = ( ( ( double ) observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 530
score: 99.61258697509766
patch: tmp = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 530
score: 99.61043972439236
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 530
score: 99.60803985595703
patch: if ( observed [ i ] - expected [ i ] >= observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 530
score: 99.60042842741936
patch: dev = ( ( double [ ] ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 531
score: 99.667724609375
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] + expected [ i ] ;
rank: 531
score: 99.66534978693181
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev * dev / expected [ i ] ;
rank: 531
score: 99.64638199344758
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * 1 / expected [ i ] ;
rank: 531
score: 99.61257934570312
patch: if ( expected [ i ] == ( ( double ) observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 531
score: 99.61042336856617
patch: sum CaMeL Sq = ( ( double ) dev [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 531
score: 99.60858154296875
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { sum CaMeL Sq += observed [ i ] - expected [ i ] ;
rank: 531
score: 99.6076239224138
patch: if ( observed [ i ] < observed [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 532
score: 99.65139973958334
patch: sum CaMeL Sq += ( expected [ i ] , expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 532
score: 99.64632161458333
patch: dev = ( ( int ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 532
score: 99.62193642893145
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq : dev * dev / expected [ i ] ;
rank: 532
score: 99.61254095262096
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += min * dev / expected [ i ] ;
rank: 532
score: 99.61042131696429
patch: dev = ( ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 532
score: 99.60856859611742
patch: dev += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev / expected [ i ] ;
rank: 532
score: 99.60042598329741
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] / expected [ i ] ;
rank: 533
score: 99.62190290178572
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] . length ;
rank: 533
score: 99.60719058388158
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; { sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 533
score: 99.60040961371527
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev ; sum CaMeL Sq += dev ;
rank: 534
score: 99.6217373934659
patch: if ( observed [ i ] - observed [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 534
score: 99.61239624023438
patch: dev = ( ( double ) observed [ i ] / expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 534
score: 99.61038547092014
patch: double observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 534
score: 99.6085564108456
patch: if ( observed [ i ] instanceof double [ ] ) { sum CaMeL Sq += ( ( double [ ] ) observed [ i ] ) . sum CaMeL Sq ; }
rank: 534
score: 99.60026332310268
patch: dev = ( ( double ) observed [ i ] - 1 [ i ] ) ; sum CaMeL Sq += dev * dev / dev ;
rank: 535
score: 99.6672592163086
patch: dev = ( double ) ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 535
score: 99.66502331149194
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ) ; } return sum CaMeL Sq ;
rank: 535
score: 99.62169300426136
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / sum [ i ] ;
rank: 535
score: 99.61037248883929
patch: dev = ( double ) observed [ i ] ; dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 535
score: 99.60850081905242
patch: dev = ( ( double ) observed [ i ] - 1 [ 0 ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 535
score: 99.60690209173387
patch: if ( observed [ i ] != observed [ i ] ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 536
score: 99.66725158691406
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev / dev * expected [ i ] ;
rank: 536
score: 99.66500946969697
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev [ i ] ;
rank: 536
score: 99.64592428768383
patch: dev = ( ( double ) observed [ i ] ) [ 0 ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 536
score: 99.61034458705358
patch: dev = ( ( double ) observed [ i ] ) ; dev = dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 537
score: 99.66498565673828
patch: double [ ] dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev [ i ] ;
rank: 537
score: 99.65068989415323
patch: dev = observed [ i ] ; sum CaMeL Sq += observed [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 537
score: 99.60684204101562
patch: int observed = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 537
score: 99.59971175655242
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] / expected [ i ] ;
rank: 538
score: 99.66722892992425
patch: dev = ( ( double ) ( expected [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 538
score: 99.66495554070724
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i 1 ] ; } return sum CaMeL Sq ;
rank: 538
score: 99.62158203125
patch: time = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 538
score: 99.61220111268939
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * $NUMBER$ / expected [ i ] ;
rank: 538
score: 99.61024385340073
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ] ;
rank: 538
score: 99.60828683035714
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] * dev /
rank: 538
score: 99.60680338541667
patch: dev = observed [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ;
rank: 538
score: 99.5996981534091
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev ; }
rank: 539
score: 99.65068817138672
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] ;
rank: 539
score: 99.62132105334052
patch: if ( observed [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 539
score: 99.61205240885417
patch: if ( dev == expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 539
score: 99.6102066040039
patch: dev = ( ( double ) observed [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 539
score: 99.608203125
patch: final double observed [ ] = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 539
score: 99.60680280412946
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * 1 / dev / expected [ i ] ;
rank: 540
score: 99.66488444010416
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * dev / dev / expected [ i ] ;
rank: 540
score: 99.65065160290948
patch: sum CaMeL Sq += observed [ i ] - expected [ i ] ; ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 540
score: 99.6119873046875
patch: double observed [ i ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 540
score: 99.6101962002841
patch: dev = ( ( double ) observed [ i ] - 0 / expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 540
score: 99.60819128787878
patch: for ( int i = 0 ; i < observed [ i ] ; i ++ ) { sum CaMeL Sq += observed [ i ] - expected [ i ] ;
rank: 540
score: 99.60642903645834
patch: double [ ] dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev [ i ] ;
rank: 540
score: 99.59963156960227
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ; break ;
rank: 541
score: 99.66708809988839
patch: dev = ( ( double ) observed [ i ] - $STRING$ ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 541
score: 99.66478774126838
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev * dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 541
score: 99.65060686383929
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev += dev ;
rank: 541
score: 99.61192411534927
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; return ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 541
score: 99.61008649553571
patch: try { dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * dev / expected [ i ] ;
rank: 541
score: 99.59944661458333
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / dev ;
rank: 542
score: 99.66699936810662
patch: dev = ( double ) observed [ i ] ; dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 542
score: 99.65053530092592
patch: dev = expected [ i ] - expected [ i ] ; ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 542
score: 99.64531114366319
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ;
rank: 542
score: 99.62095811631944
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . max [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 542
score: 99.61183324353448
patch: dev = observed [ i ] ; for ( int i = ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 542
score: 99.61007043087122
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 542
score: 99.60623329564145
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 542
score: 99.59941248739919
patch: if ( observed [ i ] - expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev / expected [ i ] ; }
rank: 543
score: 99.66695731026786
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] . sum CaMeL Sq ;
rank: 543
score: 99.66455078125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( dev == 0 ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 543
score: 99.62087180397727
patch: dev = ( ( double ) observed > observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 543
score: 99.61145782470703
patch: if ( observed [ i ] * expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 543
score: 99.60618832236842
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 543
score: 99.59925362723214
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( expected [ i ] < dev ) { sum CaMeL Sq += dev ; }
rank: 544
score: 99.66695149739583
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] [ i ] ;
rank: 544
score: 99.65029907226562
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev
rank: 544
score: 99.64505343967014
patch: i = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 544
score: 99.60998883928572
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 544
score: 99.607666015625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq = dev * expected [ i ] ;
rank: 544
score: 99.59911205150463
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / dev ;
rank: 545
score: 99.66694493447581
patch: expected = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 545
score: 99.66412032277961
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } else return sum CaMeL Sq ;
rank: 545
score: 99.65021158854167
patch: dev = ( dev - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 545
score: 99.62078302556819
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } } return sum CaMeL Sq ;
rank: 545
score: 99.61137838924633
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 545
score: 99.60765697337963
patch: double dev = observed [ i ] * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 545
score: 99.60612487792969
patch: dev = observed [ i ] ; if ( observed [ i ] != 0 ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 545
score: 99.59909396701389
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ; } sum CaMeL Sq += dev ;
rank: 546
score: 99.65000813802084
patch: dev = observed [ i ] ; sum CaMeL Sq += expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 546
score: 99.62075343276516
patch: dev { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 546
score: 99.61127471923828
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += 0 * dev / expected [ i ] ; }
rank: 546
score: 99.60993109809027
patch: synchronized ( expected ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 546
score: 99.59908040364583
patch: double observed [ ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 547
score: 99.66685162168561
patch: dev = ( ( ( double ) expected [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 547
score: 99.66371278505068
patch: if ( ! is CaMeL Positive ( observed [ i ] - expected [ i ] - expected [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 547
score: 99.64991048177083
patch: sum CaMeL Sq += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 547
score: 99.60991354549633
patch: observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected / expected [ i ] ;
rank: 547
score: 99.60758463541667
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 547
score: 99.5990693063447
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev / expected [ i ] ; sum CaMeL Sq += dev * dev ;
rank: 548
score: 99.6668472290039
patch: dev -- ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 548
score: 99.66369298986487
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev * expected [ i ] ;
rank: 548
score: 99.64989494554925
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 548
score: 99.64465002111487
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 548
score: 99.60986328125
patch: sum CaMeL Sq = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 548
score: 99.6059326171875
patch: dev = observed [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; return sum CaMeL Sq ;
rank: 548
score: 99.59896087646484
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / ( dev / expected ) ;
rank: 549
score: 99.64988606770834
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev = dev / expected [ i ] ;
rank: 549
score: 99.62062072753906
patch: = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 549
score: 99.60746765136719
patch: dev = ( ( Double ) observed [ i ] ) . double CaMeL Value ( ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 549
score: 99.59890407986111
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / ( ( double ) observed [ i ] ) ;
rank: 550
score: 99.66668526785715
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 550
score: 99.66356065538194
patch: else dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 550
score: 99.64979654947916
patch: sum CaMeL Sq = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 550
score: 99.64457563920455
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev / dev ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 550
score: 99.61104090073529
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 550
score: 99.60936737060547
patch: dev = observed [ i ] ; if ( dev == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 550
score: 99.60702977035984
patch: dev = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev / expected [ i ] ;
rank: 550
score: 99.5989005796371
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] + dev / expected [ i ] ;
rank: 551
score: 99.66667344835069
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev * expected [ i ] / expected [ i ] ;
rank: 551
score: 99.66352395450367
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev [ i ] ; }
rank: 551
score: 99.62057674632354
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; else sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 551
score: 99.60934012276786
patch: dev = ( ( double ) observed [ i ] - expected [ i ] [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 551
score: 99.6052954889113
patch: if ( observed [ i ] >= observed [ i ] ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 552
score: 99.66662991431451
patch: dev = ( ( double ) observed [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 552
score: 99.64960123697917
patch: dev = expected [ i ] ; dev = expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 552
score: 99.62044503348214
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] [ observed . length ;
rank: 552
score: 99.61089035560344
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * 0 . 0 ] ;
rank: 552
score: 99.6093390969669
patch: dev = ( ( double ) observed [ i ] ) ; dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 552
score: 99.60697544642858
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] * dev /
rank: 552
score: 99.60527111235119
patch: dev = observed [ i ] ; if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { return sum CaMeL Sq ; }
rank: 553
score: 99.66657049005681
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 553
score: 99.62033081054688
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] length ;
rank: 553
score: 99.61073626893939
patch: try { dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 553
score: 99.60930524553571
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } else { sum CaMeL Sq += dev ;
rank: 553
score: 99.60697544642858
patch: if ( observed [ i ] != null ) { sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ;
rank: 553
score: 99.59873383620689
patch: j = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 554
score: 99.66656309185606
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . sum CaMeL Sq ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 554
score: 99.64936355064656
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; ;
rank: 554
score: 99.64443507339016
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] + dev * expected [ i ] ;
rank: 554
score: 99.62025107106855
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev += expected [ i ] ; } return sum CaMeL Sq ;
rank: 554
score: 99.60928165211396
patch: dev = ( observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 554
score: 99.60500686233108
patch: dev = observed [ i ] ; for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] - expected [ i ] ;
rank: 555
score: 99.64442443847656
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] + expected [ i ] ; } return sum CaMeL Sq ;
rank: 555
score: 99.62017059326172
patch: if ( observed [ i ] - expected [ i ] != 0 ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 555
score: 99.59869384765625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev ; sum CaMeL Sq += dev * dev / dev / dev ;
rank: 556
score: 99.64439561631944
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * 1 / expected [ i ] ;
rank: 556
score: 99.61023712158203
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * $NUMBER$ / expected [ i ] ; }
rank: 556
score: 99.60474917763158
patch: { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 556
score: 99.59865993923611
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev / expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 557
score: 99.66640625
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev / dev * expected [ i ] ;
rank: 557
score: 99.66272650824652
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ++ ] ;
rank: 557
score: 99.64436420641448
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev ;
rank: 557
score: 99.62001480594758
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / true [ i ] ;
rank: 557
score: 99.61017042590726
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / 1 [ i ] ;
rank: 557
score: 99.60904947916667
patch: ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 557
score: 99.60674641927083
patch: double dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] * expected [ i ] ;
rank: 557
score: 99.59862493699596
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 558
score: 99.66264073988971
patch: dev = ( ( double ) ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 558
score: 99.61013614430146
patch: dev = observed [ i ] ; for ( int i = 0 ; i < expected . length ; i ++ ) { dev = dev / expected [ i ] ;
rank: 558
score: 99.59842258029514
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] / dev * dev / expected [ i ] ;
rank: 559
score: 99.64426491477273
patch: dev = ( ( double ) observed [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 559
score: 99.6199951171875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] true ;
rank: 559
score: 99.60887908935547
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / observed [ i ] ; }
rank: 559
score: 99.60653686523438
patch: sum CaMeL Sq += ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 560
score: 99.64877614667338
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / i [ i ] ;
rank: 560
score: 99.6442162298387
patch: dev = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] - expected [ i ] ;
rank: 560
score: 99.61992536272321
patch: observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) * dev / expected [ i ] ;
rank: 560
score: 99.60883091517857
patch: observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 560
score: 99.60651266163794
patch: if ( observed [ i ] != null ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 560
score: 99.60448558910473
patch: for ( int i = 0 . 0 ; i < observed . length ; i ++ ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 560
score: 99.59833354334677
patch: dev = ( double ) ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 561
score: 99.64873504638672
patch: dev = expected [ i ] ; sum CaMeL Sq = dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 561
score: 99.64408151726974
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 561
score: 99.61963732489224
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = ( ( double ) observed [ i ] -
rank: 561
score: 99.60998141381049
patch: if observed [ i ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 561
score: 99.60882013494319
patch: sum CaMeL Sq = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 561
score: 99.598291015625
patch: if ( observed [ i ] - expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 562
score: 99.6660888671875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i 1 ] ;
rank: 562
score: 99.66225071957237
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 562
score: 99.60872395833333
patch: observed [ i ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 562
score: 99.59815848214286
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev / expected [ i ] ; sum CaMeL Sq += dev / dev / dev ;
rank: 563
score: 99.64865451388889
patch: dev = observed [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 563
score: 99.64394802517361
patch: i = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 563
score: 99.61914850050404
patch: dev = ( ( double ) observed [ i ] - expected [ i + 1 ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 563
score: 99.60967658547794
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ++ ] ;
rank: 563
score: 99.60625
patch: if ( observed [ i ] != null ) { dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 563
score: 99.59798990885416
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected . length ;
rank: 564
score: 99.61909484863281
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ++ ;
rank: 564
score: 99.60965401785714
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; return dev * dev / expected [ i ] ;
rank: 564
score: 99.60859818892045
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 564
score: 99.60614885602679
patch: if ( observed [ i ] != null ) { sum CaMeL Sq += ( observed [ i ] - expected [ i ] ) ; }
rank: 564
score: 99.604248046875
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev ; }
rank: 564
score: 99.5979891690341
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * ( expected [ i ] - dev ) ;
rank: 565
score: 99.66219075520833
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / dev / expected [ i ] ;
rank: 565
score: 99.64849175347223
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / dev ;
rank: 565
score: 99.61909337197581
patch: dev = ( ( double ) observed , observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 565
score: 99.60417063643293
patch: if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { dev = ( ( double ) observed [ i ] ) ;
rank: 566
score: 99.66215684678819
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] * ;
rank: 566
score: 99.64834681919643
patch: dev = expected [ i ] ; dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 566
score: 99.60847516741072
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } else { sum CaMeL Sq += dev * expected [ i ] ;
rank: 566
score: 99.60606166294643
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) - expected [ i ] ;
rank: 566
score: 99.60406650641026
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } }
rank: 567
score: 99.66548426011029
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 567
score: 99.64833984375
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev * dev / expected [ i ] ;
rank: 567
score: 99.64388020833333
patch: dev = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 567
score: 99.60605941280242
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev += observed [ i ] - expected [ i ] ; }
rank: 567
score: 99.59781087239584
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev ;
rank: 568
score: 99.64359283447266
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ; } return sum CaMeL Sq ;
rank: 568
score: 99.61873604910714
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq ;
rank: 568
score: 99.60919386340726
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected / dev [ i ] ;
rank: 568
score: 99.60605153729838
patch: dev += ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 568
score: 99.60361550071023
patch: if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 568
score: 99.59776088169643
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev / expected [ i ] / dev ;
rank: 569
score: 99.66537937973484
patch: dev = ( ( double ) ( observed [ i ] , expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 569
score: 99.66174710181451
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ length ] ;
rank: 569
score: 99.6482162475586
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; System
rank: 569
score: 99.64317737926136
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * Math / dev / expected [ i ] ;
rank: 569
score: 99.60911277488425
patch: if ( observed [ i ] <= expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 569
score: 99.60345928485577
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 569
score: 99.59767659505208
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( sum CaMeL Sq > dev ) { sum CaMeL Sq += dev * dev ; }
rank: 570
score: 99.64815266927083
patch: dev = ( dev - observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 570
score: 99.61841607862904
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / sum [ i ] ;
rank: 570
score: 99.5976318359375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev / expected ;
rank: 571
score: 99.66514677159927
patch: dev = ( dev [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 571
score: 99.66171264648438
patch: if ( ! is CaMeL Positive ( expected [ i ] - expected [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 571
score: 99.64315456814236
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 571
score: 99.61837670110887
patch: dev = observed [ i ] - expected [ i ] ; } else { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 571
score: 99.60903468276516
patch: dev = ( ( double ) observed [ i ] - expected [ i ++ ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 571
score: 99.60803985595703
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 571
score: 99.60597278225806
patch: dev += ( ( float ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 571
score: 99.59760573814656
patch: z = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 572
score: 99.6650619506836
patch: dev = ( ( double ) observed [ [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 572
score: 99.60899353027344
patch: c = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 572
score: 99.60796760110294
patch: synchronized ( dev ) { dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 572
score: 99.60587565104167
patch: double expected [ i ] = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 572
score: 99.60327962239583
patch: dev = dev [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 572
score: 99.59750366210938
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ; sum CaMeL Sq += expected [ i ] ;
rank: 573
score: 99.66165408572635
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev * dev / dev / expected [ i ] ;
rank: 573
score: 99.6475601196289
patch: dev = observed [ i ] ; dev = dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 573
score: 99.64312559185606
patch: dev = observed [ i ] + expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 573
score: 99.6079619436553
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / this / expected [ i ] ;
rank: 573
score: 99.60578522858796
patch: if ( observed [ i ] instanceof double ) dev = ( ( double ) observed [ i ] ) . expected [ i ] ;
rank: 573
score: 99.59745025634766
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * ( dev * dev / dev ) ;
rank: 574
score: 99.64754231770833
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / dev ;
rank: 574
score: 99.64311079545455
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return return sum CaMeL Sq ;
rank: 574
score: 99.60795084635417
patch: dev = dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 574
score: 99.60574161305146
patch: dev = ( ( double ) observed [ i ] - expected [ i ] [ 0 ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 574
score: 99.60308247227823
patch: dev = ( double ) ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 574
score: 99.59738060735887
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] - dev ;
rank: 575
score: 99.664794921875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] : expected [ i ] ;
rank: 575
score: 99.66143798828125
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * dev / dev / dev / expected [ i ] ;
rank: 575
score: 99.64753069196429
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 575
score: 99.64295111762152
patch: dev = ( ( double ) observed [ i ] ) + expected [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 575
score: 99.61803850446428
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * observed . length ;
rank: 575
score: 99.60873592601104
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * dev / expected / expected [ i ] ;
rank: 575
score: 99.60574079241071
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ; }
rank: 575
score: 99.60299435177365
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 575
score: 99.59735107421875
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / dev * dev / expected [ i ] ;
rank: 576
score: 99.64745396205358
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / dev / dev / expected [ i ] ;
rank: 576
score: 99.60772026909723
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 576
score: 99.59735107421875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / ( ( double ) observed [ i ] ) ;
rank: 577
score: 99.64290364583333
patch: dev = observed [ i ] + expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 577
score: 99.6176986694336
patch: dev [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 577
score: 99.608642578125
patch: dev = ( ( double ) observed [ i ] ) / expected ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 577
score: 99.60544084821429
patch: for ( int i = 0 ; i < observed [ i ] ; i ++ ) { sum CaMeL Sq += ( observed [ i ] - expected [ i ] ) ;
rank: 577
score: 99.59734552556819
patch: dev = ( ( double ) observed [ i ] - 1 [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 578
score: 99.66116980350378
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ;
rank: 578
score: 99.61765485491071
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } else
rank: 578
score: 99.608642578125
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 578
score: 99.60742950439453
patch: dev = observed [ i ] ; if ( dev < expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 578
score: 99.60541823814656
patch: dev = observed [ i ] * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] * expected [ i ] ;
rank: 578
score: 99.60286738954741
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 579
score: 99.66434363162878
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . this ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 579
score: 99.66110321969697
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * 1 * dev / expected [ i ] ;
rank: 579
score: 99.64722377232142
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev = dev * expected [ i ] ;
rank: 579
score: 99.64263325352823
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * $NUMBER$ / expected [ i ] ;
rank: 579
score: 99.60859680175781
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; } dev = dev * dev / expected [ i ] ;
rank: 579
score: 99.60541130514706
patch: if ( observed [ i ] - expected [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } }
rank: 579
score: 99.59724426269531
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev ; sum CaMeL Sq += dev * dev / dev / dev ;
rank: 580
score: 99.66106100643383
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) < observed . length ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 580
score: 99.61736863659274
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / out [ i ] ;
rank: 580
score: 99.60793169806985
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 580
score: 99.6072486139113
patch: dev = ( double - observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 580
score: 99.60538211945564
patch: double sum CaMeL Sq = ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 580
score: 99.60276636584052
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 581
score: 99.66425938760081
patch: dev = ( ( double [ ] ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 581
score: 99.66098484848484
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / dev [ i ] ;
rank: 581
score: 99.64694393382354
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * 0 / expected [ i ] ;
rank: 581
score: 99.60792699353448
patch: if ( expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 581
score: 99.60721472537878
patch: sum CaMeL Sq = ( ( Double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 581
score: 99.60242309570313
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 582
score: 99.64693777901786
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / dev * dev / expected [ i ] ;
rank: 582
score: 99.64229439400337
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } if ( sum CaMeL Sq
rank: 582
score: 99.61730536099138
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * abs [ i ] ;
rank: 582
score: 99.60784040178571
patch: dev = ( ( double ) observed [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 582
score: 99.60696231617646
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } else { dev = dev / expected [ i ] ; }
rank: 582
score: 99.60532699092742
patch: double observed [ i ] = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 582
score: 99.59713646673387
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * dev / dev / dev ;
rank: 583
score: 99.66068892045455
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ length ] ;
rank: 583
score: 99.64688846982759
patch: sum CaMeL Sq += observed [ i ] - expected [ i ] ; else sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 583
score: 99.64225769042969
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev ; sum CaMeL Sq += dev * dev / expected [ i ]
rank: 583
score: 99.61728515625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ] ;
rank: 583
score: 99.60763451360887
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * min / expected [ i ] ;
rank: 583
score: 99.6053107766544
patch: dev = observed [ i ] - ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 583
score: 99.597021484375
patch: if ( observed [ i ] != null ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev ; }
rank: 584
score: 99.66419638356855
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; break ;
rank: 584
score: 99.66068892045455
patch: double dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 584
score: 99.64681803385416
patch: sum CaMeL Sq += ( observed [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 584
score: 99.60754846643519
patch: sum CaMeL Sq += ( ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ) ;
rank: 584
score: 99.60519093480603
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] - expected [ i ] ;
rank: 584
score: 99.59690946691177
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / dev ; }
rank: 585
score: 99.66065772804055
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] ;
rank: 585
score: 99.61725531684027
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } else return sum CaMeL Sq ;
rank: 585
score: 99.60747238685344
patch: dev = ( ( double ) observed [ i ] ) . sum ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 585
score: 99.60683865017361
patch: dev = ( ( double ) observed [ i ] + expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 585
score: 99.60501302083334
patch: sum CaMeL Sq += ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 585
score: 99.60189016241776
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 585
score: 99.59690903172348
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] / dev ;
rank: 586
score: 99.66407037550404
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += $STRING$ * dev / expected [ i ] ;
rank: 586
score: 99.66052616003788
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev ;
rank: 586
score: 99.64678744612068
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; ;
rank: 586
score: 99.64197171118951
patch: dev = ( ( double ) observed [ i ] ) < observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 586
score: 99.6172111265121
patch: res = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 586
score: 99.60736294450432
patch: dev = ( ( double ) observed [ i ] ) [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 586
score: 99.60683741714016
patch: try { dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ;
rank: 586
score: 99.60498860677083
patch: dev = ( ( double ) observed [ i ] - ( expected [ i ] - expected [ i ] ) ) / expected [ i ] ;
rank: 586
score: 99.60183233963816
patch: for ( double i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 586
score: 99.59661690848215
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev / expected [ i ] ; sum CaMeL Sq += dev * dev / dev ;
rank: 587
score: 99.66402550899622
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] . sum CaMeL Sq ;
rank: 587
score: 99.64675810842803
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / dev / expected [ i ] ;
rank: 587
score: 99.60734610721983
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev = dev / dev / expected [ i ] ;
rank: 587
score: 99.60682333669355
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = dev / expected [ i ] ;
rank: 587
score: 99.60176809210526
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev ;
rank: 587
score: 99.59658633961396
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += expected [ i ] / dev ;
rank: 588
score: 99.66396755642361
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; observed [ i ] = dev ;
rank: 588
score: 99.66022805606617
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / dev / expected [ i ] ;
rank: 588
score: 99.64154052734375
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 588
score: 99.60670424952652
patch: sum CaMeL Sq += ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 588
score: 99.60483685661765
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / / expected [ i ] ;
rank: 588
score: 99.60165014022436
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev ;
rank: 588
score: 99.5965576171875
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev / dev ;
rank: 589
score: 99.66022049753289
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev ; } return sum CaMeL Sq ;
rank: 589
score: 99.64660295758928
patch: if ( observed [ i ] - expected [ i ] - expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * expected [ i ] ;
rank: 589
score: 99.64142002203526
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq + dev ;
rank: 589
score: 99.60657159213362
patch: observed [ i ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 589
score: 99.6015689247533
patch: if ( ! is CaMeL Positive ( observed [ i ] - expected [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 589
score: 99.59644368489583
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected ;
rank: 590
score: 99.66370307074652
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] ;
rank: 590
score: 99.64129638671875
patch: dev = ( ( double ) observed [ i ] ) - expected [ i 1 ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 590
score: 99.61638641357422
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * ( dev / dev / dev ) ;
rank: 590
score: 99.60621512276786
patch: ( ( double ) observed [ i ] - observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 590
score: 99.60149739583333
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return dev ;
rank: 591
score: 99.60715964988425
patch: dev += ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 591
score: 99.606201171875
patch: dev = ( ( double ) observed [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 591
score: 99.60461004849138
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev ;
rank: 591
score: 99.60149274553571
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += 1 * dev / dev / expected [ i ] ;
rank: 591
score: 99.59621756417411
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] / expected [ i ] ;
rank: 592
score: 99.64623305376838
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev ;
rank: 592
score: 99.6161873109879
patch: ch = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 592
score: 99.60699277935606
patch: int i = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 592
score: 99.60619354248047
patch: double max = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 592
score: 99.6014340049342
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; else sum CaMeL Sq += dev * expected [ i ] ;
rank: 592
score: 99.59618353074596
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] + dev / dev ;
rank: 593
score: 99.66345584753788
patch: dev = ( dev [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 593
score: 99.64611395474138
patch: ( ( double ) observed [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 593
score: 99.64120778729838
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; return sum CaMeL Sq ;
rank: 593
score: 99.61610514322916
patch: dev = ( ( double ) observed [ i ] - expected ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 593
score: 99.60696614583334
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; return dev * dev * dev / expected [ i ] ;
rank: 593
score: 99.60617404513889
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev * expected [ i ] ;
rank: 593
score: 99.60459321120689
patch: dev += ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 593
score: 99.60132649739583
patch: dev = observed [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ;
rank: 594
score: 99.66345584753788
patch: ( ( double ) observed [ i ] - expected [ i ] ) ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 594
score: 99.60695513556985
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; int sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 594
score: 99.60455137310606
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev * dev /
rank: 594
score: 99.60125732421875
patch: dev -- ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 594
score: 99.59595489501953
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev * expected [ i ] ; }
rank: 595
score: 99.65977354307432
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / dev [ i ] ;
rank: 595
score: 99.6409912109375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * 1 / expected [ i ] ;
rank: 595
score: 99.60452586206897
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . sum CaMeL Sq += dev * expected [ i ] ;
rank: 595
score: 99.60122598184121
patch: if ( is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 595
score: 99.59590366908482
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ( dev * dev ) ;
rank: 596
score: 99.64093338815789
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * expected [ i ] ;
rank: 596
score: 99.60685782596983
patch: dev = ( ( double ) observed [ i ] ) / dev ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 596
score: 99.60605153729838
patch: sum CaMeL Sq = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 596
score: 99.60448521205358
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ) ;
rank: 596
score: 99.6010978452621
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ 1 ] ;
rank: 596
score: 99.59589301215277
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * ( expected [ i ] - expected [ i ] ) ;
rank: 597
score: 99.65972715435606
patch: dev = ( ( double ) observed [ i ] - expected [ 1 ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ 0 ] ;
rank: 597
score: 99.60675048828125
patch: dev = ( ( double ) observed [ i ] ) . sum [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 597
score: 99.60432477678572
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; } sum CaMeL Sq += dev * expected [ i ] ;
rank: 597
score: 99.595703125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev ; sum CaMeL Sq += dev * dev / dev ;
rank: 598
score: 99.66328282510081
patch: dev = ( ( double ) observed [ i ] + expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 598
score: 99.64557562934027
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += observed [ i ] ;
rank: 598
score: 99.64056987147177
patch: dev = observed [ i ] * expected [ i ] * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 598
score: 99.61585828993056
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] [ expected [ i ] ;
rank: 598
score: 99.60674689797794
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected / expected [ i ] ; }
rank: 598
score: 99.60422279094827
patch: dev += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] * expected [ i ] ;
rank: 598
score: 99.5956787109375
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev / expected [ i ] ;
rank: 599
score: 99.65952435661765
patch: else { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 599
score: 99.64026641845703
patch: i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 599
score: 99.60673384232955
patch: double dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 599
score: 99.60588727678571
patch: ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 599
score: 99.6005615234375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * - expected [ i ] ;
rank: 599
score: 99.59561649445564
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } return dev * dev / dev / expected [ 0 ] ;
rank: 600
score: 99.66302849264706
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] + expected [ i ] ;
rank: 600
score: 99.65943862452652
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i
rank: 600
score: 99.60586368336396
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = dev [ i ] ;
rank: 600
score: 99.6040926846591
patch: if ( observed [ i ] instanceof double ) ( ( double ) observed [ i ] ) . sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 600
score: 99.59546875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; break ;
rank: 601
score: 99.66285536024306
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] .
rank: 601
score: 99.606689453125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / $NUMBER$ ;
rank: 601
score: 99.60579681396484
patch: dev += ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 601
score: 99.60397865032327
patch: if ( observed [ i ] - expected [ i ] < expected [ i ] ) { sum CaMeL Sq += observed [ i ] ; }
rank: 601
score: 99.60036892361111
patch: for ( int i = 0 ; i < expected . length ; i ++ ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 601
score: 99.595458984375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ( expected [ i ] - expected [ i ] ) ; }
rank: 602
score: 99.66282653808594
patch: ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ;
rank: 602
score: 99.64530304939517
patch: dev = ( ( double ) observed [ i ] - observed [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 602
score: 99.61559340533088
patch: if ( observed [ i ] - observed [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 602
score: 99.60654122488839
patch: dev = dev [ i ] ; dev = dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 602
score: 99.60572007123162
patch: sum [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 602
score: 99.60387002268145
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] * dev / expected [ i ] ;
rank: 602
score: 99.60026041666667
patch: double dev = dev [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 602
score: 99.5954345703125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev [ i ] ; }
rank: 603
score: 99.66281307444854
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 603
score: 99.65940903172348
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / Math / expected [ i ] ;
rank: 603
score: 99.64530066287878
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] + expected [ i ] ;
rank: 603
score: 99.60640716552734
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; throw new Runtime CaMeL Exception ( $STRING$ + expected [ i ] ) ;
rank: 603
score: 99.60548502604166
patch: try { dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 603
score: 99.6038589477539
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 603
score: 99.6002197265625
patch: dev = observed [ i ] ; { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 603
score: 99.59533342633928
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] * dev / expected [ i ] ; }
rank: 604
score: 99.66276304183468
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . expected ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 604
score: 99.64527209051724
patch: observed [ i ] = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 604
score: 99.63951280381944
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 604
score: 99.61531829833984
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] false ;
rank: 604
score: 99.60617591594827
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; return ( ( double ) observed [ i ] ) ;
rank: 604
score: 99.60376694623162
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { sum CaMeL Sq += ( observed [ i ] - expected [ i ] ) ;
rank: 604
score: 99.60021520543981
patch: if ( observed [ i ] >= expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 604
score: 99.59527587890625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev * dev / dev / dev ;
rank: 605
score: 99.65916489109848
patch: start = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 605
score: 99.64522298177083
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - 0 [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 605
score: 99.61512493265086
patch: double expected = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 605
score: 99.60609759706439
patch: int expected = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 605
score: 99.60374401461694
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev * expected [ i ] ;
rank: 605
score: 99.60015044341216
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev ;
rank: 605
score: 99.59525669642858
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] / dev ;
rank: 606
score: 99.61512411794355
patch: dev = observed [ i ] - expected [ i ] [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 606
score: 99.60593894675925
patch: long dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 606
score: 99.605224609375
patch: dev = observed [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ; } sum CaMeL Sq += dev * expected [ i ] ;
rank: 606
score: 99.60367838541667
patch: double observed [ i ] = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 607
score: 99.61505323840726
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq -= dev / dev / expected [ i ] ;
rank: 607
score: 99.60591634114583
patch: if ( expected [ i ] == ( double ) expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 607
score: 99.60520777209052
patch: sum CaMeL Sq = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 607
score: 99.60346536075367
patch: if ( observed [ i ] instanceof double [ ] ) { dev = ( ( double [ ] ) observed [ i ] ) . double CaMeL Value ( ) ; }
rank: 607
score: 99.59990864415323
patch: dev = observed [ i ] ; if ( observed [ i ] == 0 ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 607
score: 99.59520004734848
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( dev > dev ) { dev += expected [ i ] ; }
rank: 608
score: 99.66239289314517
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * this . expected [ i ] ;
rank: 608
score: 99.60514322916667
patch: dev = observed [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * expected [ i ] ;
rank: 608
score: 99.59979051159274
patch: if ( observed [ i ] <= observed [ i ] ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 608
score: 99.59512033770162
patch: if ( observed [ i ] - expected [ i ] > dev ) { sum CaMeL Sq += expected [ i ] / expected [ i ] ; }
rank: 609
score: 99.66232781661184
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . expected [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 609
score: 99.65898895263672
patch: dev = ( ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 609
score: 99.63914489746094
patch: dev = ( ( double ) observed [ i ] ) ( expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 609
score: 99.61494445800781
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq double += dev * dev / expected [ i ] ;
rank: 609
score: 99.60506439208984
patch: dev = ( ( double - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 609
score: 99.60332845052083
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev += observed [ i ] - expected [ i ] ;
rank: 609
score: 99.59958666424419
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev ;
rank: 609
score: 99.59501509232955
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] + dev / dev ;
rank: 610
score: 99.6589591733871
patch: dev = ( ( double ) observed [ i ] || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) ;
rank: 610
score: 99.64454868861607
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] + dev ;
rank: 610
score: 99.61494445800781
patch: dev ++ ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 610
score: 99.60562626008064
patch: double ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 610
score: 99.60503791360294
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * dev / expected [ i ] ; }
rank: 610
score: 99.60331333705358
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; } sum CaMeL Sq += dev * expected [ i ] ;
rank: 610
score: 99.59951346261161
patch: dev = observed [ i ] - observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 611
score: 99.65884560032895
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 611
score: 99.63896348741319
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * $NUMBER$ / expected [ i ] ;
rank: 611
score: 99.61494298135081
patch: dev ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 611
score: 99.60330107717803
patch: dev += observed [ i ] - expected [ i ] ; } sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 611
score: 99.59943781672297
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } }
rank: 612
score: 99.64414654356061
patch: dev = ( ( double ) expected [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 612
score: 99.61475451239224
patch: dev = ( ( float ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 612
score: 99.59491557459677
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ( dev / expected [ i ] ) ;
rank: 613
score: 99.64407687717014
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += observed [ i ] ;
rank: 613
score: 99.61474609375
patch: dev = observed [ i ] - expected [ i ] ; } else { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 613
score: 99.60534298058712
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 613
score: 99.60317993164062
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 613
score: 99.5948845358456
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev [ i ] ; }
rank: 614
score: 99.66193704044117
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] : expected [ i ] ;
rank: 614
score: 99.65850151909723
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / dev / expected [ i ] ; }
rank: 614
score: 99.64405014935662
patch: dev = observed [ i ] ; dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 614
score: 99.63880072699652
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] + expected [ i ] ;
rank: 614
score: 99.6053133877841
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; { sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 614
score: 99.60485121783088
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 614
score: 99.60315393518519
patch: double observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ;
rank: 614
score: 99.59922666807432
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ; sum CaMeL Sq += dev * dev [ i ] ; }
rank: 614
score: 99.59479836856617
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev * dev / expected [ i ] ; }
rank: 615
score: 99.66192626953125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ! dev * dev / expected [ i ] ;
rank: 615
score: 99.65834369081439
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ 1 ] ;
rank: 615
score: 99.63869826858108
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return observed . length ;
rank: 615
score: 99.60511779785156
patch: dev = ( ( Object ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 615
score: 99.60478973388672
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 615
score: 99.59899508568549
patch: dev = ( ( double ) observed [ i ] - expected [ 1 ] ) ; sum CaMeL Sq += dev * dev / expected [ 0 ] ;
rank: 615
score: 99.594775390625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev ; sum CaMeL Sq += dev * dev / dev ;
rank: 616
score: 99.6619140625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ! dev * expected [ i ] ;
rank: 616
score: 99.65833804481908
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) ;
rank: 616
score: 99.638671875
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] - expected [ i ] ; } return sum CaMeL Sq ;
rank: 616
score: 99.61436806955645
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / default [ i ] ;
rank: 616
score: 99.60501006155303
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if expected [ i ] = dev * dev / expected [ i ] ;
rank: 616
score: 99.60457356770833
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * expected / expected [ i ] ; }
rank: 616
score: 99.60308837890625
patch: dev = ( ( double ) observed [ i ] ) . expected [ i ] ; ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 616
score: 99.5987060546875
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq = dev * dev / dev / dev / expected [ i ] ;
rank: 616
score: 99.59471176609848
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected . length ; }
rank: 617
score: 99.65832149621212
patch: dev = ( ( double ) observed [ i ] + expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 617
score: 99.64387512207031
patch: sum CaMeL Sq = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 617
score: 99.6143569946289
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / [ i ] ;
rank: 617
score: 99.60491388494319
patch: try { dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 617
score: 99.60453033447266
patch: dev = ( ( Integer ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 617
score: 99.60305884576613
patch: if ( observed [ i ] instanceof double ) { sum CaMeL Sq += ( ( double ) observed [ i ] ) . double CaMeL Value ( ) ;
rank: 617
score: 99.59853515625
patch: dev = observed [ i ] . [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] [ i ] ;
rank: 617
score: 99.59470502068015
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( sum CaMeL Sq > dev ) { sum CaMeL Sq += dev ; }
rank: 618
score: 99.66178385416667
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 618
score: 99.65823462701613
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev ;
rank: 618
score: 99.64387116608796
patch: sum CaMeL Sq = ( ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ) ;
rank: 618
score: 99.604833984375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / double [ ] ;
rank: 618
score: 99.60286690848214
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev += ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 618
score: 99.59851467993951
patch: dev = ( int ) ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 618
score: 99.59462483723958
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev ; sum CaMeL Sq += dev / dev ;
rank: 619
score: 99.66176165956439
patch: dev = ( ( double ) observed [ i ] - $STRING$ + expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 619
score: 99.65806255918561
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * 1 / expected [ i ] ;
rank: 619
score: 99.63834228515626
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev ; return sum CaMeL Sq ;
rank: 619
score: 99.6139777688419
patch: if ( observed [ i ] - expected [ i ] != observed [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 619
score: 99.60482675057871
patch: dev = ( ( double ) observed [ i ] ; { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 619
score: 99.6042709350586
patch: double sum = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 619
score: 99.602734375
patch: if ( observed [ i ] instanceof double ) { dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 619
score: 99.59847285829741
patch: if ( observed [ i ] != 0 ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 619
score: 99.59462193080357
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ( dev / dev ) ;
rank: 620
score: 99.66173598345588
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ ;
rank: 620
score: 99.604736328125
patch: dev = ( ( double ) observed [ i ] ) [ expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 620
score: 99.59835476345486
patch: if ( ! is CaMeL Non CaMeL Negative ( expected [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 621
score: 99.63822021484376
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += sum CaMeL Sq ;
rank: 621
score: 99.60464913504464
patch: for ( int i = observed [ i ] ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 621
score: 99.60408528645833
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev += expected [ i ] ;
rank: 621
score: 99.59830147879464
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / 1 / expected [ i ] ;
rank: 621
score: 99.59454977101294
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * dev / dev ;
rank: 622
score: 99.65794214709052
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i
rank: 622
score: 99.63819146925404
patch: max = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 622
score: 99.60452586206897
patch: dev = ( ( double ) observed [ i ] ) . ( ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 622
score: 99.60401153564453
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / dev ;
rank: 622
score: 99.60265350341797
patch: double sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 622
score: 99.59827473958333
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i + expected [ i ] ;
rank: 622
score: 99.59439823545259
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev ; }
rank: 623
score: 99.61341857910156
patch: dev $NUMBER$ = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 623
score: 99.59824350717905
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 624
score: 99.6611557006836
patch: dev = ( ( double ) observed [ i ] - expected [ [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 624
score: 99.6576919555664
patch: String dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 624
score: 99.63790457589286
patch: dev = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev ;
rank: 624
score: 99.6133544921875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / i ;
rank: 624
score: 99.60431985294117
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / $NUMBER$ / expected [ i ] ; }
rank: 624
score: 99.60256696428571
patch: if ( observed [ i ] instanceof double [ ] ) { sum CaMeL Sq = ( ( double [ ] ) observed [ i ] ) . double CaMeL Value ( ) ;
rank: 624
score: 99.59437471277573
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * ( ( double ) observed [ i ] ) ;
rank: 625
score: 99.66106100643383
patch: dev = observed [ i ] ; sum CaMeL Sq += dev / dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 625
score: 99.61319732666016
patch: dev = ( ( double ) observed [ i ] - expected [ ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 625
score: 99.60408289292279
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) == dev ) { sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 625
score: 99.60390940020162
patch: dev = ( double - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 625
score: 99.60253118699596
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 625
score: 99.59817665501645
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 626
score: 99.66103663589016
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += expected [ i ] ;
rank: 626
score: 99.65761126893939
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev ;
rank: 626
score: 99.64349365234375
patch: dev = ( ( double ) observed [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 626
score: 99.63718668619792
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 626
score: 99.60396575927734
patch: if ( observed [ i ] - expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 626
score: 99.60370342548077
patch: observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ;
rank: 626
score: 99.59802639868951
patch: dev = ( ( double ) observed [ i ] - expected [ 0 ] ) ; sum CaMeL Sq += dev * dev / expected [ 0 ] ;
rank: 626
score: 99.59428013392858
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev / dev / dev / dev ;
rank: 627
score: 99.66094970703125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq
rank: 627
score: 99.65730054450758
patch: i = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 627
score: 99.60390625
patch: if ( expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 627
score: 99.60368347167969
patch: sum CaMeL Sq += ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 627
score: 99.59786283052884
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + observed [ i ] - expected [ i ] ) ; } for ( int i = 0 ; i < observed . length ; i ++ )
rank: 628
score: 99.6571747750947
patch: if ( ! is CaMeL Positive ( expected [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 628
score: 99.64341227213542
patch: dev = observed [ i ] ; sum CaMeL Sq += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 628
score: 99.60385594223484
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * 0 . 0 / expected [ i ] ;
rank: 629
score: 99.6431884765625
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = dev / expected [ i ] ;
rank: 629
score: 99.63707817925348
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 629
score: 99.61302027209052
patch: if ( observed [ i ] - expected [ i ] - expected [ i ] ) sum CaMeL Sq += dev * expected [ i ] ;
rank: 629
score: 99.60385237068965
patch: dev = ( ( double ) observed [ i ] - $NUMBER$ ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 629
score: 99.59734910534274
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = 0 * dev / expected [ i ] ;
rank: 630
score: 99.66075942095588
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 630
score: 99.63700226814517
patch: dev = observed [ i ] * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ;
rank: 630
score: 99.6036605834961
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ; }
rank: 630
score: 99.60216022359914
patch: double dev = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 630
score: 99.59394182477679
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] + dev ;
rank: 631
score: 99.65677195581897
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / dev / dev / expected [ i ] ;
rank: 631
score: 99.64304421164773
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ;
rank: 631
score: 99.63698216488487
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return ! sum CaMeL Sq ;
rank: 631
score: 99.6128921508789
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq Math += dev * dev / expected [ i ] ;
rank: 631
score: 99.6037353515625
patch: if ( observed [ i ] != ( double ) expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 631
score: 99.6020866842831
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * dev ; }
rank: 631
score: 99.59713040865384
patch: dev = dev [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 631
score: 99.59389796401516
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / ( ( double ) dev ) ;
rank: 632
score: 99.61271720096983
patch: p = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 632
score: 99.60362413194444
patch: if ( expected [ i ] == observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 632
score: 99.59710286458333
patch: dev -- ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 633
score: 99.66056823730469
patch: sum CaMeL Sq += dev * ( observed [ i ] + expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 633
score: 99.61264829282408
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev * dev / expected [ i ] ;
rank: 633
score: 99.60205078125
patch: if ( observed [ i ] - expected . length > 0 ) { sum CaMeL Sq += ( observed [ i ] - expected [ i ] ) ; }
rank: 634
score: 99.656494140625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ ++ i ] ;
rank: 634
score: 99.64270833333333
patch: dev = expected [ i ] ; dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 634
score: 99.63692898220486
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += 1 * dev / expected [ i ] ;
rank: 634
score: 99.61260986328125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 634
score: 99.60342899445564
patch: dev = observed [ i ] ; dev = dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 634
score: 99.60200718470982
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / ( expected [ i ] - expected [ i ] ) ;
rank: 634
score: 99.59649188701923
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 635
score: 99.66025677849265
patch: dev = ( double ) ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 635
score: 99.63685263356855
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 635
score: 99.61253356933594
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; return sum CaMeL Sq * dev * dev / expected [ i ] ;
rank: 635
score: 99.59626600477431
patch: dev = ( double ) observed [ i ] ; dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 635
score: 99.59363162878788
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev / expected [ i ] ; sum CaMeL Sq += dev / dev ;
rank: 636
score: 99.65635922080592
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } else { return sum CaMeL Sq ; }
rank: 636
score: 99.63683403862848
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += 1 * dev / expected [ i ] ;
rank: 636
score: 99.6123283140121
patch: if ( observed [ i ] - expected [ i ] ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 636
score: 99.60340465198864
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = dev / dev ;
rank: 636
score: 99.60181451612904
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev [ i ] * dev [ i ] ;
rank: 636
score: 99.59600423177083
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] + expected [ i ] ;
rank: 637
score: 99.65617290296052
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev [ i ] ; sum CaMeL Sq += dev [ i ] ;
rank: 637
score: 99.64252299647177
patch: dev = ( double ) observed [ i ] ; dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 637
score: 99.63666092722039
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 637
score: 99.61232043850806
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / round [ i ] ;
rank: 637
score: 99.60337386592742
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * observed [ i ] ;
rank: 637
score: 99.601806640625
patch: double observed [ i ] = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 637
score: 99.59583333333333
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev * expected [ i ] ;
rank: 637
score: 99.59345005580357
patch: synchronized ( observed [ i ] ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev ; }
rank: 638
score: 99.64238449622844
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev ] ;
rank: 638
score: 99.60333251953125
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev / expected [ i ] ;
rank: 638
score: 99.601806640625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ; ;
rank: 638
score: 99.59573703342014
patch: if ( dev ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 639
score: 99.66000471443965
patch: sum CaMeL Sq += dev [ i ] / expected [ i ] ; sum CaMeL Sq += dev [ i ] / expected [ i ] ;
rank: 639
score: 99.63650512695312
patch: i = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 639
score: 99.60302734375
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev [ i ] ; }
rank: 639
score: 99.6027314157197
patch: double dev = ( ( double ) observed [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 639
score: 99.60176225142045
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] - expected [ i ] ; }
rank: 639
score: 99.59556820518092
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 639
score: 99.59324079241071
patch: if ( observed [ i ] ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev ; }
rank: 640
score: 99.64231872558594
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; /
rank: 640
score: 99.63646104600694
patch: dev = ( ( double ) observed [ i ] - observed [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 640
score: 99.61208580280173
patch: dev = ( Math ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 640
score: 99.60301971435547
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected * dev / expected [ i ] ; }
rank: 640
score: 99.60273088727679
patch: if ( expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 640
score: 99.60163116455078
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected . sum CaMeL Sq ;
rank: 640
score: 99.59300074084052
patch: if ( observed [ i ] ) { sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 641
score: 99.65577697753906
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) != 0 ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 641
score: 99.6422348022461
patch: dev = observed [ i ] ; dev = dev / expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 641
score: 99.63645935058594
patch: dev = ( ( double ) short ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 641
score: 99.61189270019531
patch: dev = ( ( final double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 641
score: 99.6027123235887
patch: dev = ( dev * expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 641
score: 99.60258214613971
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } else { sum CaMeL Sq += expected [ i ] ; }
rank: 641
score: 99.60152994791666
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev * dev /
rank: 641
score: 99.59534976356908
patch: dev = observed [ i ] ; for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ; } return sum CaMeL Sq ;
rank: 642
score: 99.65979766845703
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i 1 ] ;
rank: 642
score: 99.65575358072917
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev * dev / dev / dev / expected [ i ] ;
rank: 642
score: 99.64221954345703
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev = dev * dev / expected [ i ] ;
rank: 642
score: 99.6364548141892
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 642
score: 99.61188507080078
patch: dev = ( ( double ) observed , i - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 642
score: 99.60267962831439
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] = dev ;
rank: 642
score: 99.6025811557112
patch: dev = ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 642
score: 99.59510540140086
patch: if ( observed [ i ] == observed [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 642
score: 99.5928515625
patch: dev += ( ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ) ;
rank: 643
score: 99.65574596774194
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev [ i ] ;
rank: 643
score: 99.64201108870968
patch: dev = ( ( double ) min [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 643
score: 99.63643391927083
patch: dev = ( double ) expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 643
score: 99.61175362723215
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i + 1 ] ;
rank: 643
score: 99.59502301897321
patch: if ( observed [ i ] == 0 ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 644
score: 99.63631439208984
patch: dev = observed [ i ] [ 0 ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] [ 0 ] ;
rank: 644
score: 99.61174011230469
patch: dev = ( ( double ) observed [ i 0 ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 644
score: 99.6025390625
patch: double dev += ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 644
score: 99.60248565673828
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 644
score: 99.60124860491071
patch: double observed [ i ] = observed [ i ] * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 644
score: 99.5927963256836
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev ; } return dev ;
rank: 645
score: 99.65971105238971
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 645
score: 99.65550278172348
patch: expected = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 645
score: 99.64182044719827
patch: sum CaMeL Sq += dev * dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 645
score: 99.61168077256944
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } else { return sum CaMeL Sq ;
rank: 645
score: 99.60250854492188
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev [ i ] ; }
rank: 645
score: 99.59466083233173
patch: if ( observed [ i ] ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 645
score: 99.59278918850806
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 646
score: 99.65970495975378
patch: dev = is CaMeL Non CaMeL Negative ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 646
score: 99.61158014112904
patch: i = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 646
score: 99.60249328613281
patch: if ( expected [ i ] == expected [ i ] ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 646
score: 99.60224465762867
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ; }
rank: 646
score: 99.59463840060764
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { dev = ( ( double ) observed [ i ] ) ;
rank: 646
score: 99.59259230090726
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; } return dev * dev / dev / expected [ 0 ] ;
rank: 647
score: 99.65968540736607
patch: dev = ( ( double ) observed , observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 647
score: 99.65541400331439
patch: dev = observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] ;
rank: 647
score: 99.63619109122983
patch: dev = ( ( double ) observed [ i ] ) << expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 647
score: 99.60245487607759
patch: dev = ( ( double ) observed [ i ] ) . expected ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 647
score: 99.60222311580883
patch: sum CaMeL Sq = ( ( double - observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 647
score: 99.5946044921875
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum ;
rank: 648
score: 99.65540907118056
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( ! is CaMeL Non CaMeL Negative ( observed ) ) { return sum CaMeL Sq ;
rank: 648
score: 99.61141475554436
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev = dev * dev / dev / expected [ i ] ;
rank: 648
score: 99.60221616683468
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * observed [ i ] ;
rank: 648
score: 99.59455500422297
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 648
score: 99.59235174005681
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * ( expected [ i ] / dev ) ;
rank: 649
score: 99.65937356387867
patch: dev = ( dev ) ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 649
score: 99.64157540457589
patch: dev = expected [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 649
score: 99.63616622121711
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) 1 ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 649
score: 99.61138705549568
patch: dev = ( long ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 649
score: 99.60235954733456
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = observed [ i ] ;
rank: 649
score: 99.60096650965073
patch: if ( observed [ i ] - expected [ i ] < expected [ i ] ) { sum CaMeL Sq += expected [ i ] * expected [ i ] ; }
rank: 649
score: 99.59436348157051
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 649
score: 99.59232584635417
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * ( expected [ i ] ;
rank: 650
score: 99.65925867417279
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; sum CaMeL Sq += dev / dev * expected [ i ] ;
rank: 650
score: 99.65508711965461
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ; return sum CaMeL Sq ;
rank: 650
score: 99.64157006048387
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * ( expected [ i ] - expected [ i ] ) ;
rank: 650
score: 99.63608912417763
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 650
score: 99.60232451467803
patch: long expected = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 650
score: 99.5922622680664
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev / expected . length ;
rank: 651
score: 99.65920928030303
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } return observed ;
rank: 651
score: 99.64154730902777
patch: dev = expected [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 651
score: 99.63608648838141
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . sum ;
rank: 651
score: 99.61133600050404
patch: dev = ( ( double ) t [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 651
score: 99.60189819335938
patch: double expected = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 651
score: 99.592138671875
patch: synchronized ( observed [ i ] ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev ; }
rank: 652
score: 99.65488688151042
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev [ i ] ;
rank: 652
score: 99.63605143229167
patch: dev = ( int ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 652
score: 99.6021728515625
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ++ ] ;
rank: 652
score: 99.60184972426471
patch: sum CaMeL Sq = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 652
score: 99.60068044354838
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 652
score: 99.59388856630068
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ; return sum CaMeL Sq ; }
rank: 652
score: 99.59207916259766
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev ;
rank: 653
score: 99.64142042590726
patch: dev = ( ( double ) expected [ i ] , expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 653
score: 99.6113044984879
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * double / expected [ i ] ;
rank: 653
score: 99.60216567095588
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = dev / expected [ i ] ;
rank: 653
score: 99.60067661830357
patch: if ( observed [ i ] != null ) { sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ;
rank: 653
score: 99.59369365985577
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev ; }
rank: 654
score: 99.65882975260416
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 654
score: 99.65465369591347
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + expected [ i ] ) ; }
rank: 654
score: 99.64131673177083
patch: sum CaMeL Sq += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ;
rank: 654
score: 99.61128997802734
patch: dev = ( ( double ) observed [ i ] - dev ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 654
score: 99.60167585100446
patch: if ( observed [ i ] < expected [ i ] ) { sum CaMeL Sq = dev * dev / expected [ i ] ; }
rank: 654
score: 99.60029454385081
patch: ( ( double ) observed [ i ] - expected [ i ] ) . sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 654
score: 99.59333057892628
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . 0 ;
rank: 654
score: 99.59205627441406
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ; sum CaMeL Sq += dev * dev / dev / dev ;
rank: 655
score: 99.65464952256944
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ] ;
rank: 655
score: 99.61128743489583
patch: dev = ( ( double ) observed [ i ] - $STRING$ ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 655
score: 99.60197202620968
patch: dev = ( dev * observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 655
score: 99.59328099300987
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev ;
rank: 655
score: 99.5919189453125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev + dev / dev ;
rank: 656
score: 99.65864832261029
patch: dev = observed [ i ] ; sum CaMeL Sq = dev * dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 656
score: 99.64127022879464
patch: try { dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 656
score: 99.63578287760417
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] - expected [ i ] ;
rank: 656
score: 99.60189383370536
patch: if ( expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev / dev / expected [ i ] ; }
rank: 656
score: 99.60111781529018
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] - expected [ i ] ) ;
rank: 656
score: 99.593017578125
patch: dev = observed [ i ] ; sum CaMeL Sq = dev * dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 656
score: 99.591796875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected ;
rank: 657
score: 99.65446703361742
patch: dev = ( ( int ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev [ i ] ;
rank: 657
score: 99.64124348958333
patch: dev = observed [ i ] ; dev = dev / observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 657
score: 99.60188062263258
patch: dev = ( ( double ) observed [ i ] ) ; if ( dev == 0 ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 657
score: 99.6001205444336
patch: if ( observed [ i ] - expected . length > $NUMBER$ ) { sum CaMeL Sq += ( observed [ i ] - expected [ i ] ) ; }
rank: 657
score: 99.591796875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / ( dev / dev ) ;
rank: 658
score: 99.64115265877017
patch: dev = expected [ i ] - observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 658
score: 99.63535628780242
patch: first = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 658
score: 99.60176849365234
patch: dev = ( double ) ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 658
score: 99.6008818655303
patch: expected [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 658
score: 99.60009047564338
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev / dev [ i ] ; sum CaMeL Sq += dev [ i ] ;
rank: 658
score: 99.5928155307112
patch: int dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 658
score: 99.59178845635776
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += expected [ i ] * dev / expected [ i ] ;
rank: 659
score: 99.65427652994792
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 659
score: 99.64112903225806
patch: other = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 659
score: 99.63509792751736
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * $NUMBER$ / expected [ i ] ;
rank: 659
score: 99.61102885584677
patch: dev = ( Math ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 659
score: 99.60168909143519
patch: dev = observed [ i ] * expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 659
score: 99.60002188846983
patch: dev = ( ( double ) observed [ i ] ) . observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 660
score: 99.65808499243951
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected , expected [ i ] ;
rank: 660
score: 99.61093244881465
patch: long dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 660
score: 99.60160319010417
patch: if ( ( double ) observed [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 660
score: 99.60086059570312
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / max [ i ] ; }
rank: 660
score: 99.59998739919355
patch: dev = Math . min ( observed [ i ] , observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 660
score: 99.59173943014706
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( dev > dev ) { sum CaMeL Sq += dev * dev ; }
rank: 661
score: 99.65806136592742
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } }
rank: 661
score: 99.65420532226562
patch: dev = ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 661
score: 99.61084747314453
patch: if ( observed [ i ] [ expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 661
score: 99.60146011844758
patch: dev = ( ( double ) observed [ i ] ) [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 661
score: 99.59236653645833
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { dev = ( ( double ) observed [ i ] ) ;
rank: 661
score: 99.59171840122768
patch: if ( observed [ i ] - expected [ i ] > dev ) { sum CaMeL Sq += dev / expected [ i ] ; }
rank: 662
score: 99.65804617745536
patch: dev = ( ( double ) observed , expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 662
score: 99.64085557725694
patch: dev = ( ( double ) observed [ i ] - 0 [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 662
score: 99.63458448840726
patch: dev = ( ( double ) observed [ i ] ) + observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 662
score: 99.60141453598484
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = dev * dev ;
rank: 662
score: 99.60076349431819
patch: if ( observed [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ; }
rank: 662
score: 99.5923272494612
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 662
score: 99.5916748046875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev / dev ; sum CaMeL Sq += dev ;
rank: 663
score: 99.64054624495968
patch: ( ( ( double ) observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 663
score: 99.63456895616319
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ++ expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 663
score: 99.60071910511364
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / sum CaMeL Sq ;
rank: 663
score: 99.59984537760417
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) / expected [ i ] ;
rank: 663
score: 99.59161376953125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / ( dev ) ;
rank: 663
score: 99.59129668445122
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { return dev ; }
rank: 664
score: 99.65796661376953
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; i ++ ;
rank: 664
score: 99.65360144412878
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) != 0 ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 664
score: 99.640380859375
patch: dev = ! observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 664
score: 99.63447401258681
patch: dev = ( ( int ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 664
score: 99.60139465332031
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ++ ] ;
rank: 664
score: 99.6005859375
patch: dev = ( ( double - expected [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 664
score: 99.59140625
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ) / expected [ i ] ;
rank: 664
score: 99.59116036551339
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * $NUMBER$ / dev / expected [ i ] ;
rank: 665
score: 99.65793971011513
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] . dev / expected [ i ] ;
rank: 665
score: 99.6403099798387
patch: sum CaMeL Sq = new ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 665
score: 99.63446044921875
patch: dev = observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 665
score: 99.60137728987068
patch: if ( expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } }
rank: 665
score: 99.60054016113281
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * observed [ i ] ; }
rank: 665
score: 99.59967595880681
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev /
rank: 665
score: 99.59137641059027
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev ; sum CaMeL Sq += dev / dev ;
rank: 665
score: 99.59115683065879
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev ;
rank: 666
score: 99.6578857421875
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ; } return sum CaMeL Sq ;
rank: 666
score: 99.65342673277243
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( ! is CaMeL Non CaMeL Negative ( expected [ i ] ) ) { return sum CaMeL Sq ;
rank: 666
score: 99.64026272681451
patch: sum CaMeL Sq += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 666
score: 99.6343009702621
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq + sum CaMeL Sq ;
rank: 666
score: 99.61051694808468
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * package / expected [ i ] ;
rank: 666
score: 99.6004638671875
patch: dev = ( ( double ) observed [ i ] ( expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 666
score: 99.59923864293981
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += expected [ i ] - expected [ i ] ;
rank: 667
score: 99.65335886101974
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 667
score: 99.6402359008789
patch: dev = expected [ i ] ; dev = dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 667
score: 99.61050907258064
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - dev ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 667
score: 99.60023822206439
patch: dev [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 667
score: 99.599072265625
patch: if ( observed [ i ] instanceof double ) { sum CaMeL Sq += ( ( double ) observed [ i ] ) . expected [ i ] ;
rank: 667
score: 99.59134347098214
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] + dev / dev / dev ;
rank: 667
score: 99.5910412016369
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 668
score: 99.65773168103448
patch: dev = ( ( double ) observed [ i ] , expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 668
score: 99.65327592329545
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev * expected [ i ] ;
rank: 668
score: 99.63390299479167
patch: dev = ( ( double ) observed [ i ] - expected : dev ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 668
score: 99.61042022705078
patch: dev -- = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 668
score: 99.60127397017045
patch: dev = ! ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 668
score: 99.59996377268145
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; } sum CaMeL Sq += dev * expected [ i ] ;
rank: 668
score: 99.59904233870968
patch: dev = ( ( double ) observed [ i ] - 1 . 0 ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 668
score: 99.59124940814394
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev / expected [ i ] ; sum CaMeL Sq += dev / dev ;
rank: 669
score: 99.65758167613636
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] [ i ] ;
rank: 669
score: 99.64016197467673
patch: ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 669
score: 99.63338741179436
patch: dev = dev [ i ] - expected [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 669
score: 99.61039881552419
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq * dev * dev / expected [ i ] ;
rank: 669
score: 99.59123678768383
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev / expected [ i ] ; sum CaMeL Sq += expected [ i ] ;
rank: 669
score: 99.59090169270833
patch: dev = ( double ) observed [ i ] [ 0 ] ; sum CaMeL Sq += dev * dev / expected [ i ] [ 0 ] ;
rank: 670
score: 99.63334803427419
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += 1 * dev / expected [ i ] ;
rank: 670
score: 99.61016255040323
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i + 1 ] ;
rank: 670
score: 99.60123697916667
patch: double Math = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 670
score: 99.5990234375
patch: if ( observed [ i ] - expected [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * dev * dev / expected [ i ] ; }
rank: 670
score: 99.590869140625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [
rank: 671
score: 99.65754699707031
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += observed [ i ] / expected [ i ] ;
rank: 671
score: 99.65301513671875
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) < observed . length ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 671
score: 99.61015050551471
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 671
score: 99.60123417295259
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ; }
rank: 671
score: 99.59976688508064
patch: sb = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 671
score: 99.59897797683189
patch: double dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / dev / dev / expected [ i ] ;
rank: 671
score: 99.59118303571428
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev / expected [ i ] ; sum CaMeL Sq += dev / dev / dev ;
rank: 672
score: 99.65751509232955
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; observed [ i ] = dev * expected [ i ] ;
rank: 672
score: 99.63302951388889
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 672
score: 99.60991840977823
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / arraycopy [ i ] ;
rank: 672
score: 99.5996802545363
patch: sum CaMeL Sq += ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 672
score: 99.59102085658482
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] + expected [ i ] ;
rank: 672
score: 99.59073893229167
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 673
score: 99.63982747395833
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev = dev * expected [ i ] ;
rank: 673
score: 99.63299363659274
patch: position = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 673
score: 99.60987955729166
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * ( expected [ i ] - observed [ i ] ) ;
rank: 673
score: 99.59101698133681
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 673
score: 99.59072440011161
patch: if ( observed [ i ] >= observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 674
score: 99.657470703125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 674
score: 99.63273374495968
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += i * dev / expected [ i ] ;
rank: 674
score: 99.59951486895162
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } else { sum CaMeL Sq += dev ; }
rank: 674
score: 99.59873227719908
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 674
score: 99.59082691089527
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; sum CaMeL Sq += dev ;
rank: 674
score: 99.59055873325893
patch: if ( observed [ i ] != 0 ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 675
score: 99.65264892578125
patch: dev = ( ( double ) observed [ i ] - - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 675
score: 99.63271011844758
patch: i = ( ( double ) observed [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 675
score: 99.60098702566964
patch: dev = ( double ) observed [ i ] ; if ( dev ) sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 675
score: 99.5987319946289
patch: if ( observed [ i ] instanceof double [ ] ) dev = ( ( double [ ] ) observed [ i ] ) . double CaMeL Value ( ) ;
rank: 675
score: 99.59080456149194
patch: if ( observed [ i ] - expected [ i ] < expected [ i ] ) { sum CaMeL Sq += dev / expected [ i ] ; }
rank: 675
score: 99.59054000289352
patch: if ( observed [ i ] >= observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 676
score: 99.65732421875
patch: dev = ( ( double ) observed . [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 676
score: 99.63262532552083
patch: dev = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 676
score: 99.59927860383064
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = dev * expected [ i ] ;
rank: 676
score: 99.59864760890152
patch: if ( observed [ i ] - expected [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 676
score: 99.59034522804055
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 677
score: 99.6572998046875
patch: sum CaMeL Sq += ( expected [ i ] + expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 677
score: 99.65256076388889
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev [ i ] ;
rank: 677
score: 99.60944366455078
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / i ;
rank: 677
score: 99.60085967092803
patch: if ( observed [ i ] - expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 677
score: 99.59905450994319
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq = dev * expected [ i ] ;
rank: 677
score: 99.59849892893145
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev [ i ] ;
rank: 678
score: 99.65724135890152
patch: dev = ( double ) observed [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ;
rank: 678
score: 99.632177734375
patch: dev = ( ( double ) observed [ i + expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 678
score: 99.60079520089286
patch: if ( observed [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 678
score: 99.59900272253788
patch: sum CaMeL Sq = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 678
score: 99.59043375651042
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] * dev / expected [ i ] ;
rank: 678
score: 99.5900634765625
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 679
score: 99.65720436789773
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ; } return sum CaMeL Sq ;
rank: 679
score: 99.63953030493951
patch: dev = ( ( Double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 679
score: 99.6007308959961
patch: if ( observed [ i ] - expected [ i ] == expected [ i ] ) sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 679
score: 99.59041922433036
patch: if ( observed [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 679
score: 99.58989653716216
patch: dev = observed [ i ] - expected [ i ] ; for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ;
rank: 680
score: 99.63947405133929
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] - dev ;
rank: 680
score: 99.63196194556451
patch: dev = observed [ i ] * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] - expected [ i ] ;
rank: 680
score: 99.60897090517241
patch: double ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 680
score: 99.60071672712054
patch: dev = observed [ i ] / expected [ i ] ; { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 680
score: 99.5981866244612
patch: dev = ( ( double ) observed [ i ] ) [ 0 ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 680
score: 99.59040779903017
patch: if ( observed [ i ] - expected [ i ] - expected [ i ] ) { sum CaMeL Sq += expected [ i ] ; }
rank: 680
score: 99.58988131009616
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 681
score: 99.65715026855469
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq ] += dev * dev / expected [ i ] ;
rank: 681
score: 99.59837292086694
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] / expected [ i ] ;
rank: 681
score: 99.59815192945075
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] * dev ;
rank: 682
score: 99.65711712015086
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev . expected [ i ] ;
rank: 682
score: 99.6089103452621
patch: if ( ( expected [ i ] - expected [ i ] ) != 0 ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 682
score: 99.5892333984375
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i - 0 ] ;
rank: 683
score: 99.65184020996094
patch: dev = ( ( ( int ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 683
score: 99.63924967447916
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; { sum CaMeL Sq += dev * expected [ i ] ;
rank: 683
score: 99.63163248697917
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 683
score: 99.60881042480469
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; {
rank: 683
score: 99.60055977957589
patch: if ( dev [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 683
score: 99.59826290246212
patch: dev = observed [ i ] ; if ( observed [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * expected [ i ] ; }
rank: 683
score: 99.59793976814517
patch: dev = ( ( double ) observed [ i ] - 1 ) / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 683
score: 99.59025573730469
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ; ;
rank: 683
score: 99.58918513808139
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev ;
rank: 684
score: 99.65171305338542
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / dev / expected [ i ] ) ;
rank: 684
score: 99.63911946614583
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = dev / expected [ i ] ;
rank: 684
score: 99.60879516601562
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 684
score: 99.60047149658203
patch: double observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev ;
rank: 684
score: 99.59781087239584
patch: if ( observed [ i ] instanceof double ) { dev = ( ( double ) observed [ i ] ) . double CaMeL Value ( ) ; }
rank: 685
score: 99.60878092447916
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } else { sum CaMeL Sq += expected [ i ] ;
rank: 685
score: 99.59818267822266
patch: sum CaMeL Sq += ( ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] - expected [ i ] ) ;
rank: 685
score: 99.59771050347223
patch: float dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 685
score: 99.5890915329392
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ; sum CaMeL Sq += dev ;
rank: 686
score: 99.65155854096284
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) != 0 . 0 ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 686
score: 99.63897520123106
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; System }
rank: 686
score: 99.63142342403017
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq + dev ;
rank: 686
score: 99.60872133316532
patch: dev += ( ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ) ; } return sum CaMeL Sq ;
rank: 686
score: 99.60031220407197
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected / dev [ i ] ;
rank: 687
score: 99.65683445785984
patch: dev ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 687
score: 99.65146956905242
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i
rank: 687
score: 99.63883726058468
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev ] ;
rank: 687
score: 99.60869770665323
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / this [ i ] ;
rank: 687
score: 99.5994540127841
patch: double expected = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ++ ] ;
rank: 687
score: 99.59767844460227
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += expected [ i ] ;
rank: 687
score: 99.58995225694444
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev += dev / expected [ i ] ;
rank: 687
score: 99.58890086206897
patch: dev = ( int ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 688
score: 99.65146213107639
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) != observed [ i ] ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 688
score: 99.63881363407258
patch: dev = new ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 688
score: 99.60868195564517
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / $STRING$ [ i ] ;
rank: 688
score: 99.59939482717803
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * dev / expected [ i ++ ] ;
rank: 688
score: 99.59784120501894
patch: dev += ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 688
score: 99.5974982766544
patch: if ( observed [ i ] - expected [ i ] > expected [ i ] ) { sum CaMeL Sq += observed [ i ] * expected [ i ] ; }
rank: 688
score: 99.58994547526042
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev ; sum CaMeL Sq += dev * dev ;
rank: 689
score: 99.65680486505681
patch: dev = ( ( double ) observed - observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 689
score: 99.63116455078125
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; break ;
rank: 689
score: 99.59718232996323
patch: if ( observed [ i ] instanceof double ) { dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 689
score: 99.58992745535714
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] + dev / dev ;
rank: 689
score: 99.58876000381098
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( ! is CaMeL Non CaMeL Negative ( observed ) || ! is CaMeL Non CaMeL Negative ( observed ) ) {
rank: 690
score: 99.6513473923142
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) != observed . length ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 690
score: 99.63082181490384
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } i ++ ;
rank: 690
score: 99.59929125236742
patch: dev = ( ( Integer ) observed [ i ] ) . int CaMeL Value ( ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 690
score: 99.59711770450367
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev / expected [ i ] ; }
rank: 691
score: 99.65676047585227
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] + sum CaMeL Sq ;
rank: 691
score: 99.63863118489583
patch: dev = dev / ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 691
score: 99.63046700613839
patch: dev = observed [ i ] * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev ;
rank: 691
score: 99.60857957409274
patch: doc = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 691
score: 99.59731593276516
patch: dev = ( ( double - expected [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 691
score: 99.59706558719758
patch: dev += ( ( double ) observed [ i ] ) . expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 691
score: 99.58982849121094
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected . length ;
rank: 691
score: 99.58871605282738
patch: sum CaMeL Sq += observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 692
score: 99.65654754638672
patch: dev = ( ( double ) observed . [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 692
score: 99.65106201171875
patch: dev = ( ( double ) observed [ i ] - expected [ i 1 ] ) ; sum CaMeL Sq += dev * dev / dev [ i ] ;
rank: 692
score: 99.63035074869792
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) < expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 692
score: 99.60839056199596
patch: dev = ( long ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 692
score: 99.59901529947916
patch: for ( int i = 0 ; i < dev ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 692
score: 99.59708658854167
patch: ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 692
score: 99.59700281479779
patch: if ( observed [ i ] instanceof double [ ] ) { dev += ( ( double [ ] ) observed [ i ] ) . double CaMeL Value ( ) ; }
rank: 692
score: 99.58845148859797
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ;
rank: 693
score: 99.63843536376953
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; { sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 693
score: 99.63013355152027
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / dev ;
rank: 693
score: 99.59694126674107
patch: dev += ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) + expected [ i ] ;
rank: 694
score: 99.6506283408717
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ++ ] ; } return sum CaMeL Sq ;
rank: 694
score: 99.638427734375
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 694
score: 99.60830078125
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } else { sum CaMeL Sq += dev ;
rank: 694
score: 99.5986572265625
patch: if ( expected [ i ] . equals ( expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 694
score: 99.59694998604911
patch: ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 694
score: 99.59693145751953
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] - expected [ i ] ; }
rank: 694
score: 99.58954216452206
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev ; sum CaMeL Sq += dev ;
rank: 694
score: 99.58827039930556
patch: dev = expected [ i ] [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] [ i ] ;
rank: 695
score: 99.65628699100378
patch: sum CaMeL Sq += dev * ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 695
score: 99.65060326360887
patch: else { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 695
score: 99.63838334517045
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev = expected [ i ] ;
rank: 695
score: 99.59848317792338
patch: f = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 695
score: 99.59691642992425
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += expected [ i ] ;
rank: 695
score: 99.59690807711694
patch: sum CaMeL Sq = ( ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 695
score: 99.58820622141768
patch: dev = observed [ i ] ; if ( is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 696
score: 99.65613974294355
patch: dev = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] ;
rank: 696
score: 99.65052083333333
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev [ i ] ;
rank: 696
score: 99.63806870404412
patch: dev = observed [ i ] - expected [ i ] ; dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 696
score: 99.62944072001689
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 696
score: 99.60796528477823
patch: dev = ( ( double ) observed [ i ] - expected [ $NUMBER$ ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 696
score: 99.59846496582031
patch: exc = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 696
score: 99.59688765914352
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / / expected [ i ] ;
rank: 696
score: 99.59683719758064
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] / dev / expected [ i ] ;
rank: 696
score: 99.58810763888889
patch: dev = observed [ i ] - expected [ i ] ; return sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 697
score: 99.65037706163194
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev [ i ] ;
rank: 697
score: 99.60796042049633
patch: dev = ( ( double ) observed [ i i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 697
score: 99.59842354910714
patch: final double dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 697
score: 99.59684709821428
patch: if ( observed [ i ] - expected [ i ] < expected [ i ] ) { sum CaMeL Sq += observed [ i ] - expected [ i ] ; } }
rank: 697
score: 99.59678912984914
patch: dev = observed [ i ] ; dev = observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 697
score: 99.58801599451013
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ; }
rank: 698
score: 99.6501400596217
patch: dev = ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 698
score: 99.637939453125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * 0 [ i ] ;
rank: 698
score: 99.62903771033653
patch: dev = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 698
score: 99.59841918945312
patch: g = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 698
score: 99.59674072265625
patch: double expected = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 698
score: 99.58938162667411
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev ; sum CaMeL Sq += dev / dev ;
rank: 698
score: 99.58801582532051
patch: for ( int i = 0 ; i < expected . length ; i ++ ) { dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 699
score: 99.65579562717014
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] / sum CaMeL Sq ; }
rank: 699
score: 99.63780556955645
patch: dev = ( ( double ) observed [ i ] ) : expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 699
score: 99.5967529296875
patch: double observed [ 0 ] = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 699
score: 99.59671906502017
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] * dev / expected [ i ] ;
rank: 699
score: 99.58936360677083
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev ; sum CaMeL Sq += dev / dev / dev ;
rank: 699
score: 99.58783830915179
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * dev * expected [ i ] ;
rank: 700
score: 99.65574692234848
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq = dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 700
score: 99.65005387931035
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev [ i ] ;
rank: 700
score: 99.63761655745968
patch: dev = observed [ i ] ; dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 700
score: 99.62844509548611
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ;
rank: 700
score: 99.60743815104166
patch: dev = ( ( double ) observed [ i ] - $NUMBER$ ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 700
score: 99.59821319580078
patch: z = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 700
score: 99.5967429832176
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] * expected [ i ] ;
rank: 700
score: 99.596630859375
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 700
score: 99.58928680419922
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / dev / dev / dev ;
rank: 700
score: 99.58770345052083
patch: dev = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 701
score: 99.65574692234848
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 701
score: 99.62840113146552
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * observed [ i ] ; } return sum CaMeL Sq ;
rank: 701
score: 99.60743762600806
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) , sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 701
score: 99.59667154947917
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) / $NUMBER$ / expected [ i ] ;
rank: 701
score: 99.59658708243535
patch: sum CaMeL Sq += ( ( double ) observed [ i ] ) ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 701
score: 99.589208984375
patch: if ( observed [ i ] ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev ; }
rank: 701
score: 99.58769008091518
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] * expected [ i ] ;
rank: 702
score: 99.62823165090461
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev .
rank: 702
score: 99.60741345635776
patch: dev = ( ( String ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 702
score: 99.58914831912878
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] / dev / dev ;
rank: 702
score: 99.5876400596217
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ; ;
rank: 703
score: 99.65566554214016
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; break ;
rank: 703
score: 99.63741302490234
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 703
score: 99.628173828125
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 703
score: 99.59653005292338
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * expected [ i ] ;
rank: 703
score: 99.59652273995536
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 703
score: 99.58906106387867
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / ( expected [ i ] ;
rank: 704
score: 99.649658203125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / dev / expected [
rank: 704
score: 99.63739198626894
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 704
score: 99.59637451171875
patch: expected = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 704
score: 99.59635162353516
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev [ i ] ; sum CaMeL Sq += dev [ i ] ;
rank: 705
score: 99.65561375473484
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * sum CaMeL Sq / expected [ i ] ;
rank: 705
score: 99.63731060606061
patch: dev = expected [ i ] - expected [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 705
score: 99.59809727822581
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if = dev * dev / dev / expected [ i ] ;
rank: 705
score: 99.59637254284274
patch: dev = observed [ i ] ; sum CaMeL Sq += expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 706
score: 99.65541400331439
patch: double dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 706
score: 99.64920204564145
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { return sum CaMeL Sq ;
rank: 706
score: 99.63729366179436
patch: dev = expected [ i ] ; dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 706
score: 99.62787543402777
patch: dev = ( ( double ) observed [ i ] ) * expected [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 706
score: 99.60705172631049
patch: dev = ( ( double ) observed [ i ] - this [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 706
score: 99.59796339465726
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected * expected [ i ] ;
rank: 706
score: 99.59634399414062
patch: if ( observed [ i ] == null ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } sum CaMeL Sq += observed [ i ] ;
rank: 706
score: 99.5872314453125
patch: dev = observed [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq ++ ;
rank: 707
score: 99.65520918996711
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] [ i ] ; } return sum CaMeL Sq ;
rank: 707
score: 99.63719940185547
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; )
rank: 707
score: 99.627783203125
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 707
score: 99.60683908770162
patch: inst = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 707
score: 99.59783380681819
patch: dev = observed [ i ] ; for ( int i = 0 ; i < expected . length ; i ++ ) { dev = observed [ i ] ; }
rank: 707
score: 99.5962622857863
patch: i = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 707
score: 99.58875558035714
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / expected . length ;
rank: 708
score: 99.65520608836206
patch: double dev = ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 708
score: 99.5977294921875
patch: dev = ( double ) observed [ i ] / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 708
score: 99.5961493130388
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 708
score: 99.58875383649554
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev + dev ;
rank: 708
score: 99.58707885742187
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; else return sum CaMeL Sq ;
rank: 709
score: 99.64877319335938
patch: else { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 709
score: 99.63660849294355
patch: dev = expected [ i ] - expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 709
score: 99.60668157762096
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] [
rank: 709
score: 99.59611002604167
patch: double i = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 709
score: 99.5959236391129
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 709
score: 99.58695365287163
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { dev = ( ( double ) observed [ i ] ) ; }
rank: 710
score: 99.64871978759766
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) != 0 ) { sum CaMeL Sq += dev * dev [ i ] ;
rank: 710
score: 99.63655336441532
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += this * dev / expected [ i ] ;
rank: 710
score: 99.62731255425348
patch: dev = ( ( double ) observed [ i ] - 1 [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 710
score: 99.60668157762096
patch: if ( observed [ i ] - expected [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * expected [ i ] ; }
rank: 710
score: 99.59607747395833
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 710
score: 99.59580993652344
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev + expected [ i ] ; }
rank: 710
score: 99.5886962890625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ; sum CaMeL Sq += dev * dev / dev ;
rank: 711
score: 99.64857991536458
patch: dev = ( ( double ) observed [ i ] ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 711
score: 99.636474609375
patch: sum CaMeL Sq += expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 711
score: 99.62729220920139
patch: dev = ( ( double ) observed [ i ] ) + expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 711
score: 99.59600151909723
patch: double dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev [ i ] ;
rank: 711
score: 99.58869039601294
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) , sum CaMeL Sq += dev / expected [ i ] ;
rank: 711
score: 99.58667834051724
patch: dev = observed [ i ] - expected [ i ] ; return sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 712
score: 99.65504455566406
patch: dev = ( ( double ) ! expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 712
score: 99.6485595703125
patch: if ( ! is CaMeL Non CaMeL Negative ( expected [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 712
score: 99.60648469002017
patch: if ( ! is CaMeL Positive ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * expected [ i ] ;
rank: 712
score: 99.5974542025862
patch: dev = ( ( double ) observed [ i ] ) . dev ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 712
score: 99.59571184430804
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq = dev * dev / dev / expected [ i ] ;
rank: 713
score: 99.62712840544872
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } return dev ;
rank: 713
score: 99.59732055664062
patch: r = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 713
score: 99.58856964111328
patch: if ( ( observed [ i ] - expected [ i ] ) > dev ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 713
score: 99.58622233072917
patch: dev = ( double ) observed [ i ] [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] [ i ] ;
rank: 714
score: 99.65500710227273
patch: dev = ( dev [ i ] - expected [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 714
score: 99.62712751116071
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return dev ;
rank: 714
score: 99.60640462239583
patch: if ( observed [ i ] - expected [ i ] != observed [ i ] ) { sum CaMeL Sq += dev * expected [ i ] ;
rank: 714
score: 99.59724934895833
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; else sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 714
score: 99.595927734375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / $NUMBER$ / expected [ i ] ;
rank: 714
score: 99.58856411637932
patch: dev += ( observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 715
score: 99.5972388482863
patch: dev = ( ( double ) observed [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 715
score: 99.5958954782197
patch: dev = ( ( double ) observed [ i ] ) . double CaMeL Value ( ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 715
score: 99.5956610317888
patch: dev = expected [ i ] ; dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 715
score: 99.58608774038461
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 716
score: 99.6355712890625
patch: sum CaMeL Sq += ( expected [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 716
score: 99.59712859122983
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / for [ i ] ;
rank: 716
score: 99.595625
patch: dev = ( ( double ) observed [ i ] ) ; dev = ( ( double ) observed [ i ] ) ;
rank: 716
score: 99.58850467566288
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) [ i ] ; sum CaMeL Sq += dev * dev / dev / dev ;
rank: 716
score: 99.58597117456897
patch: dev = observed [ i ] - expected [ i 1 ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 717
score: 99.64820620888158
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) != 0 . 0 ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 717
score: 99.59709563078704
patch: dev = ( ( double ) observed [ i ] ) ; int sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 717
score: 99.59558977399554
patch: double observed [ i ] = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 717
score: 99.58832864200367
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } * /
rank: 718
score: 99.65479995265152
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev * dev * expected [ i ] ;
rank: 718
score: 99.60592215401786
patch: dev = ( ( double ) observed [ i ] - expected [ i + 1 ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 718
score: 99.58503941127232
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] - expected [ i ] ;
rank: 719
score: 99.65477775804925
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / dev * expected [ i ] ;
rank: 719
score: 99.64769255809294
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 719
score: 99.63522865032327
patch: double expected [ ] = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 719
score: 99.60574079241071
patch: for ( int i = 0 ; i <= observed . length ; i ++ ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 719
score: 99.5970230102539
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * 0 / expected [ i ] ; }
rank: 719
score: 99.595546875
patch: dev += ( observed [ i ] - expected [ i ] - expected [ i ] ) * expected [ i ] ;
rank: 719
score: 99.59518432617188
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev ;
rank: 719
score: 99.58832146139706
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] + dev ; }
rank: 719
score: 99.58462915665064
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + expected [ i ] - expected [ i ] ) ; } for ( int i = 0 ; i < observed . length ; i ++ )
rank: 720
score: 99.65472597064394
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . $STRING$ ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 720
score: 99.64763909417229
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( ! is CaMeL Positive ( observed [ i ] ) ) { return sum CaMeL Sq ;
rank: 720
score: 99.63498159555289
patch: dev = dev [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 720
score: 99.625390625
patch: dev = ( ( double ) observed [ i ] ) . trim ( ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 720
score: 99.60543619791666
patch: if ( observed [ i ] - expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * expected [ i ] ;
rank: 720
score: 99.59699358258929
patch: if ( expected [ i ] >= expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 720
score: 99.59517124720982
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / dev / expected [ i ] ;
rank: 720
score: 99.58829074435764
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] * dev * dev / expected [ i ] ;
rank: 721
score: 99.6546566611842
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] / dev / expected [ i ] ;
rank: 721
score: 99.64762878417969
patch: dev = ( ( double ) observed [ i ] - 1 ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 721
score: 99.62531672297297
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 721
score: 99.59540318080357
patch: if ( observed [ i ] instanceof double [ ] ) { sum CaMeL Sq += ( ( double [ ] ) observed [ i ] ) . sum [ i ] ; }
rank: 721
score: 99.58827333192568
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 722
score: 99.64754909939236
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) != 0 ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 722
score: 99.63481613685344
patch: sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 722
score: 99.62485865542763
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 722
score: 99.59663243447581
patch: dev = ( ( double ) observed [ i ] - 0 . 0 ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 722
score: 99.58815160290948
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev > expected [ i ] ;
rank: 722
score: 99.58427233573718
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 723
score: 99.64737955729167
patch: if ( ! is CaMeL Positive ( expected [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 723
score: 99.63472493489583
patch: sum CaMeL Sq += observed [ i ] ; dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 723
score: 99.62449244449013
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] + dev / expected [ i ] ;
rank: 723
score: 99.60531123991936
patch: chi CaMeL Square ( expected , observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 723
score: 99.59658926504629
patch: if ( observed [ i ] == expected [ i ] ) sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 723
score: 99.59537179129464
patch: dev += ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 723
score: 99.58403488685344
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev / dev / dev / expected [ i ] ;
rank: 724
score: 99.65458848741319
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 724
score: 99.624462890625
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } if ( ! is CaMeL Non CaMeL Negative ( observed ) ) { return sum CaMeL Sq ;
rank: 724
score: 99.60506184895833
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; else sum CaMeL Sq += dev * expected [ i ] ;
rank: 724
score: 99.59658203125
patch: if ( expected [ i ] == ( double ) observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 724
score: 99.59529061153017
patch: double dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ;
rank: 724
score: 99.59478759765625
patch: expected [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 724
score: 99.58786908318015
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( dev < dev ) { sum CaMeL Sq += dev / dev ; }
rank: 724
score: 99.5838623046875
patch: dev = observed [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 725
score: 99.654443359375
patch: sum CaMeL Sq += dev * dev [ i ] / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 725
score: 99.63470669450432
patch: dev = observed [ i ] ; dev = expected [ i ] ; ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 725
score: 99.60469563802083
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } return sum CaMeL Sq ;
rank: 725
score: 99.5965347290039
patch: m = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 725
score: 99.59526997227823
patch: dev += observed [ i ] - expected [ i ] ; } dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 725
score: 99.58786536907327
patch: j = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 725
score: 99.5836245888158
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return ( sum CaMeL Sq ;
rank: 726
score: 99.63431672127017
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ;
rank: 726
score: 99.62351588199013
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 726
score: 99.60466897898706
patch: tmp = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 726
score: 99.59651131465517
patch: for ( int i = expected [ i ] ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 726
score: 99.59525669642858
patch: if ( observed [ i ] == null ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev ; }
rank: 726
score: 99.594482421875
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 726
score: 99.58773311491936
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev [ i ] / dev ;
rank: 726
score: 99.58357961554276
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum ;
rank: 727
score: 99.65440266927084
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ! dev / expected [ i ] ;
rank: 727
score: 99.59633937026516
patch: double ( ( ( double ) observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 727
score: 99.59522224195075
patch: sum CaMeL Sq += observed [ i ] - expected [ i ] ; } dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 727
score: 99.5944403286638
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev ; }
rank: 727
score: 99.58347800925925
patch: if ( observed [ i ] != observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 728
score: 99.64682302167338
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / dev [ i ] ;
rank: 728
score: 99.63398960658482
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev / dev / dev / expected [ i ] ;
rank: 728
score: 99.62310469777961
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 728
score: 99.60391130118535
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } else {
rank: 728
score: 99.59518958782327
patch: ( ( double ) observed [ i ] - expected [ i ] ) . sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 728
score: 99.5943091607863
patch: dev = ( ( double ) observed [ i ] ) . dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 728
score: 99.58761689157197
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev * dev ;
rank: 729
score: 99.65434126420455
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected * expected [ i ] ;
rank: 729
score: 99.64672088623047
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * dev / dev / dev / expected [ i ] ;
rank: 729
score: 99.62283528645834
patch: dev ++ ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 729
score: 99.59620824353448
patch: if ( dev * expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 729
score: 99.59505440848214
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev * dev /
rank: 729
score: 99.59429059709821
patch: observed [ i ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 729
score: 99.58752771326013
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 730
score: 99.65432899876645
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] / dev * expected [ i ] ;
rank: 730
score: 99.64671566611842
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) != observed . length ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 730
score: 99.59614619502315
patch: if ( observed [ i ] == expected [ i ] ) { sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 730
score: 99.59504250919117
patch: if ( observed [ i ] - expected [ i ] < dev [ i ] ) { sum CaMeL Sq += dev [ i ] - expected [ i ] ; }
rank: 730
score: 99.583369140625
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ) ;
rank: 731
score: 99.65409851074219
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq $NUMBER$ += dev * dev / expected [ i ] ;
rank: 731
score: 99.64666069878473
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; return sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 731
score: 99.63369140625
patch: dev = ( dev / expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 731
score: 99.6218505859375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { return sum CaMeL Sq ; }
rank: 731
score: 99.59611511230469
patch: val = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 731
score: 99.59491489955357
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 731
score: 99.58725992838542
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( expected . length > observed . length ) { sum CaMeL Sq += dev ; }
rank: 731
score: 99.58312567349138
patch: double dev = dev [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 732
score: 99.65409088134766
patch: double dev = ( double ) ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 732
score: 99.64657592773438
patch: int [ ] dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev [ i ] ;
rank: 732
score: 99.63364438657408
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev = dev / expected [ i ] ;
rank: 732
score: 99.62141022858796
patch: dev ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 732
score: 99.59579467773438
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev + dev / expected [ i ] ; }
rank: 732
score: 99.587119140625
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ) + expected [ i ] ;
rank: 732
score: 99.58308919270833
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 733
score: 99.64654737903226
patch: dev = ( int ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 733
score: 99.63358429939517
patch: sum CaMeL Sq += observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 733
score: 99.62075700431035
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += 1 * expected [ i ] ;
rank: 733
score: 99.59571184430804
patch: dev = ( ( double ) observed [ i ] - false ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 733
score: 99.59357320851294
patch: if ( observed [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } }
rank: 733
score: 99.58709519909274
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected . length ; }
rank: 733
score: 99.5830078125
patch: if ( observed [ i ] <= observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 734
score: 99.65359497070312
patch: dev = new ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 734
score: 99.64652252197266
patch: dev = ( double ) observed [ i ] - expected [ i 1 ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 734
score: 99.63357979910714
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 734
score: 99.59556749131944
patch: if ( expected [ i ] > expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 734
score: 99.59463038589016
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] * expected [ i ] ; }
rank: 734
score: 99.59341430664062
patch: sum CaMeL Sq = ( dev * expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 734
score: 99.58708844866071
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev ; sum CaMeL Sq += dev * dev ;
rank: 735
score: 99.6460952758789
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev * dev / expected [ i ] ;
rank: 735
score: 99.62054286858974
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 735
score: 99.60295553768383
patch: dev = ( ( double ) ! observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 735
score: 99.59461630544355
patch: if ( observed [ i ] instanceof double ) { sum CaMeL Sq = ( ( double ) observed [ i ] ) . double CaMeL Value ( ) ;
rank: 735
score: 99.58701985677084
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ( dev * dev * dev ) ;
rank: 735
score: 99.582763671875
patch: dev -- ; dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 736
score: 99.64600287543402
patch: dev = ( ( double ) observed [ i ] - expected [ i 1 ] ) ; sum CaMeL Sq += dev * dev * dev / dev / expected [ i ] ;
rank: 736
score: 99.63352457682292
patch: sum CaMeL Sq += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = expected [ i ] ;
rank: 736
score: 99.60287272135416
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ) * expected [ i ] ;
rank: 736
score: 99.59516963252315
patch: double ( observed [ i ] , expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 736
score: 99.5946044921875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq ++ ;
rank: 736
score: 99.59326934814453
patch: sum CaMeL Sq = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 736
score: 99.5867919921875
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev / dev / dev ;
rank: 736
score: 99.58271257267442
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } }
rank: 737
score: 99.63342655066288
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev ;
rank: 737
score: 99.62005825700432
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev ; } return sum CaMeL Sq ;
rank: 737
score: 99.59454752604167
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) / dev / expected [ i ] ;
rank: 737
score: 99.58678481158088
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ( dev * dev / expected [ i ] ) ; }
rank: 737
score: 99.58253205128206
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 738
score: 99.64563802083333
patch: dev = ( ( double ) observed [ i ] - 1 ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 738
score: 99.63331604003906
patch: dev = expected [ i ] - expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 738
score: 99.6199951171875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * dev / expected [ i ] ;
rank: 738
score: 99.60277478448276
patch: d = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 738
score: 99.5950698852539
patch: dev = observed [ i ] ; for ( int i = 0 ; i < expected . length ; i ++ ) { dev = observed [ i ] ;
rank: 738
score: 99.58246721540179
patch: dev = observed [ i ] * expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 739
score: 99.65324401855469
patch: dev = ( double ) observed [ i ] ; dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 739
score: 99.63316608297414
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] - expected [ i ] ;
rank: 739
score: 99.61995222761824
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 739
score: 99.6025749655331
patch: -- i ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 739
score: 99.59500220514113
patch: dev = ( ( double ) observed [ i ] ) ; if ( dev ) sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 739
score: 99.59306483114919
patch: sum CaMeL Sq += ( ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 739
score: 99.58662923177083
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev ; sum CaMeL Sq += dev / dev / dev ;
rank: 739
score: 99.5823505108173
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( ! is CaMeL Non CaMeL Negative ( observed ) ) { sum CaMeL Sq += dev * dev ;
rank: 740
score: 99.63314615885416
patch: double expected [ i ] = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 740
score: 99.61988624366555
patch: int dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 740
score: 99.60249720982142
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } return sum CaMeL Sq ; }
rank: 740
score: 99.5944403286638
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq *= dev * expected [ i ] ;
rank: 740
score: 99.59293619791667
patch: sum CaMeL Sq += ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 740
score: 99.58662632533482
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev ;
rank: 740
score: 99.58233432112068
patch: if ( observed [ i ] >= expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 741
score: 99.65309651692708
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 741
score: 99.60219900948661
patch: observed [ i ] = ( ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ) ;
rank: 741
score: 99.59475368923611
patch: if ( observed [ i ] instanceof double [ ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 741
score: 99.59435221354167
patch: if ( observed [ i ] - expected . length > $NUMBER$ ) { sum CaMeL Sq += observed [ i ] - expected [ i ] ; }
rank: 741
score: 99.59286006804436
patch: dev = observed [ i ] ; dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 741
score: 99.58659811580883
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / dev / dev / dev ;
rank: 741
score: 99.5823004306891
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 742
score: 99.60218003216912
patch: dev = ( ( double ) observed [ i ++ ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 742
score: 99.59278918850806
patch: sum CaMeL Sq = ( ( dev [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 742
score: 99.58218496817129
patch: dev = observed [ i ] ; try { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 743
score: 99.65294731987848
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ;
rank: 743
score: 99.64519768792229
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] *
rank: 743
score: 99.60189998851104
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] $NUMBER$ ;
rank: 743
score: 99.59442138671875
patch: double ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 743
score: 99.59422392003677
patch: if ( observed [ i ] instanceof double [ ] ) { sum CaMeL Sq += ( ( double [ ] ) observed [ i ] ) . expected [ i ] ;
rank: 743
score: 99.58648681640625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( expected . length == expected . length ) { sum CaMeL Sq += dev ; }
rank: 743
score: 99.58205396075581
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq ++ ; }
rank: 744
score: 99.64500596788194
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 744
score: 99.60182291666666
patch: if ( observed [ i ] - expected [ i ] != 1 ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 744
score: 99.59440665409483
patch: for ( int i = 0 ; i < dev ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 744
score: 99.58645103717673
patch: dev += ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] / expected [ i ] ;
rank: 744
score: 99.58193108974359
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 745
score: 99.65250913558468
patch: ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 745
score: 99.632861328125
patch: dev = ( dev / observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 745
score: 99.60182020399306
patch: dev = ( ( double ) [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 745
score: 99.59429931640625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += true * dev / expected [ i ] ; }
rank: 745
score: 99.59247036637932
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = expected [ i ] ;
rank: 745
score: 99.5864501953125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; dev += expected [ i ] ;
rank: 746
score: 99.63277180989583
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - max [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 746
score: 99.61839500633445
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ) + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 746
score: 99.60179850260417
patch: dev = new double ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 746
score: 99.59410095214844
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev [ i ] ) ;
rank: 746
score: 99.593994140625
patch: dev = observed [ i ] ; expected [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 746
score: 99.59241985452586
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ; }
rank: 746
score: 99.58644797585227
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev / expected [ i ] ; sum CaMeL Sq += dev * dev ;
rank: 747
score: 99.632666015625
patch: sum CaMeL Sq = dev * observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 747
score: 99.61823381696429
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ]
rank: 747
score: 99.60178629557292
patch: if ( observed [ i ] - expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 747
score: 99.59394362877156
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / $NUMBER$ ] ;
rank: 747
score: 99.59392233455883
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; ;
rank: 747
score: 99.581689453125
patch: dev = dev [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 748
score: 99.60160558363971
patch: if ( observed [ i ] - expected [ i ] + expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 748
score: 99.59391515395221
patch: if ( observed [ i ] - expected [ i ] > expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 748
score: 99.59390995420259
patch: dev = ( ( double ) observed [ i ] ) - dev ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 748
score: 99.58629108297414
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] - expected [ i ] ;
rank: 748
score: 99.58148193359375
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev ;
rank: 749
score: 99.632568359375
patch: dev = expected [ i ] - expected [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 749
score: 99.59352111816406
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ; }
rank: 749
score: 99.58627781723484
patch: dev = observed [ i ] - expected [ i ] ; if ( expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev ; }
rank: 749
score: 99.58131691261575
patch: dev = dev [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 750
score: 99.65171305338542
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] / observed [ i ] ;
rank: 750
score: 99.61769409179688
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; else sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 750
score: 99.59382847377232
patch: dev = ( double ) observed [ i ] expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 750
score: 99.59331684727823
patch: if ( observed [ i ] != observed [ i ] ) { sum CaMeL Sq += ( observed [ i ] - expected [ i ] ) ; }
rank: 750
score: 99.58606770833333
patch: if ( observed [ i ] - expected [ i ] < dev ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 750
score: 99.5811767578125
patch: dev = observed [ i ] ; dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 751
score: 99.64371964738176
patch: else { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 751
score: 99.63238340435606
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 751
score: 99.60135091145834
patch: if ( observed [ i ] - observed [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * expected [ i ] ;
rank: 751
score: 99.593759765625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected / expected [ i ] ;
rank: 751
score: 99.59162902832031
patch: dev = ( ( ( double ) observed [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 751
score: 99.58606675091912
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev ;
rank: 751
score: 99.58084627477135
patch: dev = observed [ i ] - expected [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed ) || ! is CaMeL Non CaMeL Negative ( observed ) ) { return sum CaMeL Sq ;
rank: 752
score: 99.63231580010776
patch: double expected [ ] = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 752
score: 99.59374237060547
patch: double ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 752
score: 99.59317129629629
patch: dev += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 752
score: 99.58591530539773
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( dev > dev ) { dev = expected [ i ] ; }
rank: 752
score: 99.58055388621794
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ; }
rank: 753
score: 99.65132221422698
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . ( expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 753
score: 99.60120985243056
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev += dev * expected [ i ] ;
rank: 753
score: 99.59367819393383
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; this . sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 753
score: 99.59313151041667
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; dev += expected [ i ] ;
rank: 754
score: 99.65120180191532
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += this . dev / expected [ i ] ;
rank: 754
score: 99.64368353949652
patch: int dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / dev / expected [ i ] ;
rank: 754
score: 99.63212754991319
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev ] ;
rank: 754
score: 99.61628803453948
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 754
score: 99.59311704282408
patch: sum CaMeL Sq += ( observed [ i ] - expected [ i ] - expected [ i ] ) / expected [ i ] ;
rank: 754
score: 99.59137369791667
patch: sum CaMeL Sq += ( ( ( double ) observed [ i ] ) ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 754
score: 99.58585902622768
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected ;
rank: 755
score: 99.63203282510081
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] - expected [ i ] ;
rank: 755
score: 99.61623709542411
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; return sum CaMeL Sq ;
rank: 755
score: 99.60115320542279
patch: dev = = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 755
score: 99.59297398158482
patch: dev = ( ( double ) observed [ i ] - expected ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 755
score: 99.58570207868304
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev ; sum CaMeL Sq += dev / dev ;
rank: 756
score: 99.651123046875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . 0 ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 756
score: 99.63197063577586
patch: sum CaMeL Sq = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 756
score: 99.61612099095395
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 756
score: 99.60113932291667
patch: dev = = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 756
score: 99.59107208251953
patch: l = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 756
score: 99.58564309512867
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev ; sum CaMeL Sq += dev ;
rank: 757
score: 99.6318992332176
patch: dev = dev [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 757
score: 99.6011101217831
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = ( ( double ) observed [ i ] - expected [ i ] )
rank: 757
score: 99.59290313720703
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ) ;
rank: 758
score: 99.65082611908784
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] / sum CaMeL Sq / dev ;
rank: 758
score: 99.64201066300676
patch: dev = ( ( int ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] ;
rank: 758
score: 99.63161399147727
patch: dev = ( double ) observed [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ;
rank: 758
score: 99.59282924107143
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected . length ;
rank: 758
score: 99.5926513671875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; return dev * dev * expected [ i ] ;
rank: 758
score: 99.59090983072916
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev * dev / expected [ i ] ;
rank: 758
score: 99.58539496527777
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev * dev / expected [ i ] ;
rank: 759
score: 99.63160923549107
patch: dev = observed [ i ] - expected [ i ] ; { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 759
score: 99.615234375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 759
score: 99.60101725260417
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * / expected [ i ] ;
rank: 759
score: 99.59260506465517
patch: if ( observed [ i ] - expected [ i ] == 0 ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 759
score: 99.59253717237904
patch: if ( observed [ i ] instanceof double ) observed [ i ] = ( ( double ) observed [ i ] ) . double CaMeL Value ( ) ;
rank: 759
score: 99.59073368195564
patch: double observed [ i ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 759
score: 99.58519694010417
patch: dev = ( ( double ) observed [ i ] - ( expected [ i ] - expected [ i ] ) ) + expected [ i ] ;
rank: 759
score: 99.5793701171875
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; else sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 760
score: 99.64170258620689
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev [ i ] ;
rank: 760
score: 99.63125271267361
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = dev * expected [ i ] ;
rank: 760
score: 99.614501953125
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev ; }
rank: 760
score: 99.59252025462963
patch: dev += ( ( double ) observed [ i ] ) ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 760
score: 99.58509826660156
patch: if ( observed [ i ] - expected [ i ] > dev ) { sum CaMeL Sq += dev / dev / dev / expected [ i ] ; }
rank: 760
score: 99.57931954520089
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] / expected [ i ] ;
rank: 761
score: 99.65071105957031
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 761
score: 99.64168574892241
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev [ i ] ;
rank: 761
score: 99.63121880425348
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) - expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 761
score: 99.59245749080883
patch: if ( ( ( double ) observed [ i ] ) == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } }
rank: 761
score: 99.59063313802083
patch: synchronized ( dev ) { dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 761
score: 99.5849609375
patch: if ( observed [ i ] - expected [ i ] < expected [ i ] ) { sum CaMeL Sq += expected [ i ] ; }
rank: 761
score: 99.579267578125
patch: dev = expected [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 762
score: 99.65066688939145
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 762
score: 99.63120524088542
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ; sum CaMeL Sq -= dev * dev / expected [ i ] ;
rank: 762
score: 99.6143798828125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; return sum CaMeL Sq ;
rank: 762
score: 99.60084635416666
patch: observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) * dev / dev / expected [ i ] ;
rank: 762
score: 99.59238873106061
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected / expected [ i ] ;
rank: 762
score: 99.59231131417411
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq ++ ;
rank: 762
score: 99.57917131696429
patch: if ( observed [ i ] <= observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 763
score: 99.61378880550987
patch: dev = ( ( double ) observed [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev ;
rank: 763
score: 99.600830078125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] . max ;
rank: 763
score: 99.59234619140625
patch: dev = ( ( double ) observed [ i ] ) - expected ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 763
score: 99.5904052734375
patch: sum CaMeL Sq = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 763
score: 99.58485514322916
patch: if ( observed [ i ] - expected [ i ] >= dev ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 763
score: 99.57900895743535
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; return sum CaMeL Sq ;
rank: 764
score: 99.61354466488487
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; return sum CaMeL Sq * dev ;
rank: 764
score: 99.60082194010417
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = ( ( double ) observed [ i ] ) ;
rank: 764
score: 99.590380859375
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev ;
rank: 764
score: 99.5848388671875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( expected . length > dev ) { sum CaMeL Sq += dev / dev ; }
rank: 764
score: 99.5787941261574
patch: if ( observed [ i ] > observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 765
score: 99.64162190755208
patch: int observed [ ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 765
score: 99.63045247395833
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev ] ;
rank: 765
score: 99.5920928030303
patch: if ( observed [ i ] - expected [ i ] < expected [ i ] ) { sum CaMeL Sq += observed [ i ] - expected [ i ] ;
rank: 765
score: 99.59037272135417
patch: dev = observed [ i ] ; dev = dev [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 765
score: 99.58482360839844
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / ( dev * dev ) ;
rank: 765
score: 99.57873083043981
patch: if ( expected [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 766
score: 99.65031433105469
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; dev ++ ;
rank: 766
score: 99.64149598817568
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ; break ;
rank: 766
score: 99.63031684027777
patch: dev = expected [ i ] - expected [ i ] ; if ( dev > expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 766
score: 99.6005126953125
patch: dev = ( ( double ) observed [ ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 766
score: 99.59202665441177
patch: if ( observed [ i ] - expected [ i ] > expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } }
rank: 766
score: 99.59185791015625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * true / expected [ i ] ; }
rank: 766
score: 99.5902899380388
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; ;
rank: 766
score: 99.58478860294117
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev ; sum CaMeL Sq += dev / dev ;
rank: 766
score: 99.57868063038794
patch: if ( observed [ i ] <= expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 767
score: 99.64133029513889
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ; ;
rank: 767
score: 99.63031005859375
patch: dev = Math + observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 767
score: 99.59184738685344
patch: dev *= ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 767
score: 99.59182739257812
patch: dev -= ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 768
score: 99.63028971354167
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev * dev / expected [ i ] ;
rank: 768
score: 99.61293068910257
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . Math ;
rank: 768
score: 99.60017903645833
patch: dev = ( ( double ) observed [ i ] - expected [ i i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 768
score: 99.59173583984375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += false * dev / expected [ i ] ; }
rank: 768
score: 99.59003276209677
patch: sum = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 768
score: 99.58467240767045
patch: if ( observed [ i ] ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev ; }
rank: 769
score: 99.65015933388158
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; } } return sum CaMeL Sq ;
rank: 769
score: 99.64103480747768
patch: dev = ( double ) expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 769
score: 99.63021511501736
patch: dev = observed [ i ] - expected [ i ] ; if ( dev > expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 769
score: 99.59163992745536
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / $NUMBER$ / expected [ i ] ;
rank: 769
score: 99.57836072198276
patch: dev = observed [ i ] [ 0 ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] [ 0 ] ;
rank: 770
score: 99.65012078536184
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / sum CaMeL Sq ;
rank: 770
score: 99.63017926897321
patch: dev = ( ( double ) expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 770
score: 99.61265162417763
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * expected [ i ] ;
rank: 770
score: 99.59167829241072
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; ;
rank: 770
score: 99.58980015345982
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev * expected [ i ] ;
rank: 770
score: 99.58457946777344
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ; }
rank: 770
score: 99.57818603515625
patch: if ( observed [ i ] > observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 771
score: 99.65006772933468
patch: dev = ( new double [ observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 771
score: 99.64077463457662
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev } return sum CaMeL Sq ;
rank: 771
score: 99.591650390625
patch: if ( observed [ i ] - expected . length > 0 ) { sum CaMeL Sq += observed [ i ] - expected [ i ] ; }
rank: 771
score: 99.58452962239583
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev ; } return dev ;
rank: 771
score: 99.578154296875
patch: dev = observed [ i ] ; dev = ( ( double ) expected [ i ] - expected [ i ] ) ;
rank: 772
score: 99.6407470703125
patch: dev = ( double ) ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 772
score: 99.63000882056451
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += observed * dev / expected [ i ] ;
rank: 772
score: 99.59143938337054
patch: if ( ( ( double ) observed [ i ] ) == 0 ) sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 772
score: 99.58451786747685
patch: dev = ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev ;
rank: 773
score: 99.64023122479838
patch: dev = ( ( double ) observed [ i ] - expected [ i 1 ] ) ; sum CaMeL Sq += dev * dev / dev / dev ;
rank: 773
score: 99.62994174299568
patch: dev = observed [ i ] [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 773
score: 99.61226613898026
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return dev ;
rank: 773
score: 99.59157492897727
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev * dev /
rank: 773
score: 99.58956023185483
patch: sum CaMeL Sq = ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 773
score: 99.58428083147321
patch: if ( observed [ i ] - expected [ i ] > dev ) { sum CaMeL Sq += dev * expected [ i ] ; }
rank: 773
score: 99.5777022198933
patch: dev = observed [ i ] ; if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { return sum CaMeL Sq ;
rank: 774
score: 99.64987021998355
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; observed [ i ] = sum CaMeL Sq ;
rank: 774
score: 99.64017740885417
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ) ; return sum CaMeL Sq ;
rank: 774
score: 99.59149169921875
patch: dev += ( observed [ i ] + expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 774
score: 99.59118231411638
patch: double observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) * dev / expected [ i ] ;
rank: 774
score: 99.58424479166666
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev / dev ;
rank: 774
score: 99.57696854440789
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; } return sum CaMeL Sq ; }
rank: 775
score: 99.64964245211694
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq : dev * dev * expected [ i ] ;
rank: 775
score: 99.64013671875
patch: dev = ( ( int ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev [ i ] ;
rank: 775
score: 99.62973022460938
patch: dev = observed [ i ] - expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 775
score: 99.59143415178572
patch: if ( observed [ i ] instanceof double ) { sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ;
rank: 775
score: 99.59117889404297
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += $NUMBER$ * dev / expected [ i ] ; }
rank: 775
score: 99.58937290736607
patch: dev = observed [ i ] ; dev = observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 775
score: 99.5841064453125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] - expected [ i ] ;
rank: 775
score: 99.5762875205592
patch: dev = observed [ i ] ; for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ; sum CaMeL Sq += dev ;
rank: 776
score: 99.64960769127156
patch: dev = is CaMeL Positive ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 776
score: 99.629638671875
patch: sum CaMeL Sq += observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 776
score: 99.61204863757622
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 776
score: 99.59893973214285
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq -= dev * dev / dev / dev / expected [ i ] ;
rank: 776
score: 99.59132543103448
patch: dev = ( ( double ) observed [ i ] * expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 776
score: 99.59117713341347
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; return dev / expected [ i ] ;
rank: 776
score: 99.58403184678819
patch: dev = observed [ i ] - ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 777
score: 99.64957682291667
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev * expected [ i ] / expected [ i ] ;
rank: 777
score: 99.64001916956019
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; i ++ ; } return sum CaMeL Sq ;
rank: 777
score: 99.62954711914062
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ; dev = dev / expected [ i ] ;
rank: 777
score: 99.6119449013158
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev ;
rank: 777
score: 99.59116683467742
patch: if ( observed [ i ] == expected [ i ] ) { sum CaMeL Sq += ( observed [ i ] - expected [ i ] ) ; }
rank: 777
score: 99.59110260009766
patch: dev = ( ( double ) observed [ i ] - expected [ 0 ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 777
score: 99.58920175057871
patch: double expected = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 777
score: 99.57589017427884
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 778
score: 99.639990234375
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] - expected [ i ] ) ;
rank: 778
score: 99.62944200303819
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 778
score: 99.6119384765625
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; break ;
rank: 778
score: 99.59849811422414
patch: s = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 778
score: 99.5911532315341
patch: for ( int i = 0 ; i < observed [ i ] . length ; i ++ ) { sum CaMeL Sq += observed [ i ] [ i ] ;
rank: 778
score: 99.59099211516204
patch: dev = dev [ i ] / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 778
score: 99.58907982610887
patch: sum CaMeL Sq += ( ( dev [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 778
score: 99.58396693638393
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev ; sum CaMeL Sq += dev * dev ;
rank: 778
score: 99.57549370659723
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / - expected [ i ] ;
rank: 779
score: 99.62942708333334
patch: sum CaMeL Sq += observed [ i ] - observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 779
score: 99.59848920036765
patch: if ( observed [ i ] - expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev / dev / dev / expected [ i ] ;
rank: 779
score: 99.59112745715726
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / dev [ i ] ;
rank: 779
score: 99.59098815917969
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = expected [ i ] ;
rank: 779
score: 99.58905619959677
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += ( dev * expected [ i ] - expected [ i ] ) ;
rank: 779
score: 99.58392544450432
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev ; sum CaMeL Sq += expected [ i ] ;
rank: 780
score: 99.6493904359879
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / dev / expected [ i ] ;
rank: 780
score: 99.63964056199596
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ( expected [ i ] - expected [ i ] ) ) ;
rank: 780
score: 99.59829532398896
patch: dev = ( ( double ) observed [ i ] - expected [ i ] * expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 780
score: 99.59092802159927
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; break ; }
rank: 780
score: 99.58351184475806
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] / dev * dev ;
rank: 780
score: 99.5747725323933
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { return 0 ; }
rank: 781
score: 99.64924452039931
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] + dev * expected [ i ] ;
rank: 781
score: 99.63937790329392
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i - 0 ] ;
rank: 781
score: 99.62923177083333
patch: sum CaMeL Sq += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = observed [ i ] ;
rank: 781
score: 99.591064453125
patch: dev = ( ( double ) observed [ i ] ) . expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ) ;
rank: 781
score: 99.59066035829741
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected ; }
rank: 781
score: 99.58884910300925
patch: dev = observed [ i ] ; dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 781
score: 99.58343716325432
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / ( expected . length - expected [ i ] ) ;
rank: 782
score: 99.6492120150862
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] / expected [ i ] ;
rank: 782
score: 99.61083984375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev ;
rank: 782
score: 99.59788355334052
patch: dev = ( ( byte ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 782
score: 99.59048574942129
patch: dev = ( double ) observed [ i ] ; } sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 782
score: 99.58338928222656
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev ; }
rank: 782
score: 99.57436342592592
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 783
score: 99.63917590725806
patch: dev = ( ( boolean ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 783
score: 99.62900075604838
patch: dev = expected [ i ] ; sum CaMeL Sq += observed [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 783
score: 99.61082699424342
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } sum CaMeL Sq += dev . length ;
rank: 783
score: 99.59779188368056
patch: if ( observed [ i ] - expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 783
score: 99.59100526751894
patch: dev += observed [ i ] - expected [ i ] ; } sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 783
score: 99.58876480594758
patch: result = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 783
score: 99.57430639022436
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 784
score: 99.64899359809027
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] + expected [ i ] ;
rank: 784
score: 99.63888210720486
patch: { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 784
score: 99.59751313308189
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * true [ i ] ;
rank: 784
score: 99.59092975484914
patch: dev = observed [ i ] [ expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] [ expected [ i ] ;
rank: 784
score: 99.59009693287037
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) / dev / expected [ i ] ;
rank: 784
score: 99.58853352864584
patch: dev = observed [ i ] ; dev = dev / expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 784
score: 99.5831199852196
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 784
score: 99.57422501001602
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } }
rank: 785
score: 99.63855374243951
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += 1 * dev * expected [ i ] ;
rank: 785
score: 99.6281494140625
patch: dev = expected [ i ] ; sum CaMeL Sq += expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 785
score: 99.6102783203125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev ;
rank: 785
score: 99.5971435546875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + ( expected [ i ] - observed [ i ] ) ;
rank: 785
score: 99.59002278645833
patch: if ( observed [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 785
score: 99.588525390625
patch: ( ( double ) observed [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 786
score: 99.63839474239865
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / observed [ i ] ;
rank: 786
score: 99.62812151227679
patch: dev = expected [ i ] - expected [ i ] ; { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 786
score: 99.61004638671875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev ; sum CaMeL Sq += dev * dev ;
rank: 786
score: 99.59676339285714
patch: dev = ( ( double ) observed , observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 786
score: 99.59087775735294
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] * dev ;
rank: 786
score: 99.58838732489224
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev += expected [ i ] ;
rank: 786
score: 99.57356342516448
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; sum CaMeL Sq ++ ;
rank: 787
score: 99.63825141059027
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ) ; sum CaMeL Sq += dev * dev [ i ] ;
rank: 787
score: 99.60997250205592
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] + dev * expected [ i ] ;
rank: 787
score: 99.59665352957589
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ) [ i ] ;
rank: 787
score: 99.58984375
patch: dev = Math . min ( ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ) ;
rank: 787
score: 99.5827407836914
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( dev < dev ) { sum CaMeL Sq += dev ; }
rank: 787
score: 99.57349258814102
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / dev ;
rank: 788
score: 99.64869739163306
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += new * dev / expected [ i ] ;
rank: 788
score: 99.63819231305804
patch: if ( observed [ i ] == null ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 788
score: 99.60979260896382
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; return sum CaMeL Sq + dev ;
rank: 788
score: 99.58980015345982
patch: if ( observed [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * expected / expected [ i ] ; }
rank: 788
score: 99.58265341481855
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev / expected [ i ] ; sum CaMeL Sq += dev ;
rank: 788
score: 99.57347347861842
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ; } return sum CaMeL Sq ; }
rank: 789
score: 99.64866536458334
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += expected [ i ] ;
rank: 789
score: 99.59633382161458
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ; return sum CaMeL Sq ;
rank: 789
score: 99.58958385836694
patch: if ( expected [ i ] == expected [ i ] ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 789
score: 99.58257846174568
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev ; sum CaMeL Sq += expected [ i ] ;
rank: 789
score: 99.5734327362805
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ; }
rank: 790
score: 99.6379196579392
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev / dev / dev / expected [ i ] ;
rank: 790
score: 99.59623209635417
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev = expected [ i ] * expected [ i ] ;
rank: 790
score: 99.58935546875
patch: dev = observed [ i ] ; for ( int i = ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 790
score: 99.5878173828125
patch: dev ) { dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 790
score: 99.58255208333334
patch: dev = ( ( float ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev ;
rank: 790
score: 99.57308349609374
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( is CaMeL Non CaMeL Negative ( observed ) || ! is CaMeL Non CaMeL Negative ( observed ) ) {
rank: 791
score: 99.64859169407895
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ) ;
rank: 791
score: 99.63768689385776
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev [ i ] ;
rank: 791
score: 99.60949096679687
patch: dev = ( ( double ) observed [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += sum CaMeL Sq ;
rank: 791
score: 99.5891864483173
patch: dev = observed [ i ] / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 791
score: 99.58781186995968
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 791
score: 99.57306050145348
patch: dev = observed [ i ] ; if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev ; }
rank: 792
score: 99.6485366821289
patch: dev = observed [ i ] ; sum CaMeL Sq += dev / dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 792
score: 99.59030412946429
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * dev * dev /
rank: 792
score: 99.58905707465277
patch: double dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 792
score: 99.58251139322917
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * expected [ i ] ;
rank: 792
score: 99.57302420479911
patch: dev = observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 793
score: 99.62733289930556
patch: int dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 793
score: 99.59030330882354
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * dev ;
rank: 793
score: 99.58891950334821
patch: if ( expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 793
score: 99.58761280980603
patch: double sum CaMeL Sq = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 793
score: 99.57298060825893
patch: if ( ! observed [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 794
score: 99.60856516768293
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . sum CaMeL Sq ;
rank: 794
score: 99.58887532552083
patch: if ( observed [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; break ; }
rank: 794
score: 99.58212716238839
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev / dev ;
rank: 794
score: 99.57272178248355
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } else {
rank: 795
score: 99.63748267389113
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev [ i ] ;
rank: 795
score: 99.62728445870536
patch: dev = dev / expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 795
score: 99.5954948874081
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; else
rank: 795
score: 99.58996161099138
patch: if ( observed [ i ] == null ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 795
score: 99.58880615234375
patch: for ( int i = expected [ i ] ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 795
score: 99.58744303385417
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * observed [ i ] ; }
rank: 795
score: 99.57271030970982
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += $NUMBER$ * dev / dev / expected [ i ] ;
rank: 796
score: 99.64835611979167
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq ] += dev * expected [ i ] ;
rank: 796
score: 99.62700737847223
patch: dev = observed [ i ] - expected [ i ] ; int sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 796
score: 99.60829380580357
patch: dev = ( ( double ) i - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 796
score: 99.59546616498162
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) $NUMBER$ ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 796
score: 99.58988074100378
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev [ i ] * dev ;
rank: 796
score: 99.58874932650862
patch: if ( observed [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 796
score: 99.58736979166666
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev ;
rank: 796
score: 99.58204752604166
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / ( dev ) ;
rank: 796
score: 99.57253592354911
patch: dev = dev [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ;
rank: 797
score: 99.60797119140625
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 797
score: 99.59541829427083
patch: dev += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 797
score: 99.5898078469669
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ; }
rank: 797
score: 99.58734537760417
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * expected [ i ] ; }
rank: 797
score: 99.58188883463542
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 797
score: 99.57244090544872
patch: dev = observed [ i ] / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 798
score: 99.6266338641827
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 798
score: 99.6076910556891
patch: dev = ( ( double ) observed [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . sum ;
rank: 798
score: 99.59528664981617
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 798
score: 99.58970642089844
patch: dev = ( ( double ) observed [ i ] ) . double CaMeL Value ( ) ; sum CaMeL Sq += dev * dev / dev [ i ] ;
rank: 798
score: 99.58856004284274
patch: try { dev = ( ( double ) observed [ i ] ) [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 798
score: 99.58183989653716
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ; } return sum CaMeL Sq / dev ;
rank: 798
score: 99.5723876953125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; else return sum CaMeL Sq ; }
rank: 799
score: 99.59524739583334
patch: dev ++ = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 799
score: 99.58963448660714
patch: if ( observed [ i ] instanceof double ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 799
score: 99.58854727909483
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if = dev / dev / expected [ i ] ;
rank: 799
score: 99.5817626953125
patch: dev = ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 799
score: 99.572265625
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; return sum CaMeL Sq ; }
rank: 800
score: 99.60760341546474
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . max ;
rank: 800
score: 99.58953094482422
patch: if ( observed [ i ] - expected [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * expected [ i ] ; } }
rank: 800
score: 99.58688151041666
patch: ( ( double ) observed [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 800
score: 99.58173014322917
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] + dev ;
rank: 800
score: 99.5717022235577
patch: dev = observed [ i ] - expected [ i ] ; for ( int i = 0 ; i < observed . length ; i ++ ) { sum CaMeL Sq += dev [ i ] ;
rank: 801
score: 99.63638644748264
patch: dev = ( ( double ) observed [ i ] ) ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } return sum CaMeL Sq ;
rank: 801
score: 99.60754975818452
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev ; }
rank: 801
score: 99.58926595052084
patch: if ( observed [ i ] - expected [ i ] > expected [ i ] ) { sum CaMeL Sq += dev * expected [ i ] ;
rank: 801
score: 99.58665183738425
patch: if ( observed [ i ] < expected [ i ] ) sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 801
score: 99.58165241109914
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev ;
rank: 801
score: 99.57167787905092
patch: if ( observed [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 802
score: 99.64773898654514
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 802
score: 99.62639508928571
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; break ;
rank: 802
score: 99.60695286800987
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } sum CaMeL Sq += dev * dev ;
rank: 802
score: 99.59513346354167
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) [ expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 802
score: 99.58912568933823
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev * expected [ i ] ; }
rank: 802
score: 99.58767903645834
patch: if ( observed [ i ] == expected [ i ] ) dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 802
score: 99.58161078559027
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev / dev * expected [ i ] ;
rank: 802
score: 99.57162362557871
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ; }
rank: 803
score: 99.64772435238487
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . expected / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 803
score: 99.63635932074652
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 803
score: 99.62638346354167
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i + expected [ i ] ;
rank: 803
score: 99.60639391447368
patch: dev = ( ( double ) observed [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev ;
rank: 803
score: 99.59484442349138
patch: double dev += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 803
score: 99.58655178931451
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev [ i ] ;
rank: 803
score: 99.5814208984375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / ( double ) expected [ i ] ;
rank: 803
score: 99.57143373842592
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ++ ] ;
rank: 804
score: 99.62635091145833
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return dev ;
rank: 804
score: 99.60628255208333
patch: if ( ! is CaMeL Positive ( observed [ i ] - expected [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 804
score: 99.58899295691288
patch: if ( $STRING$ . equals ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 804
score: 99.58718970514113
patch: dev = ( ( double ) observed [ i ] ) expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 804
score: 99.5864494077621
patch: dev = ( ( float ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 804
score: 99.58140733506944
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 804
score: 99.57137258429276
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] + expected [ i ] ;
rank: 805
score: 99.64742134712837
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq . 0 ;
rank: 805
score: 99.63614694695724
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] ;
rank: 805
score: 99.62633096018145
patch: sum CaMeL Sq += ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 805
score: 99.60516826923077
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 805
score: 99.59475181842673
patch: dev = ( Integer ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 805
score: 99.58897816051136
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += expected [ i ] ; }
rank: 805
score: 99.58701508620689
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev ;
rank: 805
score: 99.58644153225806
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 806
score: 99.60515393708882
patch: dev = ( ( double ) observed [ i ] - ( expected [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 806
score: 99.59467230902777
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] [ expected . length ] ;
rank: 806
score: 99.58700069304436
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if = dev * dev * dev / expected [ i ] ;
rank: 806
score: 99.58638218470982
patch: if ( observed [ i ] == expected [ i ] ) { sum CaMeL Sq = dev * dev / expected [ i ] ; }
rank: 806
score: 99.58129204644098
patch: float observed [ ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 806
score: 99.57118055555556
patch: int dev = dev [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 807
score: 99.62621256510417
patch: dev = expected [ i ] ; dev = dev / observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 807
score: 99.60498046875
patch: dev = ( ( double ) observed [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev ;
rank: 807
score: 99.58881205897177
patch: if ( observed [ i ] == observed [ i ] ) { sum CaMeL Sq += ( observed [ i ] - expected [ i ] ) ; }
rank: 807
score: 99.58120388454861
patch: dev = ( ( double ) observed [ i ] - 1 [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 807
score: 99.57069955221037
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { dev = dev ;
rank: 808
score: 99.63582637392241
patch: dev = observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 808
score: 99.60432514391448
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 808
score: 99.58880256204044
patch: if ( observed [ i ] != null ) { dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 808
score: 99.58679592993951
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / ( ( double ) observed [ i ] ) ;
rank: 808
score: 99.57049881784539
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev ;
rank: 809
score: 99.63566080729167
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev [ i ] ;
rank: 809
score: 99.604248046875
patch: dev = ( ( double ) observed [ i ] - i ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 809
score: 99.58678805443549
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if observed [ i ] = dev * expected [ i ] ;
rank: 809
score: 99.58095230594758
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / ( double ) dev ;
rank: 810
score: 99.63555908203125
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev * dev / expected [ i ] ;
rank: 810
score: 99.62598528180804
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev = expected [ i ] ;
rank: 810
score: 99.59454752604167
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ ] ;
rank: 810
score: 99.58868963068181
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ) ;
rank: 810
score: 99.5867332175926
patch: double dev = observed [ i ] / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 810
score: 99.58598109654018
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * expected / dev / expected [ i ] ;
rank: 810
score: 99.58090505292338
patch: if ( observed [ i ] . equals ( expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 810
score: 99.5697998046875
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) {
rank: 811
score: 99.64623209635417
patch: dev = ( ( double ) ! observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 811
score: 99.63547770182292
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } break ;
rank: 811
score: 99.62598470052083
patch: sum CaMeL Sq += observed [ i ] / expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 811
score: 99.60404887952302
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev ;
rank: 811
score: 99.59447524126838
patch: if ( observed [ i ] - expected [ i ] <= expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 811
score: 99.58856560202206
patch: if ( observed [ i ] instanceof double ) { ( ( double ) observed [ i ] ) . sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 811
score: 99.58653846153847
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 811
score: 99.58082629788306
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) [ i ] ; sum CaMeL Sq += dev * dev / dev ;
rank: 811
score: 99.56973031850961
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 812
score: 99.63531329180744
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / dev / dev / dev / expected [ i ] ;
rank: 812
score: 99.60401581554878
patch: dev = ( double ) observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 812
score: 99.59436848958333
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] $NUMBER$ ;
rank: 812
score: 99.58851453993056
patch: double dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 812
score: 99.58642578125
patch: if ( expected [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 812
score: 99.58066091229838
patch: if ( observed [ i ] - expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev / expected [ i ] ; }
rank: 812
score: 99.56968858506944
patch: if ( observed [ i ] , expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 813
score: 99.6461693548387
patch: sum CaMeL Sq += dev [ i ] / expected [ i ] ; sum CaMeL Sq += dev * dev [ i ] / expected [ i ] ;
rank: 813
score: 99.63531283674568
patch: dev = ( ( int ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev [ i ] ;
rank: 813
score: 99.6259521484375
patch: sum CaMeL Sq += ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 813
score: 99.58065359933036
patch: dev = ( ( double ) observed [ i ] - 1 [ i ] ) ; sum CaMeL Sq += dev / dev / dev ;
rank: 814
score: 99.63528781467014
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev * dev / dev / expected [ i ] ;
rank: 814
score: 99.60365188953489
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 814
score: 99.59409466911765
patch: dev = ( ( double ) observed [ i ] - observed [ i ] ) [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 814
score: 99.58617322198276
patch: if ( expected [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 814
score: 99.58547447467673
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = observed [ i ] ;
rank: 814
score: 99.5692108898628
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev ;
rank: 815
score: 99.63507574957771
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] ;
rank: 815
score: 99.62559066280242
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] + expected [ i ] ;
rank: 815
score: 99.60364641462054
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * [ i ] ;
rank: 815
score: 99.59405876608456
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / * expected [ i ] ;
rank: 815
score: 99.58616355613425
patch: if observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ;
rank: 815
score: 99.58534819504311
patch: sum CaMeL Sq = ( ( double ) expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 815
score: 99.58046402469758
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] * dev * dev ;
rank: 815
score: 99.56918480282738
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq ++ ;
rank: 816
score: 99.63504464285714
patch: if ( observed [ i ] == $NUMBER$ ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 816
score: 99.60361578525641
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 816
score: 99.5939208984375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev += expected [ i ] - expected [ i ] ;
rank: 816
score: 99.58796639278017
patch: double expected = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected ;
rank: 816
score: 99.56864325944767
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { return 0 . 0 ; }
rank: 817
score: 99.64555832435344
patch: dev = ( ( long ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 817
score: 99.63504231770834
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev ;
rank: 817
score: 99.60344676482372
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 817
score: 99.59385579427084
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * ( observed [ i ] - expected [ i ] ) ;
rank: 817
score: 99.5877685546875
patch: dev = ( ( double ) observed [ i ] - 1 [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 817
score: 99.58582724294355
patch: dev = ( ( double ) observed [ i ] expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 817
score: 99.58521321614583
patch: synchronized ( expected ) { dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 817
score: 99.580224609375
patch: z = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev ;
rank: 817
score: 99.56844075520833
patch: if ( expected [ i ] < observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 818
score: 99.63483072916667
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev * dev / expected [ i ] ;
rank: 818
score: 99.60343424479167
patch: dev = observed [ i ] ( expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 818
score: 99.59385052849265
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) [ expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 818
score: 99.58759307861328
patch: if ( observed [ i ] - expected [ i ] < expected [ i ] ) { sum CaMeL Sq += ( double ) observed [ i ] ; }
rank: 818
score: 99.58580729166667
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; } dev = dev * dev / expected [ i ] ;
rank: 819
score: 99.64538904138513
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] . sum CaMeL Sq ;
rank: 819
score: 99.63481987847223
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev / dev / expected [ i ] ;
rank: 819
score: 99.6250632957176
patch: dev = expected [ i ] - expected [ i ] ; int sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 819
score: 99.60313110351562
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev . length ;
rank: 819
score: 99.5935417624081
patch: while ( observed [ i ] - expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 819
score: 99.58752020474138
patch: dev = ( ( double ) observed [ i ] ) . sum [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 819
score: 99.58563639322917
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev = dev * dev / expected [ i ] ;
rank: 819
score: 99.58509114583333
patch: dev = ( ( double ) observed [ i ] ) . ( ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 820
score: 99.62503616898148
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ) ;
rank: 820
score: 99.60243890224359
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq * dev ;
rank: 820
score: 99.59352213541666
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - ( observed [ i ] - expected [ i ] ) ;
rank: 820
score: 99.58744959677419
patch: dev = ( ( double ) observed [ i ] ) . expected [ 0 ] ; sum CaMeL Sq += dev * dev / expected [ 0 ] ;
rank: 820
score: 99.58559744698661
patch: int dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 820
score: 99.58008751502403
patch: result [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ;
rank: 820
score: 99.56763980263158
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ; }
rank: 821
score: 99.6453345514113
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . dev ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 821
score: 99.62501017252605
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 821
score: 99.60204452123398
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . start ;
rank: 821
score: 99.58738425925925
patch: dev += observed [ i ] - expected [ i ] ; ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 821
score: 99.58558872767857
patch: if ( expected [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 821
score: 99.58487955729167
patch: dev = ( ( double ) observed [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 821
score: 99.5799609375
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) + dev / expected [ i ] ;
rank: 822
score: 99.63347710503473
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ) ] ;
rank: 822
score: 99.62486436631944
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev ] ;
rank: 822
score: 99.60173688616071
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 822
score: 99.59325358072917
patch: dev = ( ( double ) observed [ i ] - expected , i ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 822
score: 99.57991273941532
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] * dev ;
rank: 822
score: 99.56754557291667
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] ;
rank: 823
score: 99.64524739583334
patch: dev = observed [ i ] ; sum CaMeL Sq = dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 823
score: 99.62478298611111
patch: sum CaMeL Sq += ( ( ( double ) expected [ i ] - expected [ i ] ) - expected [ i ] ) ;
rank: 823
score: 99.60132707868304
patch: dev = ( ( double [ ] ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 823
score: 99.58529958417338
patch: for ( int i = 0 ; i < observed [ i ] . length ; i ++ ) { dev = dev [ i ] [ i ] ;
rank: 823
score: 99.584716796875
patch: dev = ( dev [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 823
score: 99.56734426398026
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } for ( int i = 0 ; i < observed . length ; i ++ )
rank: 824
score: 99.63323296440973
patch: dev = ( ( int ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 824
score: 99.60066731770833
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 824
score: 99.59300915948276
patch: dev = ( ( double ) observed [ i ] - out [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 824
score: 99.5798583984375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev [ i ] ; }
rank: 824
score: 99.56636127672698
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 825
score: 99.64516129032258
patch: dev = ( ( double ) observed [ i ] - expected , expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 825
score: 99.63315836588542
patch: dev = ( ( double ) observed [ i ] - expected [ i ] , observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 825
score: 99.62432650862068
patch: sum CaMeL Sq += expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 825
score: 99.60057341746794
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ;
rank: 825
score: 99.58733723958333
patch: if ( observed [ i ] instanceof double ) observed [ i ] = ( ( double ) observed [ i ] ) . expected [ i ] ;
rank: 825
score: 99.5847800925926
patch: if ( expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 825
score: 99.57982556573276
patch: if ( observed [ i ] != expected [ i ] ) { sum CaMeL Sq += expected [ i ] / expected [ i ] ; }
rank: 826
score: 99.62409319196429
patch: dev = expected [ i ] - expected [ i ] - dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 826
score: 99.60039672851562
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += observed . length ;
rank: 826
score: 99.59284524356617
patch: i = ( ( double ) observed [ i ] - expected [ i ] ) [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 826
score: 99.58475047144397
patch: if ( dev == expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 826
score: 99.56631324404762
patch: dev = observed [ i ] ; if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev ;
rank: 827
score: 99.64447612147177
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . i ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 827
score: 99.63257649739583
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ++ ] ;
rank: 827
score: 99.62384033203125
patch: dev = dev [ i ] ; dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 827
score: 99.600341796875
patch: dev = ( ( double ) observed : observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 827
score: 99.59279466711956
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ;
rank: 827
score: 99.5844017767137
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] }
rank: 827
score: 99.56573016826923
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( ! is CaMeL Positive ( observed ) || ! is CaMeL Non CaMeL Negative ( observed ) ) {
rank: 828
score: 99.64433762122844
patch: dev = ( double ) ( observed [ i ] + expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 828
score: 99.59983607700893
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev ;
rank: 828
score: 99.58713204520089
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev [ i ] ;
rank: 828
score: 99.58430727066532
patch: dev = observed [ i ] ; dev = dev / expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 828
score: 99.57977973090277
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * dev ;
rank: 828
score: 99.5655859375
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ) ;
rank: 829
score: 99.64425998263889
patch: dev = ( ( ( double ) expected [ i ] - expected [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 829
score: 99.63203938802083
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / dev [ i ] ;
rank: 829
score: 99.62360088641827
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 829
score: 99.58707101004464
patch: final double dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 829
score: 99.58426219019397
patch: double expected = observed [ i ] ; dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 829
score: 99.58413809317129
patch: if ( expected [ i ] == expected [ i ] ) sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 829
score: 99.57974979795259
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev / dev / dev / expected [ i ] ;
rank: 830
score: 99.6313674514358
patch: dev = ( ( double [ ] ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 830
score: 99.59240004595588
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) [ i ] ; sum CaMeL Sq -= dev * dev / expected [ i ] ;
rank: 830
score: 99.58394368489583
patch: if ( observed [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev * dev / expected [ i ] ; }
rank: 830
score: 99.57964035560344
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] - dev ;
rank: 830
score: 99.56507912660257
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + observed [ i ] - expected [ i ] ) ; } for ( int i = 0 ; i < expected . length ; i ++ )
rank: 831
score: 99.64375157510081
patch: dev = is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 831
score: 99.623388671875
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev = dev / expected [ i ] ;
rank: 831
score: 99.59941755022321
patch: dev = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] + dev ;
rank: 831
score: 99.59227797564338
patch: tmp [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 831
score: 99.5841864224138
patch: double expected = observed [ i ] ; dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 831
score: 99.58393712197581
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } dev = ( ( double ) observed [ i ] ) ;
rank: 831
score: 99.57949533770162
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev ; ;
rank: 831
score: 99.56502904647436
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq ++ ;
rank: 832
score: 99.64373944256756
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += sum CaMeL Sq ;
rank: 832
score: 99.62328229631696
patch: dev = observed [ i ] ; dev = expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 832
score: 99.59907588252315
patch: observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; } return sum CaMeL Sq ;
rank: 832
score: 99.58678017893145
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ) ; }
rank: 832
score: 99.58413260323661
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev = ( double ) observed [ i ] ;
rank: 832
score: 99.58387586805556
patch: if ( expected [ i ] <= expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 832
score: 99.57939453125
patch: double observed [ ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] ;
rank: 832
score: 99.56492332175925
patch: dev = observed [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev ;
rank: 833
score: 99.64372173108552
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev ) / expected [ i ] ; } return sum CaMeL Sq ;
rank: 833
score: 99.63072445518092
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( ! is CaMeL Non CaMeL Negative ( observed ) ) { sum CaMeL Sq += dev ; }
rank: 833
score: 99.62323588709677
patch: sum CaMeL Sq += observed [ i ] - expected [ i ] ; } sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 833
score: 99.59903177400915
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } if ( ! is CaMeL Non CaMeL Negative ( observed ) ) { return sum CaMeL Sq ; }
rank: 833
score: 99.58407888104838
patch: sum CaMeL Sq = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 833
score: 99.5837823275862
patch: if ( ( ( double ) observed [ i ] ) == dev ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 834
score: 99.63057767427884
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; sum CaMeL Sq += dev ;
rank: 834
score: 99.59205496651786
patch: dev = ( ( double ) observed [ i ] - $STRING$ ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ; }
rank: 834
score: 99.58656141493056
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) * sum CaMeL Sq / expected [ i ] ;
rank: 834
score: 99.58402506510417
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 834
score: 99.56488506610577
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] + expected [ i ] ;
rank: 835
score: 99.64344075520833
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected / expected ;
rank: 835
score: 99.63045247395833
patch: dev = ( double ) observed [ i ] - expected [ i 1 ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 835
score: 99.59865851151316
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] - dev / expected [ i ] ;
rank: 835
score: 99.5834327980324
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; ;
rank: 835
score: 99.57884114583334
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev ; }
rank: 835
score: 99.56481481481481
patch: if ( observed [ i ] ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 836
score: 99.59845934416118
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; } sum CaMeL Sq += dev ;
rank: 836
score: 99.58642578125
patch: if ( observed [ i ] - expected . length > expected . length ) { sum CaMeL Sq += observed [ i ] * expected [ i ] ; }
rank: 836
score: 99.58331705729167
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] - expected [ i ] ) ;
rank: 836
score: 99.56472296463816
patch: dev = observed [ i ] ; for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ; sum CaMeL Sq ++ ; }
rank: 837
score: 99.64309895833334
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 837
score: 99.62233253761575
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ] ;
rank: 837
score: 99.59169224330357
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; return sum CaMeL Sq ; }
rank: 837
score: 99.58626556396484
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 837
score: 99.57862006293402
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] + expected [ i ] ;
rank: 837
score: 99.56439887152777
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; return sum CaMeL Sq += dev * dev ;
rank: 838
score: 99.6429931640625
patch: sum CaMeL Sq += dev * ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 838
score: 99.62230573381696
patch: sum CaMeL Sq += expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 838
score: 99.59824732730263
patch: dev = ( ( ( double ) observed [ i ] ) - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 838
score: 99.58326009114583
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 838
score: 99.58274623325893
patch: dev = observed [ i ] / expected [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 839
score: 99.62941080729166
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; return sum CaMeL Sq += dev * expected [ i ] ;
rank: 839
score: 99.62179249730603
patch: int observed [ ] = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 839
score: 99.59794560185185
patch: observed [ i ] = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 839
score: 99.57846505301339
patch: if ( ! observed [ i ] ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 839
score: 99.56426038240132
patch: dev = observed [ i ] ; for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ; return sum CaMeL Sq ; }
rank: 840
score: 99.62937525699013
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( ! is CaMeL Positive ( observed [ i ] ) ) { return sum CaMeL Sq ; }
rank: 840
score: 99.62164938038794
patch: double dev = observed [ i ] ; dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 840
score: 99.59793893914474
patch: dev = ( ( double ) ( expected [ i ] - expected [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 840
score: 99.58600050403226
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev [ i ] ;
rank: 840
score: 99.58259800502232
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } }
rank: 840
score: 99.578369140625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] ; sum CaMeL Sq += dev * dev / dev ;
rank: 840
score: 99.56378956330128
patch: dev = observed [ i ] ; for ( int i = 0 ; i < observed . length ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 841
score: 99.62888697574013
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] sum CaMeL Sq ;
rank: 841
score: 99.62159044989224
patch: ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 841
score: 99.58574848790323
patch: dev = ( ( double ) observed [ i ] ) . sum CaMeL Sq += dev [ i ] ; sum CaMeL Sq += dev [ i ] ;
rank: 841
score: 99.58257004310344
patch: dev = dev [ i ] ; dev = dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 841
score: 99.57791341145834
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev ;
rank: 841
score: 99.56372638081395
patch: dev = observed [ i ] - expected [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed ) || ! is CaMeL Non CaMeL Negative ( observed ) ) { sum CaMeL Sq += dev ; }
rank: 842
score: 99.64275159333882
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 842
score: 99.59084123883929
patch: dev = ( ( double ) observed + observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 842
score: 99.58570098876953
patch: for ( int i = 0 ; i < observed [ i ] ; i ++ ) { dev += observed [ i ] - expected [ i ] ; }
rank: 842
score: 99.58240618024554
patch: if ( observed [ i ] < expected [ i ] ) { sum CaMeL Sq += dev / dev / expected [ i ] ; }
rank: 842
score: 99.58217436691811
patch: if observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) * dev / expected [ i ] ;
rank: 842
score: 99.56369357638889
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 843
score: 99.64227973090277
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] / expected [ i ] ;
rank: 843
score: 99.62072332974138
patch: sum CaMeL Sq += observed [ i ] - expected [ i ] ; expected [ i ] = dev * dev / expected [ i ] ;
rank: 843
score: 99.59750366210938
patch: dev = ( ( double ) observed [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += sum CaMeL Sq ;
rank: 843
score: 99.5907958984375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev += expected [ i ] * expected [ i ] ;
rank: 843
score: 99.58204933449075
patch: observed [ i ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 843
score: 99.57782854352679
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev / dev / dev ;
rank: 844
score: 99.64204259072581
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq : dev += dev * expected [ i ] ;
rank: 844
score: 99.62852354307432
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / dev * dev / expected [ i ] ;
rank: 844
score: 99.62071491109914
patch: sum CaMeL Sq += expected [ i ] - expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 844
score: 99.59745065789474
patch: dev = ( ( double ) observed : ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 844
score: 99.59072770743535
patch: l = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 844
score: 99.58212890625
patch: ( ( double ) observed [ i ] - expected [ i ] ) . sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 844
score: 99.58190497036638
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } else {
rank: 845
score: 99.64190870715726
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected . length [ i ] ;
rank: 845
score: 99.62848864103618
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) < observed . length ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 845
score: 99.59723056891026
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += sum CaMeL Sq
rank: 845
score: 99.59043255974265
patch: dev = ( ( double ) observed $NUMBER$ [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 845
score: 99.58548177083334
patch: dev += observed [ i ] - expected [ i ] ; } sum CaMeL Sq += ( expected [ i ] - expected [ i ] ) ;
rank: 845
score: 99.58211543642241
patch: dev = ( ( double ) observed [ i ] - dev ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 845
score: 99.57770647321429
patch: dev = ( ( float ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev ;
rank: 845
score: 99.56328381990132
patch: for ( int i = 0 ; i < expected . length ; i ++ ) { dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev ;
rank: 846
score: 99.62735421316964
patch: if ( observed [ i ] == $STRING$ ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 846
score: 99.620556640625
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev = dev ;
rank: 846
score: 99.59034886853448
patch: { dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 846
score: 99.58534819504311
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * sum CaMeL Sq / dev / expected [ i ] ;
rank: 846
score: 99.58200509207589
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] + dev ;
rank: 846
score: 99.58171735491071
patch: dev = observed [ i ] ; dev = observed [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 846
score: 99.5775390625
patch: j = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev ;
rank: 846
score: 99.56280838815789
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; return sum CaMeL Sq += dev ;
rank: 847
score: 99.62732747395833
patch: dev = ( ( double ) observed [ i ] - expected [ i 1 ] ) ; sum CaMeL Sq += dev * dev [ i ] ;
rank: 847
score: 99.62026541573661
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; ) ;
rank: 847
score: 99.59671823601974
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ; return dev ;
rank: 847
score: 99.58180519386575
patch: if ( expected [ i ] != observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 847
score: 99.57742625269397
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; } return dev * dev / expected [ 0 ] ;
rank: 848
score: 99.64162083675987
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] / expected [ i ] ;
rank: 848
score: 99.62012532552083
patch: sum CaMeL Sq += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / dev ;
rank: 848
score: 99.59003737877156
patch: dev ++ ; dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 848
score: 99.58514404296875
patch: dev += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 848
score: 99.58177869073276
patch: if ( observed [ i ] == 0 ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 848
score: 99.5774169921875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev * dev ;
rank: 848
score: 99.56239357972757
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev / dev ;
rank: 849
score: 99.64153731496711
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . ;
rank: 849
score: 99.61994881465517
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq = dev * expected [ i ] ;
rank: 849
score: 99.58498619342673
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) * expected [ i ] ; ;
rank: 849
score: 99.58135986328125
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / dev * expected [ i ] ;
rank: 850
score: 99.61956787109375
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i + 1 ] ;
rank: 850
score: 99.58942281788794
patch: double dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 850
score: 99.584716796875
patch: dev += ( ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ) ;
rank: 850
score: 99.58119419642857
patch: double expected = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 850
score: 99.58092447916667
patch: for ( int i = 0 ; i < expected . length ; i ++ ) { dev = ( ( double ) observed [ i ] ) ;
rank: 850
score: 99.57725524902344
patch: dev = ( ( double ) observed [ i ] - 1 [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev ;
rank: 850
score: 99.5620367588141
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 851
score: 99.64147619298987
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * expected [ i ] ; sum CaMeL Sq += dev * dev ;
rank: 851
score: 99.58938419117646
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] [ $NUMBER$ ] ;
rank: 851
score: 99.58467320033482
patch: dev = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 851
score: 99.57705688476562
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ( ( double ) observed [ i ] ) ;
rank: 851
score: 99.56192129629629
patch: dev = observed [ i ] ; for ( int i = 0 ; i < observed [ i ] . length ; i ++ )
rank: 852
score: 99.64146767893145
patch: dev = ( dev ) ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 852
score: 99.6190673828125
patch: ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 852
score: 99.59454956054688
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ;
rank: 852
score: 99.58912816540948
patch: if ( observed , observed [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 852
score: 99.5845458984375
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ) ;
rank: 852
score: 99.58067220052084
patch: double observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev ;
rank: 852
score: 99.57697164601294
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; } return dev / dev / expected [ i ] ;
rank: 853
score: 99.62492290296052
patch: if ( ! is CaMeL Positive ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ; }
rank: 853
score: 99.61900592672414
patch: dev = observed [ i ] ; dev = observed [ i ] ; ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 853
score: 99.5945325020032
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ]
rank: 853
score: 99.58449074074075
patch: double observed [ i ] = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 853
score: 99.58014547413794
patch: if ( ( observed [ i ] > expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 853
score: 99.5767234519676
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = expected [ i ] ;
rank: 853
score: 99.56060180664062
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / dev ;
rank: 854
score: 99.62490762246621
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) < observed . length ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 854
score: 99.61899239676339
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; ) ;
rank: 854
score: 99.58448107489224
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * expected [ i ] ;
rank: 854
score: 99.58039460358796
patch: dev = ( ( float ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 854
score: 99.5799560546875
patch: dev = ( ( double ) observed [ i ] ) ; if observed [ i ] = dev * dev / expected [ i ] ;
rank: 854
score: 99.57648577008929
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] / expected [ i ] ;
rank: 855
score: 99.64138267780173
patch: dev = ( double ) ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 855
score: 99.59410400390625
patch: dev = ( ( double ) observed [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += sum CaMeL Sq ;
rank: 855
score: 99.5844497680664
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev ;
rank: 855
score: 99.57989501953125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; return dev / dev / expected [ i ] ;
rank: 855
score: 99.57636854383681
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev [ i ] / dev / expected [ i ] ;
rank: 855
score: 99.5603778545673
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [
rank: 856
score: 99.6246337890625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; return sum CaMeL Sq ;
rank: 856
score: 99.59410132431402
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev ;
rank: 856
score: 99.5885809536638
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev - dev [ i ] ;
rank: 856
score: 99.584423828125
patch: if ( observed [ i ] - expected [ i ] > 0 ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 856
score: 99.57980030980603
patch: if ( ( ( double ) observed [ i ] ) == expected ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 856
score: 99.57619900173611
patch: dev += dev [ i ] - expected [ i ] ; sum CaMeL Sq += dev [ i ] - expected [ i ] ;
rank: 856
score: 99.55921829578489
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 857
score: 99.62456403459821
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / dev * dev / expected [ i ] ;
rank: 857
score: 99.61866978236607
patch: dev = expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 857
score: 99.58430727066532
patch: if ( observed [ i ] - expected [ i ] < observed [ i ] ) { sum CaMeL Sq += dev * expected [ i ] ; }
rank: 857
score: 99.58020471643519
patch: i = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 857
score: 99.57978166852679
patch: dev = observed [ i ] ; observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 857
score: 99.57618871228448
patch: dev = ( ( double ) observed [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 857
score: 99.55916015625
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] - expected [ i ] ) ) ;
rank: 858
score: 99.64119466145833
patch: dev = observed [ i ] ; sum CaMeL Sq += dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 858
score: 99.62406703404018
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / false ;
rank: 858
score: 99.61854290140086
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] [ i ] ;
rank: 858
score: 99.59354967948718
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq - dev ;
rank: 858
score: 99.58815569196429
patch: if ( observed [ i ] - expected . length != observed . length ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 858
score: 99.584228515625
patch: dev = observed [ i ] [ expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] [ expected [ i ] ; }
rank: 858
score: 99.58004195601852
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / observed [ i ] ; }
rank: 858
score: 99.57882125289352
patch: dev = expected [ i ] / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 858
score: 99.55914916992188
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } for ( int i = 0 ; i < observed . length ; i ++ ) { dev = ( double ) observed [ i ] ;
rank: 859
score: 99.64108177923387
patch: dev = ( ( double ) expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 859
score: 99.62393105996621
patch: final double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 859
score: 99.61852010091145
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 859
score: 99.59336391715117
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 859
score: 99.57953287760417
patch: double observed [ i ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 859
score: 99.57875639816811
patch: dev = observed [ i ] ; if observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 859
score: 99.57612462197581
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev / expected [ i ] ; sum CaMeL Sq += dev ;
rank: 859
score: 99.55901317107372
patch: if ( is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) {
rank: 860
score: 99.61849539620536
patch: dev = Math + expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 860
score: 99.59279174804688
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; } sum CaMeL Sq += sum CaMeL Sq ;
rank: 860
score: 99.5876823874081
patch: if ( observed [ i ] - observed [ i ] - observed [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 860
score: 99.58395724826389
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / sum CaMeL Sq / expected [ i ] ;
rank: 860
score: 99.57873083043981
patch: if ( observed [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 861
score: 99.61826508620689
patch: sum CaMeL Sq = expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 861
score: 99.59215856481481
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ) ;
rank: 861
score: 99.58761280980603
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected $NUMBER$ ;
rank: 861
score: 99.57912681842673
patch: sum CaMeL Sq += ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 861
score: 99.57606608072916
patch: dev = observed [ i ] - expected [ i ] ; if ( expected [ i ] == dev ) { sum CaMeL Sq += dev ; }
rank: 861
score: 99.55811709449405
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / dev ;
rank: 862
score: 99.64099934895833
patch: dev = ( dev . observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 862
score: 99.62363462094908
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev * dev / dev / dev / expected [ i ] ;
rank: 862
score: 99.61797885237068
patch: sum CaMeL Sq = observed [ i ] - expected [ i ] ; ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 862
score: 99.58384638247283
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ;
rank: 862
score: 99.57804652622768
patch: if ( observed [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 862
score: 99.575771484375
patch: dev = ( ( double ) observed [ i ] - ( expected [ i ] - expected [ i ] ) ) ;
rank: 863
score: 99.62349556587837
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i - 1 ] ;
rank: 863
score: 99.61783272879464
patch: dev = observed [ i ] - expected [ i ] - dev ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 863
score: 99.59141501402243
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * dev ; } return sum CaMeL Sq ;
rank: 863
score: 99.57900390625
patch: sum CaMeL Sq = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ;
rank: 863
score: 99.57804361979167
patch: dev = observed [ i ] / expected [ i ] ; { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 863
score: 99.57568359375
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += expected [ i ] + expected [ i ] ;
rank: 863
score: 99.55758056640624
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { return dev ;
rank: 864
score: 99.62347881610577
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev ;
rank: 864
score: 99.58336981411638
patch: dev = observed [ i ] - expected [ i ] * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 864
score: 99.57888357979911
patch: dev = observed [ i ] ; dev = dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 864
score: 99.577978515625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev = dev * dev / expected [ i ] ; }
rank: 864
score: 99.57563740498311
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev * expected [ i ] ; sum CaMeL Sq += dev ;
rank: 865
score: 99.64052261844758
patch: dev = ( ( String ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 865
score: 99.58725922683189
patch: if ( observed [ i ] - expected [ i ] != $NUMBER$ ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 865
score: 99.58329264322917
patch: dev += observed [ i ] - expected [ i ] ; } sum CaMeL Sq += ( observed [ i ] - expected [ i ] ) ;
rank: 865
score: 99.5569598858173
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq += dev ;
rank: 866
score: 99.64045961441532
patch: dev = is CaMeL Positive ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 866
score: 99.62304027660473
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] + dev ;
rank: 866
score: 99.58949944911859
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq + dev ;
rank: 866
score: 99.55655298477564
patch: if ( is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 867
score: 99.64044386340726
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] .
rank: 867
score: 99.62296977796052
patch: dev = ( ( double ) observed [ i ] - expected [ i ] + expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 867
score: 99.58920433407738
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 867
score: 99.58715102251838
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) [ dev ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 867
score: 99.577880859375
patch: if ( ( ( double ) observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 867
score: 99.57552897135416
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / ( expected ) ;
rank: 867
score: 99.55646623883929
patch: dev = observed [ i ] - expected [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed ) || ! is CaMeL Non CaMeL Negative ( observed ) ) { sum CaMeL Sq += dev ;
rank: 868
score: 99.61666554418103
patch: dev = ( ( double ) observed [ i ] - 0 [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 868
score: 99.58909941882622
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev ; }
rank: 868
score: 99.5784112338362
patch: dev = ( ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 868
score: 99.57774616109914
patch: if ( observed [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } ;
rank: 868
score: 99.57550920758929
patch: z = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev ;
rank: 868
score: 99.55599752286585
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev ;
rank: 869
score: 99.61637369791667
patch: dev = observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 869
score: 99.58896841653963
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . sum ( ) ;
rank: 869
score: 99.58274792086694
patch: if ( observed [ i ] == null ) { sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 869
score: 99.57834388469827
patch: dev = observed [ i ] ; dev = expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 869
score: 99.577607421875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev * expected [ i ] ;
rank: 869
score: 99.55570678710937
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( ! is CaMeL Non CaMeL Negative ( observed ) ) { sum CaMeL Sq += dev * dev ; }
rank: 870
score: 99.64004677220395
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . dev / expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 870
score: 99.62217494419643
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev ;
rank: 870
score: 99.61613516971983
patch: expected [ i ] = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 870
score: 99.58700933689025
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 870
score: 99.58244105747768
patch: double dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ) ;
rank: 870
score: 99.57766197467673
patch: observed [ i ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 870
score: 99.575048828125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - dev / expected [ i ] ;
rank: 870
score: 99.55553306021342
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 871
score: 99.61609758649554
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i + 1 ] ;
rank: 871
score: 99.57754952566964
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] * expected [ i ] ;
rank: 871
score: 99.57477961359797
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev ; } sum CaMeL Sq += dev * dev ;
rank: 871
score: 99.55514171511628
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq -- ; }
rank: 872
score: 99.62151227678571
patch: dev = ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 872
score: 99.61598423549107
patch: dev = dev [ i ] ; dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 872
score: 99.586669921875
patch: dev = observed [ i ] * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 872
score: 99.58650154903017
patch: dev = ( float ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 872
score: 99.57754080636161
patch: if ( expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * expected / expected [ i ] ; }
rank: 872
score: 99.57735890355603
patch: try { dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 872
score: 99.5747491244612
patch: if ( observed [ i ] - expected [ i ] == expected [ i ] ) { sum CaMeL Sq += expected [ i ] ; }
rank: 872
score: 99.55514090401786
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [
rank: 873
score: 99.6394107216283
patch: dev = observed [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 873
score: 99.5863662347561
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev ;
rank: 873
score: 99.58207062752017
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev /
rank: 873
score: 99.5771063442888
patch: dev = observed [ i ] ; dev = dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 873
score: 99.55513196113782
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 874
score: 99.63896741365132
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } return ( double ) sum CaMeL Sq ;
rank: 874
score: 99.62090899493244
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / dev / dev / expected [ i ] ;
rank: 874
score: 99.58621651785714
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev ;
rank: 874
score: 99.58206380208334
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] * expected [ i ] ; }
rank: 874
score: 99.57700376157408
patch: dev = observed [ i ] < expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 874
score: 99.57671908674568
patch: if ( dev * expected [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 874
score: 99.55421752929688
patch: for ( int i = 0 ; i < expected . length ; i ++ ) { dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 875
score: 99.638916015625
patch: dev = ( double ) observed [ i ] [ expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 875
score: 99.62068256578948
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; else { return sum CaMeL Sq ;
rank: 875
score: 99.61560872395833
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev = dev ;
rank: 875
score: 99.58629692925348
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } else { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 875
score: 99.586181640625
patch: double dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 875
score: 99.576630859375
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 875
score: 99.57649739583333
patch: double expected = observed [ i ] ; dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 875
score: 99.57421003069196
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } return dev * dev / dev / dev ;
rank: 876
score: 99.62062290736607
patch: if ( observed [ i ] == 1 ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 876
score: 99.61466190732759
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * expected [ i ] ;
rank: 876
score: 99.58616480334052
patch: f = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 876
score: 99.58381958007813
patch: dev = ( double ) observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 876
score: 99.57625325520833
patch: if ( expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; break ; }
rank: 876
score: 99.57418575802365
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev ; } sum CaMeL Sq += dev * dev / dev ;
rank: 876
score: 99.55408296130952
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ; }
rank: 877
score: 99.63826778017241
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / dev * expected [ i ] ;
rank: 877
score: 99.62002081620066
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 877
score: 99.61437567349138
patch: dev = expected [ i ] ; dev = expected [ i ] ; ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 877
score: 99.58594591864224
patch: double expected = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected / expected [ i ] ;
rank: 877
score: 99.58146720096983
patch: if ( observed [ i ] instanceof double ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 877
score: 99.57590060763889
patch: if observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ;
rank: 877
score: 99.57584054129464
patch: if ( dev [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 877
score: 99.57414027622768
patch: dev = observed [ i ] - expected [ i ] ; if ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 877
score: 99.55333533653847
patch: dev = observed [ i ] ; dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ;
rank: 878
score: 99.61980329241071
patch: dev = ( ( int ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 878
score: 99.58590133101852
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - dev / dev / expected [ i ] ;
rank: 878
score: 99.58240327380952
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 878
score: 99.5739990234375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev + dev ;
rank: 878
score: 99.55308493589743
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 879
score: 99.6191604201858
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev * dev / dev / expected [ i ] ;
rank: 879
score: 99.5823974609375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += expected . length ;
rank: 879
score: 99.5812567349138
patch: double dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev ;
rank: 879
score: 99.5756366436298
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; return dev * expected [ i ] ;
rank: 879
score: 99.5529534755609
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 880
score: 99.63768689385776
patch: double sum CaMeL Sq += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 880
score: 99.61894788240132
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] ++ ;
rank: 880
score: 99.6138671875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; expected [ i ] = dev * expected [ i ] ;
rank: 880
score: 99.58561488560268
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; observed [ i ] = expected [ i ] ;
rank: 880
score: 99.58210270579268
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . sum . sum ;
rank: 880
score: 99.57551792689732
patch: dev = expected [ i ] ; dev = dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 880
score: 99.5753173828125
patch: int observed [ ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 880
score: 99.5737774188702
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 880
score: 99.55253405448718
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev ; }
rank: 881
score: 99.61382378472223
patch: dev = expected [ i ] - expected [ i ] ; expected [ i ] = dev * dev / expected [ i ] ;
rank: 881
score: 99.58556082589286
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected , expected [ i ] ;
rank: 881
score: 99.58184523809524
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . sum ;
rank: 881
score: 99.58095522280092
patch: double dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 881
score: 99.57546561104911
patch: dev = observed [ i ] ; dev = expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 881
score: 99.57506061422414
patch: if ( ( ( double ) observed [ i ] ) == 0 ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 881
score: 99.57373860677083
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ( dev * dev / dev ) ;
rank: 881
score: 99.55249649439102
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev ;
rank: 882
score: 99.61882390202703
patch: dev = ( ( double ) ( expected [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 882
score: 99.61367910879629
patch: dev = expected [ i ] - expected [ i ] ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 882
score: 99.5810606421494
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } if ( ! is CaMeL Positive ( expected ) || ! is CaMeL Non CaMeL Negative ( observed [
rank: 882
score: 99.58069268588362
patch: double dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev [ i ] ;
rank: 882
score: 99.57532190393519
patch: dev = observed [ i ] ; dev = expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 882
score: 99.57477213541667
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if = dev * dev / expected [ i ] ; }
rank: 882
score: 99.57370521282327
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; } return dev * dev / expected [ i ] ;
rank: 883
score: 99.61833844866071
patch: i = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 883
score: 99.61345804148706
patch: dev = expected [ i ] [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 883
score: 99.58524816176471
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 883
score: 99.58063616071429
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 883
score: 99.58006591796875
patch: dev = ( ( double ) observed [ i ] ) ; double sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 883
score: 99.575146484375
patch: double expected = observed [ i ] ; dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 883
score: 99.574462890625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ? expected [ i ] : expected [ i ] ) ;
rank: 883
score: 99.57370407516892
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev ; } sum CaMeL Sq += dev / dev ;
rank: 883
score: 99.55165561409883
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev / dev ;
rank: 884
score: 99.61302083333334
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev = dev * expected [ i ] ;
rank: 884
score: 99.58512931034483
patch: dev = observed [ i ] - expected [ i ] ; } sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 884
score: 99.58053385416666
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev * dev /
rank: 884
score: 99.5797684832317
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev ;
rank: 885
score: 99.63681977370689
patch: double dev = ( expected [ i ] + expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 885
score: 99.61232152478448
patch: dev = observed [ i ] - expected [ i ] ; { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 885
score: 99.58511013454861
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] [ observed . length ] ;
rank: 885
score: 99.58039202008929
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] + expected [ i ] ;
rank: 885
score: 99.57967529296874
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } break ;
rank: 885
score: 99.57435344827586
patch: dev = ( ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 885
score: 99.57312883649554
patch: j = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev ;
rank: 885
score: 99.551279296875
patch: dev = observed [ i ] ; dev = ( ( int ) observed [ i ] - expected [ i ] ) ;
rank: 886
score: 99.58001302083333
patch: sum CaMeL Sq += ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev [ i ] ;
rank: 886
score: 99.57884038880815
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . sum ;
rank: 886
score: 99.57432725694444
patch: synchronized ( dev ) { dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 886
score: 99.57419162326389
patch: sum CaMeL Sq += ( ( ( double ) observed [ i ] - expected [ i ] ) == expected [ i ] ) ;
rank: 886
score: 99.57311559606481
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += expected [ i ] / expected [ i ] ;
rank: 887
score: 99.61765834263393
patch: dev = ( double ) observed [ i ] ; dev = ( ( double ) expected [ i ] - expected [ i ] ) ;
rank: 887
score: 99.6122413917824
patch: ( = observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 887
score: 99.57993977864584
patch: double dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 887
score: 99.57371303013393
patch: if ( expected [ i ] != expected [ i ] ) { sum CaMeL Sq += dev / dev / expected [ i ] ; }
rank: 887
score: 99.57310748922414
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } return dev * dev / expected [ 0 ] ;
rank: 887
score: 99.5503515625
patch: dev = observed [ i ] ; dev = ( double ) ( observed [ i ] - expected [ i ] ) ;
rank: 888
score: 99.61733774038461
patch: dev = ( double ) observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev ; }
rank: 888
score: 99.58469154094827
patch: c = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 888
score: 99.57968026620371
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] - expected [ i ] ;
rank: 888
score: 99.57839295922255
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq + sum CaMeL Sq ;
rank: 888
score: 99.57319167564656
patch: sum CaMeL Sq += observed [ i ] / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 888
score: 99.5729782516892
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq / dev ;
rank: 888
score: 99.5502697172619
patch: dev = observed [ i ] ; if ( is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 889
score: 99.63484700520833
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += - dev * expected [ i ] ;
rank: 889
score: 99.57939453125
patch: if ( observed [ i ] - expected . length > 1 ) { sum CaMeL Sq += observed [ i ] - expected [ i ] ; }
rank: 889
score: 99.57294753502156
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += ( ( double ) dev ) ;
rank: 889
score: 99.5728759765625
patch: if ( observed [ i ] != expected [ i ] ) { sum CaMeL Sq += dev / dev / expected [ i ] ; }
rank: 889
score: 99.54948120117187
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 890
score: 99.6172072951858
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 890
score: 99.61174406828704
patch: double ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 890
score: 99.57915852864583
patch: if ( observed [ i ] instanceof double ) { sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 890
score: 99.57706894985465
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev ;
rank: 890
score: 99.57278103298611
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) & expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 890
score: 99.57258823939732
patch: dev = dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev / expected [ i ] ;
rank: 890
score: 99.5725
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) * expected [ i ] ) ;
rank: 891
score: 99.5844367532169
patch: observed [ i ] = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 891
score: 99.57904263200432
patch: if ( observed [ i ] - expected [ i ] > expected [ i ] ) { sum CaMeL Sq += observed [ i ] ; }
rank: 891
score: 99.57258823939732
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] ) ;
rank: 892
score: 99.6170654296875
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] ;
rank: 892
score: 99.61164460358796
patch: dev = ! expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 892
score: 99.57633833451705
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev ; }
rank: 892
score: 99.5724676724138
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ) ;
rank: 892
score: 99.57211408943965
patch: dev = ( double ) observed [ i ] ; if ( dev ) sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 892
score: 99.549365234375
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 893
score: 99.61657262731481
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev [ i ] ;
rank: 893
score: 99.61162458147321
patch: double observed [ i ] = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 893
score: 99.58401309742646
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; } else { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 893
score: 99.57849609375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev / dev [ i ] ;
rank: 893
score: 99.57550603693181
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 893
score: 99.57237897600446
patch: double observed [ i ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 893
score: 99.57208883351294
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev ; ;
rank: 894
score: 99.61641751802884
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 894
score: 99.61138237847223
patch: dev = expected [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 894
score: 99.58383358226104
patch: if ( expected [ i ] - expected [ i ] - expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 894
score: 99.57804361979167
patch: if ( observed [ i ] != null ) { dev = ( ( double ) observed [ i ] ) . double CaMeL Value ( ) ; }
rank: 894
score: 99.57236664870689
patch: dev = observed [ i ] ; dev = observed [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ; }
rank: 894
score: 99.57205904447116
patch: result [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ;
rank: 894
score: 99.57166399274554
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev /
rank: 894
score: 99.54912860576923
patch: dev = observed [ i ] ; for ( int i = 0 ; i < expected . length ; i ++ ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 895
score: 99.63382118626645
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] . expected [ i ] ;
rank: 895
score: 99.61133716724537
patch: dev = observed [ i ] - expected [ i ] ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 895
score: 99.57797677176339
patch: dev += ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 895
score: 99.57516479492188
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq = sum CaMeL Sq ;
rank: 895
score: 99.57228246228448
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; } dev = dev / expected [ i ] ;
rank: 895
score: 99.571650390625
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ;
rank: 895
score: 99.54889698517628
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; return sum CaMeL Sq ; }
rank: 896
score: 99.61608465786638
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / - dev ;
rank: 896
score: 99.61121961805556
patch: dev = dev [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 896
score: 99.58329264322917
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] [ observed . length ) ;
rank: 896
score: 99.5750732421875
patch: dev = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; else sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 896
score: 99.57222202845982
patch: dev = observed [ i ] ; dev = observed [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 896
score: 99.57161898226352
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } return dev ;
rank: 896
score: 99.5714911099138
patch: if ( observed [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; ; }
rank: 896
score: 99.54821166992187
patch: dev = observed [ i ] ; if ( ! is CaMeL Positive ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 897
score: 99.577734375
patch: double observed [ i ] = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev [ i ] ;
rank: 897
score: 99.57493286132812
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 897
score: 99.5474228277439
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 898
score: 99.61535314611487
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 898
score: 99.577685546875
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev * dev /
rank: 898
score: 99.57163422683189
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev / expected [ i ] ; }
rank: 898
score: 99.57148799189815
patch: z = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] ;
rank: 898
score: 99.5711328125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected / expected [ i ] ;
rank: 898
score: 99.54734057049419
patch: dev = observed [ i ] ; if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { return sum CaMeL Sq ; } }
rank: 899
score: 99.6151592548077
patch: dev = ( double ) observed [ i ] - expected [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev ; }
rank: 899
score: 99.57719364872685
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) / dev / expected [ i ] ;
rank: 899
score: 99.57405229048295
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev ; }
rank: 899
score: 99.57115827287946
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ; sum CaMeL Sq += dev * dev ;
rank: 899
score: 99.5707586880388
patch: if ( observed [ i ] instanceof double ) { dev = ( ( double ) observed [ i ] ) . expected [ i ] ; }
rank: 899
score: 99.54717023982558
patch: if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ) ;
rank: 900
score: 99.57384033203125
patch: dev = ( ( double ) observed [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev . length ;
rank: 900
score: 99.57086813038794
patch: observed [ i ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 900
score: 99.57027762276786
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / true ;
rank: 900
score: 99.54677734375
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 901
score: 99.63323567708333
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq $NUMBER$ += dev * expected [ i ] ;
rank: 901
score: 99.60993063038794
patch: dev = expected [ i ] - expected [ i ] ; { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 901
score: 99.58279734644397
patch: dev = ( ( Object ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 901
score: 99.57677734375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * $NUMBER$ / expected [ i ] ;
rank: 901
score: 99.57065836588542
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 901
score: 99.57051304408482
patch: if ( expected [ i ] < observed [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 901
score: 99.57024515086206
patch: if ( observed [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 901
score: 99.54668719951923
patch: for ( int i = 0 ; i < observed [ i ] . length ; i ++ ) { dev = observed [ i ] [ i ] ; sum CaMeL Sq += dev * dev ;
rank: 902
score: 99.6332275390625
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] / sum CaMeL Sq / expected [ i ] ;
rank: 902
score: 99.61392372532895
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( ! is CaMeL Non CaMeL Negative ( observed ) ) { return sum CaMeL Sq ; } }
rank: 902
score: 99.60984584263393
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; ; ;
rank: 902
score: 99.57289428710938
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += expected [ i ] ;
rank: 902
score: 99.57062174479167
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / ( expected [ i ] ;
rank: 902
score: 99.57043004918981
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ; }
rank: 902
score: 99.54602334665698
patch: dev = observed [ i ] - expected [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed ) || ! is CaMeL Non CaMeL Negative ( observed ) ) { return sum CaMeL Sq ; } }
rank: 903
score: 99.63282933728448
patch: dev = new ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 903
score: 99.61358477618244
patch: dev = ( ( double ) observed [ i ] - expected [ i + expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 903
score: 99.58275010850694
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } else {
rank: 903
score: 99.576171875
patch: dev += observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 903
score: 99.57267441860465
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } if ( ! is CaMeL Non CaMeL Negative ( expected ) || ! is CaMeL Non CaMeL Negative ( observed [
rank: 903
score: 99.57054822198276
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } return dev * dev / expected [ i ] ;
rank: 903
score: 99.57037984913794
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * dev * expected [ i ] ; }
rank: 903
score: 99.57015625
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ;
rank: 903
score: 99.5454042016006
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / dev ; }
rank: 904
score: 99.63270670572916
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += * dev / expected [ i ] ;
rank: 904
score: 99.61348783052884
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / dev / expected [ i ] ;
rank: 904
score: 99.58274274553571
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } else { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 904
score: 99.57609049479167
patch: long dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 904
score: 99.57174072265624
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 904
score: 99.5703125
patch: dev = expected [ i ] ; dev = dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 904
score: 99.5700214092548
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev / expected [ i ] ; }
rank: 904
score: 99.54525991586539
patch: for ( double i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 905
score: 99.6134620949074
patch: dev = ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 905
score: 99.58234998914931
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } return sum CaMeL Sq ] ;
rank: 905
score: 99.57605852399554
patch: if ( observed [ i ] instanceof double ) { dev = ( ( double ) observed [ i ] ) . expected [ i ] ;
rank: 905
score: 99.57172056686046
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . double CaMeL Value ( ) ;
rank: 905
score: 99.56994207974138
patch: if ( observed [ i ] < expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; ; }
rank: 905
score: 99.54498000372024
patch: if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { dev = ( ( double ) observed [ i ] ) ; }
rank: 906
score: 99.56960720486111
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev / dev ;
rank: 906
score: 99.56875238185975
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ; }
rank: 907
score: 99.63190328663794
patch: dev = ( ( double ) observed [ i ] - expected [ ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 907
score: 99.6093117042824
patch: dev = expected [ i ] + expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 907
score: 99.57558412905092
patch: double expected = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected / expected [ i ] ;
rank: 907
score: 99.56958879743304
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; } return dev * dev / dev / dev ;
rank: 907
score: 99.56904128502156
patch: sum CaMeL Sq += observed [ i ] * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 907
score: 99.56899919181035
patch: double expected = observed [ i ] ; dev = dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 907
score: 99.56873779296875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev / dev ;
rank: 908
score: 99.63119303385416
patch: sum CaMeL Sq += dev * ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 908
score: 99.60913957868304
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; ; ;
rank: 908
score: 99.58187753182871
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev = ( ( double ) dev ) ;
rank: 908
score: 99.57546470905173
patch: if ( observed [ i ] - expected . length > $NUMBER$ ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 908
score: 99.56953486689815
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) * dev / dev / expected [ i ] ;
rank: 908
score: 99.56889997209821
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } dev = dev * expected [ i ] ;
rank: 908
score: 99.56833718039773
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . sum CaMeL Sq ;
rank: 909
score: 99.63078090122768
patch: dev += ( expected [ i ] + expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 909
score: 99.56949869791667
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev ;
rank: 909
score: 99.56876953125
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ;
rank: 909
score: 99.56869612068965
patch: double observed [ i ] = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 909
score: 99.56661376953124
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; else sum CaMeL Sq += dev * dev ;
rank: 909
score: 99.54385446947674
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 910
score: 99.63046875
patch: dev = ( dev [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 910
score: 99.568564453125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev = dev [ i ] ;
rank: 910
score: 99.56851309317129
patch: sum = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 910
score: 99.5661865234375
patch: dev = ( ( double ) observed [ i ] ) * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev . length ;
rank: 910
score: 99.5437744140625
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq ++ ; }
rank: 911
score: 99.61191920230263
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] ) ;
rank: 911
score: 99.6084617332176
patch: dev = observed [ i ] - expected [ i ] ; expected [ i ] = dev * dev / expected [ i ] ;
rank: 911
score: 99.58125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; for ( int i = 0 ; i < observed . length ; i ++ ) {
rank: 911
score: 99.574462890625
patch: if ( observed [ i ] instanceof double ) { dev += ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 911
score: 99.56903286637932
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev / dev / dev ;
rank: 911
score: 99.56847723599138
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = dev [ i ] ;
rank: 911
score: 99.54353651889535
patch: if ( is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } else { return sum CaMeL Sq ; }
rank: 912
score: 99.62937769396552
patch: expected [ i ] = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 912
score: 99.61146375868056
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] ;
rank: 912
score: 99.60781069155092
patch: double observed [ i ] = dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 912
score: 99.574169921875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; dev += expected [ i ] ;
rank: 912
score: 99.56894356863839
patch: if ( observed [ i ] - expected [ i ] ) { sum CaMeL Sq += dev / dev / expected [ i ] ; }
rank: 912
score: 99.56844979745371
patch: double expected = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ;
rank: 912
score: 99.56470947265625
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . sum ;
rank: 912
score: 99.54345703125
patch: dev = observed [ i ] ; if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq ++ ; }
rank: 913
score: 99.6107113486842
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] - expected [ i ] ;
rank: 913
score: 99.58091517857143
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected + dev / expected [ i ] ;
rank: 913
score: 99.56873430524554
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev - dev / dev ;
rank: 913
score: 99.56819370814732
patch: dev = ( double ) observed [ i ] ; { sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 913
score: 99.56221417682927
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } if ( sum CaMeL Sq
rank: 913
score: 99.54333212209302
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { dev = ( ( double ) observed [ i ] ) ; }
rank: 914
score: 99.60762080439815
patch: sum CaMeL Sq += observed [ i ] ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 914
score: 99.58049665178571
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] + expected [ i ] ;
rank: 914
score: 99.57389613560268
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; expected [ i ] = expected [ i ] ;
rank: 914
score: 99.5687255859375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } return dev * dev / dev ;
rank: 914
score: 99.56787109375
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] [ 0 ] ;
rank: 914
score: 99.56213662790698
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq + dev ;
rank: 914
score: 99.54284057617187
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; else sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 915
score: 99.62883890086206
patch: dev = ( double ) observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 915
score: 99.6075908954327
patch: dev = expected [ i ] - observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 915
score: 99.58027705439815
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) * dev / expected [ i ] ) ;
rank: 915
score: 99.56871619591347
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) / ( double ) expected [ i ] ;
rank: 915
score: 99.56776258680556
patch: dev = observed [ i ] [ expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 915
score: 99.56698713631465
patch: if ( expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } ;
rank: 915
score: 99.54274164244185
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq = dev * dev ;
rank: 916
score: 99.61044793379934
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / dev / expected [ i ]
rank: 916
score: 99.60743995949075
patch: final dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 916
score: 99.57982003348214
patch: { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 916
score: 99.57380280671296
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + sum CaMeL Sq / expected [ i ] ;
rank: 916
score: 99.568466796875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; break ;
rank: 916
score: 99.56772286551339
patch: dev = dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ;
rank: 916
score: 99.56687709263393
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / ) ;
rank: 916
score: 99.54267810639881
patch: if ( is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } else { return sum CaMeL Sq ;
rank: 917
score: 99.62825520833333
patch: dev = ( double ) observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 917
score: 99.6101543719952
patch: dev = ( ( ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ) ;
rank: 917
score: 99.57351888020834
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] - expected [ i ] ; }
rank: 917
score: 99.568427734375
patch: dev = ( ( double ) observed [ i ] - 1 [ i ] ) / dev / expected [ i ] ;
rank: 917
score: 99.56644112723214
patch: if ( expected [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 917
score: 99.541669921875
patch: dev = observed [ i ] ; dev = ( ( double ) observed [ i ] ) - expected [ i ] ;
rank: 918
score: 99.62808964170259
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ ;
rank: 918
score: 99.57345145089286
patch: dev += ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev [ i ] ;
rank: 918
score: 99.56836841724537
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev * dev / expected [ i ] ;
rank: 918
score: 99.56732177734375
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] / dev ;
rank: 918
score: 99.56033250762195
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . max ( ) ;
rank: 918
score: 99.5412365141369
patch: dev = observed [ i ] - expected [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 919
score: 99.6279541015625
patch: long dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 919
score: 99.57323376885776
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / ;
rank: 919
score: 99.56792534722223
patch: dev += ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev ;
rank: 919
score: 99.55921829578489
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * is CaMeL Non CaMeL Negative ( observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 919
score: 99.54099731445312
patch: dev = observed [ i ] ; for ( int i = 0 ; i < observed . length ; i ++ ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 920
score: 99.60902163856908
patch: dev = ( ( double ) ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 920
score: 99.60675048828125
patch: sum CaMeL Sq = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 920
score: 99.57908063616071
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / i / expected [ i ] ;
rank: 920
score: 99.57314627511161
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ; sum CaMeL Sq ++ ;
rank: 920
score: 99.5677490234375
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev ;
rank: 920
score: 99.56652379918981
patch: dev = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ; }
rank: 920
score: 99.56624629579741
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / $NUMBER$ ; }
rank: 920
score: 99.55841619318181
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) return sum CaMeL Sq ;
rank: 921
score: 99.62757975260416
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected . [ i ] ;
rank: 921
score: 99.60895647321429
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / dev ;
rank: 921
score: 99.60672433035714
patch: dev = expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 921
score: 99.57303172144397
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ; }
rank: 921
score: 99.56620732060185
patch: int expected = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 921
score: 99.56593605324075
patch: if ( dev [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 921
score: 99.55813953488372
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . dev ;
rank: 921
score: 99.54064331054687
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + expected ) ;
rank: 922
score: 99.56756802262932
patch: if ( observed [ i ] - expected [ i ] >= expected [ i ] ) { sum CaMeL Sq += expected [ i ] ; }
rank: 922
score: 99.56563765914352
patch: if ( expected [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 922
score: 99.55704941860465
patch: dev = ( ( double ) observed [ i ] ) ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 922
score: 99.5406005859375
patch: dev = ( double ) observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev ;
rank: 923
score: 99.60649052372685
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ++ ] ;
rank: 923
score: 99.572763671875
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) / $NUMBER$ / expected [ i ] ;
rank: 923
score: 99.56510136045259
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev ; }
rank: 923
score: 99.55680735518293
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += sum CaMeL Sq ; }
rank: 924
score: 99.60757882254464
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / dev / dev * expected [ i ] ;
rank: 924
score: 99.60646339699075
patch: dev = expected [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 924
score: 99.57158371497844
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] ;
rank: 924
score: 99.56697591145833
patch: dev = observed [ i ] - expected [ i ] ; if ( expected [ i ] == expected [ i ] ) { sum CaMeL Sq += expected [ i ] ; }
rank: 924
score: 99.56523786272321
patch: if ( ( observed [ i ] < expected [ i ] ) ) sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 924
score: 99.56507610452586
patch: if ( expected [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } }
rank: 924
score: 99.54038783482143
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq -- ;
rank: 925
score: 99.62669214709052
patch: dev = observed [ i ] + expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ;
rank: 925
score: 99.6064453125
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += observed [ i ] - expected [ i ] ;
rank: 925
score: 99.57666015625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ;
rank: 925
score: 99.57148960658482
patch: if ( observed [ i ] != null ) { sum CaMeL Sq += ( expected [ i ] - expected [ i ] ) ; }
rank: 925
score: 99.56680192618535
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * dev / dev ;
rank: 925
score: 99.56488715277777
patch: if observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ;
rank: 925
score: 99.55357467296511
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq * dev ;
rank: 925
score: 99.540380859375
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return 0 . 0 ;
rank: 926
score: 99.62640787760417
patch: sum CaMeL Sq += dev * dev [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 926
score: 99.60722155448718
patch: if ( ! is CaMeL Positive ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] ;
rank: 926
score: 99.60627350983796
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ; ;
rank: 926
score: 99.57600911458333
patch: ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ; }
rank: 926
score: 99.57136483028017
patch: if ( observed [ i ] instanceof Number ) { dev = ( ( Number ) observed [ i ] ) . double CaMeL Value ( ) ;
rank: 926
score: 99.56675889756944
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev / dev [ i ] ;
rank: 926
score: 99.56485098379629
patch: dev = ( ( int ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 926
score: 99.56467200969827
patch: double observed [ i ] = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 926
score: 99.55259011008523
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += sum CaMeL Sq ;
rank: 926
score: 99.54007568359376
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev ;
rank: 927
score: 99.62603438527961
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 927
score: 99.606689453125
patch: dev = ( int ) observed [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 927
score: 99.57596261160714
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * ( dev / dev / expected [ i ] ) ;
rank: 927
score: 99.5665234375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev * expected [ i ] ;
rank: 927
score: 99.56454354745371
patch: dev = ( double ) observed [ i ] ; { sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 927
score: 99.56411856192129
patch: double expected = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 927
score: 99.539990234375
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { return 0 ;
rank: 928
score: 99.60618189761513
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) - observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 928
score: 99.60607038225446
patch: dev = expected [ i ] ; dev = expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 928
score: 99.57569754464286
patch: dev = ( ( double ) observed [ i - 1 ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 928
score: 99.56649885506465
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += expected [ i ] ;
rank: 928
score: 99.56452047413794
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if observed [ i ] = expected [ i ] ;
rank: 928
score: 99.56303349247685
patch: double expected = observed [ i ] * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 928
score: 99.55049542682927
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 928
score: 99.53764415922619
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + expected . length ) ;
rank: 929
score: 99.57523018973214
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected + expected [ i ] ;
rank: 929
score: 99.57071940104167
patch: double dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] ;
rank: 929
score: 99.5501024199695
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [
rank: 930
score: 99.62468518708882
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] / expected [ i ] ;
rank: 930
score: 99.60537614493535
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; i ++ ;
rank: 930
score: 99.57502577039931
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] [ 0 ] ;
rank: 930
score: 99.56523075810185
patch: dev = ( ( double ) observed [ i ] - 1 [ i ] ) ; sum CaMeL Sq += expected [ i ] ;
rank: 930
score: 99.56404935396634
patch: dev [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ;
rank: 930
score: 99.54994164443598
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || is CaMeL Non CaMeL Negative ( observed [
rank: 930
score: 99.53567504882812
patch: dev = observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 931
score: 99.60570384837963
patch: dev = ( ( ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ) ) ;
rank: 931
score: 99.56521853885135
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return dev / dev ;
rank: 931
score: 99.56386537905092
patch: if ( expected [ i ] != expected [ i ] ) sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 931
score: 99.5499240451389
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . sum CaMeL Sq ;
rank: 931
score: 99.53559910973837
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / dev ; }
rank: 932
score: 99.605224609375
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ) - expected [ i ] ;
rank: 932
score: 99.57432047526042
patch: dev = ( ( double ) observed [ i ] - expected [ i ] * expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 932
score: 99.56492784288194
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] / dev ;
rank: 932
score: 99.5497713955966
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } } return sum CaMeL Sq . sum ;
rank: 932
score: 99.5355849847561
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { }
rank: 933
score: 99.60496238425925
patch: double observed [ i ] = expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 933
score: 99.56480577256944
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) + dev / dev / expected [ i ] ;
rank: 933
score: 99.56342022235577
patch: dev = ( double ) observed [ i ] ; { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 933
score: 99.56255231584821
patch: dev = observed [ i ] ; dev = dev * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 933
score: 99.54944131540698
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { return sum CaMeL Sq ; }
rank: 933
score: 99.53513502038044
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 934
score: 99.62361653645833
patch: dev = new ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 934
score: 99.60494192023026
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] ; }
rank: 934
score: 99.60454644097223
patch: ( = expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 934
score: 99.56472252155173
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev [ i ] / dev ;
rank: 934
score: 99.56312391493056
patch: double dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev ;
rank: 934
score: 99.56223842075893
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * expected / expected [ i ] ;
rank: 934
score: 99.54924665178571
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += sum CaMeL Sq / dev ;
rank: 934
score: 99.53502836681548
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) {
rank: 935
score: 99.62281115301724
patch: dev = observed [ i ] - expected [ i ] + expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 935
score: 99.60453739872685
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq = dev * dev / expected [ i ] ; ;
rank: 935
score: 99.56896551724138
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] * dev ;
rank: 935
score: 99.56278773716518
patch: try { dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 935
score: 99.54759579613095
patch: dev = ( ( double ) observed [ i ] ) ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 935
score: 99.53439331054688
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + observed [ i ] - expected [ i ] ) ; } for ( int i = 0 ; i < observed . length ; i ++ ) {
rank: 936
score: 99.6044921875
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 936
score: 99.60365696957237
patch: if ( ! is CaMeL Positive ( expected [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ; }
rank: 936
score: 99.56175013950893
patch: if ( observed [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 936
score: 99.54604957217262
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . dev ;
rank: 936
score: 99.53410993303571
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ; return sum CaMeL Sq ;
rank: 937
score: 99.60411241319444
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev = dev * expected [ i ] ;
rank: 937
score: 99.57250298394098
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ; } return sum CaMeL Sq ; }
rank: 937
score: 99.56437735721983
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += expected [ i ] / dev ;
rank: 937
score: 99.54520089285714
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += sum CaMeL Sq * dev ;
rank: 937
score: 99.53388061523438
patch: dev = observed [ i ] ; if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { dev = dev ;
rank: 938
score: 99.6220703125
patch: dev = ( dev [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 938
score: 99.60410492995689
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; i ++ ;
rank: 938
score: 99.60356702302632
patch: dev = ( ( double ) observed [ i ] - expected [ i 1 ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] ;
rank: 938
score: 99.57239815848214
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected , dev / expected [ i ] ;
rank: 938
score: 99.568662109375
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) * $NUMBER$ / expected [ i ] ;
rank: 938
score: 99.56434983473558
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; } return dev * dev / dev ;
rank: 938
score: 99.56140625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if = expected [ i ] ;
rank: 938
score: 99.54497865188954
patch: dev = observed [ i ] - expected [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 938
score: 99.53355712890625
patch: dev = observed [ i ] - expected [ i ] ; double sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 939
score: 99.60409432870371
patch: dev = observed [ i ] ) / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 939
score: 99.572265625
patch: dev [ i ] = ( ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ) ;
rank: 939
score: 99.56421802662037
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev ; ;
rank: 939
score: 99.56137520926339
patch: sum CaMeL Sq += ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 939
score: 99.56070059317129
patch: double expected = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 939
score: 99.54497612847223
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { return sum CaMeL Sq ; }
rank: 939
score: 99.53333129882813
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 940
score: 99.60352434430804
patch: dev = expected [ i ] - expected [ i ] ; ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 940
score: 99.564052734375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / ( expected [ i ] ) ;
rank: 940
score: 99.56135163483796
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; return ( dev * dev / dev ) ;
rank: 940
score: 99.56065784801136
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 940
score: 99.5448986235119
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev . sum CaMeL Sq ;
rank: 940
score: 99.5329345703125
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev ; } }
rank: 941
score: 99.56788987379808
patch: dev += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 941
score: 99.5613425925926
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev / expected [ i ] ;
rank: 941
score: 99.56020682198661
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } dev = dev / dev ;
rank: 941
score: 99.54408482142857
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += sum CaMeL Sq . sum ;
rank: 941
score: 99.53281860351562
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / dev ; }
rank: 942
score: 99.62159488075658
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 942
score: 99.60321916852679
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; ; }
rank: 942
score: 99.60158819901316
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] * ;
rank: 942
score: 99.57156808035714
patch: dev [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) * dev / expected [ i ] ;
rank: 942
score: 99.56395128038194
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev / dev / expected [ i ] ; }
rank: 942
score: 99.56120695891204
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if = dev * expected [ i ] ;
rank: 942
score: 99.56010219029018
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * dev * expected [ i ] ;
rank: 942
score: 99.5417813387784
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += observed [ i ] ;
rank: 942
score: 99.5319764672256
patch: dev = observed [ i ] ; if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq ++ ;
rank: 943
score: 99.6214011863426
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev ) ;
rank: 943
score: 99.6015625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; else { return sum CaMeL Sq ; }
rank: 943
score: 99.57143825954861
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ^ expected [ i ] ;
rank: 943
score: 99.56778067129629
patch: int i = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 943
score: 99.56332284432871
patch: dev += dev [ i ] / expected [ i ] ; sum CaMeL Sq += dev [ i ] / expected [ i ] ;
rank: 943
score: 99.5599952980324
patch: double expected = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 943
score: 99.54123757102273
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += expected [ i ] ;
rank: 943
score: 99.53188119283537
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) )
rank: 944
score: 99.56748046875
patch: dev += ( observed [ i ] - expected [ i ] - expected [ i ] ) / expected [ i ] ;
rank: 944
score: 99.563310546875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev += expected [ i ] ;
rank: 944
score: 99.55993200231481
patch: dev = expected [ i ] * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 944
score: 99.53999364098837
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev / dev ;
rank: 944
score: 99.53128662109376
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ;
rank: 945
score: 99.60070487780449
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . length ;
rank: 945
score: 99.57036675347223
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - dev * dev / expected [ i ] ;
rank: 945
score: 99.56741898148148
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / ;
rank: 945
score: 99.56302315848214
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev ; } return dev ;
rank: 945
score: 99.55989583333333
patch: if ( expected [ i ] >= expected [ i ] ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 945
score: 99.53973943536931
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev ;
rank: 945
score: 99.53105236235119
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev ;
rank: 946
score: 99.62003300107759
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] [ i ] ;
rank: 946
score: 99.60242571149554
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i - 1 ] ;
rank: 946
score: 99.60044821714743
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev
rank: 946
score: 99.57022879464286
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / i / dev / expected [ i ] ;
rank: 946
score: 99.56288364955357
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ; sum CaMeL Sq += dev / dev ;
rank: 946
score: 99.55928257533482
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; ; }
rank: 946
score: 99.53961736505681
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ; return sum CaMeL Sq . sum CaMeL Sq ;
rank: 946
score: 99.5309463128811
patch: for ( int i = 0 ; i < expected . length ; i ++ ) { dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 947
score: 99.59973457532051
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i + expected . length ] ;
rank: 947
score: 99.56279839409723
patch: dev += dev [ i ] - expected [ i ] ; sum CaMeL Sq += dev [ i ] / expected [ i ] ;
rank: 947
score: 99.55970594618056
patch: dev = observed [ i ] / observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 947
score: 99.55923025948661
patch: dev = observed [ i ] [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] [ i ] ; }
rank: 947
score: 99.53910900297619
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . sum ( expected ) ;
rank: 947
score: 99.53075561523437
patch: for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ;
rank: 948
score: 99.61952788254311
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq : dev * expected [ i ] ;
rank: 948
score: 99.60143590856481
patch: dev = observed [ i ] - expected [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 948
score: 99.562724609375
patch: dev += ( ( double ) ( observed [ i ] - expected [ i ] ) ) / expected [ i ] ;
rank: 948
score: 99.55955078125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; return dev * dev * dev /
rank: 948
score: 99.55873842592592
patch: try { dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 948
score: 99.5386935763889
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += observed [ i ] ; }
rank: 948
score: 99.53020368303571
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 949
score: 99.6193426724138
patch: dev = ( ( double ) dev [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 949
score: 99.566572265625
patch: dev += ( ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ) ;
rank: 949
score: 99.56193359375
patch: dev += ( ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ) ;
rank: 949
score: 99.55929000289352
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if = dev / expected [ i ] ;
rank: 949
score: 99.53860909598214
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ; return sum CaMeL Sq . sum ;
rank: 949
score: 99.53007097942073
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { dev += dev ;
rank: 950
score: 99.60130964006696
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; ; }
rank: 950
score: 99.59940378289474
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] * expected [ i ] ;
rank: 950
score: 99.56580041956019
patch: double dev = observed [ i ] & expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 950
score: 99.56192452566964
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += expected [ i ] ;
rank: 950
score: 99.55900390625
patch: dev = ( double ) observed [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 950
score: 99.55778899016204
patch: try { dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 950
score: 99.52995188643293
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 951
score: 99.59925881410257
patch: dev = ( double ) observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / dev ;
rank: 951
score: 99.56948513454861
patch: dev [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 951
score: 99.56542064525463
patch: dev += observed [ i ] - expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ 0 ] ;
rank: 951
score: 99.56111363002232
patch: dev = ( ( float ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev ;
rank: 951
score: 99.55775282118056
patch: result = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 951
score: 99.53835846656976
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( sum CaMeL Sq < observed . length ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 951
score: 99.52992466517857
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { return 0 . 0 ;
rank: 952
score: 99.61883755387932
patch: double expected = ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 952
score: 99.60062081473214
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; dev = expected [ i ] ;
rank: 952
score: 99.56881277901786
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] [ i ] ; }
rank: 952
score: 99.5609130859375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( dev > dev ) { sum CaMeL Sq += dev * dev / dev ; }
rank: 952
score: 99.55851236979167
patch: dev = dev [ i ] * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 952
score: 99.55696614583333
patch: d = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 952
score: 99.537890625
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += expected [ i ] ; }
rank: 952
score: 99.52977294921875
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } else {
rank: 953
score: 99.61878797743056
patch: dev = ( double ) observed [ i ] [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 953
score: 99.60032371238425
patch: double observed [ i ] = dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 953
score: 99.56872907366072
patch: if ( observed [ i ] - expected [ i ] != expected [ i ] ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 953
score: 99.56045968191964
patch: dev = ( observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 953
score: 99.55839482060185
patch: f = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 953
score: 99.556640625
patch: double expected = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * expected / expected [ i ] ;
rank: 953
score: 99.53727213541667
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += sum CaMeL Sq . dev ;
rank: 954
score: 99.61815534319196
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; observed [ i ] = dev ;
rank: 954
score: 99.56858317057292
patch: dev ++ ; dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 954
score: 99.564697265625
patch: dev = ( double ) observed [ i ] * expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 954
score: 99.55647786458333
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev / dev * expected [ i ] ; }
rank: 954
score: 99.53693181818181
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev ; } break ;
rank: 954
score: 99.52908325195312
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( dev == 0 . 0 ) { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 955
score: 99.61801629317434
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] / dev / expected [ i ] ;
rank: 955
score: 99.59958224826389
patch: dev = expected [ i ] - observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 955
score: 99.56808035714286
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i + $NUMBER$ ] ;
rank: 955
score: 99.56344168526786
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ; sum CaMeL Sq ++ ;
rank: 955
score: 99.55984157986111
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev ; ;
rank: 955
score: 99.55754484953704
patch: if ( observed [ i ] == expected [ i ] ) { sum CaMeL Sq += dev * expected / expected [ i ] ;
rank: 955
score: 99.53644670758929
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += sum CaMeL Sq + dev ;
rank: 955
score: 99.52904052734375
patch: dev = observed [ i ] ; for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ; sum CaMeL Sq += dev * dev ;
rank: 956
score: 99.61762526939656
patch: dev = ( dev ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 956
score: 99.59948278356481
patch: { dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 956
score: 99.59746993215461
patch: int dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev / expected [ i ] ;
rank: 956
score: 99.55983189174107
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev ;
rank: 956
score: 99.55661349826389
patch: if ( observed [ i ] != expected [ i ] ) sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 956
score: 99.55626085069444
patch: dev += ( ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 956
score: 99.5364002046131
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += dev . length . length ;
rank: 957
score: 99.61761685075432
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq : dev += expected [ i ] ;
rank: 957
score: 99.59915597098214
patch: dev = observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 957
score: 99.597412109375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 957
score: 99.56742466517858
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i + 0 ] ;
rank: 957
score: 99.56171332465277
patch: dev = observed [ i ] - expected [ i ] ; } sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 957
score: 99.5596875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev * expected [ i ] ;
rank: 957
score: 99.55605844350961
patch: dev [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ;
rank: 957
score: 99.52819540334302
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } return
rank: 958
score: 99.598876953125
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } }
rank: 958
score: 99.56741071428571
patch: dev = ( ( String ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 958
score: 99.55672200520833
patch: if ( observed [ i ] - expected [ i ] > expected [ i ] ) { dev += expected [ i ] ; }
rank: 958
score: 99.55579065393519
patch: dev = ( ( double ) observed [ i ] ) ; double sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 958
score: 99.555673828125
patch: dev = ( ( double ) ( observed [ i ] - expected [ i ] ) / expected [ i ] ) ;
rank: 958
score: 99.53498186383929
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 958
score: 99.52784338662791
patch: if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { dev = ( ( double ) observed [ i ] ) . expected ;
rank: 959
score: 99.61727168642241
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq = dev * dev * expected [ i ] ;
rank: 959
score: 99.5349353608631
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev ; }
rank: 959
score: 99.52780821265245
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( is CaMeL Non CaMeL Negative ( observed ) || ! is CaMeL Non CaMeL Negative ( observed ) ) { return
rank: 960
score: 99.61722117456897
patch: dev = is CaMeL Positive ( expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 960
score: 99.56576877170139
patch: synchronized ( observed ) { dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 960
score: 99.55440579927884
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } dev = expected [ i ] ;
rank: 960
score: 99.55325882523148
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev / dev ;
rank: 960
score: 99.53474564985795
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += expected [ i ] ;
rank: 960
score: 99.52718098958333
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 961
score: 99.59657639723558
patch: dev = expected [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 961
score: 99.59530874399039
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev * expected [ i ] ; } return sum CaMeL Sq ;
rank: 961
score: 99.56105324074075
patch: if ( observed [ i ] instanceof double ) dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 961
score: 99.55507631655092
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; dev = expected [ i ] ;
rank: 961
score: 99.554033203125
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ) ;
rank: 961
score: 99.55287905092592
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) , sum CaMeL Sq += expected [ i ] ;
rank: 961
score: 99.53387586805556
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += expected [ i ] ; }
rank: 961
score: 99.52568240282012
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; else sum CaMeL Sq += dev ;
rank: 962
score: 99.56052564538044
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ;
rank: 962
score: 99.55455186631944
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / ( expected [ i ] ;
rank: 962
score: 99.53379603794643
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 962
score: 99.52552688953489
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $STRING$ ) ;
rank: 963
score: 99.55403645833333
patch: j = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 963
score: 99.53345889136905
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } if ( ! is CaMeL Non CaMeL Negative ( observed ) ) { return sum CaMeL Sq ; } }
rank: 963
score: 99.5255156726372
patch: if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / dev ;
rank: 964
score: 99.61624948601974
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; observed [ i ] = dev ;
rank: 964
score: 99.59418045847039
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; } else { sum CaMeL Sq += dev ;
rank: 964
score: 99.56388346354167
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] % expected [ i ] ;
rank: 964
score: 99.55802734375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev / dev [ i ] ;
rank: 964
score: 99.5537742332176
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) ; dev = dev [ i ] ;
rank: 964
score: 99.55308702256944
patch: try { dev = ( ( double ) ( observed [ i ] - expected [ i ] ) - expected [ i ] ) ;
rank: 964
score: 99.53270321800595
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) && ! is CaMeL Non CaMeL Negative ( observed [
rank: 964
score: 99.52464657738095
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ; sum CaMeL Sq ++ ;
rank: 965
score: 99.59383138020833
patch: dev = observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 965
score: 99.56306966145833
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * ( dev / expected [ i ] ) ;
rank: 965
score: 99.55171260127315
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev * dev ;
rank: 965
score: 99.52385432545732
patch: dev = observed [ i ] . [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 966
score: 99.61550564236111
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] + expected [ i ] ;
rank: 966
score: 99.5959003155048
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 966
score: 99.55251736111111
patch: if ( observed [ i ] == expected [ i ] ) { dev = ( ( double ) observed [ i ] ) ; }
rank: 966
score: 99.55231843171296
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev * observed [ i ] ; }
rank: 966
score: 99.55163043478261
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ;
rank: 966
score: 99.53058416193181
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev
rank: 966
score: 99.52366973132622
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { dev
rank: 967
score: 99.59566695601852
patch: dev = expected [ i ] - expected [ i ] ; sum [ i ] = dev * dev / expected [ i ] ;
rank: 967
score: 99.5926983173077
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 967
score: 99.556982421875
patch: dev += ( ( double ) observed [ i ] - ( expected [ i ] - expected [ i ] ) ) ;
rank: 967
score: 99.55238172743056
patch: if ( expected [ i ] != expected [ i ] ) { sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 967
score: 99.55210141782408
patch: dev = ( ( double ) observed [ i ] ) ; observed [ i ] = dev * dev / expected [ i ] ;
rank: 967
score: 99.55118502103366
patch: expected [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ;
rank: 967
score: 99.5304842862216
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 967
score: 99.52292650799419
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq = dev ;
rank: 968
score: 99.61491176060268
patch: double dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 968
score: 99.59082657251602
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 968
score: 99.55207429108796
patch: dev = expected [ i ] ; dev = expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 968
score: 99.55135404146634
patch: dev = observed [ i ] * expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 968
score: 99.551083984375
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ;
rank: 968
score: 99.53012917258523
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += observed [ i ] ;
rank: 968
score: 99.52213343178353
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { return
rank: 969
score: 99.61432206003289
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] * dev * expected [ i ] ;
rank: 969
score: 99.59077649238782
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / dev [ i ] ; } return sum CaMeL Sq ;
rank: 969
score: 99.55547417534723
patch: dev = ( ( double ) observed [ i ] ) - expected [ i ] ; sum CaMeL Sq += expected [ i ] ;
rank: 969
score: 99.55201134314903
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq = dev * dev / expected [ i ] ;
rank: 969
score: 99.551044921875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; return ( dev * dev ) ;
rank: 969
score: 99.5509765625
patch: dev = ( ( double [ ] ) observed [ i ] - expected [ i ] ) + expected [ i ] ;
rank: 969
score: 99.52939453125
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += observed [ i ] ; }
rank: 969
score: 99.52182152157738
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected / expected ;
rank: 970
score: 99.59506460336539
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 970
score: 99.5904541015625
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ) ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 970
score: 99.55447952835648
patch: dev += observed [ i ] - expected [ i ] ; } sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 970
score: 99.52880859375
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev ; } break ;
rank: 970
score: 99.52165876116071
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ) ;
rank: 971
score: 99.61293764467592
patch: dev = ( double ) observed [ i ] / expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 971
score: 99.59416594328704
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ] ;
rank: 971
score: 99.59034142127403
patch: dev = ( double ) observed [ i ] ; dev = ( double ) observed [ i ] - expected [ i ] ;
rank: 971
score: 99.55314453125
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) * dev / dev [ i ] ;
rank: 971
score: 99.55042860243056
patch: if ( observed [ i ] ) { dev += ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 971
score: 99.54979564525463
patch: dev = expected [ i ] + expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 971
score: 99.52852647569445
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev
rank: 971
score: 99.52134486607143
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + expected [ i ] ) ; } for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] ;
rank: 972
score: 99.59019068667763
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] + expected [ i ] ;
rank: 972
score: 99.55274376502403
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) * dev / expected [ i ] ; ;
rank: 972
score: 99.54966383713942
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } return dev / dev / dev ;
rank: 972
score: 99.52852470930233
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } if ( ! is CaMeL Non CaMeL Negative ( observed ) || ! is CaMeL Non CaMeL Negative ( observed [
rank: 972
score: 99.52104151526163
patch: if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { dev = ( ( double ) observed [ i ] ) . dev ;
rank: 973
score: 99.61276584201389
patch: dev = ( double ) observed [ i ] [ 0 ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 973
score: 99.59401222511575
patch: dev = expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 973
score: 99.5894055488782
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } else { return sum CaMeL Sq ;
rank: 973
score: 99.550859375
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ) / expected [ i ] ;
rank: 973
score: 99.54908130787037
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] ; }
rank: 973
score: 99.54759803185097
patch: dev += ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 973
score: 99.52798394097222
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } if ( ! is CaMeL Non CaMeL Negative ( observed ) || ! is CaMeL Non CaMeL Negative ( observed ) ) {
rank: 973
score: 99.52066858803353
patch: if ( is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { dev ;
rank: 974
score: 99.59389467592592
patch: sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 974
score: 99.55021484375
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] ) ) * expected [ i ] ;
rank: 974
score: 99.5486309344952
patch: dev = observed [ i ] - expected [ i ] ; dev += dev * dev / dev / expected [ i ] ;
rank: 974
score: 99.544716796875
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ; }
rank: 974
score: 99.52748801491477
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev [ i ] ;
rank: 974
score: 99.52044968377976
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { dev = dev ; }
rank: 975
score: 99.60888671875
patch: dev = ( double ) observed [ i ] - observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 975
score: 99.59336118344908
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += observed [ i ] - expected [ i ] ;
rank: 975
score: 99.58692032251602
patch: dev = ( ( double ) expected [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 975
score: 99.54845703125
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) / ( expected [ i ] ) ;
rank: 975
score: 99.545302734375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev = observed [ i ] ;
rank: 975
score: 99.52734375
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev ;
rank: 976
score: 99.59316225405092
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += observed [ i ] - expected [ i ] ;
rank: 976
score: 99.5859375
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / dev ;
rank: 976
score: 99.54842435396634
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; } return dev / dev / dev ;
rank: 976
score: 99.544931640625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; throw new Error ( $STRING$ ) ;
rank: 976
score: 99.54342886117789
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 976
score: 99.52477743459302
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 976
score: 99.51900128620427
patch: dev = observed [ i ] ; if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { dev = dev ; }
rank: 977
score: 99.59153395432692
patch: dev = expected [ i ] - expected [ i ] ; sum CaMeL Sq += dev / dev / expected [ i ] ;
rank: 977
score: 99.58554311899039
patch: dev = observed [ i ] - expected [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / dev ;
rank: 977
score: 99.544443359375
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ;
rank: 977
score: 99.54310021033653
patch: dev = dev [ i ] / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 977
score: 99.54221598307292
patch: dev = ( ( double ) observed [ i ] ) ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 977
score: 99.52462981468024
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) . double CaMeL Value ( ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 977
score: 99.518798828125
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . 0 ;
rank: 978
score: 99.58514873798077
patch: dev = ( ( int ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 978
score: 99.54710105613425
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; } sum CaMeL Sq += dev / dev ;
rank: 978
score: 99.544287109375
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) * expected [ i ] ;
rank: 978
score: 99.524169921875
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { return sum CaMeL Sq ;
rank: 978
score: 99.51864769345238
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) [ i ] ;
rank: 978
score: 99.51778252180233
patch: if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; ;
rank: 979
score: 99.58486703725961
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev * dev / expected [ i ] ; sum CaMeL Sq += dev ;
rank: 979
score: 99.546640625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ^ dev / expected [ i ] ;
rank: 979
score: 99.5413067157452
patch: dev = observed [ i ] ; } dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 979
score: 99.53775728665866
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] * expected [ i ] ;
rank: 979
score: 99.52197265625
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq - dev ;
rank: 979
score: 99.51750999273256
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { return ( sum CaMeL Sq ;
rank: 980
score: 99.60640171595982
patch: dev = ( ( double ) observed [ i ] - observed [ i ] ) ; sum CaMeL Sq += dev * dev / expected ;
rank: 980
score: 99.58462915665064
patch: if ( ( ( double ) observed [ i ] - expected [ i ] ) != observed . length ) { sum CaMeL Sq += dev * dev / dev / expected [ i ] ; }
rank: 980
score: 99.5829608623798
patch: dev = observed [ i ] - observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 980
score: 99.54612379807692
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; dev += dev * dev / dev ;
rank: 980
score: 99.543896484375
patch: sum CaMeL Sq = ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ;
rank: 980
score: 99.5404522235577
patch: if ( observed [ i ] == expected [ i ] ) sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 980
score: 99.52167302911931
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev [ i ] ;
rank: 980
score: 99.51734561011905
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } for ( int i = 0 ; i < observed . length ; i ++ ) { dev = observed [ i ] - expected [ i ] ;
rank: 980
score: 99.51064046223958
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ; } return sum CaMeL Sq ;
rank: 981
score: 99.60598415798611
patch: ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 981
score: 99.58436623597757
patch: dev = ( double ) observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 981
score: 99.545849609375
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( expected [ i ] ;
rank: 981
score: 99.54026442307692
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; return ( ( double ) dev ) ;
rank: 981
score: 99.53524076021634
patch: ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] - expected [ i ] ) ;
rank: 981
score: 99.52158657340117
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev ; }
rank: 981
score: 99.51718068677326
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ) ; }
rank: 981
score: 99.50706946331522
patch: dev = ( ( double ) observed [ i ] - expected [ i ] + expected [ i ] ) ;
rank: 982
score: 99.60538423978366
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] / expected [ i ] ;
rank: 982
score: 99.58418469551282
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev / dev / dev / expected [ i ] ; } return sum CaMeL Sq ;
rank: 982
score: 99.57875413161058
patch: dev = ( ( double ) expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 982
score: 99.542392578125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) * dev ;
rank: 982
score: 99.52143012152777
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev [ i ] ; }
rank: 982
score: 99.51609057049419
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; sum CaMeL Sq += dev * dev ;
rank: 982
score: 99.49897693452381
patch: observed [ i ] = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 983
score: 99.57694185697116
patch: sum CaMeL Sq += observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 983
score: 99.543515625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) % dev / expected [ i ] ;
rank: 983
score: 99.53814453125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; throw new Exception ( $STRING$ ) ;
rank: 983
score: 99.53310546875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ; break ;
rank: 983
score: 99.52091660610465
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } if ( ! is CaMeL Non CaMeL Negative ( observed ) || ! is CaMeL Non CaMeL Negative ( expected [
rank: 983
score: 99.51554551235465
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } ;
rank: 984
score: 99.543232421875
patch: dev = ( ( double ) observed [ i ] - 1 [ i ] ) * dev / expected [ i ] ;
rank: 984
score: 99.536455078125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if = observed [ i ] ;
rank: 984
score: 99.5201785065407
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq = dev * dev ;
rank: 984
score: 99.51519484747024
patch: dev = observed [ i ] ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { dev += dev ; }
rank: 985
score: 99.59946469907408
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] [ i ] ;
rank: 985
score: 99.58275428185097
patch: dev = ( ( ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ) ;
rank: 985
score: 99.54251953125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) - expected [ i ] ; break ;
rank: 985
score: 99.535869140625
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) / expected [ i ] ;
rank: 985
score: 99.53499702785327
patch: dev = observed [ i ] ; { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 985
score: 99.51943137428977
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } } return sum CaMeL Sq . dev ;
rank: 985
score: 99.51461356026786
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( ! is CaMeL Non CaMeL Negative ( observed ) || ! is CaMeL Non CaMeL Negative ( observed ) ) { return
rank: 985
score: 99.44916092722039
patch: if ( observed [ i ] - expected [ i ] - expected [ i ] ) {
rank: 986
score: 99.59873046875
patch: dev = ( ( double ) ( expected [ i ] - expected [ i ] ) - expected [ i ] ) ;
rank: 986
score: 99.535810546875
patch: dev = ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) / $NUMBER$ ;
rank: 986
score: 99.51876085069445
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev [ i ] ; }
rank: 986
score: 99.51443917410714
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / dev * dev ;
rank: 986
score: 99.44711143092105
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; }
rank: 987
score: 99.580322265625
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / dev / dev / expected [ i ] ;
rank: 987
score: 99.540517578125
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] / dev ;
rank: 987
score: 99.534541015625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; } dev = dev * dev ;
rank: 987
score: 99.51845481178977
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev / dev ; }
rank: 987
score: 99.51425316220238
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev ;
rank: 987
score: 99.44584147135417
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 988
score: 99.59733072916667
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev * expected [ i ] [ i ] ;
rank: 988
score: 99.563955078125
patch: dev = expected [ i ] - expected [ i ] ; if = expected [ i ] - expected [ i ] ;
rank: 988
score: 99.5401102701823
patch: dev = observed [ i ] - expected [ i ] ; sum CaMeL Sq += dev / expected [ i ] ;
rank: 988
score: 99.52372409986413
patch: dev += ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ;
rank: 988
score: 99.5182772549716
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev / dev ; }
rank: 988
score: 99.43594360351562
patch: try { dev = ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 989
score: 99.562109375
patch: dev = expected [ i ] - expected [ i ] ; dev = expected [ i ] - expected [ i ] ;
rank: 989
score: 99.5209728422619
patch: dev = dev [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 989
score: 99.51362645348837
patch: dev = observed [ i ] ; if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { dev = observed [ i ] ;
rank: 989
score: 99.51359419389205
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . sum CaMeL Sq ( dev ) ;
rank: 989
score: 99.3935546875
patch: if ( observed [ i ] - expected [ i ] - expected [ i ] )
rank: 990
score: 99.5492451985677
patch: dev = ( double ) expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 990
score: 99.5195645419034
patch: dev = observed [ i ] ; { sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 990
score: 99.5130246184593
patch: if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / dev / dev / dev ;
rank: 990
score: 99.51288396661931
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } if ( ! is CaMeL Non CaMeL Negative ( expected ) || ! is CaMeL Non CaMeL Negative ( observed [ i
rank: 990
score: 99.5126316236413
patch: dev += ( ( double ) observed [ i ] - expected [ i ] ) + expected [ i ] ;
rank: 990
score: 99.37855360243056
patch: dev = ( ( double ) observed [ i ] - observed [ i ] ) ;
rank: 991
score: 99.5751953125
patch: dev = ( ( ( double ) observed [ i ] - expected [ i ] - expected [ i ] ) ) ;
rank: 991
score: 99.56404622395833
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] / expected [ i ] ;
rank: 991
score: 99.53958262567934
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 991
score: 99.5146484375
patch: dev = expected [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 991
score: 99.51263718377976
patch: if ( is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { return dev ;
rank: 991
score: 99.51112196180556
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) sum CaMeL Sq += dev ;
rank: 991
score: 99.35918112362133
patch: dev = ( ( double ) observed [ i ] - expected [ i ] )
rank: 992
score: 99.56163533528645
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 992
score: 99.51151435319767
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } int
rank: 992
score: 99.51106400923295
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . chi CaMeL Square ( expected ) ;
rank: 992
score: 99.49315296519886
patch: double dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 992
score: 99.35652160644531
patch: dev = ( double ) observed [ i ] - expected [ i ] ;
rank: 993
score: 99.5355808423913
patch: sum CaMeL Sq += observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 993
score: 99.5088223544034
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } return sum CaMeL Sq . sum CaMeL Sq ( observed ) ;
rank: 993
score: 99.49374389648438
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) / dev ;
rank: 993
score: 99.34365665211396
patch: return ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 994
score: 99.54468883167614
patch: dev = ( double ) observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 994
score: 99.51126453488372
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + expected ) ;
rank: 994
score: 99.50654740767045
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } else { return sum CaMeL Sq ; }
rank: 994
score: 99.49861450195313
patch: sum CaMeL Sq += ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 994
score: 99.470556640625
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) + dev ;
rank: 994
score: 99.33757781982422
patch: ( ( double ) observed [ i ] - expected [ i ] ) ;
rank: 995
score: 99.52317116477273
patch: dev = expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 995
score: 99.51079896438954
patch: if ( is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; else
rank: 995
score: 99.50397283380681
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; if ( is CaMeL Non CaMeL Negative ( observed ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; }
rank: 995
score: 99.37129720052083
patch: dev += ( observed [ i ] - expected [ i ] ) ;
rank: 995
score: 99.31270658052884
patch: dev = observed [ i ] - expected [ i ] ;
rank: 996
score: 99.51624116443452
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev * expected [ i ] ;
rank: 996
score: 99.50970884811046
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq = 0 * dev ;
rank: 996
score: 99.50337456597222
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * dev / expected [ i ] ; } if ( ! is CaMeL Non CaMeL Negative ( expected ) || ! is CaMeL Non CaMeL Negative ( observed ) ) {
rank: 996
score: 99.41602847450658
patch: dev = observed [ i ] ; sum CaMeL Sq += dev * expected [ i ] ;
rank: 996
score: 99.39110610064338
patch: sum CaMeL Sq += ( observed [ i ] - expected [ i ] ) ;
rank: 996
score: 99.28414154052734
patch: sum CaMeL Sq += dev * dev / dev / expected [ i ] ;
rank: 997
score: 99.50873093377976
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] ) ) { sum CaMeL Sq += dev * dev / expected / dev ;
rank: 997
score: 99.5025390625
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += observed [ i ] ;
rank: 997
score: 99.37833658854167
patch: sum CaMeL Sq += observed [ i ] - expected [ i ] ;
rank: 997
score: 99.35123988560268
patch: sum CaMeL Sq += dev * dev / expected [ i ] ;
rank: 997
score: 99.29877178485577
patch: dev += observed [ i ] - expected [ i ] ;
rank: 998
score: 99.49945746527777
patch: dev = ( ( double ) observed [ i ] - expected [ i ] ) ; sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += sum CaMeL Sq ; return sum CaMeL Sq ;
rank: 998
score: 99.25403771033653
patch: dev = ( ( double ) observed [ i ] ) ;
rank: 998
score: 99.23206505408653
patch: dev += observed [ i ] / expected [ i ] ;
rank: 998
score: 99.17894490559895
patch: sum CaMeL Sq += dev * expected [ i ] ;
rank: 999
score: 99.49768880208333
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) || ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq ++ ;
rank: 999
score: 99.20631760817308
patch: dev += dev [ i ] - expected [ i ] ;
rank: 999
score: 99.13233531605114
patch: dev = ( double ) observed [ i ] ;
rank: 999
score: 99.05638427734375
patch: sum CaMeL Sq += observed [ i ] ;
rank: 1000
score: 99.49711371527778
patch: if ( ! is CaMeL Non CaMeL Negative ( observed [ i ] - expected [ i ] ) ) { sum CaMeL Sq += dev * dev / expected [ i ] ; } sum CaMeL Sq += expected [ i ] ;
rank: 1000
score: 99.14159138997395
patch: dev = ( ( double ) observed [ i ] -
rank: 1000
score: 98.84632873535156
patch: dev = observed [ i ] ;
rank: 1000
score: 98.75975036621094
patch: dev += observed [ i ] ;
