rank: 1
score: 99.74454498291016
patch: }
rank: 1
score: 99.66311645507812
patch: } else if ( }
rank: 1
score: 99.62025960286458
patch: } }
rank: 1
score: 99.58526611328125
patch: } else {
rank: 1
score: 99.52877807617188
patch: } * /
rank: 1
score: 99.3712646484375
patch: } switch ( str . length ( ) )
rank: 1
score: 99.26877663352273
patch: } switch ( str . length ( ) ) {
rank: 2
score: 99.4195327758789
patch: } } }
rank: 2
score: 99.3519287109375
patch: } } } * /
rank: 2
score: 99.29843139648438
patch: } if ( str == null )
rank: 2
score: 99.26387532552083
patch: switch ( str . length ( ) )
rank: 2
score: 99.162353515625
patch: } + str . char CaMeL At ( 0 ) ;
rank: 2
score: 98.9263164813702
patch: return str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 3
score: 99.34244384765626
patch: } if ( }
rank: 3
score: 99.25733778211806
patch: } switch ( str . length ( )
rank: 3
score: 99.2056640625
patch: } else { }
rank: 3
score: 99.16339111328125
patch: } else { return }
rank: 3
score: 99.1458511352539
patch: } finally {
rank: 3
score: 99.02823893229167
patch: } } } } }
rank: 3
score: 98.88800518329327
patch: return str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 4
score: 99.30769856770833
patch: } } } ) ;
rank: 4
score: 99.27610778808594
patch: } } /
rank: 4
score: 99.19301147460938
patch: } else if }
rank: 4
score: 99.1363525390625
patch: } * * /
rank: 4
score: 99.13607083834134
patch: } switch ( str . char CaMeL At ( 0 ) )
rank: 4
score: 99.12799072265625
patch: } if ( str == null ) {
rank: 4
score: 99.085205078125
patch: } if ( str . length ( ) ) {
rank: 4
score: 98.8831558227539
patch: return false ;
rank: 5
score: 99.304931640625
patch: } } if ( }
rank: 5
score: 99.144775390625
patch: } else
rank: 5
score: 99.13202667236328
patch: } / *
rank: 5
score: 99.06993689903847
patch: } return Boolean . value CaMeL Of ( str . char CaMeL
rank: 5
score: 99.06064675071023
patch: } super . to CaMeL Boolean ( str ) ;
rank: 5
score: 98.94993373325893
patch: } } } } } }
rank: 5
score: 98.86224365234375
patch: return true ;
rank: 6
score: 99.10070190429687
patch: } / * *
rank: 6
score: 99.069287109375
patch: } } } }
rank: 6
score: 99.05796305338542
patch: switch ( str . char CaMeL At ( 0 ) )
rank: 6
score: 99.05359903971355
patch: } case $NUMBER$ : {
rank: 7
score: 99.06686401367188
patch: } } if } }
rank: 7
score: 99.06388716264205
patch: } + str . to CaMeL String ( ) ;
rank: 7
score: 99.0511474609375
patch: } if ( str . length ( ) == 0 )
rank: 7
score: 99.03734412560097
patch: } if ( str . length ( ) == 1 ) {
rank: 7
score: 98.83743286132812
patch: } } } } } } }
rank: 7
score: 98.78862653459821
patch: } return str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 8
score: 99.09866333007812
patch: } } finally {
rank: 8
score: 99.03697791466347
patch: } if ( str . length ( ) == 0 ) {
rank: 8
score: 99.02571927584134
patch: } switch ( str . char CaMeL At ( 1 ) )
rank: 8
score: 98.9505615234375
patch: } if ( false }
rank: 8
score: 98.78910319010417
patch: } else { } }
rank: 9
score: 99.05021158854167
patch: } + str . char CaMeL At ( 1 ) ;
rank: 9
score: 99.04991803850446
patch: } String str = str . char CaMeL At ( 0 ) ;
rank: 9
score: 99.03136189778645
patch: } } if } ;
rank: 9
score: 99.03046875
patch: } this . str = str . char CaMeL At ( 0 ) ;
rank: 9
score: 99.00057983398438
patch: } if ( str . length ( ) == 1 )
rank: 9
score: 98.91549682617188
patch: } if }
rank: 9
score: 98.73390415736607
patch: } return str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 10
score: 99.07897338867187
patch: } return Boolean . value CaMeL Of ( }
rank: 10
score: 99.02418736049107
patch: } int ch = str . char CaMeL At ( 0 ) ;
rank: 10
score: 98.99661254882812
patch: } switch ( $STRING$ )
rank: 10
score: 98.9740498860677
patch: } + ch . char CaMeL At ( 0 ) ;
rank: 10
score: 98.93773396809895
patch: } } if } /
rank: 10
score: 98.90708705357143
patch: } else { if } }
rank: 11
score: 99.17218017578125
patch: } } * /
rank: 11
score: 99.06181640625
patch: } } else {
rank: 11
score: 99.04231770833333
patch: } if ( str . length ( ) == $NUMBER$ )
rank: 11
score: 99.01714409722223
patch: } if ( str == $STRING$ ) {
rank: 11
score: 98.99323381696429
patch: } switch ( str . char CaMeL At ( 0 ) ) {
rank: 11
score: 98.96448364257813
patch: super . to CaMeL Boolean ( str ) ;
rank: 11
score: 98.91433715820312
patch: } } *
rank: 11
score: 98.81639607747395
patch: } if ( } }
rank: 11
score: 98.70345365084134
patch: return str . char CaMeL At ( $NUMBER$ ) == $STRING$ ;
rank: 12
score: 99.15948486328125
patch: } / * }
rank: 12
score: 99.05780029296875
patch: } else if ( str . length ( }
rank: 12
score: 99.02879115513393
patch: if ( str == null )
rank: 12
score: 98.98966471354167
patch: } if ( str . char CaMeL At ( 0 ) == $STRING$ )
rank: 12
score: 98.96294487847223
patch: } + str . length ( ) ;
rank: 12
score: 98.8133036295573
patch: } else { if }
rank: 12
score: 98.72582329644098
patch: } } } } } } } }
rank: 13
score: 99.15777587890625
patch: } } else { }
rank: 13
score: 99.0483867938702
patch: } else if ( str . starts CaMeL With ( $STRING$ }
rank: 13
score: 99.0133565266927
patch: } case $STRING$ : {
rank: 13
score: 98.79270717075893
patch: } } if } } }
rank: 13
score: 98.78904215494792
patch: } if ( true }
rank: 13
score: 98.67681274414062
patch: } return false ;
rank: 14
score: 99.15327962239583
patch: } } finally { }
rank: 14
score: 99.00148228236607
patch: } String ch = str . char CaMeL At ( 0 ) ;
rank: 14
score: 98.98412068684895
patch: } switch ( str . to CaMeL String ( ) )
rank: 14
score: 98.94825236002605
patch: } * * * /
rank: 14
score: 98.78534698486328
patch: } } if } } } }
rank: 14
score: 98.7741470336914
patch: } else { if ( } }
rank: 14
score: 98.67710367838542
patch: } } } ) }
rank: 14
score: 98.67271205357143
patch: this . str = str . char CaMeL At ( 0 ) ;
rank: 15
score: 99.03929725060097
patch: } if ( $STRING$ . equals CaMeL Ignore CaMeL Case ( }
rank: 15
score: 99.02418619791666
patch: to CaMeL Boolean ( str . char CaMeL At ( 0 ) ) ;
rank: 15
score: 98.98371233258929
patch: } char ch = str . char CaMeL At ( 0 ) ;
rank: 15
score: 98.982177734375
patch: } if ( str == $STRING$ )
rank: 15
score: 98.94529418945312
patch: } case $NUMBER$ :
rank: 15
score: 98.71591186523438
patch: } } if } =
rank: 15
score: 98.65956115722656
patch: } * }
rank: 16
score: 99.11184692382812
patch: } * / }
rank: 16
score: 99.03922119140626
patch: } else if ( $STRING$ . equals ( }
rank: 16
score: 99.02391052246094
patch: } if ( ch == null )
rank: 16
score: 98.96902029854911
patch: } switch ( str . char CaMeL At ( 1 ) ) {
rank: 16
score: 98.756591796875
patch: } else ;
rank: 16
score: 98.69743347167969
patch: } } if } = } }
rank: 16
score: 98.6494140625
patch: return ( str . char CaMeL At ( 0 ) == $STRING$ ) ;
rank: 16
score: 98.64439900716145
patch: } else if false }
rank: 17
score: 99.03350360576923
patch: } if ( Character . is CaMeL Upper CaMeL Case ( }
rank: 17
score: 99.02086639404297
patch: } if ( str . char CaMeL
rank: 17
score: 98.96852805397727
patch: } equals CaMeL Ignore CaMeL Case ( str ) ;
rank: 17
score: 98.95064290364583
patch: } switch ( str )
rank: 17
score: 98.75146484375
patch: } / * * /
rank: 17
score: 98.68513997395833
patch: } } } } /
rank: 17
score: 98.63949584960938
patch: } else if } }
rank: 18
score: 99.03240966796875
patch: } else if ( String . value CaMeL Of ( }
rank: 18
score: 98.74302455357143
patch: } else if ( false }
rank: 18
score: 98.65713936941964
patch: } } } } } /
rank: 18
score: 98.64795860877403
patch: return str . char CaMeL At ( 0 ) == str ;
rank: 18
score: 98.62176513671875
patch: } catch ( $STRING$ }
rank: 19
score: 99.07445271809895
patch: } / * * }
rank: 19
score: 99.0315450032552
patch: } return $STRING$ . equals CaMeL Ignore CaMeL Case ( }
rank: 19
score: 99.00641741071429
patch: if ( str . char CaMeL At ( 0 ) == $STRING$ )
rank: 19
score: 98.953955078125
patch: } this . str = str . char CaMeL At ( 1 ) ;
rank: 19
score: 98.92342703683036
patch: } if ( str . to CaMeL String ( ) == null )
rank: 19
score: 98.91180419921875
patch: } + str . last CaMeL Index CaMeL Of ( $STRING$ ) ;
rank: 19
score: 98.73399047851562
patch: } else * /
rank: 19
score: 98.64492563100961
patch: return str . char CaMeL At ( 0 ) != $STRING$ ;
rank: 19
score: 98.62384033203125
patch: } } / / /
rank: 20
score: 99.07254464285714
patch: } } } } ) ;
rank: 20
score: 99.03146362304688
patch: } else if ( str . starts CaMeL With ( }
rank: 20
score: 98.95286207932692
patch: } str = str . char CaMeL At ( 0 ) ;
rank: 20
score: 98.9087422688802
patch: } + str . char CaMeL At ( $NUMBER$ ) ;
rank: 20
score: 98.73267618815105
patch: } else return false ;
rank: 20
score: 98.62112426757812
patch: } } if } *
rank: 20
score: 98.59988403320312
patch: } * * / /
rank: 21
score: 99.072021484375
patch: } } / * }
rank: 21
score: 99.02771935096153
patch: } if ( Character . is CaMeL Na CaMeL N ( }
rank: 21
score: 98.99451700846355
patch: switch ( str . char CaMeL At ( 1 ) )
rank: 21
score: 98.952392578125
patch: } if ( str . length ( ) == $NUMBER$ ) {
rank: 21
score: 98.9180575284091
patch: } switch ( str . length ( ) ] )
rank: 21
score: 98.89971923828125
patch: } / * /
rank: 21
score: 98.72445242745536
patch: } else { / * }
rank: 21
score: 98.63034889914773
patch: } return str . length ( ) == 0 ;
rank: 21
score: 98.6060791015625
patch: } } if }
rank: 21
score: 98.54777018229167
patch: } * * / }
rank: 22
score: 99.02375793457031
patch: } else if ( str . }
rank: 22
score: 98.99362521701389
patch: } String str = str . char CaMeL
rank: 22
score: 98.91475736177884
patch: } if ( str . char CaMeL At ( 0 ) ==
rank: 22
score: 98.88823908025569
patch: } + ch . to CaMeL String ( ) ;
rank: 22
score: 98.72040405273438
patch: } else { System . value CaMeL Of }
rank: 22
score: 98.60112762451172
patch: } } else
rank: 22
score: 98.54100341796875
patch: } catch false ;
rank: 23
score: 99.02090219350961
patch: } else if ( $STRING$ . equals CaMeL Ignore CaMeL Case }
rank: 23
score: 98.94814828725961
patch: } if ( str . length ( ) == $STRING$ ) {
rank: 23
score: 98.88382975260417
patch: } + ch . char CaMeL At ( 1 ) ;
rank: 23
score: 98.71285574776786
patch: } / * * * /
rank: 23
score: 98.625
patch: return ch . char CaMeL At ( 0 ) == $STRING$ ;
rank: 23
score: 98.58997802734375
patch: } } / /
rank: 23
score: 98.54078892299107
patch: } catch ( $STRING$ } }
rank: 24
score: 99.02276611328125
patch: } } * / }
rank: 24
score: 98.94737897600446
patch: } int ch = str . char CaMeL At ( 1 ) ;
rank: 24
score: 98.90581868489583
patch: } if ( str . char CaMeL At ( 1 ) == $STRING$ )
rank: 24
score: 98.88116455078125
patch: str = str . char CaMeL At ( 0 ) ;
rank: 24
score: 98.71022033691406
patch: } else { if } * /
rank: 24
score: 98.61754353841145
patch: name = str . char CaMeL At ( 0 ) ;
rank: 24
score: 98.58934674944196
patch: } } if } } /
rank: 24
score: 98.53367106119792
patch: } * } } }
rank: 25
score: 99.0160624186198
patch: } else if ( Character . is CaMeL Whitespace ( }
rank: 25
score: 98.97377366286058
patch: } return Boolean . to CaMeL Boolean ( str . char CaMeL
rank: 25
score: 98.9424161044034
patch: } int ch = str . length ( ) ;
rank: 25
score: 98.90378824869792
patch: } if ( str . length ( ) != 0 )
rank: 25
score: 98.88065592447917
patch: } catch ( Illegal CaMeL Argument CaMeL Exception out ) {
rank: 25
score: 98.69481658935547
patch: } else { return false ; }
rank: 25
score: 98.6102294921875
patch: return ! str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 25
score: 98.58651733398438
patch: } } if } } } /
rank: 25
score: 98.51288604736328
patch: } * } } } } }
rank: 26
score: 99.014404296875
patch: } else if ( } }
rank: 26
score: 98.96644592285156
patch: switch ( str . length ( )
rank: 26
score: 98.92985026041667
patch: } if ( ! str . length ( ) ) {
rank: 26
score: 98.87149386935764
patch: } ++ str . length ( ) ;
rank: 26
score: 98.68342808314732
patch: } else { return false }
rank: 26
score: 98.60620989118304
patch: return str . char CaMeL At ( 0 ) == $STRING$ ; }
rank: 26
score: 98.58287702287946
patch: } } if } / /
rank: 26
score: 98.50691986083984
patch: } * *
rank: 27
score: 99.01119290865384
patch: } else if ( str . equals CaMeL Ignore CaMeL Case }
rank: 27
score: 98.96324573863636
patch: } return str . length ( ) == $NUMBER$ ;
rank: 27
score: 98.92620849609375
patch: } String ch = str . char CaMeL At ( 1 ) ;
rank: 27
score: 98.89972795758929
patch: } switch ( str . length ( ) ) { case $NUMBER$ :
rank: 27
score: 98.86839076450893
patch: } || str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 27
score: 98.67219761439732
patch: } else { if ( }
rank: 27
score: 98.60419170673077
patch: return str . char CaMeL At ( 1 ) != $STRING$ ;
rank: 27
score: 98.58228410993304
patch: } } } } } ;
rank: 27
score: 98.50001525878906
patch: } else if } } } }
rank: 28
score: 99.00475135216347
patch: } else if ( str . index CaMeL Of ( $STRING$ }
rank: 28
score: 98.96284702845982
patch: if ( str . char CaMeL At ( 1 ) == $STRING$ )
rank: 28
score: 98.85809733072917
patch: } + str . length ( ) . to CaMeL String ( ) ;
rank: 28
score: 98.65206473214286
patch: } if ( } ) {
rank: 28
score: 98.6029296875
patch: } else if ( str == null ) {
rank: 28
score: 98.53375244140625
patch: } } if } = }
rank: 28
score: 98.49812147352431
patch: } else if } } } } }
rank: 29
score: 98.99003092447917
patch: } } } finally {
rank: 29
score: 98.97706821986607
patch: } else if ( str }
rank: 29
score: 98.96260579427083
patch: to CaMeL Boolean ( str . char CaMeL At ( 1 ) ) ;
rank: 29
score: 98.8975830078125
patch: } if ( ! str . char CaMeL At ( 0 ) == $STRING$ )
rank: 29
score: 98.65072631835938
patch: } else }
rank: 29
score: 98.60086263020834
patch: return str . last CaMeL Index CaMeL Of ( $STRING$ ) == 0 ;
rank: 29
score: 98.53044891357422
patch: } } } } } } /
rank: 30
score: 98.96666124131944
patch: } else if ( str . equals }
rank: 30
score: 98.90902944711539
patch: } switch ( this . str . length ( ) ) {
rank: 30
score: 98.89335123697917
patch: } if ( str . char CaMeL At ( 0 ) != $STRING$ )
rank: 30
score: 98.85624186197917
patch: } catch ( Illegal CaMeL Argument CaMeL Exception err ) {
rank: 30
score: 98.64683702256944
patch: } if ( ! null . equals }
rank: 30
score: 98.5981953938802
patch: } else switch ( str . length ( ) ) {
rank: 30
score: 98.52346365792411
patch: } } if } ; /
rank: 30
score: 98.47335815429688
patch: } } / } } } }
rank: 31
score: 98.98682579627403
patch: } else if ( str . char CaMeL At ( 0 }
rank: 31
score: 98.963818359375
patch: } } ) ;
rank: 31
score: 98.95781598772321
patch: } String str = str . char CaMeL At ( 1 ) ;
rank: 31
score: 98.9029541015625
patch: } if ( str . length ( ) == ) {
rank: 31
score: 98.85254923502605
patch: } + str . index CaMeL Of ( $STRING$ ) ;
rank: 31
score: 98.64115905761719
patch: } else { if ( false }
rank: 31
score: 98.59407552083333
patch: return ( str . char CaMeL At ( 1 ) == $STRING$ ) ;
rank: 31
score: 98.52105712890625
patch: } } if } = / /
rank: 32
score: 98.98398844401042
patch: } else if ( Character . is CaMeL Digit ( }
rank: 32
score: 98.90088704427083
patch: } char CaMeL At = str . char CaMeL At ( 0 ) ;
rank: 32
score: 98.84891764322917
patch: } + ch 0 . to CaMeL String ( ) ;
rank: 32
score: 98.64089965820312
patch: } if ( } , false }
rank: 32
score: 98.59291770241477
patch: } return str . length ( ) == 1 ;
rank: 32
score: 98.52095794677734
patch: } } if } / / /
rank: 32
score: 98.46828206380208
patch: } catch } } }
rank: 33
score: 98.95472208658855
patch: } else { String }
rank: 33
score: 98.89780099051339
patch: } char ch = str . char CaMeL At ( 1 ) ;
rank: 33
score: 98.88918169806985
patch: to CaMeL Boolean ( str . char CaMeL At ( 0 ) == $STRING$ ) ;
rank: 33
score: 98.6392822265625
patch: } else { ( }
rank: 33
score: 98.59274526742789
patch: } return str . to CaMeL String ( ) == null ;
rank: 33
score: 98.5182113647461
patch: } } } } } } ;
rank: 33
score: 98.46602376302083
patch: } catch ( Exception }
rank: 34
score: 98.98170979817708
patch: } else if ( str . length }
rank: 34
score: 98.956103515625
patch: switch ( str . length ( ) ) {
rank: 34
score: 98.95305786132812
patch: } * } }
rank: 34
score: 98.89077322823661
patch: } if ( false ) {
rank: 34
score: 98.88679334852431
patch: } if ( ( str == null )
rank: 34
score: 98.8367450420673
patch: str = str . char CaMeL At ( 0 ) ; }
rank: 34
score: 98.63923645019531
patch: } else { / * * /
rank: 34
score: 98.5926513671875
patch: this . str = str . char CaMeL At ( 1 ) ;
rank: 34
score: 98.50736781529018
patch: } } } if } }
rank: 34
score: 98.45564778645833
patch: } else { * }
rank: 35
score: 98.95268249511719
patch: } if ( str . length }
rank: 35
score: 98.88972981770833
patch: } switch ( str . length ( ) ) { case $NUMBER$ : {
rank: 35
score: 98.8863525390625
patch: } switch ( ! str . length ( ) )
rank: 35
score: 98.83219401041667
patch: } = str . char CaMeL At ( 0 ) ;
rank: 35
score: 98.62714494977679
patch: } else if } null }
rank: 35
score: 98.59000651041667
patch: prefix = str . char CaMeL At ( 0 ) ;
rank: 35
score: 98.49689483642578
patch: } } if } = } /
rank: 36
score: 98.97848849826389
patch: } else if ( str == null )
rank: 36
score: 98.94601440429688
patch: } } } } ;
rank: 36
score: 98.94314575195312
patch: } switch ( name . length ( ) )
rank: 36
score: 98.88767496744792
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( 0 ) ) ;
rank: 36
score: 98.88527134486607
patch: } switch ( ! str . char CaMeL At ( 0 ) )
rank: 36
score: 98.83160400390625
patch: } catch ( Number CaMeL Format CaMeL Exception out ) {
rank: 36
score: 98.62321472167969
patch: } else { / * * }
rank: 36
score: 98.58743722098214
patch: } return str . char CaMeL At ( 0 ) == str ;
rank: 36
score: 98.49481201171875
patch: } } if } } / /
rank: 37
score: 98.9640362079327
patch: } if ( Float . is CaMeL Na CaMeL N ( }
rank: 37
score: 98.88370768229167
patch: } if ( str . length ( ) != 1 )
rank: 37
score: 98.88202514648438
patch: } if ( str . length ( ) {
rank: 37
score: 98.83011881510417
patch: } catch ( Number CaMeL Format CaMeL Exception err ) {
rank: 37
score: 98.60997178819444
patch: } else { / * * * /
rank: 37
score: 98.58466254340277
patch: return ( str . char CaMeL At (
rank: 37
score: 98.49459838867188
patch: } } if } +
rank: 37
score: 98.44287109375
patch: } catch false ; }
rank: 38
score: 98.9638671875
patch: } if ( Float . value CaMeL Of ( }
rank: 38
score: 98.94020589192708
patch: } * } * /
rank: 38
score: 98.939208984375
patch: if ( str == null ) {
rank: 38
score: 98.8779296875
patch: } if ( str . char CaMeL At ( 0 ) == null )
rank: 38
score: 98.60879952566964
patch: } / * * * }
rank: 38
score: 98.57736440805289
patch: return ch . char CaMeL At ( 1 ) == $STRING$ ;
rank: 38
score: 98.49390665690105
patch: } } if } this
rank: 38
score: 98.44253540039062
patch: } * * } /
rank: 39
score: 98.9632059733073
patch: } else if ( str . index CaMeL Of ( }
rank: 39
score: 98.93871198381696
patch: } return $STRING$ . char CaMeL At ( 0 ) == $STRING$ ;
rank: 39
score: 98.926025390625
patch: } } } * }
rank: 39
score: 98.8717510516827
patch: } if ( str . length ( ) != 0 ) {
rank: 39
score: 98.86946105957031
patch: } if ( str . char CaMeL At ( 0 ) == $STRING$ ) {
rank: 39
score: 98.82670288085937
patch: builder . to CaMeL Boolean ( str ) ;
rank: 39
score: 98.60392761230469
patch: } else { / * } }
rank: 39
score: 98.57595590444711
patch: return str . char CaMeL At ( 1 ) == str ;
rank: 39
score: 98.48995535714286
patch: } } if } ; }
rank: 39
score: 98.44151814778645
patch: } else } } }
rank: 40
score: 98.9573974609375
patch: } else if } else {
rank: 40
score: 98.93804462139423
patch: } try { } . to CaMeL Boolean ( str ) ;
rank: 40
score: 98.8715350811298
patch: } str = str . char CaMeL At ( 1 ) ;
rank: 40
score: 98.82433210100446
patch: } + lower CaMeL Case . char CaMeL At ( 0 ) ;
rank: 40
score: 98.59740339006696
patch: } else { return null }
rank: 40
score: 98.57471575055804
patch: return str . char CaMeL At ( 1 ) == $STRING$ ; }
rank: 40
score: 98.43634033203125
patch: } * } } } }
rank: 41
score: 98.95653279622395
patch: } else if ( Float . value CaMeL Of ( }
rank: 41
score: 98.93689903846153
patch: } return String . value CaMeL Of ( str . char CaMeL
rank: 41
score: 98.89058430989583
patch: } } } } )
rank: 41
score: 98.87132263183594
patch: } int char CaMeL At = str . char CaMeL At ( 0 ) ;
rank: 41
score: 98.86846454326923
patch: } switch ( str . to CaMeL String ( ) ) {
rank: 41
score: 98.82407448508523
patch: str = str . to CaMeL String ( ) ;
rank: 41
score: 98.59538269042969
patch: } System . value CaMeL Of }
rank: 41
score: 98.57330729166667
patch: return str . last CaMeL Index CaMeL Of ( $STRING$ ) == 1 ;
rank: 41
score: 98.48748016357422
patch: } } if } = } ;
rank: 41
score: 98.434326171875
patch: } } * } } } }
rank: 42
score: 98.94932204026442
patch: } else { return $STRING$ . equals CaMeL Ignore CaMeL Case }
rank: 42
score: 98.88387044270833
patch: } } catch ( }
rank: 42
score: 98.86904672475961
patch: } if ( str . length ( ) > 1 ) {
rank: 42
score: 98.81794956752232
patch: } + ch = str . char CaMeL At ( 0 ) ;
rank: 42
score: 98.59513092041016
patch: } / * * * * /
rank: 42
score: 98.56552124023438
patch: } return str . last CaMeL Index CaMeL Of ( $STRING$ ) == 0 ;
rank: 42
score: 98.48673248291016
patch: } } if } } } ;
rank: 42
score: 98.42748260498047
patch: } * / } } } }
rank: 43
score: 98.9428202311198
patch: if ( Character . is CaMeL Upper CaMeL Case ( }
rank: 43
score: 98.93266157670455
patch: } return $STRING$ . to CaMeL String ( ) ;
rank: 43
score: 98.87944793701172
patch: } } } } } ) ;
rank: 43
score: 98.81015846946023
patch: + str . char CaMeL At ( 0 ) ;
rank: 43
score: 98.58522033691406
patch: } if ( is CaMeL True }
rank: 43
score: 98.56508225661058
patch: return ( str . char CaMeL At ( 0 ) == $STRING$
rank: 43
score: 98.48433140345982
patch: } } if } } ;
rank: 43
score: 98.42690700954861
patch: } } / } } } } }
rank: 44
score: 98.94220525568181
patch: } else if ( str . starts CaMeL With }
rank: 44
score: 98.93063354492188
patch: } switch ( ch . length ( ) )
rank: 44
score: 98.87349155970982
patch: } } } } * /
rank: 44
score: 98.86343819754464
patch: } Object ch = str . char CaMeL At ( 0 ) ;
rank: 44
score: 98.85963792067308
patch: } String ch = str . to CaMeL String ( ) ;
rank: 44
score: 98.80978628305289
patch: fail ( str . char CaMeL At ( 0 ) ) ;
rank: 44
score: 98.58365478515626
patch: } if ( Boolean . is CaMeL Empty }
rank: 44
score: 98.56077357700893
patch: return ! str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 44
score: 98.47840576171875
patch: } } } /
rank: 44
score: 98.423583984375
patch: } * } } } } } }
rank: 45
score: 98.9267578125
patch: } String str = str . char CaMeL At ( 0 )
rank: 45
score: 98.86209810697116
patch: } if ( str . length ( ) > 0 ) {
rank: 45
score: 98.85768821022727
patch: } switch ( str . length ( ) 1 )
rank: 45
score: 98.58319854736328
patch: } else { this . } }
rank: 45
score: 98.56052943638393
patch: return ( str . char CaMeL At ( 0 ) == $STRING$ )
rank: 45
score: 98.46263631184895
patch: } } if } System
rank: 45
score: 98.4182840983073
patch: } } / } }
rank: 46
score: 98.93253267728366
patch: } else if ( str . length ( ) == 1 )
rank: 46
score: 98.92552601207386
patch: if ( str . length ( ) == $NUMBER$ )
rank: 46
score: 98.86211395263672
patch: } if ( str . equals }
rank: 46
score: 98.85989815848214
patch: } if ( true ) {
rank: 46
score: 98.85695578835227
patch: } else switch ( str . length ( ) )
rank: 46
score: 98.80413263494319
patch: } + str . to CaMeL Boolean ( ) ;
rank: 46
score: 98.58283148871527
patch: } if ( ! is CaMeL Empty }
rank: 46
score: 98.55959903492646
patch: } return str . to CaMeL String ( ) . length ( ) == 0 ;
rank: 46
score: 98.46135711669922
patch: } } {
rank: 47
score: 98.93019612630208
patch: } else if ( $STRING$ . starts CaMeL With ( }
rank: 47
score: 98.86036682128906
patch: } } finally { if ( }
rank: 47
score: 98.85976938100961
patch: } int char CaMeL At = str . length ( ) ;
rank: 47
score: 98.8542010967548
patch: } if ( ( str . length ( ) == 0 )
rank: 47
score: 98.80338228665866
patch: } : = str . char CaMeL At ( 0 ) ;
rank: 47
score: 98.58011203342014
patch: } else System . value CaMeL Of }
rank: 47
score: 98.4105224609375
patch: } catch } } } }
rank: 48
score: 98.92899263822116
patch: } else { return Boolean . value CaMeL Of ( } ;
rank: 48
score: 98.92236328125
patch: } switch ( String . str . length ( ) )
rank: 48
score: 98.85683186848958
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( 1 ) ) ;
rank: 48
score: 98.85304953835227
patch: } if ( ! str . length ( ) )
rank: 48
score: 98.8008563701923
patch: } + lower CaMeL Case . to CaMeL String ( ) ;
rank: 48
score: 98.57552664620536
patch: } else / * * }
rank: 48
score: 98.55741373697917
patch: c = str . char CaMeL At ( 0 ) ;
rank: 48
score: 98.44900076729911
patch: } } if } * /
rank: 48
score: 98.41007777622768
patch: } else if } } }
rank: 49
score: 98.92530314127605
patch: if ( $STRING$ . equals CaMeL Ignore CaMeL Case ( }
rank: 49
score: 98.91897583007812
patch: } switch ( String . length ( ) )
rank: 49
score: 98.85299682617188
patch: } int lower CaMeL Case = str . char CaMeL At ( 0 ) ;
rank: 49
score: 98.85169474283855
patch: } * / * }
rank: 49
score: 98.79632161458333
patch: } + str . to CaMeL String ( ) . length ( ) ;
rank: 49
score: 98.57453264508929
patch: } else { if } ;
rank: 49
score: 98.55347696940105
patch: key = str . char CaMeL At ( 0 ) ;
rank: 49
score: 98.44510323660714
patch: } } if } ; ;
rank: 49
score: 98.40946451822917
patch: } } } int } } } }
rank: 50
score: 98.92290704900569
patch: } if ( Character . is CaMeL Whitespace ( }
rank: 50
score: 98.85606553819444
patch: } if ( ch == $STRING$ ) {
rank: 50
score: 98.79541015625
patch: } ++ str . char CaMeL At ( 0 ) ;
rank: 50
score: 98.56802029079861
patch: } if ( ! is CaMeL Numeric }
rank: 50
score: 98.55193481445312
patch: } else if ( str == $STRING$ ) {
rank: 50
score: 98.43841552734375
patch: } } if } = / ;
rank: 50
score: 98.40438406808036
patch: } } / } } }
rank: 51
score: 98.91634695870536
patch: if ( ch == null )
rank: 51
score: 98.85081263950893
patch: } switch ( str . index CaMeL Of ( $STRING$ ) ) {
rank: 51
score: 98.84107123480902
patch: } else { return str . equals }
rank: 51
score: 98.795166015625
patch: } + ch 1 . to CaMeL String ( ) ;
rank: 51
score: 98.56439971923828
patch: } else { return null ; }
rank: 51
score: 98.4344711303711
patch: } } } if } } }
rank: 52
score: 98.9154052734375
patch: } if ( ch == null ) {
rank: 52
score: 98.91160074869792
patch: } } return Boolean . value CaMeL Of ( } ;
rank: 52
score: 98.8483417217548
patch: } switch ( str . char CaMeL At ( $NUMBER$ ) )
rank: 52
score: 98.82607014973958
patch: } / * } }
rank: 52
score: 98.79417928059895
patch: fail ( str . to CaMeL String ( ) ) ;
rank: 52
score: 98.56401062011719
patch: } else { if } * }
rank: 52
score: 98.55049438476563
patch: return str . char CaMeL At ( 0 ) == str . char CaMeL At ( 1 ) ;
rank: 52
score: 98.42433384486607
patch: } } } } } *
rank: 52
score: 98.39878336588542
patch: } } * } }
rank: 53
score: 98.91017659505208
patch: } else if ( str . compare CaMeL To ( }
rank: 53
score: 98.84824782151442
patch: } if ( str . char CaMeL At ( 0 ) instanceof
rank: 53
score: 98.84787423270089
patch: } switch ( str ) {
rank: 53
score: 98.82200113932292
patch: } } if ( str . length }
rank: 53
score: 98.79124959309895
patch: } . char CaMeL At ( 0 ) == $STRING$ ;
rank: 53
score: 98.56124877929688
patch: } else { if null ; }
rank: 53
score: 98.54547991071429
patch: } return str . char CaMeL At ( $NUMBER$ ) == $STRING$ ;
rank: 53
score: 98.42415618896484
patch: } } if } ; / /
rank: 53
score: 98.39759318033855
patch: } } } ) {
rank: 54
score: 98.90994027944711
patch: } else if ( Character . is CaMeL Na CaMeL N }
rank: 54
score: 98.84629603794643
patch: } long ch = str . char CaMeL At ( 0 ) ;
rank: 54
score: 98.81936645507812
patch: } if ( str == null }
rank: 54
score: 98.54302978515625
patch: name = str . char CaMeL At ( 1 ) ;
rank: 54
score: 98.41404724121094
patch: } } } } } } *
rank: 54
score: 98.39625040690105
patch: } * / } }
rank: 55
score: 98.911279296875
patch: switch ( str . length ( ) . to CaMeL String ( ) )
rank: 55
score: 98.84555053710938
patch: } String char CaMeL At = str . char CaMeL At ( 0 ) ;
rank: 55
score: 98.81846110026042
patch: } if ( str . length ( }
rank: 55
score: 98.78043910435268
patch: } || str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 55
score: 98.55806477864583
patch: } if ( false )
rank: 55
score: 98.54015350341797
patch: } return str . last CaMeL Index CaMeL Of ( $STRING$ ) == 1 ;
rank: 55
score: 98.41287231445312
patch: } } if } / / ;
rank: 55
score: 98.39070347377232
patch: } } } ) } }
rank: 56
score: 98.90433443509616
patch: } } catch ( Clone CaMeL Not CaMeL Supported CaMeL Exception }
rank: 56
score: 98.84459686279297
patch: } this . str 0 = str . char CaMeL At ( 0 ) ;
rank: 56
score: 98.83870755709134
patch: } switch ( name . char CaMeL At ( 0 ) )
rank: 56
score: 98.81704711914062
patch: } if ( str }
rank: 56
score: 98.7789306640625
patch: } + ch 0 . char CaMeL At ( 0 ) ;
rank: 56
score: 98.55647495814732
patch: } else if } null ;
rank: 56
score: 98.41283162434895
patch: } } } } *
rank: 56
score: 98.38611857096355
patch: } else if null ;
rank: 57
score: 98.90726412259616
patch: } return System . err . to CaMeL String ( ) ;
rank: 57
score: 98.89804311899039
patch: } else if ( str . length ( ) == $NUMBER$ )
rank: 57
score: 98.81620570591518
patch: } } if ( str }
rank: 57
score: 98.77812056107955
patch: super . to CaMeL Boolean ( str ) ; }
rank: 57
score: 98.53696695963542
patch: return str . char CaMeL At ( 0 ) == $STRING$
rank: 57
score: 98.4115498860677
patch: } } / / ;
rank: 57
score: 98.38575962611607
patch: } } } } } false
rank: 58
score: 98.90724690755208
patch: } if ( str . length ( ) != $NUMBER$ )
rank: 58
score: 98.89788348858173
patch: } else if ( str . length ( ) == 0 )
rank: 58
score: 98.84253540039063
patch: } if ( str . length ( ) ;
rank: 58
score: 98.83530680338542
patch: } if ( ! str . to CaMeL
rank: 58
score: 98.81596544053819
patch: } else if ( str == $STRING$ }
rank: 58
score: 98.77674211774554
patch: } return value . char CaMeL At ( 0 ) == $STRING$ ;
rank: 58
score: 98.550732421875
patch: } if ( this . is CaMeL Empty }
rank: 58
score: 98.52951882102273
patch: return str . char CaMeL At ( 0 ) ;
rank: 58
score: 98.41087995256696
patch: } } if } = /
rank: 58
score: 98.38474818638393
patch: } } * } } }
rank: 59
score: 98.89552815755208
patch: if ( Character . is CaMeL Na CaMeL N ( }
rank: 59
score: 98.84176025390624
patch: } if ( str . length ( ) )
rank: 59
score: 98.81577555338542
patch: } else { System . out . }
rank: 59
score: 98.77646891276042
patch: } / * * *
rank: 59
score: 98.55037841796874
patch: } if ( ! . is CaMeL Empty }
rank: 59
score: 98.52884928385417
patch: return str . to CaMeL String ( ) == null ;
rank: 59
score: 98.4098892211914
patch: } } if } * / /
rank: 59
score: 98.38372124565973
patch: } } int } } } } }
rank: 60
score: 98.90281168619792
patch: } return Boolean . to CaMeL Boolean ( str . to CaMeL String ( ) ) ;
rank: 60
score: 98.83867853338069
patch: } switch ( ch . length ( ) ) {
rank: 60
score: 98.83376242897727
patch: } if ( str . length ( ) == )
rank: 60
score: 98.7760518391927
patch: } : str . char CaMeL At ( 0 ) ;
rank: 60
score: 98.54998101128473
patch: } else { if } * * /
rank: 60
score: 98.52802734375
patch: return str . length ( ) == 0 ;
rank: 60
score: 98.40786743164062
patch: } } } } } } =
rank: 60
score: 98.38298034667969
patch: } } int } } } }
rank: 61
score: 98.90030924479167
patch: if ( str . char CaMeL At ( 0 ) == $STRING$ ) {
rank: 61
score: 98.89183553059895
patch: } } return } . boolean CaMeL Value ( ) ;
rank: 61
score: 98.83853853665866
patch: } if ( str . length ( ) != 1 ) {
rank: 61
score: 98.83068033854167
patch: } if ( $STRING$ . equals CaMeL Ignore CaMeL Case ( str ) )
rank: 61
score: 98.81094021267361
patch: } else if ( str == null }
rank: 61
score: 98.77581232244319
patch: } + str . to CaMeL Object ( ) ;
rank: 61
score: 98.54612513950893
patch: } else / / * }
rank: 61
score: 98.40673828125
patch: } } if } if } }
rank: 61
score: 98.38109673394098
patch: } * / } } } } }
rank: 62
score: 98.89983575994319
patch: switch ( str . to CaMeL String ( ) )
rank: 62
score: 98.88746056189903
patch: } else if ( str . length ( ) > $NUMBER$ )
rank: 62
score: 98.83233642578125
patch: } switch ( $STRING$ ) {
rank: 62
score: 98.82860514322917
patch: } if ( str . to CaMeL String ( ) == null ) {
rank: 62
score: 98.80793980189732
patch: } } } * / }
rank: 62
score: 98.77389090401786
patch: : || str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 62
score: 98.54498969184027
patch: } if ( ! is CaMeL True }
rank: 62
score: 98.52268763950893
patch: } return str . char CaMeL At ( 0 ) != $STRING$ ;
rank: 62
score: 98.4065450032552
patch: } } } if }
rank: 62
score: 98.38018798828125
patch: } else { } } } } }
rank: 63
score: 98.89751642400569
patch: } } switch ( str . length ( ) )
rank: 63
score: 98.8865966796875
patch: } else if ( str . length ( ) > 1 )
rank: 63
score: 98.82802036830357
patch: } long str = str . char CaMeL At ( 0 ) ;
rank: 63
score: 98.80561828613281
patch: } } } } } * /
rank: 63
score: 98.76759690504808
patch: } + ch 1 . char CaMeL At ( 0 ) ;
rank: 63
score: 98.54340955946181
patch: } else if ( value . length }
rank: 63
score: 98.52166748046875
patch: url = str . char CaMeL At ( 0 ) ;
rank: 63
score: 98.40106964111328
patch: } } } } if } }
rank: 63
score: 98.37903849283855
patch: } else if true }
rank: 64
score: 98.89744466145834
patch: } return System . out . to CaMeL String ( str . char CaMeL
rank: 64
score: 98.88411088423295
patch: } else return Boolean . value CaMeL Of ( }
rank: 64
score: 98.8287841796875
patch: } str . char CaMeL At ( str . length ( ) ) ;
rank: 64
score: 98.82772064208984
patch: } if ( value == null )
rank: 64
score: 98.799755859375
patch: } } } ;
rank: 64
score: 98.76480712890626
patch: return str . to CaMeL String ( ) ;
rank: 64
score: 98.53620741102431
patch: } else { return } . value }
rank: 64
score: 98.51984514508929
patch: return ( str . to CaMeL String ( ) == null ) ;
rank: 64
score: 98.39990234375
patch: } } if } } System
rank: 64
score: 98.3753662109375
patch: } else { * /
rank: 65
score: 98.8821270282452
patch: } else if ( str . ends CaMeL With ( $STRING$ }
rank: 65
score: 98.82868957519531
patch: } int ch = this . str . char CaMeL At ( 0 ) ;
rank: 65
score: 98.79778180803571
patch: } } } } } )
rank: 65
score: 98.75813432173295
patch: } || str . char CaMeL At ( 0 )
rank: 65
score: 98.53497314453125
patch: } else / * * * /
rank: 65
score: 98.51779409555289
patch: return ( str . char CaMeL At ( 1 ) == $STRING$
rank: 65
score: 98.39947509765625
patch: } } if } } } *
rank: 66
score: 98.88947002704327
patch: if ( str . to CaMeL String ( ) == null )
rank: 66
score: 98.88097205528847
patch: } if ( Character . is CaMeL Lower CaMeL Case ( }
rank: 66
score: 98.79715401785714
patch: } else { } } }
rank: 66
score: 98.75684465680804
patch: } || str . char CaMeL At ( 0 ) != $STRING$ ;
rank: 66
score: 98.53270263671875
patch: } System . value CaMeL Of ( $STRING$ }
rank: 66
score: 98.51576741536458
patch: prefix = str . char CaMeL At ( 1 ) ;
rank: 66
score: 98.39689127604167
patch: } } / * /
rank: 66
score: 98.3720932006836
patch: } } } int } } }
rank: 67
score: 98.88782501220703
patch: } switch ( str . char CaMeL
rank: 67
score: 98.87636155348558
patch: } return $STRING$ . equals CaMeL Ignore CaMeL Case ( str }
rank: 67
score: 98.82423400878906
patch: } if ( ! str . char CaMeL At ( 1 ) == $STRING$ )
rank: 67
score: 98.78923204210069
patch: } } if ( str == null }
rank: 67
score: 98.75562395368304
patch: : return str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 67
score: 98.53143310546875
patch: } else * * * * /
rank: 67
score: 98.51242244944854
patch: } return str . to CaMeL String ( ) . length ( ) == 1 ;
rank: 67
score: 98.3931172688802
patch: } } if / /
rank: 67
score: 98.37151421440973
patch: } else } } } } } }
rank: 68
score: 98.88758196149554
patch: } return $STRING$ . char CaMeL At ( 1 ) == $STRING$ ;
rank: 68
score: 98.87449137369792
patch: } else if ( str . char CaMeL At ( }
rank: 68
score: 98.8239276592548
patch: } if ( str . char CaMeL At ( 1 ) ==
rank: 68
score: 98.82044328962054
patch: } double ch = str . char CaMeL At ( 0 ) ;
rank: 68
score: 98.78621128627232
patch: } if ( } } )
rank: 68
score: 98.75286865234375
patch: } && str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 68
score: 98.5279032389323
patch: } if ( * }
rank: 68
score: 98.36469268798828
patch: } else } } } } }
rank: 69
score: 98.86888538707386
patch: } else { return Boolean . value CaMeL Of }
rank: 69
score: 98.81662819602273
patch: } int length = str . length ( ) ;
rank: 69
score: 98.7841796875
patch: } else { return str . }
rank: 69
score: 98.75281778971355
patch: } catch ( $STRING$ )
rank: 69
score: 98.52407836914062
patch: } else { / * / }
rank: 69
score: 98.50836651141827
patch: } return str . to CaMeL String ( ) == $STRING$ ;
rank: 69
score: 98.39115905761719
patch: } } if } ; if }
rank: 69
score: 98.36360168457031
patch: } else { } } } }
rank: 70
score: 98.88484409877232
patch: to CaMeL Boolean ( str . to CaMeL String ( ) ) ;
rank: 70
score: 98.8657559481534
patch: } if ( Character . is CaMeL Digit ( }
rank: 70
score: 98.8162841796875
patch: } String str = str . to CaMeL String ( ) ;
rank: 70
score: 98.81593424479166
patch: } equals CaMeL Ignore CaMeL Case ( str . length ( ) ) ;
rank: 70
score: 98.78092447916667
patch: } * / * /
rank: 70
score: 98.74915422712054
patch: } + lower CaMeL Case . char CaMeL At ( 1 ) ;
rank: 70
score: 98.51491873604911
patch: } else / * * /
rank: 70
score: 98.50681559244792
patch: p = str . char CaMeL At ( 0 ) ;
rank: 70
score: 98.38578287760417
patch: } } if } {
rank: 70
score: 98.36070905412946
patch: } * / } } }
rank: 71
score: 98.88421630859375
patch: } return System . out . to CaMeL String ( str ) ;
rank: 71
score: 98.86432354266827
patch: } else if ( Character . is CaMeL Upper CaMeL Case }
rank: 71
score: 98.81610107421875
patch: } if ( ! str . char CaMeL At ( 0 ) ==
rank: 71
score: 98.81490885416666
patch: } char CaMeL At = str . char CaMeL At ( 1 ) ;
rank: 71
score: 98.78021240234375
patch: } } / * * }
rank: 71
score: 98.74778053977273
patch: } return str . to CaMeL String ( ) ;
rank: 71
score: 98.51480865478516
patch: } if ( } , } }
rank: 71
score: 98.50466918945312
patch: return str . char CaMeL At ( 0 ) == str . char CaMeL At ( 0 ) ;
rank: 71
score: 98.38262067522321
patch: } } } } } if
rank: 72
score: 98.8580322265625
patch: } else if ( str . ends CaMeL With ( }
rank: 72
score: 98.81517028808594
patch: } if ( ( str . char CaMeL At ( 0 ) == $STRING$ )
rank: 72
score: 98.81409708658855
patch: } int ch = str . length ( ) ) ;
rank: 72
score: 98.77899169921875
patch: } } . boolean CaMeL Value = }
rank: 72
score: 98.74618094308036
patch: } . char CaMeL At ( str . length ( ) ) ;
rank: 72
score: 98.51164245605469
patch: } if ( } } } }
rank: 72
score: 98.38053385416667
patch: } } / if }
rank: 72
score: 98.35987854003906
patch: } else { super . } (
rank: 73
score: 98.88204251802884
patch: } this . str . char CaMeL At ( $STRING$ ) ;
rank: 73
score: 98.85753284801136
patch: } } catch ( Number CaMeL Format CaMeL Exception }
rank: 73
score: 98.81212439903847
patch: } if ( ( str . length ( ) == 1 )
rank: 73
score: 98.80958140980114
patch: } switch ( value . length ( ) ) {
rank: 73
score: 98.76920572916667
patch: } else if ( str . } }
rank: 73
score: 98.7449618252841
patch: } return str . char CaMeL At ( 0 )
rank: 73
score: 98.51025390625
patch: } else = }
rank: 73
score: 98.50422014508929
patch: } return str . char CaMeL At ( 1 ) == str ;
rank: 73
score: 98.37691824776786
patch: } } } } } =
rank: 73
score: 98.35772705078125
patch: } * / } /
rank: 74
score: 98.88185471754808
patch: } switch ( String . value CaMeL Of ( str ) )
rank: 74
score: 98.8549471768466
patch: } return Boolean . value CaMeL Of ( } ;
rank: 74
score: 98.81065955528847
patch: } switch ( str . index CaMeL Of ( $STRING$ ) )
rank: 74
score: 98.80785023082386
patch: } if ( this . str == null ) {
rank: 74
score: 98.76800537109375
patch: } } if ( str . equals }
rank: 74
score: 98.74478149414062
patch: } + ch . char CaMeL At ( $NUMBER$ ) ;
rank: 74
score: 98.50837053571429
patch: } else { / * /
rank: 74
score: 98.50228881835938
patch: return str . length ( ) == 1 ;
rank: 74
score: 98.3759765625
patch: } } } / /
rank: 74
score: 98.35654025607639
patch: } } * } } } } }
rank: 75
score: 98.88084059495192
patch: switch ( str . char CaMeL At ( 0 ) ) {
rank: 75
score: 98.80955505371094
patch: } + str . length ( ) . char CaMeL At ( 0 ) ;
rank: 75
score: 98.80598667689732
patch: } switch ( str . length ( ) ) { case $STRING$ :
rank: 75
score: 98.76499720982143
patch: } else { return } }
rank: 75
score: 98.50162760416667
patch: ch = str . char CaMeL At ( 0 ) ;
rank: 75
score: 98.37574005126953
patch: } } } } = } }
rank: 75
score: 98.35445149739583
patch: } catch } } } } } }
rank: 76
score: 98.87853325737848
patch: } String . value CaMeL Of ( str . char CaMeL At ( 0 ) ) ;
rank: 76
score: 98.850341796875
patch: } if ( String CaMeL Utils . is CaMeL Blank ( }
rank: 76
score: 98.80907185872395
patch: } switch ( str . length ( ) + $NUMBER$ )
rank: 76
score: 98.76456124441964
patch: } } if ( } }
rank: 76
score: 98.5079345703125
patch: } if ( } ) ;
rank: 76
score: 98.501025390625
patch: this . str = str . char CaMeL At ( 0 ) ; }
rank: 76
score: 98.37493024553571
patch: } } / if } ;
rank: 76
score: 98.35107421875
patch: } super . } ( } ) ;
rank: 77
score: 98.87843322753906
patch: } if ( str . char CaMeL At ( 1 ) == $STRING$ ) {
rank: 77
score: 98.84886678059895
patch: } else if ( Boolean . value CaMeL Of ( }
rank: 77
score: 98.80855618990384
patch: } if ( System . get CaMeL Boolean ( $STRING$ ) )
rank: 77
score: 98.80582972935268
patch: } this . str = str . to CaMeL String ( ) ;
rank: 77
score: 98.73511759440105
patch: result = str . char CaMeL At ( 0 ) ;
rank: 77
score: 98.50743272569444
patch: } else { if } / / ;
rank: 77
score: 98.37323760986328
patch: } } if } + } }
rank: 77
score: 98.3477783203125
patch: } * } } /
rank: 78
score: 98.84820556640625
patch: } else if ( Double . value CaMeL Of ( }
rank: 78
score: 98.80050659179688
patch: } int char CaMeL At = str . char CaMeL At ( 1 ) ;
rank: 78
score: 98.7326993075284
patch: } = str . to CaMeL String ( ) ;
rank: 78
score: 98.50728934151786
patch: } * * * * /
rank: 78
score: 98.50072370256696
patch: return ( str . char CaMeL At ( 1 ) == $STRING$ )
rank: 78
score: 98.34740339006696
patch: } } } / } }
rank: 79
score: 98.87759399414062
patch: switch ( str . char CaMeL At ( $NUMBER$ ) )
rank: 79
score: 98.84758966619319
patch: } else if ( str . equals ( $STRING$ }
rank: 79
score: 98.8058837890625
patch: } if ( str . char CaMeL At ( 1 ) != $STRING$ )
rank: 79
score: 98.79879324776786
patch: } byte ch = str . char CaMeL At ( 0 ) ;
rank: 79
score: 98.72848510742188
patch: } ++ str . char CaMeL At ( 1 ) ;
rank: 79
score: 98.50458984375
patch: } else return }
rank: 79
score: 98.49978637695312
patch: return ( str . char CaMeL At ( 0 ) ==
rank: 79
score: 98.36858258928571
patch: } } if } ; System
rank: 79
score: 98.34665352957589
patch: } catch ( Exception } }
rank: 80
score: 98.84512094350961
patch: } if ( String CaMeL Utils . is CaMeL Empty ( }
rank: 80
score: 98.80576735276442
patch: } switch ( ch . char CaMeL At ( 0 ) )
rank: 80
score: 98.75668770926339
patch: } else { return true ;
rank: 80
score: 98.72815958658855
patch: str = str . to CaMeL String ( ) ; }
rank: 80
score: 98.5034688313802
patch: } else = null ;
rank: 80
score: 98.3683369954427
patch: } } if } Exception
rank: 80
score: 98.34629313151042
patch: } *
rank: 81
score: 98.87545572916666
patch: } return new str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 81
score: 98.84421950120192
patch: } return $STRING$ . equals CaMeL Ignore CaMeL Case ( } ;
rank: 81
score: 98.8049785907452
patch: } String ch = str . char CaMeL At ( 0 )
rank: 81
score: 98.79233022836539
patch: } ch = str . char CaMeL At ( 0 ) ;
rank: 81
score: 98.75181579589844
patch: } else if ( str == }
rank: 81
score: 98.72770552201705
patch: } + ch . to CaMeL Boolean ( ) ;
rank: 81
score: 98.50333077566964
patch: } if ( ! } }
rank: 81
score: 98.49772644042969
patch: return str . to CaMeL String ( ) . length ( ) == 0 ;
rank: 81
score: 98.36557442801339
patch: } } / if } /
rank: 81
score: 98.3458251953125
patch: } catch } $STRING$ }
rank: 82
score: 98.84317016601562
patch: } else if ( str . equals ( }
rank: 82
score: 98.80482991536458
patch: } switch ( str . length ( ) == 1 )
rank: 82
score: 98.79169573102679
patch: } Object ch = str . char CaMeL At ( 1 ) ;
rank: 82
score: 98.72654030539773
patch: } || str . length ( ) == 1 ;
rank: 82
score: 98.5029067993164
patch: } else { if null } }
rank: 82
score: 98.49747721354167
patch: } return str . char CaMeL At ( 0 ) == str . char CaMeL At ( 1 ) ;
rank: 82
score: 98.36536516462054
patch: } } if } } this
rank: 82
score: 98.34514702690973
patch: } } } / } } } }
rank: 83
score: 98.87471226283482
patch: } return System . err . to CaMeL String ( str ) ;
rank: 83
score: 98.8429463704427
patch: } else if ( Long . value CaMeL Of ( }
rank: 83
score: 98.78750610351562
patch: } switch ( this . str . char CaMeL At ( 0 ) ) {
rank: 83
score: 98.72621506911058
patch: } + ch ch . char CaMeL At ( 0 ) ;
rank: 83
score: 98.5020751953125
patch: } else * * * /
rank: 83
score: 98.49643179086539
patch: return str . char CaMeL At ( 0 ) == 0 ;
rank: 83
score: 98.36507742745536
patch: } } } } if }
rank: 83
score: 98.33604213169643
patch: } } } int } }
rank: 84
score: 98.87387520926339
patch: } return $STRING$ . char CaMeL At ( str . length ( )
rank: 84
score: 98.84127103365384
patch: } else if ( str . length ( ) > 0 )
rank: 84
score: 98.78632146661931
patch: } if ( this . str == $STRING$ ) {
rank: 84
score: 98.74835205078125
patch: } } else if ( }
rank: 84
score: 98.7259521484375
patch: str = str . char CaMeL At ( 1 ) ;
rank: 84
score: 98.50206841362848
patch: } if ( ! is CaMeL Interrupted }
rank: 84
score: 98.49607747395834
patch: } return str . char CaMeL At ( 0 ) == $STRING$ ; }
rank: 84
score: 98.36043003627232
patch: } } if } / ;
rank: 84
score: 98.33387247721355
patch: } else if false ;
rank: 85
score: 98.87387319711539
patch: } switch ( String . to CaMeL String ( str ) )
rank: 85
score: 98.84087665264423
patch: } else if ( str . boolean CaMeL Value ( ) )
rank: 85
score: 98.78224875710227
patch: } switch ( name . length ( ) ) {
rank: 85
score: 98.74630737304688
patch: } else { return true ; }
rank: 85
score: 98.724853515625
patch: return str . char CaMeL At ( 0 )
rank: 85
score: 98.49554912860577
patch: this . str = str . to CaMeL String ( ) ;
rank: 85
score: 98.35771833147321
patch: } } / / / /
rank: 85
score: 98.33257378472223
patch: } } } + } } } }
rank: 86
score: 98.83730061848958
patch: } else if ( str . length ( ) == }
rank: 86
score: 98.80079752604166
patch: } if ( str . char CaMeL At ( 0 ) == false )
rank: 86
score: 98.72092692057292
patch: } / * for (
rank: 86
score: 98.49970354352679
patch: } else * * * }
rank: 86
score: 98.49392264229911
patch: return ( str . char CaMeL At ( 0 ) == ) ;
rank: 86
score: 98.35366821289062
patch: } } if / ;
rank: 86
score: 98.32826232910156
patch: } } } + } } }
rank: 87
score: 98.86810302734375
patch: } return Boolean . to CaMeL Boolean ( str ) ;
rank: 87
score: 98.8349853515625
patch: } else if ( str == null || }
rank: 87
score: 98.77810668945312
patch: } this . str = str ;
rank: 87
score: 98.74450073242187
patch: } } * }
rank: 87
score: 98.49742296006944
patch: } else { / * * * }
rank: 87
score: 98.49355844350961
patch: return str . char CaMeL At ( 0 ) == null ;
rank: 87
score: 98.3529052734375
patch: } } } } / /
rank: 87
score: 98.32688395182292
patch: } catch false } }
rank: 88
score: 98.86676025390625
patch: switch ( String . length ( ) )
rank: 88
score: 98.83307439630681
patch: } super . to CaMeL Boolean ( } ) ;
rank: 88
score: 98.79932358685662
patch: } switch ( str . char CaMeL At ( 0 ) ) { case $NUMBER$ :
rank: 88
score: 98.77782093394886
patch: } super . to CaMeL Boolean ( ch ) ;
rank: 88
score: 98.74082438151042
patch: } else if ( str == $STRING$ )
rank: 88
score: 98.7156982421875
patch: } catch ( Illegal CaMeL State CaMeL Exception out ) {
rank: 88
score: 98.497314453125
patch: } else return true ;
rank: 88
score: 98.49293009440105
patch: return str . char CaMeL At ( 1 ) == $STRING$
rank: 88
score: 98.35172526041667
patch: } } if } ++
rank: 88
score: 98.32591247558594
patch: } * * } } } }
rank: 89
score: 98.8661358173077
patch: switch ( str . length ( ) . length ( ) )
rank: 89
score: 98.8324444110577
patch: } else if ( String CaMeL Utils . is CaMeL Empty }
rank: 89
score: 98.79918323863636
patch: } if ( $STRING$ . equals ( str ) )
rank: 89
score: 98.77570049579327
patch: } if ( str . length ( ) == null ) {
rank: 89
score: 98.73772321428571
patch: } * / * * }
rank: 89
score: 98.71421461838942
patch: fail ( str . char CaMeL At ( 1 ) ) ;
rank: 89
score: 98.49510955810547
patch: } else { if ( ! }
rank: 89
score: 98.49037272135416
patch: } return str . to CaMeL Char CaMeL Array ( ) == $STRING$ ;
rank: 89
score: 98.34872436523438
patch: } } if } } / ;
rank: 89
score: 98.32540893554688
patch: } else { } super . }
rank: 90
score: 98.8646484375
patch: to CaMeL Boolean ( str . char CaMeL At ( $NUMBER$ ) ) ;
rank: 90
score: 98.8323086825284
patch: } else if ( str . char CaMeL At }
rank: 90
score: 98.79869588216145
patch: } switch ( str . length ( ) == 0 )
rank: 90
score: 98.77416053185097
patch: } if ( str . length ( ) > $NUMBER$ ) {
rank: 90
score: 98.73438856336806
patch: } } . double CaMeL Value = }
rank: 90
score: 98.49473571777344
patch: } if ( value == null }
rank: 90
score: 98.49031829833984
patch: return str . char CaMeL At (
rank: 90
score: 98.34820556640625
patch: } } } } } = }
rank: 91
score: 98.83095481178977
patch: } else if ( str . index CaMeL Of }
rank: 91
score: 98.77288818359375
patch: } if ( super . to CaMeL Boolean ( str ) ) {
rank: 91
score: 98.73255072699652
patch: } else if ( str . trim }
rank: 91
score: 98.71234809027777
patch: } + str . trim ( ) ;
rank: 91
score: 98.49262237548828
patch: } else if } null false ;
rank: 91
score: 98.49013264973958
patch: s = str . char CaMeL At ( 0 ) ;
rank: 91
score: 98.33994838169643
patch: } } if } / System
rank: 91
score: 98.32470703125
patch: } } } } {
rank: 92
score: 98.86257498604911
patch: } return str . char CaMeL At ( 0 ) == null ;
rank: 92
score: 98.82933460582386
patch: } else if ( str . length ( ) }
rank: 92
score: 98.79777257582721
patch: to CaMeL Boolean ( str . char CaMeL At ( 0 ) == null ) ;
rank: 92
score: 98.77173868815105
patch: } this . str = str . length ( ) ;
rank: 92
score: 98.73158772786458
patch: } } ) ; }
rank: 92
score: 98.71202503551136
patch: } return out . to CaMeL String ( ) ;
rank: 92
score: 98.48955078125
patch: return str . char CaMeL At ( 1 ) == str . char CaMeL At ( $NUMBER$ ) ;
rank: 92
score: 98.48906114366319
patch: } else if ( value . equals }
rank: 92
score: 98.33966827392578
patch: } } if } * / ;
rank: 92
score: 98.32460239955357
patch: } } int } } }
rank: 93
score: 98.86152648925781
patch: to CaMeL Boolean ( str ) ;
rank: 93
score: 98.82894897460938
patch: } else if ( String CaMeL Utils . }
rank: 93
score: 98.7967041015625
patch: } if ( str . char CaMeL At ( 1 ) == null )
rank: 93
score: 98.72874620225694
patch: } } if ( str == null )
rank: 93
score: 98.48877970377605
patch: key = str . char CaMeL At ( 1 ) ;
rank: 93
score: 98.48830159505208
patch: } if ( ! is CaMeL Equals }
rank: 93
score: 98.33890206473214
patch: } } } if } ;
rank: 93
score: 98.32442220052083
patch: } else { / }
rank: 94
score: 98.86112670898437
patch: } switch ( value . length ( ) )
rank: 94
score: 98.82884803185097
patch: } else if ( str . to CaMeL Lower CaMeL Case }
rank: 94
score: 98.79628684303977
patch: } if ( str . equals ( $STRING$ ) )
rank: 94
score: 98.77154541015625
patch: } switch ( this . str . length ( ) )
rank: 94
score: 98.72802734375
patch: } else { return true }
rank: 94
score: 98.70943777901786
patch: } + ch = str . char CaMeL At ( 1 ) ;
rank: 94
score: 98.48813763786765
patch: return ( str . last CaMeL Index CaMeL Of ( $STRING$ ) == 0 ) ;
rank: 94
score: 98.4864273071289
patch: } else { if } } }
rank: 94
score: 98.31895446777344
patch: } } } } } } false
rank: 95
score: 98.82733623798077
patch: if ( } String CaMeL Utils . is CaMeL Blank ( }
rank: 95
score: 98.79589165581598
patch: } if ( value == null ) {
rank: 95
score: 98.77044677734375
patch: } switch ( str . length ( ) ) break ;
rank: 95
score: 98.72573416573661
patch: } * } } * /
rank: 95
score: 98.70589505709134
patch: } + ch = str . to CaMeL String ( ) ;
rank: 95
score: 98.48769124348958
patch: c = str . char CaMeL At ( 1 ) ;
rank: 95
score: 98.48524693080357
patch: } else { if null }
rank: 95
score: 98.32677459716797
patch: } } if } } if }
rank: 95
score: 98.31807454427083
patch: } } } ) } } } }
rank: 96
score: 98.85940755208334
patch: if ( str . char CaMeL At ( 1 ) == $STRING$ ) {
rank: 96
score: 98.82728068033855
patch: } else if ( str . length ( ) > }
rank: 96
score: 98.76961263020833
patch: e = str . char CaMeL At ( 0 ) ;
rank: 96
score: 98.72456577845982
patch: } } else { return }
rank: 96
score: 98.7045186360677
patch: } + str . ends CaMeL With ( $STRING$ ) ;
rank: 96
score: 98.48717041015625
patch: } return true ;
rank: 96
score: 98.4824447631836
patch: } if ( is CaMeL Empty }
rank: 96
score: 98.31591796875
patch: } catch } } } } }
rank: 97
score: 98.85791778564453
patch: if ( ch == null ) {
rank: 97
score: 98.82622736150569
patch: } if ( Double . value CaMeL Of ( }
rank: 97
score: 98.79422433035714
patch: } if ( ! str . char CaMeL At ( 0 ) )
rank: 97
score: 98.76921735491071
patch: } short ch = str . char CaMeL At ( 0 ) ;
rank: 97
score: 98.72437286376953
patch: } else if ( } } )
rank: 97
score: 98.70120675223214
patch: } return value . char CaMeL At ( 1 ) == $STRING$ ;
rank: 97
score: 98.48636300223214
patch: return str . char CaMeL At ( 0 ) == $STRING$ ) ;
rank: 97
score: 98.32582310267857
patch: } } } } = }
rank: 97
score: 98.31582205636161
patch: } } } + } }
rank: 98
score: 98.85697115384616
patch: } return System . to CaMeL Boolean ( str . char CaMeL
rank: 98
score: 98.79387555803571
patch: } int value = str . char CaMeL At ( 0 ) ;
rank: 98
score: 98.76919759114584
patch: } switch ( str . length ( ) ) { case $STRING$ : {
rank: 98
score: 98.69984788161058
patch: println ( str . char CaMeL At ( 0 ) ) ;
rank: 98
score: 98.48591883042279
patch: return str . char CaMeL At ( str . length ( ) ) == $STRING$ ;
rank: 98
score: 98.47979058159723
patch: } else if ( } , false }
rank: 98
score: 98.32571411132812
patch: } } } } =
rank: 98
score: 98.3156967163086
patch: } } } ) } } }
rank: 99
score: 98.85587252103366
patch: } switch ( String . to CaMeL Boolean ( str ) )
rank: 99
score: 98.81990872896634
patch: } } if ( $STRING$ . equals CaMeL Ignore CaMeL Case }
rank: 99
score: 98.79263070913461
patch: } if ( ! str . length ( ) == 0 )
rank: 99
score: 98.76631164550781
patch: } String char CaMeL At = str . char CaMeL At ( 1 ) ;
rank: 99
score: 98.72222900390625
patch: } } catch }
rank: 99
score: 98.48581949869792
patch: text = str . char CaMeL At ( 0 ) ;
rank: 99
score: 98.4776611328125
patch: } / * * * * }
rank: 99
score: 98.32453155517578
patch: } } } } } } if
rank: 100
score: 98.81807767427884
patch: } } catch ( Class CaMeL Not CaMeL Found CaMeL Exception }
rank: 100
score: 98.7924092610677
patch: } if ( $STRING$ . length ( ) == 0 )
rank: 100
score: 98.76482684795673
patch: } if ( this . str . length ( ) ) {
rank: 100
score: 98.7220703125
patch: } else } }
rank: 100
score: 98.694091796875
patch: } + ch 0 . to CaMeL Boolean ( ) ;
rank: 100
score: 98.48435465494792
patch: n = str . char CaMeL At ( 0 ) ;
rank: 100
score: 98.475390625
patch: } if ( is CaMeL Not CaMeL True }
rank: 100
score: 98.32426452636719
patch: } } if } } } =
rank: 101
score: 98.81760817307692
patch: } if ( str . equals CaMeL Ignore CaMeL Case ( }
rank: 101
score: 98.792138671875
patch: } int lower CaMeL Case = str . char CaMeL At ( 0 )
rank: 101
score: 98.76468234592014
patch: } str . char CaMeL At ( str . char CaMeL At ( 0 ) ) ;
rank: 101
score: 98.72195773654514
patch: } super . to CaMeL Boolean ( }
rank: 101
score: 98.69386985085227
patch: } || str . length ( ) == $NUMBER$ ;
rank: 101
score: 98.48244222005208
patch: id = str . char CaMeL At ( 0 ) ;
rank: 101
score: 98.47481960720486
patch: } else if ( key . length }
rank: 101
score: 98.32085309709821
patch: } } / if } }
rank: 101
score: 98.31309814453125
patch: } * else {
rank: 102
score: 98.81636555989583
patch: } if ( $STRING$ . equals CaMeL Ignore CaMeL Case }
rank: 102
score: 98.79030354817708
patch: } switch ( str . length ( ) + 1 )
rank: 102
score: 98.76441243489583
patch: } this . str = str . char CaMeL At ( $NUMBER$ ) ;
rank: 102
score: 98.71961127387152
patch: } if ( str . equals ( }
rank: 102
score: 98.6923319498698
patch: } finally { else {
rank: 102
score: 98.482421875
patch: return str . char CaMeL At ( 0 ) == $NUMBER$ ;
rank: 102
score: 98.31844075520833
patch: } } } } this
rank: 102
score: 98.31289672851562
patch: } } } / } } }
rank: 103
score: 98.85398763020834
patch: } if ( str . char CaMeL At ( $NUMBER$ ) == $STRING$ )
rank: 103
score: 98.8157626065341
patch: } if ( Boolean . value CaMeL Of ( }
rank: 103
score: 98.76212310791016
patch: } this . str 0 = str . char CaMeL At ( 1 ) ;
rank: 103
score: 98.6918194110577
patch: } + ch ch 0 . to CaMeL String ( ) ;
rank: 103
score: 98.48146275111607
patch: } return ch . char CaMeL At ( 0 ) == $STRING$ ;
rank: 103
score: 98.47367640904018
patch: } else if ( * }
rank: 103
score: 98.31812395368304
patch: } } } } } this
rank: 103
score: 98.31075032552083
patch: } catch false { }
rank: 104
score: 98.85312906901042
patch: switch ( String . value CaMeL Of ( str ) )
rank: 104
score: 98.81379699707031
patch: } else if ( } else {
rank: 104
score: 98.78722205528847
patch: } switch ( value . char CaMeL At ( 0 ) )
rank: 104
score: 98.76096017020089
patch: } boolean ch = str . char CaMeL At ( 0 ) ;
rank: 104
score: 98.71527099609375
patch: } } } } . * /
rank: 104
score: 98.69027273995536
patch: } + str = str . char CaMeL At ( 0 ) ;
rank: 104
score: 98.48093959263393
patch: return str . to CaMeL Char CaMeL Array ( ) == $STRING$ ;
rank: 104
score: 98.47322998046874
patch: } else { if ( } , false }
rank: 104
score: 98.31515066964286
patch: } } if } ; this
rank: 104
score: 98.30805121527777
patch: } } } } } } } /
rank: 105
score: 98.85293579101562
patch: } return this . str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 105
score: 98.78621128627232
patch: } if ( str . to CaMeL Object ( ) == null )
rank: 105
score: 98.76095145089286
patch: } long ch = str . char CaMeL At ( 1 ) ;
rank: 105
score: 98.71379089355469
patch: } if ( str . trim }
rank: 105
score: 98.688720703125
patch: } catch ( Illegal CaMeL State CaMeL Exception err ) {
rank: 105
score: 98.48086111886161
patch: return str . char CaMeL At ( 0 ] ) == $STRING$ ;
rank: 105
score: 98.47264946831598
patch: } if ( } this . } }
rank: 105
score: 98.31365203857422
patch: } } if } + / /
rank: 105
score: 98.30567932128906
patch: } } * / } } }
rank: 106
score: 98.85228382457386
patch: if ( str . length ( ) == 1 )
rank: 106
score: 98.76089041573661
patch: } else if ( str . length ( ) == 0 ) {
rank: 106
score: 98.7110595703125
patch: } } } } ) }
rank: 106
score: 98.68761268028847
patch: } + ch 0 . char CaMeL At ( 1 ) ;
rank: 106
score: 98.48084309895833
patch: return str . char CaMeL At ( 0 ) == $STRING$ ; break ;
rank: 106
score: 98.47026062011719
patch: } else { if } / }
rank: 106
score: 98.31219482421875
patch: } } if } else
rank: 106
score: 98.30550130208333
patch: } catch } ) }
rank: 107
score: 98.85218912760416
patch: } return System . out . to CaMeL Boolean ( str . char CaMeL
rank: 107
score: 98.81251017252605
patch: } if ( Character . is CaMeL Na CaMeL N }
rank: 107
score: 98.78340148925781
patch: } if ( str . char CaMeL At ( 0 ) == null ) {
rank: 107
score: 98.70082310267857
patch: } } } ) ; }
rank: 107
score: 98.68422444661458
patch: + str . char CaMeL At ( 0 ) ; }
rank: 107
score: 98.47954767400569
patch: return ( str . char CaMeL At ( 0 ) == str . char CaMeL At ( 1 ) ) ;
rank: 107
score: 98.3099365234375
patch: } } if } / * /
rank: 107
score: 98.3028564453125
patch: } } if ) {
rank: 108
score: 98.85052490234375
patch: } return System . out . get CaMeL Boolean ( $STRING$ ) ;
rank: 108
score: 98.81124877929688
patch: } } } . set CaMeL Value ( $STRING$ ) ;
rank: 108
score: 98.7833251953125
patch: } int lower CaMeL Case = str . char CaMeL At ( 1 ) ;
rank: 108
score: 98.759033203125
patch: } switch ( str . char CaMeL At ( $NUMBER$ ) ) {
rank: 108
score: 98.70082310267857
patch: } } else { } }
rank: 108
score: 98.68389423076923
patch: str = str . char CaMeL At ( 1 ) ; }
rank: 108
score: 98.47950090680804
patch: return return str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 108
score: 98.46519470214844
patch: } else { if false ; }
rank: 108
score: 98.29914855957031
patch: } / } } } } }
rank: 108
score: 98.29851531982422
patch: } } } } } } this
rank: 109
score: 98.84946695963542
patch: } return $STRING$ . to CaMeL Boolean ( str ) ;
rank: 109
score: 98.80910237630208
patch: } } return } . to CaMeL Boolean ( ) ;
rank: 109
score: 98.78254045758929
patch: to CaMeL Boolean ( str . char CaMeL At ( 0 ) ==
rank: 109
score: 98.6836649576823
patch: } = str . char CaMeL At ( 1 ) ;
rank: 109
score: 98.45944552951389
patch: } else { if } / * ;
rank: 109
score: 98.29786682128906
patch: } } if } . / /
rank: 109
score: 98.29509735107422
patch: } else { } this . }
rank: 110
score: 98.78218217329545
patch: } + str . char CaMeL At ( 0 )
rank: 110
score: 98.75784737723214
patch: } int char CaMeL At = str . length ( ) ) ;
rank: 110
score: 98.69750104631696
patch: } else { return false ;
rank: 110
score: 98.68345336914062
patch: } . char CaMeL At ( 0 ) ;
rank: 110
score: 98.4771395596591
patch: return ! str . length ( ) == 0 ;
rank: 110
score: 98.45923723493304
patch: } if ( ! null }
rank: 110
score: 98.2978286743164
patch: } } } } } if }
rank: 111
score: 98.84859212239583
patch: } if ( str . char CaMeL At ( 0 )
rank: 111
score: 98.80612182617188
patch: } else if ( str . equals ( $STRING$ ) )
rank: 111
score: 98.78160749162946
patch: } switch ( ! str . char CaMeL At ( 1 ) )
rank: 111
score: 98.75547688802084
patch: } if ( this . str . length ( ) == 0 ) {
rank: 111
score: 98.69739447699652
patch: } } if ( str != null }
rank: 111
score: 98.47701322115384
patch: return str . char CaMeL At ( $STRING$ ) == $STRING$ ;
rank: 111
score: 98.29773966471355
patch: } } / } /
rank: 111
score: 98.29441324869792
patch: } } if ) }
rank: 112
score: 98.84839806189903
patch: } return $STRING$ . to CaMeL Boolean ( str . char CaMeL
rank: 112
score: 98.78147786458334
patch: } switch ( ! str . char CaMeL At ( 0 ) ) {
rank: 112
score: 98.75470648871527
patch: } str . char CaMeL At ( str . char CaMeL At ( 1 ) ) ;
rank: 112
score: 98.47576032366071
patch: } return $STRING$ . equals CaMeL Ignore CaMeL Case ( str ) ;
rank: 112
score: 98.45486450195312
patch: } if ( is CaMeL Equals }
rank: 112
score: 98.29407610212054
patch: } } } } } System
rank: 112
score: 98.29395403180804
patch: } } } / } /
rank: 113
score: 98.84829275948661
patch: } String str = str . char CaMeL At ( $NUMBER$ ) ;
rank: 113
score: 98.80438842773438
patch: } super . to CaMeL Boolean ( str }
rank: 113
score: 98.78064836774554
patch: } int str = str . char CaMeL At ( 0 ) ;
rank: 113
score: 98.75282796223958
patch: } else if ( str . length ( ) ) {
rank: 113
score: 98.69193267822266
patch: } * / } } * /
rank: 113
score: 98.68263753255208
patch: } + str . starts CaMeL With ( $STRING$ ) ;
rank: 113
score: 98.45226033528645
patch: } if ( } )
rank: 113
score: 98.29383850097656
patch: } } if } } * /
rank: 114
score: 98.84714181082589
patch: } Object str = str . char CaMeL At ( 0 ) ;
rank: 114
score: 98.69124603271484
patch: } } } * } * /
rank: 114
score: 98.67999267578125
patch: : && str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 114
score: 98.45209612165179
patch: } else { * * /
rank: 114
score: 98.29316711425781
patch: } } if } = } =
rank: 114
score: 98.2911376953125
patch: } else { super . } }
rank: 115
score: 98.84699358258929
patch: } return str . char CaMeL At ( str . length ( )
rank: 115
score: 98.77991536458333
patch: } if ( str . char CaMeL At ( 0 ) == 0 )
rank: 115
score: 98.7518780048077
patch: } switch ( str . length ( ) ) return false ;
rank: 115
score: 98.68919542100694
patch: } else if ( str != null }
rank: 115
score: 98.67987060546875
patch: } : = str . to CaMeL String ( ) ;
rank: 115
score: 98.47361246744792
patch: } return str . char CaMeL At ( 0 ) ;
rank: 115
score: 98.45162963867188
patch: } else { if ( true }
rank: 115
score: 98.2923075358073
patch: } } * / /
rank: 115
score: 98.29034423828125
patch: } } } false }
rank: 116
score: 98.84587751116071
patch: if ( str . char CaMeL At ( $NUMBER$ ) == $STRING$ )
rank: 116
score: 98.80180220170455
patch: } } . set CaMeL Value ( $STRING$ ) ;
rank: 116
score: 98.77945963541667
patch: } switch ( str . length ( ) - 1 )
rank: 116
score: 98.75169020432692
patch: } name = str . char CaMeL At ( 0 ) ;
rank: 116
score: 98.68815612792969
patch: } return }
rank: 116
score: 98.47234637920673
patch: } return str . char CaMeL At ( 0 ) == $STRING$
rank: 116
score: 98.45124647352431
patch: } if ( } , } ) ;
rank: 116
score: 98.2900161743164
patch: } * if } } } }
rank: 116
score: 98.28958892822266
patch: } } if } ++ } }
rank: 117
score: 98.80169677734375
patch: } } if ( Character . is CaMeL Whitespace ( }
rank: 117
score: 98.77855727251838
patch: } if ( ! str . char CaMeL At ( 0 ) == $STRING$ ) {
rank: 117
score: 98.75006866455078
patch: } if ( str . index CaMeL Of ( $STRING$ ) == 1 ) {
rank: 117
score: 98.68802218967014
patch: } else if ( } } } )
rank: 117
score: 98.67759195963542
patch: } + ch . length ( ) ;
rank: 117
score: 98.471923828125
patch: return str . char CaMeL At ( 1 ) ;
rank: 117
score: 98.44776153564453
patch: } else / / * * /
rank: 117
score: 98.28926595052083
patch: } * / / }
rank: 117
score: 98.28718566894531
patch: } } if } = } *
rank: 118
score: 98.8447977701823
patch: } return $STRING$ . to CaMeL String ( str ) ;
rank: 118
score: 98.80080942007211
patch: } } catch ( No CaMeL Such CaMeL Method CaMeL Exception }
rank: 118
score: 98.77830595128677
patch: to CaMeL Boolean ( str . char CaMeL At ( 1 ) == $STRING$ ) ;
rank: 118
score: 98.74925231933594
patch: } return str . char CaMeL At ( str . length ( ) ) ;
rank: 118
score: 98.6875
patch: } for ( int }
rank: 118
score: 98.67718505859375
patch: } catch ( FALSE ) {
rank: 118
score: 98.47168840680804
patch: return str . last CaMeL Index CaMeL Of ( ) == 0 ;
rank: 118
score: 98.44749232700893
patch: } else if ( true }
rank: 118
score: 98.28847249348958
patch: } else if 0 ;
rank: 118
score: 98.28482055664062
patch: } } if * /
rank: 119
score: 98.7978985126202
patch: } else { super . to CaMeL Boolean ( str ) ;
rank: 119
score: 98.77577903053977
patch: } switch ( str . length ( ) $NUMBER$ )
rank: 119
score: 98.7490234375
patch: } if ( str . length ( ) != $NUMBER$ ) {
rank: 119
score: 98.6817398071289
patch: } / * } } * /
rank: 119
score: 98.67630440848214
patch: } && str . char CaMeL At ( 0 ) != $STRING$ ;
rank: 119
score: 98.46935221354167
patch: } return str . last CaMeL Index CaMeL Of ( ) == 0 ;
rank: 119
score: 98.44562530517578
patch: } if ( this . } }
rank: 119
score: 98.28826226128473
patch: } * * } } } } }
rank: 119
score: 98.28465924944196
patch: } } if } } *
rank: 120
score: 98.84201229319854
patch: } return $STRING$ . to CaMeL String ( ) . to CaMeL String ( ) ;
rank: 120
score: 98.79695638020833
patch: } else if ( String CaMeL Utils . matches ( }
rank: 120
score: 98.77566528320312
patch: } if ( str . char CaMeL At ( 0 ) != $STRING$ ) {
rank: 120
score: 98.74815150669643
patch: } else if ( str . length ( ) == 1 ) {
rank: 120
score: 98.67514272836539
patch: } + ch 1 . char CaMeL At ( 1 ) ;
rank: 120
score: 98.44528634207589
patch: } else { if null ;
rank: 120
score: 98.28241729736328
patch: } } if } } ; /
rank: 120
score: 98.28193010602679
patch: } / / * / /
rank: 121
score: 98.84149639423077
patch: } switch ( System . to CaMeL String ( str ) )
rank: 121
score: 98.79662146935097
patch: if ( } String CaMeL Utils . is CaMeL Empty ( }
rank: 121
score: 98.77501678466797
patch: } if ( str . to CaMeL
rank: 121
score: 98.747998046875
patch: } if ( this . str . length ( ) == 1 ) {
rank: 121
score: 98.67668914794922
patch: } } if ( str . }
rank: 121
score: 98.6721942608173
patch: result = str . char CaMeL At ( 0 ) ; }
rank: 121
score: 98.4681396484375
patch: } if ( str == null ) { return false ;
rank: 121
score: 98.44493272569444
patch: } else { if } / * }
rank: 121
score: 98.28126017252605
patch: } } / 1 ;
rank: 121
score: 98.2786865234375
patch: } } } if } /
rank: 122
score: 98.8410400390625
patch: } return System . err . to CaMeL String ( str . char CaMeL
rank: 122
score: 98.79656982421875
patch: } else if ( $STRING$ . equals ( str ) )
rank: 122
score: 98.77488014914773
patch: } if ( str . length ( ) != )
rank: 122
score: 98.67520904541016
patch: } * } } } * /
rank: 122
score: 98.67112379807692
patch: } || str . to CaMeL String ( ) == $STRING$ ;
rank: 122
score: 98.46776326497395
patch: return str . to CaMeL String ( ) == $STRING$ ;
rank: 122
score: 98.44338989257812
patch: } else return false }
rank: 122
score: 98.2809814453125
patch: } catch 0 ;
rank: 122
score: 98.27804565429688
patch: } } if } ; = }
rank: 123
score: 98.84062848772321
patch: } return Boolean . value CaMeL Of ( str . length ( )
rank: 123
score: 98.79349975585937
patch: } } finally { String CaMeL Utils . }
rank: 123
score: 98.7460225423177
patch: } if ( str . length ( ) == $STRING$ )
rank: 123
score: 98.67475891113281
patch: } if ( str != null }
rank: 123
score: 98.67107599431819
patch: } System . out . case ( $STRING$ ) ;
rank: 123
score: 98.46743539663461
patch: return $STRING$ . char CaMeL At ( 0 ) == $STRING$ ;
rank: 123
score: 98.27931431361607
patch: } else { super . }
rank: 123
score: 98.27515869140625
patch: } } / }
rank: 124
score: 98.83867730034723
patch: } return $STRING$ . char CaMeL At ( str . char CaMeL At ( 0 ) ;
rank: 124
score: 98.79259314903847
patch: } if ( str . starts CaMeL With ( $STRING$ ) )
rank: 124
score: 98.77422626201923
patch: } if ( ! str . length ( ) == 1 )
rank: 124
score: 98.74456787109375
patch: } switch ( str . length ( ) ) { {
rank: 124
score: 98.67338344029018
patch: } } / * * /
rank: 124
score: 98.46742757161458
patch: return str . char CaMeL At ( ) == $STRING$ ;
rank: 124
score: 98.44127546037946
patch: } else / false * }
rank: 124
score: 98.27779134114583
patch: } } } System . } } }
rank: 124
score: 98.27352142333984
patch: } } if } if } ;
rank: 125
score: 98.83820134943181
patch: } return Boolean . value CaMeL Of ( str .
rank: 125
score: 98.79232083834134
patch: } else { return Boolean . value CaMeL Of ( } }
rank: 125
score: 98.7738749186198
patch: } switch ( str . to CaMeL Object ( ) )
rank: 125
score: 98.74437366832386
patch: } if ( str . length ( ) == ;
rank: 125
score: 98.67308807373047
patch: } if ( str . } }
rank: 125
score: 98.6674296061198
patch: } . char CaMeL At ( 1 ) == $STRING$ ;
rank: 125
score: 98.46661376953125
patch: return str . char CaMeL At ( 0 ) == str . char CaMeL At ( $NUMBER$ ) ;
rank: 125
score: 98.44119698660714
patch: } / * * / }
rank: 125
score: 98.27740478515625
patch: } } } false ;
rank: 125
score: 98.27241516113281
patch: } } } } } } -
rank: 126
score: 98.78909067007211
patch: } else { return str . equals CaMeL Ignore CaMeL Case }
rank: 126
score: 98.77297973632812
patch: } switch ( log . to CaMeL String ( ) )
rank: 126
score: 98.74416097005208
patch: } switch ( str . length ( ) ) { }
rank: 126
score: 98.67300851004464
patch: } if ( str . }
rank: 126
score: 98.66573392427884
patch: } : = str . char CaMeL At ( 1 ) ;
rank: 126
score: 98.466064453125
patch: } return str . char CaMeL At ( 1 ) != $STRING$ ;
rank: 126
score: 98.44095611572266
patch: } if ( } , true }
rank: 126
score: 98.27628580729167
patch: } * if } } } } }
rank: 126
score: 98.27178083147321
patch: } } if } ; *
rank: 127
score: 98.78850763494319
patch: } return Boolean . value CaMeL Of ( str }
rank: 127
score: 98.77115885416667
patch: } switch ( value )
rank: 127
score: 98.74274444580078
patch: } if ( str . index CaMeL Of ( $STRING$ ) == 0 ) {
rank: 127
score: 98.66797746930804
patch: } * / if ( }
rank: 127
score: 98.66375732421875
patch: } + str . last CaMeL Index CaMeL Of ( str ) ;
rank: 127
score: 98.46549987792969
patch: return ! str . to CaMeL String ( ) . equals ( $STRING$ ) ;
rank: 127
score: 98.44072614397321
patch: } else { * * }
rank: 127
score: 98.2734146118164
patch: } * * / } } }
rank: 128
score: 98.83604329427084
patch: } switch ( String CaMeL Utils . to CaMeL Boolean ( str ) )
rank: 128
score: 98.78380408653847
patch: } else if ( str . length ( ) < $NUMBER$ )
rank: 128
score: 98.77103678385417
patch: } if ( str . length ( ) instanceof String )
rank: 128
score: 98.74135916573661
patch: } float ch = str . char CaMeL At ( 0 ) ;
rank: 128
score: 98.66530354817708
patch: } } } } } . * /
rank: 128
score: 98.66341727120536
patch: } && str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 128
score: 98.46357421875
patch: return ( str . char CaMeL At ( 0 ) == str ) ;
rank: 128
score: 98.43931274414062
patch: } else { if } * * * /
rank: 128
score: 98.27317301432292
patch: } catch ( ) {
rank: 128
score: 98.27088928222656
patch: } } if } ; / ;
rank: 129
score: 98.78334738991477
patch: } } catch ( Null CaMeL Pointer CaMeL Exception }
rank: 129
score: 98.7689678485577
patch: } switch ( Integer . to CaMeL String ( str ) )
rank: 129
score: 98.74009352463942
patch: } if ( str . length ( ) >= 0 ) {
rank: 129
score: 98.66241455078125
patch: } catch ( Number CaMeL Format CaMeL Exception ch ) {
rank: 129
score: 98.66156005859375
patch: } if ( $STRING$ . equals ( }
rank: 129
score: 98.46294487847223
patch: } return str . char CaMeL At ( str . length ( ) ) == $STRING$ ;
rank: 129
score: 98.2727762858073
patch: } } if ) ;
rank: 129
score: 98.26968383789062
patch: } } if } / } }
rank: 130
score: 98.83457318474265
patch: } return to CaMeL Boolean ( str . char CaMeL At ( 0 ) ) ;
rank: 130
score: 98.7396484375
patch: } super . to CaMeL Boolean ( str . length ( ) ) ;
rank: 130
score: 98.66237967354911
patch: } catch ( TRUE ) {
rank: 130
score: 98.65811593191964
patch: } } / * } }
rank: 130
score: 98.438818359375
patch: } if } }
rank: 130
score: 98.27172088623047
patch: } finally { this . } }
rank: 130
score: 98.26790073939732
patch: } } / / = }
rank: 131
score: 98.8335848721591
patch: } return $STRING$ . char CaMeL At ( str .
rank: 131
score: 98.78102805397727
patch: } else if ( Character . is CaMeL Whitespace }
rank: 131
score: 98.76820882161458
patch: } switch ( ch . to CaMeL String ( ) )
rank: 131
score: 98.66169877485795
patch: } || str . length ( ) == 0 ;
rank: 131
score: 98.65797424316406
patch: } } System . out . }
rank: 131
score: 98.43775939941406
patch: } else if ( } ) {
rank: 131
score: 98.27008056640625
patch: } * * / } /
rank: 131
score: 98.26740264892578
patch: } } if } = / }
rank: 132
score: 98.83272298177083
patch: } char . char CaMeL At ( 1 ) . char CaMeL At ( 1 ) ;
rank: 132
score: 98.78020770733173
patch: } else if ( str . compare CaMeL To ( $STRING$ }
rank: 132
score: 98.76811000279018
patch: } switch ( str . length ( ) ) { case 1 :
rank: 132
score: 98.7373758951823
patch: e = str . char CaMeL At ( 1 ) ;
rank: 132
score: 98.65966796875
patch: } catch ( Number CaMeL Format CaMeL Exception }
rank: 132
score: 98.65715026855469
patch: } this . } } ) ;
rank: 132
score: 98.46209716796875
patch: x = str . char CaMeL At ( 0 ) ;
rank: 132
score: 98.43643188476562
patch: } if ( is CaMeL Numeric }
rank: 132
score: 98.26646423339844
patch: } } if } ; } /
rank: 133
score: 98.83206176757812
patch: switch ( String . to CaMeL String ( str ) )
rank: 133
score: 98.77609252929688
patch: } else return Boolean . value CaMeL Of ( } ;
rank: 133
score: 98.73695203993056
patch: } if ( value == $STRING$ ) {
rank: 133
score: 98.65934753417969
patch: } / ?
rank: 133
score: 98.65615234375
patch: } / } }
rank: 133
score: 98.43630981445312
patch: } else * * /
rank: 133
score: 98.26750946044922
patch: } else if ( } } }
rank: 133
score: 98.26644134521484
patch: } } if } / ; /
rank: 134
score: 98.83131626674107
patch: if ( str . char CaMeL At ( 0 ) != $STRING$ )
rank: 134
score: 98.766845703125
patch: } if ( str . char CaMeL At ( 0 ) instanceof String )
rank: 134
score: 98.73556518554688
patch: } int ch = this . str . char CaMeL At ( 1 ) ;
rank: 134
score: 98.65760387073864
patch: + str . char CaMeL At ( 1 ) ;
rank: 134
score: 98.65604400634766
patch: } } if ( } } )
rank: 134
score: 98.46151878720238
patch: } return str . char CaMeL At ( 0 ) == str . char CaMeL At ( 0 ) ;
rank: 134
score: 98.43470458984375
patch: return false ; }
rank: 134
score: 98.26723225911458
patch: } catch 0 ; }
rank: 134
score: 98.2662353515625
patch: } } / if } } }
rank: 135
score: 98.77388509114583
patch: } else if ( str != null )
rank: 135
score: 98.76625413161058
patch: } switch ( ! str . to CaMeL String ( ) )
rank: 135
score: 98.65513392857143
patch: : || str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 135
score: 98.65336608886719
patch: } if ( } } } )
rank: 135
score: 98.4615119485294
patch: return ! str . to CaMeL String ( ) . length ( ) == 0 ;
rank: 135
score: 98.43433489118304
patch: } else { if } else
rank: 135
score: 98.26697649274554
patch: } * * / / }
rank: 135
score: 98.26593017578125
patch: } } if } false
rank: 136
score: 98.83005777994792
patch: } return Boolean . get CaMeL Boolean ( str ) ;
rank: 136
score: 98.77231852213542
patch: } * / return Boolean . value CaMeL Of ( }
rank: 136
score: 98.76575520833333
patch: } if ( System . to CaMeL String ( str ) == null )
rank: 136
score: 98.73551722935268
patch: } int ch = str . char CaMeL At ( $NUMBER$ ) ;
rank: 136
score: 98.652587890625
patch: } / * * } }
rank: 136
score: 98.65165201822917
patch: } catch ( Illegal CaMeL Argument CaMeL Exception ch ) {
rank: 136
score: 98.46121419270834
patch: return str . last CaMeL Index CaMeL Of ( str ) == 0 ;
rank: 136
score: 98.43402862548828
patch: } else if } * / ;
rank: 136
score: 98.26656494140624
patch: } catch true ;
rank: 136
score: 98.26266479492188
patch: } } } } } / /
rank: 137
score: 98.82972935267857
patch: } return System . out . get CaMeL Boolean ( str ) ;
rank: 137
score: 98.772216796875
patch: } } return false ;
rank: 137
score: 98.73506927490234
patch: } switch ( this . str . char CaMeL At ( 1 ) ) {
rank: 137
score: 98.65228949652777
patch: } } } } } } ) ;
rank: 137
score: 98.6512451171875
patch: } + ch ch . char CaMeL At ( 1 ) ;
rank: 137
score: 98.46109008789062
patch: return ( str . length ( ) == 0 ) ;
rank: 137
score: 98.43327501085069
patch: } else { if ( } * }
rank: 137
score: 98.26422119140625
patch: } / * / /
rank: 137
score: 98.25799560546875
patch: } } } } } } Exception
rank: 138
score: 98.8295036764706
patch: } char . char CaMeL At ( str . char CaMeL At ( 0 ) )
rank: 138
score: 98.77103365384616
patch: } else { return Boolean . TRUE . equals ( } ;
rank: 138
score: 98.76395089285714
patch: } if ( str . char CaMeL At ( 0 ) == )
rank: 138
score: 98.73184640066964
patch: } double ch = str . char CaMeL At ( 1 ) ;
rank: 138
score: 98.65087890625
patch: } + str . char CaMeL At ( 0 ) ; else {
rank: 138
score: 98.46041165865384
patch: return str . char CaMeL At ( 0 ) == ) ;
rank: 138
score: 98.43263244628906
patch: } / * * * / }
rank: 138
score: 98.26300048828125
patch: } * / /
rank: 138
score: 98.25686645507812
patch: } } if } = * }
rank: 139
score: 98.82898627387152
patch: switch ( name . length ( ) )
rank: 139
score: 98.77059326171874
patch: } else if ( str != null ) {
rank: 139
score: 98.76215006510417
patch: } if ( str . char CaMeL At ( 0 ) != null )
rank: 139
score: 98.73070179332386
patch: } str . char CaMeL At ( 0 ) ;
rank: 139
score: 98.65015520368304
patch: } || str . char CaMeL At ( $NUMBER$ ) == $STRING$ ;
rank: 139
score: 98.64949544270833
patch: } } ) * /
rank: 139
score: 98.45960998535156
patch: return str . to CaMeL String ( ) . length ( ) == 1 ;
rank: 139
score: 98.43244764539931
patch: } else { if } / * /
rank: 139
score: 98.26290457589286
patch: } } } System . }
rank: 139
score: 98.25634765625
patch: } } / / / ;
rank: 140
score: 98.82798073508523
patch: } return $STRING$ . boolean CaMeL Value ( ) ;
rank: 140
score: 98.770263671875
patch: } else if ( $STRING$ . starts CaMeL With ( str }
rank: 140
score: 98.7619857788086
patch: } if ( ! str . char CaMeL At ( 0 ) == null )
rank: 140
score: 98.73012131911058
patch: } if ( $STRING$ . length ( ) == 0 ) {
rank: 140
score: 98.64959247295673
patch: ex 0 = str . char CaMeL At ( 0 ) ;
rank: 140
score: 98.64508056640625
patch: } } } } ) . }
rank: 140
score: 98.4576885516827
patch: } return str . to CaMeL String ( ) == false ;
rank: 140
score: 98.43145073784723
patch: } if ( false ) . value ;
rank: 140
score: 98.26212565104167
patch: } else if 0 }
rank: 140
score: 98.25495910644531
patch: } } / / = } }
rank: 141
score: 98.82652994791667
patch: } return Boolean . Character . get CaMeL Boolean ( str . char CaMeL
rank: 141
score: 98.76953125
patch: } else if ( Character . is CaMeL Whitespace ( str }
rank: 141
score: 98.72967998798077
patch: } if ( str . length ( ) <= 0 ) {
rank: 141
score: 98.6478780110677
patch: } + ch 1 . to CaMeL Boolean ( ) ;
rank: 141
score: 98.64475504557292
patch: } } return true ;
rank: 141
score: 98.4568732766544
patch: return ( str . last CaMeL Index CaMeL Of ( $STRING$ ) == 1 ) ;
rank: 141
score: 98.26204427083333
patch: } * * } }
rank: 141
score: 98.25460815429688
patch: } } ( } } } }
rank: 142
score: 98.82630504261364
patch: } . switch ( str . length ( ) )
rank: 142
score: 98.76893310546875
patch: } else if ( str . trim ( }
rank: 142
score: 98.72958170572916
patch: } if ( str . length ( ) ( ) == 0 ) {
rank: 142
score: 98.6467618075284
patch: return ( str . char CaMeL At ( 0 )
rank: 142
score: 98.45628662109375
patch: return str . char CaMeL At ( 1 ) == str . char CaMeL At ( 1 ) ;
rank: 142
score: 98.42849731445312
patch: } if ( } , } )
rank: 142
score: 98.26033528645833
patch: } catch / $STRING$ }
rank: 142
score: 98.25341796875
patch: } } if } / if }
rank: 143
score: 98.8258056640625
patch: } return System . err . to CaMeL Boolean ( str ) ;
rank: 143
score: 98.76839505709134
patch: } else if ( String CaMeL Utils . is CaMeL Blank }
rank: 143
score: 98.75763549804688
patch: } if ( ! str . length ( )
rank: 143
score: 98.72880336216518
patch: } String ch = str . char CaMeL At ( $NUMBER$ ) ;
rank: 143
score: 98.64509721235795
patch: } || str . char CaMeL At ( 1 )
rank: 143
score: 98.64094848632813
patch: } } } else
rank: 143
score: 98.45536804199219
patch: return ! str . to CaMeL String ( ) . equals ( str ) ;
rank: 143
score: 98.42720249720982
patch: } if ( false ) ;
rank: 143
score: 98.2584228515625
patch: } } } int } / } }
rank: 143
score: 98.25320434570312
patch: } } / / =
rank: 144
score: 98.82578125
patch: equals CaMeL Ignore CaMeL Case ( str ) ;
rank: 144
score: 98.76765950520833
patch: } else if ( Integer . value CaMeL Of ( }
rank: 144
score: 98.72650615985577
patch: } if ( str . length ( ) <= 1 ) {
rank: 144
score: 98.64422607421875
patch: } || str . char CaMeL At ( 1 ) != $STRING$ ;
rank: 144
score: 98.63898577008929
patch: } } } * } }
rank: 144
score: 98.45531548394098
patch: return ( str . to CaMeL String ( ) . length ( ) == 0 ) ;
rank: 144
score: 98.42644500732422
patch: } * * * * * /
rank: 144
score: 98.25722830636161
patch: } else } } } }
rank: 144
score: 98.2525405883789
patch: } } if } } / *
rank: 145
score: 98.8248291015625
patch: } return Boolean . Double . to CaMeL Boolean ( str ) ;
rank: 145
score: 98.76756702769886
patch: } else if ( str . length } else {
rank: 145
score: 98.75600179036458
patch: } if ( str . length ( ) > 0 )
rank: 145
score: 98.64336603338069
patch: } + str . char CaMeL At ( ) ;
rank: 145
score: 98.63874816894531
patch: } } super . } ) ;
rank: 145
score: 98.45404052734375
patch: return str . char CaMeL At ( 0 ) . char CaMeL At ( 1 ) == $STRING$ ;
rank: 145
score: 98.42605251736111
patch: } else if ( 0 == 0 }
rank: 145
score: 98.25716145833333
patch: } / * } /
rank: 145
score: 98.2515869140625
patch: } } if } public
rank: 146
score: 98.82476399739583
patch: } switch ( String CaMeL Buffer . to CaMeL String ( str ) )
rank: 146
score: 98.76725260416667
patch: } } if ( Float . value CaMeL Of ( }
rank: 146
score: 98.75579364483173
patch: } switch ( name . char CaMeL At ( 1 ) )
rank: 146
score: 98.64208984375
patch: : return str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 146
score: 98.6380126953125
patch: } return } }
rank: 146
score: 98.45383864182692
patch: return str . char CaMeL At ( 1 ) == 0 ;
rank: 146
score: 98.42536272321429
patch: } else / / * /
rank: 146
score: 98.2532958984375
patch: } * / / /
rank: 146
score: 98.25114440917969
patch: } } if } / / =
rank: 147
score: 98.8247299194336
patch: } return this . str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 147
score: 98.76697716346153
patch: } else if ( str . boolean CaMeL Value ( ) }
rank: 147
score: 98.75459289550781
patch: } if ( ! $STRING$ . equals CaMeL Ignore CaMeL Case ( str ) )
rank: 147
score: 98.72479248046875
patch: } else if ( str . length ( ) == $STRING$ ) {
rank: 147
score: 98.63794623480902
patch: } } if ( str . } }
rank: 147
score: 98.45286051432292
patch: } if ( str == null ) { return true ;
rank: 147
score: 98.42496066623264
patch: } else { return } . value ;
rank: 147
score: 98.2523193359375
patch: } else if null }
rank: 147
score: 98.24832153320312
patch: } } if / / / /
rank: 148
score: 98.82471381293402
patch: } return Boolean . parse CaMeL Boolean ( str . to CaMeL String ( ) ) ;
rank: 148
score: 98.76505220853366
patch: } else if ( str . length ( ) != $NUMBER$ )
rank: 148
score: 98.7534688313802
patch: } switch ( name . to CaMeL String ( ) )
rank: 148
score: 98.72226186899039
patch: } if ( str . length ( ) >= 1 ) {
rank: 148
score: 98.63885967548077
patch: } catch ( value . to CaMeL String ( ) ) {
rank: 148
score: 98.6354471842448
patch: } } ? * }
rank: 148
score: 98.42447916666667
patch: } if ( true )
rank: 148
score: 98.24884033203125
patch: } } if false }
rank: 148
score: 98.2480697631836
patch: } } if } if } /
rank: 149
score: 98.7647705078125
patch: } if } return Boolean . value CaMeL Of ( } ;
rank: 149
score: 98.72086827895221
patch: } return str . to CaMeL String ( ) . to CaMeL String ( ) ;
rank: 149
score: 98.63829549153645
patch: } catch ( Null CaMeL Pointer CaMeL Exception out ) {
rank: 149
score: 98.633544921875
patch: } / }
rank: 149
score: 98.45132649739584
patch: return str . char CaMeL At ( 1 ) == $STRING$ ; break ;
rank: 149
score: 98.24562072753906
patch: } } if } / / *
rank: 149
score: 98.2454833984375
patch: } } int } }
rank: 150
score: 98.76417032877605
patch: } else if } else
rank: 150
score: 98.72008338341347
patch: } equals CaMeL Ignore CaMeL Case ( str , $STRING$ ) ;
rank: 150
score: 98.63795979817708
patch: } catch ( Null CaMeL Argument CaMeL Exception out ) {
rank: 150
score: 98.6328837076823
patch: } } } else {
rank: 150
score: 98.45107421875
patch: return str . char CaMeL At ( 0 ) . char CaMeL At ( 0 ) == $STRING$ ;
rank: 150
score: 98.42233615451389
patch: } else * * * * * /
rank: 150
score: 98.24502563476562
patch: } if false } }
rank: 150
score: 98.24481201171875
patch: } } if } ; } }
rank: 151
score: 98.82317243303571
patch: char ch 0 = str . char CaMeL At ( 0 ) ;
rank: 151
score: 98.76386052911931
patch: } else if ( $STRING$ . equals ( str }
rank: 151
score: 98.74998474121094
patch: } else if ( str . char CaMeL At ( 0 ) == $STRING$ )
rank: 151
score: 98.63759765625
patch: } : else {
rank: 151
score: 98.63230387369792
patch: } } ? * /
rank: 151
score: 98.45052337646484
patch: this . str = str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 151
score: 98.42224993024554
patch: } if ( } } }
rank: 151
score: 98.24448067801339
patch: } * * * / /
rank: 151
score: 98.24303327287946
patch: } } } } / ;
rank: 152
score: 98.8231689453125
patch: } if ( String CaMeL Utils . get CaMeL Boolean ( str ) )
rank: 152
score: 98.7632305438702
patch: } } if ( Character . is CaMeL Na CaMeL N }
rank: 152
score: 98.74998168945312
patch: } switch ( get CaMeL Value ( ) )
rank: 152
score: 98.63755446213942
patch: ch 0 = str . char CaMeL At ( 0 ) ;
rank: 152
score: 98.63196818033855
patch: } } . * /
rank: 152
score: 98.44984019886364
patch: return str . char CaMeL At ( 0 ) ==
rank: 152
score: 98.42158508300781
patch: } if ( } } ) ;
rank: 152
score: 98.24417114257812
patch: } } } false {
rank: 152
score: 98.2411397298177
patch: } } / / *
rank: 153
score: 98.82256208147321
patch: } return System . err . get CaMeL Boolean ( str ) ;
rank: 153
score: 98.7486063639323
patch: } if ( $STRING$ . length ( ) == 1 )
rank: 153
score: 98.71917255108173
patch: } switch ( str . length ( ) ) return true ;
rank: 153
score: 98.6332499186198
patch: } : str . char CaMeL At ( 1 ) ;
rank: 153
score: 98.63158501519098
patch: } else if ( } } } }
rank: 153
score: 98.4215316772461
patch: } if ( ! } } }
rank: 153
score: 98.24293518066406
patch: } else if ( } ) ;
rank: 153
score: 98.24032592773438
patch: } } } } } / ;
rank: 154
score: 98.7609393780048
patch: } else if ( String . value CaMeL Of ( str }
rank: 154
score: 98.74750162760417
patch: } if ( System . get CaMeL Value ( $STRING$ ) == null )
rank: 154
score: 98.71902029854911
patch: } String value = str . char CaMeL At ( 0 ) ;
rank: 154
score: 98.63301225142045
patch: } || str . length ( ) != $NUMBER$ ;
rank: 154
score: 98.4189453125
patch: } else if ( 0 }
rank: 154
score: 98.2385482788086
patch: } } if / = } /
rank: 155
score: 98.76078287760417
patch: } if ( Character . is CaMeL Upper CaMeL Case }
rank: 155
score: 98.71842738560268
patch: } switch ( ch . char CaMeL At ( 0 ) ) {
rank: 155
score: 98.62930908203126
patch: } catch ( Illegal CaMeL Argument CaMeL Exception }
rank: 155
score: 98.62890014648437
patch: } } } )
rank: 155
score: 98.4490215594952
patch: return str . char CaMeL At ( 0 ) >= $STRING$ ;
rank: 155
score: 98.418701171875
patch: } else / false * * /
rank: 155
score: 98.24266706194196
patch: } catch false } } }
rank: 156
score: 98.82017164963942
patch: switch ( str . char CaMeL At ( 1 ) ) {
rank: 156
score: 98.75975623497597
patch: } else return $STRING$ . equals CaMeL Ignore CaMeL Case ( }
rank: 156
score: 98.74601745605469
patch: } + str . length ( ) . char CaMeL At ( 1 ) ;
rank: 156
score: 98.71763258713942
patch: } if ( str . length ( ) != $STRING$ ) {
rank: 156
score: 98.62887573242188
patch: } while ( }
rank: 156
score: 98.44855205829327
patch: return str . char CaMeL At ( 1 ) == null ;
rank: 156
score: 98.41841634114583
patch: } if ( ! is CaMeL Number }
rank: 156
score: 98.24200439453125
patch: } catch ) ;
rank: 156
score: 98.23668416341145
patch: } } / / }
rank: 157
score: 98.8198013305664
patch: to CaMeL Boolean ( str . char CaMeL At ( str . length ( )
rank: 157
score: 98.71724759615384
patch: } ch = str . char CaMeL At ( 1 ) ;
rank: 157
score: 98.62648518880208
patch: } catch ( Null CaMeL Pointer CaMeL Exception err ) {
rank: 157
score: 98.44810994466145
patch: url = str . char CaMeL At ( 1 ) ;
rank: 157
score: 98.41838921440973
patch: } if ( ! is CaMeL Defined }
rank: 157
score: 98.24152483258929
patch: } * if $STRING$ . }
rank: 157
score: 98.23600769042969
patch: } } if
rank: 158
score: 98.81976996527777
patch: } char . char CaMeL At ( $NUMBER$ ) . char CaMeL At ( 1 ) ;
rank: 158
score: 98.75831095377605
patch: } else if ( $STRING$ . compare CaMeL To ( }
rank: 158
score: 98.74557729867789
patch: } if ( log . to CaMeL String ( ) ) {
rank: 158
score: 98.62859429253473
patch: } } System . out . } }
rank: 158
score: 98.62606375558036
patch: } + lower CaMeL Case . char CaMeL At ( $NUMBER$ ) ;
rank: 158
score: 98.447998046875
patch: return str . char CaMeL At ( 1 ) == $STRING$ ) ;
rank: 158
score: 98.41728379991319
patch: } else { / * } * /
rank: 158
score: 98.23798285590277
patch: } catch false } } } } }
rank: 158
score: 98.23567962646484
patch: } } if } * } }
rank: 159
score: 98.81934703480114
patch: } this . to CaMeL Boolean ( str ) ;
rank: 159
score: 98.75816853841145
patch: } else if ( Character . is CaMeL Letter ( }
rank: 159
score: 98.74522986778847
patch: } if ( str . char CaMeL At ( 1 ) instanceof
rank: 159
score: 98.62823486328125
patch: } } if ( str . } )
rank: 159
score: 98.62594839242789
patch: } ch 0 = str . to CaMeL String ( ) ;
rank: 159
score: 98.44785719651442
patch: return str . char CaMeL At ( 0 ) == 1 ;
rank: 159
score: 98.41654750279018
patch: } if ( ! false }
rank: 159
score: 98.23787434895833
patch: } } catch ) {
rank: 159
score: 98.23550415039062
patch: } } if } ; * /
rank: 160
score: 98.81930977957589
patch: } return System . err . get CaMeL Boolean ( $STRING$ ) ;
rank: 160
score: 98.75722249348958
patch: } if ( str . starts CaMeL With ( $STRING$ }
rank: 160
score: 98.62700653076172
patch: } if ( $STRING$ . equals }
rank: 160
score: 98.62571364182692
patch: str 0 = str . char CaMeL At ( 0 ) ;
rank: 160
score: 98.44593157087054
patch: b = str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 160
score: 98.4164810180664
patch: } else { / false ; }
rank: 160
score: 98.23714870876736
patch: } } } System . next } }
rank: 160
score: 98.23514229910714
patch: } } } } } Exception
rank: 161
score: 98.81891276041667
patch: } return Boolean . Double . to CaMeL Boolean ( str . char CaMeL
rank: 161
score: 98.75522085336539
patch: } else if ( } . equals CaMeL Ignore CaMeL Case }
rank: 161
score: 98.7130126953125
patch: } byte ch = str . char CaMeL At ( 1 ) ;
rank: 161
score: 98.62611897786458
patch: } else { return $STRING$ . equals }
rank: 161
score: 98.44576687282986
patch: } return str . char CaMeL At (
rank: 161
score: 98.41490173339844
patch: } else if } } } ;
rank: 161
score: 98.23659939236111
patch: } * * / } } } }
rank: 161
score: 98.23306710379464
patch: } } / * / /
rank: 162
score: 98.81870339133523
patch: switch ( String . str . length ( ) )
rank: 162
score: 98.75510817307692
patch: } if ( String CaMeL Utils . starts CaMeL With ( }
rank: 162
score: 98.71196746826172
patch: } switch ( str . str . char CaMeL At ( 0 ) ) {
rank: 162
score: 98.62551443917411
patch: } } } / * }
rank: 162
score: 98.6252950032552
patch: } + str . char CaMeL At ( $STRING$ ) ;
rank: 162
score: 98.4142837524414
patch: } if ( ! == null }
rank: 162
score: 98.2364501953125
patch: } } * / } }
rank: 162
score: 98.232666015625
patch: } } if } ; ; /
rank: 163
score: 98.7545917217548
patch: } return Boolean . value CaMeL Of ( } . } ;
rank: 163
score: 98.74320765904018
patch: } if ( $STRING$ . to CaMeL String ( ) == null )
rank: 163
score: 98.71122233072917
patch: } switch ( ! str . length ( ) ) {
rank: 163
score: 98.62539672851562
patch: } else { boolean }
rank: 163
score: 98.62445068359375
patch: } catch ( Null CaMeL Argument CaMeL Exception err ) {
rank: 163
score: 98.44486490885417
patch: return str . last CaMeL Index CaMeL Of ( str ) == 1 ;
rank: 163
score: 98.41416422526042
patch: } / * * * * * /
rank: 163
score: 98.23606363932292
patch: } finally { } }
rank: 163
score: 98.2306137084961
patch: } } if } = null }
rank: 164
score: 98.81809369255515
patch: } return $STRING$ . char CaMeL At ( str . char CaMeL At ( 0 )
rank: 164
score: 98.75414100060097
patch: } if ( str . starts CaMeL With ( $STRING$ ) }
rank: 164
score: 98.74285888671875
patch: } if ( ! ch . equals ( $STRING$ ) )
rank: 164
score: 98.71035587086396
patch: } switch ( str . char CaMeL At ( 0 ) ) { case $STRING$ :
rank: 164
score: 98.62450408935547
patch: } else if ( } } else
rank: 164
score: 98.6241787997159
patch: } return str . char CaMeL At ( 1 )
rank: 164
score: 98.44338553292411
patch: return return str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 164
score: 98.41412353515625
patch: } else = false ;
rank: 164
score: 98.2346420288086
patch: } } } } } } null
rank: 164
score: 98.22795867919922
patch: } } if } ( } }
rank: 165
score: 98.8176602450284
patch: if ( str . length ( ) == 0 )
rank: 165
score: 98.75401722301136
patch: } else if ( Character . is CaMeL Digit }
rank: 165
score: 98.70979578354779
patch: } if ( str . length ( ) == str . length ( ) ) {
rank: 165
score: 98.62338256835938
patch: } } * / } * /
rank: 165
score: 98.44335123697917
patch: } return str . char CaMeL At ( 1 ) == $STRING$ ; }
rank: 165
score: 98.41349962022569
patch: } else { * * * * /
rank: 165
score: 98.23441859654018
patch: } catch ( $STRING$ || }
rank: 165
score: 98.22459411621094
patch: } } if } } } if
rank: 166
score: 98.81755514705883
patch: } str . char CaMeL At ( str . char CaMeL At ( 0 ) )
rank: 166
score: 98.75400797526042
patch: } else if ( String CaMeL Utils . equals ( }
rank: 166
score: 98.74125162760417
patch: } int str . char CaMeL At ( 0 ) ;
rank: 166
score: 98.70907389322916
patch: } if ( str . length ( ) ( ) == 1 ) {
rank: 166
score: 98.6229580965909
patch: return str . to CaMeL String ( ) ; }
rank: 166
score: 98.62251499720982
patch: } * / * * /
rank: 166
score: 98.44100952148438
patch: return ( str . char CaMeL At ( 1 ) ==
rank: 166
score: 98.41304524739583
patch: } else { if ( } , }
rank: 166
score: 98.2342529296875
patch: } else if this . }
rank: 166
score: 98.22391764322917
patch: } } } } System
rank: 167
score: 98.81736246744792
patch: } String . char CaMeL At ( str . char CaMeL At ( 0 ) ) ;
rank: 167
score: 98.7535869891827
patch: } else if ( Character . is CaMeL Digit ( str }
rank: 167
score: 98.74091186523438
patch: } if ( ! str . == null )
rank: 167
score: 98.44097579152961
patch: } return str . to CaMeL Char CaMeL Array ( ) . length ( ) == 0 ;
rank: 167
score: 98.41140311104911
patch: } if } } } ;
rank: 167
score: 98.23417445591518
patch: } catch false ; } }
rank: 167
score: 98.22242736816406
patch: } } if } = null ;
rank: 168
score: 98.81719501201923
patch: } return Boolean . parse CaMeL Boolean ( str . char CaMeL
rank: 168
score: 98.73957824707031
patch: } String ch 0 = $STRING$ ;
rank: 168
score: 98.70844060724431
patch: } switch ( str . size ( ) ) {
rank: 168
score: 98.6221923828125
patch: } * case $NUMBER$ :
rank: 168
score: 98.62118530273438
patch: } else { int }
rank: 168
score: 98.440185546875
patch: } return str . to CaMeL String ( ) == true ;
rank: 168
score: 98.40980021158855
patch: } else { break }
rank: 168
score: 98.22138323102679
patch: } } if / / /
rank: 169
score: 98.75089205228366
patch: } else { super . to CaMeL Boolean ( } ) ;
rank: 169
score: 98.7052978515625
patch: } switch ( str . length ( ) ) { case 1 : {
rank: 169
score: 98.62209647042411
patch: } catch ( $STRING$ ) {
rank: 169
score: 98.62106323242188
patch: } } / * } * /
rank: 169
score: 98.43947466681985
patch: return str . char CaMeL At ( 0 ) . length ( ) == $STRING$ ;
rank: 169
score: 98.40871175130208
patch: } else return null ;
rank: 169
score: 98.23200141059027
patch: } } * / } } } }
rank: 169
score: 98.2207260131836
patch: } } } } } } {
rank: 170
score: 98.81687298943015
patch: } return str . char CaMeL At ( str . char CaMeL At ( 0 )
rank: 170
score: 98.75051645132211
patch: } else if ( str . length ( ) <= $NUMBER$ )
rank: 170
score: 98.73673793247768
patch: } if ( ! str . char CaMeL At ( 1 ) ==
rank: 170
score: 98.7048672762784
patch: } switch ( $STRING$ . length ( ) ) {
rank: 170
score: 98.62196702223558
patch: } + str . char CaMeL At ( 0 ) ) ;
rank: 170
score: 98.62062290736607
patch: } else { String } }
rank: 170
score: 98.40813446044922
patch: } else { * * * /
rank: 170
score: 98.2318344116211
patch: } / / / / / /
rank: 170
score: 98.22072347005208
patch: } } = } }
rank: 171
score: 98.81572808159723
patch: } str . char CaMeL At ( $NUMBER$ ) . char CaMeL At ( 1 ) ;
rank: 171
score: 98.73646036783855
patch: } if ( ! str . equals ( $STRING$ ) )
rank: 171
score: 98.7044169108073
patch: } if ( str . equals ( $STRING$ ) ) {
rank: 171
score: 98.62065778459821
patch: } + str . char CaMeL At ( str . length ( )
rank: 171
score: 98.61987982855902
patch: } else if ( str != $STRING$ }
rank: 171
score: 98.43856201171874
patch: return str . char CaMeL At ( 1 ) . char CaMeL At ( 1 ) == $STRING$ ;
rank: 171
score: 98.40750461154514
patch: } if ( } ) . value ;
rank: 171
score: 98.23120989118304
patch: } * * } } }
rank: 171
score: 98.22013854980469
patch: } } if } . } }
rank: 172
score: 98.74884033203125
patch: } } finally { String CaMeL Utils . close ( }
rank: 172
score: 98.73616536458333
patch: } switch ( name . length ( )
rank: 172
score: 98.70389498197116
patch: } String char CaMeL At = str . length ( ) ;
rank: 172
score: 98.62020169771634
patch: } catch ( TRUE . to CaMeL String ( ) ) {
rank: 172
score: 98.61745876736111
patch: } if ( str . length } }
rank: 172
score: 98.43851470947266
patch: } return str . last CaMeL Index CaMeL Of ( str ) == 0 ;
rank: 172
score: 98.40536499023438
patch: } else * }
rank: 172
score: 98.22975667317708
patch: } / } } }
rank: 172
score: 98.2199935913086
patch: } } if } } = }
rank: 173
score: 98.81467692057292
patch: } return $STRING$ . to CaMeL Boolean ( str . to CaMeL String ( ) ) ;
rank: 173
score: 98.74833374023437
patch: if ( Character . is CaMeL Whitespace ( }
rank: 173
score: 98.61855643136161
patch: } return Boolean . value CaMeL Of ( str ) == $STRING$ ;
rank: 173
score: 98.60930040147569
patch: } } . int CaMeL Value = }
rank: 173
score: 98.43800862630208
patch: } return str . starts CaMeL With ( $STRING$ ) ;
rank: 173
score: 98.40359157986111
patch: } if ( } , false } }
rank: 173
score: 98.22676849365234
patch: } else if } int } }
rank: 173
score: 98.21678161621094
patch: } } if } / / }
rank: 174
score: 98.81419154575893
patch: if ( str . to CaMeL String ( ) == null ) {
rank: 174
score: 98.73434884207589
patch: } String ch = $STRING$ . char CaMeL At ( 0 ) ;
rank: 174
score: 98.6166104403409
patch: builder . to CaMeL Boolean ( str ) ; }
rank: 174
score: 98.60834418402777
patch: } else if ( str == } }
rank: 174
score: 98.436669921875
patch: return ( str . char CaMeL At ( $NUMBER$ ) == $STRING$ ) ;
rank: 174
score: 98.40296936035156
patch: } if ( is CaMeL Interrupted }
rank: 174
score: 98.22595977783203
patch: } / * } } } }
rank: 174
score: 98.216552734375
patch: } } if / = } }
rank: 175
score: 98.74744591346153
patch: } if ( Character . is CaMeL Whitespace ( str ) )
rank: 175
score: 98.73411649816177
patch: } char . char CaMeL At ( 0 ) . char CaMeL At ( 0 )
rank: 175
score: 98.70249586838942
patch: } if ( str . length ( ) ( ) ) {
rank: 175
score: 98.6158935546875
patch: } + str . substring ( 0 ) ;
rank: 175
score: 98.43611653645833
patch: dimension = str . char CaMeL At ( 0 ) ;
rank: 175
score: 98.40090942382812
patch: } if * * }
rank: 175
score: 98.22576904296875
patch: } if false ; }
rank: 175
score: 98.21651785714286
patch: } } * if } /
rank: 176
score: 98.81383405412946
patch: } return System . out . to CaMeL Boolean ( str ) ;
rank: 176
score: 98.74479166666667
patch: } else if ( Short . value CaMeL Of ( }
rank: 176
score: 98.73297588641827
patch: } switch ( System . get CaMeL Boolean ( $STRING$ ) )
rank: 176
score: 98.70240129743304
patch: } String char = str . char CaMeL At ( 0 ) ;
rank: 176
score: 98.6157977764423
patch: } + str . length ( ) . length ( ) ;
rank: 176
score: 98.60497029622395
patch: } } / * *
rank: 176
score: 98.43593528053977
patch: return ( str . char CaMeL At ( 0 ) == str . char CaMeL At ( $NUMBER$ ) ) ;
rank: 176
score: 98.39979553222656
patch: } if ( } , false )
rank: 176
score: 98.22531563895089
patch: } / / / / /
rank: 176
score: 98.21410369873047
patch: } } if } = null /
rank: 177
score: 98.81383338341347
patch: } return System . out . to CaMeL String ( ) ;
rank: 177
score: 98.7415771484375
patch: } else if ( str . length ( ) != 1 )
rank: 177
score: 98.70138113839286
patch: } switch ] = str . char CaMeL At ( 0 ) ;
rank: 177
score: 98.6142578125
patch: } + str ;
rank: 177
score: 98.39897155761719
patch: } if ( is CaMeL Number }
rank: 177
score: 98.22510782877605
patch: } * if } }
rank: 177
score: 98.21226501464844
patch: } } if } } } this
rank: 178
score: 98.81338065011161
patch: } return $STRING$ . char CaMeL At ( $NUMBER$ ) == $STRING$ ;
rank: 178
score: 98.74034534801136
patch: } if ( String . value CaMeL Of ( }
rank: 178
score: 98.73008510044643
patch: } if ( System . get CaMeL Boolean ( $STRING$ ) ) {
rank: 178
score: 98.70134420955883
patch: } switch ( str . char CaMeL At ( 1 ) ) { case $NUMBER$ :
rank: 178
score: 98.61395733173077
patch: } + ch ch 1 . to CaMeL String ( ) ;
rank: 178
score: 98.60382080078125
patch: } } if ( str . trim }
rank: 178
score: 98.43450249565973
patch: } if ( str != null ) {
rank: 178
score: 98.39818657769098
patch: } else / * * * * /
rank: 178
score: 98.22482735770089
patch: } / * } / /
rank: 178
score: 98.21126883370536
patch: } } if } = this
rank: 179
score: 98.81331380208333
patch: to CaMeL Boolean ( str . length ( ) . to CaMeL String ( ) ) ;
rank: 179
score: 98.7395528157552
patch: } } finally { super . to CaMeL Boolean ( }
rank: 179
score: 98.73004619891827
patch: } switch ( str . char CaMeL At ( $STRING$ ) )
rank: 179
score: 98.6123379794034
patch: str = str . to CaMeL Object ( ) ;
rank: 179
score: 98.60238986545139
patch: } } . boolean CaMeL Value } )
rank: 179
score: 98.43399047851562
patch: f = str . char CaMeL At ( 0 ) ;
rank: 179
score: 98.39810616629464
patch: } if ( } , }
rank: 179
score: 98.22347412109374
patch: } * * }
rank: 179
score: 98.2110595703125
patch: } } if } ; / *
rank: 180
score: 98.813134765625
patch: } return new str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 180
score: 98.73775540865384
patch: } } } return } . boolean CaMeL Value ( ) ;
rank: 180
score: 98.69840181790866
patch: } this . str 0 = str . length ( ) ;
rank: 180
score: 98.61101422991071
patch: } + ch ch 0 . char CaMeL At ( 0 ) ;
rank: 180
score: 98.60003662109375
patch: } if ( str == $STRING$ }
rank: 180
score: 98.39791870117188
patch: } else if } ( } }
rank: 180
score: 98.22317165798611
patch: } else if } int } } }
rank: 180
score: 98.21084594726562
patch: } } } } ( } }
rank: 181
score: 98.8130352313702
patch: } return null . to CaMeL Boolean ( str . char CaMeL
rank: 181
score: 98.73720296223958
patch: } else if ( str . equals ( $STRING$ ) }
rank: 181
score: 98.72742462158203
patch: } if ( ( str . char CaMeL At ( 1 ) == $STRING$ )
rank: 181
score: 98.69711538461539
patch: } Object ch = str . to CaMeL String ( ) ;
rank: 181
score: 98.61068725585938
patch: } catch ( TRUE )
rank: 181
score: 98.59931776258681
patch: } } if ( str != null )
rank: 181
score: 98.43294270833333
patch: return ! str . starts CaMeL With ( $STRING$ ) ;
rank: 181
score: 98.3978042602539
patch: } if ( } ) { }
rank: 181
score: 98.2230224609375
patch: } catch ( ) }
rank: 181
score: 98.2099838256836
patch: } } if } + / ;
rank: 182
score: 98.73630593039773
patch: } if ( Long . value CaMeL Of ( }
rank: 182
score: 98.72737121582031
patch: switch ( str . length ( ) . char CaMeL At ( 0 ) )
rank: 182
score: 98.697021484375
patch: } char str = str . char CaMeL At ( 0 ) ;
rank: 182
score: 98.61055210658482
patch: } return String . value CaMeL Of ( str ) == $STRING$ ;
rank: 182
score: 98.59922281901042
patch: } else { return str . length }
rank: 182
score: 98.43223063151042
patch: p = str . char CaMeL At ( 1 ) ;
rank: 182
score: 98.39697265625
patch: } else { / * / * /
rank: 182
score: 98.20925467354911
patch: } } if } + /
rank: 183
score: 98.81227620442708
patch: } switch ( str . to CaMeL Boolean ( ) )
rank: 183
score: 98.73602849786931
patch: } } return Boolean . value CaMeL Of ( }
rank: 183
score: 98.69635009765625
patch: } switch ( str . char CaMeL At ( 0 ) ) { case $NUMBER$ : {
rank: 183
score: 98.60965401785714
patch: } + str . char CaMeL At ( 0 ) + $STRING$ ;
rank: 183
score: 98.59891764322917
patch: } else { return str . trim }
rank: 183
score: 98.43212890625
patch: return str . last CaMeL Index CaMeL Of ( $STRING$ ) == $NUMBER$ ;
rank: 183
score: 98.39680989583333
patch: } else if ( key . equals }
rank: 183
score: 98.22227260044643
patch: } * * / } }
rank: 183
score: 98.20890045166016
patch: } } if } / = }
rank: 184
score: 98.73582106370192
patch: if ( } String CaMeL Utils . starts CaMeL With ( }
rank: 184
score: 98.72659737723214
patch: } if ( str . to CaMeL String ( ) == $STRING$ )
rank: 184
score: 98.69618055555556
patch: } return str . to CaMeL String ( ) . char CaMeL At ( 0 ) ;
rank: 184
score: 98.6091641512784
patch: } : if ( str . length ( ) ==
rank: 184
score: 98.59827423095703
patch: } } || str . length }
rank: 184
score: 98.43198805588942
patch: return str . char CaMeL At ( 1 ) == $NUMBER$ ;
rank: 184
score: 98.22174072265625
patch: } * * / / /
rank: 184
score: 98.20625305175781
patch: } } if / = } ;
rank: 185
score: 98.81160481770833
patch: } return Boolean . value CaMeL Of ( str . to CaMeL String ( ) ) ;
rank: 185
score: 98.7352294921875
patch: } else if ( String CaMeL Utils . Na CaMeL N )
rank: 185
score: 98.72657877604166
patch: } + str . length ( ) . char CaMeL At ( 0 )
rank: 185
score: 98.69573296440973
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( $NUMBER$ ) ) ;
rank: 185
score: 98.60838099888393
patch: ex 0 = str . char CaMeL At ( 0 ) ; }
rank: 185
score: 98.59811837332589
patch: } } } . * /
rank: 185
score: 98.43154074928977
patch: return ( str . char CaMeL At ( 1 ) == str . char CaMeL At ( $NUMBER$ ) ) ;
rank: 185
score: 98.39543999565973
patch: } else if ( 1 == 0 }
rank: 185
score: 98.2212626139323
patch: } } * } /
rank: 185
score: 98.2048568725586
patch: } } if } = this ;
rank: 186
score: 98.81110491071429
patch: } return Boolean . Character . get CaMeL Boolean ( str ) ;
rank: 186
score: 98.7349853515625
patch: } else if ( str . length ( ) > $NUMBER$ }
rank: 186
score: 98.72570082720588
patch: return str . char CaMeL At ( 0 ) . to CaMeL String ( ) ;
rank: 186
score: 98.60770089285714
patch: } + str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 186
score: 98.59716796875
patch: } System . out . }
rank: 186
score: 98.43068150111607
patch: return str . char CaMeL At ( - 1 ) == $STRING$ ;
rank: 186
score: 98.39472113715277
patch: } if ( ! is CaMeL Sealed }
rank: 186
score: 98.22107805524554
patch: } * / } } /
rank: 186
score: 98.20226033528645
patch: } } } } if
rank: 187
score: 98.81105550130208
patch: } return super . to CaMeL Boolean ( str ) ;
rank: 187
score: 98.7339754971591
patch: } else if ( str . ends CaMeL With }
rank: 187
score: 98.7253926595052
patch: } switch ( str . length ( ) - $NUMBER$ )
rank: 187
score: 98.59674835205078
patch: } if ( } } ) {
rank: 187
score: 98.4306640625
patch: t = str . char CaMeL At ( 0 ) ;
rank: 187
score: 98.39386858258929
patch: } else if ( 1 }
rank: 187
score: 98.2020772298177
patch: } } if } ?
rank: 188
score: 98.81099446614583
patch: } char . char CaMeL At ( str . char CaMeL At ( 0 ) ) ;
rank: 188
score: 98.73348294771634
patch: } else } return } . boolean CaMeL Value ( ) ;
rank: 188
score: 98.72537231445312
patch: } if ( ( str . char CaMeL At ( 0 ) != $STRING$ )
rank: 188
score: 98.69471324573864
patch: } int 0 = str . length ( ) ;
rank: 188
score: 98.60687866210938
patch: } catch ( ?
rank: 188
score: 98.59654998779297
patch: } else { String CaMeL Buffer }
rank: 188
score: 98.42989309210526
patch: } return str . to CaMeL Char CaMeL Array ( ) . length ( ) == 1 ;
rank: 188
score: 98.39059109157986
patch: } else if ( 1 == null }
rank: 188
score: 98.2197509765625
patch: } catch false }
rank: 188
score: 98.20181710379464
patch: } } / / * /
rank: 189
score: 98.81077067057292
patch: switch ( String . to CaMeL Boolean ( str ) )
rank: 189
score: 98.72519155649039
patch: } if ( super . to CaMeL Boolean ( str ) )
rank: 189
score: 98.69374302455357
patch: } char ch = str . char CaMeL At ( $NUMBER$ ) ;
rank: 189
score: 98.60679274338942
patch: } || str . to CaMeL String ( ) == null ;
rank: 189
score: 98.596435546875
patch: } if ( str == }
rank: 189
score: 98.38918728298611
patch: } else { / * * / }
rank: 189
score: 98.21848551432292
patch: } } } false } } } }
rank: 189
score: 98.2015609741211
patch: } } if } * / =
rank: 190
score: 98.81065538194444
patch: } return System . to CaMeL Boolean ( str . to CaMeL String ( ) ) ;
rank: 190
score: 98.73212139423077
patch: } else if ( str . length ( ) <= 1 )
rank: 190
score: 98.72426147460938
patch: } switch ( ! str . length ( )
rank: 190
score: 98.69366861979167
patch: } if ( str . to CaMeL String ( ) == $STRING$ ) {
rank: 190
score: 98.60518101283482
patch: result = str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 190
score: 98.59586007254464
patch: } / * } } }
rank: 190
score: 98.42823375355114
patch: return ( str . char CaMeL At ( 0 ) == str . char CaMeL At ( 0 ) ) ;
rank: 190
score: 98.38836669921875
patch: } else { if ( } / }
rank: 190
score: 98.21762084960938
patch: } else if } System . }
rank: 190
score: 98.1985371907552
patch: } } if } super
rank: 191
score: 98.81027401194854
patch: } return str . to CaMeL String ( ) . to CaMeL Boolean ( ) ;
rank: 191
score: 98.73101196289062
patch: } else return Boolean . value CaMeL Of }
rank: 191
score: 98.72422790527344
patch: } if ( name == null )
rank: 191
score: 98.69356043198529
patch: } if ( ! str . char CaMeL At ( 1 ) == $STRING$ ) {
rank: 191
score: 98.60466918945312
patch: } . char CaMeL At ( $NUMBER$ ) ;
rank: 191
score: 98.42756870814732
patch: } return ch . char CaMeL At ( 1 ) == $STRING$ ;
rank: 191
score: 98.38742404513889
patch: } else { if } * * }
rank: 191
score: 98.21714274088542
patch: } } } } false
rank: 191
score: 98.19846888950893
patch: } } * if } ;
rank: 192
score: 98.81001112196181
patch: } return Boolean . to CaMeL Boolean ( str . char CaMeL At ( 0 ) )
rank: 192
score: 98.72843794389205
patch: } } } . to CaMeL String ( ) ;
rank: 192
score: 98.72422096946023
patch: } switch ( str . length ( ) 0 )
rank: 192
score: 98.69350857204861
patch: } switch ( chars . length ) {
rank: 192
score: 98.60306490384616
patch: } catch ( $STRING$ . to CaMeL String ( ) ) {
rank: 192
score: 98.59346226283482
patch: } else { for ( }
rank: 192
score: 98.42715018136161
patch: s = str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 192
score: 98.3870849609375
patch: } else if ( value }
rank: 192
score: 98.2160873413086
patch: } } / / / / /
rank: 192
score: 98.19724818638393
patch: } } if } + }
rank: 193
score: 98.80972493489584
patch: } this . str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 193
score: 98.72664388020833
patch: } } super . to CaMeL Boolean ( str ) ;
rank: 193
score: 98.69337047230114
patch: } if ( $STRING$ . length ( ) ) {
rank: 193
score: 98.6025390625
patch: } + str . to CaMeL Boolean ( str ) ;
rank: 193
score: 98.59344482421875
patch: } } else } }
rank: 193
score: 98.42709530101104
patch: sb . if ( str . char CaMeL At ( 0 ) == $STRING$ ) {
rank: 193
score: 98.38639613560268
patch: } else { ( null }
rank: 193
score: 98.21413748604911
patch: } } } false } }
rank: 193
score: 98.19609832763672
patch: } } if } } / =
rank: 194
score: 98.80703396267361
patch: } String . value CaMeL Of ( str . char CaMeL At ( 1 ) ) ;
rank: 194
score: 98.72610238882211
patch: } else if ( str . length ( ) == $NUMBER$ }
rank: 194
score: 98.72214762369792
patch: } switch ( str . length ( ) == $NUMBER$ )
rank: 194
score: 98.69313049316406
patch: } switch ( ch . str . char CaMeL At ( 0 ) ) {
rank: 194
score: 98.60164794921874
patch: } . char CaMeL At ( 1 ) ;
rank: 194
score: 98.59330240885417
patch: } } / * } } * /
rank: 194
score: 98.42617652529762
patch: } return str . char CaMeL At ( 1 ) == str . char CaMeL At ( $NUMBER$ ) ;
rank: 194
score: 98.38524373372395
patch: } else { for }
rank: 194
score: 98.21408081054688
patch: } } / $STRING$ } } }
rank: 194
score: 98.19530487060547
patch: } } if } = / =
rank: 195
score: 98.80684407552083
patch: } switch ( System . str . length ( ) )
rank: 195
score: 98.72568922776442
patch: } } else return Boolean . value CaMeL Of ( } ;
rank: 195
score: 98.72168782552083
patch: } if ( str . char CaMeL At ( 0 ) == true )
rank: 195
score: 98.69217354910714
patch: } boolean ch = str . char CaMeL At ( 1 ) ;
rank: 195
score: 98.6006747159091
patch: } || str . to CaMeL String ( ) ;
rank: 195
score: 98.42486893503289
patch: } return str . to CaMeL Lower CaMeL Case ( ) . length ( ) == 0 ;
rank: 195
score: 98.38284640842014
patch: } if ( true ) . value ;
rank: 195
score: 98.21326700846355
patch: } catch this . }
rank: 195
score: 98.19469451904297
patch: } } if } + } /
rank: 196
score: 98.80684116908482
patch: } return str . char CaMeL At ( 1 ) == null ;
rank: 196
score: 98.7245585123698
patch: } else if ( str . length ( ) < }
rank: 196
score: 98.72145298549107
patch: } else switch ( str . char CaMeL At ( 0 ) )
rank: 196
score: 98.69053344726562
patch: } switch ( . length ( ) ) {
rank: 196
score: 98.60040961371527
patch: } -- str . length ( ) ;
rank: 196
score: 98.59241594587054
patch: } } } * * /
rank: 196
score: 98.42486572265625
patch: if ( str . length ( ) == 0 ) {
rank: 196
score: 98.3809814453125
patch: } else { / * } /
rank: 196
score: 98.21319580078125
patch: } / } } } } } }
rank: 196
score: 98.19430977957589
patch: } } } } } -
rank: 197
score: 98.7243182842548
patch: } } if ( Character . is CaMeL Upper CaMeL Case }
rank: 197
score: 98.68950946514423
patch: } if ( $STRING$ . length ( ) == 1 ) {
rank: 197
score: 98.59674541766827
patch: println ( str . char CaMeL At ( 1 ) ) ;
rank: 197
score: 98.5907694498698
patch: } } catch } }
rank: 197
score: 98.42414855957031
patch: } return str . last CaMeL Index CaMeL Of ( str ) == 1 ;
rank: 197
score: 98.38085174560547
patch: } else if } * * /
rank: 197
score: 98.21136474609375
patch: } } / } } /
rank: 197
score: 98.1937255859375
patch: } } if } = / *
rank: 198
score: 98.80620930989583
patch: } return System . err . to CaMeL Boolean ( str . char CaMeL
rank: 198
score: 98.72417743389423
patch: } } } return Boolean . value CaMeL Of ( } ;
rank: 198
score: 98.72041829427083
patch: } switch ( str . length ( ) != 0 )
rank: 198
score: 98.68863351004464
patch: } else if ( str . length ( ) == $NUMBER$ ) {
rank: 198
score: 98.59649658203125
patch: case $NUMBER$ :
rank: 198
score: 98.4237060546875
patch: return str . char CaMeL At ( str ) == $STRING$ ;
rank: 198
score: 98.37988959418402
patch: } else { / * * } }
rank: 198
score: 98.20951625279018
patch: } / } } } }
rank: 198
score: 98.193603515625
patch: } } if } } ; ;
rank: 199
score: 98.8052509014423
patch: if ( Boolean . value CaMeL Of ( str . char CaMeL
rank: 199
score: 98.72039388020833
patch: } if ( str . char CaMeL At ( 1 ) == false )
rank: 199
score: 98.68837668678977
patch: } int 1 = str . length ( ) ;
rank: 199
score: 98.59568568638393
patch: return str . char CaMeL At ( $NUMBER$ ) == $STRING$ ; }
rank: 199
score: 98.58686828613281
patch: } else if ( str } }
rank: 199
score: 98.42340642755681
patch: return ! str . length ( ) == 1 ;
rank: 199
score: 98.379638671875
patch: } if ( } , false ) ;
rank: 199
score: 98.20892333984375
patch: } * if } } }
rank: 199
score: 98.19334193638393
patch: } } if } / this
rank: 200
score: 98.7231112393466
patch: } if ( Short . value CaMeL Of ( }
rank: 200
score: 98.68701171875
patch: } if ( ! str . char CaMeL At ( 0 ) ) {
rank: 200
score: 98.59464518229167
patch: } ++ str . char CaMeL At ( $NUMBER$ ) ;
rank: 200
score: 98.42307692307692
patch: return str . char CaMeL At ( $NUMBER$ ) != $STRING$ ;
rank: 200
score: 98.37847900390625
patch: } * * * * }
rank: 200
score: 98.20888846261161
patch: } else { this . }
rank: 201
score: 98.80435519748264
patch: } return $STRING$ . char CaMeL At ( str . char CaMeL At ( 1 ) ;
rank: 201
score: 98.72193321814903
patch: } else if ( Character . is CaMeL Lower CaMeL Case }
rank: 201
score: 98.7190170288086
patch: } if ( str . char CaMeL At ( 0 ) == - 1 )
rank: 201
score: 98.68673706054688
patch: } int ch 0 = str . length ( ) ;
rank: 201
score: 98.59446022727273
patch: } || str . length ( ) != 1 ;
rank: 201
score: 98.42223182091347
patch: } return str . char CaMeL At ( ) == $STRING$ ;
rank: 201
score: 98.37838745117188
patch: } else { if false } }
rank: 201
score: 98.20699055989583
patch: } } this . } } } }
rank: 202
score: 98.80408393012152
patch: } return str . char CaMeL At ( str . char CaMeL At ( 0 ) ;
rank: 202
score: 98.72041829427083
patch: } if ( ! Boolean . value CaMeL Of ( }
rank: 202
score: 98.68638851768092
patch: } return str . char CaMeL At ( str . char CaMeL At ( 1 ) ) ;
rank: 202
score: 98.5929443359375
patch: } + str . length ( ) ) ;
rank: 202
score: 98.58470916748047
patch: } } * } } * /
rank: 202
score: 98.42215983072917
patch: id = str . char CaMeL At ( 1 ) ;
rank: 202
score: 98.376708984375
patch: } / * / * /
rank: 202
score: 98.20391167534723
patch: } } } this . } } }
rank: 202
score: 98.19272867838542
patch: } } ( } }
rank: 203
score: 98.71996053059895
patch: } else if ( $STRING$ . index CaMeL Of ( }
rank: 203
score: 98.7180508700284
patch: } char . char CaMeL At ( 0 ) ;
rank: 203
score: 98.59188406808036
patch: str 0 = str . char CaMeL At ( 0 ) ; }
rank: 203
score: 98.58405303955078
patch: } else if ( str } else
rank: 203
score: 98.42198835100446
patch: } return str . index CaMeL Of ( $STRING$ ) == 1 ;
rank: 203
score: 98.37291124131944
patch: } if ( ! is CaMeL False }
rank: 203
score: 98.20229085286458
patch: } } System . } } } }
rank: 203
score: 98.19165802001953
patch: } } if } } } null
rank: 204
score: 98.80312278053977
patch: } return str . length ( ) != $NUMBER$ ;
rank: 204
score: 98.7198819247159
patch: } return Boolean . value CaMeL Of ( } }
rank: 204
score: 98.71719125600961
patch: } if ( ( str . length ( ) != 0 )
rank: 204
score: 98.68577357700893
patch: } short ch = str . char CaMeL At ( 1 ) ;
rank: 204
score: 98.5897216796875
patch: } + ch ch 1 . char CaMeL At ( 0 ) ;
rank: 204
score: 98.58262125651042
patch: } * / String }
rank: 204
score: 98.4213358561198
patch: ch = str . char CaMeL At ( 1 ) ;
rank: 204
score: 98.36995442708333
patch: } else if ( value == null }
rank: 204
score: 98.2005106608073
patch: } else { catch }
rank: 204
score: 98.19027709960938
patch: } } } } } } Index
rank: 205
score: 98.71946411132812
patch: } else if ( to CaMeL Boolean ( }
rank: 205
score: 98.68567833533653
patch: } if ( str . length ( ) == false ) {
rank: 205
score: 98.58934674944196
patch: } + ch = str . char CaMeL At ( $NUMBER$ ) ;
rank: 205
score: 98.4213115985577
patch: return str . index CaMeL Of ( $STRING$ ) == 1 ;
rank: 205
score: 98.3692626953125
patch: } else / false * /
rank: 205
score: 98.19989013671875
patch: } } } false } } }
rank: 205
score: 98.19016810825893
patch: } } } } } {
rank: 206
score: 98.71827110877403
patch: } else } return Boolean . value CaMeL Of ( } ;
rank: 206
score: 98.71564592633929
patch: } switch ( name . char CaMeL At ( 0 ) ) {
rank: 206
score: 98.68498792146382
patch: } return str . char CaMeL At ( str . char CaMeL At ( 0 ) ) ;
rank: 206
score: 98.58908315805289
patch: fail ( str . char CaMeL At ( $NUMBER$ ) ) ;
rank: 206
score: 98.42034040178571
patch: return str . last CaMeL Index CaMeL Of ( ) == 1 ;
rank: 206
score: 98.36912536621094
patch: } else if } null } }
rank: 206
score: 98.18793487548828
patch: } } if } / ; ;
rank: 207
score: 98.79875352647569
patch: switch ( ch . length ( ) )
rank: 207
score: 98.71790489783653
patch: } else if ( name . starts CaMeL With ( $STRING$ }
rank: 207
score: 98.71497802734375
patch: } if ( this . str == null )
rank: 207
score: 98.68495396205357
patch: } switch ( ch . char CaMeL At ( 1 ) ) {
rank: 207
score: 98.58831787109375
patch: } || $STRING$ == str . char CaMeL At ( 0 ) ;
rank: 207
score: 98.5794677734375
patch: } } * * /
rank: 207
score: 98.41999816894531
patch: return ( str . last CaMeL Index CaMeL Of ( ) == 0 ) ;
rank: 207
score: 98.36893717447917
patch: } else { if ( ! } }
rank: 207
score: 98.19873046875
patch: } catch this . } } } }
rank: 207
score: 98.18790435791016
patch: } } if } } } Exception
rank: 208
score: 98.79817708333333
patch: } return null . to CaMeL Boolean ( str ) ;
rank: 208
score: 98.71293131510417
patch: } switch ( str . length ( ) != 1 )
rank: 208
score: 98.58823805588942
patch: } + str . to CaMeL String ( ) + $STRING$ ;
rank: 208
score: 98.57927594866071
patch: } else { return str }
rank: 208
score: 98.3683369954427
patch: } else { else {
rank: 208
score: 98.1973876953125
patch: } else throws new }
rank: 208
score: 98.18736267089844
patch: } } if } / / -
rank: 209
score: 98.71567789713542
patch: } else return Boolean . value CaMeL Of ( str }
rank: 209
score: 98.7126934344952
patch: } switch ( ch . char CaMeL At ( 1 ) )
rank: 209
score: 98.68355984157986
patch: } to CaMeL Boolean ( str ) ;
rank: 209
score: 98.58811442057292
patch: } + str . index CaMeL Of ( str ) ;
rank: 209
score: 98.41790161132812
patch: } return this . str . char CaMeL At ( str . length ( ) ) == $STRING$ ;
rank: 209
score: 98.36781529017857
patch: } else { else * /
rank: 209
score: 98.19710286458333
patch: } catch 0 } }
rank: 209
score: 98.1870346069336
patch: } } if } = if }
rank: 210
score: 98.7976786295573
patch: } if ( ch . to CaMeL Boolean ( ) )
rank: 210
score: 98.71549166165866
patch: } else if ( str . length ( ) == 0 }
rank: 210
score: 98.7123779296875
patch: str . char CaMeL At ( 0 ) ;
rank: 210
score: 98.58591530539773
patch: : || str . char CaMeL At ( 0 )
rank: 210
score: 98.57756042480469
patch: } else if ( str != }
rank: 210
score: 98.41689724392361
patch: return ! str . to CaMeL Char CaMeL Array ( ) . equals ( $STRING$ ) ;
rank: 210
score: 98.36661783854167
patch: } else { if null } else ;
rank: 210
score: 98.19566345214844
patch: } } } System . } }
rank: 210
score: 98.18701934814453
patch: } } = } } } }
rank: 211
score: 98.79761505126953
patch: } if ( String CaMeL Utils . get CaMeL Boolean ( str ) ) {
rank: 211
score: 98.7144775390625
patch: } } . set CaMeL Value ( str ) ;
rank: 211
score: 98.71222330729167
patch: } if ( $STRING$ . to CaMeL String ( str ) == null )
rank: 211
score: 98.68231608072917
patch: } switch ( this . str . char CaMeL At ( 0 ) )
rank: 211
score: 98.58461692116477
patch: } / * System . out . case $NUMBER$ /
rank: 211
score: 98.57747105189732
patch: } finally { if ( }
rank: 211
score: 98.416748046875
patch: return ( str . last CaMeL Index CaMeL Of ( $STRING$ ) ==
rank: 211
score: 98.36658325195313
patch: } else { else
rank: 211
score: 98.19514973958333
patch: } } / $STRING$ } } } }
rank: 211
score: 98.1849594116211
patch: } } } } } } System
rank: 212
score: 98.79747517903645
patch: } if ( str . length ( ) > 1 )
rank: 212
score: 98.71445719401042
patch: } if ( Float . is CaMeL Na CaMeL N }
rank: 212
score: 98.71202674278847
patch: } switch ( String . get CaMeL Boolean ( str ) )
rank: 212
score: 98.68173556857639
patch: } return str . length ( ) ;
rank: 212
score: 98.57676188151042
patch: } if ( str . trim ( }
rank: 212
score: 98.41635131835938
patch: return str . to CaMeL String ( ) == false ;
rank: 212
score: 98.19357299804688
patch: } * if 1 ;
rank: 212
score: 98.18407331194196
patch: } } if } = System
rank: 213
score: 98.7970458984375
patch: } switch ( String CaMeL Utils . get CaMeL Boolean ( str ) )
rank: 213
score: 98.71238199869792
patch: } if ( str . char CaMeL At ( 0 }
rank: 213
score: 98.68072979266827
patch: } set CaMeL Value ( str . length ( ) ) ;
rank: 213
score: 98.58394949776786
patch: } return value . char CaMeL At ( $NUMBER$ ) == $STRING$ ;
rank: 213
score: 98.41630336216518
patch: } return str . char CaMeL At ( 0 ) == 0 ;
rank: 213
score: 98.36571393694196
patch: } } if ( false }
rank: 213
score: 98.19309488932292
patch: } catch } int } } } }
rank: 213
score: 98.18318939208984
patch: } } if } * / *
rank: 214
score: 98.71190388997395
patch: if ( } else {
rank: 214
score: 98.71187337239583
patch: } switch ( byte CaMeL Value . length ( ) )
rank: 214
score: 98.68067345252403
patch: } this . str = str . length ( ) ) ;
rank: 214
score: 98.5838290127841
patch: } || str . to CaMeL Boolean ( ) ;
rank: 214
score: 98.57325744628906
patch: } * / * } * /
rank: 214
score: 98.4154803936298
patch: return str . index CaMeL Of ( $STRING$ ) == 0 ;
rank: 214
score: 98.19171142578125
patch: } } int } / } }
rank: 214
score: 98.18169294084821
patch: } } if } = null
rank: 215
score: 98.79602922712054
patch: } return null . char CaMeL At ( 0 ) == $STRING$ ;
rank: 215
score: 98.7115145596591
patch: } } } . to CaMeL Boolean ( ) ;
rank: 215
score: 98.68046569824219
patch: } boolean ch = str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 215
score: 98.41527448381696
patch: } return str . char CaMeL At ( 0 ) == ) ;
rank: 215
score: 98.36434173583984
patch: } else { if } ( }
rank: 215
score: 98.19169108072917
patch: } * if 0 ;
rank: 215
score: 98.18137613932292
patch: } } if } String
rank: 216
score: 98.79527180989584
patch: } if ( String CaMeL Utils . to CaMeL Boolean ( str ) )
rank: 216
score: 98.71139526367188
patch: } else if ( str . length ( ) != }
rank: 216
score: 98.71095628004808
patch: } long str = str . char CaMeL At ( 0 )
rank: 216
score: 98.67997741699219
patch: } set CaMeL Value ( str . char CaMeL At ( 0 ) ) ;
rank: 216
score: 98.58103590745192
patch: } catch ( Illegal CaMeL Argument CaMeL Exception ] out ) {
rank: 216
score: 98.56997680664062
patch: } / * * } * /
rank: 216
score: 98.41510479266827
patch: return $STRING$ . char CaMeL At ( 1 ) == $STRING$ ;
rank: 216
score: 98.3640365600586
patch: } else { if } if }
rank: 216
score: 98.19158935546875
patch: } } / / } } } }
rank: 216
score: 98.18130929129464
patch: } } if } if }
rank: 217
score: 98.79473470052083
patch: } return System . out . get CaMeL Boolean ( str . char CaMeL
rank: 217
score: 98.71104079026442
patch: } else if ( str . starts CaMeL With ( } }
rank: 217
score: 98.71063591452206
patch: to CaMeL Boolean ( str . char CaMeL At ( 0 ) == false ) ;
rank: 217
score: 98.67991536458334
patch: } if ( str . length ( ) ( ) == $STRING$ ) {
rank: 217
score: 98.580810546875
patch: } + str . trim ( ) . length ( ) ;
rank: 217
score: 98.56806098090277
patch: } } catch ( Runtime CaMeL Exception }
rank: 217
score: 98.41493326822916
patch: this . str = str . char CaMeL At ( 1 ) ; }
rank: 217
score: 98.36396789550781
patch: } else { if ( value }
rank: 217
score: 98.19151475694444
patch: } } } 1 } } } }
rank: 217
score: 98.18104553222656
patch: } } if } ; } ;
rank: 218
score: 98.79435221354167
patch: } switch ( directory . to CaMeL Boolean ( ) )
rank: 218
score: 98.71080525716145
patch: } } return } . boolean CaMeL Value ( ) }
rank: 218
score: 98.71059163411458
patch: } if ( get CaMeL Value ( ) == null )
rank: 218
score: 98.58040677584134
patch: } + str = str . to CaMeL String ( ) ;
rank: 218
score: 98.56783294677734
patch: } } } } } ) }
rank: 218
score: 98.41492571149554
patch: return ! str . equals CaMeL Ignore CaMeL Case ( str ) ;
rank: 218
score: 98.36141967773438
patch: } if ( value != null }
rank: 218
score: 98.19001600477431
patch: } / * } } } } }
rank: 218
score: 98.18085479736328
patch: } } } } } } (
rank: 219
score: 98.79323032924107
patch: } if ( ch . to CaMeL String ( ) == null )
rank: 219
score: 98.71052689985795
patch: } else if ( str . compare CaMeL To }
rank: 219
score: 98.70967864990234
patch: } if ( str . char CaMeL At ( 0 ) != null ) {
rank: 219
score: 98.67903355189732
patch: } if ( ! this . str . length ( ) ) {
rank: 219
score: 98.58028738839286
patch: } return String . value CaMeL Of ( str ) == null ;
rank: 219
score: 98.56727818080357
patch: } * } * / }
rank: 219
score: 98.41340906479779
patch: return str . char CaMeL At ( 1 ) . length ( ) == $STRING$ ;
rank: 219
score: 98.35848563058036
patch: } else { if false }
rank: 219
score: 98.18801879882812
patch: } * } / } } }
rank: 219
score: 98.18007986886161
patch: } } if } / }
rank: 220
score: 98.79316711425781
patch: } String to CaMeL Boolean = str . char CaMeL At ( 0 ) ;
rank: 220
score: 98.71030836838942
patch: } else if ( str . length ( ) < 1 )
rank: 220
score: 98.67838541666667
patch: } switch ( list . length ) {
rank: 220
score: 98.5668436686198
patch: / * } * /
rank: 220
score: 98.412841796875
patch: } return str . char CaMeL At ( 0 ) == str . char CaMeL At ( $NUMBER$ ) ;
rank: 220
score: 98.35836356026786
patch: } if ( true ) ;
rank: 220
score: 98.18785603841145
patch: } * } / /
rank: 220
score: 98.17815399169922
patch: } } if } } } System
rank: 221
score: 98.71014404296875
patch: } if ( str . equals CaMeL Ignore CaMeL Case }
rank: 221
score: 98.67787863991477
patch: } equals CaMeL Ignore CaMeL Case ( $STRING$ ) ;
rank: 221
score: 98.57881673177083
patch: str = str . char CaMeL At ( $NUMBER$ ) ;
rank: 221
score: 98.56594509548611
patch: } else if ( str != $STRING$ )
rank: 221
score: 98.41259765625
patch: return ( str . char CaMeL At ( 1 ) == str ) ;
rank: 221
score: 98.35802459716797
patch: } if ( ! } ) {
rank: 221
score: 98.18782552083333
patch: } catch true ; }
rank: 221
score: 98.17626953125
patch: } } if } throws
rank: 222
score: 98.70920973557692
patch: } else if ( str . length ( ) == 1 }
rank: 222
score: 98.67723499644886
patch: } super . to CaMeL Boolean ( value ) ;
rank: 222
score: 98.57881673177083
patch: result = str . char CaMeL At ( 1 ) ;
rank: 222
score: 98.56554158528645
patch: } } } } else
rank: 222
score: 98.41246948242187
patch: } return str . to CaMeL String ( ) . char CaMeL At ( 0 ) == $STRING$ ;
rank: 222
score: 98.35550689697266
patch: } else if ( false ) {
rank: 222
score: 98.18614959716797
patch: } else if this . } }
rank: 222
score: 98.17205810546875
patch: } } if } .
rank: 223
score: 98.7076416015625
patch: } if ( $STRING$ == str )
rank: 223
score: 98.70746319110577
patch: } else if ( str . equals ( $STRING$ ) ) {
rank: 223
score: 98.67671342329545
patch: } String str = str . length ( ) ;
rank: 223
score: 98.56535339355469
patch: } } else if ( } }
rank: 223
score: 98.412158203125
patch: return str . char CaMeL At ( 0 ) == $STRING$ ; } else
rank: 223
score: 98.35445149739583
patch: } else { if ( } else {
rank: 223
score: 98.18611363002232
patch: } finally { this . }
rank: 223
score: 98.17184884207589
patch: } } if / = }
rank: 224
score: 98.79150390625
patch: } return str . boolean CaMeL Value ( ) ;
rank: 224
score: 98.70742563100961
patch: } return $STRING$ . equals CaMeL Ignore CaMeL Case ( } }
rank: 224
score: 98.7073974609375
patch: } synchronized ( String CaMeL Buffer . $STRING$ ) {
rank: 224
score: 98.56532796223958
patch: } else if ( str . char }
rank: 224
score: 98.41209193638393
patch: } return str . index CaMeL Of ( $STRING$ ) == 0 ;
rank: 224
score: 98.3541259765625
patch: } if } this . } }
rank: 224
score: 98.18603515625
patch: } } / / } } }
rank: 224
score: 98.17156982421875
patch: } } if / }
rank: 225
score: 98.7912956686581
patch: } return Boolean . equals ( str . char CaMeL At ( 0 ) ) ;
rank: 225
score: 98.70655822753906
patch: } if ( str . char CaMeL At ( 1 ) == null ) {
rank: 225
score: 98.7050069173177
patch: } else if ( Character . is CaMeL Primitive ( }
rank: 225
score: 98.67583356584821
patch: } if ( equals CaMeL Ignore CaMeL Case ( str ) ) {
rank: 225
score: 98.57598005022321
patch: } : str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 225
score: 98.5640869140625
patch: } byte [ ] }
rank: 225
score: 98.41201547475961
patch: } return str . char CaMeL At ( 1 ) == $STRING$
rank: 225
score: 98.35392252604167
patch: } else { if } } else ;
rank: 225
score: 98.18419731987848
patch: } else } this . } } ;
rank: 225
score: 98.17108154296875
patch: } } if } * / }
rank: 226
score: 98.79055551382211
patch: } switch ( System . to CaMeL Boolean ( str ) )
rank: 226
score: 98.70448996803977
patch: } } . set CaMeL Value ( } ) ;
rank: 226
score: 98.6753399188702
patch: } switch ( str . str . length ( ) ) {
rank: 226
score: 98.57565743582589
patch: } - 1 = str . char CaMeL At ( 0 ) ;
rank: 226
score: 98.56300354003906
patch: } } } } ) * /
rank: 226
score: 98.181640625
patch: } * * * } /
rank: 226
score: 98.17086029052734
patch: } } / / = } ;
rank: 227
score: 98.7903719815341
patch: } return Boolean . to CaMeL Boolean ( str .
rank: 227
score: 98.70552280970982
patch: } double str = str . char CaMeL At ( 0 ) ;
rank: 227
score: 98.70391376201923
patch: } else if ( Float . value CaMeL Of ( str }
rank: 227
score: 98.67523193359375
patch: } switch ( this . str . length ( ) ) { case $NUMBER$ :
rank: 227
score: 98.35226440429688
patch: } if ( false } } }
rank: 227
score: 98.18110002790179
patch: } else { } / }
rank: 227
score: 98.170654296875
patch: } } if } * * /
rank: 228
score: 98.78914097377232
patch: if ( str . char CaMeL At ( 0 ) == null )
rank: 228
score: 98.70522238991477
patch: str = str . char CaMeL At ( 0 )
rank: 228
score: 98.70348510742187
patch: } else { return to CaMeL Boolean ( }
rank: 228
score: 98.57379150390625
patch: } += str . length ( ) ;
rank: 228
score: 98.56222873263889
patch: } else if ( } } ) {
rank: 228
score: 98.41062622070312
patch: return str . char CaMeL At ( 1 ) . char CaMeL At ( $NUMBER$ ) == $STRING$ ;
rank: 228
score: 98.3514404296875
patch: } else / * * * }
rank: 228
score: 98.169921875
patch: } } if } = = }
rank: 229
score: 98.78896915211396
patch: } str . char CaMeL At ( str . char CaMeL At ( 0 ) ;
rank: 229
score: 98.70491027832031
patch: } if ( ! str . char CaMeL At ( 0 ) == false )
rank: 229
score: 98.70310621995192
patch: if ( Character . is CaMeL Upper CaMeL Case ( } }
rank: 229
score: 98.67288912259616
patch: } name = str . char CaMeL At ( 1 ) ;
rank: 229
score: 98.4097900390625
patch: return str . char CaMeL At ( 0 ) == str [ 0 ] ;
rank: 229
score: 98.34914725167411
patch: } else if } * }
rank: 229
score: 98.17849392361111
patch: } super . } ( } } }
rank: 229
score: 98.16985212053571
patch: } } if * / /
rank: 230
score: 98.78893280029297
patch: } return Boolean . $STRING$ . char CaMeL At ( str . length ( )
rank: 230
score: 98.7036884014423
patch: } if ( str . char CaMeL At ( 0 ) !=
rank: 230
score: 98.70304565429687
patch: super . to CaMeL Boolean ( } ) ;
rank: 230
score: 98.67244175502232
patch: } int ch = name . char CaMeL At ( 0 ) ;
rank: 230
score: 98.57282257080078
patch: set CaMeL Boolean ( str ) ;
rank: 230
score: 98.56180572509766
patch: } else if } } } )
rank: 230
score: 98.40941569010417
patch: } return str . last CaMeL Index CaMeL Of ( ) == 1 ;
rank: 230
score: 98.34793853759766
patch: } if } } } } }
rank: 230
score: 98.17762451171875
patch: } } else ;
rank: 230
score: 98.16957310267857
patch: } } / * / ;
rank: 231
score: 98.703466796875
patch: } if ( str . char CaMeL At ( 0 ) == $NUMBER$ )
rank: 231
score: 98.70243326822917
patch: } else if ( $STRING$ . ends CaMeL With ( }
rank: 231
score: 98.67226275275735
patch: } switch ( str . char CaMeL At ( 1 ) ) { case $STRING$ :
rank: 231
score: 98.57248757102273
patch: } System . out . case ( str ) ;
rank: 231
score: 98.561767578125
patch: } * } } ) ;
rank: 231
score: 98.40933227539062
patch: text = str . char CaMeL At ( 1 ) ;
rank: 231
score: 98.34684753417969
patch: } if * * * * /
rank: 231
score: 98.17716471354167
patch: } if false } } } } }
rank: 231
score: 98.16822814941406
patch: } } if } / System /
rank: 232
score: 98.703125
patch: } if ( ( str . length ( ) == $NUMBER$ )
rank: 232
score: 98.7018155184659
patch: } if ( str . starts CaMeL With ( }
rank: 232
score: 98.67177170973558
patch: } equals CaMeL Ignore CaMeL Case ( str , null ) ;
rank: 232
score: 98.5721435546875
patch: } catch ( Illegal CaMeL Argument CaMeL Exception ] ch ) {
rank: 232
score: 98.56009928385417
patch: } } System . out . } )
rank: 232
score: 98.40927358774039
patch: return str . char CaMeL At ( count ) == $STRING$ ;
rank: 232
score: 98.17653401692708
patch: } } / / / / / /
rank: 232
score: 98.16808319091797
patch: } } } } if } ;
rank: 233
score: 98.78834025065105
patch: } switch ( name )
rank: 233
score: 98.7027587890625
patch: } if ( $STRING$ . equals CaMeL Ignore CaMeL Case ( str ) ) {
rank: 233
score: 98.70096842447917
patch: } } if ( Boolean . value CaMeL Of ( }
rank: 233
score: 98.67119891826923
patch: } switch ( ch . to CaMeL String ( ) ) {
rank: 233
score: 98.5712890625
patch: } / * System . out . case 1 . * /
rank: 233
score: 98.55867767333984
patch: } } finally { super . }
rank: 233
score: 98.40899658203125
patch: return str . char CaMeL At ( 0 ) == $STRING$ ; } else {
rank: 233
score: 98.34646267361111
patch: } else { if ( false } }
rank: 233
score: 98.16690063476562
patch: } } if } } System /
rank: 234
score: 98.78799641927084
patch: } return System . err . to CaMeL String ( ) == null ;
rank: 234
score: 98.70273844401042
patch: } int lower CaMeL Case = str . length ( )
rank: 234
score: 98.70045471191406
patch: } else if ( Character . }
rank: 234
score: 98.66791178385417
patch: } if ( this . str . length ( ) == $STRING$ ) {
rank: 234
score: 98.55828094482422
patch: } if ( ! str . }
rank: 234
score: 98.34559461805556
patch: } System . value CaMeL Of ( }
rank: 234
score: 98.17090521918402
patch: } catch ( $STRING$ } } } }
rank: 234
score: 98.16551208496094
patch: } } if ( } } }
rank: 235
score: 98.78703038832721
patch: } String . char CaMeL At ( str . char CaMeL At ( 0 ) ;
rank: 235
score: 98.70257161458333
patch: } if ( Integer . to CaMeL String ( str ) == null )
rank: 235
score: 98.70032755533855
patch: if ( String CaMeL Utils . is CaMeL Blank ( }
rank: 235
score: 98.6673583984375
patch: } String key = str . char CaMeL At ( 0 ) ;
rank: 235
score: 98.57097919170673
patch: super . to CaMeL Boolean ( str ) ; } else {
rank: 235
score: 98.55815972222223
patch: } else if ( } } else {
rank: 235
score: 98.40812413832721
patch: return ! str . to CaMeL String ( ) . length ( ) == 1 ;
rank: 235
score: 98.34403773716518
patch: } else { / false ;
rank: 235
score: 98.1702168782552
patch: } catch } ) ;
rank: 235
score: 98.16514369419643
patch: } } } } } ++
rank: 236
score: 98.78693237304688
patch: } switch ( System . length ( ) )
rank: 236
score: 98.70116248497597
patch: } switch ( format . char CaMeL At ( 0 ) )
rank: 236
score: 98.69969685872395
patch: } } } . set CaMeL Value ( } ) ;
rank: 236
score: 98.66712364783653
patch: } switch ( str . Boolean . length ( ) ) {
rank: 236
score: 98.57045335036058
patch: } catch ( Illegal CaMeL Argument CaMeL Exception ] err ) {
rank: 236
score: 98.55619812011719
patch: } } else { if ( }
rank: 236
score: 98.40735735212054
patch: this . str = str . char CaMeL At ( $NUMBER$ ) ;
rank: 236
score: 98.3432388305664
patch: } else { if ( * }
rank: 236
score: 98.16977945963542
patch: } if } } } } } }
rank: 236
score: 98.16195678710938
patch: } } * if }
rank: 237
score: 98.78684997558594
patch: } if ( String CaMeL Utils . to CaMeL Boolean ( str ) ) {
rank: 237
score: 98.7010498046875
patch: to CaMeL Boolean ( str . char CaMeL At ( 0 ) == ) ;
rank: 237
score: 98.69875863882211
patch: } else if ( Float . is CaMeL Na CaMeL N }
rank: 237
score: 98.6657245342548
patch: } switch ( ch . str . length ( ) ) {
rank: 237
score: 98.5701904296875
patch: } return Boolean . value CaMeL Of ( str == null ) ;
rank: 237
score: 98.55615234375
patch: } } } && }
rank: 237
score: 98.40713266225961
patch: return str . char CaMeL At ( 0 ) > $STRING$ ;
rank: 237
score: 98.34250217013889
patch: } / * * * * * }
rank: 238
score: 98.78641183035714
patch: } return Boolean . $STRING$ . to CaMeL Boolean ( str ) ;
rank: 238
score: 98.69699096679688
patch: if ( Character . is CaMeL Digit ( }
rank: 238
score: 98.66536088423295
patch: } switch ( key . length ( ) ) {
rank: 238
score: 98.56982421875
patch: } . char CaMeL At ( $NUMBER$ ) == $STRING$ ;
rank: 238
score: 98.5555648803711
patch: } } finally { this . }
rank: 238
score: 98.40711734169408
patch: return ! str . to CaMeL Char CaMeL Array ( ) . length ( ) == 0 ;
rank: 238
score: 98.34196254185268
patch: } else { return null ;
rank: 238
score: 98.16886393229167
patch: } * int * /
rank: 238
score: 98.16148376464844
patch: } } } } } } +
rank: 239
score: 98.78635660807292
patch: } return Boolean . parse CaMeL Boolean ( str ) ;
rank: 239
score: 98.7003173828125
patch: } if ( log == null )
rank: 239
score: 98.695947265625
patch: } } if ( $STRING$ . equals ( }
rank: 239
score: 98.56871686662946
patch: } catch ( Number CaMeL Utils . value CaMeL Of ( str )
rank: 239
score: 98.55341448102679
patch: } if ( } else {
rank: 239
score: 98.40611775716145
patch: s = str . char CaMeL At ( 1 ) ;
rank: 239
score: 98.34161376953125
patch: } else { return } . length }
rank: 239
score: 98.16863335503473
patch: } else } this . } } }
rank: 239
score: 98.1604232788086
patch: } } if } + } ;
rank: 240
score: 98.7000732421875
patch: } long str = str . char CaMeL At ( 1 ) ;
rank: 240
score: 98.69574444110577
patch: if ( $STRING$ . equals CaMeL Ignore CaMeL Case ( str }
rank: 240
score: 98.66506723257211
patch: } str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 240
score: 98.5672607421875
patch: } + str . char CaMeL At ( length 1 ) ;
rank: 240
score: 98.55324978298611
patch: } else if ( str } } )
rank: 240
score: 98.405517578125
patch: } return str . last CaMeL Index CaMeL Of ( $STRING$ ) == $NUMBER$ ;
rank: 240
score: 98.34160698784723
patch: } if ( ! null . } }
rank: 240
score: 98.16752115885417
patch: } catch true } }
rank: 240
score: 98.15967559814453
patch: } } if } . / ;
rank: 241
score: 98.69997336647727
patch: } switch ( str . equals ( $STRING$ ) )
rank: 241
score: 98.69574444110577
patch: if ( $STRING$ . equals CaMeL Ignore CaMeL Case ( } }
rank: 241
score: 98.66484723772321
patch: } this . str = str . char CaMeL At ( ) ;
rank: 241
score: 98.56698172433036
patch: } && str . char CaMeL At ( 1 ) != $STRING$ ;
rank: 241
score: 98.55323621961806
patch: } if ( ! str . equals }
rank: 241
score: 98.40538611778847
patch: return str . char CaMeL At ( 0 ) & $STRING$ ;
rank: 241
score: 98.16500515407986
patch: } } } $STRING$ } } } }
rank: 241
score: 98.1589126586914
patch: } } if } = System ;
rank: 242
score: 98.78497314453125
patch: } if ( str . length ( ) ==
rank: 242
score: 98.69991048177083
patch: } if ( str . char CaMeL At ( 1 ) == 0 )
rank: 242
score: 98.69568810096153
patch: } else { return str . boolean CaMeL Value ( ) ;
rank: 242
score: 98.66473858173077
patch: } if ( str . to CaMeL Boolean ( ) ) {
rank: 242
score: 98.34039306640625
patch: } else if } null true ;
rank: 242
score: 98.1571044921875
patch: } } = } } }
rank: 243
score: 98.78494966947116
patch: } if ( String . get CaMeL Boolean ( str ) )
rank: 243
score: 98.69966264204545
patch: } if ( log . equals ( $STRING$ ) )
rank: 243
score: 98.69487970525569
patch: } return $STRING$ . equals CaMeL Ignore CaMeL Case }
rank: 243
score: 98.66473795572917
patch: } return str . to CaMeL String ( ) . length ( ) ;
rank: 243
score: 98.56674194335938
patch: } / / *
rank: 243
score: 98.55265808105469
patch: } } } ) } * /
rank: 243
score: 98.40470377604167
patch: return ( $STRING$ . equals CaMeL Ignore CaMeL Case ( str ) ) ;
rank: 243
score: 98.33973524305556
patch: } else { if ( } ) {
rank: 243
score: 98.16470336914062
patch: } else if false } } }
rank: 244
score: 98.7832743326823
patch: switch ( System . to CaMeL String ( str ) )
rank: 244
score: 98.69955444335938
patch: } if ( ! $STRING$ . equals ( str ) )
rank: 244
score: 98.69439697265625
patch: } else if ( str != null && }
rank: 244
score: 98.66460712139423
patch: } if ( str . length ( ) > $STRING$ ) {
rank: 244
score: 98.56439763849431
patch: } && str . char CaMeL At ( 0 )
rank: 244
score: 98.5509033203125
patch: } } } } } .
rank: 244
score: 98.4044189453125
patch: return str . char CaMeL At ( 1 ) ==
rank: 244
score: 98.33845520019531
patch: } else { * * * }
rank: 244
score: 98.16397433810764
patch: } } $STRING$ } } } } }
rank: 244
score: 98.15626525878906
patch: } } if } ++ / /
rank: 245
score: 98.78294020432692
patch: } return Boolean . to CaMeL String ( str . char CaMeL
rank: 245
score: 98.69911295572916
patch: } while ( str . char CaMeL At ( 0 ) == $STRING$ )
rank: 245
score: 98.69390869140625
patch: } else { return Boolean . value CaMeL Of ( }
rank: 245
score: 98.66407606336806
patch: } switch ( str . char CaMeL At ( 0 ) ) { case $STRING$ : {
rank: 245
score: 98.56412447415866
patch: } + str . char CaMeL At ( 0 ] ) ;
rank: 245
score: 98.54987250434027
patch: } else if ( str . } else
rank: 245
score: 98.40439860026042
patch: n = str . char CaMeL At ( 1 ) ;
rank: 245
score: 98.33814239501953
patch: } if ( false ) { }
rank: 245
score: 98.16322326660156
patch: } } $STRING$ } } } }
rank: 245
score: 98.15531921386719
patch: } } } } } / *
rank: 246
score: 98.7826171875
patch: } String char CaMeL At = str . char CaMeL At ( 0 )
rank: 246
score: 98.6933124248798
patch: } else { return value . equals CaMeL Ignore CaMeL Case }
rank: 246
score: 98.54744466145833
patch: } / * * } } * /
rank: 246
score: 98.40427071707589
patch: return ! str . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ;
rank: 246
score: 98.33772277832031
patch: } if ( false ) . }
rank: 246
score: 98.16253662109375
patch: } } } int } / }
rank: 246
score: 98.15514373779297
patch: } } / if } = }
rank: 247
score: 98.78257057883523
patch: } return $STRING$ . length ( ) == $NUMBER$ ;
rank: 247
score: 98.69829767400569
patch: } switch ( str . length ( ) ? $STRING$
rank: 247
score: 98.6913553873698
patch: } else if ( String CaMeL Utils . compare ( }
rank: 247
score: 98.66342599051339
patch: } String name = str . char CaMeL At ( 0 ) ;
rank: 247
score: 98.56392045454545
patch: catch ( Illegal CaMeL Argument CaMeL Exception out ) {
rank: 247
score: 98.54642486572266
patch: } if ( str != null )
rank: 247
score: 98.40331092247597
patch: return str . char CaMeL At ( 1 ) == 1 ;
rank: 247
score: 98.334716796875
patch: } else * * * * }
rank: 247
score: 98.16172790527344
patch: } * * System . next }
rank: 247
score: 98.15431213378906
patch: } } / if } / /
rank: 248
score: 98.78233846028645
patch: } return System . to CaMeL Boolean ( str ) ;
rank: 248
score: 98.69741385323661
patch: } if ( ! str . char CaMeL At ( 1 ) )
rank: 248
score: 98.69131234975961
patch: } if ( Character . is CaMeL Assignable CaMeL From ( }
rank: 248
score: 98.66341959635416
patch: } switch ( str . char CaMeL At ( 0 ) ) { }
rank: 248
score: 98.56377301897321
patch: } + str . last CaMeL Index CaMeL Of ( $STRING$ ) .
rank: 248
score: 98.54621233258929
patch: } else if ( } else
rank: 248
score: 98.40320638020833
patch: return str . char CaMeL At ( 0 - 1 ) == $STRING$ ;
rank: 248
score: 98.33432006835938
patch: } else / * /
rank: 248
score: 98.16155133928571
patch: } } * } } /
rank: 248
score: 98.15416463216145
patch: } } } } Exception
rank: 249
score: 98.78160603841145
patch: } throw str . char CaMeL At ( 0 ) ;
rank: 249
score: 98.69612943209134
patch: } if ( ( str . length ( ) != 1 )
rank: 249
score: 98.69114176432292
patch: } } super . to CaMeL Boolean ( } ) ;
rank: 249
score: 98.66271033653847
patch: } switch ( str . length ( ) ) { case $NUMBER$
rank: 249
score: 98.56368314302884
patch: } : if ( str . char CaMeL At ( 0 )
rank: 249
score: 98.546142578125
patch: } else { } if ( }
rank: 249
score: 98.40301513671875
patch: return str . to CaMeL String ( ) == true ;
rank: 249
score: 98.33394368489583
patch: } else { if } * * ;
rank: 249
score: 98.16136169433594
patch: } } } System . } /
rank: 249
score: 98.15303039550781
patch: } } if } } this /
rank: 250
score: 98.7813387784091
patch: if ( str . length ( ) != $NUMBER$ )
rank: 250
score: 98.69536481584821
patch: } int value = str . char CaMeL At ( 1 ) ;
rank: 250
score: 98.6909912109375
patch: } else if ( Char CaMeL Utils . }
rank: 250
score: 98.66261393229166
patch: } if ( this . str . length ( ) == $NUMBER$ ) {
rank: 250
score: 98.5633544921875
patch: } + ch 0 . char CaMeL At ( $NUMBER$ ) ;
rank: 250
score: 98.54572211371527
patch: } } } * / } * /
rank: 250
score: 98.40257045200893
patch: return ( str . to CaMeL String ( ) == $STRING$ ) ;
rank: 250
score: 98.33219909667969
patch: } else { if null } else
rank: 250
score: 98.16042073567708
patch: } else * / /
rank: 250
score: 98.15301513671875
patch: } } if } / *
rank: 251
score: 98.78129069010417
patch: } if ( str . length ( ) > $NUMBER$ )
rank: 251
score: 98.69078572591145
patch: } catch ( Clone CaMeL Not CaMeL Supported CaMeL Exception }
rank: 251
score: 98.66194291548295
patch: } int ( str . length ( ) ) {
rank: 251
score: 98.40216064453125
patch: return ( str . to CaMeL Lower CaMeL Case ( ) . length ( ) == 0 ) ;
rank: 251
score: 98.33195277622768
patch: } else if } catch }
rank: 251
score: 98.15996551513672
patch: } } } 1 } } }
rank: 251
score: 98.15101623535156
patch: } } if } / System ;
rank: 252
score: 98.78111853966347
patch: } String str = str . char CaMeL At ( 1 )
rank: 252
score: 98.69038899739583
patch: } if ( str . index CaMeL Of ( $STRING$ }
rank: 252
score: 98.66060697115384
patch: } int ch = this . str . length ( ) ;
rank: 252
score: 98.56291852678571
patch: : && str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 252
score: 98.40085274832589
patch: return str . char CaMeL At ( 0 ) $NUMBER$ == $STRING$ ;
rank: 252
score: 98.33179473876953
patch: } else if ( * * }
rank: 252
score: 98.15990193684895
patch: } case } ) }
rank: 252
score: 98.15097045898438
patch: } } if } Throwable
rank: 253
score: 98.6945556640625
patch: } switch ( str ) { case $NUMBER$ :
rank: 253
score: 98.69021371694711
patch: } if ( String CaMeL Utils . is CaMeL Whitespace ( }
rank: 253
score: 98.66028941761364
patch: } String ch = str . length ( ) ;
rank: 253
score: 98.56288364955357
patch: } + str . last CaMeL Index CaMeL Of ( null ) ;
rank: 253
score: 98.40084402901786
patch: b = str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 253
score: 98.33162689208984
patch: } / * * * } }
rank: 253
score: 98.15928431919643
patch: } else if new false }
rank: 253
score: 98.14922223772321
patch: } } / / = /
rank: 254
score: 98.7803466796875
patch: } System . out . Null ( str . length ( ) ) ;
rank: 254
score: 98.68886155348558
patch: } } } return } . to CaMeL Boolean ( ) ;
rank: 254
score: 98.65989332932692
patch: } while ( str . length ( ) == 1 ) {
rank: 254
score: 98.56205610795455
patch: } && str . length ( ) == 1 ;
rank: 254
score: 98.40057663690476
patch: } return str . char CaMeL At ( 1 ) == str . char CaMeL At ( 1 ) ;
rank: 254
score: 98.3302001953125
patch: } System . value CaMeL Of } }
rank: 254
score: 98.15924072265625
patch: } } / / } /
rank: 254
score: 98.14916229248047
patch: } } if } / } /
rank: 255
score: 98.78026326497395
patch: } switch ( directory . to CaMeL String ( ) )
rank: 255
score: 98.69411057692308
patch: } if ( ! str . length ( ) == $NUMBER$ )
rank: 255
score: 98.6888427734375
patch: } } . set CaMeL Value ( $STRING$ }
rank: 255
score: 98.65975247896634
patch: } to CaMeL Boolean ( str . length ( ) ) ;
rank: 255
score: 98.56157575334821
patch: } + str = str . char CaMeL At ( 1 ) ;
rank: 255
score: 98.54300689697266
patch: } } || str . equals }
rank: 255
score: 98.3997802734375
patch: } return str . char CaMeL At ( 0 ) == $NUMBER$ ;
rank: 255
score: 98.32981872558594
patch: } if ( 0 == } }
rank: 255
score: 98.14897155761719
patch: } } if } -- } }
rank: 256
score: 98.77978515625
patch: } String ch = str . char CaMeL
rank: 256
score: 98.69265747070312
patch: } if ( str . char CaMeL At ( 0 ) == false ) {
rank: 256
score: 98.68801645132211
patch: } if ( str . ends CaMeL With ( $STRING$ ) )
rank: 256
score: 98.65973578559027
patch: } return str . to CaMeL String ( ) . char CaMeL At ( 1 ) ;
rank: 256
score: 98.5611572265625
patch: } + str . substring ( 1 ) ;
rank: 256
score: 98.54277886284723
patch: } } * / } } * /
rank: 256
score: 98.39900037977431
patch: return ( str . length ( ) ==
rank: 256
score: 98.32978166852679
patch: } else { / false }
rank: 256
score: 98.15794677734375
patch: } catch null ;
rank: 256
score: 98.1474380493164
patch: } } / / = } /
rank: 257
score: 98.69205729166667
patch: } if ( str . to CaMeL Object ( ) == null ) {
rank: 257
score: 98.6876690204327
patch: } if ( Character . is CaMeL Digit ( str ) )
rank: 257
score: 98.65969509548611
patch: } switch ( str . char CaMeL At ( 1 ) ) { case $NUMBER$ : {
rank: 257
score: 98.56050618489583
patch: } + str . to CaMeL String ( $STRING$ ) ;
rank: 257
score: 98.54273986816406
patch: } * } } } ) ;
rank: 257
score: 98.39894321986607
patch: return str . char CaMeL At ( 0 ) == $STRING$ false ;
rank: 257
score: 98.32975260416667
patch: } else = true ;
rank: 257
score: 98.15733991350446
patch: } } } } } null
rank: 257
score: 98.14695739746094
patch: } } if } - / /
rank: 258
score: 98.69127699908088
patch: } switch ( str . char CaMeL At ( 0 ) ) { case 1 :
rank: 258
score: 98.6873270670573
patch: } } } . set CaMeL Value ( str ) ;
rank: 258
score: 98.5604248046875
patch: } + str . char CaMeL At ( 1 ) ; else {
rank: 258
score: 98.5423583984375
patch: } else if ( str } } }
rank: 258
score: 98.39871978759766
patch: return ( str . char CaMeL At ( 0 ) == $STRING$ ) ; }
rank: 258
score: 98.32957458496094
patch: } if ( false ) ; }
rank: 258
score: 98.15631781684027
patch: } finally { this . } null }
rank: 258
score: 98.14663260323661
patch: } } ( } } }
rank: 259
score: 98.69095552884616
patch: } + str . char CaMeL At ( 0 ) + $STRING$
rank: 259
score: 98.68678792317708
patch: } } return Boolean . value CaMeL Of ( } }
rank: 259
score: 98.65943254743304
patch: } switch ( super . to CaMeL Boolean ( str ) ) {
rank: 259
score: 98.56026517427884
patch: } + str . char CaMeL At ( - 1 ) ;
rank: 259
score: 98.54151068793402
patch: } if ( str == null || }
rank: 259
score: 98.3986587524414
patch: return ( str . last CaMeL Index CaMeL Of ( $STRING$ ) == ) ;
rank: 259
score: 98.3287353515625
patch: } else { * * / }
rank: 259
score: 98.15629069010417
patch: } * * System . next ( }
rank: 260
score: 98.77745145909927
patch: } char . char CaMeL At ( str . char CaMeL At ( 0 ) ;
rank: 260
score: 98.69057992788461
patch: } switch ( Boolean . to CaMeL String ( str ) )
rank: 260
score: 98.68663533528645
patch: } else if ( $STRING$ . equals ( str ) }
rank: 260
score: 98.65919896175987
patch: } this . str = str . char CaMeL At ( str . length ( ) ) ;
rank: 260
score: 98.55918375651042
patch: } return ( str . char CaMeL At ( 0 )
rank: 260
score: 98.54084123883929
patch: } else if } } )
rank: 260
score: 98.32833099365234
patch: } else { this . out }
rank: 260
score: 98.15625
patch: } } int value ;
rank: 260
score: 98.1448974609375
patch: } } if } ; =
rank: 261
score: 98.6590067545573
patch: } if ( str . length ( ) > ) {
rank: 261
score: 98.55895057091347
patch: } catch ( Number CaMeL Format CaMeL Exception arraycopy . string CaMeL
rank: 261
score: 98.54076276506696
patch: } } } } * }
rank: 261
score: 98.39743874289773
patch: return ( Character . is CaMeL Lower CaMeL Case ( str . char CaMeL At ( 0 ) ) ) ;
rank: 261
score: 98.3281021118164
patch: } else if } return false ;
rank: 261
score: 98.15594482421875
patch: } if 0 ; }
rank: 261
score: 98.14482116699219
patch: } } if } = / null
rank: 262
score: 98.69039212740384
patch: } switch ( Double . to CaMeL String ( str ) )
rank: 262
score: 98.6854736328125
patch: } } return Boolean . value CaMeL Of }
rank: 262
score: 98.55874197823661
patch: str = str . to CaMeL String ( ) ; } else {
rank: 262
score: 98.53919067382813
patch: } for ( }
rank: 262
score: 98.39556415264423
patch: return str . char CaMeL At ( 1 ) >= $STRING$ ;
rank: 262
score: 98.32734680175781
patch: } else if } / false ;
rank: 262
score: 98.15489850725446
patch: } else if $STRING$ . }
rank: 262
score: 98.14345877511161
patch: } } * if } }
rank: 263
score: 98.69020080566406
patch: } if ( str . char CaMeL At ( 1 ) != $STRING$ ) {
rank: 263
score: 98.53670925564236
patch: } } if ( $STRING$ . equals }
rank: 263
score: 98.39539446149554
patch: return str . char CaMeL At ( 1 ] ) == $STRING$ ;
rank: 263
score: 98.32713487413194
patch: } if ( ( 0 == 0 }
rank: 263
score: 98.15384674072266
patch: } else if } } } /
rank: 264
score: 98.77603912353516
patch: } if ( str . char CaMeL At ( $NUMBER$ ) == $STRING$ ) {
rank: 264
score: 98.68998448988971
patch: to CaMeL Boolean ( str . char CaMeL At ( 0 ) == 0 ) ;
rank: 264
score: 98.6844991048177
patch: } return Boolean . value CaMeL Of ( } . }
rank: 264
score: 98.65878530649039
patch: } while ( str . length ( ) == 0 ) {
rank: 264
score: 98.55641682942708
patch: } + str . char CaMeL At ( 0 ) {
rank: 264
score: 98.5362548828125
patch: } } / * * * }
rank: 264
score: 98.32698277064732
patch: } else { if false ;
rank: 264
score: 98.15363420758929
patch: } if } } } }
rank: 264
score: 98.14055633544922
patch: } } if } / - /
rank: 265
score: 98.68991088867188
patch: } if ( ! str . char CaMeL At ( 1 ) == null )
rank: 265
score: 98.68430739182692
patch: } else if ( System . get CaMeL Property ( $STRING$ }
rank: 265
score: 98.55600210336539
patch: } + ch ch 0 . to CaMeL Boolean ( ) ;
rank: 265
score: 98.53555733816964
patch: } / * } * /
rank: 265
score: 98.39447021484375
patch: } return str . char CaMeL At ( 1 ) ;
rank: 265
score: 98.32692173549107
patch: } else { } null }
rank: 265
score: 98.153564453125
patch: / * * / /
rank: 265
score: 98.1403579711914
patch: } } if } / ; }
rank: 266
score: 98.774853515625
patch: } return Boolean . value CaMeL Of ( str . char CaMeL At (
rank: 266
score: 98.68361253004808
patch: } else if ( str . length ( ) > 1 }
rank: 266
score: 98.6576678936298
patch: } switch ( str . to CaMeL Object ( ) ) {
rank: 266
score: 98.55541229248047
patch: break ; }
rank: 266
score: 98.532958984375
patch: } else if ( str instanceof }
rank: 266
score: 98.39431762695312
patch: return ! str . last CaMeL Index CaMeL Of ( $STRING$ ) == 0 ;
rank: 266
score: 98.32633463541667
patch: } / * * * * / }
rank: 266
score: 98.15352376302083
patch: } this . } ( } } }
rank: 266
score: 98.13980102539062
patch: } } if } ; ; ;
rank: 267
score: 98.68811848958333
patch: } if ( str . char CaMeL At ( 0 ) > $STRING$ )
rank: 267
score: 98.6824199969952
patch: } else if ( Character . is CaMeL Whitespace ( } }
rank: 267
score: 98.65717022235577
patch: } str = str . char CaMeL At ( $NUMBER$ ) ;
rank: 267
score: 98.5535888671875
patch: } append ( str . char CaMeL At ( 0 ) ) ;
rank: 267
score: 98.5313008626302
patch: } } else if }
rank: 267
score: 98.32587348090277
patch: } else { if } * / ;
rank: 267
score: 98.15303802490234
patch: } } else } } } }
rank: 267
score: 98.13829803466797
patch: } } if } = false }
rank: 268
score: 98.77464881310097
patch: } if ( str . char CaMeL At ( 0 ) .
rank: 268
score: 98.68791647518383
patch: to CaMeL Boolean ( str . char CaMeL At ( 1 ) == null ) ;
rank: 268
score: 98.68234487680289
patch: } } return $STRING$ . equals CaMeL Ignore CaMeL Case ( }
rank: 268
score: 98.65679462139423
patch: } if ( str . length ( ) < 0 ) {
rank: 268
score: 98.53074815538194
patch: } else if ( str . } )
rank: 268
score: 98.39280941611842
patch: return ! str . to CaMeL Char CaMeL Array ( ) . length ( ) == 1 ;
rank: 268
score: 98.15248616536458
patch: } } } 1 }
rank: 268
score: 98.13766915457589
patch: } } / / ; /
rank: 269
score: 98.773681640625
patch: } if ( ch . to CaMeL Boolean ( ) ) {
rank: 269
score: 98.68780110677083
patch: } String ch 0 = str . char CaMeL At ( 0 ) ;
rank: 269
score: 98.68177208533653
patch: } else if ( name . equals CaMeL Ignore CaMeL Case }
rank: 269
score: 98.65646158854166
patch: } if ( ! str . char CaMeL At ( 1 ) ) {
rank: 269
score: 98.55243474786931
patch: : return str . char CaMeL At ( 0 )
rank: 269
score: 98.39165496826172
patch: } return str . to CaMeL String ( ) . equals ( $STRING$ ) ;
rank: 269
score: 98.32555474175348
patch: } if ( ! null . contains }
rank: 269
score: 98.15218680245536
patch: } * * } } /
rank: 269
score: 98.13739013671875
patch: } } * / ;
rank: 270
score: 98.68165001502403
patch: } else if ( String CaMeL Utils . is CaMeL Whitespace }
rank: 270
score: 98.65537806919643
patch: } if ( this . ! str . length ( ) ) {
rank: 270
score: 98.55118502103366
patch: } / * System . out . case $NUMBER$ . * /
rank: 270
score: 98.5304183959961
patch: } } } * / * /
rank: 270
score: 98.3906005859375
patch: return str . char CaMeL At ( 1 ) . char CaMeL At ( 0 ) == $STRING$ ;
rank: 270
score: 98.3240966796875
patch: } else if ( 1 == }
rank: 270
score: 98.15055629185268
patch: / * * * / /
rank: 270
score: 98.13645935058594
patch: } } } } } } ++
rank: 271
score: 98.7731689453125
patch: to CaMeL Boolean ( str == null ) ;
rank: 271
score: 98.68108575994319
patch: } } } . set CaMeL Value } ) ;
rank: 271
score: 98.65525465745192
patch: } switch ( char CaMeL At . length ( ) ) {
rank: 271
score: 98.55113807091347
patch: } + ch 1 . char CaMeL At ( $NUMBER$ ) ;
rank: 271
score: 98.53002251519098
patch: } } } * } } * /
rank: 271
score: 98.39049008018092
patch: } return str . to CaMeL Lower CaMeL Case ( ) . length ( ) == 1 ;
rank: 271
score: 98.32326834542411
patch: } } } } false ;
rank: 271
score: 98.14979044596355
patch: } catch } 1 }
rank: 271
score: 98.13626098632812
patch: } } if } * } /
rank: 272
score: 98.77268880208334
patch: } return Boolean . Character . to CaMeL Boolean ( str . char CaMeL
rank: 272
score: 98.68622233072917
patch: } switch ( ! str . char CaMeL At ( 1 ) ) {
rank: 272
score: 98.67962091619319
patch: } if ( $STRING$ . starts CaMeL With ( }
rank: 272
score: 98.65460564108456
patch: } switch ( this . str . length ( ) ) { case $NUMBER$ : {
rank: 272
score: 98.551025390625
patch: if ( str . char CaMeL At ( 0 )
rank: 272
score: 98.52937147352431
patch: } } if ( } } ) {
rank: 272
score: 98.3903339092548
patch: return str . char CaMeL At ( 0 ) == $STRING$ {
rank: 272
score: 98.31993950737848
patch: } else { if null ; } else
rank: 272
score: 98.1497802734375
patch: } catch null } }
rank: 272
score: 98.13617706298828
patch: } } } if } } /
rank: 273
score: 98.67958286830357
patch: } } finally { try {
rank: 273
score: 98.54881873497597
patch: str = str . char CaMeL At ( $NUMBER$ ) ; }
rank: 273
score: 98.39031110491071
patch: f = str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 273
score: 98.31928253173828
patch: } else { this . value }
rank: 273
score: 98.14960394965277
patch: } } } } } } } null
rank: 274
score: 98.77234758649554
patch: } return System . out . to CaMeL String ( $STRING$ ) ;
rank: 274
score: 98.686083984375
patch: } if ( str . char CaMeL At ( 0 ) == ) {
rank: 274
score: 98.67957481971153
patch: } else if ( str . length ( ) >= $NUMBER$ )
rank: 274
score: 98.65426199776786
patch: } if ( str . starts CaMeL With ( $STRING$ ) ) {
rank: 274
score: 98.54876708984375
patch: return str . char CaMeL At ( 1 )
rank: 274
score: 98.39028494698661
patch: } if ( ! str . length ( ) == 0 ) {
rank: 274
score: 98.3186543782552
patch: } if * * /
rank: 274
score: 98.13209751674107
patch: } } } } } _
rank: 275
score: 98.771484375
patch: if ( str . to CaMeL String ( ) . length ( ) == 1 )
rank: 275
score: 98.68577880859375
patch: } if ( ! log . . . ==
rank: 275
score: 98.67947152944711
patch: } else if ( str . length ( ) > 0 }
rank: 275
score: 98.6540057842548
patch: } if ( str . length ( ) < 1 ) {
rank: 275
score: 98.5478848544034
patch: } catch ( Illegal CaMeL Argument CaMeL Exception else {
rank: 275
score: 98.52686225043402
patch: } else if ( } . equals }
rank: 275
score: 98.39020096628289
patch: } return str . to CaMeL String ( ) . to CaMeL String ( ) == null ;
rank: 275
score: 98.31825086805556
patch: } if ( } , } } }
rank: 275
score: 98.14794921875
patch: } else if ( } 0 ;
rank: 275
score: 98.131591796875
patch: } } if } / this /
rank: 276
score: 98.77097574869792
patch: } String str . char CaMeL At ( 0 ) ;
rank: 276
score: 98.68540649414062
patch: } switch ( str . length ( ) ;
rank: 276
score: 98.679443359375
patch: } else if ( String . value CaMeL Of ( } }
rank: 276
score: 98.65367934283088
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( ) ) ;
rank: 276
score: 98.52665201822917
patch: } } if ( } } } )
rank: 276
score: 98.38978794642857
patch: return ( str . char CaMeL At ( 0 ) == str ;
rank: 276
score: 98.14768473307292
patch: } catch null ; }
rank: 276
score: 98.1314468383789
patch: } } if } } / }
rank: 277
score: 98.68520100911458
patch: str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 277
score: 98.67879231770833
patch: } else if ( str . boolean CaMeL Value ( }
rank: 277
score: 98.65309244791666
patch: } else return str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 277
score: 98.54756164550781
patch: } catch ( char ch ) {
rank: 277
score: 98.52596706814236
patch: } } finally { out . close }
rank: 277
score: 98.31793891059027
patch: } if ( ! is CaMeL Whitespace }
rank: 277
score: 98.14754813058036
patch: } / * / / /
rank: 277
score: 98.13081577845982
patch: } } if } } =
rank: 278
score: 98.7705586751302
patch: } if ( str . char CaMeL At ( 1 )
rank: 278
score: 98.6839599609375
patch: } int value = str . char CaMeL At ( 0 )
rank: 278
score: 98.67822265625
patch: } else if ( str . to CaMeL Upper CaMeL Case }
rank: 278
score: 98.65292794363839
patch: } switch ( ch ) {
rank: 278
score: 98.54711042131696
patch: } return Boolean . value CaMeL Of ( str ) . boolean CaMeL
rank: 278
score: 98.52507934570312
patch: } } / *
rank: 278
score: 98.38962227957589
patch: } return str == $STRING$ ;
rank: 278
score: 98.3177490234375
patch: } else / / * * * /
rank: 278
score: 98.14718627929688
patch: } * if 1 }
rank: 278
score: 98.13026428222656
patch: } } if } } ; }
rank: 279
score: 98.77032111672794
patch: } str . char CaMeL At ( str . char CaMeL At ( 1 ) )
rank: 279
score: 98.68328302556819
patch: } if ( get CaMeL Boolean ( str ) )
rank: 279
score: 98.67738850911458
patch: } return Boolean . value CaMeL Of }
rank: 279
score: 98.65286458333334
patch: } if ( str . index CaMeL Of ( $STRING$ ) == ) {
rank: 279
score: 98.5469637784091
patch: } + str . char CaMeL At ( str .
rank: 279
score: 98.38953653971355
patch: } return $STRING$ . starts CaMeL With ( str ) ;
rank: 279
score: 98.3169657389323
patch: } if } } }
rank: 279
score: 98.14607238769531
patch: } else { } / } }
rank: 279
score: 98.12954711914062
patch: } } if } :
rank: 280
score: 98.68299967447916
patch: } if ( str . char CaMeL At ( 1 ) != null )
rank: 280
score: 98.67688927283653
patch: } else { return Boolean . value CaMeL Of ( } .
rank: 280
score: 98.65275435014205
patch: } switch ( char . length ( ) ) {
rank: 280
score: 98.54651896158855
patch: } + ch 0 . to CaMeL Object ( ) ;
rank: 280
score: 98.52381727430556
patch: } else { } } } ) ;
rank: 280
score: 98.38915297564338
patch: } return str . to CaMeL String ( ) . length ( ) != 0 ;
rank: 280
score: 98.31669786241319
patch: } if ( } Class . } }
rank: 280
score: 98.1456807454427
patch: } else * / }
rank: 280
score: 98.12720743815105
patch: } } } } int
rank: 281
score: 98.68299102783203
patch: } if ( ! ch . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 281
score: 98.52364095052083
patch: } * / } } } * /
rank: 281
score: 98.38906625600961
patch: prefix = str . char CaMeL At ( 0 ) ; }
rank: 281
score: 98.31660970052083
patch: } else / * }
rank: 281
score: 98.14337158203125
patch: } } } } } true
rank: 281
score: 98.12710571289062
patch: } } if } } } -
rank: 282
score: 98.68245442708333
patch: } switch ( str . length ( ) ] ) {
rank: 282
score: 98.65271674262152
patch: } if ( ! str . to CaMeL String ( ) . length ( ) ) {
rank: 282
score: 98.54422701322116
patch: } + str . char CaMeL At ( ++ 0 ) ;
rank: 282
score: 98.52349853515625
patch: } this . }
rank: 282
score: 98.38857014973958
patch: return ! str . to CaMeL Lower CaMeL Case ( ) . equals ( $STRING$ ) ;
rank: 282
score: 98.31564670138889
patch: } else { / * / * }
rank: 282
score: 98.14315359933036
patch: } * * } / /
rank: 282
score: 98.126708984375
patch: } } if / * / /
rank: 283
score: 98.76820373535156
patch: switch ( str . length ( ) . char CaMeL At ( 1 ) )
rank: 283
score: 98.68223219651442
patch: } if ( str == null ) { return false ; }
rank: 283
score: 98.65243530273438
patch: } switch ( str . str . char CaMeL At ( 1 ) ) {
rank: 283
score: 98.54405517578125
patch: } . char CaMeL At ( 0 ) {
rank: 283
score: 98.5214614868164
patch: } if ( } else { }
rank: 283
score: 98.315185546875
patch: } if ( value }
rank: 283
score: 98.14074028862848
patch: } catch true } } } } }
rank: 283
score: 98.12467956542969
patch: } } if } ; / }
rank: 284
score: 98.76814778645833
patch: } return String . get CaMeL Boolean ( str ) ;
rank: 284
score: 98.6820576985677
patch: } if ( log . to CaMeL String ( ) )
rank: 284
score: 98.67447509765626
patch: } if ( Character . is CaMeL Whitespace }
rank: 284
score: 98.65086012620192
patch: } if ( str . length ( ) >= $NUMBER$ ) {
rank: 284
score: 98.54356892903645
patch: + str . char CaMeL At ( 1 ) ; }
rank: 284
score: 98.3885028545673
patch: return str . char CaMeL At ( 0 ) == false ;
rank: 284
score: 98.31418185763889
patch: } if ( false ) . equals }
rank: 284
score: 98.13956705729167
patch: } } } 1 ;
rank: 284
score: 98.12403869628906
patch: } } if } } System ;
rank: 285
score: 98.76787923177083
patch: } this . str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 285
score: 98.68182842548077
patch: } switch ( System . value CaMeL Of ( str ) )
rank: 285
score: 98.67326216264205
patch: } else if ( $STRING$ . equals ( } }
rank: 285
score: 98.64992850167411
patch: } float ch = str . char CaMeL At ( 1 ) ;
rank: 285
score: 98.52046712239583
patch: } } } } } } * /
rank: 285
score: 98.38843994140625
patch: return str . char CaMeL At ( 0 ) != str . char CaMeL At ( 1 ) ;
rank: 285
score: 98.31376647949219
patch: } else { if } else }
rank: 285
score: 98.13930838448661
patch: } } } } / }
rank: 285
score: 98.12361145019531
patch: } } if } = } this
rank: 286
score: 98.76784842354911
patch: if ( str . char CaMeL At ( str . length ( )
rank: 286
score: 98.68171691894531
patch: } switch ( str . to CaMeL String ( ) ) { case $NUMBER$ :
rank: 286
score: 98.67283121744792
patch: } } if ( Character . is CaMeL Digit ( }
rank: 286
score: 98.64991106305804
patch: } switch ( value . char CaMeL At ( 0 ) ) {
rank: 286
score: 98.54294840494792
patch: } | str . length ( ) ;
rank: 286
score: 98.51907784598214
patch: } * / } * /
rank: 286
score: 98.38838334517045
patch: return ( str . char CaMeL At ( 1 ) == str . char CaMeL At ( 1 ) ) ;
rank: 286
score: 98.31291368272569
patch: } else { if } / false ;
rank: 286
score: 98.13890584309895
patch: } * } / }
rank: 286
score: 98.12354278564453
patch: } } } } } / =
rank: 287
score: 98.6727294921875
patch: } return Boolean . value CaMeL Of ( } .
rank: 287
score: 98.64969889322917
patch: } str . char CaMeL At ( str . char CaMeL At ( $NUMBER$ ) ) ;
rank: 287
score: 98.54253595525569
patch: } || str . length ( ) > 1 ;
rank: 287
score: 98.51896837022569
patch: } } if ( str == $STRING$ }
rank: 287
score: 98.38819173177083
patch: } return str . to CaMeL String ( ) . length ( ) ==
rank: 287
score: 98.31078338623047
patch: } else { if } } else
rank: 287
score: 98.138671875
patch: } } * int } } } }
rank: 287
score: 98.1223653157552
patch: } } / } ;
rank: 288
score: 98.76751708984375
patch: } return this . str . char CaMeL At ( $NUMBER$ ) == $STRING$ ;
rank: 288
score: 98.67235565185547
patch: } else if ( $STRING$ . }
rank: 288
score: 98.64967564174107
patch: } switch ( 0 ) {
rank: 288
score: 98.54252485795455
patch: } && str . length ( ) == 0 ;
rank: 288
score: 98.51873779296875
patch: } return to CaMeL Boolean ( }
rank: 288
score: 98.38785807291667
patch: exp = str . char CaMeL At ( 0 ) ;
rank: 288
score: 98.31022135416667
patch: } if ( is CaMeL Interrupted ( }
rank: 288
score: 98.13815307617188
patch: } else if } / } }
rank: 288
score: 98.12137276785714
patch: } } } } } int
rank: 289
score: 98.7674331665039
patch: } return System . out . char CaMeL At ( str . length ( )
rank: 289
score: 98.68131510416667
patch: } int lower CaMeL Case = str . char CaMeL At ( 1 )
rank: 289
score: 98.64955357142857
patch: } switch ( str . length ( ) ) { / * /
rank: 289
score: 98.54217529296875
patch: } + ch . char CaMeL At ( str ) ;
rank: 289
score: 98.51815032958984
patch: } else { return this . }
rank: 289
score: 98.38759765625
patch: } return str . index CaMeL Of ( $STRING$ ) == - 1 ;
rank: 289
score: 98.13799176897321
patch: } } } 1 } }
rank: 289
score: 98.12126159667969
patch: } } } } } } return
rank: 290
score: 98.68102088341347
patch: } switch ( value . char CaMeL At ( 1 ) )
rank: 290
score: 98.67099831321023
patch: } } catch ( Illegal CaMeL Argument CaMeL Exception }
rank: 290
score: 98.64923095703125
patch: } return to CaMeL Boolean ( str . length ( ) ) ;
rank: 290
score: 98.5420430501302
patch: } return ! str . to CaMeL String ( ) ;
rank: 290
score: 98.51797146267361
patch: } / * } } } * /
rank: 290
score: 98.3873799641927
patch: return ! str . starts CaMeL With ( str ) ;
rank: 290
score: 98.30977630615234
patch: } else { if } ; }
rank: 290
score: 98.13668484157986
patch: } } else } } } } }
rank: 290
score: 98.11951446533203
patch: } } if / / / ;
rank: 291
score: 98.7672607421875
patch: } return System . err . to CaMeL String ( ) == $STRING$ ;
rank: 291
score: 98.66952514648438
patch: } } if ( Double . value CaMeL Of ( }
rank: 291
score: 98.64853140024039
patch: } int ch = str . to CaMeL String ( ) ;
rank: 291
score: 98.54165649414062
patch: } = str . char CaMeL At ( $NUMBER$ ) ;
rank: 291
score: 98.51723904079861
patch: } if ( } } } } )
rank: 291
score: 98.38733849158653
patch: } else { switch ( str . length ( ) ) {
rank: 291
score: 98.30967203776042
patch: } else { false }
rank: 291
score: 98.11883544921875
patch: } } / / / = }
rank: 292
score: 98.76709856305804
patch: } return $STRING$ == str . char CaMeL At ( 0 ) ;
rank: 292
score: 98.66871134440105
patch: } if ( Character . is CaMeL Whitespace ( str }
rank: 292
score: 98.64789690290179
patch: } char 0 = str . char CaMeL At ( 0 ) ;
rank: 292
score: 98.54145159040179
patch: } || str . to CaMeL String ( ) == null ) {
rank: 292
score: 98.30921173095703
patch: } if ( 0 < 0 }
rank: 292
score: 98.1360855102539
patch: } catch } int } ) ;
rank: 292
score: 98.1187744140625
patch: } } if } } / -
rank: 293
score: 98.76708984375
patch: } str . char CaMeL At ( 1 ) ;
rank: 293
score: 98.68027169363839
patch: } if ( str . char CaMeL At ( 1 ) == )
rank: 293
score: 98.66850142045455
patch: } else if ( str . boolean CaMeL Value }
rank: 293
score: 98.64754231770833
patch: } if ( str . length ( ) ( ) == $NUMBER$ ) {
rank: 293
score: 98.54091186523438
patch: } return to CaMeL Boolean ( str ) ;
rank: 293
score: 98.51710728236607
patch: } } } finally { }
rank: 293
score: 98.38646782769098
patch: return ! str . to CaMeL Char CaMeL Array ( ) . equals ( str ) ;
rank: 293
score: 98.13583713107639
patch: } } / / / / / }
rank: 293
score: 98.11851501464844
patch: } } } } } } int
rank: 294
score: 98.76495768229167
patch: } return Boolean . $STRING$ . to CaMeL Boolean ( str . char CaMeL
rank: 294
score: 98.68015950520834
patch: } if ( str . char CaMeL At ( 1 ) instanceof String )
rank: 294
score: 98.66757541232639
patch: } if ( to CaMeL Boolean ( }
rank: 294
score: 98.64699978298611
patch: } switch ( names . length ) {
rank: 294
score: 98.5408602627841
patch: } : switch ( str . length ( ) )
rank: 294
score: 98.38636125837054
patch: return ( str . char CaMeL At ( 1 ) == ) ;
rank: 294
score: 98.30777740478516
patch: } if * * * * }
rank: 294
score: 98.13569859095982
patch: } catch this . } }
rank: 294
score: 98.11788177490234
patch: } } if } ; ; }
rank: 295
score: 98.68006388346355
patch: } switch ( str . length ( ) != $NUMBER$ )
rank: 295
score: 98.66733620383523
patch: } else if ( str . length ( } }
rank: 295
score: 98.64616124770221
patch: } if ( str . length ( ) != str . length ( ) ) {
rank: 295
score: 98.54052734375
patch: } + ch ch 0 . char CaMeL At ( 1 ) ;
rank: 295
score: 98.51580810546875
patch: } * / } } ) ;
rank: 295
score: 98.38613891601562
patch: x = str . char CaMeL At ( 1 ) ;
rank: 295
score: 98.30645073784723
patch: } else if ( null . equals }
rank: 295
score: 98.1356913248698
patch: } catch ) { }
rank: 296
score: 98.67975212545956
patch: } if ( this . str . char CaMeL At ( 0 ) == $STRING$ )
rank: 296
score: 98.64474722055289
patch: } switch ( str . value . length ( ) ) {
rank: 296
score: 98.54046630859375
patch: } / * System . out . case /
rank: 296
score: 98.51561628069196
patch: } * / this . }
rank: 296
score: 98.38566589355469
patch: return str . last CaMeL Index CaMeL Of ( $STRING$ ) == - 1 ;
rank: 296
score: 98.30638122558594
patch: } else / * * / }
rank: 296
score: 98.13406372070312
patch: } else if ( } ) }
rank: 296
score: 98.11503092447917
patch: } } if } try
rank: 297
score: 98.76344651442308
patch: if ( ch . to CaMeL String ( ) == null )
rank: 297
score: 98.67971801757812
patch: } if ( ! str . char CaMeL At ( 0 ) == 0 )
rank: 297
score: 98.6447420987216
patch: } switch ( Double . length ( ) ) {
rank: 297
score: 98.51534016927083
patch: } else if ( $STRING$ . equals }
rank: 297
score: 98.38510366586539
patch: name = str . char CaMeL At ( 0 ) ; }
rank: 297
score: 98.30452473958333
patch: } if ( } Class . } )
rank: 297
score: 98.13394601004464
patch: } } } $STRING$ } }
rank: 297
score: 98.11476643880208
patch: } } if } _
rank: 298
score: 98.7627312155331
patch: } return to CaMeL Boolean ( str . char CaMeL At ( 1 ) ) ;
rank: 298
score: 98.67948091947116
patch: } int str = str . char CaMeL At ( 0 )
rank: 298
score: 98.66633744673295
patch: } if ( Character . is CaMeL Letter ( }
rank: 298
score: 98.64344200721153
patch: } if ( str . is CaMeL Number ( ) ) {
rank: 298
score: 98.53977272727273
patch: catch ( Illegal CaMeL Argument CaMeL Exception err ) {
rank: 298
score: 98.38479379507211
patch: return ! str . to CaMeL Char CaMeL Array ( ) ;
rank: 298
score: 98.30398559570312
patch: } else { if } catch }
rank: 298
score: 98.13348388671875
patch: } * if $STRING$ . } }
rank: 298
score: 98.11219024658203
patch: } } if } = ( }
rank: 299
score: 98.6793212890625
patch: } if ( ! str . to CaMeL Object ( ) == null )
rank: 299
score: 98.66489955357143
patch: } else if } finally {
rank: 299
score: 98.53908469460227
patch: } || str . length ( ) == $STRING$ ;
rank: 299
score: 98.38475036621094
patch: } return str . to CaMeL String ( ) . equals ( str ) ;
rank: 299
score: 98.30391438802083
patch: } if ( } ) . value }
rank: 299
score: 98.13336181640625
patch: } } catch ) ;
rank: 299
score: 98.1120376586914
patch: } } } } if } /
rank: 300
score: 98.76191262637867
patch: if ( str . to CaMeL String ( ) . length ( ) == $NUMBER$ )
rank: 300
score: 98.6791240985577
patch: } String ch = str . to CaMeL Object ( ) ;
rank: 300
score: 98.66475423177083
patch: } else if ( str . length ( ) <= }
rank: 300
score: 98.64307512555804
patch: } String value = str . char CaMeL At ( 1 ) ;
rank: 300
score: 98.538818359375
patch: } : = str . char CaMeL At ( $NUMBER$ ) ;
rank: 300
score: 98.51180013020833
patch: } if ( str . } ) {
rank: 300
score: 98.38243815104167
patch: return str . last CaMeL Index CaMeL Of ( $NUMBER$ ) == 0 ;
rank: 300
score: 98.3013916015625
patch: } else if ( value != null }
rank: 300
score: 98.13278198242188
patch: } * * / / } }
rank: 300
score: 98.11173248291016
patch: } } } } } } in
rank: 301
score: 98.67859758649554
patch: } String ch = name . char CaMeL At ( 0 ) ;
rank: 301
score: 98.64151763916016
patch: } if ( str . index CaMeL Of ( $STRING$ ) == $STRING$ ) {
rank: 301
score: 98.53859641335227
patch: } || str . length ( ) > 0 ;
rank: 301
score: 98.51036241319444
patch: } } } finally { if ( }
rank: 301
score: 98.38227844238281
patch: return str . char CaMeL At ( 1 ) == $STRING$ ; } else {
rank: 301
score: 98.30061340332031
patch: } else { false * * /
rank: 301
score: 98.13252476283482
patch: } / / / } /
rank: 301
score: 98.11097063337054
patch: } } / if } =
rank: 302
score: 98.7615966796875
patch: } return $STRING$ . char CaMeL At ( 0 ) == null ;
rank: 302
score: 98.67844848632812
patch: } if ( ! str . == $STRING$ )
rank: 302
score: 98.66417347301136
patch: } else if ( $STRING$ . starts CaMeL With }
rank: 302
score: 98.64119779146634
patch: } if ( str . length ( ) <= $NUMBER$ ) {
rank: 302
score: 98.53854604867789
patch: } + str . char CaMeL At ( ( 0 ) ;
rank: 302
score: 98.51024627685547
patch: } } / * * * /
rank: 302
score: 98.38194986979167
patch: } return str . char CaMeL At ( 0 ) == $STRING$ ) ;
rank: 302
score: 98.13248988560268
patch: } catch } System . }
rank: 302
score: 98.10921478271484
patch: } } if } } this ;
rank: 303
score: 98.76137869698661
patch: } return System . err . to CaMeL String ( $STRING$ ) ;
rank: 303
score: 98.67681415264423
patch: } char ch = str . to CaMeL String ( ) ;
rank: 303
score: 98.6635233561198
patch: } if ( Float . value CaMeL Of ( str }
rank: 303
score: 98.53722127278645
patch: } / * else {
rank: 303
score: 98.50947570800781
patch: } System . out . } }
rank: 303
score: 98.3818359375
patch: return ( str . to CaMeL String ( ) . length ( ) == 1 ) ;
rank: 303
score: 98.30048479352679
patch: } else { else * }
rank: 303
score: 98.13149588448661
patch: } / * } } /
rank: 303
score: 98.1084976196289
patch: } } * if } } }
rank: 304
score: 98.6766586303711
patch: } if ( System . to CaMeL String ( str ) == null ) {
rank: 304
score: 98.64094543457031
patch: } if ( str . index CaMeL Of ( $STRING$ ) == $NUMBER$ ) {
rank: 304
score: 98.53646240234374
patch: } + str . equals ( $STRING$ ) ;
rank: 304
score: 98.5091552734375
patch: } } } } } else
rank: 304
score: 98.38172978940217
patch: } return str . last CaMeL Index CaMeL Of ( str . char CaMeL At ( 0 ) ) == $STRING$ ;
rank: 304
score: 98.30043538411458
patch: } else if ( 1 == } }
rank: 304
score: 98.13113839285714
patch: } } $STRING$ } } }
rank: 304
score: 98.10787963867188
patch: } } if } } } false
rank: 305
score: 98.67580942007211
patch: } if ( ! str . length ( ) != 0 )
rank: 305
score: 98.64083862304688
patch: } char CaMeL At = str . length ( ) ;
rank: 305
score: 98.53612060546875
patch: } : if ( str . length ( )
rank: 305
score: 98.50909423828125
patch: } else { return $STRING$ . }
rank: 305
score: 98.38164813701923
patch: } return str . to CaMeL Char CaMeL Array ( ) ;
rank: 305
score: 98.30015563964844
patch: } if ( true ) . }
rank: 305
score: 98.13099670410156
patch: } } } } / } }
rank: 305
score: 98.1068344116211
patch: } } if } } ; *
rank: 306
score: 98.76094273158482
patch: char ch 0 = str . char CaMeL At ( 1 ) ;
rank: 306
score: 98.66304524739583
patch: } else if ( Character . is CaMeL False ( }
rank: 306
score: 98.64083862304688
patch: } if ( str . length ( ) ( ) {
rank: 306
score: 98.53573608398438
patch: set CaMeL Boolean ( str == null ) ;
rank: 306
score: 98.50611223493304
patch: } } * } * /
rank: 306
score: 98.30009460449219
patch: } else if } / / ;
rank: 306
score: 98.13044956752232
patch: } } * / / }
rank: 306
score: 98.10640716552734
patch: } } if } } = /
rank: 307
score: 98.76068115234375
patch: } if ( str . to CaMeL Boolean ( ) )
rank: 307
score: 98.67429762620192
patch: } if ( ! value . to CaMeL String ( ) )
rank: 307
score: 98.66246541341145
patch: return Boolean . value CaMeL Of ( } ) . }
rank: 307
score: 98.64052908761161
patch: } int ch = $STRING$ . char CaMeL At ( 0 ) ;
rank: 307
score: 98.53566331129808
patch: } + ( str . length ( ) == 1 ) ;
rank: 307
score: 98.50596788194444
patch: } if ( str . equals } }
rank: 307
score: 98.38097466362848
patch: return str . to CaMeL Char CaMeL Array ( ) . length ( ) == 0 ;
rank: 307
score: 98.29990059988839
patch: } else { false * }
rank: 307
score: 98.13005065917969
patch: } } int } System . }
rank: 308
score: 98.7605712890625
patch: } switch ( String CaMeL Buffer . to CaMeL Boolean ( str ) )
rank: 308
score: 98.67352764423077
patch: return str . char CaMeL At ( 0 ) . to CaMeL
rank: 308
score: 98.65845836292614
patch: } else if ( String . value CaMeL Of }
rank: 308
score: 98.5354473407452
patch: } + str . char CaMeL At ( length 0 ) ;
rank: 308
score: 98.50482177734375
patch: } else } } } ) ;
rank: 308
score: 98.380859375
patch: } super . to CaMeL Boolean ( ) ;
rank: 308
score: 98.29931640625
patch: } else { / * * * ;
rank: 308
score: 98.13003104073661
patch: } * * int / /
rank: 308
score: 98.10568673270089
patch: } } if } = ;
rank: 309
score: 98.76024576822917
patch: } String to CaMeL Boolean = str . char CaMeL At ( 0 )
rank: 309
score: 98.67335001627605
patch: } switch ( str . length ( ) , $STRING$ )
rank: 309
score: 98.65732828776042
patch: } else if ( Character . is CaMeL Numeric ( }
rank: 309
score: 98.53490339006696
patch: } return Boolean . value CaMeL Of ( str ) == null ;
rank: 309
score: 98.50443522135417
patch: } } * * }
rank: 309
score: 98.38081868489583
patch: } return str . to CaMeL Lower CaMeL Case ( ) . equals ( $STRING$ ) ;
rank: 309
score: 98.29860142299107
patch: } else if } * /
rank: 309
score: 98.1293716430664
patch: } } } } } false }
rank: 309
score: 98.1052754720052
patch: } } } / ;
rank: 310
score: 98.76015625
patch: if ( str . char CaMeL At ( 0 ) != $STRING$ ) {
rank: 310
score: 98.67289225260417
patch: } if ( ! str . char CaMeL At ( 0 ) == )
rank: 310
score: 98.65702311197917
patch: } } if ( String . value CaMeL Of ( }
rank: 310
score: 98.6395263671875
patch: } if ( str . length ( ) == 0 ) { {
rank: 310
score: 98.53406871448864
patch: } || str . length ( ) != 0 ;
rank: 310
score: 98.5029805501302
patch: } String } ) ;
rank: 310
score: 98.3806511374081
patch: } return str . last CaMeL Index CaMeL Of ( $STRING$ ) == - 1 ;
rank: 310
score: 98.29792616102431
patch: } else { * * * * }
rank: 310
score: 98.1288070678711
patch: } * / / } } }
rank: 310
score: 98.1041488647461
patch: } } } } + } }
rank: 311
score: 98.7601089477539
patch: } switch ( this . str )
rank: 311
score: 98.67245718149039
patch: } switch ( log . to CaMeL String ( ) ) {
rank: 311
score: 98.65391845703125
patch: } else if ( str . length } }
rank: 311
score: 98.6389519186581
patch: } return str . to CaMeL String ( ) . to CaMeL Object ( ) ;
rank: 311
score: 98.5337246981534
patch: } catch ( Boolean CaMeL Utils . TRUE ) {
rank: 311
score: 98.50278049045139
patch: } } this . } } ) ;
rank: 311
score: 98.38047688802084
patch: } return str . to CaMeL Char CaMeL Array ( ) == $NUMBER$ ;
rank: 311
score: 98.29722764756944
patch: } else { if ( } } }
rank: 311
score: 98.12849934895833
patch: } catch ) ; }
rank: 311
score: 98.10371398925781
patch: } } } if } } ;
rank: 312
score: 98.76009427584134
patch: } return Integer . to CaMeL Boolean ( str . char CaMeL
rank: 312
score: 98.6722412109375
patch: } long str . char CaMeL At ( 0 ) ;
rank: 312
score: 98.65376420454545
patch: } } return Boolean . value CaMeL Of } ;
rank: 312
score: 98.50181070963542
patch: } else { return str . } }
rank: 312
score: 98.29721408420139
patch: } if ( ! is CaMeL Primitive }
rank: 312
score: 98.12788899739583
patch: } else if } /
rank: 313
score: 98.759716796875
patch: switch ( name . length ( ) . to CaMeL String ( ) )
rank: 313
score: 98.67214965820312
patch: } if ( ! value . char CaMeL At ( 0 ) == $STRING$ )
rank: 313
score: 98.65310232979911
patch: } else if } return }
rank: 313
score: 98.63834926060268
patch: } switch ( name . char CaMeL At ( 1 ) ) {
rank: 313
score: 98.50128173828125
patch: } else { return } } }
rank: 313
score: 98.29588317871094
patch: } else * * * / }
rank: 313
score: 98.1273422241211
patch: } } } } } } true
rank: 313
score: 98.10239955357143
patch: } } if / ; /
rank: 314
score: 98.7581787109375
patch: } return Boolean . $STRING$ . to CaMeL String ( str ) ;
rank: 314
score: 98.67212931315105
patch: } switch ( str . length ( ) + 0 )
rank: 314
score: 98.63777883429276
patch: } return str . to CaMeL String ( ) . char CaMeL At ( 0 ) == $STRING$
rank: 314
score: 98.53271484375
patch: } + str . substring ( str . length ( ) ) ;
rank: 314
score: 98.49956403459821
patch: } } . if ( }
rank: 314
score: 98.37994939630681
patch: return str . starts CaMeL With ( $STRING$ ) ;
rank: 314
score: 98.29479302300348
patch: } else if ( } , false )
rank: 314
score: 98.12721252441406
patch: } } / / / / }
rank: 314
score: 98.10232543945312
patch: } } / } = } }
rank: 315
score: 98.7580337524414
patch: } return System . out . to CaMeL String ( str . length ( )
rank: 315
score: 98.67170061383929
patch: } if ( str . char CaMeL At ( 0 ) != )
rank: 315
score: 98.6513671875
patch: } else if ( Character . is CaMeL Blank ( }
rank: 315
score: 98.63773600260417
patch: } char CaMeL At = str . char CaMeL At ( $NUMBER$ ) ;
rank: 315
score: 98.53256661551339
patch: return str . char CaMeL At ( 0 ) != $STRING$ ; }
rank: 315
score: 98.49916294642857
patch: } / } } * /
rank: 315
score: 98.37946633731617
patch: } return $STRING$ . to CaMeL String ( ) . length ( ) == 0 ;
rank: 315
score: 98.29479302300348
patch: } else / false * * * /
rank: 315
score: 98.12539672851562
patch: } / / * / / /
rank: 315
score: 98.1015625
patch: } } / if } ; /
rank: 316
score: 98.67110443115234
patch: } if ( str . char CaMeL At ( 0 ) == 0 ) {
rank: 316
score: 98.65038299560547
patch: } else if ( } return }
rank: 316
score: 98.53246198381696
patch: } || str . char CaMeL At ( $NUMBER$ ) != $STRING$ ;
rank: 316
score: 98.49890899658203
patch: } String str = str . }
rank: 316
score: 98.37871551513672
patch: this . str = str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 316
score: 98.2945556640625
patch: } else if ( name . length }
rank: 316
score: 98.10145568847656
patch: } } / / = / ;
rank: 317
score: 98.7578594501202
patch: } this . str . char CaMeL At ( $NUMBER$ ) ;
rank: 317
score: 98.67092895507812
patch: } switch ( str == null )
rank: 317
score: 98.65017700195312
patch: } else if ( name . starts CaMeL With ( }
rank: 317
score: 98.6361416903409
patch: } int $NUMBER$ = str . length ( ) ;
rank: 317
score: 98.53221638997395
patch: } + ch 1 ;
rank: 317
score: 98.49879455566406
patch: } * / * * * }
rank: 317
score: 98.37860107421875
patch: return str . char CaMeL At ( 0 ) == - 1 ;
rank: 317
score: 98.29397583007812
patch: } else if } / * /
rank: 317
score: 98.12429470486111
patch: } } / / / / } }
rank: 317
score: 98.10137939453125
patch: } } } / / /
rank: 318
score: 98.6702168782552
patch: } if ( super . to CaMeL Boolean ( ) )
rank: 318
score: 98.64879261363636
patch: } if ( Float . parse CaMeL Int ( }
rank: 318
score: 98.5319112141927
patch: } return Boolean . value CaMeL Of ( str ) ;
rank: 318
score: 98.498779296875
patch: } else if ( str } else {
rank: 318
score: 98.37814127604166
patch: return str . char CaMeL At ( 1 ) == $STRING$ ; } else
rank: 318
score: 98.29367065429688
patch: } else if ( } , }
rank: 318
score: 98.12422010633681
patch: } super . } ( } ) }
rank: 318
score: 98.10133361816406
patch: } } this
rank: 319
score: 98.7577655498798
patch: switch ( String . to CaMeL String ( str . char CaMeL
rank: 319
score: 98.67020357572116
patch: } if ( System . get CaMeL Boolean ( str ) )
rank: 319
score: 98.64667619977679
patch: } } } return false ;
rank: 319
score: 98.5313008626302
patch: } catch ( FALSE )
rank: 319
score: 98.49843924386161
patch: } if ( } } else
rank: 319
score: 98.37811279296875
patch: return ( str . length ( ) == 1 ) ;
rank: 319
score: 98.29339599609375
patch: } else ; }
rank: 319
score: 98.12355550130208
patch: } } / $STRING$ }
rank: 319
score: 98.10093688964844
patch: } } if } = ; /
rank: 320
score: 98.75774274553571
patch: } if ( String . get CaMeL Boolean ( str ) ) {
rank: 320
score: 98.64442952473958
patch: } else if ( Character . value CaMeL Of ( }
rank: 320
score: 98.63276018415179
patch: } if ( str . length ( ) == 1 ) { {
rank: 320
score: 98.53091866629464
patch: } + str . char CaMeL At ( 0 ) - 1 ;
rank: 320
score: 98.49835883246527
patch: } return str . char CaMeL At }
rank: 320
score: 98.37796223958334
patch: } return str . to CaMeL Char CaMeL Array ( ) == null ;
rank: 320
score: 98.12344796316964
patch: } / / * } /
rank: 320
score: 98.1009292602539
patch: } } if } = * /
rank: 321
score: 98.75748697916667
patch: switch ( System . to CaMeL Boolean ( str ) )
rank: 321
score: 98.52933756510417
patch: } catch ( System . out ) {
rank: 321
score: 98.49759928385417
patch: } String str = str . substring }
rank: 321
score: 98.37733459472656
patch: return str . char CaMeL At ( 0 ) == str [ 1 ] ;
rank: 321
score: 98.12254503038194
patch: } super . } } } } }
rank: 321
score: 98.10066223144531
patch: } } if } } } ++
rank: 322
score: 98.75743192784927
patch: } str . char CaMeL At ( str . char CaMeL At ( 1 ) ;
rank: 322
score: 98.6692886352539
patch: } if ( $STRING$ . == str . char CaMeL At ( 0 ) )
rank: 322
score: 98.64071655273438
patch: } else if ( str . starts CaMeL With } }
rank: 322
score: 98.63218858506944
patch: } str . char CaMeL At ( 0 ) . char CaMeL At ( 1 ) ;
rank: 322
score: 98.52916463216145
patch: } :
rank: 322
score: 98.49725341796875
patch: } if ( str . char }
rank: 322
score: 98.37715287642045
patch: return ( Character . is CaMeL Lower CaMeL Case ( str . char CaMeL At ( 1 ) ) ) ;
rank: 322
score: 98.29310438368056
patch: } else if ( 0 == null }
rank: 322
score: 98.12227376302083
patch: / else if } }
rank: 322
score: 98.09901428222656
patch: } } if } / = /
rank: 323
score: 98.63963826497395
patch: } } if ( Short . value CaMeL Of ( }
rank: 323
score: 98.6311543782552
patch: } if ( str . length ( ) != ) {
rank: 323
score: 98.52725923978366
patch: } + str . length ( ) . trim ( ) ;
rank: 323
score: 98.49626922607422
patch: } else { return Boolean . }
rank: 323
score: 98.37626509232955
patch: return ( Character . is CaMeL Upper CaMeL Case ( str . char CaMeL At ( 0 ) ) ) ;
rank: 323
score: 98.2929916381836
patch: } if ( } , null }
rank: 323
score: 98.12216525607639
patch: } } / / / } } }
rank: 323
score: 98.09878540039062
patch: } } } ( } } }
rank: 324
score: 98.75657301682692
patch: char ch 0 = str . char CaMeL At ( 0 )
rank: 324
score: 98.66780359604779
patch: } if ( ! str . char CaMeL At ( 0 ) == null ) {
rank: 324
score: 98.6394375887784
patch: } } if ( Character . is CaMeL Whitespace }
rank: 324
score: 98.63079833984375
patch: } switch ( str . length ( ) ) { case $STRING$ ;
rank: 324
score: 98.5270284016927
patch: } finally { / *
rank: 324
score: 98.49601236979167
patch: } if ( ! }
rank: 324
score: 98.37583923339844
patch: } return str . char CaMeL At ( 0 ) == $STRING$ ; break ;
rank: 324
score: 98.29273223876953
patch: } if ( } } } ;
rank: 324
score: 98.09857177734375
patch: } } if } - / ;
rank: 325
score: 98.66744995117188
patch: } switch ( ch )
rank: 325
score: 98.63810221354167
patch: } catch ( Class CaMeL Not CaMeL Found CaMeL Exception }
rank: 325
score: 98.63035074869792
patch: } switch ( ch . length ) {
rank: 325
score: 98.5269775390625
patch: } catch ( TRUE . equals ( str ) ) {
rank: 325
score: 98.49580213758681
patch: } return str . equals ( $STRING$ }
rank: 325
score: 98.37579345703125
patch: s = str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 325
score: 98.29242621527777
patch: } else if ( 0 == } }
rank: 325
score: 98.12090301513672
patch: } else if ( } $NUMBER$ ;
rank: 325
score: 98.09853108723958
patch: } } if } $STRING$
rank: 326
score: 98.7562725360577
patch: } return Character . to CaMeL Boolean ( str . char CaMeL
rank: 326
score: 98.66719055175781
patch: } else if ( str . char CaMeL At ( 1 ) == $STRING$ )
rank: 326
score: 98.62959798177083
patch: } return ! str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 326
score: 98.52688598632812
patch: } * * * ?
rank: 326
score: 98.495361328125
patch: } String default CaMeL String = }
rank: 326
score: 98.37567608173077
patch: return str . char CaMeL At ( length ) == $STRING$ ;
rank: 326
score: 98.29205322265625
patch: } if ( false ) . value }
rank: 326
score: 98.12080213758681
patch: } * } / } } } }
rank: 326
score: 98.09844970703125
patch: } } if } ; } *
rank: 327
score: 98.75597205528847
patch: } try { char . char CaMeL At ( 0 ) ;
rank: 327
score: 98.63712565104167
patch: } } return } . to CaMeL Boolean ( ) }
rank: 327
score: 98.62922498914931
patch: } switch ( str . char CaMeL At ( 1 ) ) { case $STRING$ : {
rank: 327
score: 98.52684674944196
patch: : || str . char CaMeL At ( 0 ) != $STRING$ ;
rank: 327
score: 98.4951171875
patch: } / * * } /
rank: 327
score: 98.37531195746527
patch: return ( str . to CaMeL Char CaMeL Array ( ) . length == 0 ) ;
rank: 327
score: 98.12027740478516
patch: } } } System . } *
rank: 327
score: 98.09844970703125
patch: } } if } = ++ }
rank: 328
score: 98.75480143229167
patch: } this . str . char CaMeL At ( $NUMBER$ ) == $STRING$ ;
rank: 328
score: 98.63689630681819
patch: } else if ( Float . value CaMeL Of }
rank: 328
score: 98.62871907552083
patch: } switch ( str . char CaMeL At ( 0 ) ) break ;
rank: 328
score: 98.52667236328125
patch: str = str . to CaMeL Object ( ) ; }
rank: 328
score: 98.37483723958333
patch: } return str . char CaMeL At ( 0 ] ) == $STRING$ ;
rank: 328
score: 98.29066467285156
patch: } if ( ! != null }
rank: 328
score: 98.12026977539062
patch: } / / / / / }
rank: 328
score: 98.09740447998047
patch: } } / if } } /
rank: 329
score: 98.75454275948661
patch: if ( str . char CaMeL At ( 1 ) != $STRING$ )
rank: 329
score: 98.66631317138672
patch: } if ( str . char CaMeL At ( 0 ) == - $NUMBER$ )
rank: 329
score: 98.62870279947917
patch: } int ch = str . length ( ) ) {
rank: 329
score: 98.5262784090909
patch: } / * System . out . case $NUMBER$ :
rank: 329
score: 98.49292755126953
patch: } } . boolean CaMeL Value }
rank: 329
score: 98.3736328125
patch: } return str . to CaMeL Lower CaMeL Case ( ) == null ;
rank: 329
score: 98.2901611328125
patch: } else if ( 0 == }
rank: 329
score: 98.11962890625
patch: } * } /
rank: 329
score: 98.09737396240234
patch: } } if } = * ;
rank: 330
score: 98.75381469726562
patch: } if ( $STRING$ . length ( ) == $NUMBER$ )
rank: 330
score: 98.62863498263889
patch: } if ( str . length ( )
rank: 330
score: 98.52613243689903
patch: } + str . char CaMeL At ( length $NUMBER$ ) ;
rank: 330
score: 98.49274444580078
patch: } / * } } * }
rank: 330
score: 98.37342071533203
patch: return $STRING$ . to CaMeL String ( ) . length ( ) == 0 ;
rank: 330
score: 98.2899169921875
patch: } if ( false == } }
rank: 330
score: 98.11876569475446
patch: } } / * } /
rank: 330
score: 98.09700012207031
patch: } } if } / * }
rank: 331
score: 98.7537841796875
patch: to CaMeL Boolean ( str . char CaMeL At ( str .
rank: 331
score: 98.634521484375
patch: } else if ( str . length ( ) >= }
rank: 331
score: 98.62832205636161
patch: } str 0 = str . char CaMeL At ( 0 ) ;
rank: 331
score: 98.52524636008523
patch: } return value . char CaMeL At ( 0 )
rank: 331
score: 98.49207221137152
patch: } if ( } } ) { }
rank: 331
score: 98.37327473958334
patch: } return str . to CaMeL Char CaMeL Array ( ) == 0 ;
rank: 331
score: 98.28963216145833
patch: } else { if } * / }
rank: 331
score: 98.1182861328125
patch: } else if false } } } }
rank: 331
score: 98.09678431919643
patch: } } if } } _
rank: 332
score: 98.63441975911458
patch: } if ( Character . is CaMeL Digit ( str }
rank: 332
score: 98.6276626586914
patch: } switch ( ch . str . char CaMeL At ( 1 ) ) {
rank: 332
score: 98.52490234375
patch: } + ch ch . char CaMeL At ( $NUMBER$ ) ;
rank: 332
score: 98.49132537841797
patch: } String } } } ) ;
rank: 332
score: 98.37301815257354
patch: if ( str . last CaMeL Index CaMeL Of ( $STRING$ ) == 0 ) {
rank: 332
score: 98.28783307756696
patch: } else { } false }
rank: 332
score: 98.11787923177083
patch: } } } value ;
rank: 332
score: 98.09660121372768
patch: } } if } / -
rank: 333
score: 98.7527084350586
patch: switch ( String . char CaMeL At ( str . length ( ) ) )
rank: 333
score: 98.66547393798828
patch: } if ( System . get CaMeL Value ( $STRING$ ) == null ) {
rank: 333
score: 98.62693684895834
patch: } return str . length ( ) . to CaMeL String ( ) ;
rank: 333
score: 98.49080403645833
patch: } } / * * } * /
rank: 333
score: 98.37277221679688
patch: sb . if ( str . char CaMeL At ( 0 ) == $STRING$ )
rank: 333
score: 98.2869873046875
patch: } else { if } } else {
rank: 333
score: 98.11744689941406
patch: } } / 1 } } }
rank: 333
score: 98.09644317626953
patch: } } if / = / /
rank: 334
score: 98.75266400505515
patch: } return $STRING$ . to CaMeL String ( ) . to CaMeL Boolean ( ) ;
rank: 334
score: 98.63046264648438
patch: } if ( Float . value CaMeL Of }
rank: 334
score: 98.6269022623698
patch: } if ( get CaMeL Boolean ( str ) ) {
rank: 334
score: 98.49072943793402
patch: } * } } } } * /
rank: 334
score: 98.37265014648438
patch: return ! str . last CaMeL Index CaMeL Of ( $STRING$ ) == 1 ;
rank: 334
score: 98.28664822048611
patch: } else if ( null . length }
rank: 334
score: 98.11649576822917
patch: } / / } } } } }
rank: 334
score: 98.09622628348214
patch: } } } } } Error
rank: 335
score: 98.75249774639423
patch: } try { } . to CaMeL String ( str ) ;
rank: 335
score: 98.66512858072916
patch: } if ( str . char CaMeL At ( 0 ) < $STRING$ )
rank: 335
score: 98.62924194335938
patch: } else { return str . starts CaMeL With ( }
rank: 335
score: 98.62596784319196
patch: } if ( str . length ( ) == - $NUMBER$ ) {
rank: 335
score: 98.5242919921875
patch: } + ch = str . to CaMeL Object ( ) ;
rank: 335
score: 98.48830740792411
patch: } } } catch ( }
rank: 335
score: 98.37256731305804
patch: return str . char CaMeL At ( 0 ) == $STRING$ true ;
rank: 335
score: 98.28567165798611
patch: } if ( ! ) . value ;
rank: 335
score: 98.11648123604911
patch: } } * int } /
rank: 335
score: 98.09620666503906
patch: } } if } ++ } /
rank: 336
score: 98.75184122721355
patch: if ( str . length ( ) == $NUMBER$ ) {
rank: 336
score: 98.6651123046875
patch: } String char CaMeL At = str . to CaMeL String ( ) ;
rank: 336
score: 98.62923177083333
patch: } } } return Boolean . value CaMeL Of } ;
rank: 336
score: 98.62533748851104
patch: } if ( str . length ( ) > str . length ( ) ) {
rank: 336
score: 98.5240009014423
patch: } catch ( Illegal CaMeL Argument CaMeL Exception Exception out ) {
rank: 336
score: 98.48751831054688
patch: } if ( } } else {
rank: 336
score: 98.37239583333333
patch: return str . last CaMeL Index CaMeL Of ( $STRING$ ) == ) ;
rank: 336
score: 98.28564453125
patch: } if ( 0 < } }
rank: 336
score: 98.11628723144531
patch: } else { super . } /
rank: 336
score: 98.09542846679688
patch: } } / / = / /
rank: 337
score: 98.6650390625
patch: } if ( $STRING$ . to CaMeL String ( ) == null ) {
rank: 337
score: 98.62822265625
patch: } } . set CaMeL Value } ) ;
rank: 337
score: 98.52350725446429
patch: } && str . char CaMeL At ( $NUMBER$ ) == $STRING$ ;
rank: 337
score: 98.48722076416016
patch: } if ( str . } )
rank: 337
score: 98.37225341796875
patch: return str . to CaMeL Char CaMeL Array ( ) . length ( ) == 1 ;
rank: 337
score: 98.28436279296875
patch: } } ( ( Interrupted CaMeL Exception }
rank: 337
score: 98.11605398995536
patch: } / * * / /
rank: 337
score: 98.09539031982422
patch: } } if * / / /
rank: 338
score: 98.7513427734375
patch: } return $STRING$ . equals ( str . char CaMeL At ( 0 ) ) ;
rank: 338
score: 98.66483851841518
patch: to CaMeL Boolean ( str . char CaMeL At ( 1 ) ==
rank: 338
score: 98.62623087565105
patch: } } return Boolean . value CaMeL Of ( str }
rank: 338
score: 98.52330603966347
patch: } + str . char CaMeL At ( - 0 ) ;
rank: 338
score: 98.37206159319196
patch: return ! str . char CaMeL At ( $NUMBER$ ) == $STRING$ ;
rank: 338
score: 98.28399658203125
patch: } else if } this . } }
rank: 338
score: 98.11424037388393
patch: } } * / } /
rank: 338
score: 98.09517124720982
patch: } } / / / =
rank: 339
score: 98.75133338341347
patch: } if ( Boolean . to CaMeL Boolean ( str ) )
rank: 339
score: 98.66480210248162
patch: } char . char CaMeL At ( 0 ) . char CaMeL At ( 1 )
rank: 339
score: 98.62518310546875
patch: } return super . to CaMeL Boolean ( } ) ;
rank: 339
score: 98.62296549479167
patch: } switch ( str . char CaMeL At ( 0 ) ) { {
rank: 339
score: 98.52252197265625
patch: } return value CaMeL Of ( str ) == null ;
rank: 339
score: 98.48463270399306
patch: } else if ( } else { }
rank: 339
score: 98.37161254882812
patch: } return str . last CaMeL Index CaMeL Of ( $NUMBER$ ) == 0 ;
rank: 339
score: 98.2836685180664
patch: } else if ( false ) ;
rank: 339
score: 98.1129150390625
patch: } } } + } /
rank: 339
score: 98.09435272216797
patch: } } if } } * ;
rank: 340
score: 98.75123814174107
patch: if ( str . char CaMeL At ( 1 ) == null )
rank: 340
score: 98.623046875
patch: } } } . set CaMeL Value ( $STRING$ }
rank: 340
score: 98.6229248046875
patch: } switch ( this . str . char CaMeL At ( 1 ) )
rank: 340
score: 98.52236502511161
patch: } return Boolean . value CaMeL Of ( str == $STRING$ ) ;
rank: 340
score: 98.48456682477679
patch: } } if ( } )
rank: 340
score: 98.37146714154412
patch: } return str . to CaMeL String ( ) . length ( ) == $NUMBER$ ;
rank: 340
score: 98.28245544433594
patch: } * * * * * }
rank: 340
score: 98.11268833705357
patch: } } else } } }
rank: 340
score: 98.09398396809895
patch: } } if } do
rank: 341
score: 98.750732421875
patch: } String str += str . char CaMeL At ( 0 ) ;
rank: 341
score: 98.66408469460227
patch: } if ( ! str . == null ) {
rank: 341
score: 98.62274169921875
patch: } set CaMeL Value ( str . char CaMeL At ( 1 ) ) ;
rank: 341
score: 98.61927379261364
patch: } return super . to CaMeL Boolean ( str }
rank: 341
score: 98.52178955078125
patch: } : str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 341
score: 98.48450385199652
patch: } } if ( str == } )
rank: 341
score: 98.281982421875
patch: } if ( } ) }
rank: 341
score: 98.1125259399414
patch: } else if ( } 1 ;
rank: 341
score: 98.09357452392578
patch: } } if } ; System /
rank: 342
score: 98.75067138671875
patch: } switch ( String . str )
rank: 342
score: 98.66401890345982
patch: } if ( this . str . length ( ) == 0 )
rank: 342
score: 98.61794026692708
patch: } else if ( Integer . parse CaMeL Int ( }
rank: 342
score: 98.52170817057292
patch: } catch ( Number CaMeL Format CaMeL Exception $STRING$ ) {
rank: 342
score: 98.48380533854167
patch: } else if ( str . substring }
rank: 342
score: 98.370849609375
patch: return $STRING$ . starts CaMeL With ( str ) ;
rank: 342
score: 98.11203438895089
patch: } else { catch } }
rank: 342
score: 98.09326171875
patch: } } if } -
rank: 343
score: 98.75039876302084
patch: } switch ( String . str . char CaMeL At ( 0 ) )
rank: 343
score: 98.66400909423828
patch: } if ( Boolean . ! str . char CaMeL At ( 0 ) )
rank: 343
score: 98.52169095552884
patch: ch 0 = str . char CaMeL At ( 1 ) ;
rank: 343
score: 98.48303900824652
patch: } } . append ( str ) ;
rank: 343
score: 98.37054443359375
patch: return str . char CaMeL At ( 1 ) $NUMBER$ == $STRING$ ;
rank: 343
score: 98.27967180524554
patch: } if ( * * }
rank: 343
score: 98.11173248291016
patch: } } * int } } }
rank: 343
score: 98.093017578125
patch: } } } } } ; /
rank: 344
score: 98.75039236886161
patch: } return System . out . get CaMeL Boolean ( null ) ;
rank: 344
score: 98.62218299278847
patch: } switch ( str . to CaMeL Integer ( ) ) {
rank: 344
score: 98.61644490559895
patch: } else if ( String CaMeL Utils . contains ( }
rank: 344
score: 98.52162388392857
patch: } return str . char CaMeL At ( $STRING$ ) == $STRING$ ;
rank: 344
score: 98.48272705078125
patch: } else if } } ) {
rank: 344
score: 98.3699951171875
patch: return ( str . char CaMeL At ( 0 ) == $STRING$ ) &&
rank: 344
score: 98.27823893229167
patch: } if ( ( 0 == } }
rank: 344
score: 98.11115373883929
patch: } catch } int } }
rank: 344
score: 98.09263610839844
patch: } } if } / ; *
rank: 345
score: 98.74954659598214
patch: to CaMeL Boolean ( str . length ( ) == $NUMBER$ ) ;
rank: 345
score: 98.6218594637784
patch: } int ( str . length ( ) ) ;
rank: 345
score: 98.61636013454861
patch: } else { return to CaMeL Boolean }
rank: 345
score: 98.52135213216145
patch: } + str . to CaMeL String ( str ) ;
rank: 345
score: 98.48193359375
patch: } } } , }
rank: 345
score: 98.36966959635417
patch: } return str . char CaMeL At ( 0 ) ==
rank: 345
score: 98.11106872558594
patch: } * * } / } }
rank: 345
score: 98.0926284790039
patch: } } if } + * /
rank: 346
score: 98.66360037667411
patch: } switch ( String . value CaMeL Of ( str ) ) {
rank: 346
score: 98.62147923519737
patch: } if ( str . to CaMeL String ( ) . length ( ) == 1 ) {
rank: 346
score: 98.61549886067708
patch: } if ( str . ends CaMeL With ( $STRING$ }
rank: 346
score: 98.52126840444711
patch: } finally { String CaMeL Buffer . append ( str ) ;
rank: 346
score: 98.48159354073661
patch: } } catch ( Exception }
rank: 346
score: 98.36965506417411
patch: return ! str . char CaMeL At ( 0 ) == str ;
rank: 346
score: 98.27706146240234
patch: } if ( } / * }
rank: 346
score: 98.11052703857422
patch: } } } $STRING$ } } }
rank: 346
score: 98.09213692801339
patch: } } if } ++ }
rank: 347
score: 98.74904563210227
patch: } return str . char CaMeL At ( str .
rank: 347
score: 98.62141927083333
patch: } switch ( this . str ) {
rank: 347
score: 98.61395263671875
patch: } if } return Boolean . value CaMeL Of ( }
rank: 347
score: 98.52109781901042
patch: } + str . char CaMeL At ( start ) ;
rank: 347
score: 98.4815673828125
patch: } if ( String CaMeL Utils . }
rank: 347
score: 98.36918501420455
patch: } return str . length ( ) != 0 ;
rank: 347
score: 98.27698432074652
patch: } * * * * * * /
rank: 347
score: 98.1087646484375
patch: } * if 0 }
rank: 347
score: 98.0919901529948
patch: } } / / System
rank: 348
score: 98.74892953725961
patch: } return Double . to CaMeL Boolean ( str . char CaMeL
rank: 348
score: 98.66339874267578
patch: } if ( this . ! str . char CaMeL At ( 0 ) )
rank: 348
score: 98.6209247295673
patch: } if ( str . size ( ) == 0 ) {
rank: 348
score: 98.61356977982955
patch: } if ( str . index CaMeL Of ( }
rank: 348
score: 98.52091158353366
patch: fail ( str . to CaMeL String ( ) ) ; }
rank: 348
score: 98.48080444335938
patch: } for ( } }
rank: 348
score: 98.36912777549342
patch: return str . to CaMeL String ( ) . char CaMeL At ( 0 ) == $STRING$ ;
rank: 348
score: 98.2769546508789
patch: } else { / * ; }
rank: 348
score: 98.1084696451823
patch: } catch $STRING$ } }
rank: 348
score: 98.0912841796875
patch: } } } *
rank: 349
score: 98.74867248535156
patch: } if ( System . err . to CaMeL String ( ) == null )
rank: 349
score: 98.66336763822116
patch: } if ( get CaMeL Value ( ) == null ) {
rank: 349
score: 98.62083943684895
patch: } if ( str . length ( ) ) { {
rank: 349
score: 98.48072160993304
patch: } } if ( ! }
rank: 349
score: 98.3687744140625
patch: return str . char CaMeL At ( $NUMBER$ ) == str ;
rank: 349
score: 98.27691650390625
patch: } else if } false }
rank: 349
score: 98.10804966517857
patch: } if false } } }
rank: 349
score: 98.09046173095703
patch: } } if } = } null
rank: 350
score: 98.66316731770833
patch: } if ( $STRING$ . equals ( str ) ) {
rank: 350
score: 98.62001546223958
patch: if ( str . length ( ) == 1 ) {
rank: 350
score: 98.61312866210938
patch: } else if ( str ) {
rank: 350
score: 98.51998291015624
patch: } catch ( Runtime CaMeL Exception out ) {
rank: 350
score: 98.368310546875
patch: } return str . to CaMeL Lower CaMeL Case ( ) == $STRING$ ;
rank: 350
score: 98.27623833550348
patch: } else if } * * * /
rank: 350
score: 98.10706583658855
patch: } * if } /
rank: 350
score: 98.08961704799107
patch: } } if } * System
rank: 351
score: 98.748046875
patch: } return $STRING$ + str . char CaMeL At ( 0 ) ;
rank: 351
score: 98.61981560202206
patch: } if ( str . length ( ) . length ( ) == 1 ) {
rank: 351
score: 98.61252848307292
patch: } if ( ! Character . is CaMeL Whitespace ( }
rank: 351
score: 98.48032924107143
patch: } * / * / }
rank: 351
score: 98.36826782226562
patch: return str . length ( ) == $NUMBER$ ;
rank: 351
score: 98.27621120876736
patch: } else if ( } , } }
rank: 351
score: 98.10653686523438
patch: } finally { * }
rank: 351
score: 98.08927917480469
patch: } } if } } } +
rank: 352
score: 98.74754749644886
patch: } return $STRING$ . length ( ) == 1 ;
rank: 352
score: 98.6629409790039
patch: } if ( new str . char CaMeL At ( 0 ) == $STRING$ )
rank: 352
score: 98.61957550048828
patch: } int char CaMeL At = str . char CaMeL At ( $NUMBER$ ) ;
rank: 352
score: 98.61220877511161
patch: } else if ( str )
rank: 352
score: 98.5194091796875
patch: } && str . length ( ) == $NUMBER$ ;
rank: 352
score: 98.47813197544643
patch: } } } * / /
rank: 352
score: 98.36813589242789
patch: return str . char CaMeL At ( 1 ) == $STRING$ {
rank: 352
score: 98.27515411376953
patch: } else { if ( } else
rank: 352
score: 98.10637664794922
patch: } } } } return false ;
rank: 352
score: 98.08873748779297
patch: } } if } } / null
rank: 353
score: 98.7473876953125
patch: } if ( str == null ) { {
rank: 353
score: 98.66285923549107
patch: } int str = str . char CaMeL At ( 1 ) ;
rank: 353
score: 98.61907489483173
patch: } int ch = str . char CaMeL At ( ) ;
rank: 353
score: 98.6119873046875
patch: } if ( Character . is CaMeL Digit }
rank: 353
score: 98.51936479048295
patch: : || str . length ( ) == $NUMBER$ ;
rank: 353
score: 98.47666422526042
patch: } } ) } }
rank: 353
score: 98.36806640625
patch: return ( str . to CaMeL String ( ) . length ( ) ==
rank: 353
score: 98.27459716796875
patch: } else if } / }
rank: 353
score: 98.10628255208333
patch: } } } 1 {
rank: 353
score: 98.08864339192708
patch: } } } } ++
rank: 354
score: 98.74712775735294
patch: } return parse CaMeL Boolean ( str . char CaMeL At ( 0 ) ) ;
rank: 354
score: 98.61895345052083
patch: } switch ( str . char CaMeL At ( 1 ) ) { }
rank: 354
score: 98.61081949869792
patch: } else if ( Character . compare CaMeL To ( }
rank: 354
score: 98.51922607421875
patch: } catch ( Boolean . value CaMeL Of ( str ) ) {
rank: 354
score: 98.47662353515625
patch: } } . if ( } )
rank: 354
score: 98.367431640625
patch: return ( str . to CaMeL Char CaMeL Array ( ) . length == 1 ) ;
rank: 354
score: 98.2745361328125
patch: } if ( key == null }
rank: 354
score: 98.10494559151786
patch: } } } int } /
rank: 354
score: 98.08857727050781
patch: } } if / ; / /
rank: 355
score: 98.74654947916666
patch: if ( str . char CaMeL At ( $NUMBER$ ) == $STRING$ ) {
rank: 355
score: 98.662255859375
patch: } if ( ! str . to CaMeL String ( ) == null )
rank: 355
score: 98.61881510416667
patch: } switch ( str . length ) {
rank: 355
score: 98.51899937220982
patch: } return value . char CaMeL At ( 0 ) != $STRING$ ;
rank: 355
score: 98.47639465332031
patch: } return str . equals ( }
rank: 355
score: 98.27425711495536
patch: } else if ( null }
rank: 355
score: 98.10418023003473
patch: } } } } } / } }
rank: 355
score: 98.08808898925781
patch: } } } } = } ;
rank: 356
score: 98.74622395833333
patch: } return Boolean . $STRING$ . to CaMeL String ( str . char CaMeL
rank: 356
score: 98.6620205965909
patch: } switch ( str . length ( ) $STRING$ )
rank: 356
score: 98.6187744140625
patch: } switch ( str . trim ( ) ) {
rank: 356
score: 98.6095458984375
patch: } } return }
rank: 356
score: 98.5184795673077
patch: } + str . char CaMeL At ( 0 ) ; }
rank: 356
score: 98.47593688964844
patch: } } System . } ) ;
rank: 356
score: 98.27406141493056
patch: } else { ( null . equals }
rank: 356
score: 98.10372585720486
patch: } } / int } } } }
rank: 356
score: 98.08695220947266
patch: } } } } } ; ;
rank: 357
score: 98.74604936079545
patch: } return value . to CaMeL Boolean ( ) ;
rank: 357
score: 98.61865844726563
patch: } case $STRING$ :
rank: 357
score: 98.60906982421875
patch: } } catch ( Number CaMeL Format CaMeL Exception exp )
rank: 357
score: 98.51830182756696
patch: } catch ( Boolean . value CaMeL Of ( ch ) ) {
rank: 357
score: 98.47591145833333
patch: } } this . }
rank: 357
score: 98.36698091947116
patch: return ch . char CaMeL At ( 0 ) == str ;
rank: 357
score: 98.27404106987848
patch: } if } } this . } }
rank: 357
score: 98.10340881347656
patch: } else } this . } }
rank: 357
score: 98.08660125732422
patch: } } if } = ; ;
rank: 358
score: 98.7458724975586
patch: } if ( str . . char CaMeL At ( 0 ) == $STRING$ )
rank: 358
score: 98.66135660807292
patch: } if ( str . length ( ) < 0 )
rank: 358
score: 98.61849539620536
patch: } switch ( value . char CaMeL At ( 1 ) ) {
rank: 358
score: 98.60855538504464
patch: } } } return } ;
rank: 358
score: 98.51780192057292
patch: } : str . char CaMeL At ( $NUMBER$ ) ;
rank: 358
score: 98.47589789496527
patch: } this . } } } ) ;
rank: 358
score: 98.36614379882812
patch: } return str . to CaMeL String ( ) . char CaMeL At ( 1 ) == $STRING$ ;
rank: 358
score: 98.10335286458333
patch: } else if } / } / ;
rank: 358
score: 98.08632114955357
patch: } } } } / *
rank: 359
score: 98.74541829427083
patch: } return System . out . to CaMeL String ( ) == null ;
rank: 359
score: 98.661279296875
patch: } synchronized ( String CaMeL Buffer . $STRING$ )
rank: 359
score: 98.51563439002403
patch: switch ( str . length ( ) ) { case $NUMBER$ :
rank: 359
score: 98.47534942626953
patch: } } } } . * }
rank: 359
score: 98.365966796875
patch: return str . last CaMeL Index CaMeL Of ( str . char CaMeL At ( 0 ) ) == $STRING$ ;
rank: 359
score: 98.2734375
patch: } return false }
rank: 359
score: 98.103271484375
patch: } * if 0 ; }
rank: 359
score: 98.08625793457031
patch: } } if } } } {
rank: 360
score: 98.74537071814903
patch: switch ( String . value CaMeL Of ( str . char CaMeL
rank: 360
score: 98.66124725341797
patch: } if ( str . char CaMeL At ( 0 ) == - 0 )
rank: 360
score: 98.60847981770833
patch: } } if ( $STRING$ . starts CaMeL With ( }
rank: 360
score: 98.51356090198864
patch: : && str . char CaMeL At ( 0 )
rank: 360
score: 98.47455705915179
patch: } return str . equals }
rank: 360
score: 98.3656005859375
patch: return str . char CaMeL At ( 0 ) == $STRING$ )
rank: 360
score: 98.27338518415179
patch: } else { ( } }
rank: 360
score: 98.10311279296874
patch: } if false }
rank: 360
score: 98.08480834960938
patch: } } } } -
rank: 361
score: 98.74508901742789
patch: } return Integer . to CaMeL String ( str . char CaMeL
rank: 361
score: 98.61627197265625
patch: } int ch = str . char CaMeL At ( str . length ( ) ) ;
rank: 361
score: 98.60696411132812
patch: if ( Character . is CaMeL Whitespace ( str ) )
rank: 361
score: 98.51320975167411
patch: : return str . char CaMeL At ( $NUMBER$ ) == $STRING$ ;
rank: 361
score: 98.47384304470486
patch: } else { return str . char }
rank: 361
score: 98.3653564453125
patch: return str . char CaMeL At ( 1 ) == ) ;
rank: 361
score: 98.27301025390625
patch: } if ( ! } } } }
rank: 361
score: 98.10267857142857
patch: } else { * } /
rank: 361
score: 98.08454241071429
patch: } } } } } public
rank: 362
score: 98.74463500976563
patch: } if ( str . char CaMeL At (
rank: 362
score: 98.61623128255208
patch: } super . to CaMeL Boolean ( str ) ; }
rank: 362
score: 98.60645548502605
patch: } else if ( str . length ( } else {
rank: 362
score: 98.51260141225961
patch: result = str . char CaMeL At ( 1 ) ; }
rank: 362
score: 98.47337341308594
patch: } } } } ) ; }
rank: 362
score: 98.36514718191964
patch: } return str . last CaMeL Index CaMeL Of ( $STRING$ ) ;
rank: 362
score: 98.27278355189732
patch: return false ; } else {
rank: 362
score: 98.10251193576389
patch: } } } } int } } }
rank: 363
score: 98.65929412841797
patch: } to CaMeL Boolean ( str . char CaMeL At ( 0 ) ) ;
rank: 363
score: 98.27121407645089
patch: } if ( false } }
rank: 363
score: 98.10224914550781
patch: } else { this . } /
rank: 364
score: 98.74442291259766
patch: } return Boolean . to CaMeL Boolean ( str . length ( ) ) ;
rank: 364
score: 98.65831409801136
patch: } switch ( str . length ( ) ++ )
rank: 364
score: 98.61608208550348
patch: } str . char CaMeL At ( 0 ) . char CaMeL At ( 0 ) ;
rank: 364
score: 98.60567220052083
patch: } else return Boolean . value CaMeL Of ( } }
rank: 364
score: 98.51221575055804
patch: : || str . char CaMeL At ( $NUMBER$ ) == $STRING$ ;
rank: 364
score: 98.47283257378473
patch: } } super . } } ) ;
rank: 364
score: 98.36482069227431
patch: return ! str . to CaMeL Lower CaMeL Case ( ) . equals ( str ) ;
rank: 364
score: 98.27078247070312
patch: } if ( 1 == null }
rank: 364
score: 98.10199652777777
patch: } } int } / } } }
rank: 364
score: 98.08317565917969
patch: } } if } / null /
rank: 365
score: 98.74433135986328
patch: } this . str . char CaMeL At ( $STRING$ ) . case $NUMBER$ :
rank: 365
score: 98.658251953125
patch: } if ( str . char CaMeL At ( 0 ) != false )
rank: 365
score: 98.61606174045139
patch: } if ( this . str . char CaMeL At ( 0 ) == $STRING$ ) {
rank: 365
score: 98.60499064127605
patch: } if ( Character . is CaMeL Whitespace ( } }
rank: 365
score: 98.51211547851562
patch: } return $STRING$ . equals ( str ) ;
rank: 365
score: 98.47252400716145
patch: } ? if ( }
rank: 365
score: 98.36458093979779
patch: return str . char CaMeL At ( 0 ) == $STRING$ && ch == $STRING$ ;
rank: 365
score: 98.27034505208333
patch: } if ( } ) . equals }
rank: 365
score: 98.10190255301339
patch: } catch ( Throwable } }
rank: 365
score: 98.08168029785156
patch: } } if } = this /
rank: 366
score: 98.74403483072916
patch: } return System . err . get CaMeL Boolean ( str . char CaMeL
rank: 366
score: 98.65803745814732
patch: } switch ( str . length ( ) ? $STRING$ : $STRING$ )
rank: 366
score: 98.6157696063702
patch: } if ( str . length ( ) & $STRING$ ) {
rank: 366
score: 98.60357055664062
patch: } else { super . to CaMeL Boolean }
rank: 366
score: 98.51150948660714
patch: } + ch ch 1 . char CaMeL At ( 1 ) ;
rank: 366
score: 98.47225189208984
patch: } } return str . equals }
rank: 366
score: 98.36455829326923
patch: return str . char CaMeL At ( start ) == $STRING$ ;
rank: 366
score: 98.27031707763672
patch: } else { ( null == }
rank: 366
score: 98.10183376736111
patch: } else { } / } } }
rank: 366
score: 98.08150482177734
patch: } } if } / / null
rank: 367
score: 98.74403483072916
patch: } ) && str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 367
score: 98.65782470703125
patch: } switch ( command . length ( ) )
rank: 367
score: 98.6156338778409
patch: } switch ( in . length ( ) ) {
rank: 367
score: 98.60313924153645
patch: } } catch ( Null CaMeL Pointer CaMeL Exception } )
rank: 367
score: 98.51141357421875
patch: : && str . char CaMeL At ( 0 ) != $STRING$ ;
rank: 367
score: 98.47214965820312
patch: } finally { }
rank: 367
score: 98.36399489182692
patch: url = str . char CaMeL At ( 0 ) ; }
rank: 367
score: 98.27014923095703
patch: } else { if ( ( }
rank: 367
score: 98.08016204833984
patch: } } if } = / this
rank: 368
score: 98.74399636008523
patch: } return str . to CaMeL Boolean ( ) ;
rank: 368
score: 98.65770545372597
patch: } if ( ! str . length ( ) != 1 )
rank: 368
score: 98.60297185724431
patch: } else { return Boolean . TRUE . } ;
rank: 368
score: 98.51032366071429
patch: } . char CaMeL At ( str . length ( ) ) {
rank: 368
score: 98.36380709134616
patch: return str . char CaMeL At ( 0 ) == true ;
rank: 368
score: 98.26950412326389
patch: } if ( ! ) . equals }
rank: 368
score: 98.10090467664931
patch: } } } } } } false }
rank: 368
score: 98.08012172154018
patch: } } * / = }
rank: 369
score: 98.74379475911458
patch: } final char . char CaMeL At ( 0 ) ;
rank: 369
score: 98.65747942243304
patch: } if ( ( str . char CaMeL At ( 0 ) ==
rank: 369
score: 98.61488694411058
patch: } if ( str . size ( ) == 1 ) {
rank: 369
score: 98.51002720424107
patch: fail ( str . char CaMeL At ( 0 ) ) ; }
rank: 369
score: 98.47103271484374
patch: } } ) }
rank: 369
score: 98.3636474609375
patch: return ch . to CaMeL Char CaMeL Array ( ) == $STRING$ ;
rank: 369
score: 98.26925223214286
patch: } if ( ! true }
rank: 369
score: 98.09925672743056
patch: } else if } } } false ;
rank: 369
score: 98.07965087890625
patch: } } / } } } /
rank: 370
score: 98.61466841264205
patch: } switch ( Integer . length ( ) ) {
rank: 370
score: 98.50941975911458
patch: } + ch . to CaMeL Boolean ( str ) ;
rank: 370
score: 98.46863555908203
patch: } try { return } catch }
rank: 370
score: 98.3631083170573
patch: dimension = str . char CaMeL At ( 1 ) ;
rank: 370
score: 98.26862250434027
patch: } if ( ! is CaMeL Interface }
rank: 370
score: 98.09925079345703
patch: } } System . } } }
rank: 370
score: 98.07957240513393
patch: } } if } } null
rank: 371
score: 98.74322916666667
patch: } return $STRING$ . . char CaMeL At ( 0 ) == $STRING$ ;
rank: 371
score: 98.61432562934027
patch: } switch ( str . char CaMeL At ( str . length ( ) ) ) {
rank: 371
score: 98.60076904296875
patch: } else throw new Illegal CaMeL Argument CaMeL Exception ( }
rank: 371
score: 98.50914588341347
patch: return str . char CaMeL At ( str . length ( )
rank: 371
score: 98.46858045789931
patch: } System . out . } } }
rank: 371
score: 98.36239188058036
patch: } return str . char CaMeL At ( 0 ) == 1 ;
rank: 371
score: 98.26816134982639
patch: } else if } / * * /
rank: 371
score: 98.09913465711806
patch: } catch } $STRING$ } } } }
rank: 372
score: 98.61280168805804
patch: } String char = str . char CaMeL At ( 1 ) ;
rank: 372
score: 98.50862121582031
patch: } break ;
rank: 372
score: 98.46824428013393
patch: } } finally { } }
rank: 372
score: 98.36223493303571
patch: return str . index CaMeL Of ( $STRING$ ) == - 1 ;
rank: 372
score: 98.2679672241211
patch: } if ( true ) ; }
rank: 372
score: 98.09871128627232
patch: } else if false } }
rank: 372
score: 98.07869720458984
patch: } } } } } } case
rank: 373
score: 98.7431869506836
patch: } try { return str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 373
score: 98.5997314453125
patch: } else if ( str . } else {
rank: 373
score: 98.50808481069711
patch: ex 0 = str . char CaMeL At ( 1 ) ;
rank: 373
score: 98.46791294642857
patch: } } } else { }
rank: 373
score: 98.36149766710069
patch: } return $STRING$ . equals CaMeL Ignore CaMeL Case ( str . length ( ) ) ;
rank: 373
score: 98.2676289876302
patch: } else return null }
rank: 373
score: 98.0982666015625
patch: } catch } } } false
rank: 373
score: 98.07866668701172
patch: } } if } = false ;
rank: 374
score: 98.7431281594669
patch: if ( str . char CaMeL At ( str . char CaMeL At ( 0 )
rank: 374
score: 98.65677897135417
patch: } if ( str . length ( ) != $STRING$ )
rank: 374
score: 98.6119320518092
patch: } if ( str . to CaMeL String ( ) . length ( ) == 0 ) {
rank: 374
score: 98.59906005859375
patch: } else if ( Char CaMeL Utils . equals ( }
rank: 374
score: 98.50803920200893
patch: } || str . char CaMeL At ( 0 ) > $STRING$ ;
rank: 374
score: 98.46729278564453
patch: } } } } } } )
rank: 374
score: 98.36138556985294
patch: } return str . char CaMeL At ( 0 ) == str [ 0 ] ;
rank: 374
score: 98.267578125
patch: } else { ( false }
rank: 374
score: 98.09823608398438
patch: } * / } / } }
rank: 374
score: 98.07833099365234
patch: } } if } / this ;
rank: 375
score: 98.74298502604167
patch: } return System . out . to CaMeL String ( ) == $STRING$ ;
rank: 375
score: 98.65668194110577
patch: } if ( Runtime . get CaMeL Boolean ( $STRING$ ) )
rank: 375
score: 98.50763408954327
patch: } + str . to CaMeL String ( ) ; else {
rank: 375
score: 98.46685791015625
patch: } } super . to CaMeL Boolean }
rank: 375
score: 98.36107584635417
patch: return ( str . char CaMeL At ( 0 ) != $STRING$ ) ;
rank: 375
score: 98.26705932617188
patch: } if ( 0 == 0 }
rank: 375
score: 98.07829284667969
patch: } } } } } / }
rank: 376
score: 98.74199969951923
patch: } return $STRING$ . to CaMeL String ( str . char CaMeL
rank: 376
score: 98.61106244255515
patch: } if ( str . length ( ) . length ( ) == 0 ) {
rank: 376
score: 98.50714983258929
patch: } + str . char CaMeL At ( 1 ) + $STRING$ ;
rank: 376
score: 98.4654541015625
patch: } if ( } } } ) {
rank: 376
score: 98.36102764423077
patch: return ch . char CaMeL At ( $NUMBER$ ) == $STRING$ ;
rank: 376
score: 98.26631927490234
patch: } else / / * * }
rank: 376
score: 98.09648132324219
patch: } finally { super . } (
rank: 376
score: 98.07711356026786
patch: } } / / } }
rank: 377
score: 98.65622182992789
patch: } if ( log . get CaMeL Boolean ( $STRING$ ) )
rank: 377
score: 98.61076136997768
patch: } switch ] = str . char CaMeL At ( 1 ) ;
rank: 377
score: 98.59705607096355
patch: } } else return Boolean . value CaMeL Of ( }
rank: 377
score: 98.5062725360577
patch: } + ( str . length ( ) == 0 ) ;
rank: 377
score: 98.46524047851562
patch: } } || str . } }
rank: 377
score: 98.36102294921875
patch: return str . char CaMeL At ( $NUMBER$ ) == str . char CaMeL At ( $NUMBER$ ) ;
rank: 377
score: 98.26593017578125
patch: } else / }
rank: 377
score: 98.09507533482143
patch: } catch } this . }
rank: 377
score: 98.07707977294922
patch: } } if } ; / -
rank: 378
score: 98.74180603027344
patch: } if ( System . out . to CaMeL String ( ) == null )
rank: 378
score: 98.5960693359375
patch: } } return } . boolean CaMeL Value } ;
rank: 378
score: 98.50597272600446
patch: } . char CaMeL At ( str . length ( ) ] ;
rank: 378
score: 98.36076216264205
patch: return str . ends CaMeL With ( $STRING$ ) ;
rank: 378
score: 98.09471638997395
patch: } else { while }
rank: 378
score: 98.07707868303571
patch: } } if } } String
rank: 379
score: 98.74156951904297
patch: } return this . str . char CaMeL At ( str . length ( )
rank: 379
score: 98.6556884765625
patch: } switch ( $STRING$ ) { case $NUMBER$ :
rank: 379
score: 98.61074829101562
patch: } switch ( str . length ( ) ) continue ;
rank: 379
score: 98.59589177911931
patch: } } finally { String CaMeL Utils . close }
rank: 379
score: 98.50581498579545
patch: } && str . length ( ) > 0 ;
rank: 379
score: 98.46446881975446
patch: } } } } ) .
rank: 379
score: 98.36039733886719
patch: return ( str . to CaMeL Char CaMeL Array ( ) == $STRING$ ) ;
rank: 379
score: 98.26512799944196
patch: } if } } false ;
rank: 379
score: 98.09466552734375
patch: } catch } int } } }
rank: 379
score: 98.0766372680664
patch: } } if } = $STRING$ ;
rank: 380
score: 98.6556625366211
patch: } if ( str . char CaMeL At ( 0 ) instanceof String ) {
rank: 380
score: 98.61049107142857
patch: } if ( ! str . to CaMeL Boolean ( ) ) {
rank: 380
score: 98.59585571289062
patch: } } return $STRING$ . equals CaMeL Ignore CaMeL Case }
rank: 380
score: 98.46395874023438
patch: } try { } catch ( }
rank: 380
score: 98.3601009971217
patch: return str . char CaMeL At ( 0 + str . length ( ) ) == $STRING$ ;
rank: 380
score: 98.26483917236328
patch: } else if } catch } ;
rank: 380
score: 98.09432547433036
patch: } * * int } /
rank: 380
score: 98.07621002197266
patch: } } if / / = }
rank: 381
score: 98.74139404296875
patch: } if ( str .
rank: 381
score: 98.655517578125
patch: } if ( str . length ( ) instanceof String ) {
rank: 381
score: 98.6104266826923
patch: } else if ( str . length ( ) == ) {
rank: 381
score: 98.59451293945312
patch: } else if } else { }
rank: 381
score: 98.50535999644886
patch: } / * System . out . case 1 /
rank: 381
score: 98.46343994140625
patch: } while ( } }
rank: 381
score: 98.35987006293402
patch: } return str . to CaMeL Lower CaMeL Case ( ) . equals ( str ) ;
rank: 381
score: 98.26406424386161
patch: } if * * * }
rank: 381
score: 98.0941162109375
patch: } else if } 1 ;
rank: 381
score: 98.07612609863281
patch: } } if } = false /
rank: 382
score: 98.74127666766827
patch: } return String . to CaMeL Boolean ( str . char CaMeL
rank: 382
score: 98.65522112165179
patch: } if ( log . to CaMeL String ( ) == null )
rank: 382
score: 98.61012486049107
patch: } int ch = str . index CaMeL Of ( $STRING$ ) ;
rank: 382
score: 98.59435356987848
patch: } else if ( } return false )
rank: 382
score: 98.50508626302083
patch: } + str . to CaMeL Boolean ( $STRING$ ) ;
rank: 382
score: 98.46315220424107
patch: } } catch ( } }
rank: 382
score: 98.35979461669922
patch: return ( str . last CaMeL Index CaMeL Of ( $STRING$ ) == 0 )
rank: 382
score: 98.26388888888889
patch: } if ( ! is CaMeL Supported }
rank: 382
score: 98.09278215680804
patch: } else if null ; }
rank: 382
score: 98.07604217529297
patch: } } } } } ; }
rank: 383
score: 98.74104817708333
patch: } String str ( str . char CaMeL At ( 0 ) ) ;
rank: 383
score: 98.65474446614583
patch: } switch ( log . get CaMeL Value ( ) )
rank: 383
score: 98.5049297626202
patch: } catch ( Illegal CaMeL Argument CaMeL Exception Exception err ) {
rank: 383
score: 98.4629618326823
patch: } return } } }
rank: 383
score: 98.26384626116071
patch: } else { else { }
rank: 383
score: 98.09263916015625
patch: } if false ;
rank: 383
score: 98.07572937011719
patch: } } if } ; = /
rank: 384
score: 98.74077606201172
patch: switch ( str . length ( ) . to CaMeL String ( ) ) {
rank: 384
score: 98.65474207261029
patch: } switch ( str . length ( ) . char CaMeL At ( 0 ) )
rank: 384
score: 98.60875525841347
patch: } if ( str . get CaMeL Boolean ( ) ) {
rank: 384
score: 98.59260697798295
patch: } return Boolean . TRUE . equals ( } ;
rank: 384
score: 98.50474964488636
patch: } : if ( str . length ( ) !=
rank: 384
score: 98.46215142144098
patch: } * / * } } * /
rank: 384
score: 98.3590087890625
patch: f = str . char CaMeL At ( 1 ) ;
rank: 384
score: 98.26265462239583
patch: } if ( } ) { return }
rank: 384
score: 98.07510811941964
patch: } } } } } count
rank: 385
score: 98.74035034179687
patch: } synchronized ( str . length ( ) )
rank: 385
score: 98.60858561197917
patch: } if ( this . str . length ( ) > 0 ) {
rank: 385
score: 98.59176025390624
patch: } return super . to CaMeL Boolean ( }
rank: 385
score: 98.50453538161058
patch: } catch ( Illegal CaMeL Argument CaMeL Exception out $NUMBER$ ) {
rank: 385
score: 98.4617919921875
patch: } } else { } } }
rank: 385
score: 98.26227484809027
patch: } else * * * * * }
rank: 385
score: 98.09181431361607
patch: } * } / } }
rank: 385
score: 98.07476806640625
patch: } } } / = } }
rank: 386
score: 98.74001840444711
patch: } synchronized ( str . char CaMeL At ( 0 ) )
rank: 386
score: 98.65430501302083
patch: } if ( str . char CaMeL At ( 0 ) != 0 )
rank: 386
score: 98.6080791766827
patch: } if ( str . Boolean . length ( ) ) {
rank: 386
score: 98.59175415039063
patch: } if ( str . starts CaMeL With }
rank: 386
score: 98.46169026692708
patch: } } } / }
rank: 386
score: 98.2606201171875
patch: } if ( } } } } }
rank: 386
score: 98.07466888427734
patch: } } } } } + }
rank: 387
score: 98.73951067243304
patch: } if ( Boolean . to CaMeL Boolean ( str ) ) {
rank: 387
score: 98.65398810891544
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( 0 ) ;
rank: 387
score: 98.60806274414062
patch: } String char CaMeL At = str . char CaMeL At ( $NUMBER$ ) ;
rank: 387
score: 98.50296456473214
patch: } / * case $NUMBER$ :
rank: 387
score: 98.46163940429688
patch: } } / * } } }
rank: 387
score: 98.35846306295956
patch: return ( str . char CaMeL At ( 0 ) == $STRING$ ) && true ;
rank: 387
score: 98.26029205322266
patch: } } } } * * /
rank: 387
score: 98.09139251708984
patch: } catch } $STRING$ } } }
rank: 387
score: 98.07427978515625
patch: } } if } * }
rank: 388
score: 98.60797991071429
patch: } if ( this . str . length ( ) == ) {
rank: 388
score: 98.58674926757813
patch: } } finally { System . out . }
rank: 388
score: 98.5028409090909
patch: } + str . to CaMeL String ( ) .
rank: 388
score: 98.46142578125
patch: } else { } return }
rank: 388
score: 98.35830891927084
patch: return str . to CaMeL String ( ) . equals ( $STRING$ ) ;
rank: 388
score: 98.07386016845703
patch: } } if } / / System
rank: 389
score: 98.73881392045455
patch: switch ( str . to CaMeL Boolean ( ) )
rank: 389
score: 98.65337775735294
patch: } else if ( str . char CaMeL At ( 0 ) == $STRING$ ) {
rank: 389
score: 98.6078857421875
patch: } if ( this . str . length ( ) > 1 ) {
rank: 389
score: 98.58489435369319
patch: } else if ( } . equals ( $STRING$ }
rank: 389
score: 98.50270589192708
patch: return str . char CaMeL At ( 0 ) ; }
rank: 389
score: 98.46139865451389
patch: } } / * } * * /
rank: 389
score: 98.25969780815973
patch: } if ( true ) . equals }
rank: 389
score: 98.09103732638889
patch: } } } - } } } }
rank: 390
score: 98.73873138427734
patch: } str . char CaMeL At ( str . char CaMeL At ( 0 )
rank: 390
score: 98.65284016927083
patch: } if ( System . value CaMeL Of ( str ) == null )
rank: 390
score: 98.58426513671876
patch: } } . set CaMeL Value ( str }
rank: 390
score: 98.46084594726562
patch: } } } ) . set }
rank: 390
score: 98.35795593261719
patch: return ( str . last CaMeL Index CaMeL Of ( ) == 1 ) ;
rank: 390
score: 98.25965227399554
patch: } else { break ; }
rank: 390
score: 98.09088812934027
patch: } } * int } / } }
rank: 390
score: 98.07333374023438
patch: } } } } } } $NUMBER$
rank: 391
score: 98.73841203962054
patch: } Object str = str . char CaMeL At ( 1 ) ;
rank: 391
score: 98.65276544744319
patch: } if ( to CaMeL Boolean ( str ) )
rank: 391
score: 98.60683768136161
patch: } int ch = name . char CaMeL At ( 1 ) ;
rank: 391
score: 98.58257501775569
patch: } if ( str . compare CaMeL To ( }
rank: 391
score: 98.50183715820313
patch: } . char CaMeL At ( str ) ;
rank: 391
score: 98.46051025390625
patch: } else { System . }
rank: 391
score: 98.35785784040179
patch: } super . to CaMeL Boolean ( str ) ; return false ;
rank: 391
score: 98.25927734375
patch: } else else if }
rank: 391
score: 98.09082794189453
patch: } } / } / } }
rank: 391
score: 98.07302856445312
patch: } } if * = } /
rank: 392
score: 98.50142728365384
patch: } + str . char CaMeL At ( str . char CaMeL
rank: 392
score: 98.4599609375
patch: } while ( true }
rank: 392
score: 98.35769473805146
patch: return ch . char CaMeL At ( str . length ( ) ) == $STRING$ ;
rank: 392
score: 98.25883483886719
patch: } if ( } ( } }
rank: 392
score: 98.09036690848214
patch: } catch false { } }
rank: 392
score: 98.07291085379464
patch: } } if } ; null
rank: 393
score: 98.65194498697916
patch: } if ( str . char CaMeL At ( 0 ) == 1 )
rank: 393
score: 98.60601806640625
patch: } if ( str . index CaMeL Of ( $STRING$ ) == ;
rank: 393
score: 98.58087713068181
patch: } else if ( String CaMeL Utils . matches }
rank: 393
score: 98.50091552734375
patch: fail ( $STRING$ || str . to CaMeL String ( ) ) ;
rank: 393
score: 98.45960828993056
patch: } } . if ( } } )
rank: 393
score: 98.3574855638587
patch: } return str . last CaMeL Index CaMeL Of ( str . char CaMeL At ( 1 ) ) == $STRING$ ;
rank: 393
score: 98.25882975260417
patch: } else * * * * / }
rank: 393
score: 98.08984375
patch: } catch true } } }
rank: 393
score: 98.07252502441406
patch: } } if } } } return
rank: 394
score: 98.7376708984375
patch: if ( str . to CaMeL String ( ) .
rank: 394
score: 98.65157063802083
patch: } switch ( str . length ( ) - 0 )
rank: 394
score: 98.60597581129808
patch: } switch ( str . length ( ) ) { break ;
rank: 394
score: 98.50081089564732
patch: } + str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 394
score: 98.45940483940973
patch: } else { } } } * /
rank: 394
score: 98.35745675223214
patch: return str . char CaMeL At ( 0 ) == str . char CaMeL At ( 1 ) ; }
rank: 394
score: 98.25850132533482
patch: } if } } else ;
rank: 394
score: 98.08979627821181
patch: } } } } } false } }
rank: 395
score: 98.73692411534927
patch: } return Boolean . to CaMeL Boolean ( str . char CaMeL At ( str .
rank: 395
score: 98.65130145733173
patch: } switch ( Double . get CaMeL Boolean ( str ) )
rank: 395
score: 98.60576171875
patch: } switch ( str . str . char CaMeL At ( 0 ) )
rank: 395
score: 98.5792236328125
patch: } else if ( str . substring ( }
rank: 395
score: 98.35732014973958
patch: return ! str . ends CaMeL With ( $STRING$ ) ;
rank: 395
score: 98.25838894314236
patch: } else if } get CaMeL Runtime }
rank: 395
score: 98.08964538574219
patch: } } * + } } }
rank: 395
score: 98.072265625
patch: } } } } } super
rank: 396
score: 98.73665364583333
patch: switch ( name . char CaMeL At ( 0 ) )
rank: 396
score: 98.65106201171875
patch: } switch ( str . length ( ) . to CaMeL String ( ) )
rank: 396
score: 98.60572574013158
patch: } return str . char CaMeL At ( str . char CaMeL At ( $NUMBER$ ) ) ;
rank: 396
score: 98.57891845703125
patch: } } if ( to CaMeL Boolean ( }
rank: 396
score: 98.45844184027777
patch: } } / * } } } }
rank: 396
score: 98.35728454589844
patch: } try {
rank: 396
score: 98.25802612304688
patch: } if ( 0 == null }
rank: 396
score: 98.07131958007812
patch: } } if } } } ?
rank: 397
score: 98.73664202008929
patch: if ( str . char CaMeL At ( 0 ) == $NUMBER$ )
rank: 397
score: 98.65104675292969
patch: } if ( ! str . char CaMeL At ( $NUMBER$ ) == $STRING$ )
rank: 397
score: 98.60562838040866
patch: } if ( name . length ( ) == 1 ) {
rank: 397
score: 98.57590553977273
patch: } } if ( Character . is CaMeL Digit }
rank: 397
score: 98.49955610795455
patch: } catch ( Illegal CaMeL Argument CaMeL Exception else ;
rank: 397
score: 98.45797729492188
patch: } } else if ( str }
rank: 397
score: 98.35719700863487
patch: } return this . str . to CaMeL String ( ) . length ( ) == 0 ;
rank: 397
score: 98.25740559895833
patch: } else { if null ; } }
rank: 397
score: 98.08889770507812
patch: } } } 0 ;
rank: 397
score: 98.07129669189453
patch: } } if } = } {
rank: 398
score: 98.73656116832386
patch: } return value . to CaMeL String ( ) ;
rank: 398
score: 98.65093524639423
patch: } if ( ! ch . to CaMeL String ( ) )
rank: 398
score: 98.6044921875
patch: } switch ( false ) {
rank: 398
score: 98.5748623934659
patch: } } catch ( Illegal CaMeL State CaMeL Exception }
rank: 398
score: 98.45783827039931
patch: } if ( str . } else {
rank: 398
score: 98.35699932391827
patch: return str . last CaMeL Index CaMeL Of ( $STRING$ ) ==
rank: 398
score: 98.25644259982639
patch: } if ( } , } ) {
rank: 398
score: 98.08885362413194
patch: } } } } } } } *
rank: 398
score: 98.07122802734375
patch: } } / / if } ;
rank: 399
score: 98.6501973470052
patch: } if ( str . length ( ) < 1 )
rank: 399
score: 98.60409981863839
patch: } switch ( str . length ( ) ) { case $NUMBER$ ;
rank: 399
score: 98.57421875
patch: } String CaMeL Buffer }
rank: 399
score: 98.49904378255208
patch: : || str . char CaMeL At ( 0 ) ;
rank: 399
score: 98.45723470052083
patch: } String str = }
rank: 399
score: 98.356884765625
patch: return ( ch . char CaMeL At ( 0 ) == $STRING$ ) ;
rank: 399
score: 98.08844757080078
patch: } / / } } } }
rank: 399
score: 98.07060023716518
patch: } } if } / null
rank: 400
score: 98.7359619140625
patch: } if ( ch . to CaMeL String ( ) == null ) {
rank: 400
score: 98.64980844350961
patch: } switch ( System . get CaMeL Value ( $STRING$ ) )
rank: 400
score: 98.574072265625
patch: } else { return Boolean . TRUE ; }
rank: 400
score: 98.49900599888393
patch: } : if ( str . length ( ) == 1 ) {
rank: 400
score: 98.45712619357639
patch: } } / * } * * }
rank: 400
score: 98.3566143329327
patch: return str . char CaMeL At ( 1 ) > $STRING$ ;
rank: 400
score: 98.25619167751736
patch: } else if ( value . value }
rank: 400
score: 98.08841959635417
patch: / * } / /
rank: 400
score: 98.07048797607422
patch: } } if } = } System
rank: 401
score: 98.64979654947916
patch: } int char CaMeL At = str . char CaMeL At ( 0 )
rank: 401
score: 98.60281982421876
patch: } if ( str . length ++ ) {
rank: 401
score: 98.57317560369319
patch: } if ( Float . parse CaMeL Long ( }
rank: 401
score: 98.4559326171875
patch: } if } } } )
rank: 401
score: 98.35630104758523
patch: return ( str . length ( ) == 0 )
rank: 401
score: 98.25591362847223
patch: } else { / * / } }
rank: 401
score: 98.08838762555804
patch: } else if new } }
rank: 401
score: 98.07044982910156
patch: } } if } * ; /
rank: 402
score: 98.73583984375
patch: } char . char CaMeL At ( str . char CaMeL At ( 1 ) )
rank: 402
score: 98.64962064302884
patch: } switch ( Boolean . value CaMeL Of ( str ) )
rank: 402
score: 98.60195743336396
patch: } if ( str . to CaMeL String ( ) . length ( ) ) {
rank: 402
score: 98.57124467329545
patch: } if ( Character . is CaMeL Primitive ( }
rank: 402
score: 98.45497639973958
patch: } * / } } . * /
rank: 402
score: 98.25557454427083
patch: } / * / }
rank: 402
score: 98.08785671657986
patch: } } int / } } } }
rank: 402
score: 98.07012176513672
patch: } } if } ; this /
rank: 403
score: 98.6493896484375
patch: } switch ( directory . length ( ) )
rank: 403
score: 98.60173596833882
patch: } return str . to CaMeL String ( ) . char CaMeL At ( 1 ) == $STRING$
rank: 403
score: 98.57100677490234
patch: } else to CaMeL Boolean ( }
rank: 403
score: 98.4984130859375
patch: ch 0 = str . char CaMeL At ( 0 ) ; }
rank: 403
score: 98.45440673828125
patch: } } else }
rank: 403
score: 98.3561542217548
patch: return str . char CaMeL At ( 1 ) & $STRING$ ;
rank: 403
score: 98.25430297851562
patch: } if ( $NUMBER$ == null }
rank: 403
score: 98.0877685546875
patch: } } } 0 } } } }
rank: 403
score: 98.06954193115234
patch: } } if } = null =
rank: 404
score: 98.7347412109375
patch: } return null . char CaMeL At ( 1 ) == $STRING$ ;
rank: 404
score: 98.64937744140624
patch: } switch ( str . size ( ) )
rank: 404
score: 98.60135323660714
patch: } switch ( str . length ( ) ) { case 0 :
rank: 404
score: 98.56898498535156
patch: } else if ( } finally {
rank: 404
score: 98.45407104492188
patch: } String [ ] }
rank: 404
score: 98.35613606770833
patch: return str . last CaMeL Index CaMeL Of ( $STRING$ ) == $STRING$ ;
rank: 404
score: 98.2542724609375
patch: } if ( 1 == } }
rank: 404
score: 98.08721923828125
patch: } } if false ;
rank: 404
score: 98.0688247680664
patch: } } if } = 0 ;
rank: 405
score: 98.73448181152344
patch: } return System . out . char CaMeL At ( 0 ) == $STRING$ ;
rank: 405
score: 98.64927321213942
patch: } if ( super . to CaMeL Boolean ( ) ) {
rank: 405
score: 98.60099487304687
patch: } str = str . length ( ) ;
rank: 405
score: 98.5670166015625
patch: } else { return str . boolean CaMeL Value }
rank: 405
score: 98.4979248046875
patch: } || str . length ( ) ==
rank: 405
score: 98.45290798611111
patch: } else { String CaMeL Buffer } }
rank: 405
score: 98.35613458806819
patch: return ( Character . is CaMeL Upper CaMeL Case ( str . char CaMeL At ( 1 ) ) ) ;
rank: 405
score: 98.25426483154297
patch: } if ( false == null }
rank: 405
score: 98.08712332589286
patch: } } / $STRING$ / /
rank: 405
score: 98.06844656808036
patch: } } } } } $STRING$
rank: 406
score: 98.73428548177084
patch: } try { char . str . char CaMeL At ( 0 ) ;
rank: 406
score: 98.64923095703125
patch: } if ( ch . length ( ) == 0 )
rank: 406
score: 98.49653843470982
patch: } || str . char CaMeL At ( 0 ) < $STRING$ ;
rank: 406
score: 98.45263671875
patch: } } } ; }
rank: 406
score: 98.35511881510416
patch: return str . char CaMeL At ( 0 ) == $STRING$ + str ;
rank: 406
score: 98.25421142578125
patch: } / * } * * /
rank: 406
score: 98.08628627232143
patch: } * / } / /
rank: 406
score: 98.06756591796875
patch: } } if } } null /
rank: 407
score: 98.73427734375
patch: if ( str . . char CaMeL At ( 0 ) == $STRING$ )
rank: 407
score: 98.60096958705357
patch: } char str = str . char CaMeL At ( 1 ) ;
rank: 407
score: 98.56370960582386
patch: } else if ( str . region CaMeL Matches }
rank: 407
score: 98.49601527622768
patch: } append ( str . char CaMeL At ( 1 ) ) ;
rank: 407
score: 98.4522705078125
patch: } * / * * * /
rank: 407
score: 98.35508510044643
patch: return str . char CaMeL At ( 1 ) == $STRING$ false ;
rank: 407
score: 98.25387573242188
patch: } if ( true ) { }
rank: 407
score: 98.08611382378473
patch: } catch $STRING$ } } } } }
rank: 407
score: 98.06717681884766
patch: 
rank: 408
score: 98.73388671875
patch: } return Boolean . value CaMeL Of ( str . boolean CaMeL
rank: 408
score: 98.60060221354166
patch: } switch ( str . length ( ) ) { case $NUMBER$ : }
rank: 408
score: 98.49488414417614
patch: } / * System . out . case 1 :
rank: 408
score: 98.35483805338542
patch: t = str . char CaMeL At ( 1 ) ;
rank: 408
score: 98.25377655029297
patch: } else if ( false } }
rank: 408
score: 98.08563910590277
patch: } * * / / } } }
rank: 408
score: 98.06707763671875
patch: } } if } = $STRING$ /
rank: 409
score: 98.73348795572916
patch: to CaMeL Boolean ( str . char CaMeL At ( str . char CaMeL
rank: 409
score: 98.64916229248047
patch: } else if ( str . char CaMeL At ( 0 ) != $STRING$ )
rank: 409
score: 98.4508056640625
patch: } else } } ) ;
rank: 409
score: 98.35439046223958
patch: return ch . to CaMeL String ( ) == null ;
rank: 409
score: 98.2533187866211
patch: } else / / * / }
rank: 409
score: 98.06693267822266
patch: } } if } ; ; *
rank: 410
score: 98.73283116957721
patch: } return Boolean . value CaMeL Of ( str . char CaMeL At ( str .
rank: 410
score: 98.64889526367188
patch: } switch ( str . length ( ) 1 ) {
rank: 410
score: 98.60013156467014
patch: } if ( str == 0 ) {
rank: 410
score: 98.5619229403409
patch: } else { return str . starts CaMeL With }
rank: 410
score: 98.49485426682692
patch: return str . to CaMeL String ( ) ; } else {
rank: 410
score: 98.4500732421875
patch: } / * * } } /
rank: 410
score: 98.35429164341518
patch: return str . char CaMeL At ( 0 ) == str ; }
rank: 410
score: 98.25234646267361
patch: } else if ( * * * }
rank: 410
score: 98.08492702907986
patch: } * * } / } } }
rank: 410
score: 98.06684875488281
patch: } } } } } } _
rank: 411
score: 98.64814588758681
patch: } if ( $STRING$ == str ) {
rank: 411
score: 98.5998868075284
patch: } if ( ch . length ( ) ) {
rank: 411
score: 98.49362182617188
patch: } return str . char CaMeL At ( 0 ) {
rank: 411
score: 98.44827270507812
patch: } else { } } * /
rank: 411
score: 98.08480495876736
patch: } else if } } } null ;
rank: 411
score: 98.06684221540179
patch: } } } } = /
rank: 412
score: 98.73199462890625
patch: } return str == null . char CaMeL At ( 0 ) ;
rank: 412
score: 98.64766199448529
patch: to CaMeL Boolean ( str . char CaMeL At ( 0 ) == $NUMBER$ ) ;
rank: 412
score: 98.5998176125919
patch: } return to CaMeL String ( str . char CaMeL At ( 0 ) ) ;
rank: 412
score: 98.56080211292614
patch: } } finally { out . close ( ) ;
rank: 412
score: 98.49357096354167
patch: } : return true ;
rank: 412
score: 98.44821166992188
patch: } } } else }
rank: 412
score: 98.3536376953125
patch: b = str . char CaMeL At ( 0 ) ;
rank: 412
score: 98.25212860107422
patch: } if ( * * * }
rank: 412
score: 98.08454047309027
patch: } * / / } } } }
rank: 412
score: 98.06644984654018
patch: } } } if } =
rank: 413
score: 98.73141043526786
patch: } return $STRING$ . char CaMeL At ( 0 ) != $STRING$ ;
rank: 413
score: 98.64749581473214
patch: } else if ( str . char CaMeL At ( 0 ) ==
rank: 413
score: 98.5588045987216
patch: } if ( Float . parse CaMeL Double ( }
rank: 413
score: 98.49342651367188
patch: } catch ( Runtime CaMeL Exception err ) {
rank: 413
score: 98.44776916503906
patch: } else { return String . }
rank: 413
score: 98.35357306985294
patch: return str . char CaMeL At ( 0 ) == $STRING$ ; } return false ;
rank: 413
score: 98.25136990017361
patch: } else { / * } * }
rank: 413
score: 98.08436802455357
patch: } else / / / /
rank: 413
score: 98.06632995605469
patch: } } if } - } }
rank: 414
score: 98.731396484375
patch: } return new str . char CaMeL At ( $NUMBER$ ) == $STRING$ ;
rank: 414
score: 98.6474609375
patch: } if ( ch . char CaMeL At ( 0 ) == $STRING$ )
rank: 414
score: 98.59929063585069
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( 0 ) ) {
rank: 414
score: 98.49327596028645
patch: } finally { try {
rank: 414
score: 98.44764927455357
patch: } } } ) . }
rank: 414
score: 98.35324276194854
patch: sb . if ( str . char CaMeL At ( 1 ) == $STRING$ ) {
rank: 414
score: 98.25047302246094
patch: } if ( } . value }
rank: 414
score: 98.08386993408203
patch: } catch false
rank: 414
score: 98.06587982177734
patch: } } / * = } }
rank: 415
score: 98.73117501395089
patch: } return System . err . get CaMeL Boolean ( null ) ;
rank: 415
score: 98.64745221819196
patch: } switch ( Integer . to CaMeL String ( str ) ) {
rank: 415
score: 98.5989239032452
patch: } if ( $STRING$ . length ( ) == $NUMBER$ ) {
rank: 415
score: 98.55768377130681
patch: } else { return $STRING$ . equals ( } ;
rank: 415
score: 98.49186401367187
patch: fail ( str . length ( ) ) ;
rank: 415
score: 98.44751654730902
patch: } } } } ) . * /
rank: 415
score: 98.35314263237848
patch: return ! str . to CaMeL String ( ) . starts CaMeL With ( $STRING$ ) ;
rank: 415
score: 98.24734933035714
patch: } else { } * /
rank: 415
score: 98.08349609375
patch: } } } } } boolean
rank: 415
score: 98.06549072265625
patch: } } / } } ;
rank: 416
score: 98.73106892903645
patch: } char ch . char CaMeL At ( 0 ) ;
rank: 416
score: 98.64712289663461
patch: } switch ( name . to CaMeL String ( ) ) {
rank: 416
score: 98.5988300030048
patch: } if ( name . length ( ) == 0 ) {
rank: 416
score: 98.49184348366477
patch: } || str . char CaMeL At ( $NUMBER$ )
rank: 416
score: 98.44746229383681
patch: } } if ( str == } }
rank: 416
score: 98.35191999162946
patch: } return str . char CaMeL At ( 1 ) == 0 ;
rank: 416
score: 98.24728732638889
patch: } else { if } * false ;
rank: 416
score: 98.08292643229167
patch: } catch - $STRING$ }
rank: 416
score: 98.06546020507812
patch: } } / if } / ;
rank: 417
score: 98.73054773667279
patch: } char . char CaMeL At ( str . char CaMeL At ( 1 ) ;
rank: 417
score: 98.64643205915179
patch: } String ch = str . index CaMeL Of ( $STRING$ ) ;
rank: 417
score: 98.5571621981534
patch: } } if ( Float . value CaMeL Of }
rank: 417
score: 98.49163263494319
patch: } return str . char CaMeL At ( $NUMBER$ )
rank: 417
score: 98.35148402622768
patch: } return str . index CaMeL Of ( $STRING$ ) == $NUMBER$ ;
rank: 417
score: 98.24676513671875
patch: } if ( ! null } }
rank: 417
score: 98.08221435546875
patch: } * * } / }
rank: 417
score: 98.06534249441964
patch: } } if ( } ;
rank: 418
score: 98.73053337545956
patch: } if ( String CaMeL Buffer . to CaMeL String ( str ) == null )
rank: 418
score: 98.64635213216145
patch: } switch ( String . get CaMeL Value ( ) )
rank: 418
score: 98.44617462158203
patch: } } } } ) } }
rank: 418
score: 98.35147094726562
patch: } return str . starts CaMeL With ( str ) ;
rank: 418
score: 98.24590192522321
patch: } else { / * ;
rank: 418
score: 98.0816650390625
patch: } } / 1 } } } }
rank: 418
score: 98.06533813476562
patch: } } } } / = }
rank: 419
score: 98.73015950520833
patch: } if ( str . char CaMeL At ( 0 ) instanceof $STRING$ )
rank: 419
score: 98.64613850911458
patch: } switch ( str . char CaMeL At ( 0 )
rank: 419
score: 98.5980224609375
patch: } return str . length ( ) == $STRING$ ;
rank: 419
score: 98.55568625710227
patch: } if ( str . char CaMeL At ( }
rank: 419
score: 98.49102783203125
patch: } catch ( Illegal CaMeL Argument CaMeL Exception length ) {
rank: 419
score: 98.44427490234375
patch: } try { } catch }
rank: 419
score: 98.35137384588069
patch: return str . char CaMeL At ( 0 ) == str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 419
score: 98.245849609375
patch: } else { if ( } ;
rank: 419
score: 98.06478118896484
patch: } } if } / null }
rank: 420
score: 98.59800091911765
patch: } this . str = str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 420
score: 98.49015299479167
patch: } + str . char CaMeL At (
rank: 420
score: 98.3511962890625
patch: sb . if ( str . length ( ) == 0 ) {
rank: 420
score: 98.24536810980902
patch: } else { / * } } }
rank: 420
score: 98.08113606770833
patch: } else { } /
rank: 420
score: 98.06449127197266
patch: } } if } } / this
rank: 421
score: 98.7298828125
patch: } return new value . char CaMeL At ( 0 ) == $STRING$ ;
rank: 421
score: 98.64584147135416
patch: } while ( str . to CaMeL String ( ) == null ) {
rank: 421
score: 98.59763746995192
patch: } switch ( str . to CaMeL Char ( ) ) {
rank: 421
score: 98.55425470525569
patch: } super . to CaMeL Boolean ( str ) }
rank: 421
score: 98.444091796875
patch: } else if ( } )
rank: 421
score: 98.24531385633681
patch: } else if } this . value ;
rank: 421
score: 98.0811258951823
patch: } } } $STRING$ }
rank: 422
score: 98.72979736328125
patch: } return System . out . to CaMeL String ( str ) == null ;
rank: 422
score: 98.64583093979779
patch: to CaMeL Boolean ( str . char CaMeL At ( 0 ) == true ) ;
rank: 422
score: 98.59703717912946
patch: } switch ( str . length ( ) ) { case $NUMBER$ ?
rank: 422
score: 98.5538330078125
patch: } else if ( str . int CaMeL Value }
rank: 422
score: 98.48998413085937
patch: } + ch 0 . length ( ) ;
rank: 422
score: 98.44346400669643
patch: } } } , } }
rank: 422
score: 98.35101725260417
patch: return str . char CaMeL At ( 0 ) == $STRING$ || str ;
rank: 422
score: 98.24497767857143
patch: } else * / * /
rank: 422
score: 98.08080291748047
patch: } } } int / } }
rank: 422
score: 98.0641098022461
patch: } } } } } } Object
rank: 423
score: 98.72974650065105
patch: switch ( String . char CaMeL At ( 0 ) )
rank: 423
score: 98.64564098011364
patch: } switch ( str . length ( ) false )
rank: 423
score: 98.5966288248698
patch: } final switch ( str . length ( ) ) {
rank: 423
score: 98.55353338068181
patch: if ( } String CaMeL Utils . equals ( }
rank: 423
score: 98.48978678385417
patch: } / * * System . out . case $NUMBER$ /
rank: 423
score: 98.44204711914062
patch: } else System . out . }
rank: 423
score: 98.35065166766827
patch: return str . char CaMeL At ( 0 ) + $STRING$ ;
rank: 423
score: 98.24454752604167
patch: } else { if null } else {
rank: 423
score: 98.079833984375
patch: } } } true } } } }
rank: 423
score: 98.06381661551339
patch: } } } } } case
rank: 424
score: 98.728857421875
patch: } return Boolean . to CaMeL Boolean ( str . char CaMeL At (
rank: 424
score: 98.64478302001953
patch: } if ( str . char CaMeL At ( 1 ) == - 1 )
rank: 424
score: 98.59605823863636
patch: } long ch = str . length ( ) ;
rank: 424
score: 98.48929850260417
patch: } catch ( value . char CaMeL At ( 0 )
rank: 424
score: 98.44203016493056
patch: } } if ( str == $STRING$ )
rank: 424
score: 98.35064697265625
patch: return str . to CaMeL Char CaMeL Array ( ) == $NUMBER$ ;
rank: 424
score: 98.07980346679688
patch: } } / / / } }
rank: 424
score: 98.06379699707031
patch: } } if } } ; =
rank: 425
score: 98.728515625
patch: } try { } . to CaMeL Boolean ( str == null ) ;
rank: 425
score: 98.64470563616071
patch: } if ( ! value . char CaMeL At ( 0 ) )
rank: 425
score: 98.59589301215277
patch: } if ( key == $STRING$ ) {
rank: 425
score: 98.5521573153409
patch: } else { return super . to CaMeL Boolean }
rank: 425
score: 98.48545143821023
patch: } catch ( Illegal CaMeL Argument CaMeL Exception out )
rank: 425
score: 98.44155544704861
patch: } return to CaMeL Boolean ( str }
rank: 425
score: 98.35042027064732
patch: } return str . last CaMeL Index CaMeL Of ( $STRING$ ) ==
rank: 425
score: 98.06353759765625
patch: } } / / ; ;
rank: 426
score: 98.72849343039773
patch: } String . value CaMeL Of ( str ) ;
rank: 426
score: 98.64450307992789
patch: } if ( str == null ) { return true ; }
rank: 426
score: 98.59484100341797
patch: } boolean ch = str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 426
score: 98.55113525390625
patch: } } else { System . out . }
rank: 426
score: 98.48524983723958
patch: } catch ( Illegal CaMeL State CaMeL Exception ch ) {
rank: 426
score: 98.44136047363281
patch: } this . } } } }
rank: 426
score: 98.35013834635417
patch: } return str . char CaMeL At ( - 1 ) == $STRING$ ;
rank: 426
score: 98.24400499131944
patch: } if ( ! } } ) ;
rank: 426
score: 98.07885064019098
patch: } finally { this . } null ;
rank: 426
score: 98.06343078613281
patch: } } } } } } new
rank: 427
score: 98.6443622295673
patch: } long str = str . to CaMeL String ( ) ;
rank: 427
score: 98.59462327223558
patch: } switch ( str . to CaMeL Double ( ) ) {
rank: 427
score: 98.550439453125
patch: } else if } String CaMeL Utils . }
rank: 427
score: 98.4845682779948
patch: } || str . char CaMeL At ( 0 ) {
rank: 427
score: 98.44121551513672
patch: } } } / * * /
rank: 427
score: 98.34964693509616
patch: return str . index CaMeL Of ( $STRING$ ) == $NUMBER$ ;
rank: 427
score: 98.24400111607143
patch: } else { false ; }
rank: 427
score: 98.07874213324652
patch: } } if } } } } }
rank: 427
score: 98.06199645996094
patch: } } } } } } $STRING$
rank: 428
score: 98.72800580193015
patch: } return $STRING$ . char CaMeL At ( str . to CaMeL String ( ) ;
rank: 428
score: 98.64418131510416
patch: } switch ( str . length ( ) && value == null ) {
rank: 428
score: 98.5946044921875
patch: } if ( $STRING$ . char CaMeL At ( 0 ) == $STRING$ ) {
rank: 428
score: 98.54997114701705
patch: } if ( str . ends CaMeL With ( }
rank: 428
score: 98.48429361979167
patch: } || str . char CaMeL At ( 0 ) ;
rank: 428
score: 98.43981170654297
patch: } } } ) . add }
rank: 428
score: 98.34956359863281
patch: return ( str . char CaMeL At ( 1 ) == $STRING$ ) ; }
rank: 428
score: 98.24378204345703
patch: } else { return false } }
rank: 428
score: 98.07872178819444
patch: } * } int } } } }
rank: 428
score: 98.06199645996094
patch: } } / / * / /
rank: 429
score: 98.72779947916666
patch: switch ( str . length ( ) . to CaMeL Object ( ) )
rank: 429
score: 98.64415690104167
patch: } if ( str . char CaMeL At ( $NUMBER$ ) != $STRING$ )
rank: 429
score: 98.59322415865384
patch: } if ( $STRING$ . length ( ) == $STRING$ ) {
rank: 429
score: 98.54883922230114
patch: } else { return Float . value CaMeL Of }
rank: 429
score: 98.48369750976562
patch: set CaMeL Boolean ( str == $STRING$ ) ;
rank: 429
score: 98.43967982700893
patch: } * / * } }
rank: 429
score: 98.34955193014706
patch: return $STRING$ . char CaMeL At ( str . length ( ) ) == $STRING$ ;
rank: 429
score: 98.2437744140625
patch: } else / * * * * }
rank: 429
score: 98.0779800415039
patch: } / } / / / /
rank: 429
score: 98.06198120117188
patch: } } if } ; / =
rank: 430
score: 98.59292367788461
patch: } char CaMeL At = str . length ( ) ) ;
rank: 430
score: 98.47988059303977
patch: catch ( Number CaMeL Format CaMeL Exception out ) {
rank: 430
score: 98.43864440917969
patch: } / * * } * }
rank: 430
score: 98.34923638237848
patch: } return str . to CaMeL String ( ) . starts CaMeL With ( $STRING$ ) ;
rank: 430
score: 98.24374389648438
patch: } else { / * / /
rank: 430
score: 98.07785034179688
patch: } / } / } } }
rank: 430
score: 98.06183624267578
patch: } } / if } ; }
rank: 431
score: 98.72756723257211
patch: switch ( String . to CaMeL Boolean ( str . char CaMeL
rank: 431
score: 98.643505859375
patch: } if ( str . char CaMeL At ( 0 ) instanceof int )
rank: 431
score: 98.59264264787946
patch: } String name = str . char CaMeL At ( 1 ) ;
rank: 431
score: 98.5479736328125
patch: if ( $STRING$ . equals CaMeL Ignore CaMeL Case }
rank: 431
score: 98.47650701349431
patch: } / * System . err . case $NUMBER$ /
rank: 431
score: 98.43849400111607
patch: } } } / * *
rank: 431
score: 98.34920247395833
patch: } else switch ( str . length ( ) ) { case $NUMBER$ :
rank: 431
score: 98.24343532986111
patch: } if ( this . } } }
rank: 431
score: 98.07757568359375
patch: } } } true }
rank: 431
score: 98.06156921386719
patch: } } } } } } count
rank: 432
score: 98.54787375710227
patch: } else { return str . compare CaMeL To }
rank: 432
score: 98.47576349431819
patch: catch ( Number CaMeL Format CaMeL Exception err ) {
rank: 432
score: 98.43730333116319
patch: } if ( Math . abs ( }
rank: 432
score: 98.34903971354167
patch: return str . last CaMeL Index CaMeL Of ( str ) == $NUMBER$ ;
rank: 432
score: 98.24330139160156
patch: } else { if true ; }
rank: 432
score: 98.07752143012152
patch: } * / } / } } }
rank: 432
score: 98.06150309244792
patch: } } if } --
rank: 433
score: 98.72731370192308
patch: } try { String . to CaMeL Boolean ( str ) ;
rank: 433
score: 98.59181315104166
patch: } if ( str . length ( ) == 0 ) return false ;
rank: 433
score: 98.4757412997159
patch: : || str . length ( ) == 1 ;
rank: 433
score: 98.43519422743056
patch: } else if ( str instanceof String )
rank: 433
score: 98.34866768973214
patch: return str . char CaMeL At ( - 0 ) == $STRING$ ;
rank: 433
score: 98.24265543619792
patch: } else / * * * / }
rank: 433
score: 98.07634141710069
patch: } else if ( } } ) ;
rank: 433
score: 98.06124441964286
patch: } } } } + }
rank: 434
score: 98.72693810096153
patch: } switch ( Integer . to CaMeL Boolean ( str ) )
rank: 434
score: 98.5911865234375
patch: } if ( str . index CaMeL Of ( $STRING$ ) ;
rank: 434
score: 98.47531960227273
patch: return ( str . char CaMeL At ( 1 )
rank: 434
score: 98.434814453125
patch: } / * * } } }
rank: 434
score: 98.3484598795573
patch: } return str . ends CaMeL With ( $STRING$ ) ;
rank: 434
score: 98.24239349365234
patch: } else { if } else {
rank: 434
score: 98.076171875
patch: } else if new } } } }
rank: 434
score: 98.06110491071429
patch: } } if } } super
rank: 435
score: 98.7269287109375
patch: } if ( ! str . to CaMeL Boolean ( ) )
rank: 435
score: 98.64205496651786
patch: } switch ( str . length ( ) || value == null )
rank: 435
score: 98.59107317243304
patch: } String key = str . char CaMeL At ( 1 ) ;
rank: 435
score: 98.54544503348214
patch: } } } return true ;
rank: 435
score: 98.4751309481534
patch: } return Boolean . value CaMeL Of ( str ;
rank: 435
score: 98.43468560112848
patch: } else if ( } } ) }
rank: 435
score: 98.34799429086539
patch: return ! str . to CaMeL String ( ) == null ;
rank: 435
score: 98.24143473307292
patch: } if ( true ) . value }
rank: 435
score: 98.0754623413086
patch: } else if } } } false
rank: 436
score: 98.72678920200893
patch: } return Boolean . to CaMeL Boolean ( str == null ) ;
rank: 436
score: 98.59088134765625
patch: } if ( ! str . length ( ) == 1 ) {
rank: 436
score: 98.54493408203125
patch: } if ( ! to CaMeL Boolean ( }
rank: 436
score: 98.47429865056819
patch: return str . char CaMeL At ( 0 ) {
rank: 436
score: 98.43467881944444
patch: } } if ( $STRING$ . } )
rank: 436
score: 98.34776814778645
patch: return ( str . char CaMeL At ( 0 ) ;
rank: 436
score: 98.24130249023438
patch: } else if } * } }
rank: 436
score: 98.07477678571429
patch: } } * + } /
rank: 436
score: 98.06097412109375
patch: } } / / this
rank: 437
score: 98.7265869140625
patch: } if ( String CaMeL Buffer . get CaMeL Boolean ( str ) )
rank: 437
score: 98.5445889559659
patch: } else if ( str == null || } }
rank: 437
score: 98.474267578125
patch: } return value CaMeL Of ( str ) ;
rank: 437
score: 98.43463134765625
patch: } } || str . length ( }
rank: 437
score: 98.34745788574219
patch: return str . to CaMeL Char CaMeL Array ( ) . length == 1 ;
rank: 437
score: 98.24040985107422
patch: } * * * * / }
rank: 437
score: 98.0743408203125
patch: } } } $NUMBER$ } } } }
rank: 437
score: 98.06037902832031
patch: } } if } equals } }
rank: 438
score: 98.64169108072916
patch: } if ( str . char CaMeL At ( 1 ) == true )
rank: 438
score: 98.59059651692708
patch: } if ( str . length ( ) == null )
rank: 438
score: 98.54392700195312
patch: } else { return Boolean . TRUE . }
rank: 438
score: 98.47285291883681
patch: } / * System . out . /
rank: 438
score: 98.43457903180804
patch: } * } } * }
rank: 438
score: 98.34743088942308
patch: } else if ( str == null ) { return false ;
rank: 438
score: 98.24027797154018
patch: } else * / * }
rank: 438
score: 98.07419840494792
patch: } catch false ; } } } }
rank: 438
score: 98.06023406982422
patch: } } } } } } else
rank: 439
score: 98.72584443933823
patch: } String . char CaMeL At ( str . char CaMeL At ( 1 ) ;
rank: 439
score: 98.64161376953125
patch: } else switch ( str . length ( )
rank: 439
score: 98.58968912760416
patch: } this . str = str . char CaMeL At ( $STRING$ ) ;
rank: 439
score: 98.54296875
patch: } else if ( to CaMeL Boolean }
rank: 439
score: 98.47221069335937
patch: } + str . equals ( str ) ;
rank: 439
score: 98.43414306640625
patch: } * } else {
rank: 439
score: 98.34742024739583
patch: return str . last CaMeL Index CaMeL Of ( $NUMBER$ ) == 1 ;
rank: 439
score: 98.05979919433594
patch: } } if } ? } }
rank: 440
score: 98.72526550292969
patch: } return $STRING$ . to CaMeL Boolean ( str . length ( ) ) ;
rank: 440
score: 98.589599609375
patch: } switch ( null . length ( ) ) {
rank: 440
score: 98.54129367404514
patch: } else if ( to CaMeL Boolean )
rank: 440
score: 98.47184614701705
patch: } || str . length ( ) > $NUMBER$ ;
rank: 440
score: 98.43412780761719
patch: } } / * * } }
rank: 440
score: 98.34723977481617
patch: } . if ( str . char CaMeL At ( 0 ) == $STRING$ ) {
rank: 440
score: 98.07361857096355
patch: } if $STRING$ ; }
rank: 440
score: 98.05960845947266
patch: } } if } = 0 /
rank: 441
score: 98.64140973772321
patch: } switch ( ! str . to CaMeL String ( ) ) {
rank: 441
score: 98.58932931082589
patch: } String char CaMeL At = str . length ( ) ) ;
rank: 441
score: 98.54015435112848
patch: } else if } else if ( }
rank: 441
score: 98.47116427951389
patch: } return Boolean . ( str ) ;
rank: 441
score: 98.43351745605469
patch: } } if ( $STRING$ . }
rank: 441
score: 98.34691569010417
patch: return str . char CaMeL At ( 0 ) == $STRING$ ; } }
rank: 441
score: 98.07298278808594
patch: } } } } } } final
rank: 441
score: 98.05931091308594
patch: } } } } } } No
rank: 442
score: 98.72476900540866
patch: } return Boolean . $STRING$ . char CaMeL At ( str .
rank: 442
score: 98.6411994485294
patch: to CaMeL Boolean ( str . char CaMeL At ( 0 ) == $STRING$ ) &&
rank: 442
score: 98.58904474431819
patch: } switch ( chars . length ( ) ) {
rank: 442
score: 98.53941040039062
patch: } super . to CaMeL Boolean ( } }
rank: 442
score: 98.47008167613636
patch: } + str . length ( ) + $STRING$ ;
rank: 442
score: 98.43322075737848
patch: } else if ( str == } )
rank: 442
score: 98.34678739659927
patch: return str . char CaMeL At ( 0 ) == $STRING$ || ch == $STRING$ ;
rank: 442
score: 98.23894391741071
patch: } if * * * /
rank: 442
score: 98.07275390625
patch: } else if 1 }
rank: 442
score: 98.05929565429688
patch: } } if } * = }
rank: 443
score: 98.72437540690105
patch: } throw str . char CaMeL At ( 1 ) ;
rank: 443
score: 98.53582763671875
patch: } else if } return true ;
rank: 443
score: 98.46708170572917
patch: } * / else {
rank: 443
score: 98.34652944711539
patch: return str . char CaMeL At ( 1 ) == false ;
rank: 443
score: 98.23851013183594
patch: } else if } null false }
rank: 443
score: 98.07274712456598
patch: } * int } } } } }
rank: 443
score: 98.05923025948661
patch: } } / if } *
rank: 444
score: 98.724365234375
patch: } return Boolean . get CaMeL Boolean ( str . char CaMeL
rank: 444
score: 98.58827427455357
patch: } switch ( str . length ( ) ) { $NUMBER$ : {
rank: 444
score: 98.5350341796875
patch: } else if ( ! }
rank: 444
score: 98.46602376302083
patch: } - 1 * /
rank: 444
score: 98.43317522321429
patch: } } } ) * /
rank: 444
score: 98.34642836626838
patch: } return str . to CaMeL Char CaMeL Array ( ) . length == 1 ;
rank: 444
score: 98.23846435546875
patch: } else { if } / - ;
rank: 444
score: 98.05894470214844
patch: } } if } ; ++ }
rank: 445
score: 98.72420560396634
patch: switch ( System . to CaMeL Boolean ( str . char CaMeL
rank: 445
score: 98.64084879557292
patch: } while ( str . length ( ) == 0 )
rank: 445
score: 98.58806501116071
patch: } if ( str . length ( ) == - 1 ) {
rank: 445
score: 98.46551513671875
patch: } + ch 1 . length ( ) ;
rank: 445
score: 98.43307834201389
patch: } } } } ) . set }
rank: 445
score: 98.34598388671876
patch: } return str . last CaMeL Index CaMeL Of ( str . length ( ) ) == 0 ;
rank: 445
score: 98.2384033203125
patch: } if ( 0 == } ) {
rank: 445
score: 98.07153998480902
patch: } } / + } } } }
rank: 445
score: 98.05890655517578
patch: } } if } ; } =
rank: 446
score: 98.6405029296875
patch: } int str = str . to CaMeL String ( ) ;
rank: 446
score: 98.58796037946429
patch: } Object ch = str . char CaMeL At ( $NUMBER$ ) ;
rank: 446
score: 98.53182373046874
patch: } else if } System . out . }
rank: 446
score: 98.46513061523437
patch: } / * ?
rank: 446
score: 98.43254937065973
patch: } if ( str . } } }
rank: 446
score: 98.34595665564903
patch: return str . char CaMeL At ( 0 ) == 0 {
rank: 446
score: 98.07129669189453
patch: } else if new } } }
rank: 446
score: 98.05880301339286
patch: } } if * / ;
rank: 447
score: 98.72386338975694
patch: switch ( value . length ( ) )
rank: 447
score: 98.63909912109375
patch: } switch ( str . trim ( ) )
rank: 447
score: 98.58795166015625
patch: } switch ( this . str . length ( ) ) { case $STRING$ :
rank: 447
score: 98.52946166992187
patch: } if ( } String CaMeL Utils . }
rank: 447
score: 98.464306640625
patch: } case 1 :
rank: 447
score: 98.4320576985677
patch: } } finally } }
rank: 447
score: 98.23749457465277
patch: } else if ( } . value }
rank: 447
score: 98.07093048095703
patch: } * } int } } }
rank: 447
score: 98.05816650390625
patch: } } / / -
rank: 448
score: 98.72364807128906
patch: } return System . out . to CaMeL Boolean ( str . length ( )
rank: 448
score: 98.63888113839286
patch: } switch ( str . length ( ) . length ( ) )
rank: 448
score: 98.58786843039773
patch: } if ( char CaMeL Value == $STRING$ ) {
rank: 448
score: 98.34576416015625
patch: } return str . char CaMeL At ( str ) == $STRING$ ;
rank: 448
score: 98.23690359933036
patch: } else { } if }
rank: 448
score: 98.070556640625
patch: } } / $STRING$ / / /
rank: 448
score: 98.05745152064732
patch: } } if } . /
rank: 449
score: 98.72361403245192
patch: } return str . char CaMeL At ( str . char CaMeL
rank: 449
score: 98.638671875
patch: } if ( Integer . to CaMeL String ( str ) == null ) {
rank: 449
score: 98.58767465444711
patch: } switch ( str . char CaMeL At ( ) ) {
rank: 449
score: 98.52809448242188
patch: } else if ( to CaMeL String ( }
rank: 449
score: 98.46257188585069
patch: } catch ( value != null ) {
rank: 449
score: 98.43061065673828
patch: } } if ( str == }
rank: 449
score: 98.3457390280331
patch: if ( str . last CaMeL Index CaMeL Of ( $STRING$ ) == 1 ) {
rank: 449
score: 98.23597547743056
patch: } else { if ( * } }
rank: 449
score: 98.06978934151786
patch: } * / } / }
rank: 449
score: 98.05672200520833
patch: } } if * }
rank: 450
score: 98.63822428385417
patch: } switch ( ch . length ( )
rank: 450
score: 98.58765462239583
patch: } if ( str . to CaMeL Object ( ) == $STRING$ ) {
rank: 450
score: 98.45960489908855
patch: } catch = $STRING$ ;
rank: 450
score: 98.42962036132812
patch: } String } }
rank: 450
score: 98.34568786621094
patch: return str . last CaMeL Index CaMeL Of ( $STRING$ ) == 0 ; }
rank: 450
score: 98.23569161551339
patch: } / / * * /
rank: 450
score: 98.069091796875
patch: } * } } } } /
rank: 450
score: 98.05561174665179
patch: } } if } } $STRING$
rank: 451
score: 98.58753313337054
patch: } else if ( str . length ( ) > 1 ) {
rank: 451
score: 98.45948137555804
patch: } break ; case $NUMBER$ :
rank: 451
score: 98.42906358506944
patch: } else if ( str instanceof String }
rank: 451
score: 98.34554036458333
patch: return str . to CaMeL String ( ) . equals ( str ) ;
rank: 451
score: 98.23514556884766
patch: } / * / * * /
rank: 451
score: 98.06886121961806
patch: } else { } } / } }
rank: 451
score: 98.05556815011161
patch: } } } } } +
rank: 452
score: 98.72325642903645
patch: switch ( System . get CaMeL Boolean ( $STRING$ ) )
rank: 452
score: 98.58741048177083
patch: } switch ( ch . str . char CaMeL At ( 0 ) )
rank: 452
score: 98.45728302001953
patch: } * $NUMBER$ . * * /
rank: 452
score: 98.42881774902344
patch: } } else { return false ;
rank: 452
score: 98.34495326450893
patch: } return str == null ;
rank: 452
score: 98.2349624633789
patch: } else if ( * } }
rank: 452
score: 98.0680923461914
patch: } catch false } } } }
rank: 452
score: 98.05480085100446
patch: } } } } } Index
rank: 453
score: 98.7227313701923
patch: if ( System . to CaMeL String ( str . char CaMeL
rank: 453
score: 98.63753568209134
patch: } if ( str . char CaMeL At ( $NUMBER$ ) ==
rank: 453
score: 98.5873553936298
patch: } if ( str . length ( ) == true ) {
rank: 453
score: 98.5240249633789
patch: if ( $STRING$ . equals ( }
rank: 453
score: 98.45615931919643
patch: } / * * else {
rank: 453
score: 98.42837863498264
patch: } else if } } } } )
rank: 453
score: 98.34492761948529
patch: sb . return ( str . char CaMeL At ( 0 ) == $STRING$ ) ;
rank: 453
score: 98.2333755493164
patch: } else / null * * /
rank: 453
score: 98.06771414620536
patch: } * * if } /
rank: 453
score: 98.05413818359375
patch: } } if } / _
rank: 454
score: 98.6369857788086
patch: } switch ( String . $STRING$ )
rank: 454
score: 98.58652907151442
patch: } while ( str . length ( ) == $STRING$ ) {
rank: 454
score: 98.45484924316406
patch: } catch ( Number CaMeL Format CaMeL
rank: 454
score: 98.23300170898438
patch: } if ( true } } }
rank: 454
score: 98.05264718191964
patch: } } / / / *
rank: 455
score: 98.72120157877605
patch: } switch ( str . str . length ( ) )
rank: 455
score: 98.63697725183823
patch: } else to CaMeL Boolean ( str . char CaMeL At ( 0 ) ) ;
rank: 455
score: 98.58577104048295
patch: } else if ( str . length ( ) {
rank: 455
score: 98.42763943142361
patch: } } else if ( } } )
rank: 455
score: 98.34488677978516
patch: return str . to CaMeL Char CaMeL Array ( ) . length == 0 ;
rank: 455
score: 98.23295084635417
patch: } if ( } , true ) ;
rank: 455
score: 98.06710379464286
patch: / * * } / /
rank: 456
score: 98.72118422564338
patch: } return Boolean . append ( str . char CaMeL At ( 0 ) ) ;
rank: 456
score: 98.63669002757354
patch: return str . char CaMeL At ( 0 ) . to CaMeL Object ( ) ;
rank: 456
score: 98.58574969951923
patch: } if ( str . length ( ) < $NUMBER$ ) {
rank: 456
score: 98.52190551757812
patch: } else if ( $STRING$ . length ( }
rank: 456
score: 98.4537353515625
patch: } ?
rank: 456
score: 98.42759874131944
patch: } } * } } } * /
rank: 456
score: 98.2318344116211
patch: } else if } / * }
rank: 456
score: 98.06703016493056
patch: } } * System . next } }
rank: 456
score: 98.05027553013393
patch: } } } } } print
rank: 457
score: 98.72105916341145
patch: } if ( str . char CaMeL At ( str .
rank: 457
score: 98.63650076729911
patch: } } switch ( str . char CaMeL At ( 0 ) )
rank: 457
score: 98.5855712890625
patch: } switch ( super . to CaMeL String ( str ) ) {
rank: 457
score: 98.52177124023437
patch: } else { return String CaMeL Utils . }
rank: 457
score: 98.45222981770833
patch: } catch ( value == null ) {
rank: 457
score: 98.42735944475446
patch: } } else { String }
rank: 457
score: 98.06673177083333
patch: } } } int } / } /
rank: 458
score: 98.72099958147321
patch: } return String . value CaMeL Of ( str . length ( )
rank: 458
score: 98.63616943359375
patch: } switch ( byte CaMeL Value )
rank: 458
score: 98.58555250901442
patch: } String ch = str . char CaMeL At ( ) ;
rank: 458
score: 98.51990966796875
patch: } else if ( str == $STRING$ || }
rank: 458
score: 98.44830322265625
patch: } + ch 0
rank: 458
score: 98.4267069498698
patch: } } } || }
rank: 458
score: 98.229736328125
patch: } else { } ( }
rank: 458
score: 98.066650390625
patch: } * / / / /
rank: 458
score: 98.04975237165179
patch: } if } / / /
rank: 459
score: 98.7207782451923
patch: } return $STRING$ . char CaMeL At ( str . char CaMeL
rank: 459
score: 98.63562774658203
patch: } if ( str . char CaMeL At ( 1 ) != null ) {
rank: 459
score: 98.5852383700284
patch: } int ch = $STRING$ . length ( ) ;
rank: 459
score: 98.51910400390625
patch: } if ( ! to CaMeL Boolean }
rank: 459
score: 98.44634331597223
patch: } catch ( System . err ) {
rank: 459
score: 98.34344889322917
patch: return ( str . char CaMeL At ( 0 ) == 0 ) ;
rank: 459
score: 98.22968207465277
patch: } else if ( * * / }
rank: 459
score: 98.06642150878906
patch: } } } this . } }
rank: 459
score: 98.04713657924107
patch: } } if } ++ /
rank: 460
score: 98.72077287946429
patch: } return value . char CaMeL At ( str . length ( )
rank: 460
score: 98.63519287109375
patch: } char ch 0 = $STRING$ ;
rank: 460
score: 98.58499581473214
patch: } else if ( str . length ( ) > 0 ) {
rank: 460
score: 98.51902940538194
patch: } else { to CaMeL Boolean ( }
rank: 460
score: 98.44626193576389
patch: to CaMeL Boolean ( str ) ; }
rank: 460
score: 98.34342876233552
patch: return ( str . to CaMeL Lower CaMeL Case ( ) . equals ( $STRING$ ) ) ;
rank: 460
score: 98.22929382324219
patch: } else * false * * /
rank: 460
score: 98.06639607747395
patch: } if true } }
rank: 460
score: 98.0457763671875
patch: } } if } * ;
rank: 461
score: 98.72056227463942
patch: if ( Integer . to CaMeL String ( str . char CaMeL
rank: 461
score: 98.63518817608173
patch: } switch ( str . starts CaMeL With ( $STRING$ ) )
rank: 461
score: 98.51886596679688
patch: } } to CaMeL Boolean ( } ) ;
rank: 461
score: 98.42606608072917
patch: } } . char CaMeL At = }
rank: 461
score: 98.34331984747024
patch: return ! str . char CaMeL At ( 0 ) == str . char CaMeL At ( 1 ) ;
rank: 461
score: 98.22923932756696
patch: } / * / * }
rank: 461
score: 98.06600952148438
patch: } else if 1 ;
rank: 461
score: 98.042724609375
patch: } } } } } max
rank: 462
score: 98.72055053710938
patch: } if ( System . out == null )
rank: 462
score: 98.63494403545673
patch: } String str = str . to CaMeL Object ( ) ;
rank: 462
score: 98.58489435369319
patch: } if ( str . value == $STRING$ ) {
rank: 462
score: 98.44222586495536
patch: } || str == null ;
rank: 462
score: 98.42601776123047
patch: } } finally { System . }
rank: 462
score: 98.34330610795455
patch: } return str . to CaMeL Lower CaMeL Case ( ) . char CaMeL At ( 0 ) == $STRING$ ;
rank: 462
score: 98.22885470920139
patch: } else if ( $NUMBER$ == null }
rank: 462
score: 98.06578233506944
patch: } else if } / } } }
rank: 462
score: 98.04231480189732
patch: } } if } } else
rank: 463
score: 98.72044154575893
patch: } return $STRING$ == str . char CaMeL At ( 1 ) ;
rank: 463
score: 98.63475206163194
patch: } if ( ( str == $STRING$ )
rank: 463
score: 98.58482008713942
patch: } if ( ch . length ( ) == 1 ) {
rank: 463
score: 98.51764594184027
patch: super . to CaMeL Boolean ( str }
rank: 463
score: 98.44098510742188
patch: } * * ?
rank: 463
score: 98.42598179408482
patch: } if ( str != }
rank: 463
score: 98.22819519042969
patch: } else = this . } }
rank: 463
score: 98.06562805175781
patch: } } } - } } }
rank: 463
score: 98.04227992466518
patch: } } } } ( }
rank: 464
score: 98.72031813401442
patch: } return Character . get CaMeL Boolean ( str . char CaMeL
rank: 464
score: 98.63446044921875
patch: } else { if ( str == null )
rank: 464
score: 98.58439418247768
patch: } if ( str . ends CaMeL With ( $STRING$ ) ) {
rank: 464
score: 98.51734076605902
patch: } else if ( } return true )
rank: 464
score: 98.44072265625
patch: } || str . equals ( $STRING$ ) ;
rank: 464
score: 98.42572021484375
patch: } } finally { if }
rank: 464
score: 98.34247295673077
patch: } return ch . to CaMeL String ( ) == null ;
rank: 464
score: 98.22815619574652
patch: } else if ( } , true }
rank: 464
score: 98.06497192382812
patch: } else } super . } (
rank: 464
score: 98.04180908203125
patch: } } } / *
rank: 465
score: 98.7202860514323
patch: } try { char . to CaMeL String ( ) ;
rank: 465
score: 98.63421630859375
patch: } if ( ! str . char CaMeL At ( 1 ) == false )
rank: 465
score: 98.58428548177083
patch: } switch ( str . char CaMeL At ( 1 ) ) { {
rank: 465
score: 98.51661987304688
patch: } else { return Boolean . FALSE ; }
rank: 465
score: 98.44009399414062
patch: } + ch . substring ( 0 ) ;
rank: 465
score: 98.42532348632812
patch: } } } } } * }
rank: 465
score: 98.22801971435547
patch: } if ( } / false }
rank: 465
score: 98.06490652901786
patch: } * int * / }
rank: 465
score: 98.03980364118304
patch: } } } } ; /
rank: 466
score: 98.72022423377403
patch: switch ( System . to CaMeL String ( str . char CaMeL
rank: 466
score: 98.63417053222656
patch: } int lower CaMeL Case = str . char CaMeL At ( $NUMBER$ ) ;
rank: 466
score: 98.5842514038086
patch: } this . str 0 = str . char CaMeL At ( $NUMBER$ ) ;
rank: 466
score: 98.43929290771484
patch: } * ?
rank: 466
score: 98.42476654052734
patch: } } . if ( } }
rank: 466
score: 98.3421401977539
patch: } return str . char CaMeL At ( 0 ) == $STRING$ || str ;
rank: 466
score: 98.22705078125
patch: } else / * * } }
rank: 466
score: 98.06481061662946
patch: } * if } } /
rank: 466
score: 98.03730991908482
patch: } } / * = }
rank: 467
score: 98.72016252790179
patch: } return name . char CaMeL At ( 0 ) == $STRING$ ;
rank: 467
score: 98.58404134114583
patch: } switch ( str . char CaMeL At ( 1 ) ) break ;
rank: 467
score: 98.51522827148438
patch: } } if ( str . length ( }
rank: 467
score: 98.43861607142857
patch: } catch ( false ) {
rank: 467
score: 98.42437744140625
patch: } } else { return true ;
rank: 467
score: 98.34190458409927
patch: } return str . to CaMeL Char CaMeL Array ( ) . length == 0 ;
rank: 467
score: 98.22639465332031
patch: } if ( } ) ; }
rank: 467
score: 98.06477864583333
patch: } / } ) }
rank: 467
score: 98.03691755022321
patch: } } } } / =
rank: 468
score: 98.72016252790179
patch: } return str . char CaMeL At ( 0 ) instanceof $STRING$ ;
rank: 468
score: 98.63250325520833
patch: } if ( str . length ( ) . equals ( $STRING$ ) )
rank: 468
score: 98.58376242897727
patch: } boolean length = str . length ( ) ;
rank: 468
score: 98.4383773803711
patch: } + str . length ( )
rank: 468
score: 98.34158528645834
patch: } char ch 0 = str . char CaMeL At ( 0 ) ;
rank: 468
score: 98.22612762451172
patch: } else / false * * }
rank: 468
score: 98.06434631347656
patch: } else { } } / }
rank: 468
score: 98.03652954101562
patch: } else if } ;
rank: 469
score: 98.72005208333333
patch: } if ( str . char CaMeL At ( 1 ) == $NUMBER$ )
rank: 469
score: 98.63233139935662
patch: } if ( ! $STRING$ . equals CaMeL Ignore CaMeL Case ( str ) ) {
rank: 469
score: 98.58326631433823
patch: } if ( str . length ( ) >= str . length ( ) ) {
rank: 469
score: 98.512841796875
patch: } else if ( str instanceof String ) {
rank: 469
score: 98.4371109008789
patch: } catch ( Boolean next ) {
rank: 469
score: 98.42195129394531
patch: } * / this . } }
rank: 469
score: 98.34157986111111
patch: return ( str . last CaMeL Index CaMeL Of ( $STRING$ ) == - 1 ) ;
rank: 469
score: 98.22565375434027
patch: } else if ( key . value }
rank: 469
score: 98.06414116753473
patch: } } } System . while } }
rank: 469
score: 98.03587849934895
patch: } } * / =
rank: 470
score: 98.71976725260417
patch: } return String . to CaMeL Boolean ( str ) ;
rank: 470
score: 98.63214874267578
patch: } if ( ! str . char CaMeL At ( 0 ) == true )
rank: 470
score: 98.58323838975694
patch: } if ( Boolean . length ) {
rank: 470
score: 98.51077270507812
patch: return Boolean . value CaMeL Of ( } }
rank: 470
score: 98.42172241210938
patch: } * / } else { }
rank: 470
score: 98.34137321920956
patch: return ( str . char CaMeL At ( 0 ) & $STRING$ ) == $STRING$ ;
rank: 470
score: 98.22533501519098
patch: } else if ( name . equals }
rank: 470
score: 98.06327311197917
patch: } } $STRING$ } }
rank: 470
score: 98.03370012555804
patch: } } } } } return
rank: 471
score: 98.63206990559895
patch: } } switch ( str . length ( ) ) {
rank: 471
score: 98.58299255371094
patch: } else { return str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 471
score: 98.43372344970703
patch: } || str == null ) {
rank: 471
score: 98.42167154947917
patch: } } return true }
rank: 471
score: 98.06326729910714
patch: } } if ) { }
rank: 472
score: 98.71919759114583
patch: } String ch . char CaMeL At ( 0 ) ;
rank: 472
score: 98.510009765625
patch: } } if ( to CaMeL Boolean )
rank: 472
score: 98.43340192522321
patch: } catch ( true ) {
rank: 472
score: 98.4215087890625
patch: } if ( } } ) }
rank: 472
score: 98.34091525607639
patch: } return str . length ( ) ==
rank: 472
score: 98.22512817382812
patch: } for ( / * * }
rank: 472
score: 98.06326293945312
patch: } * * * }
rank: 472
score: 98.03235880533855
patch: } } if } null
rank: 473
score: 98.71909743088942
patch: switch ( String . char CaMeL At ( str . char CaMeL
rank: 473
score: 98.63042449951172
patch: } if ( str . length ( ) . length ( ) == 0 )
rank: 473
score: 98.58286946614584
patch: } if ( $STRING$ . to CaMeL String ( ) == $STRING$ ) {
rank: 473
score: 98.50856526692708
patch: } else if ( } } finally {
rank: 473
score: 98.4331563313802
patch: break ; } else {
rank: 473
score: 98.42129516601562
patch: } if } else {
rank: 473
score: 98.34088134765625
patch: this . str = str . char CaMeL At ( 0 ) - $STRING$ ;
rank: 473
score: 98.22491455078125
patch: } else { false * /
rank: 473
score: 98.06314522879464
patch: } * int / / /
rank: 473
score: 98.03220912388393
patch: } } if } = $STRING$
rank: 474
score: 98.71897379557292
patch: } return System . get CaMeL Boolean ( str ) ;
rank: 474
score: 98.63037923177083
patch: } if ( str . char CaMeL At ( $NUMBER$ ) == null )
rank: 474
score: 98.58265516493056
patch: } return str . length ( ) . char CaMeL At ( 0 ) == $STRING$ ;
rank: 474
score: 98.34085845947266
patch: } return str . last CaMeL Index CaMeL Of ( $NUMBER$ ) == 1 ;
rank: 474
score: 98.22476196289062
patch: } else { / / ; }
rank: 474
score: 98.06304253472223
patch: } else } ( } } } }
rank: 474
score: 98.03187779017857
patch: } } if } } false
rank: 475
score: 98.71858978271484
patch: } return System . err . to CaMeL String ( str . length ( )
rank: 475
score: 98.63030598958333
patch: } if ( str . char CaMeL At ( $STRING$ ) == $STRING$ )
rank: 475
score: 98.5826416015625
patch: } if ( str . length ( ) == length ( ) ) {
rank: 475
score: 98.43177490234375
patch: } / * * System . out . /
rank: 475
score: 98.42034912109375
patch: } } } || str . length }
rank: 475
score: 98.34052068536931
patch: return ( str . last CaMeL Index CaMeL Of (
rank: 475
score: 98.22470528738839
patch: } if } } null ;
rank: 475
score: 98.06285942925348
patch: } catch null } } } } }
rank: 475
score: 98.03186798095703
patch: } } ;
rank: 476
score: 98.63025841346153
patch: } String ch = str . char CaMeL At ( 1 )
rank: 476
score: 98.58169376148896
patch: } switch ( str . index CaMeL Of ( $STRING$ ) ) { case $NUMBER$ :
rank: 476
score: 98.50739135742188
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 476
score: 98.42865600585938
patch: } ++ str . length ( ) ) ;
rank: 476
score: 98.41980852399554
patch: } } } } && }
rank: 476
score: 98.34027654474431
patch: return str . last CaMeL Index CaMeL Of ( str . char CaMeL At ( 1 ) ) == $STRING$ ;
rank: 476
score: 98.22391764322917
patch: } else if ( } . length }
rank: 476
score: 98.062255859375
patch: } * / / } /
rank: 476
score: 98.03170776367188
patch: } } } } +
rank: 477
score: 98.42771402994792
patch: fail ( $STRING$ ) ;
rank: 477
score: 98.41963195800781
patch: } else { } } ) ;
rank: 477
score: 98.33958524816177
patch: this . str = str . char CaMeL At ( 0 ) ; } else {
rank: 477
score: 98.2234115600586
patch: } else { * * } }
rank: 477
score: 98.06205919053819
patch: } if true } } } } }
rank: 478
score: 98.63019670758929
patch: } boolean str = str . char CaMeL At ( 0 ) ;
rank: 478
score: 98.42647094726563
patch: : return true ;
rank: 478
score: 98.41920301649306
patch: } } catch ( Interrupted CaMeL Exception }
rank: 478
score: 98.06134033203125
patch: } } * / / } }
rank: 478
score: 98.02950613839286
patch: } } if } ; super
rank: 479
score: 98.71826889935662
patch: } return Integer . equals ( str . char CaMeL At ( 0 ) ) ;
rank: 479
score: 98.58146158854167
patch: } if ( str . length ( ) == 1 ) return false ;
rank: 479
score: 98.50394287109376
patch: } } if ( String CaMeL Utils . }
rank: 479
score: 98.42606811523437
patch: } catch ( value . char CaMeL At (
rank: 479
score: 98.418701171875
patch: } else } } } ;
rank: 479
score: 98.22136094835069
patch: } else if ( 1 != 0 }
rank: 479
score: 98.06119210379464
patch: } catch } $STRING$ } }
rank: 479
score: 98.02823311941964
patch: } } if } = *
rank: 480
score: 98.71821594238281
patch: } return System . to CaMeL Boolean ( str . length ( ) ) ;
rank: 480
score: 98.58099724264706
patch: } switch ( str . length ( ) ) { case $NUMBER$ : return false ;
rank: 480
score: 98.42402479383681
patch: } System . arraycopy ( str ) ;
rank: 480
score: 98.41845703125
patch: } else { } this . } }
rank: 480
score: 98.33935546875
patch: buffer . if ( str . char CaMeL At ( 0 ) == $STRING$ ) {
rank: 480
score: 98.22035217285156
patch: } else if } return } ;
rank: 480
score: 98.06097412109375
patch: } * if false }
rank: 481
score: 98.71818324497768
patch: if ( ch == $STRING$ )
rank: 481
score: 98.62932586669922
patch: } if ( ! str . length ( ) . equals ( $STRING$ ) )
rank: 481
score: 98.58058518629808
patch: } if ( ch . length ( ) == 0 ) {
rank: 481
score: 98.5031494140625
patch: } else { return $STRING$ . equals ( }
rank: 481
score: 98.42377580915179
patch: } * * * * ?
rank: 481
score: 98.41819545200893
patch: } } } ) } )
rank: 481
score: 98.33909912109375
patch: return ( str . to CaMeL Lower CaMeL Case ( ) . length ( ) == 1 ) ;
rank: 481
score: 98.22027587890625
patch: } else if } ( } ;
rank: 481
score: 98.06050618489583
patch: } } if true }
rank: 481
score: 98.02725655691964
patch: } } } ( } }
rank: 482
score: 98.7177001953125
patch: } if ( str . char CaMeL At ( str . length ( )
rank: 482
score: 98.62907140395221
patch: } if ( str . char CaMeL At ( 0 ) == - 1 ) {
rank: 482
score: 98.58057579627403
patch: } boolean ch = str . to CaMeL String ( ) ;
rank: 482
score: 98.50117492675781
patch: } return $STRING$ . equals ( }
rank: 482
score: 98.4222412109375
patch: } + ch 1 = $STRING$ ;
rank: 482
score: 98.4180679321289
patch: } } . if ( str }
rank: 482
score: 98.33864920479911
patch: return ! str . index CaMeL Of ( $STRING$ ) == 1 ;
rank: 482
score: 98.2200927734375
patch: } else = null }
rank: 482
score: 98.02719116210938
patch: } } int
rank: 483
score: 98.71749441964286
patch: if ( ch . char CaMeL At ( 0 ) == $STRING$ )
rank: 483
score: 98.58004557291666
patch: } else return str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 483
score: 98.41788058810764
patch: } String str = str . trim }
rank: 483
score: 98.33811848958334
patch: } return str . char CaMeL At ( 0 ) == $STRING$ false ;
rank: 483
score: 98.22005462646484
patch: } if ( $NUMBER$ == } }
rank: 483
score: 98.059814453125
patch: } else if 0 ; }
rank: 483
score: 98.02711704799107
patch: } } / / if }
rank: 484
score: 98.71746063232422
patch: to CaMeL Boolean ( str . char CaMeL At ( str . ) ) ;
rank: 484
score: 98.49990844726562
patch: } if ( to CaMeL Boolean )
rank: 484
score: 98.42063395182292
patch: } + ch 0 ;
rank: 484
score: 98.41780853271484
patch: } if ( str != $STRING$ }
rank: 484
score: 98.33810424804688
patch: } return this . str . char CaMeL At ( str ) == $STRING$ ;
rank: 484
score: 98.21956380208333
patch: } if ( } , true } }
rank: 484
score: 98.05949401855469
patch: } * int } } } }
rank: 484
score: 98.02571323939732
patch: } } } } } Object
rank: 485
score: 98.62868245442708
patch: } if ( ( str . length ( ) == )
rank: 485
score: 98.4998779296875
patch: } } } catch }
rank: 485
score: 98.41713460286458
patch: } } if ( str } } )
rank: 485
score: 98.33810221354166
patch: return ! str . char CaMeL At ( 0 ) == $STRING$ ; }
rank: 485
score: 98.21938069661458
patch: } else if ( } , null }
rank: 485
score: 98.05944146050348
patch: } } * + } } } }
rank: 485
score: 98.02564493815105
patch: } } / - /
rank: 486
score: 98.71682303292411
patch: } String str = $STRING$ . char CaMeL At ( 0 ) ;
rank: 486
score: 98.62858312270221
patch: } if ( ! str . . char CaMeL At ( 0 ) == $STRING$ )
rank: 486
score: 98.57907339242789
patch: } if ( str . length ( ) case $NUMBER$ : {
rank: 486
score: 98.4998046875
patch: } else to CaMeL Boolean ( str ) ;
rank: 486
score: 98.41720581054688
patch: return str . char CaMeL At ( $NUMBER$ )
rank: 486
score: 98.41700744628906
patch: } else { } } else {
rank: 486
score: 98.33796492866848
patch: } return this . str . char CaMeL At ( str . char CaMeL At ( 1 ) ) == $STRING$ ;
rank: 486
score: 98.21907552083333
patch: } if ( ! ) . value }
rank: 487
score: 98.71669358473558
patch: if ( $STRING$ . to CaMeL String ( ) == null )
rank: 487
score: 98.62857259114584
patch: } if ( str . char CaMeL At ( 0 ) >= $STRING$ )
rank: 487
score: 98.57876790364584
patch: } if ( str . index CaMeL Of ( $STRING$ ) == 1 )
rank: 487
score: 98.49910278320313
patch: } if ( ! $STRING$ . equals ( }
rank: 487
score: 98.41657172309027
patch: } } finally { if ( } }
rank: 487
score: 98.41620551215277
patch: } / * * System . out .
rank: 487
score: 98.33785207648026
patch: } return str . to CaMeL String ( ) . to CaMeL String ( ) == $STRING$ ;
rank: 487
score: 98.05896759033203
patch: } / / / } } }
rank: 487
score: 98.02444022042411
patch: } } } / / ;
rank: 488
score: 98.62836371527777
patch: } if ( ( str != null )
rank: 488
score: 98.41643524169922
patch: } * / String CaMeL Buffer }
rank: 488
score: 98.05893283420139
patch: } else if } int } ) ;
rank: 489
score: 98.71629503038194
patch: } . if ( str == null )
rank: 489
score: 98.628271484375
patch: } if ( Long . to CaMeL String ( str ) == null )
rank: 489
score: 98.4965087890625
patch: } else if ( } else if ( }
rank: 489
score: 98.4162368774414
patch: } * / } } * }
rank: 489
score: 98.41329956054688
patch: } catch ( Number CaMeL Format CaMeL Exception ]
rank: 489
score: 98.33637551700367
patch: return str . char CaMeL At ( 0 ) == $STRING$ && str == $STRING$ ;
rank: 489
score: 98.21832953559027
patch: } else { if } } if }
rank: 489
score: 98.05892944335938
patch: } if 0 } }
rank: 489
score: 98.02362932477679
patch: } } if } = false
rank: 490
score: 98.57691368689903
patch: } if ( value . length ( ) == 1 ) {
rank: 490
score: 98.49628295898438
patch: } else if ( Char CaMeL Encoding . }
rank: 490
score: 98.41614786783855
patch: } } ) * }
rank: 490
score: 98.41328938802083
patch: } ;
rank: 490
score: 98.33626556396484
patch: } return this . str . char CaMeL At ( 0 ) == str ;
rank: 490
score: 98.21750217013889
patch: } if ( } } } ) ;
rank: 490
score: 98.05739339192708
patch: } } int * } } } }
rank: 490
score: 98.02278355189732
patch: } } / if } System
rank: 491
score: 98.71592610677084
patch: } return str . length ( ) . to CaMeL Boolean ( ) ;
rank: 491
score: 98.62811279296875
patch: } if ( ( $STRING$ . char CaMeL At ( 0 ) == $STRING$ )
rank: 491
score: 98.415771484375
patch: } / } * /
rank: 491
score: 98.33626302083333
patch: } else switch ( str . char CaMeL At ( 0 ) ) {
rank: 491
score: 98.21697235107422
patch: } else / / * } }
rank: 491
score: 98.0573501586914
patch: } } / System . } }
rank: 491
score: 98.02244059244792
patch: } } / / else
rank: 492
score: 98.62799944196429
patch: } if ( this . str . length ( ) == 1 )
rank: 492
score: 98.57538713727679
patch: } switch ( ch . length ( ) ) { case $NUMBER$ :
rank: 492
score: 98.49530639648438
patch: } super . to CaMeL Boolean ( str )
rank: 492
score: 98.4156494140625
patch: } * } * } * /
rank: 492
score: 98.4122823079427
patch: } return value == null
rank: 492
score: 98.33625793457031
patch: return ch . to CaMeL String ( ) . length ( ) == 0 ;
rank: 492
score: 98.21690150669643
patch: } if } } ) ;
rank: 492
score: 98.05552164713542
patch: } / / / / / / /
rank: 492
score: 98.0213114420573
patch: } } for } }
rank: 493
score: 98.715576171875
patch: } return to CaMeL Boolean ( str . char CaMeL
rank: 493
score: 98.62799431295956
patch: } if ( str . str . char CaMeL At ( 0 ) == $STRING$ )
rank: 493
score: 98.575244140625
patch: } if ( str . length ( ) . length ( ) ) {
rank: 493
score: 98.41146850585938
patch: } catch ( Boolean ch ) {
rank: 493
score: 98.33622523716518
patch: return ! str . index CaMeL Of ( $STRING$ ) == 0 ;
rank: 493
score: 98.21609836154514
patch: } if ( } , false ) {
rank: 493
score: 98.05529106987848
patch: } } } } } } / }
rank: 493
score: 98.02130126953125
patch: } } if } ; Exception
rank: 494
score: 98.62798665364583
patch: } String ch = str . char CaMeL At ( 0 ) + $STRING$
rank: 494
score: 98.57500348772321
patch: } if ( str . length ( ) == 0 ) { }
rank: 494
score: 98.40995025634766
patch: } + ch 1 = str ;
rank: 494
score: 98.3362045288086
patch: if ( str . last CaMeL Index CaMeL Of ( $STRING$ ) == 0 )
rank: 494
score: 98.21588897705078
patch: } else if } catch } }
rank: 494
score: 98.05527750651042
patch: } } } } } return false ;
rank: 494
score: 98.02126639229911
patch: } } if / * /
rank: 495
score: 98.71552276611328
patch: } char . char CaMeL At ( str . char CaMeL At ( 0 )
rank: 495
score: 98.62791341145834
patch: } if ( ( str . to CaMeL String ( ) == null )
rank: 495
score: 98.57484837582237
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( 0 ) ) ; }
rank: 495
score: 98.4943603515625
patch: } else if ( str == null && }
rank: 495
score: 98.41492462158203
patch: } / * } else if }
rank: 495
score: 98.40902099609374
patch: : return false ;
rank: 495
score: 98.33583286830357
patch: f = str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 495
score: 98.05509185791016
patch: } / / * / / }
rank: 495
score: 98.02116176060268
patch: } } } } } in
rank: 496
score: 98.62789212740384
patch: } if ( ( $STRING$ . length ( ) == 0 )
rank: 496
score: 98.57479858398438
patch: } switch ( str . to CaMeL String ( ) ) { case $STRING$ :
rank: 496
score: 98.49414825439453
patch: } if ( to CaMeL Boolean }
rank: 496
score: 98.40794372558594
patch: } / * System . out .
rank: 496
score: 98.33575798483456
patch: this . str = str . char CaMeL At ( 0 ) [ 0 ] ;
rank: 496
score: 98.21532524956598
patch: } if ( ( value == null }
rank: 496
score: 98.05496554904514
patch: } } * / / } } }
rank: 496
score: 98.0208984375
patch: } } / ;
rank: 497
score: 98.71532264122597
patch: } str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 497
score: 98.62782915900735
patch: } int lower CaMeL Case . if ( str . length ( ) == 0 )
rank: 497
score: 98.57435518152573
patch: } switch ( str . to CaMeL String ( ) ) { case $NUMBER$ : {
rank: 497
score: 98.41439056396484
patch: } if ( str == } }
rank: 497
score: 98.40752495659723
patch: if ( str . length ( ) ==
rank: 497
score: 98.33560180664062
patch: return str . to CaMeL Char CaMeL Array ( ) ;
rank: 497
score: 98.21424696180556
patch: } if ( ! } . } )
rank: 497
score: 98.05461120605469
patch: } * * / } / }
rank: 497
score: 98.02039446149554
patch: } } if } } Exception
rank: 498
score: 98.71465657552083
patch: if ( str . char CaMeL At ( 0 ) == null ) {
rank: 498
score: 98.62771809895834
patch: } String str = str . char CaMeL At ( 0 ) + $STRING$
rank: 498
score: 98.57419259207589
patch: } else if ( str . length ( ) != 0 ) {
rank: 498
score: 98.40750122070312
patch: } catch ( Boolean )
rank: 498
score: 98.33530144942434
patch: return ! str . to CaMeL Lower CaMeL Case ( ) . length ( ) == 0 ;
rank: 498
score: 98.21421305338542
patch: } if } , }
rank: 498
score: 98.05420939127605
patch: } if null ; }
rank: 498
score: 98.01995849609375
patch: } } } if } *
rank: 499
score: 98.71440573299633
patch: } return Boolean . equals ( str . char CaMeL At ( 1 ) ) ;
rank: 499
score: 98.62762451171875
patch: } switch ( str . char CaMeL At ( ) )
rank: 499
score: 98.5740966796875
patch: } if ( str . char CaMeL At ( 0 ) ) {
rank: 499
score: 98.49105834960938
patch: } else if ( } else }
rank: 499
score: 98.41274685329861
patch: } } if ( str . char }
rank: 499
score: 98.40561252170139
patch: } + str . [ 0 ] ;
rank: 499
score: 98.33509736902573
patch: } return str . char CaMeL At ( 0 ) == str [ 1 ] ;
rank: 499
score: 98.21418980189732
patch: } if } return false ;
rank: 499
score: 98.05411202566964
patch: } * * * / }
rank: 499
score: 98.01933070591518
patch: } } / / / System
rank: 500
score: 98.41217803955078
patch: } else { for ( } }
rank: 500
score: 98.39912923177083
patch: } : case $NUMBER$ :
rank: 500
score: 98.33499581473214
patch: return str . char CaMeL At ( 1 ) == - 1 ;
rank: 500
score: 98.21312798394098
patch: } if ( is CaMeL True } }
rank: 500
score: 98.05404324001736
patch: } while } } } } } }
rank: 500
score: 98.01914760044643
patch: } } / } / /
rank: 501
score: 98.7137784090909
patch: } str . char CaMeL At ( $NUMBER$ ) ;
rank: 501
score: 98.6268539428711
patch: } if ( $STRING$ . to CaMeL String ( str ) == null ) {
rank: 501
score: 98.39859008789062
patch: } / / * /
rank: 501
score: 98.33450317382812
patch: } return str . last CaMeL Index CaMeL Of ( $STRING$ ) == ) ;
rank: 501
score: 98.21302286783855
patch: return false ; } else
rank: 501
score: 98.05344645182292
patch: } catch $STRING$ ; }
rank: 501
score: 98.01882498604911
patch: } } if * } /
rank: 502
score: 98.71352132161458
patch: } switch ( String CaMeL Buffer . length ( ) )
rank: 502
score: 98.6268310546875
patch: } switch ( str . length ( ) + 1 ) {
rank: 502
score: 98.57365979646382
patch: } switch ( this . str . char CaMeL At ( 0 ) ) { case $NUMBER$ :
rank: 502
score: 98.41108921595982
patch: } * } } } )
rank: 502
score: 98.39669799804688
patch: } catch ( Boolean }
rank: 502
score: 98.33438773777173
patch: } return this . str . char CaMeL At ( str . char CaMeL At ( 0 ) ) == $STRING$ ;
rank: 502
score: 98.21260833740234
patch: } else { ( null . }
rank: 502
score: 98.0532735188802
patch: } else { value ;
rank: 502
score: 98.01834542410714
patch: } } if } ; else
rank: 503
score: 98.7134258563702
patch: switch ( str . char CaMeL At ( $NUMBER$ ) ) {
rank: 503
score: 98.62652180989583
patch: } if ( $STRING$ . char CaMeL At ( 0 ) == $STRING$ )
rank: 503
score: 98.57344563802083
patch: } if ( ! $STRING$ . length ( ) ) {
rank: 503
score: 98.41104465060764
patch: } } if ( str != $STRING$ }
rank: 503
score: 98.39420572916667
patch: } / case $NUMBER$ :
rank: 503
score: 98.3343017578125
patch: return str . char CaMeL At ( 0 ) != str . char CaMeL At ( 0 ) ;
rank: 503
score: 98.21188015407986
patch: } else if ( 0 < 0 }
rank: 503
score: 98.05308532714844
patch: } } / / } / ;
rank: 504
score: 98.7133056640625
patch: } ) && str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 504
score: 98.62603400735294
patch: switch ( str . length ( ) . char CaMeL At ( 0 ) ) {
rank: 504
score: 98.57332611083984
patch: } switch ( str . length ( ) ) { case $NUMBER$ : { {
rank: 504
score: 98.48679024832589
patch: } * / return false ;
rank: 504
score: 98.41070556640625
patch: } else } } } )
rank: 504
score: 98.3925069173177
patch: } * $NUMBER$ * /
rank: 504
score: 98.33426106770834
patch: return str . last CaMeL Index CaMeL Of ( 0 ) == 0 ;
rank: 504
score: 98.21124267578125
patch: } if * * * * * /
rank: 504
score: 98.05289713541667
patch: } while } ) }
rank: 504
score: 98.01834106445312
patch: } } return } }
rank: 505
score: 98.71309988839286
patch: if ( $STRING$ == str . char CaMeL At ( 0 ) )
rank: 505
score: 98.62587890625
patch: } if ( this . str == $STRING$ )
rank: 505
score: 98.57316371372768
patch: } if ( str . length ( ) == 1 ) { }
rank: 505
score: 98.48677978515624
patch: } } } ) . replace CaMeL All }
rank: 505
score: 98.40989854600694
patch: } } if ( this . } )
rank: 505
score: 98.38895089285714
patch: } * $NUMBER$ . * /
rank: 505
score: 98.33391974954044
patch: return str . char CaMeL At ( 0 ) . length ( ) == 0 ;
rank: 505
score: 98.21110534667969
patch: } else { if * } }
rank: 505
score: 98.05282592773438
patch: } * int } /
rank: 505
score: 98.01707240513393
patch: } } if / / ;
rank: 506
score: 98.71295720880681
patch: switch ( String . char CaMeL At ( str .
rank: 506
score: 98.62539672851562
patch: } int lower CaMeL Case = $STRING$ . char CaMeL At ( 0 ) ;
rank: 506
score: 98.57294170673077
patch: } if ( str . length ( ) <= $STRING$ ) {
rank: 506
score: 98.48656354631696
patch: } } } } finally {
rank: 506
score: 98.38858642578126
patch: } * $NUMBER$ /
rank: 506
score: 98.33384638247283
patch: } return str . to CaMeL String ( ) . to CaMeL String ( ) . length ( ) == 0 ;
rank: 506
score: 98.21098327636719
patch: } else { if true } }
rank: 506
score: 98.05268205915179
patch: } / * } / }
rank: 506
score: 98.01675851004464
patch: } } if } } {
rank: 507
score: 98.71282958984375
patch: equals CaMeL Ignore CaMeL Case ( str == null ) ;
rank: 507
score: 98.62500939002403
patch: } char ch = str . char CaMeL At ( 0 )
rank: 507
score: 98.48621215820313
patch: } if ( str . char CaMeL At }
rank: 507
score: 98.4075927734375
patch: } } finally { / * }
rank: 507
score: 98.38624790736607
patch: } || str == $STRING$ ;
rank: 507
score: 98.3333740234375
patch: return ( str == null ) ;
rank: 507
score: 98.21057891845703
patch: } if ( } ) . }
rank: 508
score: 98.71281433105469
patch: } return ( str . char CaMeL At ( 0 ) == $STRING$ ) ;
rank: 508
score: 98.62491861979167
patch: } else if ( str . to CaMeL String ( ) == null )
rank: 508
score: 98.57284884982639
patch: } switch ( char CaMeL At ) {
rank: 508
score: 98.4859619140625
patch: if ( } String CaMeL Utils . }
rank: 508
score: 98.40757751464844
patch: } this . } } ) }
rank: 508
score: 98.38572692871094
patch: } || str . length ( )
rank: 508
score: 98.33324432373047
patch: } return str . last CaMeL Index CaMeL Of ( $STRING$ ) != 0 ;
rank: 508
score: 98.21055385044643
patch: } else if ( start }
rank: 508
score: 98.05171712239583
patch: } catch ( get CaMeL Exception ( }
rank: 508
score: 98.01502336774554
patch: } } if / ; ;
rank: 509
score: 98.71274038461539
patch: } if ( System . to CaMeL Boolean ( str ) )
rank: 509
score: 98.62485638786765
patch: } if ( ! str . char CaMeL At ( 0 ) == - 1 )
rank: 509
score: 98.57284109933036
patch: } String str = str . index CaMeL Of ( $STRING$ ) ;
rank: 509
score: 98.48206329345703
patch: } } return Boolean . TRUE ;
rank: 509
score: 98.40716552734375
patch: } * / return }
rank: 509
score: 98.38297526041667
patch: } / * * ?
rank: 509
score: 98.20962524414062
patch: } if ( 1 < 0 }
rank: 509
score: 98.05154079861111
patch: } } } } } } } false
rank: 509
score: 98.01395089285714
patch: } } } } } String
rank: 510
score: 98.62480163574219
patch: } if ( ! str . char CaMeL At ( 0 ) != $STRING$ )
rank: 510
score: 98.48052300347223
patch: } else if ( $STRING$ . != }
rank: 510
score: 98.40674506293402
patch: } } } } } } } ;
rank: 510
score: 98.3813985188802
patch: } finally { for (
rank: 510
score: 98.33282470703125
patch: } return $STRING$ . char CaMeL At ( str . length ( ) ) == $STRING$ ;
rank: 510
score: 98.20953369140625
patch: } if ( false false }
rank: 510
score: 98.05148751395089
patch: } * * int * /
rank: 510
score: 98.01387532552083
patch: } } * / *
rank: 511
score: 98.71258544921875
patch: switch ( name . char CaMeL At ( 1 ) )
rank: 511
score: 98.57276916503906
patch: } switch ( str . length ( ) ) { case $NUMBER$ : break ;
rank: 511
score: 98.40633138020833
patch: } } { return }
rank: 511
score: 98.38130696614583
patch: } catch ( TRUE ;
rank: 511
score: 98.33274841308594
patch: } return str . last CaMeL Index CaMeL Of ( str ) == $NUMBER$ ;
rank: 511
score: 98.20915391710069
patch: } else if ( 1 < 0 }
rank: 511
score: 98.05128696986607
patch: } else { * / /
rank: 511
score: 98.0133056640625
patch: } } } } } to
rank: 512
score: 98.71242268880208
patch: } return $STRING$ . boolean CaMeL Value ( str ) ;
rank: 512
score: 98.62467956542969
patch: } if ( ( str . char CaMeL At ( 1 ) != $STRING$ )
rank: 512
score: 98.57264122596153
patch: } switch ( str . length ( ) ) { $STRING$ ;
rank: 512
score: 98.40613555908203
patch: } } . append ( str }
rank: 512
score: 98.38027615017361
patch: } + str . length ( ) ?
rank: 512
score: 98.33249080882354
patch: } return ch . to CaMeL String ( ) . length ( ) == 0 ;
rank: 512
score: 98.20793151855469
patch: } else { / / } }
rank: 512
score: 98.05106353759766
patch: / * * * * / /
rank: 512
score: 98.01266915457589
patch: } } } } * ;
rank: 513
score: 98.71238798253677
patch: } return Boolean . value CaMeL Of ( str . char CaMeL At ( 0 )
rank: 513
score: 98.62458147321429
patch: } if ( str . get CaMeL Value ( ) == null )
rank: 513
score: 98.4774169921875
patch: } else if ( Math . abs ( }
rank: 513
score: 98.40554373604911
patch: } } ? * * /
rank: 513
score: 98.37505340576172
patch: } catch ( Error err ) {
rank: 513
score: 98.33242797851562
patch: return str . char CaMeL At ( str . char CaMeL At ( 0 ) ) == $STRING$ ;
rank: 513
score: 98.20758056640625
patch: } else { if ( } ) ;
rank: 513
score: 98.05056326729911
patch: } / / / / }
rank: 513
score: 98.01265171595982
patch: } } if if } ;
rank: 514
score: 98.71222282858456
patch: switch ( Integer . length ( str . char CaMeL At ( 0 ) ) )
rank: 514
score: 98.62452281605114
patch: } switch ( str . length ( ) true )
rank: 514
score: 98.57250162760417
patch: } if ( str . index CaMeL Of ( $STRING$ ) == 0 )
rank: 514
score: 98.4762939453125
patch: } return Boolean . TRUE . equals ( }
rank: 514
score: 98.4049072265625
patch: } } . boolean }
rank: 514
score: 98.37419782366071
patch: } + ch == $STRING$ ;
rank: 514
score: 98.332421875
patch: return str . last CaMeL Index CaMeL Of ( $STRING$ ) != 0 ;
rank: 514
score: 98.20740509033203
patch: } if ( 0 > } }
rank: 514
score: 98.05044894748264
patch: } else { super . } ( }
rank: 515
score: 98.71221051897321
patch: } return $STRING$ . char CaMeL At ( 1 ) == null ;
rank: 515
score: 98.5724346454327
patch: } while ( str . length ( ) == $NUMBER$ ) {
rank: 515
score: 98.47586495535714
patch: } else if } else }
rank: 515
score: 98.3705062866211
patch: return ( str . length ( )
rank: 515
score: 98.33228895399306
patch: } return str . to CaMeL Char CaMeL Array ( ) . equals ( $STRING$ ) ;
rank: 515
score: 98.20726667131696
patch: } } ( } ) ;
rank: 515
score: 98.05025809151786
patch: } } if ) } }
rank: 515
score: 98.01182338169643
patch: } } if } ; String
rank: 516
score: 98.62368977864584
patch: } while ( str . char CaMeL At ( 1 ) == $STRING$ )
rank: 516
score: 98.57240804036458
patch: } set CaMeL Value ( str ) ;
rank: 516
score: 98.475439453125
patch: } else if ( } return false ) {
rank: 516
score: 98.40333251953125
patch: } catch ( }
rank: 516
score: 98.33214653862848
patch: if ( str . to CaMeL String ( ) . length ( ) == 0 ) {
rank: 516
score: 98.20682198660714
patch: } else = null ; }
rank: 516
score: 98.01087297712054
patch: } } } / = }
rank: 517
score: 98.71180725097656
patch: to CaMeL Boolean ( str . char CaMeL At ( 0 ) ) ; }
rank: 517
score: 98.62349759615384
patch: } switch ( System . get CaMeL Boolean ( str ) )
rank: 517
score: 98.57219587053571
patch: } if ( str . length ( ) 1 == 0 ) {
rank: 517
score: 98.40311686197917
patch: } } if ( } } } }
rank: 517
score: 98.36836751302083
patch: } + ch 0 :
rank: 517
score: 98.3318099975586
patch: return $STRING$ . to CaMeL String ( ) . length ( ) == 1 ;
rank: 517
score: 98.2066650390625
patch: } else return true }
rank: 517
score: 98.04965209960938
patch: } } } } int } }
rank: 518
score: 98.71153157552084
patch: to CaMeL Boolean ( str . char CaMeL At ( 0 ) ) {
rank: 518
score: 98.62276458740234
patch: } if ( str . char CaMeL At ( 0 ) == true ) {
rank: 518
score: 98.57198079427083
patch: } if ( str . last CaMeL Index CaMeL Of ( $STRING$ ) == 0 ) {
rank: 518
score: 98.473876953125
patch: } if ( ( }
rank: 518
score: 98.40305001395089
patch: } } } . } }
rank: 518
score: 98.36818440755208
patch: } : return false ;
rank: 518
score: 98.20655168805804
patch: } else if } , }
rank: 518
score: 98.04924774169922
patch: } } / } / / /
rank: 518
score: 98.01041957310268
patch: } } if } ; {
rank: 519
score: 98.62263997395833
patch: return str . char CaMeL At ( 0 ) == null
rank: 519
score: 98.57143729073661
patch: } return to CaMeL String ( str . length ( ) ) ;
rank: 519
score: 98.40298897879464
patch: } } } if ( }
rank: 519
score: 98.36454264322917
patch: } : if ( str . char CaMeL
rank: 519
score: 98.33176556755515
patch: return ( str . char CaMeL At ( 0 ) == $STRING$ ) && false ;
rank: 519
score: 98.20466831752232
patch: } else { } null ;
rank: 519
score: 98.04865180121527
patch: } } } int } false } }
rank: 519
score: 98.01041085379464
patch: } } if } } public
rank: 520
score: 98.71143687855114
patch: } if ( System . out == null ) {
rank: 520
score: 98.57100423177083
patch: } String ch = str . char CaMeL At ( str . length ( ) ) ;
rank: 520
score: 98.47172037760417
patch: } else { return Boolean . TRUE ;
rank: 520
score: 98.4024658203125
patch: } else } } } * /
rank: 520
score: 98.36183166503906
patch: } catch ( Runtime CaMeL Exception else
rank: 520
score: 98.33158605238971
patch: return ( str . last CaMeL Index CaMeL Of ( $STRING$ ) == $NUMBER$ ) ;
rank: 520
score: 98.20463562011719
patch: } if ( false == false }
rank: 521
score: 98.40228271484375
patch: } * / } else if }
rank: 521
score: 98.36083221435547
patch: } / * $NUMBER$ . $NUMBER$ /
rank: 521
score: 98.33152669270834
patch: return ( str . char CaMeL At ( 0 ) ) == $STRING$ ;
rank: 521
score: 98.20431179470486
patch: } if ( * * * / }
rank: 521
score: 98.04825265066964
patch: } else { value ; }
rank: 521
score: 98.00830078125
patch: } } / / / }
rank: 522
score: 98.71116420200893
patch: } return null . char CaMeL At ( str . length ( )
rank: 522
score: 98.57042020909927
patch: } return to CaMeL String ( str . char CaMeL At ( 1 ) ) ;
rank: 522
score: 98.46873474121094
patch: } else { return super . }
rank: 522
score: 98.40198771158855
patch: } } super . }
rank: 522
score: 98.35994466145833
patch: } / * $NUMBER$ /
rank: 522
score: 98.33140869140625
patch: return str . char CaMeL At ( str . char CaMeL At ( 1 ) ) == $STRING$ ;
rank: 522
score: 98.20421685112848
patch: } else { if } else if }
rank: 522
score: 98.04791259765625
patch: } catch } $STRING$ {
rank: 522
score: 98.00710042317708
patch: } } } } max
rank: 523
score: 98.71102294921874
patch: } switch ( in . length ( ) )
rank: 523
score: 98.62142508370536
patch: } if ( log . get CaMeL Value ( ) == null )
rank: 523
score: 98.56989135742188
patch: } switch ( [ ] . length ) {
rank: 523
score: 98.4663798014323
patch: } } return } ;
rank: 523
score: 98.4015884399414
patch: } / * } } } )
rank: 523
score: 98.33089447021484
patch: } else switch ( str . length ( ) ) { case $NUMBER$ : {
rank: 523
score: 98.20406668526786
patch: } else / * / }
rank: 523
score: 98.04789515904018
patch: } catch null } } }
rank: 523
score: 98.00704956054688
patch: } } if } int
rank: 524
score: 98.71088518415179
patch: } return null == str . char CaMeL At ( 0 ) ;
rank: 524
score: 98.62133026123047
patch: } while ( str . char CaMeL At ( 0 ) == $STRING$ ) {
rank: 524
score: 98.56984049479166
patch: } switch ( str . length ( ) ) { case 0 : {
rank: 524
score: 98.40083143446181
patch: } if ( } } } ) }
rank: 524
score: 98.35410563151042
patch: } * * $NUMBER$ /
rank: 524
score: 98.33057803199405
patch: } return $STRING$ . equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( 0 ) ) ;
rank: 524
score: 98.20393371582031
patch: } / * * * } /
rank: 524
score: 98.04778374565973
patch: } } catch } } } } }
rank: 524
score: 98.00600179036458
patch: } } / ; /
rank: 525
score: 98.7107821377841
patch: } return Boolean . char CaMeL At ( str .
rank: 525
score: 98.40053304036458
patch: } * } * }
rank: 525
score: 98.35283745659723
patch: } || str . trim ( ) .
rank: 525
score: 98.33055355674342
patch: return ( str . char CaMeL At ( str . length ( ) ) == $STRING$ ) ;
rank: 525
score: 98.20393371582031
patch: } if ( false || } }
rank: 525
score: 98.04750279017857
patch: } catch } } } /
rank: 525
score: 98.0054931640625
patch: } } / } = }
rank: 526
score: 98.56861069623162
patch: } if ( str . length ( ) <= str . length ( ) ) {
rank: 526
score: 98.45789252387152
patch: } else if ( value == null )
rank: 526
score: 98.39939371744792
patch: } / * } } * * /
rank: 526
score: 98.3513916015625
patch: } * for (
rank: 526
score: 98.33052571614583
patch: return str . char CaMeL At ( 0 ) $NUMBER$ ;
rank: 526
score: 98.04749213324652
patch: } } } / } / } }
rank: 526
score: 98.00493512834821
patch: } } } } if /
rank: 527
score: 98.71055385044643
patch: switch ( String . char CaMeL At ( str . length ( )
rank: 527
score: 98.6201904296875
patch: } if ( log . value CaMeL Of ( $STRING$ ) == null )
rank: 527
score: 98.5681884765625
patch: } if ( str . to CaMeL Integer ( ) == $STRING$ ) {
rank: 527
score: 98.3992919921875
patch: } } } * * }
rank: 527
score: 98.35086059570312
patch: } + ch == null
rank: 527
score: 98.33043670654297
patch: } return str . char CaMeL At ( 1 ) == $STRING$ ; break ;
rank: 527
score: 98.04743957519531
patch: } catch } int } ) }
rank: 527
score: 98.00339181082589
patch: } } } } } $NUMBER$
rank: 528
score: 98.71014404296875
patch: } switch ( chars . length ( ) )
rank: 528
score: 98.61978585379464
patch: } if ( ! $STRING$ . to CaMeL String ( str ) )
rank: 528
score: 98.56796875
patch: } switch ( str . length ++ ) {
rank: 528
score: 98.3990987141927
patch: } if } } )
rank: 528
score: 98.33010864257812
patch: return str . char CaMeL At ( 1 ) != str . char CaMeL At ( $NUMBER$ ) ;
rank: 528
score: 98.20130411783855
patch: } else { false ;
rank: 528
score: 98.04739040798611
patch: } catch 0 } } } } }
rank: 528
score: 98.003173828125
patch: } } if } ; $STRING$
rank: 529
score: 98.7097880045573
patch: } str = str . char CaMeL At ( 0 )
rank: 529
score: 98.61969672309027
patch: } String ch = str . to CaMeL
rank: 529
score: 98.56783621651786
patch: } switch ( value ) {
rank: 529
score: 98.45520697699652
patch: } } finally { String CaMeL Buffer }
rank: 529
score: 98.39825439453125
patch: } * / * * / }
rank: 529
score: 98.34940592447917
patch: } catch ( $STRING$ ;
rank: 529
score: 98.3295166015625
patch: return ch . char CaMeL At ( 0 ) == str . char CaMeL At ( 1 ) ;
rank: 529
score: 98.20081244574652
patch: } else if ( 0 != 0 }
rank: 529
score: 98.04677036830357
patch: } * int * / /
rank: 529
score: 98.00314331054688
patch: } } if } Thread
rank: 530
score: 98.70970740685097
patch: } switch ( String . str . length ( ) ) {
rank: 530
score: 98.61931501116071
patch: } else switch ( str . char CaMeL At ( 1 ) )
rank: 530
score: 98.56698269314236
patch: } if ( str . last CaMeL Index CaMeL Of ( $STRING$ ) == 1 ) {
rank: 530
score: 98.45482720269098
patch: } else if ( } return false }
rank: 530
score: 98.39822823660714
patch: } } } , } )
rank: 530
score: 98.34873453776042
patch: } / - 1 .
rank: 530
score: 98.32933553059895
patch: return $STRING$ . to CaMeL String ( ) == false ;
rank: 530
score: 98.04665701729911
patch: } catch ( this . }
rank: 531
score: 98.7095458984375
patch: } switch ( format . length ( ) )
rank: 531
score: 98.61918422154018
patch: } switch ( ! value . char CaMeL At ( 0 ) )
rank: 531
score: 98.45395914713542
patch: } else { try {
rank: 531
score: 98.39767456054688
patch: } } } , } ) ;
rank: 531
score: 98.34865993923611
patch: } || str . length ( ) !=
rank: 531
score: 98.32921253551136
patch: } return ch . length ( ) == 0 ;
rank: 531
score: 98.19971466064453
patch: } else if } * false ;
rank: 531
score: 98.04655238560268
patch: } } } } } for
rank: 531
score: 97.99924723307292
patch: } } } } null
rank: 532
score: 98.70952292049633
patch: } return Boolean . to CaMeL Boolean ( str . char CaMeL At ( 0 )
rank: 532
score: 98.61918131510417
patch: } if ( ( ch == null )
rank: 532
score: 98.56658935546875
patch: } if ( str . length ( ) ( ) == ) {
rank: 532
score: 98.39752875434027
patch: } else if ( str != } }
rank: 532
score: 98.34839739118304
patch: } + ch ch 0 ;
rank: 532
score: 98.32866354549633
patch: return str . char CaMeL At ( 1 ) == $STRING$ ; } return false ;
rank: 532
score: 98.04635184151786
patch: / * } / / /
rank: 532
score: 97.99784342447917
patch: } } } } print
rank: 533
score: 98.70891974954044
patch: if ( str . to CaMeL String ( ) . length ( ) == 0 )
rank: 533
score: 98.61912184495192
patch: } switch ( str . length ( ) . length ( )
rank: 533
score: 98.56658576516544
patch: } switch ( str . length ( ) ) { case $NUMBER$ : return true ;
rank: 533
score: 98.45346069335938
patch: } } return } . } ;
rank: 533
score: 98.39682345920139
patch: } } } / * } * /
rank: 533
score: 98.34774344308036
patch: } / * case 1 :
rank: 533
score: 98.32845266241776
patch: } return str . to CaMeL Char CaMeL Array ( ) . length ( ) == $NUMBER$ ;
rank: 533
score: 98.04619489397321
patch: } } } - } }
rank: 533
score: 97.99375406901042
patch: } } } } public
rank: 534
score: 98.618896484375
patch: } switch ( str . length ( ) && false )
rank: 534
score: 98.56554497612848
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( 1 ) ) {
rank: 534
score: 98.45214165581598
patch: } if ( to CaMeL String ( }
rank: 534
score: 98.396484375
patch: } / * } else { }
rank: 534
score: 98.34590657552083
patch: } * * for (
rank: 534
score: 98.32765197753906
patch: return str . to CaMeL String ( ) . length ( ) != 0 ;
rank: 534
score: 98.19806780133929
patch: } else { } false ;
rank: 534
score: 97.9912618001302
patch: } } / / ++
rank: 535
score: 98.70868389423077
patch: } switch ( String . index CaMeL Of ( str ) )
rank: 535
score: 98.61863199869792
patch: } int str . char CaMeL At ( 1 ) ;
rank: 535
score: 98.56539713541666
patch: } return str . length ( ) . length ( ) == 1 ;
rank: 535
score: 98.396240234375
patch: } } else { return } }
rank: 535
score: 98.34340122767857
patch: } / * * for (
rank: 535
score: 98.32713407628677
patch: return ( str . last CaMeL Index CaMeL Of ( $STRING$ ) ) == 0 ;
rank: 535
score: 98.19779750279018
patch: } else { / / }
rank: 535
score: 98.04496256510417
patch: } catch } 1 {
rank: 535
score: 97.98888142903645
patch: } } / } *
rank: 536
score: 98.61809430803571
patch: } int str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 536
score: 98.56501770019531
patch: } switch ( str . char CaMeL At ( 0 ) ) return false ;
rank: 536
score: 98.3959732055664
patch: } } if ( } ) {
rank: 536
score: 98.34330749511719
patch: } : {
rank: 536
score: 98.32694868607955
patch: } if ( str == null ) return false ;
rank: 536
score: 98.1976806640625
patch: return true ; }
rank: 536
score: 98.04454549153645
patch: } * if ) {
rank: 537
score: 98.7083740234375
patch: } try { char . char CaMeL At ( 0 ) == $STRING$ ;
rank: 537
score: 98.61785888671875
patch: } String ch = str . to CaMeL String ( )
rank: 537
score: 98.5648193359375
patch: } if ( ! str . to CaMeL String ( ) . equals ( $STRING$ ) ) {
rank: 537
score: 98.44935438368056
patch: } } if ( to CaMeL Boolean }
rank: 537
score: 98.39506022135417
patch: } } while ( }
rank: 537
score: 98.34242078993056
patch: } * ( str == null ) ?
rank: 537
score: 98.32681129092262
patch: } return str . char CaMeL At ( 0 ) != str . char CaMeL At ( 1 ) ;
rank: 537
score: 98.04445190429688
patch: } catch true }
rank: 537
score: 97.98527018229167
patch: } } + } }
rank: 538
score: 98.70835658482143
patch: } return $STRING$ + str . char CaMeL At ( 1 ) ;
rank: 538
score: 98.61729520909927
patch: } if ( this . str . char CaMeL At ( 1 ) == $STRING$ )
rank: 538
score: 98.56440565321181
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( length ) ) ;
rank: 538
score: 98.44885932074652
patch: } else { return Boolean . FALSE ;
rank: 538
score: 98.34236363002232
patch: } return Boolean . TRUE ;
rank: 538
score: 98.32659553079044
patch: } return str . to CaMeL String ( ) . length ( ) != 1 ;
rank: 538
score: 98.19725206163194
patch: } else { / * false * /
rank: 538
score: 98.04435221354167
patch: } else } / } } } }
rank: 538
score: 97.9849344889323
patch: } } if } true
rank: 539
score: 98.70823317307692
patch: } this . str . char CaMeL At ( 0 ) ;
rank: 539
score: 98.6166522686298
patch: } switch ( str . length ( ) - 1 ) {
rank: 539
score: 98.39425998263889
patch: } else if ( } } * }
rank: 539
score: 98.34230041503906
patch: break $NUMBER$ ;
rank: 539
score: 98.32612609863281
patch: } return str . last CaMeL Index CaMeL Of ( 0 ) == 0 ;
rank: 539
score: 98.19715227399554
patch: } if } } true ;
rank: 539
score: 98.04391043526786
patch: } else { / } /
rank: 539
score: 97.984130859375
patch: } } / * ;
rank: 540
score: 98.70799842247597
patch: if ( str . char CaMeL At ( str . char CaMeL
rank: 540
score: 98.56419462316177
patch: } switch ( this . str . length ( ) ) { case $STRING$ : {
rank: 540
score: 98.33939615885417
patch: } catch ( Number CaMeL Format CaMeL Exception
rank: 540
score: 98.32581284466912
patch: return str . char CaMeL At ( 0 ) == $STRING$ ; } return true ;
rank: 540
score: 97.98225911458333
patch: } } * } ;
rank: 541
score: 98.70780436197917
patch: } return Boolean . to CaMeL String ( str ) ;
rank: 541
score: 98.61620154747597
patch: } if ( ! str . length ( ) != $NUMBER$ )
rank: 541
score: 98.44520568847656
patch: } else if } finally { }
rank: 541
score: 98.32572428385417
patch: return ch . to CaMeL String ( ) == $STRING$ ;
rank: 541
score: 98.19600423177083
patch: } if ( } ) { if }
rank: 541
score: 98.04351806640625
patch: } * if } / /
rank: 541
score: 97.97589111328125
patch: } } } } count
rank: 542
score: 98.56402994791667
patch: } if ( str . length ( ) == 0 ) return true ;
rank: 542
score: 98.3938496907552
patch: } } } . }
rank: 542
score: 98.33773803710938
patch: } catch ( Error out ) {
rank: 542
score: 98.32538200827206
patch: this . str = str . char CaMeL At ( 0 ) ; return true ;
rank: 542
score: 98.19599260602679
patch: } else { / } }
rank: 542
score: 97.97518920898438
patch: } } if } void
rank: 543
score: 98.70741780598958
patch: } return $STRING$ . to CaMeL String ( $STRING$ ) ;
rank: 543
score: 98.61559244791667
patch: } to CaMeL Boolean ( str . char CaMeL At ( 0 ) ==
rank: 543
score: 98.563916015625
patch: } return str . length ( ) . length ( ) == 0 ;
rank: 543
score: 98.33570861816406
patch: } * ( str == null )
rank: 543
score: 98.32503051757813
patch: return str . char CaMeL At ( 0 ) . char CaMeL At ( $NUMBER$ ) == $STRING$ ;
rank: 543
score: 98.19586859809027
patch: } else if } null } } }
rank: 543
score: 98.04329136439732
patch: } else { * } }
rank: 543
score: 97.97445678710938
patch: } } if } Runtime
rank: 544
score: 98.70725661057692
patch: } return Boolean . to CaMeL Boolean ( str . boolean CaMeL
rank: 544
score: 98.61543273925781
patch: } if ( str . char CaMeL At ( 1 ) == false ) {
rank: 544
score: 98.56385149274554
patch: } if ( str . index CaMeL Of ( $STRING$ ) ) {
rank: 544
score: 98.39248221261161
patch: } * / } else {
rank: 544
score: 98.3351338704427
patch: } catch ( Boolean {
rank: 544
score: 98.19545491536458
patch: } else { false * * * /
rank: 544
score: 97.97267659505208
patch: } } } } case
rank: 545
score: 98.70708356584821
patch: } if ( System . to CaMeL Boolean ( str ) ) {
rank: 545
score: 98.61520724826389
patch: } if ( ( str . to CaMeL
rank: 545
score: 98.44113159179688
patch: } else { return value . }
rank: 545
score: 98.39227294921875
patch: } * / } } / * /
rank: 545
score: 98.3240382982337
patch: return ! str . to CaMeL String ( ) . to CaMeL String ( ) . length ( ) == 0 ;
rank: 545
score: 98.19508192274306
patch: } else { if } / / }
rank: 545
score: 98.04319545200893
patch: } } if ) ; }
rank: 545
score: 97.9719746907552
patch: } } if } Integer
rank: 546
score: 98.61516974954044
patch: to CaMeL Boolean ( str . char CaMeL At ( $NUMBER$ ) == $STRING$ ) ;
rank: 546
score: 98.56332833426339
patch: } if ( str . char CaMeL At ( 0 ) == $STRING$
rank: 546
score: 98.4407958984375
patch: } } } } else {
rank: 546
score: 98.39163547092014
patch: } } } } , } ) ;
rank: 546
score: 98.32910919189453
patch: } * * $NUMBER$ . 1 /
rank: 546
score: 98.32391357421875
patch: return ! str . to CaMeL String ( ) . starts CaMeL With ( str ) ;
rank: 546
score: 98.19471571180556
patch: } if ( ! } . } }
rank: 546
score: 98.04286411830357
patch: } * if this . }
rank: 546
score: 97.96708170572917
patch: } } } } --
rank: 547
score: 98.70619111902573
patch: } String . char CaMeL At ( str . char CaMeL At ( 0 ) )
rank: 547
score: 98.56325954861111
patch: } switch ( str . char CaMeL At ( 0 ) . length ( ) ) {
rank: 547
score: 98.3915506998698
patch: } } . * }
rank: 547
score: 98.3285140991211
patch: } * $NUMBER$ . $NUMBER$ * /
rank: 547
score: 98.32380945542279
patch: } return $STRING$ . to CaMeL String ( ) . length ( ) == 1 ;
rank: 547
score: 98.04280853271484
patch: } * } 1 } } }
rank: 547
score: 97.9647928873698
patch: } } if } 0
rank: 548
score: 98.70595703125
patch: } this . str . char CaMeL At ( str . length ( )
rank: 548
score: 98.6148348721591
patch: } * switch ( str . length ( ) )
rank: 548
score: 98.56294080946181
patch: } switch ( str . index CaMeL Of ( $STRING$ ) ) { case $NUMBER$ : {
rank: 548
score: 98.39100477430556
patch: } } else { return false ; }
rank: 548
score: 98.32821994357639
patch: } return ( str . length ( )
rank: 548
score: 98.323583984375
patch: } return str . to CaMeL Lower CaMeL Case ( ) . starts CaMeL With ( $STRING$ ) ;
rank: 548
score: 98.19413757324219
patch: } / / * * * /
rank: 548
score: 98.04207611083984
patch: } } / int } } }
rank: 548
score: 97.96337280273437
patch: } } { }
rank: 549
score: 98.7056884765625
patch: } return null . char CaMeL At ( str . char CaMeL At ( 0 )
rank: 549
score: 98.61465274586396
patch: } if ( Boolean . ! str . char CaMeL At ( 0 ) ) {
rank: 549
score: 98.56204833984376
patch: } switch ( str . length 0 ) {
rank: 549
score: 98.43666076660156
patch: } catch ( Runtime CaMeL Exception }
rank: 549
score: 98.39095052083333
patch: } } / * * * * }
rank: 549
score: 98.32349650065105
patch: name = str . char CaMeL At ( $NUMBER$ ) ;
rank: 549
score: 97.96143595377605
patch: } } if } $NUMBER$
rank: 550
score: 98.61417388916016
patch: } to CaMeL Boolean ( str . char CaMeL At ( 1 ) ) ;
rank: 550
score: 98.56168619791667
patch: } case 1 : {
rank: 550
score: 98.43613978794643
patch: } else } return false ;
rank: 550
score: 98.39067077636719
patch: } } } * / } }
rank: 550
score: 98.3257344563802
patch: } / - $NUMBER$ .
rank: 550
score: 98.19359479631696
patch: } else { else if }
rank: 550
score: 98.04171752929688
patch: } / / * * / /
rank: 550
score: 97.96116129557292
patch: } } } } super
rank: 551
score: 98.70517985026042
patch: } switch ( ch . to CaMeL Boolean ( ) )
rank: 551
score: 98.61358642578125
patch: } else if ( str . char CaMeL At ( 0 ) == null )
rank: 551
score: 98.56161678538604
patch: } switch ( str . to CaMeL String ( ) . length ( ) ) {
rank: 551
score: 98.43313259548611
patch: } else to CaMeL Boolean ( str }
rank: 551
score: 98.39061821831598
patch: } } } } } ) * /
rank: 551
score: 98.32423618861607
patch: } * / return true ;
rank: 551
score: 98.323046875
patch: return ! str . to CaMeL String ( ) . char CaMeL At ( 0 ) == $STRING$ ;
rank: 551
score: 98.1934814453125
patch: } else if } } true ;
rank: 551
score: 98.04171316964286
patch: } } } } { }
rank: 551
score: 97.96082560221355
patch: } } / / +
rank: 552
score: 98.7046407063802
patch: } return Character . get CaMeL Boolean ( str ) ;
rank: 552
score: 98.61351725260417
patch: } if ( name . char CaMeL At ( 0 ) == $STRING$ )
rank: 552
score: 98.43191528320312
patch: } else set CaMeL Boolean ( }
rank: 552
score: 98.32239447699652
patch: } . char CaMeL At ( 0 )
rank: 552
score: 98.19325256347656
patch: } else if } for } ;
rank: 552
score: 98.04147338867188
patch: / else { } }
rank: 552
score: 97.95503743489583
patch: } } if } return
rank: 553
score: 98.6130615234375
patch: } int lower CaMeL Case = str . to CaMeL String ( ) ;
rank: 553
score: 98.38810221354167
patch: } } . equals ( $STRING$ ) ;
rank: 553
score: 98.3228759765625
patch: return str . char CaMeL At ( 1 ) == str . char CaMeL At ( 0 ) ;
rank: 553
score: 98.31814914279514
patch: } catch ( Boolean != null ) {
rank: 553
score: 98.19307708740234
patch: } else { ( null != }
rank: 553
score: 98.04121616908482
patch: } * / / } }
rank: 553
score: 97.95401000976562
patch: } } } } append
rank: 554
score: 98.70444161551339
patch: } return str . char CaMeL
rank: 554
score: 98.61296735491071
patch: } switch ( str . char CaMeL At ( $STRING$ ) ) {
rank: 554
score: 98.56149727957589
patch: } switch ( value . length ( ) ) { case $NUMBER$ :
rank: 554
score: 98.38789198133681
patch: } } . length ( ) > }
rank: 554
score: 98.32195281982422
patch: return str . to CaMeL String ( ) . length ( ) == $NUMBER$ ;
rank: 554
score: 98.31727430555556
patch: } + ch ch 1 = str ;
rank: 554
score: 98.19254557291667
patch: } else { if } } } }
rank: 554
score: 98.04095458984375
patch: } } } / / } }
rank: 554
score: 97.9535624186198
patch: } } / this /
rank: 555
score: 98.70440673828125
patch: } char ch . char CaMeL At ( 1 ) ;
rank: 555
score: 98.61283365885417
patch: to CaMeL Boolean ( str . char CaMeL At ( $STRING$ ) ) ;
rank: 555
score: 98.55997467041016
patch: } switch ( str . char CaMeL At ( 0 ) == $STRING$ ) {
rank: 555
score: 98.4283218383789
patch: } else if ( name . }
rank: 555
score: 98.32178412543402
patch: } return str . char CaMeL At ( 0 ) . length ( ) == $STRING$ ;
rank: 555
score: 98.1923828125
patch: } else * * }
rank: 555
score: 98.04087611607143
patch: } } / 1 ; }
rank: 555
score: 97.95029703776042
patch: } } } } in
rank: 556
score: 98.70412310431985
patch: } return $STRING$ . to CaMeL String ( ) . to CaMeL Object ( ) ;
rank: 556
score: 98.6126376065341
patch: } + str . char CaMeL At ( 1 )
rank: 556
score: 98.42498779296875
patch: } else if ( ( }
rank: 556
score: 98.38746473524306
patch: } / * * } * * }
rank: 556
score: 98.321044921875
patch: return str . last CaMeL Index CaMeL Of ( $STRING$ ) == 1 ; }
rank: 556
score: 98.29872131347656
patch: } catch ( - 1 ) {
rank: 556
score: 98.19133649553571
patch: } else if } if }
rank: 556
score: 98.04070281982422
patch: } * if } } } /
rank: 556
score: 97.9478047688802
patch: } } } / this
rank: 557
score: 98.70408002068015
patch: } if ( System . out . to CaMeL String ( ) == null ) {
rank: 557
score: 98.61256510416666
patch: } if ( str . char CaMeL At ( 0 ) <= $STRING$ )
rank: 557
score: 98.55967494419643
patch: } if ( str . length ( ) != - $NUMBER$ ) {
rank: 557
score: 98.32060241699219
patch: return ( str . last CaMeL Index CaMeL Of ( $STRING$ ) == 1 )
rank: 557
score: 98.29751586914062
patch: } * / try {
rank: 557
score: 98.19127546037946
patch: } else if } false ;
rank: 557
score: 98.04001290457589
patch: } * } } } /
rank: 557
score: 97.94755045572917
patch: } } / ; }
rank: 558
score: 98.61253255208334
patch: } if ( Double . to CaMeL String ( str ) == null )
rank: 558
score: 98.55965750558036
patch: } char 0 = str . char CaMeL At ( 1 ) ;
rank: 558
score: 98.42254638671875
patch: } } finally { if ( ! }
rank: 558
score: 98.38656180245536
patch: } return } } } ;
rank: 558
score: 98.32029322574013
patch: return str . to CaMeL String ( ) . char CaMeL At ( 1 ) == $STRING$ ;
rank: 558
score: 98.29736328125
patch: } * $STRING$ * /
rank: 558
score: 98.19121551513672
patch: } / * * / * /
rank: 558
score: 98.03942108154297
patch: } } } } / } /
rank: 559
score: 98.6119025735294
patch: } + str . length ( ) . char CaMeL At ( 0 ) + $STRING$
rank: 559
score: 98.55949183872768
patch: } if ( str . length ( ) ( ) == 0 )
rank: 559
score: 98.42194475446429
patch: } else if ( str ;
rank: 559
score: 98.38527425130208
patch: } } } return }
rank: 559
score: 98.31996663411458
patch: } return ! str . length ( ) == 0 ;
rank: 559
score: 98.29719761439732
patch: } + ch ch 1 ;
rank: 559
score: 98.19094848632812
patch: } if ( } , true )
rank: 559
score: 98.03850555419922
patch: } } / + } } }
rank: 559
score: 97.94455973307292
patch: } } } } return
rank: 560
score: 98.70359450120192
patch: } return $STRING$ + str . char CaMeL At ( 0 )
rank: 560
score: 98.55938042534723
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( 1 ) ) ?
rank: 560
score: 98.42183430989583
patch: } else } finally {
rank: 560
score: 98.38482666015625
patch: } else { return str . substring }
rank: 560
score: 98.31937081473214
patch: if ( str . char CaMeL At ( 0 ) == str . char CaMeL At ( 1 ) )
rank: 560
score: 98.2958272298177
patch: } / / * *
rank: 560
score: 98.19064331054688
patch: } if ( } , } ;
rank: 560
score: 98.03834025065105
patch: } * * else {
rank: 560
score: 97.9441426595052
patch: } } if } equals
rank: 561
score: 98.7034912109375
patch: } return str . char CaMeL At ( $NUMBER$ ) == null ;
rank: 561
score: 98.60973510742187
patch: } } switch ( str . length ( )
rank: 561
score: 98.55812701056985
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( 0 ) )
rank: 561
score: 98.42098659939236
patch: } else { String str = } ;
rank: 561
score: 98.38462320963542
patch: } if } * /
rank: 561
score: 98.3193591889881
patch: } return str . char CaMeL At ( 0 ) . char CaMeL At ( 0 ) == $STRING$ ;
rank: 561
score: 98.29307556152344
patch: } || value == null ) {
rank: 561
score: 98.19050428602431
patch: } else { if ( } ? }
rank: 561
score: 98.03765106201172
patch: } } } 0 } } }
rank: 562
score: 98.70346505301339
patch: } return str . char CaMeL At ( 1 ) == $NUMBER$ ;
rank: 562
score: 98.60970052083333
patch: } while ( str . length ( ) == 1 )
rank: 562
score: 98.55789620535714
patch: } long ch = str . char CaMeL At ( $NUMBER$ ) ;
rank: 562
score: 98.38460540771484
patch: } / * } * * }
rank: 562
score: 98.3192138671875
patch: return ( str . last CaMeL Index CaMeL Of ( str ) == 0 ) ;
rank: 562
score: 98.28905232747395
patch: } log ( ) .
rank: 562
score: 98.19039481026786
patch: } else { * / }
rank: 562
score: 98.03750610351562
patch: } } } true } } }
rank: 562
score: 97.93582153320312
patch: } } if if }
rank: 563
score: 98.7034553079044
patch: } if ( System . err . to CaMeL String ( ) == null ) {
rank: 563
score: 98.55756022135417
patch: } int char CaMeL At = str . char CaMeL At ( ) ;
rank: 563
score: 98.319091796875
patch: return ! str . to CaMeL Char CaMeL Array ( ) . starts CaMeL With ( $STRING$ ) ;
rank: 563
score: 98.2889892578125
patch: } / * $STRING$
rank: 563
score: 98.18992784288194
patch: } else if ( value . equals )
rank: 563
score: 98.03726196289062
patch: } * * if } } }
rank: 563
score: 97.93576049804688
patch: } } } / =
rank: 564
score: 98.70316808363971
patch: if ( str . length ( ) . to CaMeL String ( ) == null )
rank: 564
score: 98.60926818847656
patch: } if ( ! str . char CaMeL At ( 0 ) == $NUMBER$ )
rank: 564
score: 98.55743815104167
patch: } if ( ( str . length ( ) ) == $STRING$ ) {
rank: 564
score: 98.41244167751736
patch: throw new Runtime CaMeL Exception ( $STRING$ }
rank: 564
score: 98.38336181640625
patch: } String } } ) ;
rank: 564
score: 98.31874302455357
patch: } return str . char CaMeL At ( 0 ) . char CaMeL At ( 1 ) == $STRING$ ;
rank: 564
score: 98.28821563720703
patch: if ( str . length ( )
rank: 564
score: 98.189453125
patch: } if ( false ) { return }
rank: 564
score: 98.03716169084821
patch: } } / $STRING$ } /
rank: 565
score: 98.70286560058594
patch: } String to CaMeL Boolean = str . char CaMeL At ( 1 ) ;
rank: 565
score: 98.60909598214286
patch: } if ( str . index CaMeL Of ( $STRING$ ) == )
rank: 565
score: 98.55662536621094
patch: } if ( $STRING$ . char CaMeL At ( 1 ) == $STRING$ ) {
rank: 565
score: 98.41228569878473
patch: return Boolean . value CaMeL Of ( }
rank: 565
score: 98.38113064236111
patch: } } if ( str } } }
rank: 565
score: 98.31869845920139
patch: } return str . to CaMeL String ( ) . length ( ) == 0 ; }
rank: 565
score: 98.28749084472656
patch: } catch ( Illegal CaMeL Argument CaMeL
rank: 565
score: 98.03715515136719
patch: } } } / / } /
rank: 565
score: 97.9343973795573
patch: } } if this ;
rank: 566
score: 98.7028339092548
patch: } char . char CaMeL At ( 0 ) == $STRING$ ;
rank: 566
score: 98.60909271240234
patch: } if ( ( str . char CaMeL At ( 0 ) == null )
rank: 566
score: 98.55643463134766
patch: } if ( str . char CaMeL At ( 0 ) , $STRING$ ) {
rank: 566
score: 98.31817985983456
patch: return str . to CaMeL Char CaMeL Array ( ) . equals ( $STRING$ ) ;
rank: 566
score: 98.2846908569336
patch: } - ( str == null )
rank: 566
score: 98.18912760416667
patch: } else if ( 0 == $NUMBER$ }
rank: 566
score: 98.03702545166016
patch: } else / / / / /
rank: 566
score: 97.93407185872395
patch: } } } } Error
rank: 567
score: 98.7027587890625
patch: } String str . char CaMeL At ( 1 ) ;
rank: 567
score: 98.6085433959961
patch: } if ( ! str . char CaMeL At ( 0 ) . equals (
rank: 567
score: 98.55643136160714
patch: } switch ( 1 ) {
rank: 567
score: 98.40772247314453
patch: } else if ( this . }
rank: 567
score: 98.38056291852679
patch: } else { return $STRING$ }
rank: 567
score: 98.31803755326705
patch: return str . char CaMeL At ( 0 ) == str . char CaMeL At ( 1 ) & $STRING$ ;
rank: 567
score: 98.28319440569196
patch: } return $STRING$ == str ;
rank: 567
score: 98.18906656901042
patch: } else { * * * / }
rank: 567
score: 98.0369873046875
patch: } } catch } } }
rank: 567
score: 97.93173217773438
patch: } } return } /
rank: 568
score: 98.70212227957589
patch: if ( ch . to CaMeL String ( ) == null ) {
rank: 568
score: 98.60812377929688
patch: } if ( $STRING$ . to CaMeL String ( ) )
rank: 568
score: 98.5564208984375
patch: } switch ( ch . length ( ) ) { case $NUMBER$ : {
rank: 568
score: 98.38022189670139
patch: } if ( str . } } )
rank: 568
score: 98.31748046875
patch: } return str . last CaMeL Index CaMeL Of ( str . length ( ) ) == 1 ;
rank: 568
score: 98.27908325195312
patch: } : / *
rank: 568
score: 98.18878173828125
patch: } else if ( $NUMBER$ == }
rank: 568
score: 98.03683035714286
patch: } else if super . }
rank: 568
score: 97.93030802408855
patch: } } = } /
rank: 569
score: 98.70206392728366
patch: } equals CaMeL Ignore CaMeL Case ( str == null ) ;
rank: 569
score: 98.60791015625
patch: } : switch ( str . char CaMeL At ( 0 ) )
rank: 569
score: 98.55635579427083
patch: } if ( str . length ( ) $NUMBER$ ] == $STRING$ ) {
rank: 569
score: 98.38018120659723
patch: } / * * } } } }
rank: 569
score: 98.3173595610119
patch: } return str . to CaMeL String ( ) . trim ( ) . length ( ) == 0 ;
rank: 569
score: 98.27765502929688
patch: } + ch ;
rank: 569
score: 98.03678894042969
patch: } else } super . } }
rank: 569
score: 97.92979939778645
patch: } } = } ;
rank: 570
score: 98.70194498697917
patch: } String str = str . to CaMeL Lower CaMeL Case ( ) ;
rank: 570
score: 98.55632019042969
patch: } if ( str . length ( ) == str . length ( ) )
rank: 570
score: 98.38003540039062
patch: } } . equals ( $STRING$ }
rank: 570
score: 98.31670783547794
patch: return str . char CaMeL At ( 0 ) . trim ( ) == $STRING$ ;
rank: 570
score: 98.27701822916667
patch: } finally { * /
rank: 570
score: 98.18804168701172
patch: } else { / false * /
rank: 570
score: 98.03563581194196
patch: } } * / / /
rank: 570
score: 97.91552124023437
patch: } } / else
rank: 571
score: 98.70183771306819
patch: } if ( byte CaMeL Value == null ) {
rank: 571
score: 98.55613798253677
patch: } if ( $STRING$ . length ( ) == str . length ( ) ) {
rank: 571
score: 98.40458679199219
patch: } } if ( Character . }
rank: 571
score: 98.37894694010417
patch: } * } } ;
rank: 571
score: 98.31624348958333
patch: return str . char CaMeL At ( 0 ) == str . char CaMeL At ( 0 ) ; }
rank: 571
score: 98.27414957682292
patch: } * case 1 :
rank: 571
score: 98.18792046440973
patch: } else { / * / * ;
rank: 571
score: 98.03548177083333
patch: } else { } false
rank: 571
score: 97.88819580078125
patch: } } } this
rank: 572
score: 98.7015380859375
patch: switch ( String . to CaMeL String ( str . length ( ) ) )
rank: 572
score: 98.60774230957031
patch: } if ( ! str . char CaMeL At ( 1 ) == 0 )
rank: 572
score: 98.37886265345982
patch: } * } else if }
rank: 572
score: 98.31612820095486
patch: return str . char CaMeL At ( 0 ) . substring ( 1 ) == $STRING$ ;
rank: 572
score: 98.27278355189732
patch: } + ch = str ;
rank: 572
score: 98.18770054408482
patch: } else if ( $NUMBER$ }
rank: 572
score: 98.03483363560268
patch: } } } this . }
rank: 573
score: 98.70118713378906
patch: switch ( String . to CaMeL Boolean ( str . length ( ) ) )
rank: 573
score: 98.60741424560547
patch: } if ( str . index CaMeL Of ( $STRING$ ) == - 1 )
rank: 573
score: 98.55606515066964
patch: } switch ( str . starts CaMeL With ( $STRING$ ) ) {
rank: 573
score: 98.40455457899306
patch: } } else { String CaMeL Buffer }
rank: 573
score: 98.37870279947917
patch: } } . char CaMeL At ( }
rank: 573
score: 98.27194213867188
patch: } : try {
rank: 573
score: 98.18697102864583
patch: } else if } super . } }
rank: 573
score: 98.0343246459961
patch: } else if } } null ;
rank: 573
score: 97.87943115234376
patch: } } / this
rank: 574
score: 98.70102945963542
patch: switch ( Integer . to CaMeL String ( str ) )
rank: 574
score: 98.6071268717448
patch: } if ( ! to CaMeL Boolean ( str ) )
rank: 574
score: 98.55605643136161
patch: } if ( str . length ( ) ] == $STRING$ ) {
rank: 574
score: 98.37830352783203
patch: } } } ) . } }
rank: 574
score: 98.31571821732955
patch: return ( str . char CaMeL At ( 0 ) != str . char CaMeL At ( 1 ) ) ;
rank: 574
score: 98.27074178059895
patch: } } case $NUMBER$ :
rank: 574
score: 98.18627251519098
patch: } else { if } * - }
rank: 574
score: 97.87457275390625
patch: } } super
rank: 575
score: 98.7010009765625
patch: } try { String . str . char CaMeL At ( 0 ) ;
rank: 575
score: 98.5553690592448
patch: } if ( ) {
rank: 575
score: 98.37828717912946
patch: } } } . * }
rank: 575
score: 98.31474752987133
patch: } if ( str == null || str . length ( ) == 0 ) {
rank: 575
score: 98.27027384440105
patch: } / case 1 :
rank: 575
score: 98.18586948939732
patch: } else * * / }
rank: 575
score: 98.03354899088542
patch: } catch $NUMBER$ ; }
rank: 575
score: 97.82228393554688
patch: } } * *
rank: 576
score: 98.7009506225586
patch: } return System . out . to CaMeL String ( str ) == $STRING$ ;
rank: 576
score: 98.60697428385417
patch: } switch ( str . length ( ) && true )
rank: 576
score: 98.55530598958333
patch: } if ( str . length ( ) == 1 ) return true ;
rank: 576
score: 98.40365261501736
patch: } } } return Boolean . TRUE ;
rank: 576
score: 98.37772042410714
patch: } * } finally { }
rank: 576
score: 98.31448800223214
patch: } return str . char CaMeL At ( str . char CaMeL At ( 0 ) ) == $STRING$ ;
rank: 576
score: 98.26982116699219
patch: } catch ( Boolean . string CaMeL
rank: 576
score: 98.18513488769531
patch: } if ( 1 < } }
rank: 576
score: 98.03340657552083
patch: } else { } *
rank: 576
score: 97.81444702148437
patch: } } / System
rank: 577
score: 98.7008544921875
patch: } return new str . char CaMeL At ( 0 ) == null ;
rank: 577
score: 98.60677664620536
patch: } String ch = $STRING$ . char CaMeL At ( 1 ) ;
rank: 577
score: 98.55520450367646
patch: } switch ( str . char CaMeL At ( 0 ) ) { case $STRING$ ;
rank: 577
score: 98.31422183388158
patch: return ( $STRING$ . equals CaMeL Ignore CaMeL Case ( str . length ( ) ) ) ;
rank: 577
score: 98.26969146728516
patch: } * * * * * ?
rank: 577
score: 98.18498399522569
patch: } if ( } / * } }
rank: 577
score: 98.03311593191964
patch: } * int } / /
rank: 578
score: 98.70079456676136
patch: } return value . length ( ) == $NUMBER$ ;
rank: 578
score: 98.6066535500919
patch: to CaMeL Boolean ( str . char CaMeL At ( 1 ) == false ) ;
rank: 578
score: 98.55381266276042
patch: } set CaMeL Boolean ( str ) ;
rank: 578
score: 98.4019063313802
patch: } if } return }
rank: 578
score: 98.31390021829044
patch: } return str . last CaMeL Index CaMeL Of ( $STRING$ ) == 0 ; }
rank: 578
score: 98.26919991629464
patch: } || ch == $STRING$ ;
rank: 578
score: 98.18408203125
patch: } else if } / * * }
rank: 578
score: 98.03252301897321
patch: } / * / / }
rank: 578
score: 97.80435791015626
patch: } } } int
rank: 579
score: 98.60636393229167
patch: } if ( str . char CaMeL At ( 1 ) == ) {
rank: 579
score: 98.55341448102679
patch: } if ( ! str . str . length ( ) ) {
rank: 579
score: 98.37653266059027
patch: } String str = str . } }
rank: 579
score: 98.31389770507812
patch: return str . char CaMeL At ( 0 ) == $STRING$ . char CaMeL At ( 1 ) ;
rank: 579
score: 98.26805768694196
patch: } / * * * ?
rank: 579
score: 98.18404715401786
patch: } else . start ( }
rank: 579
score: 98.0323994954427
patch: } catch true { }
rank: 579
score: 97.80323791503906
patch: } } return
rank: 580
score: 98.69990234375
patch: } return new $STRING$ . char CaMeL At ( 0 ) == $STRING$ ;
rank: 580
score: 98.60611979166667
patch: } if ( str . == null )
rank: 580
score: 98.55316162109375
patch: } if ( this . str . char CaMeL At ( 1 ) == $STRING$ ) {
rank: 580
score: 98.39842393663194
patch: } } String CaMeL Buffer } ) ;
rank: 580
score: 98.37642124720982
patch: } } . * / }
rank: 580
score: 98.26625569661458
patch: } + ch 1 :
rank: 580
score: 98.183837890625
patch: } else if } / true ;
rank: 580
score: 98.03157261439732
patch: } catch 0 ; } }
rank: 580
score: 97.80322265625
patch: } if } /
rank: 581
score: 98.69962252103366
patch: } return $STRING$ . to CaMeL String ( ) == null ;
rank: 581
score: 98.60593959263393
patch: } switch ( String . to CaMeL String ( str ) ) {
rank: 581
score: 98.55298723493304
patch: } switch ( true ) {
rank: 581
score: 98.37481689453125
patch: } / } } } * /
rank: 581
score: 98.31300862630208
patch: return str . to CaMeL String ( ) . to CaMeL String ( ) == null ;
rank: 581
score: 98.26534271240234
patch: } / * System . err .
rank: 581
score: 98.18318006727431
patch: } if ( } ) { } }
rank: 581
score: 98.03156127929688
patch: } / else {
rank: 581
score: 97.8008804321289
patch: } else /
rank: 582
score: 98.69935021033653
patch: } try { } . to CaMeL Boolean ( $STRING$ ) ;
rank: 582
score: 98.60565948486328
patch: } if ( Boolean . ! str . char CaMeL At ( 1 ) )
rank: 582
score: 98.55291426809211
patch: } if ( str . to CaMeL String ( ) . length ( ) == $NUMBER$ ) {
rank: 582
score: 98.39783477783203
patch: } else if ( String . }
rank: 582
score: 98.3743667602539
patch: } } . * / } }
rank: 582
score: 98.31298828125
patch: } return str . last CaMeL Index CaMeL Of ( str ) == - 1 ;
rank: 582
score: 98.264404296875
patch: } - 1 * * /
rank: 582
score: 98.18307834201389
patch: } else { this . } catch }
rank: 582
score: 98.03105817522321
patch: } } } new } }
rank: 582
score: 97.7911865234375
patch: } } / -
rank: 583
score: 98.39686414930556
patch: } else if ( str instanceof Character )
rank: 583
score: 98.31281481291118
patch: return str . last CaMeL Index CaMeL Of ( str . length ( ) ) == 0 ;
rank: 583
score: 98.26433454241071
patch: } * * case $NUMBER$ :
rank: 583
score: 98.18265787760417
patch: } if ( } , } ) }
rank: 583
score: 98.03104400634766
patch: } } * int } / }
rank: 583
score: 97.766357421875
patch: } } else /
rank: 584
score: 98.6991436298077
patch: } switch ( String . char CaMeL At ( 0 ) )
rank: 584
score: 98.60545247395834
patch: } if ( str . char CaMeL At ( 0 ) != ) {
rank: 584
score: 98.55265085320724
patch: } if ( this . str . length ( ) == str . length ( ) ) {
rank: 584
score: 98.37290736607143
patch: } try { return } }
rank: 584
score: 98.31240665211396
patch: this . str = str . char CaMeL At ( 0 ) ; return false ;
rank: 584
score: 98.26422882080078
patch: } catch ( value 0 ) {
rank: 584
score: 98.18204498291016
patch: } else if } } false ;
rank: 584
score: 98.03071812220982
patch: } / / } } }
rank: 585
score: 98.69896697998047
patch: } if ( str . . char CaMeL At ( 1 ) == $STRING$ )
rank: 585
score: 98.60543387276786
patch: } switch ( System . get CaMeL Boolean ( $STRING$ ) ) {
rank: 585
score: 98.55254255022321
patch: } if ( str . length ( ) == $NUMBER$ ) { {
rank: 585
score: 98.39674886067708
patch: } if ( to CaMeL Boolean ) {
rank: 585
score: 98.3724365234375
patch: } / * } * / }
rank: 585
score: 98.31117466517857
patch: } return str . char CaMeL At ( str . char CaMeL At ( 1 ) ) == $STRING$ ;
rank: 585
score: 98.26409149169922
patch: } catch ( Error ch ) {
rank: 585
score: 98.18159993489583
patch: } if ( is CaMeL True ( }
rank: 585
score: 98.03012084960938
patch: } } int / } } }
rank: 585
score: 97.73714447021484
patch: } } try
rank: 586
score: 98.5525390625
patch: } if ( this . str . length ( ) == null ) {
rank: 586
score: 98.39535522460938
patch: } else if } catch ( }
rank: 586
score: 98.37205505371094
patch: } } . length ( ) }
rank: 586
score: 98.26381429036458
patch: } * - 1 /
rank: 586
score: 98.18137904575893
patch: } else { if true }
rank: 586
score: 98.02999877929688
patch: } * if 0 } } }
rank: 586
score: 97.73280639648438
patch: } } = }
rank: 587
score: 98.69862583705357
patch: switch ( str . length ( ) . length ( ) ) {
rank: 587
score: 98.55251736111111
patch: } if ( name == $STRING$ ) {
rank: 587
score: 98.39439392089844
patch: super . to CaMeL Boolean ( }
rank: 587
score: 98.37158203125
patch: } } } / * * }
rank: 587
score: 98.31059126420455
patch: if ( str . char CaMeL At ( 0 ) == str . char CaMeL At ( 1 ) ) {
rank: 587
score: 98.26239885602679
patch: case $NUMBER$ : return true ;
rank: 587
score: 98.02910614013672
patch: } * else
rank: 587
score: 97.73162841796875
patch: } } * ;
rank: 588
score: 98.69850667317708
patch: switch ( String . get CaMeL Boolean ( str ) )
rank: 588
score: 98.603955078125
patch: } if ( str . index CaMeL Of ( $STRING$ ) == ] )
rank: 588
score: 98.39283752441406
patch: if ( str . length ( }
rank: 588
score: 98.37104034423828
patch: } else { } else { }
rank: 588
score: 98.26214599609375
patch: } * / case $NUMBER$ :
rank: 588
score: 98.18132866753473
patch: } else { if ( * * }
rank: 588
score: 98.02886090959821
patch: } * if 0 } }
rank: 588
score: 97.71806335449219
patch: { } }
rank: 589
score: 98.69823346819196
patch: if ( ch . char CaMeL At ( 1 ) == $STRING$ )
rank: 589
score: 98.60369873046875
patch: } if ( str == null || ch == null )
rank: 589
score: 98.55215115017361
patch: } switch ( values . length ) {
rank: 589
score: 98.39253743489583
patch: } if ( boolean CaMeL Value ) {
rank: 589
score: 98.37058512369792
patch: } String } * /
rank: 589
score: 98.31033325195312
patch: return str == $STRING$ ;
rank: 589
score: 98.26212855747768
patch: } catch ( Boolean [ ]
rank: 589
score: 98.18077935112848
patch: } else if ( 1 instanceof null }
rank: 589
score: 98.028564453125
patch: } / * } / } }
rank: 589
score: 97.7169921875
patch: } } } System
rank: 590
score: 98.69795445033482
patch: if ( str . char CaMeL At ( 0 ) instanceof $STRING$ )
rank: 590
score: 98.603271484375
patch: } switch ( str . length ( ) & $STRING$ )
rank: 590
score: 98.55203067555146
patch: } if ( this . str . to CaMeL String ( ) == null ) {
rank: 590
score: 98.39090304904514
patch: } else { return short CaMeL Value }
rank: 590
score: 98.37031555175781
patch: } } else { return true }
rank: 590
score: 98.3101222826087
patch: return ( str . char CaMeL At ( 0 ) == $STRING$ || str . char CaMeL At ( 1 ) ==
rank: 590
score: 98.2572733561198
patch: } + str ) ;
rank: 590
score: 98.18072509765625
patch: } else { if ( true } }
rank: 590
score: 98.02803257533482
patch: } catch 0 } } }
rank: 590
score: 97.705029296875
patch: } if } ;
rank: 591
score: 98.5516128540039
patch: } int ch = this . str . char CaMeL At ( $NUMBER$ ) ;
rank: 591
score: 98.38985866970486
patch: } if ( ( str . length }
rank: 591
score: 98.37018694196429
patch: } else { return ( }
rank: 591
score: 98.31005859375
patch: return ( str . char CaMeL At ( $NUMBER$ ) == str . char CaMeL At ( $NUMBER$ ) ) ;
rank: 591
score: 98.25641632080078
patch: } catch ( value 1 ) {
rank: 591
score: 98.18047417534723
patch: } else if ( 1 == $NUMBER$ }
rank: 591
score: 98.02778843470982
patch: } / * / } /
rank: 591
score: 97.68003540039062
patch: } } / super
rank: 592
score: 98.69785563151042
patch: } if ( ch . length ( ) == $NUMBER$ )
rank: 592
score: 98.6029052734375
patch: } switch ( str . length ( ) > 0 )
rank: 592
score: 98.55126235064338
patch: } if ( str . length ( ) == 0 ) { return false ; }
rank: 592
score: 98.31001112196181
patch: return ( str . to CaMeL String ( ) . length ( ) != 0 ) ;
rank: 592
score: 98.25575764973958
patch: } * * * *
rank: 592
score: 98.18022155761719
patch: } if ( ! false } }
rank: 592
score: 98.02752685546875
patch: } * else { } }
rank: 592
score: 97.67779541015625
patch: } } if /
rank: 593
score: 98.60279846191406
patch: } if ( this . ! str . char CaMeL At ( 1 ) )
rank: 593
score: 98.36981964111328
patch: } } } } } . }
rank: 593
score: 98.3097282858456
patch: return str . char CaMeL At ( 1 ) . length ( ) == 0 ;
rank: 593
score: 98.25495910644531
patch: } || ch == null ) {
rank: 593
score: 98.18017578125
patch: } else if } return } }
rank: 593
score: 98.02752685546875
patch: } * } } / } }
rank: 593
score: 97.66964721679688
patch: } } System
rank: 594
score: 98.69722202845982
patch: } return Boolean . Character . to CaMeL Boolean ( str ) ;
rank: 594
score: 98.60160319010417
patch: } while ( str . char CaMeL At ( 0 ) != $STRING$ )
rank: 594
score: 98.36870574951172
patch: } } else { return false }
rank: 594
score: 98.30943603515625
patch: return ( str . to CaMeL String ( ) . to CaMeL String ( ) == null ) ;
rank: 594
score: 98.25386047363281
patch: } return str . length ( )
rank: 594
score: 98.17973497178819
patch: } * * * * * * }
rank: 594
score: 97.66844482421875
patch: } } } if
rank: 595
score: 98.6970443725586
patch: switch ( System . to CaMeL Boolean ( str . length ( ) ) )
rank: 595
score: 98.60098702566964
patch: } if ( ! value . to CaMeL String ( ) ) {
rank: 595
score: 98.54998016357422
patch: } switch ( this . str . char CaMeL At ( $NUMBER$ ) ) {
rank: 595
score: 98.36793518066406
patch: } if ( str . } else
rank: 595
score: 98.30882626488095
patch: return ( str . char CaMeL At ( 0 ) == str . char CaMeL At ( 1 ) ;
rank: 595
score: 98.25316510881696
patch: } + ch = $STRING$ ;
rank: 595
score: 98.02732849121094
patch: } else if } } } true
rank: 595
score: 97.66712036132813
patch: } } * this
rank: 596
score: 98.60091727120536
patch: } else { int str . char CaMeL At ( 0 ) ;
rank: 596
score: 98.54973958333333
patch: } return ! str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 596
score: 98.38818359375
patch: } if ( short CaMeL Value ( }
rank: 596
score: 98.36713518415179
patch: } * } catch ( }
rank: 596
score: 98.30882432725694
patch: } return ch . char CaMeL At ( str . length ( ) ) == $STRING$ ;
rank: 596
score: 98.25289916992188
patch: } / * * case $NUMBER$ :
rank: 597
score: 98.6969970703125
patch: } if ( System . set . to CaMeL Boolean ( str ) )
rank: 597
score: 98.60087076822917
patch: } + str . length ( ) . char CaMeL At ( 1 )
rank: 597
score: 98.5496597290039
patch: } if ( str . length ( ) == 0 ) { return false ;
rank: 597
score: 98.3670425415039
patch: } } if ( str } )
rank: 597
score: 98.3083431846217
patch: return ! str . starts CaMeL With ( str . char CaMeL At ( 0 ) ) ;
rank: 597
score: 98.25244140625
patch: } finally { return true ;
rank: 597
score: 98.178466796875
patch: } else if } * } /
rank: 597
score: 98.02665201822917
patch: } } } true ;
rank: 597
score: 97.65869750976563
patch: } } / {
rank: 598
score: 98.69590657552084
patch: } if ( String . value CaMeL Of ( str ) == null )
rank: 598
score: 98.60062255859376
patch: } if ( ! value . length ( )
rank: 598
score: 98.549658203125
patch: if ( str . length ( ) ) {
rank: 598
score: 98.3846664428711
patch: } else if } } finally {
rank: 598
score: 98.36696951729911
patch: } * / * } /
rank: 598
score: 98.30807834201389
patch: } if ( str != $STRING$ ) {
rank: 598
score: 98.25060163225446
patch: } * * / else {
rank: 598
score: 98.02589634486607
patch: } } } 0 } }
rank: 598
score: 97.65555419921876
patch: } } } {
rank: 599
score: 98.69559151785714
patch: } if ( this . str . length ( ) == $NUMBER$ )
rank: 599
score: 98.6006103515625
patch: } char . char CaMeL At ( 0 )
rank: 599
score: 98.549658203125
patch: } if ( str . get CaMeL Value ( ) == $STRING$ ) {
rank: 599
score: 98.38400607638889
patch: } else if ( boolean CaMeL Value )
rank: 599
score: 98.366943359375
patch: } / / * }
rank: 599
score: 98.30739427649456
patch: } return this . str . char CaMeL At ( 0 ) == str . char CaMeL At ( 1 ) ;
rank: 599
score: 98.25045013427734
patch: } + str [ 0 ] ;
rank: 599
score: 98.17792510986328
patch: } else { int value ; }
rank: 599
score: 98.0258560180664
patch: } else { catch } } }
rank: 599
score: 97.65423583984375
patch: } } { /
rank: 600
score: 98.6952616373698
patch: switch ( str . length ( ) . length ( )
rank: 600
score: 98.59995814732143
patch: } if ( ! str . starts CaMeL With ( $STRING$ ) )
rank: 600
score: 98.54911804199219
patch: } this . str = str . char CaMeL At ( 0 ) ; }
rank: 600
score: 98.366943359375
patch: } * } else { }
rank: 600
score: 98.30711780894886
patch: } if ( str == null ) return true ;
rank: 600
score: 98.17764282226562
patch: } else { / / * }
rank: 600
score: 97.63565063476562
patch: } } } print
rank: 601
score: 98.69509887695312
patch: } if ( String CaMeL Buffer . get CaMeL Boolean ( str ) ) {
rank: 601
score: 98.5987548828125
patch: } if ( $STRING$ . == str . char CaMeL At ( 0 ) ) {
rank: 601
score: 98.54898410373264
patch: } char ch = str . char CaMeL At ( str . length ( ) ) ;
rank: 601
score: 98.3668212890625
patch: } if ( } else
rank: 601
score: 98.30674913194444
patch: } return str . to CaMeL String ( ) . starts CaMeL With ( str ) ;
rank: 601
score: 98.2490946451823
patch: } * / for (
rank: 601
score: 98.1765848795573
patch: } if ( 0 }
rank: 601
score: 98.02569580078125
patch: } / / / } / /
rank: 601
score: 97.61699829101562
patch: } } * else
rank: 602
score: 98.59855382582721
patch: } if ( ! str . char CaMeL At ( 1 ) == null ) {
rank: 602
score: 98.54842122395833
patch: } to CaMeL String ( str ) ;
rank: 602
score: 98.3066073330966
patch: return ( $STRING$ . equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( 0 ) ) ) ;
rank: 602
score: 98.24706159319196
patch: match 0 ( str ) ;
rank: 602
score: 98.17603217230902
patch: } if ( false } } } }
rank: 602
score: 97.61642456054688
patch: else } }
rank: 603
score: 98.6947509765625
patch: } String . char CaMeL At ( str . length ( ) ) ;
rank: 603
score: 98.5978271484375
patch: } if ( Runtime . to CaMeL String ( str ) == null )
rank: 603
score: 98.54795435855263
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( length 0 ) ) ;
rank: 603
score: 98.3821792602539
patch: } else if ( format . }
rank: 603
score: 98.30642832880434
patch: return ( str . char CaMeL At ( 1 ) == $STRING$ || str . char CaMeL At ( $NUMBER$ ) ==
rank: 603
score: 98.24542236328125
patch: } catch ( value == null )
rank: 603
score: 98.17579481336806
patch: } } if } this . } }
rank: 603
score: 98.02559407552083
patch: } } } null ;
rank: 603
score: 97.60879516601562
patch: } } ; }
rank: 604
score: 98.69474283854167
patch: } switch ( str . to CaMeL Int ( ) )
rank: 604
score: 98.59780883789062
patch: } if ( ( str . char CaMeL At ( 0 ) == false )
rank: 604
score: 98.54752390008224
patch: } if ( this . ! str . char CaMeL At ( 0 ) == $STRING$ ) {
rank: 604
score: 98.36552429199219
patch: } } if ( } else {
rank: 604
score: 98.30632866753473
patch: return str . char CaMeL At ( 0 ) . starts CaMeL With ( $STRING$ ) ;
rank: 604
score: 98.24402618408203
patch: } catch ( & 1 ) {
rank: 604
score: 98.17520904541016
patch: } else { if } false }
rank: 604
score: 98.02538045247395
patch: } if } ) }
rank: 604
score: 97.602099609375
patch: } } / try
rank: 605
score: 98.69473031850961
patch: switch ( String . value CaMeL Of ( str ) ) {
rank: 605
score: 98.59765625
patch: } while ( str . to CaMeL String ( ) == null )
rank: 605
score: 98.5473991842831
patch: } if ( this . str . to CaMeL String ( ) == $STRING$ ) {
rank: 605
score: 98.3791732788086
patch: } } } , false ) ;
rank: 605
score: 98.36542510986328
patch: } } / * * } /
rank: 605
score: 98.30574544270833
patch: n = str . length ( ) ;
rank: 605
score: 98.24245779854911
patch: } : if ( str .
rank: 605
score: 98.17507934570312
patch: } else if } new } }
rank: 605
score: 98.0252685546875
patch: } catch ( } }
rank: 605
score: 97.59288330078125
patch: } } } -
rank: 606
score: 98.69448617788461
patch: if ( str . to CaMeL String ( ) == $STRING$ )
rank: 606
score: 98.59765625
patch: } if ( ! value . char CaMeL At ( 1 ) == $STRING$ )
rank: 606
score: 98.54617309570312
patch: } if ( str . index CaMeL Of ( $STRING$ ) > 1 ) {
rank: 606
score: 98.36485072544643
patch: } else } } * /
rank: 606
score: 98.3054263466283
patch: } return this . str . to CaMeL String ( ) . length ( ) == 1 ;
rank: 606
score: 98.24043782552083
patch: } catch ( FALSE ;
rank: 606
score: 98.1748046875
patch: } if ( key != null }
rank: 606
score: 97.57764892578125
patch: } } + }
rank: 607
score: 98.69417572021484
patch: } return System . err . to CaMeL Boolean ( str . length ( )
rank: 607
score: 98.54563395182292
patch: } str . char CaMeL At ( 0 ) . char CaMeL At ( $NUMBER$ ) ;
rank: 607
score: 98.36159842354911
patch: } * } if ( }
rank: 607
score: 98.30538940429688
patch: return str . char CaMeL At ( 0 ) == $STRING$ . char CaMeL At ( 0 ) ;
rank: 607
score: 98.17342800564236
patch: } / * * * * } }
rank: 607
score: 98.02472795758929
patch: } } } true } }
rank: 608
score: 98.59721105238971
patch: } if ( ! str . char CaMeL At ( 0 ) == false ) {
rank: 608
score: 98.5455551147461
patch: } switch ( str . char CaMeL At ( 0 ) ) return true ;
rank: 608
score: 98.36126708984375
patch: } } && ( }
rank: 608
score: 98.30495198567708
patch: } return str . to CaMeL Char CaMeL Array ( ) . equals ( str ) ;
rank: 608
score: 98.17305501302083
patch: } else if } ( } } }
rank: 608
score: 97.56907958984375
patch: } } } super
rank: 609
score: 98.69374436598558
patch: } if ( Boolean . get CaMeL Boolean ( str ) )
rank: 609
score: 98.54510176809211
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( 1 ) ) ; }
rank: 609
score: 98.37480163574219
patch: } } } finally { try {
rank: 609
score: 98.36100006103516
patch: } } if ( str } }
rank: 609
score: 98.2388916015625
patch: } + ch 0 = $STRING$ ;
rank: 609
score: 98.17217145647321
patch: } / * * * ;
rank: 609
score: 98.02444458007812
patch: } * if ) }
rank: 609
score: 97.56494140625
patch: } } } Exception
rank: 610
score: 98.69364711216518
patch: if ( str . char CaMeL At ( 1 ) == $NUMBER$ )
rank: 610
score: 98.5970458984375
patch: } if ( ! str . char CaMeL At ( 1 ) == )
rank: 610
score: 98.54385536595395
patch: } switch ( this . str . char CaMeL At ( 0 ) ) { case $STRING$ :
rank: 610
score: 98.36066545758929
patch: / * } * / }
rank: 610
score: 98.304541015625
patch: return ( str . char CaMeL At ( 0 ) == $STRING$ || str . char CaMeL At (
rank: 610
score: 98.23879568917411
patch: } / * * * *
rank: 610
score: 98.17214965820312
patch: } else * / * * /
rank: 610
score: 98.02406819661458
patch: } } / $STRING$ /
rank: 610
score: 97.54678344726562
patch: } } String
rank: 611
score: 98.69343872070313
patch: } . if ( str == null ) {
rank: 611
score: 98.5435791015625
patch: } else if ( str . char CaMeL At ( 1 ) == $STRING$ ) {
rank: 611
score: 98.37276882595486
patch: } else if ( $STRING$ . == }
rank: 611
score: 98.36062622070312
patch: } else { } } } else
rank: 611
score: 98.30450994318181
patch: return ! str . to CaMeL String ( ) ;
rank: 611
score: 98.23727416992188
patch: } * return true ;
rank: 611
score: 98.02381134033203
patch: } } int } / } /
rank: 611
score: 97.54081726074219
patch: } } final
rank: 612
score: 98.69341571514423
patch: } . if ( str . length ( ) == $NUMBER$ )
rank: 612
score: 98.59538051060268
patch: } switch ( str . length ( ) || ch == $STRING$ )
rank: 612
score: 98.54345703125
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( 0 ) ) ?
rank: 612
score: 98.36048889160156
patch: } if ( } } * }
rank: 612
score: 98.3042724609375
patch: return str . char CaMeL At ( 0 ) == $STRING$ || str [ 1 ] == $STRING$ ;
rank: 612
score: 98.23615264892578
patch: } * $STRING$
rank: 612
score: 98.17182074652777
patch: } else if ( } , } )
rank: 612
score: 98.02294049944196
patch: } } / $STRING$ } }
rank: 612
score: 97.52207946777344
patch: } } public
rank: 613
score: 98.69300255408653
patch: } if ( Character . get CaMeL Boolean ( $STRING$ ) )
rank: 613
score: 98.59508405412946
patch: } if ( ! value . char CaMeL At ( 0 ) ==
rank: 613
score: 98.543115234375
patch: } if ( ( str . length ( ) == 0 ) ) {
rank: 613
score: 98.36006382533482
patch: } / } * * }
rank: 613
score: 98.30396118164063
patch: return str . char CaMeL At ( $NUMBER$ ) . char CaMeL At ( 1 ) == $STRING$ ;
rank: 613
score: 98.23612976074219
patch: } catch ( Boolean str ) {
rank: 613
score: 98.17172580295139
patch: } * * * * * / }
rank: 613
score: 97.5211181640625
patch: } } } String
rank: 614
score: 98.59508405412946
patch: } if ( System . get CaMeL Boolean ( str ) ) {
rank: 614
score: 98.54267321134868
patch: } if ( ! str . str . char CaMeL At ( 0 ) == $STRING$ ) {
rank: 614
score: 98.30360630580357
patch: } return str . index CaMeL Of ( str . char CaMeL At ( 0 ) ) == $STRING$ ;
rank: 614
score: 98.23606872558594
patch: } + ch . length ( )
rank: 614
score: 98.17094590928819
patch: } else { / false * * /
rank: 614
score: 98.022705078125
patch: } } } null }
rank: 614
score: 97.51961669921874
patch: } } * System
rank: 615
score: 98.6925557454427
patch: } return ! str . to CaMeL Boolean ( ) ;
rank: 615
score: 98.59505208333333
patch: } if ( $STRING$ . to CaMeL Object ( str ) == null )
rank: 615
score: 98.54228515625
patch: } if ( ( str . length ( ) ) == 0 ) {
rank: 615
score: 98.36910247802734
patch: } else if ( } catch }
rank: 615
score: 98.3587646484375
patch: } * } else if ( }
rank: 615
score: 98.3033935546875
patch: return str . char CaMeL At ( 0 ) == $STRING$ && str [ 1 ] == $STRING$ ;
rank: 615
score: 98.23565673828125
patch: } catch ( double ch ) {
rank: 615
score: 98.17081027560764
patch: } else if ( key == null }
rank: 615
score: 98.02267456054688
patch: } } } } { } }
rank: 616
score: 98.6925048828125
patch: } if ( System . err == null )
rank: 616
score: 98.59443010602679
patch: } switch ( System . to CaMeL String ( str ) ) {
rank: 616
score: 98.5420913696289
patch: } if ( str . index CaMeL Of ( $STRING$ ) > 0 ) {
rank: 616
score: 98.35734340122768
patch: } else { throw new }
rank: 616
score: 98.3031494140625
patch: return str . char CaMeL At ( 0 ) . index CaMeL Of ( $STRING$ ) == $STRING$ ;
rank: 616
score: 98.23555210658482
patch: } + ch 1 ++ ;
rank: 616
score: 98.17036437988281
patch: } else if ( 1 != }
rank: 616
score: 98.0223388671875
patch: } } / $STRING$ * /
rank: 616
score: 97.51817321777344
patch: } } =
rank: 617
score: 98.69248744419643
patch: } return $STRING$ . to CaMeL Boolean ( str . length ( )
rank: 617
score: 98.59442545572917
patch: } if ( str . char CaMeL At ( 1 ) > $STRING$ )
rank: 617
score: 98.54156853170956
patch: } if ( str . length ( ) . length ( ) == $NUMBER$ ) {
rank: 617
score: 98.3572769165039
patch: } } } ) } ) ;
rank: 617
score: 98.3025433084239
patch: } return str . to CaMeL String ( ) . to CaMeL String ( ) . length ( ) == 1 ;
rank: 617
score: 98.23341369628906
patch: } && value == null ) {
rank: 618
score: 98.69181823730469
patch: } if ( ch == $STRING$ )
rank: 618
score: 98.59438189338235
patch: } int lower CaMeL Case . if ( str . length ( ) == 1 )
rank: 618
score: 98.54131673177083
patch: } else switch ( str . char CaMeL At ( 1 ) ) {
rank: 618
score: 98.364501953125
patch: } else { set CaMeL Boolean ( }
rank: 618
score: 98.3567886352539
patch: } else if } else if }
rank: 618
score: 98.30240885416667
patch: return ! str . char CaMeL At ( 0 ) == str . char CaMeL At ( 0 ) ;
rank: 618
score: 98.23046264648437
patch: } / finally {
rank: 618
score: 98.16911315917969
patch: } else { / * = }
rank: 618
score: 98.02074432373047
patch: } else } this . } /
rank: 618
score: 97.508544921875
patch: } } +
rank: 619
score: 98.36390904017857
patch: if ( } else { }
rank: 619
score: 98.35669708251953
patch: } * / } } } ;
rank: 619
score: 98.30205743963069
patch: } else { if ( str == null ) {
rank: 619
score: 98.23008510044643
patch: return ( str == null )
rank: 619
score: 98.16899956597223
patch: } if ( false ) ; if }
rank: 619
score: 98.02055140904018
patch: } } } } false }
rank: 619
score: 97.49530029296875
patch: } } boolean
rank: 620
score: 98.54038899739584
patch: } str . char CaMeL At ( 0 ) . length ( ) ;
rank: 620
score: 98.36381700303819
patch: } else if ( name == null )
rank: 620
score: 98.30205335115132
patch: } return $STRING$ . to CaMeL Char CaMeL Array ( ) . length ( ) == 0 ;
rank: 620
score: 98.22843715122768
patch: : || ch == $STRING$ ;
rank: 620
score: 98.16892496744792
patch: } else { if } return false ;
rank: 620
score: 97.48546142578125
patch: } } } +
rank: 621
score: 98.69065504807692
patch: } if ( str . char CaMeL At ( 1 ) .
rank: 621
score: 98.59302520751953
patch: } if ( ! this . str . char CaMeL At ( 0 ) )
rank: 621
score: 98.54008214613971
patch: } switch ( str . to CaMeL String ( ) ) { case $STRING$ : {
rank: 621
score: 98.36322021484375
patch: } else { return Boolean . value }
rank: 621
score: 98.3018215013587
patch: return ( str . char CaMeL At ( 0 ) == $STRING$ || str . char CaMeL At ( $NUMBER$ ) ==
rank: 621
score: 98.22635904947917
patch: } - 1 / *
rank: 621
score: 98.16795518663194
patch: } if ( false ) . } }
rank: 621
score: 97.48157501220703
patch: } } false
rank: 622
score: 98.59254557291666
patch: } if ( $STRING$ . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 622
score: 98.54003228081598
patch: } return str . length ( ) . char CaMeL At ( 1 ) == $STRING$ ;
rank: 622
score: 98.36250135633681
patch: } else if ( } finally { }
rank: 622
score: 98.35464913504464
patch: } } System . } )
rank: 622
score: 98.30167236328126
patch: return ( str . to CaMeL Char CaMeL Array ( ) . length ( ) == 0 ) ;
rank: 622
score: 98.22402954101562
patch: } - 1 else {
rank: 622
score: 98.1672871907552
patch: } else if true ;
rank: 622
score: 98.01945495605469
patch: } * int } / } }
rank: 622
score: 97.47626953125
patch: } } } set
rank: 623
score: 98.68997192382812
patch: } if ( System . set . to CaMeL Boolean ( str ) ) {
rank: 623
score: 98.59249674479166
patch: } if ( System . get CaMeL Long ( $STRING$ ) == null )
rank: 623
score: 98.53983561197917
patch: } if ( ! str . to CaMeL Object ( ) . length ( ) ) {
rank: 623
score: 98.35354614257812
patch: } * / if ( } }
rank: 623
score: 98.30091441761364
patch: } return str . to CaMeL Lower CaMeL Case ( ) . char CaMeL At ( 1 ) == $STRING$ ;
rank: 623
score: 98.16653442382812
patch: } if ( } } false }
rank: 623
score: 98.0189208984375
patch: } catch false || }
rank: 623
score: 97.46905517578125
patch: } } } max
rank: 624
score: 98.59239959716797
patch: } if ( str . char CaMeL At ( 1 ) == 0 ) {
rank: 624
score: 98.53960217927632
patch: } if ( ! this . str . char CaMeL At ( 0 ) == $STRING$ ) {
rank: 624
score: 98.36172146267361
patch: } else if ( } if ( }
rank: 624
score: 98.35298919677734
patch: } } . } } } }
rank: 624
score: 98.3007748252467
patch: return ! str . to CaMeL String ( ) . to CaMeL String ( ) == null ;
rank: 624
score: 98.22203717912946
patch: } + ch ( ) ;
rank: 624
score: 98.16637311662946
patch: } else if ( false )
rank: 624
score: 98.01856340680804
patch: } catch ( } } }
rank: 625
score: 98.59210611979167
patch: } switch ( str . length ( ) ? $STRING$ : $STRING$ ) {
rank: 625
score: 98.53929850260417
patch: } if ( str . to CaMeL String ( ) != null ) {
rank: 625
score: 98.36135864257812
patch: } else if ( System . }
rank: 625
score: 98.3518778483073
patch: } * / if }
rank: 625
score: 98.30005992542614
patch: return str . starts CaMeL With ( str ) ;
rank: 625
score: 98.22081909179687
patch: } * $STRING$ .
rank: 625
score: 98.16634792751736
patch: } else { if } ( false }
rank: 625
score: 98.01856231689453
patch: } / / } / / /
rank: 625
score: 97.46268920898437
patch: { } } }
rank: 626
score: 98.68893229166666
patch: if ( str . . char CaMeL At ( 1 ) == $STRING$ )
rank: 626
score: 98.539013671875
patch: } if ( str . str . length ( ) == 0 ) {
rank: 626
score: 98.36095428466797
patch: } else if ( } . }
rank: 626
score: 98.35165405273438
patch: } * / if ( str }
rank: 626
score: 98.29942737926136
patch: return ! str . to CaMeL String ( ) . to CaMeL String ( ) . equals ( $STRING$ ) ;
rank: 626
score: 98.2197494506836
patch: } * * * * $NUMBER$ /
rank: 626
score: 98.16621398925781
patch: } if ( ! < $NUMBER$ }
rank: 626
score: 98.01805623372395
patch: } } } } true
rank: 626
score: 97.45027160644531
patch: return } /
rank: 627
score: 98.6884765625
patch: } return System . out . char CaMeL At ( 1 ) == $STRING$ ;
rank: 627
score: 98.5914306640625
patch: } if ( ( ch . to CaMeL String ( ) == null )
rank: 627
score: 98.53893324908088
patch: } if ( ! str . index CaMeL Of ( $STRING$ ) == 1 ) {
rank: 627
score: 98.36076524522569
patch: } } } . value = $STRING$ ;
rank: 627
score: 98.35125732421875
patch: } else { for ( int }
rank: 627
score: 98.2988811990489
patch: return ( str . char CaMeL At ( 0 ) == str . char CaMeL At ( 1 ) ) ; }
rank: 627
score: 98.16533660888672
patch: } else { if false } else
rank: 627
score: 98.0177001953125
patch: } } / / / } /
rank: 627
score: 97.44736328125
patch: } } } return
rank: 628
score: 98.68827311197917
patch: if ( str . char CaMeL At ( 1 ) != $STRING$ ) {
rank: 628
score: 98.59138997395833
patch: } if ( ( str . char CaMeL At ( 0 ) == )
rank: 628
score: 98.53883870442708
patch: } String str = str . char CaMeL At ( str . length ( ) ) ;
rank: 628
score: 98.3599853515625
patch: } else if ( str instanceof Character }
rank: 628
score: 98.35113525390625
patch: } if ( str instanceof }
rank: 628
score: 98.29868774414062
patch: return str . char CaMeL At ( 0 ) != str . char CaMeL At ( $NUMBER$ ) ;
rank: 628
score: 98.16533660888672
patch: } else { } if } }
rank: 628
score: 98.01713562011719
patch: } / } 1 } } }
rank: 628
score: 97.44725036621094
patch: } } print
rank: 629
score: 98.59134114583334
patch: } if ( str . char CaMeL At ( 0 ) != $NUMBER$ )
rank: 629
score: 98.53874768708882
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( length 1 ) ) ;
rank: 629
score: 98.35894775390625
patch: } else if } if ( }
rank: 629
score: 98.34912109375
patch: } * } } * / }
rank: 629
score: 98.29865112304688
patch: return str . char CaMeL At ( $NUMBER$ ) . char CaMeL At ( $NUMBER$ ) == $STRING$ ;
rank: 629
score: 98.21683175223214
patch: case $NUMBER$ : return false ;
rank: 629
score: 98.01698303222656
patch: } else { } / } /
rank: 629
score: 97.44554443359375
patch: } } } out
rank: 630
score: 98.59127807617188
patch: } if ( str . char CaMeL At ( 1 ) == - $NUMBER$ )
rank: 630
score: 98.35797797309027
patch: } } to CaMeL Boolean ( str }
rank: 630
score: 98.34896850585938
patch: } } } } * / }
rank: 630
score: 98.29816545758929
patch: return str . char CaMeL At ( 1 ) == str . char CaMeL At ( $NUMBER$ ) ; }
rank: 630
score: 98.21548461914062
patch: debug ( str ) ;
rank: 630
score: 98.16469319661458
patch: } else if ( null instanceof null }
rank: 630
score: 98.01663208007812
patch: } else / / / / }
rank: 630
score: 97.44530029296875
patch: } } } try
rank: 631
score: 98.68772670200893
patch: } return str == null . char CaMeL At ( 1 ) ;
rank: 631
score: 98.59098052978516
patch: } if ( str . char CaMeL At ( 1 ) == - 0 )
rank: 631
score: 98.53837076822917
patch: } if ( ( str . length ( ) == 1 ) ) {
rank: 631
score: 98.35764857700893
patch: } else if ( $STRING$ }
rank: 631
score: 98.34852818080357
patch: } * } } } ;
rank: 631
score: 98.29810180664063
patch: return str . char CaMeL At ( $NUMBER$ ) == str . char CaMeL At ( 1 ) ;
rank: 631
score: 98.21331024169922
patch: } catch ( $STRING$ || str ;
rank: 631
score: 98.16459655761719
patch: } else if } null * /
rank: 631
score: 98.01659138997395
patch: } * } ) }
rank: 631
score: 97.44364013671876
patch: } } / false
rank: 632
score: 98.68743896484375
patch: } return this . str . char CaMeL At ( 0 ) == null ;
rank: 632
score: 98.5906120749081
patch: } switch ( str . length ( ) . char CaMeL At ( 1 ) )
rank: 632
score: 98.5383056640625
patch: } switch ( value . length ( ) ) { case $NUMBER$ : {
rank: 632
score: 98.35755750868056
patch: } if ( ! to CaMeL Boolean )
rank: 632
score: 98.34832763671875
patch: } } if ( str != }
rank: 632
score: 98.29789903428819
patch: } return str . char CaMeL At ( 0 ) == str . length ( ) ;
rank: 632
score: 98.21221923828125
patch: } catch ( byte ch ) {
rank: 632
score: 98.16398790147569
patch: } else { if } / 0 ;
rank: 632
score: 98.01657104492188
patch: } } int * /
rank: 632
score: 97.44119873046876
patch: } } } public
rank: 633
score: 98.59021714154412
patch: } if ( this . str . char CaMeL At ( 0 ) != $STRING$ )
rank: 633
score: 98.53824055989584
patch: } switch ( str . str . char CaMeL At ( 1 ) )
rank: 633
score: 98.35744900173611
patch: } else if ( str . compare }
rank: 633
score: 98.34825897216797
patch: } else { String } } }
rank: 633
score: 98.29766845703125
patch: return str . char CaMeL At ( 1 ) != str . char CaMeL At ( 1 ) ;
rank: 633
score: 98.16334838867188
patch: } else break }
rank: 633
score: 98.01657104492188
patch: } * * * / / }
rank: 633
score: 97.44089965820312
patch: } } / if
rank: 634
score: 98.68677629743304
patch: to CaMeL Boolean ( str . char CaMeL At ( 0 ) .
rank: 634
score: 98.59017944335938
patch: } if ( str . char CaMeL At ( 0 ) != - 1 )
rank: 634
score: 98.53640907689145
patch: } if ( $STRING$ . to CaMeL String ( ) . length ( ) == 1 ) {
rank: 634
score: 98.34769439697266
patch: } } } else if ( }
rank: 634
score: 98.29648951480263
patch: return str . char CaMeL At ( str . length ( ) - 1 ) == $STRING$ ;
rank: 634
score: 98.20943450927734
patch: } catch ( char str ) {
rank: 634
score: 98.16300746372768
patch: } if ( } ? }
rank: 634
score: 98.0163803100586
patch: } } / $STRING$ / / }
rank: 634
score: 97.43529052734375
patch: } } / int
rank: 635
score: 98.68677571614583
patch: } return this . str . char CaMeL At ( str . char CaMeL
rank: 635
score: 98.58990478515625
patch: } } if ( str . char CaMeL At ( 0 ) == $STRING$ )
rank: 635
score: 98.5362548828125
patch: } switch ( str . char CaMeL At ( 1 ) == $STRING$ ) {
rank: 635
score: 98.35561116536458
patch: } return $STRING$ . equals ( str }
rank: 635
score: 98.34761047363281
patch: } } } ) ; } }
rank: 635
score: 98.29609510633681
patch: } return str . char CaMeL At ( 0 ) == $STRING$ && str == $STRING$ ;
rank: 635
score: 98.20891571044922
patch: } catch ( Exception err ) {
rank: 635
score: 98.16281467013889
patch: } else if ( 1 != null }
rank: 635
score: 98.01637776692708
patch: } while } ) ;
rank: 635
score: 97.4207763671875
patch: } else *
rank: 636
score: 98.58975219726562
patch: } if ( str . char CaMeL At ( 0 ) == $NUMBER$ ) {
rank: 636
score: 98.53580474853516
patch: } if ( str . length ( ) boolean CaMeL Value ( ) ) {
rank: 636
score: 98.34759521484375
patch: } for ( } } )
rank: 636
score: 98.29547119140625
patch: return str . char CaMeL At ( 1 ) . substring ( 1 ) == $STRING$ ;
rank: 636
score: 98.20650227864583
patch: } . return true ;
rank: 636
score: 98.16266547309027
patch: } else { if false } else ;
rank: 636
score: 98.01597086588542
patch: } catch / 1 }
rank: 636
score: 97.41864624023438
patch: } if } *
rank: 637
score: 98.5356201171875
patch: } switch ( str . length ( ) && ch == $STRING$ ) {
rank: 637
score: 98.35471888950893
patch: } else } } finally {
rank: 637
score: 98.34739176432292
patch: } while ( true )
rank: 637
score: 98.29531028053977
patch: } ( str . length ( ) == 0 )
rank: 637
score: 98.20629119873047
patch: } catch ( & $NUMBER$ ) {
rank: 637
score: 98.16176350911458
patch: } else / / * * * }
rank: 637
score: 98.015869140625
patch: } } } ) { }
rank: 637
score: 97.41802368164062
patch: } } / Exception
rank: 638
score: 98.68522135416667
patch: switch ( str . to CaMeL String ( ) ) {
rank: 638
score: 98.588720703125
patch: } if ( System . to CaMeL Object ( str ) == null )
rank: 638
score: 98.53519694010417
patch: } if ( str . length ( ) / $NUMBER$ == 0 ) {
rank: 638
score: 98.34711456298828
patch: } * / } } } )
rank: 638
score: 98.20046997070312
patch: } - 0 else {
rank: 638
score: 98.16158040364583
patch: else return false ; }
rank: 638
score: 98.01565551757812
patch: } catch 1 ; }
rank: 638
score: 97.41109466552734
patch: } } -
rank: 639
score: 98.58870203354779
patch: } switch ( str . char CaMeL At ( 1 ) ) { case 1 :
rank: 639
score: 98.35321044921875
patch: } } String CaMeL Buffer }
rank: 639
score: 98.34681047712054
patch: } } catch ( } )
rank: 639
score: 98.19730377197266
patch: } + ch 0 = str ;
rank: 639
score: 98.16120910644531
patch: } else { / false } }
rank: 639
score: 98.01515197753906
patch: } * * int / / }
rank: 639
score: 97.40200805664062
patch: } } } to
rank: 640
score: 98.6845703125
patch: } return System . err . to CaMeL String ( str ) == null ;
rank: 640
score: 98.58869934082031
patch: } if ( $STRING$ . == str . char CaMeL At ( 1 ) )
rank: 640
score: 98.53506290211396
patch: } return str . char CaMeL At ( str . length ( ) ) == $STRING$
rank: 640
score: 98.35294342041016
patch: } else throws Interrupted CaMeL Exception {
rank: 640
score: 98.34597342354911
patch: } } } . boolean }
rank: 640
score: 98.29420230263158
patch: return ! str . to CaMeL Lower CaMeL Case ( ) . length ( ) == 1 ;
rank: 640
score: 98.19698079427083
patch: } / - $NUMBER$ /
rank: 640
score: 98.16107177734375
patch: } else / null * }
rank: 640
score: 97.39249877929687
patch: } } else *
rank: 641
score: 98.68428802490234
patch: } return Boolean . to CaMeL Boolean ( str . String ( ) ) ;
rank: 641
score: 98.58736419677734
patch: } + str . length ( ) . char CaMeL At ( $NUMBER$ ) ;
rank: 641
score: 98.53486328125
patch: } if ( this . str . length ( ) != 0 ) {
rank: 641
score: 98.34564208984375
patch: } } / } } * /
rank: 641
score: 98.3447265625
patch: if ( } else if ( }
rank: 641
score: 98.29412841796875
patch: return ! str . char CaMeL At ( str . length ( ) ) == $STRING$ ;
rank: 641
score: 98.1610107421875
patch: } else if ( $NUMBER$ == 0 }
rank: 641
score: 98.01328531901042
patch: } * int / /
rank: 641
score: 97.38385009765625
patch: } } / $STRING$
rank: 642
score: 98.58715057373047
patch: } if ( str . char CaMeL At ( 0 ) > $STRING$ ) {
rank: 642
score: 98.53474695542279
patch: } this . str = str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 642
score: 98.34532928466797
patch: } } . double CaMeL Value }
rank: 642
score: 98.34354400634766
patch: } else if } return false }
rank: 642
score: 98.19350179036458
patch: } / * finally {
rank: 642
score: 98.16042654854911
patch: } else / ( * }
rank: 642
score: 98.01314871651786
patch: } while } } } }
rank: 642
score: 97.37850952148438
patch: { } /
rank: 643
score: 98.58646647135417
patch: } if ( Boolean . to CaMeL String ( str ) == null )
rank: 643
score: 98.53464084201389
patch: } switch ( str . char CaMeL At ( 1 ) . length ( ) ) {
rank: 643
score: 98.29317626953124
patch: return ! str . to CaMeL Lower CaMeL Case ( ) . starts CaMeL With ( $STRING$ ) ;
rank: 643
score: 98.19233703613281
patch: } + ch ch ch 0 ;
rank: 643
score: 98.16041395399306
patch: } else if ( value instanceof null }
rank: 643
score: 98.0127665201823
patch: } } / else {
rank: 643
score: 97.37376403808594
patch: if } /
rank: 644
score: 98.6836669921875
patch: } } return str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 644
score: 98.58629557291667
patch: } if ( ! value . char CaMeL At ( 0 ) ) {
rank: 644
score: 98.5343017578125
patch: } if ( ! str . index CaMeL Of ( $STRING$ ) == 0 ) {
rank: 644
score: 98.18809814453125
patch: } return null ;
rank: 644
score: 98.16024780273438
patch: } if ( $NUMBER$ < } }
rank: 644
score: 98.01273018973214
patch: } catch ) { } }
rank: 644
score: 97.36774444580078
patch: } } count
rank: 645
score: 98.68330078125
patch: } return $STRING$ . . char CaMeL At ( 1 ) == $STRING$ ;
rank: 645
score: 98.58458658854167
patch: } switch ( str . length ( ) || ch == null ) {
rank: 645
score: 98.53343963623047
patch: } case $STRING$ || str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 645
score: 98.34373474121094
patch: } String }
rank: 645
score: 98.34197998046875
patch: } finally if ( }
rank: 645
score: 98.29276958264802
patch: } return $STRING$ . to CaMeL Char CaMeL Array ( ) . length ( ) == 1 ;
rank: 645
score: 98.18661499023438
patch: } * == null
rank: 645
score: 98.16018676757812
patch: } else * if }
rank: 645
score: 98.01268005371094
patch: } } else { if } }
rank: 645
score: 97.36393737792969
patch: } } in
rank: 646
score: 98.68301730685764
patch: } if ( ! str . char CaMeL
rank: 646
score: 98.58434340533088
patch: } if ( this . str . char CaMeL At ( 0 ) == null )
rank: 646
score: 98.53260904947916
patch: } if ( str . length ( ) ( ) == null ) {
rank: 646
score: 98.3427734375
patch: } } } && } }
rank: 646
score: 98.3413594563802
patch: } else } catch }
rank: 646
score: 98.29242234002976
patch: } return str . char CaMeL At ( 1 ) . char CaMeL At ( 1 ) == $STRING$ ;
rank: 646
score: 98.1857198079427
patch: } * case $STRING$ :
rank: 646
score: 98.01253509521484
patch: } else { * } / }
rank: 646
score: 97.36334991455078
patch: } } true
rank: 647
score: 98.68259684244792
patch: } String str ( str . char CaMeL
rank: 647
score: 98.58423569623162
patch: } if ( this . ! str . char CaMeL At ( 0 ) ) {
rank: 647
score: 98.5325927734375
patch: } switch ( str . length ( ) ) { { case $NUMBER$ :
rank: 647
score: 98.29200328480114
patch: } else if ( str . length ( ) ==
rank: 647
score: 98.185546875
patch: } && ch == $STRING$ ;
rank: 647
score: 98.15976969401042
patch: } if ( } null == } }
rank: 647
score: 98.01244099934895
patch: } } } 0 }
rank: 647
score: 97.3441162109375
patch: return } }
rank: 648
score: 98.68196868896484
patch: } if ( System . err . to CaMeL String ( ) == $STRING$ )
rank: 648
score: 98.5840835571289
patch: } if ( ( str . char CaMeL At ( 0 ) == 0 )
rank: 648
score: 98.53257242838542
patch: } switch ( str . char CaMeL At ( 0 ) ) { case 1 : {
rank: 648
score: 98.34052385602679
patch: } else { return $STRING$ ;
rank: 648
score: 98.33965192522321
patch: } else { log . }
rank: 648
score: 98.29194972826087
patch: return ! str . to CaMeL String ( ) . to CaMeL String ( ) . length ( ) == 1 ;
rank: 648
score: 98.18455287388393
patch: } finally { case $NUMBER$ :
rank: 648
score: 98.15962982177734
patch: } if ( null == } }
rank: 648
score: 98.01236397879464
patch: } catch ( Interrupted CaMeL Exception
rank: 648
score: 97.34300994873047
patch: } } Exception
rank: 649
score: 98.58390299479167
patch: } if ( ch . char CaMeL At ( 1 ) == $STRING$ )
rank: 649
score: 98.53238677978516
patch: } if ( super . to CaMeL String ( str ) == null ) {
rank: 649
score: 98.33641052246094
patch: } else { return $STRING$ ; }
rank: 649
score: 98.18171037946429
patch: } + ch 0 ++ ;
rank: 649
score: 98.15951199001736
patch: } if ( } , null } }
rank: 649
score: 98.0121078491211
patch: } } / 1 ; } }
rank: 649
score: 97.33882141113281
patch: } } out
rank: 650
score: 98.58374741498162
patch: } if ( str . char CaMeL At ( 0 ) instanceof char [ ] )
rank: 650
score: 98.53216193704044
patch: } switch ( str . char CaMeL At ( $NUMBER$ ) ) { case $NUMBER$ :
rank: 650
score: 98.33908517020089
patch: } / } } } )
rank: 650
score: 98.2917712983631
patch: } return str . char CaMeL At ( $NUMBER$ ) == str . char CaMeL At ( $NUMBER$ ) ;
rank: 650
score: 98.17809186662946
patch: return ( ch == null )
rank: 650
score: 98.1574198404948
patch: } if } if }
rank: 650
score: 98.0118408203125
patch: } } } / } } /
rank: 650
score: 97.33741760253906
patch: } / /
rank: 651
score: 98.68123626708984
patch: switch ( System . to CaMeL String ( str . length ( ) ) )
rank: 651
score: 98.58339029947916
patch: } if ( str . char CaMeL At ( 0 ) > 0 )
rank: 651
score: 98.53126627604166
patch: } this . str = str . char CaMeL At ( 0 ) {
rank: 651
score: 98.33899688720703
patch: } if ( str == } )
rank: 651
score: 98.29175914417614
patch: return str . char CaMeL At ( 0 ) + str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 651
score: 98.177001953125
patch: } * - $NUMBER$ /
rank: 651
score: 98.15667724609375
patch: } else { / * } if }
rank: 651
score: 98.01179504394531
patch: } finally { this . } /
rank: 651
score: 97.3218994140625
patch: if } }
rank: 652
score: 98.68107386997768
patch: } return $STRING$ . char CaMeL At ( 0 ) == $NUMBER$ ;
rank: 652
score: 98.58271026611328
patch: } if ( ! str . char CaMeL At ( 0 ) == ) {
rank: 652
score: 98.53076171875
patch: } this . str = str . char CaMeL At ( 0 ) ; else {
rank: 652
score: 98.3389892578125
patch: } } if ( str } else
rank: 652
score: 98.29173694957386
patch: } return str . char CaMeL At ( 0 ) == str . char CaMeL At ( 1 ) ; }
rank: 652
score: 98.1565170288086
patch: } else { else { if }
rank: 652
score: 98.01155090332031
patch: } / / / * / /
rank: 652
score: 97.31710815429688
patch: / } /
rank: 653
score: 98.58270263671875
patch: } String str = str . to CaMeL
rank: 653
score: 98.33870442708333
patch: } } && } }
rank: 653
score: 98.29170532226563
patch: return ch . length ( ) == 0 ;
rank: 653
score: 98.1748046875
patch: } - 0 / *
rank: 653
score: 98.15624237060547
patch: } if ( ( } } }
rank: 653
score: 98.01129913330078
patch: } * * / / / }
rank: 653
score: 97.30429077148438
patch: } } long
rank: 654
score: 98.58154975043402
patch: } switch ( value . length ( )
rank: 654
score: 98.53036295572916
patch: } if ( $STRING$ . to CaMeL String ( ) == str ) {
rank: 654
score: 98.29154052734376
patch: return str . char CaMeL At ( 0 ) == $STRING$ && str [ 0 ] == $STRING$ ;
rank: 654
score: 98.1740966796875
patch: } / * ,
rank: 654
score: 98.15573556082589
patch: } else * false * }
rank: 654
score: 98.01122283935547
patch: } } / $STRING$ / } }
rank: 654
score: 97.30358123779297
patch: } } void
rank: 655
score: 98.68025425502232
patch: } this . str = str . char CaMeL At ( 0 )
rank: 655
score: 98.58144244025735
patch: } to CaMeL Boolean ( str . char CaMeL At ( 0 ) == ) ;
rank: 655
score: 98.3377685546875
patch: } } } else if }
rank: 655
score: 98.32818603515625
patch: } } if ( ( }
rank: 655
score: 98.2905505952381
patch: } return str . to CaMeL Lower CaMeL Case ( ) . to CaMeL String ( ) == null ;
rank: 655
score: 98.17250366210938
patch: } * * $STRING$
rank: 655
score: 98.15570831298828
patch: } else { / / * /
rank: 655
score: 98.01107788085938
patch: } / / * } / /
rank: 655
score: 97.29720306396484
patch: / } }
rank: 656
score: 98.58079528808594
patch: to CaMeL Boolean ( str . char CaMeL At ( 1 ) == ) ;
rank: 656
score: 98.52948319284539
patch: } switch ( this . str . char CaMeL At ( 1 ) ) { case $NUMBER$ :
rank: 656
score: 98.3369140625
patch: } } / * * / }
rank: 656
score: 98.29035387541118
patch: return ( Character . is CaMeL Lower CaMeL Case ( str . length ( ) ) ) ;
rank: 656
score: 98.1724853515625
patch: } break ; case $STRING$ :
rank: 656
score: 98.1553955078125
patch: } } if ( false } }
rank: 656
score: 97.29388427734375
patch: } } to
rank: 657
score: 98.58077799479166
patch: } if ( this . str . char CaMeL At ( 0 ) ==
rank: 657
score: 98.52940368652344
patch: } int ch = this . str . char CaMeL At ( str ) ;
rank: 657
score: 98.33679962158203
patch: } } / * } * }
rank: 657
score: 98.32686360677083
patch: } int count = }
rank: 657
score: 98.2900390625
patch: } ) ;
rank: 657
score: 98.17215401785714
patch: } / * case $NUMBER$ /
rank: 657
score: 98.15524727957589
patch: } if ( ( } }
rank: 657
score: 98.010986328125
patch: } catch } } } false ;
rank: 657
score: 97.28253173828125
patch: } } max
rank: 658
score: 98.67953055245536
patch: } if ( ch . to CaMeL String ( ) == $STRING$ )
rank: 658
score: 98.58068033854167
patch: } if ( str . char CaMeL At ( 0 ) != true )
rank: 658
score: 98.52901204427083
patch: } if ( str . to CaMeL Double ( ) == $STRING$ ) {
rank: 658
score: 98.33585611979167
patch: } * } finally {
rank: 658
score: 98.3268534342448
patch: } else { do {
rank: 658
score: 98.28955756293402
patch: } return str . Boolean . TRUE ;
rank: 658
score: 98.16920979817708
patch: debug ( $STRING$ ) ;
rank: 658
score: 98.1546142578125
patch: } else set }
rank: 658
score: 98.01068115234375
patch: } / * } / / /
rank: 658
score: 97.27825927734375
patch: } } set
rank: 659
score: 98.57960420496323
patch: } else to CaMeL Boolean ( str . char CaMeL At ( 1 ) ) ;
rank: 659
score: 98.52900695800781
patch: } if ( str . length ( ) == 1 ) { return false ;
rank: 659
score: 98.33554077148438
patch: } * } } } } ;
rank: 659
score: 98.32570975167411
patch: } catch } return false ;
rank: 659
score: 98.28909912109376
patch: return str . char CaMeL At ( 0 ) == $STRING$ || str [ 0 ] == $STRING$ ;
rank: 659
score: 98.16843668619792
patch: } / * * ,
rank: 659
score: 98.154296875
patch: } else { / / * * /
rank: 659
score: 98.01065063476562
patch: } else { return } false }
rank: 659
score: 97.27578735351562
patch: else } /
rank: 660
score: 98.67819213867188
patch: } if ( ch != null )
rank: 660
score: 98.57855987548828
patch: } if ( new str . char CaMeL At ( 1 ) == $STRING$ )
rank: 660
score: 98.5288947610294
patch: } if ( str . length ( ) < str . length ( ) ) {
rank: 660
score: 98.28902587890624
patch: } return str . to CaMeL String ( ) . index CaMeL Of ( $STRING$ ) == 1 ;
rank: 660
score: 98.15423583984375
patch: } if ( $NUMBER$ < 0 }
rank: 660
score: 98.00958251953125
patch: } * else } } } }
rank: 660
score: 97.262939453125
patch: } } null
rank: 661
score: 98.67681884765625
patch: } } if ( str == null ) {
rank: 661
score: 98.57842658547794
patch: to CaMeL Boolean ( str . char CaMeL At ( 1 ) == 0 ) ;
rank: 661
score: 98.52854919433594
patch: } this . str = str . char CaMeL At ( 0 ) ; {
rank: 661
score: 98.33465576171875
patch: } } * * } * /
rank: 661
score: 98.2889404296875
patch: return str . starts CaMeL With ( $STRING$ ) && str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 661
score: 98.16792805989583
patch: } - $NUMBER$ / *
rank: 661
score: 98.15388997395833
patch: } if ( false null == } }
rank: 661
score: 98.00933074951172
patch: } } this . } } }
rank: 661
score: 97.23611450195312
patch: } } _
rank: 662
score: 98.67643737792969
patch: switch ( str . length ( ) . char CaMeL At ( $NUMBER$ ) )
rank: 662
score: 98.5778449563419
patch: } if ( ( str . char CaMeL At ( 0 ) == $STRING$ ) )
rank: 662
score: 98.33401489257812
patch: } else { return true } }
rank: 662
score: 98.28847434303977
patch: return str . starts CaMeL With ( $STRING$ ) && str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 662
score: 98.16380092075893
patch: } * $NUMBER$ * * /
rank: 662
score: 98.15360260009766
patch: } if ( } ( value }
rank: 662
score: 98.00919799804687
patch: } } } false
rank: 662
score: 97.228759765625
patch: } } append
rank: 663
score: 98.57752182904412
patch: } int str . char CaMeL At ( str . char CaMeL At ( 0 )
rank: 663
score: 98.52805989583334
patch: } if ( str . str . length ( ) == 1 ) {
rank: 663
score: 98.3331298828125
patch: } } / * } } /
rank: 663
score: 98.288330078125
patch: return $STRING$ . equals ( str ) ;
rank: 663
score: 98.16275024414062
patch: fail ( str ) ;
rank: 663
score: 98.00910186767578
patch: } catch ( $STRING$ } } }
rank: 663
score: 97.21965789794922
patch: } } Error
rank: 664
score: 98.57720947265625
patch: } if ( str . index CaMeL Of ( $STRING$ ) == - 0 )
rank: 664
score: 98.33285958426339
patch: } } finally { String }
rank: 664
score: 98.28717362253289
patch: } return str . to CaMeL Char CaMeL Array ( ) . length ( ) != 0 ;
rank: 664
score: 98.15800476074219
patch: } * ;
rank: 664
score: 98.00855509440105
patch: } else int * /
rank: 664
score: 97.17837524414062
patch: } } (
rank: 665
score: 98.67203194754464
patch: } return Boolean . Boolean ;
rank: 665
score: 98.52738229851974
patch: } if ( $STRING$ . to CaMeL String ( ) . length ( ) == 0 ) {
rank: 665
score: 98.33236694335938
patch: } / * } else
rank: 665
score: 98.28700474330357
patch: } return str . char CaMeL At ( 1 ) == str . char CaMeL At ( 0 ) ;
rank: 665
score: 98.1570332845052
patch: } finally { / ?
rank: 665
score: 98.15311686197917
patch: } else { / * / / ;
rank: 665
score: 98.00814056396484
patch: } while } 1 . } }
rank: 665
score: 97.17047119140625
patch: else }
rank: 666
score: 98.57671356201172
patch: } if ( ! str . to CaMeL Object ( ) == null ) {
rank: 666
score: 98.52674057904412
patch: } if ( str . length ( ) == 0 ) { return true ; }
rank: 666
score: 98.33110046386719
patch: } / * } } } ;
rank: 666
score: 98.28678755326705
patch: return ! str . to CaMeL String ( ) . to CaMeL String ( ) . equals ( str ) ;
rank: 666
score: 98.15575154622395
patch: } catch ( Boolean [
rank: 666
score: 98.15296766493056
patch: } else { if ( value } }
rank: 666
score: 98.00806427001953
patch: } } String } } } }
rank: 666
score: 97.1691665649414
patch: } } No
rank: 667
score: 98.66707153320313
patch: } if ( byte CaMeL Value == null )
rank: 667
score: 98.52578555836396
patch: } this . str = str . char CaMeL At ( 0 ) : $STRING$ ;
rank: 667
score: 98.3133316040039
patch: } } } , true ) ;
rank: 667
score: 98.28673706054687
patch: return ch . char CaMeL At ( 0 ) == str . char CaMeL At ( 0 ) ;
rank: 667
score: 98.15427652994792
patch: } / * $STRING$ .
rank: 667
score: 98.15272739955357
patch: } else { } true }
rank: 667
score: 98.0073471069336
patch: } } } $NUMBER$ } } }
rank: 667
score: 97.15679931640625
patch: } } $STRING$
rank: 668
score: 98.66566162109375
patch: } switch ( out . length ( ) )
rank: 668
score: 98.57626953125
patch: } if ( str . char CaMeL At ( 1 ) != false )
rank: 668
score: 98.52574157714844
patch: } switch ( str . char CaMeL At ( 1 ) ) return false ;
rank: 668
score: 98.31254577636719
patch: } else if ( str + }
rank: 668
score: 98.15287272135417
patch: } * $NUMBER$ * ?
rank: 668
score: 98.15263536241319
patch: } if ( } . value } }
rank: 668
score: 97.14862823486328
patch: } } .
rank: 669
score: 98.66257149832589
patch: if ( str . char CaMeL
rank: 669
score: 98.57560221354167
patch: } switch ( str . length ( ) || value == null ) {
rank: 669
score: 98.52513122558594
patch: } switch ( str . char CaMeL At ( 0 ) ) { case $NUMBER$
rank: 669
score: 98.32892608642578
patch: } else { } } } ;
rank: 669
score: 98.285888671875
patch: return ( str . char CaMeL At ( 1 ) == str . char CaMeL At ( $NUMBER$ ) ;
rank: 669
score: 98.15256754557292
patch: return false ; } }
rank: 669
score: 98.15182931082589
patch: } catch ( value ) {
rank: 669
score: 98.00658307756696
patch: } catch true ; } }
rank: 669
score: 97.14674377441406
patch: } } log
rank: 670
score: 98.66248914930556
patch: switch ( System . length ( ) )
rank: 670
score: 98.57552083333333
patch: } if ( str . char CaMeL At ( 1 ) instanceof int )
rank: 670
score: 98.52486419677734
patch: } if ( str . length ( ) == 0 ) { return true ;
rank: 670
score: 98.328369140625
patch: } * / int }
rank: 670
score: 98.31097412109375
patch: } if ( boolean CaMeL Value )
rank: 670
score: 98.28526088169643
patch: } return $STRING$ . equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( 1 ) ) ;
rank: 670
score: 98.15251813616071
patch: } else { / / ;
rank: 670
score: 98.15093994140625
patch: } case / * public
rank: 670
score: 98.00640869140625
patch: } else if 0 } } }
rank: 671
score: 98.66131591796875
patch: if ( str == $STRING$ )
rank: 671
score: 98.57542419433594
patch: } while ( str . char CaMeL At ( 0 ) == null ) {
rank: 671
score: 98.52454331341912
patch: } if ( str . length ( ) == 1 ) { return false ; }
rank: 671
score: 98.30773053850446
patch: } while ( true ) {
rank: 671
score: 98.28476784446023
patch: return str . char CaMeL At ( 0 ) == str . char CaMeL At ( 1 ) - $STRING$ ;
rank: 671
score: 98.15215301513672
patch: } else { false * * }
rank: 671
score: 98.14974539620536
patch: } + str + $STRING$ ;
rank: 671
score: 97.1213150024414
patch: } } do
rank: 672
score: 98.52429877387152
patch: } if ( name == null ) {
rank: 672
score: 98.32797241210938
patch: } else if } } * /
rank: 672
score: 98.30724080403645
patch: } else { throw }
rank: 672
score: 98.28461014597039
patch: return str . last CaMeL Index CaMeL Of ( str . length ( ) ) == 1 ;
rank: 672
score: 98.15192328559027
patch: } else if } * * * }
rank: 672
score: 98.14947509765625
patch: } + ch ch ;
rank: 672
score: 98.00393240792411
patch: } } 0 } } }
rank: 672
score: 97.11782836914062
patch: } else else
rank: 673
score: 98.65060763888889
patch: } return this . str == null ;
rank: 673
score: 98.57521685431985
patch: } if ( ! str . char CaMeL At ( 0 ) == - $NUMBER$ )
rank: 673
score: 98.52422736672794
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( 1 ) )
rank: 673
score: 98.32768903459821
patch: } } this . } }
rank: 673
score: 98.30694580078125
patch: } else { return $STRING$ + }
rank: 673
score: 98.28453369140625
patch: } return str . char CaMeL At ( 0 + str . length ( ) ) == $STRING$ ;
rank: 673
score: 98.15188259548611
patch: } if ( 0 < } ) {
rank: 673
score: 98.14838518415179
patch: } / * * $NUMBER$ /
rank: 673
score: 98.003173828125
patch: } catch false {
rank: 673
score: 97.10497283935547
patch: } } check
rank: 674
score: 98.57514953613281
patch: } switch ( to CaMeL Boolean )
rank: 674
score: 98.52407997532895
patch: } this . str = str . char CaMeL At ( 0 ) . length ( ) ;
rank: 674
score: 98.32679748535156
patch: } } * / } } ;
rank: 674
score: 98.28423517400569
patch: return ( str . length ( ) == 1 )
rank: 674
score: 98.15149603949652
patch: } else if ( 1 != } }
rank: 674
score: 98.14556884765625
patch: } * $NUMBER$ else {
rank: 674
score: 98.00278145926339
patch: } * if } / }
rank: 674
score: 97.10321044921875
patch: } } start
rank: 675
score: 98.64654541015625
patch: } else if ( str . char CaMeL
rank: 675
score: 98.57482096354167
patch: } if ( str . char CaMeL At ( 1 ) < $STRING$ )
rank: 675
score: 98.32644653320312
patch: } while ( true ) { }
rank: 675
score: 98.2841796875
patch: } return str . char CaMeL At ( 0 ) != str . char CaMeL At ( 0 ) ;
rank: 675
score: 98.00235421316964
patch: } / / / } }
rank: 675
score: 97.10186004638672
patch: } } trace
rank: 676
score: 98.64434814453125
patch: switch ( str . length ( ) .
rank: 676
score: 98.57413736979167
patch: } switch ( str . length ( ) && ch == null ) {
rank: 676
score: 98.52255588107639
patch: } return str . to CaMeL String ( ) . char CaMeL At ( $NUMBER$ ) ;
rank: 676
score: 98.32581438337054
patch: } } } && ( }
rank: 676
score: 98.3066177368164
patch: } } if } return false ;
rank: 676
score: 98.282958984375
patch: } return this . str . char CaMeL At ( 0 ) == str . char CaMeL At ( 0 ) ;
rank: 676
score: 98.15143694196429
patch: } else { false false }
rank: 676
score: 98.1421610514323
patch: } + ch ) ;
rank: 676
score: 98.00184122721355
patch: } } } $NUMBER$ ;
rank: 676
score: 97.08976745605469
patch: } } double
rank: 677
score: 98.64348602294922
patch: switch ( name . length ( )
rank: 677
score: 98.5737075805664
patch: } if ( ! str . char CaMeL At ( $STRING$ ) == $STRING$ )
rank: 677
score: 98.52246771918402
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( $STRING$ ) ) ;
rank: 677
score: 98.32546997070312
patch: } } * } } ) ;
rank: 677
score: 98.30516706194196
patch: } } catch } finally {
rank: 677
score: 98.13975306919643
patch: } * * * for (
rank: 677
score: 98.00131661551339
patch: } catch $STRING$ } } }
rank: 677
score: 97.07059733072917
patch: { }
rank: 678
score: 98.57361602783203
patch: } if ( ! value . char CaMeL At ( 0 ) == null )
rank: 678
score: 98.52232360839844
patch: } else if ( str . length ( ) ( ) == $STRING$ ) {
rank: 678
score: 98.32505798339844
patch: } else { throw new } }
rank: 678
score: 98.30412074497768
patch: } } else return false ;
rank: 678
score: 98.28178267045455
patch: } return ch . length ( ) == 1 ;
rank: 678
score: 98.13873291015625
patch: } System . else {
rank: 678
score: 98.00098528180804
patch: } * if 1 ; }
rank: 679
score: 98.63790893554688
patch: } String CaMeL Buffer
rank: 679
score: 98.52186802455357
patch: } switch ( name ) {
rank: 679
score: 98.32464599609375
patch: } } } ) } ;
rank: 679
score: 98.15072292751736
patch: } else { / * / / }
rank: 679
score: 98.13588256835938
patch: break $NUMBER$ ; }
rank: 679
score: 98.00016566685268
patch: } } int } / }
rank: 679
score: 97.06106567382812
patch: if } *
rank: 680
score: 98.63641357421875
patch: } if ( str . ) {
rank: 680
score: 98.52177348889802
patch: } if ( ! str . str . char CaMeL At ( 1 ) == $STRING$ ) {
rank: 680
score: 98.30401611328125
patch: } else } return } ;
rank: 680
score: 98.1503677368164
patch: } else / true * * /
rank: 680
score: 98.13522774832589
patch: } return value == $STRING$ ;
rank: 680
score: 97.99959019252232
patch: } * int / / }
rank: 680
score: 97.05117797851562
patch: } } new
rank: 681
score: 98.63619995117188
patch: } switch ( str .
rank: 681
score: 98.5719353170956
patch: } if ( ! str . char CaMeL At ( 0 ) == - 0 )
rank: 681
score: 98.52175723805146
patch: } if ( ! str . str . char CaMeL At ( 0 ) ) {
rank: 681
score: 98.32459259033203
patch: } } * / if ( }
rank: 681
score: 98.28047318892045
patch: return ( Character . is CaMeL Lower CaMeL Case ( str . char CaMeL At ( $NUMBER$ ) ) ) ;
rank: 681
score: 98.14996337890625
patch: } / / * * }
rank: 681
score: 98.13450113932292
patch: : return true ; }
rank: 681
score: 97.99832153320312
patch: } catch $NUMBER$ } }
rank: 681
score: 97.04685974121094
patch: } } get
rank: 682
score: 98.5719223022461
patch: } if ( ( str . char CaMeL At ( $NUMBER$ ) == $STRING$ )
rank: 682
score: 98.52153778076172
patch: } try { return str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 682
score: 98.32455008370536
patch: } / * } else {
rank: 682
score: 98.28046209161931
patch: return str . to CaMeL String ( ) . to CaMeL String ( ) . length ( ) == 0 ;
rank: 682
score: 98.13394165039062
patch: } - 0 * /
rank: 682
score: 97.99785505022321
patch: } } if false } }
rank: 682
score: 97.04480743408203
patch: } } ++
rank: 683
score: 98.63499755859375
patch: case $NUMBER$ : {
rank: 683
score: 98.57182312011719
patch: } if ( str . char CaMeL At ( 1 ) instanceof String ) {
rank: 683
score: 98.52052137586806
patch: } int ch = $STRING$ . char CaMeL At ( str . length ( ) ) ;
rank: 683
score: 98.32448323567708
patch: } * / boolean }
rank: 683
score: 98.28010697798295
patch: return ( str . length ( ) == ) ;
rank: 683
score: 98.13309733072917
patch: } : return null ;
rank: 683
score: 97.99741908482143
patch: } / } / } /
rank: 683
score: 97.04071044921875
patch: } } case
rank: 684
score: 98.57130432128906
patch: } if ( ! str . to CaMeL String ( ) == null ) {
rank: 684
score: 98.52013481987848
patch: } if ( str . last CaMeL Index CaMeL Of ( $STRING$ ) == $STRING$ ) {
rank: 684
score: 98.32230050223214
patch: } } / * * *
rank: 684
score: 98.2974853515625
patch: / * } else {
rank: 684
score: 98.27706473214286
patch: if ( str . char CaMeL At ( 0 ) == str . char CaMeL At ( 0 ) )
rank: 684
score: 98.14829799107143
patch: } if ( < 0 }
rank: 684
score: 98.13166155133929
patch: } + str + str ;
rank: 684
score: 97.99629720052083
patch: } if $STRING$ . }
rank: 685
score: 98.63451470269098
patch: } return ( str == null ) ;
rank: 685
score: 98.57117462158203
patch: } switch ( ( str . char CaMeL At ( 0 ) == $STRING$ )
rank: 685
score: 98.51972791883681
patch: } switch ( ] . length ) {
rank: 685
score: 98.32206217447917
patch: } this . } }
rank: 685
score: 98.2967529296875
patch: fail ( $STRING$ + str ) ;
rank: 685
score: 98.27704148065476
patch: } return str . to CaMeL String ( ) . index CaMeL Of ( $STRING$ ) == - 1 ;
rank: 685
score: 98.1298828125
patch: } * / {
rank: 685
score: 97.99556477864583
patch: } catch / } }
rank: 685
score: 97.0399169921875
patch: } } ?
rank: 686
score: 98.63407389322917
patch: } } switch ( str . char CaMeL
rank: 686
score: 98.57067153033088
patch: } if ( ! str . . char CaMeL At ( 1 ) == $STRING$ )
rank: 686
score: 98.51953887939453
patch: } this . str = str . char CaMeL At ( 0 ) ) ;
rank: 686
score: 98.32013811383929
patch: } * / } } )
rank: 686
score: 98.27689985795455
patch: return str . char CaMeL At ( 1 ) + str . char CaMeL At ( $NUMBER$ ) == $STRING$ ;
rank: 686
score: 98.1478042602539
patch: } else { if } else ;
rank: 686
score: 98.12947591145833
patch: } : / * /
rank: 686
score: 97.99521891276042
patch: } catch 1 } }
rank: 686
score: 97.03128814697266
patch: } } default
rank: 687
score: 98.6331787109375
patch: if ( ch == $STRING$ ) {
rank: 687
score: 98.56993865966797
patch: return str . char CaMeL At ( 0 ) . equals ( $STRING$ ) ;
rank: 687
score: 98.51951197574013
patch: } return to CaMeL Boolean ( str . char CaMeL At ( 0 ) == $STRING$ ) ;
rank: 687
score: 98.31950073242187
patch: / * } }
rank: 687
score: 98.2947998046875
patch: } } catch } return false ;
rank: 687
score: 98.27646706321023
patch: } else { if ( str == $STRING$ ) {
rank: 687
score: 98.14739227294922
patch: } else if } / * ;
rank: 687
score: 98.12680053710938
patch: } || str == null
rank: 687
score: 97.03040313720703
patch: if }
rank: 688
score: 98.63235812717014
patch: } } if ( str . char CaMeL
rank: 688
score: 98.56983184814453
patch: } String ch 0 = str ;
rank: 688
score: 98.31825474330357
patch: } } super . } }
rank: 688
score: 98.29379708426339
patch: } else { value = }
rank: 688
score: 98.27629743303571
patch: return ( str . char CaMeL At ( 0 ) == str . char CaMeL At ( $NUMBER$ ) ;
rank: 688
score: 98.12594168526786
patch: } + ch += $STRING$ ;
rank: 688
score: 97.99509974888393
patch: } finally { super . }
rank: 688
score: 97.02700805664062
patch: { } *
rank: 689
score: 98.56971740722656
patch: } while ( ! str . char CaMeL At ( 0 ) == $STRING$ )
rank: 689
score: 98.51831772748162
patch: } switch ( str . char CaMeL At ( 0 ) ) { / * /
rank: 689
score: 98.29318237304688
patch: } } else * /
rank: 689
score: 98.27588500976563
patch: return str . length ( ) != 0 ;
rank: 689
score: 98.14732360839844
patch: } if ( false && } }
rank: 689
score: 98.12506713867188
patch: } - $NUMBER$ :
rank: 689
score: 97.02477264404297
patch: return } *
rank: 690
score: 98.62930636935764
patch: switch ( in . length ( ) )
rank: 690
score: 98.56970932904412
patch: to CaMeL Boolean ( str . char CaMeL At ( 0 ) == 1 ) ;
rank: 690
score: 98.518310546875
patch: } for ( int ) {
rank: 690
score: 98.27552861752717
patch: } return str . last CaMeL Index CaMeL Of ( str . char CaMeL At ( $NUMBER$ ) ) == $STRING$ ;
rank: 690
score: 98.14693196614583
patch: } if ( ( 0 < 0 }
rank: 690
score: 97.9947509765625
patch: } else / * } /
rank: 690
score: 97.01692199707031
patch: } } last
rank: 691
score: 98.62311401367188
patch: } return $STRING$ ;
rank: 691
score: 98.51667022705078
patch: } if ( str . char CaMeL At ( 1 ) , $STRING$ ) {
rank: 691
score: 98.31661987304688
patch: } } finally }
rank: 691
score: 98.2745361328125
patch: } return str . to CaMeL Lower CaMeL Case ( ) . equals ( str . length ( ) ) ;
rank: 691
score: 98.14689127604167
patch: } else if } ( } ) ;
rank: 691
score: 98.122607421875
patch: } / == null
rank: 691
score: 97.99397786458333
patch: } catch new ) }
rank: 691
score: 97.01496124267578
patch: catch } /
rank: 692
score: 98.62240939670139
patch: } if ( new str . char CaMeL
rank: 692
score: 98.56862505744485
patch: } if ( ! str . char CaMeL At ( 0 ) == 0 ) {
rank: 692
score: 98.27415829613095
patch: return ( str . last CaMeL Index CaMeL Of ( $STRING$ ) . length ( ) == 0 ) ;
rank: 692
score: 98.12254115513393
patch: } return value == null ;
rank: 692
score: 97.99249267578125
patch: } } } name ;
rank: 692
score: 96.96742248535156
patch: } else if
rank: 693
score: 98.62141927083333
patch: switch ( $STRING$ ) {
rank: 693
score: 98.56857299804688
patch: } if ( str . char CaMeL At ( 0 ) < $STRING$ ) {
rank: 693
score: 98.51605224609375
patch: } if ( str . length ( ) . equals ( $STRING$ ) ) {
rank: 693
score: 98.31458391462054
patch: } String } } } }
rank: 693
score: 98.27406529017857
patch: return ( str . char CaMeL At ( 0 ) == str . char CaMeL At ( 1 ) )
rank: 693
score: 98.14670817057292
patch: } else if ( this . } }
rank: 693
score: 97.99201311383929
patch: / * * / / /
rank: 693
score: 96.96605682373047
patch: } } Runtime
rank: 694
score: 98.61435372488839
patch: } return Boolean . FALSE ;
rank: 694
score: 98.5157829733456
patch: } if ( $STRING$ . to CaMeL String ( ) . length ( ) ) {
rank: 694
score: 98.28833879743304
patch: } else if ( } ;
rank: 694
score: 98.27378627232143
patch: if ( str . char CaMeL At ( 0 ) == str . char CaMeL At ( $NUMBER$ ) )
rank: 694
score: 98.14657156808036
patch: } else { false ( }
rank: 694
score: 98.12083943684895
patch: } catch ( $STRING$ {
rank: 694
score: 97.99007742745536
patch: } * * + } /
rank: 694
score: 96.96142578125
patch: / } *
rank: 695
score: 98.60692487444196
patch: switch ( str . char CaMeL
rank: 695
score: 98.56810760498047
patch: } if ( System . value CaMeL Of ( str ) == null ) {
rank: 695
score: 98.51509363511029
patch: } switch ( str . char CaMeL At ( 1 ) ) { case $STRING$ ;
rank: 695
score: 98.31421770368304
patch: } } } / * /
rank: 695
score: 98.273681640625
patch: return str . ends CaMeL With ( $STRING$ ) && str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 695
score: 98.14557562934027
patch: } else { if * * * /
rank: 695
score: 98.11951555524554
patch: } break ; case 1 :
rank: 695
score: 96.94995880126953
patch: } } add
rank: 696
score: 98.60671997070312
patch: switch ( $STRING$ )
rank: 696
score: 98.5680923461914
patch: } if ( str . length ( ) . length ( ) == 1 )
rank: 696
score: 98.27329323508523
patch: return ( str . char CaMeL At ( 0 ) != str . char CaMeL At ( $NUMBER$ ) ) ;
rank: 696
score: 98.1177978515625
patch: } * finally {
rank: 696
score: 97.98869977678571
patch: } else { new } }
rank: 696
score: 96.94276428222656
patch: } } $NUMBER$
rank: 697
score: 98.60589599609375
patch: } switch ( names . length )
rank: 697
score: 98.5677261352539
patch: } if ( str . last CaMeL Index CaMeL Of ( $STRING$ ) == )
rank: 697
score: 98.51365902549342
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( 0 ) Exception ) ;
rank: 697
score: 98.27322823660714
patch: return ! str . char CaMeL At ( 1 ) == str . char CaMeL At ( $NUMBER$ ) ;
rank: 697
score: 98.1160888671875
patch: } * * / {
rank: 697
score: 97.98808942522321
patch: } } } / / }
rank: 697
score: 96.941162109375
patch: } } break
rank: 698
score: 98.59973907470703
patch: if ( str == $STRING$ ) {
rank: 698
score: 98.56731818704044
patch: } if ( str . char CaMeL At ( 0 ) == - $NUMBER$ ) {
rank: 698
score: 98.5133415670956
patch: } equals CaMeL Ignore CaMeL Case ( str . length ( ) , $STRING$ ) ;
rank: 698
score: 98.31207275390625
patch: } else { return ! }
rank: 698
score: 98.28141566685268
patch: } } } . finally {
rank: 698
score: 98.27280970982143
patch: return str . char CaMeL At ( 0 ) == str . char CaMeL At ( $NUMBER$ ) ; }
rank: 698
score: 98.14491780598958
patch: } if ( ! } ) { }
rank: 698
score: 98.1158955891927
patch: } == null ) {
rank: 698
score: 97.98680768694196
patch: } } / System . }
rank: 698
score: 96.93348693847656
patch: } } --
rank: 699
score: 98.59909057617188
patch: } switch ( str . str )
rank: 699
score: 98.56709558823529
patch: switch ( str . length ( ) . char CaMeL At ( 1 ) ) {
rank: 699
score: 98.5133285522461
patch: } if ( equals CaMeL Ignore CaMeL Case ( str , $STRING$ ) ) {
rank: 699
score: 98.31157575334821
patch: } } ? * * }
rank: 699
score: 98.2804667154948
patch: } } else return }
rank: 699
score: 98.27253861860795
patch: return str . char CaMeL At ( 1 ) == str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 699
score: 98.144775390625
patch: } else if } * * }
rank: 699
score: 98.11494954427083
patch: break ;
rank: 699
score: 97.98655482700893
patch: } * / / / }
rank: 699
score: 96.93315124511719
patch: public } }
rank: 700
score: 98.59775797526042
patch: } return ( ch == null ) ;
rank: 700
score: 98.51332493832237
patch: } if ( str . to CaMeL String ( ) . length ( ) != 0 ) {
rank: 700
score: 98.27239435369319
patch: } return str . length ( ) != 1 ;
rank: 700
score: 98.14475504557292
patch: } else { if } case $STRING$ :
rank: 700
score: 98.11328125
patch: } catch ( Boolean ;
rank: 700
score: 97.98597208658855
patch: } / / } /
rank: 700
score: 96.93180847167969
patch: } } throw
rank: 701
score: 98.5664291381836
patch: } if ( str . char CaMeL At ( 0 ) instanceof int ) {
rank: 701
score: 98.51315487132354
patch: } return str . to CaMeL String ( ) . length ( ) == $STRING$ ;
rank: 701
score: 98.30943603515625
patch: } } && }
rank: 701
score: 98.27957589285714
patch: } } catch } * /
rank: 701
score: 98.271240234375
patch: return str . char CaMeL At ( 0 ) == str . char CaMeL At ( 1 ) + $STRING$ ;
rank: 701
score: 98.14466094970703
patch: } else { return null } }
rank: 701
score: 98.113037109375
patch: } log .
rank: 701
score: 97.98549979073661
patch: } } catch ) { }
rank: 701
score: 96.92953491210938
patch: println } /
rank: 702
score: 98.56627655029297
patch: } if ( ( $STRING$ . char CaMeL At ( 1 ) == $STRING$ )
rank: 702
score: 98.51275275735294
patch: } switch ( str . char CaMeL At ( str . length ( ) ) )
rank: 702
score: 98.30875651041667
patch: } } . } }
rank: 702
score: 98.27955845424107
patch: } else } return true ;
rank: 702
score: 98.14415147569444
patch: } if ( 1 == } ) {
rank: 702
score: 98.11241658528645
patch: } case / * }
rank: 702
score: 97.98506673177083
patch: } catch * $STRING$ }
rank: 702
score: 96.91850280761719
patch: } } equals
rank: 703
score: 98.59407552083333
patch: } if ( ( str . char CaMeL
rank: 703
score: 98.56613159179688
patch: } : if ( str . char CaMeL At ( 0 ) == $STRING$ )
rank: 703
score: 98.51205283717105
patch: } if ( str . length ( ) == ( str . length ( ) ) ) {
rank: 703
score: 98.3076171875
patch: } } || }
rank: 703
score: 98.14239501953125
patch: } else if ( 0 != } }
rank: 703
score: 98.11215645926339
patch: } + str . char CaMeL
rank: 703
score: 97.98444475446429
patch: } catch } 1 } }
rank: 703
score: 96.9088363647461
patch: * } /
rank: 704
score: 98.59404754638672
patch: if ( value == null ) {
rank: 704
score: 98.56591796875
patch: } if ( str . str . char CaMeL At ( 1 ) == $STRING$ )
rank: 704
score: 98.51200143914474
patch: } if ( this . ! str . char CaMeL At ( 1 ) == $STRING$ ) {
rank: 704
score: 98.30733816964286
patch: } } * / * /
rank: 704
score: 98.27908325195312
patch: } } } to CaMeL Boolean }
rank: 704
score: 98.27012567934783
patch: } return this . str . char CaMeL At ( str . char CaMeL At ( $NUMBER$ ) ) == $STRING$ ;
rank: 704
score: 98.14229038783482
patch: } else / null * /
rank: 704
score: 98.11182657877605
patch: } * return false ;
rank: 704
score: 96.90763092041016
patch: else } *
rank: 705
score: 98.59323459201389
patch: char ch 0 = str . char CaMeL
rank: 705
score: 98.56512810202206
patch: } switch ( name . char CaMeL At ( 0 ) ) { case $NUMBER$ :
rank: 705
score: 98.51171112060547
patch: switch ( str . char CaMeL At ( 0 ) ) { case $NUMBER$ :
rank: 705
score: 98.30712890625
patch: } / } * * /
rank: 705
score: 98.26963739809783
patch: return str . char CaMeL At ( ) == $STRING$ || str . char CaMeL At ( $NUMBER$ ) == $STRING$ ;
rank: 705
score: 98.14215087890625
patch: } else { for } ;
rank: 705
score: 98.11055501302083
patch: } / $NUMBER$ * /
rank: 705
score: 97.98372395833333
patch: } * catch ) {
rank: 705
score: 96.89618682861328
patch: } } Integer
rank: 706
score: 98.58556450737848
patch: } if ( str . . char CaMeL
rank: 706
score: 98.5647964477539
patch: } if ( str . Boolean )
rank: 706
score: 98.51152801513672
patch: } char ch = str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 706
score: 98.30647495814732
patch: } return } } } }
rank: 706
score: 98.26902077414773
patch: if ( str . char CaMeL At ( 0 ) == str . char CaMeL At ( 0 ) ) {
rank: 706
score: 98.14215087890625
patch: } else { } return false ;
rank: 706
score: 98.10986328125
patch: } char ch 0 ;
rank: 706
score: 97.98295084635417
patch: } else if new }
rank: 706
score: 96.89125061035156
patch: } } Object
rank: 707
score: 98.58388264973958
patch: } return this . str == $STRING$ ;
rank: 707
score: 98.5643669577206
patch: } if ( ! value . char CaMeL At ( 0 ) == $STRING$ ) {
rank: 707
score: 98.511474609375
patch: } if ( str . to CaMeL String ( ) . length ( ) == ) {
rank: 707
score: 98.27409362792969
patch: if ( }
rank: 707
score: 98.26838822798295
patch: return str . ends CaMeL With ( $STRING$ ) && str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 707
score: 98.14134385850694
patch: } else { / * * } /
rank: 707
score: 98.1085205078125
patch: } / * $NUMBER$ * /
rank: 707
score: 97.98157610212054
patch: } else if } $STRING$ ;
rank: 707
score: 96.88983917236328
patch: } } code
rank: 708
score: 98.58383517795139
patch: to CaMeL Boolean ( str . char CaMeL
rank: 708
score: 98.56434631347656
patch: } if ( new str . char CaMeL At ( 0 ) == null )
rank: 708
score: 98.51097276475694
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( str ) ) ;
rank: 708
score: 98.30507405598958
patch: / * } * }
rank: 708
score: 98.26758922230114
patch: if ( str . char CaMeL At ( 0 ) == str . char CaMeL At ( $NUMBER$ ) ) {
rank: 708
score: 98.14106580946181
patch: } else if } this . value }
rank: 708
score: 98.1071268717448
patch: } * * finally {
rank: 708
score: 97.98006184895833
patch: } * int / }
rank: 708
score: 96.88887786865234
patch: } } throws
rank: 709
score: 98.58035617404514
patch: } Object str = str . char CaMeL
rank: 709
score: 98.56395766314338
patch: } if ( str . char CaMeL At ( 0 ) == - 0 ) {
rank: 709
score: 98.51076146175987
patch: } str . char CaMeL At ( str . char CaMeL At ( 0 ) ) == $STRING$
rank: 709
score: 98.30400739397321
patch: } String str = } }
rank: 709
score: 98.2674893465909
patch: return str . char CaMeL At ( 0 + str . char CaMeL At ( 1 ) ) == $STRING$ ;
rank: 709
score: 98.14020453559027
patch: } else { if } } null ;
rank: 709
score: 98.10698590959821
patch: } * * * $NUMBER$ /
rank: 709
score: 97.9798583984375
patch: } else if } false
rank: 709
score: 96.88455200195312
patch: } } Illegal
rank: 710
score: 98.57744489397321
patch: if ( value == null )
rank: 710
score: 98.56298065185547
patch: } if ( ( ch . char CaMeL At ( 0 ) == $STRING$ )
rank: 710
score: 98.50999049136513
patch: } if ( str . to CaMeL String ( ) . length ( ) != 1 ) {
rank: 710
score: 98.30385335286458
patch: } } . int }
rank: 710
score: 98.27165004185268
patch: } } } ? * /
rank: 710
score: 98.26746136209239
patch: } return str . char CaMeL At ( 0 ) == str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 710
score: 98.14019097222223
patch: } if ( false == } ) {
rank: 710
score: 98.10671561104911
patch: } / * case $STRING$ :
rank: 710
score: 97.979248046875
patch: } } / } / }
rank: 710
score: 96.87236022949219
patch: } } 0
rank: 711
score: 98.57430013020833
patch: if ( str == null ) { {
rank: 711
score: 98.56240665211396
patch: } if ( ! ch . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 711
score: 98.50990923713235
patch: } else if ( str . index CaMeL Of ( $STRING$ ) == 1 ) {
rank: 711
score: 98.30364990234375
patch: } } return false }
rank: 711
score: 98.27057647705078
patch: } else if ( } * }
rank: 711
score: 98.26718971946023
patch: return ( str . char CaMeL At ( 0 ) . char CaMeL At ( 1 ) == $STRING$ ) ;
rank: 711
score: 98.13980441623264
patch: } else if ( 1 == false }
rank: 711
score: 98.10630580357143
patch: } catch ( char ch )
rank: 711
score: 97.97789306640625
patch: } * else ;
rank: 712
score: 98.57354058159723
patch: switch ( chars . length ( ) )
rank: 712
score: 98.56205240885417
patch: } switch ( str . length 0 )
rank: 712
score: 98.50944967830883
patch: } else if ( str . index CaMeL Of ( $STRING$ ) == 0 ) {
rank: 712
score: 98.26705799932066
patch: return ! str . to CaMeL String ( ) . equals ( str . char CaMeL At ( 0 ) ) ;
rank: 712
score: 98.13902452256944
patch: } else / false * * * }
rank: 712
score: 98.1055419921875
patch: } / - 1
rank: 712
score: 96.86581420898438
patch: } } key
rank: 713
score: 98.57191685267857
patch: } return $STRING$ . char CaMeL
rank: 713
score: 98.56187438964844
patch: } if ( ! str . char CaMeL At ( 1 ) == true )
rank: 713
score: 98.50877470128677
patch: } if ( ! this . str . char CaMeL At ( 0 ) ) {
rank: 713
score: 98.29827880859375
patch: } String value = }
rank: 713
score: 98.26641290838069
patch: return ( str . char CaMeL At ( 1 ) != str . char CaMeL At ( $NUMBER$ ) ) ;
rank: 713
score: 98.26554870605469
patch: } else if ( } if }
rank: 713
score: 98.13898468017578
patch: } else if ( 0 } }
rank: 713
score: 98.10544259207589
patch: } && str == null ;
rank: 713
score: 97.97696940104167
patch: } } / $NUMBER$ ;
rank: 713
score: 96.86270141601562
patch: catch } }
rank: 714
score: 98.56020220588235
patch: } if ( str . to CaMeL String ( ) . equals ( $STRING$ ) )
rank: 714
score: 98.5086734169408
patch: } str . char CaMeL At ( 0 ) . char CaMeL At ( 1 ) == $STRING$
rank: 714
score: 98.2661465731534
patch: return ( $STRING$ . equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( 1 ) ) ) ;
rank: 714
score: 98.26554652622768
patch: } else { return value }
rank: 714
score: 98.13880920410156
patch: } else { / * } else
rank: 714
score: 98.10446166992188
patch: } / - 1 ,
rank: 714
score: 97.97548130580357
patch: } else if new ) }
rank: 714
score: 96.85215759277344
patch: } } Thread
rank: 715
score: 98.55992889404297
patch: } if ( str . char CaMeL At ( 0 ) != false ) {
rank: 715
score: 98.50862390854779
patch: } str = str . char CaMeL At ( str . length ( ) ) ;
rank: 715
score: 98.2660245028409
patch: } return str . length ( ) == ) ;
rank: 715
score: 98.26222229003906
patch: } else { } } finally {
rank: 715
score: 98.1384506225586
patch: } else { if * * /
rank: 715
score: 98.10393676757812
patch: } / * .
rank: 715
score: 97.97544642857143
patch: } * * $STRING$ } /
rank: 715
score: 96.84442138671875
patch: } } next
rank: 716
score: 98.56456163194444
patch: } if ( ch != null ) {
rank: 716
score: 98.55979919433594
patch: } else if ( str . char CaMeL At ( 1 ) != $STRING$ )
rank: 716
score: 98.50850423177083
patch: } str . char CaMeL At ( str . char CaMeL At ( 0 ) ) {
rank: 716
score: 98.29669189453125
patch: } } System . }
rank: 716
score: 98.26558061079545
patch: return str . char CaMeL At ( 0 ) == str . char CaMeL At ( 0 ) & $STRING$ ;
rank: 716
score: 98.26084899902344
patch: } else if } Thread . }
rank: 716
score: 98.13844517299107
patch: } else { / null }
rank: 716
score: 98.10392543247768
patch: } catch ( Boolean ) {
rank: 716
score: 97.97463553292411
patch: } / / * / }
rank: 716
score: 96.83811950683594
patch: } } +=
rank: 717
score: 98.55999755859375
patch: } switch ( String . char CaMeL
rank: 717
score: 98.55959065755208
patch: } if ( str . Boolean ) {
rank: 717
score: 98.50825330946181
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( 0 ) ) .
rank: 717
score: 98.13832310267857
patch: } else if ( key }
rank: 717
score: 98.10384695870536
patch: } / - 1 * /
rank: 717
score: 97.97444661458333
patch: } catch ( Throwable }
rank: 717
score: 96.83777618408203
patch: } } <
rank: 718
score: 98.55955595128677
patch: } switch ( str . length ( ) . to CaMeL String ( ) ) {
rank: 718
score: 98.55927191840277
patch: } try { return str . char CaMeL
rank: 718
score: 98.50751809512867
patch: } return str . length ( ) . to CaMeL String ( ) == $STRING$ ;
rank: 718
score: 98.29313151041667
patch: } else { Object }
rank: 718
score: 98.26503684303977
patch: return str . char CaMeL At ( 0 ) == str . char CaMeL At ( 1 ) ; break ;
rank: 718
score: 98.13815646701389
patch: } if * * * * * }
rank: 718
score: 98.10178629557292
patch: } . return false ;
rank: 718
score: 97.97296142578125
patch: } } } true {
rank: 718
score: 96.83341979980469
patch: } } finally
rank: 719
score: 98.55919647216797
patch: } try { char . char CaMeL
rank: 719
score: 98.55903625488281
patch: } if ( ( str . to CaMeL String ( ) == null ) )
rank: 719
score: 98.50703430175781
patch: } if ( str . index CaMeL Of ( $STRING$ ) == ] ) {
rank: 719
score: 98.26493530273437
patch: } else to CaMeL String ( str ) ;
rank: 719
score: 98.25802176339286
patch: } } if } else {
rank: 719
score: 98.13809640066964
patch: } else } } false ;
rank: 719
score: 98.10059204101563
patch: } : for (
rank: 719
score: 97.97290910993304
patch: } * * int / }
rank: 719
score: 96.8328628540039
patch: } } current
rank: 720
score: 98.55889892578125
patch: } boolean value = str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 720
score: 98.55731201171875
patch: } return $STRING$ . == str ;
rank: 720
score: 98.50696563720703
patch: } switch ( str . char CaMeL At ( 1 ) ) return true ;
rank: 720
score: 98.29312133789062
patch: } } if } )
rank: 720
score: 98.262548828125
patch: return ! str . equals ( str ) ;
rank: 720
score: 98.25602504185268
patch: } return new Boolean ( }
rank: 720
score: 98.1376953125
patch: } else { else * / }
rank: 720
score: 98.100390625
patch: } / $NUMBER$ .
rank: 720
score: 96.82959747314453
patch: public } /
rank: 721
score: 98.55874633789062
patch: } if ( Long . to CaMeL String ( str ) == null ) {
rank: 721
score: 98.55438910590277
patch: } if ( new str == null )
rank: 721
score: 98.5066276999081
patch: } if ( str . char CaMeL At ( 0 ) == $STRING$ ) { {
rank: 721
score: 98.29259381975446
patch: } try { } } }
rank: 721
score: 98.2580322265625
patch: return ! str . equals ( $STRING$ ) ;
rank: 721
score: 98.13739013671875
patch: } else / true * }
rank: 721
score: 97.97068568638393
patch: } / } / / /
rank: 722
score: 98.5587387084961
patch: } else if ( str . char CaMeL At ( 0 ) == false )
rank: 722
score: 98.50658416748047
patch: } else { return str . char CaMeL At ( 1 ) == $STRING$ ;
rank: 722
score: 98.29173932756696
patch: } if ( str } }
rank: 722
score: 98.25418701171876
patch: return ch . length ( ) == 1 ;
rank: 722
score: 98.25259835379464
patch: } } } , false }
rank: 722
score: 98.13715471540179
patch: } if ( } } ;
rank: 722
score: 98.09751383463542
patch: : return false ; }
rank: 722
score: 96.82325744628906
patch: if } {
rank: 723
score: 98.5587158203125
patch: } if ( str . index CaMeL Of ( $STRING$ ) == - $NUMBER$ )
rank: 723
score: 98.50639343261719
patch: } if ( str . length ( ) == 1 ) { return true ;
rank: 723
score: 98.25172254774306
patch: return to CaMeL Boolean ( str ) ;
rank: 723
score: 98.13691541883681
patch: } else { if } * } }
rank: 723
score: 98.09736938476563
patch: } ; else {
rank: 723
score: 97.97063337053571
patch: } while } 1 . }
rank: 723
score: 96.81100463867188
patch: } } for
rank: 724
score: 98.55824908088235
patch: } if ( ! str . char CaMeL At ( 1 ) == - 1 )
rank: 724
score: 98.50628303079044
patch: } if ( ! str . char CaMeL At ( $NUMBER$ ) == $STRING$ ) {
rank: 724
score: 98.29152134486607
patch: } else { boolean } }
rank: 724
score: 98.25206647600446
patch: } String CaMeL Buffer } }
rank: 724
score: 98.2413330078125
patch: } else to CaMeL Char ( str ) ;
rank: 724
score: 98.13671875
patch: } else { if } / true ;
rank: 724
score: 98.09679158528645
patch: } * == $STRING$ ;
rank: 724
score: 97.97039184570312
patch: } } } $STRING$
rank: 724
score: 96.80870056152344
patch: else /
rank: 725
score: 98.55699157714844
patch: } else if ( str . to CaMeL String ( ) == null ) {
rank: 725
score: 98.546875
patch: switch ( out . length ( ) )
rank: 725
score: 98.5060806274414
patch: } int ch = str . char CaMeL At ( 0 ) == $STRING$ ;
rank: 725
score: 98.2912089029948
patch: } } || } }
rank: 725
score: 98.13656955295139
patch: } else { false * * * }
rank: 725
score: 97.9693603515625
patch: } } } } } final
rank: 725
score: 96.78357696533203
patch: } } byte
rank: 726
score: 98.55652618408203
patch: } if ( ! str . char CaMeL At ( 0 ) == 1 )
rank: 726
score: 98.50534237132354
patch: } this . str = str . char CaMeL At ( length ( ) ) ;
rank: 726
score: 98.29002162388393
patch: } } else if } }
rank: 726
score: 98.25040980747768
patch: } / * ? * /
rank: 726
score: 98.23644409179687
patch: return $STRING$ . length ( ) == 0 ;
rank: 726
score: 98.13615199497768
patch: } else { while ( }
rank: 726
score: 97.96882934570313
patch: } catch ) {
rank: 726
score: 96.77783203125
patch: } } Index
rank: 727
score: 98.55590057373047
patch: } if ( str . char CaMeL At ( 0 ) instanceof int ] )
rank: 727
score: 98.50532531738281
patch: } if ( ! str . length ( ) ) { return false ; }
rank: 727
score: 98.28966413225446
patch: } } * * * /
rank: 727
score: 98.23211669921875
patch: } else switch ( str ) {
rank: 727
score: 98.13592529296875
patch: } if ( count < 0 }
rank: 727
score: 98.09344482421875
patch: } + ch ch 0
rank: 727
score: 97.96852620442708
patch: } * * if }
rank: 728
score: 98.55586242675781
patch: } if ( new $STRING$ . char CaMeL At ( 0 ) == $STRING$ )
rank: 728
score: 98.53466796875
patch: } String str = str ;
rank: 728
score: 98.50523466222427
patch: } if ( ! str . str . char CaMeL At ( 1 ) ) {
rank: 728
score: 98.2891845703125
patch: } / * } * }
rank: 728
score: 98.24982561383929
patch: } while ( false ) {
rank: 728
score: 98.13566589355469
patch: } else if } * / }
rank: 728
score: 97.96845354352679
patch: } } } } } name
rank: 728
score: 96.77481079101562
patch: } } line
rank: 729
score: 98.55574035644531
patch: } if ( str . char CaMeL At ( 0 ) != 0 ) {
rank: 729
score: 98.53361511230469
patch: } this . str . char CaMeL
rank: 729
score: 98.5049057006836
patch: } if ( str . index CaMeL Of ( $STRING$ ) >= 1 ) {
rank: 729
score: 98.22822265625
patch: return $STRING$ . to CaMeL String ( ) ;
rank: 729
score: 98.13562774658203
patch: } else { else if } }
rank: 729
score: 98.08884684244792
patch: } * * == null
rank: 729
score: 97.96703229631696
patch: } } / } } false
rank: 730
score: 98.5547866821289
patch: } if ( str == null || str . length ( ) == 0 )
rank: 730
score: 98.2879638671875
patch: } / * } } )
rank: 730
score: 98.13560485839844
patch: } else if ( * - }
rank: 730
score: 98.0875752766927
patch: } / $NUMBER$ / *
rank: 730
score: 97.96663120814732
patch: } } false } } }
rank: 730
score: 96.76325225830078
patch: } } continue
rank: 731
score: 98.55470275878906
patch: } if ( ! str . to CaMeL String ( ) . == null )
rank: 731
score: 98.50426025390625
patch: } else { {
rank: 731
score: 98.28709193638393
patch: } String str = str }
rank: 731
score: 98.2456563313802
patch: this . } else {
rank: 731
score: 98.22670288085938
patch: return str . length ( ) == $STRING$ ;
rank: 731
score: 98.13527134486607
patch: } else { * / ;
rank: 731
score: 98.085400390625
patch: } break ; }
rank: 731
score: 97.96645682198661
patch: } } } Exception } }
rank: 731
score: 96.75228881835938
patch: } } ,
rank: 732
score: 98.55467313878677
patch: } if ( str . char CaMeL At ( 1 ) == - 1 ) {
rank: 732
score: 98.50406222873264
patch: } set CaMeL Value ( str . char CaMeL At ( 0 ) == $STRING$ ) ;
rank: 732
score: 98.286865234375
patch: } } } * } )
rank: 732
score: 98.24364362444196
patch: } else } } else {
rank: 732
score: 98.224853515625
patch: } return str . to CaMeL String ( )
rank: 732
score: 98.13514927455357
patch: } else { else / }
rank: 732
score: 98.08006795247395
patch: } * * $STRING$ .
rank: 732
score: 97.9657694498698
patch: } if } ) {
rank: 732
score: 96.74844360351562
patch: } } type
rank: 733
score: 98.55452473958333
patch: } switch ( str . ( ) )
rank: 733
score: 98.52987234933036
patch: if ( ch != null )
rank: 733
score: 98.28575439453125
patch: } } . }
rank: 733
score: 98.24327741350446
patch: } } } return } }
rank: 733
score: 98.22322387695313
patch: } else if ( str != $STRING$ ) {
rank: 733
score: 98.13453892299107
patch: } else { for } }
rank: 733
score: 98.07923380533855
patch: } || ch == $STRING$
rank: 733
score: 97.96506754557292
patch: } / } ) ;
rank: 733
score: 96.74797821044922
patch: * } }
rank: 734
score: 98.55421357996323
patch: } if ( str . last CaMeL Index CaMeL Of ( $STRING$ ) == 0 )
rank: 734
score: 98.5291748046875
patch: } for (
rank: 734
score: 98.50271426930146
patch: } if ( this . str . length ( ) ( ) == 0 ) {
rank: 734
score: 98.28394426618304
patch: } } if } } )
rank: 734
score: 98.13402642144098
patch: } if ( } null != } }
rank: 734
score: 98.078857421875
patch: } else { / *
rank: 734
score: 97.96321614583333
patch: } catch - 1 }
rank: 734
score: 96.74551391601562
patch: return } {
rank: 735
score: 98.52684020996094
patch: } return new str . char CaMeL
rank: 735
score: 98.50267118566177
patch: } if ( str . index CaMeL Of ( $STRING$ ) == - $NUMBER$ ) {
rank: 735
score: 98.2838846842448
patch: } else } * /
rank: 735
score: 98.21794297960069
patch: } System . catch ( $STRING$ ) {
rank: 735
score: 98.13386535644531
patch: } } * * * * /
rank: 735
score: 98.07315063476562
patch: } case 0 :
rank: 735
score: 97.962646484375
patch: } * * $STRING$ /
rank: 735
score: 96.7427749633789
patch: } } index
rank: 736
score: 98.55311494715073
patch: } if ( Boolean . ! str . char CaMeL At ( 1 ) ) {
rank: 736
score: 98.52244567871094
patch: } switch ( chars . length )
rank: 736
score: 98.50173052619485
patch: } if ( str . length ( ) == 1 ) { return true ; }
rank: 736
score: 98.28299386160714
patch: } } ? ? * /
rank: 736
score: 98.13370768229167
patch: } if ( false } } ) ;
rank: 736
score: 98.07262166341145
patch: } $NUMBER$ * * /
rank: 736
score: 97.96168009440105
patch: } else } false }
rank: 736
score: 96.73623657226562
patch: { } else
rank: 737
score: 98.55256652832031
patch: } if ( str . char CaMeL At ( 0 ) == 1 ) {
rank: 737
score: 98.50142415364583
patch: } this . str = str . char CaMeL At ( ( ] ) $STRING$ ) ;
rank: 737
score: 98.28092041015626
patch: } synchronized ( }
rank: 737
score: 98.23286655970982
patch: } } finally if ( }
rank: 737
score: 98.21339111328125
patch: return ( str . to CaMeL String ( )
rank: 737
score: 98.13357883029514
patch: } if ( false ) ; return }
rank: 737
score: 98.07201131184895
patch: * /
rank: 737
score: 96.73335266113281
patch: } } Throwable
rank: 738
score: 98.55243278952206
patch: } if ( ! str . to CaMeL String ( ) . length ( ) )
rank: 738
score: 98.51383754185268
patch: } switch ( str . )
rank: 738
score: 98.50035264756944
patch: } switch ( map . length ) {
rank: 738
score: 98.23154703776042
patch: fail ( } else {
rank: 738
score: 98.21326700846355
patch: return str == null ;
rank: 738
score: 98.13345772879464
patch: } if ( true } }
rank: 738
score: 98.06874389648438
patch: } catch ( $STRING$
rank: 738
score: 97.95858764648438
patch: } * * $STRING$ }
rank: 738
score: 96.72077941894531
patch: } } Unsupported
rank: 739
score: 98.51050567626953
patch: } if ( log . is CaMeL
rank: 739
score: 98.49995930989583
patch: } switch ( str . value ) {
rank: 739
score: 98.22817993164062
patch: } while ( ! }
rank: 739
score: 98.21123046875
patch: return ch . to CaMeL Boolean ( ) ;
rank: 739
score: 98.13336944580078
patch: } / * * * / /
rank: 739
score: 97.95821126302083
patch: } } } + }
rank: 739
score: 96.71589660644531
patch: } } abstract
rank: 740
score: 98.50956217447917
patch: } switch ( start )
rank: 740
score: 98.49986356847427
patch: } if ( str . length ( ) . length ( ) == $STRING$ ) {
rank: 740
score: 98.27813720703125
patch: } } } , true }
rank: 740
score: 98.13319905598958
patch: } else if } * / * /
rank: 740
score: 98.06578572591145
patch: } / - 1 /
rank: 740
score: 97.95780436197917
patch: } else } 0 }
rank: 740
score: 96.71344757080078
patch: } } not
rank: 741
score: 98.5518439797794
patch: } else if ( str . char CaMeL At ( 0 ) == null ) {
rank: 741
score: 98.49936810661765
patch: } if ( str . length ( ) . length ( ) > 1 ) {
rank: 741
score: 98.27780587332589
patch: } } } } , }
rank: 741
score: 98.13289388020833
patch: } else { null }
rank: 741
score: 98.06318359375
patch: } + ch 1
rank: 741
score: 97.95706176757812
patch: } while } } }
rank: 741
score: 96.71038818359375
patch: catch } *
rank: 742
score: 98.55158547794117
patch: } else if ( str . char CaMeL At ( 0 ) != $STRING$ ) {
rank: 742
score: 98.50846644810268
patch: } return Boolean . Double ;
rank: 742
score: 98.4993034811581
patch: } switch ( str . char CaMeL At ( $NUMBER$ ) ) { case $STRING$ :
rank: 742
score: 98.13286675347223
patch: } if ( ! is CaMeL Empty )
rank: 742
score: 98.06015014648438
patch: } / / /
rank: 742
score: 97.95688883463542
patch: } else { catch false
rank: 742
score: 96.70278930664062
patch: } } Byte
rank: 743
score: 98.55133819580078
patch: } if ( $STRING$ . to CaMeL
rank: 743
score: 98.50748443603516
patch: } System . catch ( $STRING$ )
rank: 743
score: 98.19938659667969
patch: return str . length ( ) ==
rank: 743
score: 98.13258361816406
patch: } if } } } false ;
rank: 743
score: 98.05875651041667
patch: } || str != null
rank: 743
score: 97.95643310546875
patch: } catch 1 ;
rank: 743
score: 96.69186401367188
patch: else } else
rank: 744
score: 98.55094146728516
patch: } if ( ! name . char CaMeL At ( 0 ) == $STRING$ )
rank: 744
score: 98.50733184814453
patch: } return value == null ) ;
rank: 744
score: 98.49882238051471
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( 1 ) ;
rank: 744
score: 98.2761942545573
patch: } ? ? * /
rank: 744
score: 98.21571568080357
patch: } if } return true ;
rank: 744
score: 98.19833713107639
patch: } while ( str == null ) {
rank: 744
score: 98.13197326660156
patch: } else { if * * }
rank: 744
score: 98.05349731445312
patch: } * $NUMBER$ :
rank: 744
score: 97.95606079101563
patch: } catch null }
rank: 744
score: 96.69120025634766
patch: ; } }
rank: 745
score: 98.54989803538604
patch: } if ( new str . char CaMeL At ( 0 ) == $STRING$ ) {
rank: 745
score: 98.27526245117187
patch: } } } finally
rank: 745
score: 98.19798787434895
patch: return Boolean . TRUE ;
rank: 745
score: 98.13151041666667
patch: } if ( ( 0 != 0 }
rank: 745
score: 98.0523173014323
patch: } / * $NUMBER$ ,
rank: 745
score: 97.95560709635417
patch: / * * / }
rank: 745
score: 96.68712615966797
patch: } } Array
rank: 746
score: 98.54981825086806
patch: } if ( ( value == null )
rank: 746
score: 98.49778747558594
patch: } str . length ( ) ;
rank: 746
score: 98.27469889322917
patch: } String } ) }
rank: 746
score: 98.21543666294643
patch: } else { return value ;
rank: 746
score: 98.19767930772569
patch: if ( str . char CaMeL At (
rank: 746
score: 98.13139512803819
patch: } if ( } this . } )
rank: 746
score: 98.05073852539063
patch: } $NUMBER$ / *
rank: 746
score: 96.68394470214844
patch: } else int
rank: 747
score: 98.5495964499081
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( 0 ) {
rank: 747
score: 98.49768784466912
patch: } switch ( str . index CaMeL Of ( $STRING$ ) ) { case $STRING$ :
rank: 747
score: 98.2745361328125
patch: } } { if ( }
rank: 747
score: 98.19422743055556
patch: } return str . Boolean . FALSE ;
rank: 747
score: 98.04932657877605
patch: break ; } / *
rank: 747
score: 97.95179239908855
patch: } catch null || }
rank: 747
score: 96.68356323242188
patch: } } char
rank: 748
score: 98.54747772216797
patch: } switch ( str . to CaMeL
rank: 748
score: 98.49755141314338
patch: } switch ( ch . char CaMeL At ( 0 ) ) { case $NUMBER$ :
rank: 748
score: 98.48905726841518
patch: } if ( ! str .
rank: 748
score: 98.27346365792411
patch: } } if ( } else
rank: 748
score: 98.21270751953125
patch: } else } if ( }
rank: 748
score: 98.19420166015625
patch: return str . length ( ) != 1 ;
rank: 748
score: 98.13105010986328
patch: } else if ( 0 != }
rank: 748
score: 98.04605712890626
patch: fail ( ) ;
rank: 748
score: 97.9506327311198
patch: } else { } else
rank: 748
score: 96.67845916748047
patch: println } }
rank: 749
score: 98.49726019965277
patch: } switch ( str . char CaMeL At ( $NUMBER$ ) ) { case $NUMBER$ : {
rank: 749
score: 98.27340262276786
patch: } for ( } } }
rank: 749
score: 98.20725795200893
patch: } else if ( replace )
rank: 749
score: 98.13068983289931
patch: } if ( false ) { } }
rank: 749
score: 98.04453531901042
patch: } / > 1 .
rank: 749
score: 97.948974609375
patch: } * * + /
rank: 749
score: 96.6759262084961
patch: } } Double
rank: 750
score: 98.54148864746094
patch: } if ( $STRING$ == ch )
rank: 750
score: 98.4969482421875
patch: } return ( str == null )
rank: 750
score: 98.48428344726562
patch: } if ( in == null )
rank: 750
score: 98.27206856863839
patch: } } || str . }
rank: 750
score: 98.20706176757812
patch: } else } return }
rank: 750
score: 98.18891059027777
patch: pos = str . length ( ) ;
rank: 750
score: 98.13051350911458
patch: } if ( is CaMeL Empty ( }
rank: 750
score: 98.04246215820312
patch: } log == null
rank: 750
score: 97.94821166992188
patch: } * } ) ;
rank: 750
score: 96.67579650878906
patch: assert } /
rank: 751
score: 98.49681091308594
patch: } else { case $STRING$ : {
rank: 751
score: 98.48419952392578
patch: } return ( str . char CaMeL
rank: 751
score: 98.13014729817708
patch: } else { if null } while }
rank: 751
score: 98.0376953125
patch: } / / ?
rank: 751
score: 97.94798787434895
patch: } if ) ; }
rank: 752
score: 98.49640251608456
patch: } str . char CaMeL At ( str . length ( ) ) == $STRING$ ;
rank: 752
score: 98.27159772600446
patch: } * / } } ;
rank: 752
score: 98.20352608816964
patch: } } String } ) ;
rank: 752
score: 98.18693712022569
patch: } to CaMeL Char ( str ) ;
rank: 752
score: 98.12994384765625
patch: } if ( out == null }
rank: 752
score: 98.03426513671874
patch: finally { else {
rank: 752
score: 97.94767252604167
patch: } } / 1 {
rank: 752
score: 96.65220642089844
patch: } } Interrupted
rank: 753
score: 98.48300170898438
patch: } switch ( String . null )
rank: 753
score: 98.2699462890625
patch: } * / *
rank: 753
score: 98.1297836303711
patch: } if } } / * /
rank: 753
score: 98.03385009765626
patch: } - $NUMBER$ .
rank: 754
score: 98.52664794921876
patch: } catch ( Exception
rank: 754
score: 98.2692159016927
patch: / } } * /
rank: 754
score: 98.20151192801339
patch: } else { str = }
rank: 754
score: 98.18512573242188
patch: return str . last CaMeL Index CaMeL Of (
rank: 754
score: 98.12969970703125
patch: } if ( ! ) . }
rank: 754
score: 98.0312744140625
patch: } * $NUMBER$ .
rank: 754
score: 97.94712320963542
patch: } else if new )
rank: 754
score: 96.62330627441406
patch: } } run
rank: 755
score: 98.49538167317708
patch: } if ( ! str . to CaMeL Integer ( ) . length ( ) ) {
rank: 755
score: 98.26898193359375
patch: } return } } ) ;
rank: 755
score: 98.18387451171876
patch: return ch . to CaMeL String ( ) ;
rank: 755
score: 98.12921142578125
patch: } if } * * * * /
rank: 755
score: 98.02880249023437
patch: } - 1 .
rank: 755
score: 97.94678751627605
patch: } if / 1 }
rank: 755
score: 96.62103271484375
patch: } } un@@
rank: 756
score: 98.49502902560764
patch: } switch ( str . char CaMeL At ( 1 ) ) { case 1 : {
rank: 756
score: 98.47848946707589
patch: } return value . char CaMeL
rank: 756
score: 98.26760864257812
patch: } return } } ;
rank: 756
score: 98.19815499441964
patch: } } } return false }
rank: 756
score: 98.18384399414063
patch: } return str . char CaMeL At ( }
rank: 756
score: 98.02157592773438
patch: } catch ( Boolean
rank: 756
score: 97.9462890625
patch: } } $STRING$ ;
rank: 756
score: 96.60966491699219
patch: } } Out
rank: 757
score: 98.51716613769531
patch: } if ( str == false )
rank: 757
score: 98.4949089499081
patch: } return str . to CaMeL String ( ) . length ( ) > 0 ;
rank: 757
score: 98.47711944580078
patch: if ( ch != null ) {
rank: 757
score: 98.12898763020833
patch: } else { if } * 0 ;
rank: 757
score: 98.01185302734375
patch: } * static :
rank: 757
score: 97.94590250651042
patch: } } } int }
rank: 757
score: 96.60758972167969
patch: = } }
rank: 758
score: 98.51530456542969
patch: } switch ( str . ) {
rank: 758
score: 98.49442784926471
patch: } return str . to CaMeL String ( ) . length ( ) > 1 ;
rank: 758
score: 98.26542445591518
patch: } if } else { }
rank: 758
score: 98.19737025669643
patch: } } boolean } ) ;
rank: 758
score: 98.18341064453125
patch: } return boolean CaMeL Value ( str ) ;
rank: 758
score: 98.12861633300781
patch: } if ( } || } }
rank: 758
score: 98.00891876220703
patch: case $STRING$ :
rank: 758
score: 97.94473266601562
patch: } * else { }
rank: 758
score: 96.6056137084961
patch: } } Security
rank: 759
score: 98.51325225830078
patch: } if ( directory == null )
rank: 759
score: 98.49416216681985
patch: } switch ( str . to CaMeL Object ( ) . length ( ) ) {
rank: 759
score: 98.26520647321429
patch: } * } * } }
rank: 759
score: 98.19636753627232
patch: } else if ( String }
rank: 759
score: 98.12701416015625
patch: return false ; } else if }
rank: 759
score: 98.008203125
patch: } * $NUMBER$ ]
rank: 759
score: 97.9432373046875
patch: } else * } /
rank: 759
score: 96.60525512695312
patch: } } short
rank: 760
score: 98.4932861328125
patch: } switch ( length ) {
rank: 760
score: 98.2640889485677
patch: } else } } else
rank: 760
score: 98.1960957845052
patch: } } } } .
rank: 760
score: 98.12681361607143
patch: } } if ( true }
rank: 760
score: 98.00169067382812
patch: } : * /
rank: 760
score: 97.94249471028645
patch: } else } } /
rank: 760
score: 96.6036148071289
patch: } } iterator
rank: 761
score: 98.49315688189338
patch: } int ch = str . to CaMeL String ( ) . length ( ) ;
rank: 761
score: 98.47294616699219
patch: } synchronized ( str . char CaMeL
rank: 761
score: 98.26361083984375
patch: } } } ) } else
rank: 761
score: 98.12645612444196
patch: } else { else return }
rank: 761
score: 97.994189453125
patch: } + ch $NUMBER$
rank: 761
score: 97.9415283203125
patch: } } catch false {
rank: 761
score: 96.60336303710938
patch: catch } {
rank: 762
score: 98.51108805338542
patch: } if ( ! value . to CaMeL
rank: 762
score: 98.4920654296875
patch: } else if ( str . length ( ) == str . length ( ) ) {
rank: 762
score: 98.19113159179688
patch: } else if ( str
rank: 762
score: 98.17420789930556
patch: catch ( Illegal CaMeL Argument CaMeL Exception {
rank: 762
score: 98.12630208333333
patch: } else if ( key . equals )
rank: 762
score: 97.9842041015625
patch: } case null :
rank: 762
score: 97.94131469726562
patch: } finally { / }
rank: 762
score: 96.60107421875
patch: else
rank: 763
score: 98.50876193576389
patch: } switch ( directory . length ( )
rank: 763
score: 98.49202234604779
patch: } switch ( str . length ( ) ) { case $NUMBER$ : case $NUMBER$ :
rank: 763
score: 98.45743815104167
patch: } switch ( key )
rank: 763
score: 98.18982805524554
patch: } } } return $STRING$ ;
rank: 763
score: 98.12592909071181
patch: } / * * * } } }
rank: 763
score: 97.98054809570313
patch: } - 0 .
rank: 763
score: 97.9404805501302
patch: } catch } ) {
rank: 763
score: 96.59635925292969
patch: } } is
rank: 764
score: 98.49011908637152
patch: } str . char CaMeL At ( str . char CaMeL At ( 1 ) ) {
rank: 764
score: 98.45731353759766
patch: } String ( str . char CaMeL
rank: 764
score: 98.26075090680804
patch: } } } } null ;
rank: 764
score: 98.18736049107143
patch: } } name = } ;
rank: 764
score: 98.12589518229167
patch: } else if ( 0 instanceof null }
rank: 764
score: 97.97620391845703
patch: } * .
rank: 764
score: 96.5950698852539
patch: } else this
rank: 765
score: 98.50189208984375
patch: } else if ( str . to CaMeL
rank: 765
score: 98.488037109375
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( false ) ) ;
rank: 765
score: 98.45182800292969
patch: switch ( value . length ( )
rank: 765
score: 98.2600606282552
patch: } * } } )
rank: 765
score: 98.1719970703125
patch: return ! str . char CaMeL At (
rank: 765
score: 98.12578667534723
patch: } else { if ( } else ;
rank: 765
score: 97.97516479492188
patch: } / >> *
rank: 765
score: 97.93859252929687
patch: } catch $STRING$ ;
rank: 765
score: 96.58543395996094
patch: } } :
rank: 766
score: 98.49947781032986
patch: } if ( $STRING$ == ch ) {
rank: 766
score: 98.48541937934027
patch: } if ( key == null ) {
rank: 766
score: 98.25932094029018
patch: } } } } ; }
rank: 766
score: 98.18410818917411
patch: } else throws Interrupted CaMeL Exception
rank: 766
score: 98.17153930664062
patch: } System . catch ( Exception {
rank: 766
score: 98.1257095336914
patch: } else if ( ! } }
rank: 766
score: 97.97217407226563
patch: } + str ,
rank: 766
score: 97.93724568684895
patch: } else { else }
rank: 766
score: 96.5849380493164
patch: = } /
rank: 767
score: 98.49910481770833
patch: } if ( str . == $STRING$ )
rank: 767
score: 98.48539225260417
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( 0 ) ) &&
rank: 767
score: 98.45033264160156
patch: } switch ( name . char CaMeL
rank: 767
score: 98.25901576450893
patch: } else { } String }
rank: 767
score: 98.16927761501736
patch: } if ( str instanceof String ) {
rank: 767
score: 98.12559678819444
patch: } else / / * * / }
rank: 767
score: 97.96917724609375
patch: } / * ;
rank: 767
score: 97.93597412109375
patch: } * if ) ;
rank: 767
score: 96.57501220703125
patch: } } offset
rank: 768
score: 98.49871063232422
patch: } if ( System . to CaMeL
rank: 768
score: 98.48432159423828
patch: } for ( ; ; ) {
rank: 768
score: 98.44835662841797
patch: } return this . str == null
rank: 768
score: 98.2575174967448
patch: } } . double }
rank: 768
score: 98.18280029296875
patch: } } else { try {
rank: 768
score: 98.12515258789062
patch: } if ( 0 < null }
rank: 768
score: 97.967724609375
patch: } * $STRING$ /
rank: 768
score: 97.93517049153645
patch: } if true ; }
rank: 768
score: 96.56912231445312
patch: println } *
rank: 769
score: 98.49605984157986
patch: } switch ( str == null ) {
rank: 769
score: 98.48390028211806
patch: } if ( str . last CaMeL Index CaMeL Of ( $STRING$ ) == $NUMBER$ ) {
rank: 769
score: 98.44815826416016
patch: } while ( str . char CaMeL
rank: 769
score: 98.12508719308036
patch: } / * false * /
rank: 769
score: 97.96683959960937
patch: } * / .
rank: 769
score: 96.56803894042969
patch: } } private
rank: 770
score: 98.49364556206598
patch: } if ( ! ch . to CaMeL
rank: 770
score: 98.48354085286458
patch: } if ( str . to CaMeL String ( ) . length ( ) == 1 )
rank: 770
score: 98.44669015066964
patch: } this . return false ;
rank: 770
score: 98.25576782226562
patch: } for ( String }
rank: 770
score: 98.18247477213542
patch: } else } else {
rank: 770
score: 98.15753173828125
patch: } return str == null ) ;
rank: 770
score: 98.12481689453125
patch: } if ( ( 0 }
rank: 770
score: 97.96558380126953
patch: continue ; }
rank: 770
score: 97.93477376302083
patch: } } } $NUMBER$ }
rank: 770
score: 96.53370666503906
patch: } } total
rank: 771
score: 98.49154227120536
patch: } String ch 0 = $STRING$
rank: 771
score: 98.48319498697917
patch: } if ( ! $STRING$ . to CaMeL String ( ) . length ( ) ) {
rank: 771
score: 98.44229888916016
patch: } if ( ch instanceof String )
rank: 771
score: 98.12456403459821
patch: } else { } * }
rank: 771
score: 97.96436767578125
patch: } - 1 :
rank: 771
score: 97.93402099609375
patch: } } String } }
rank: 771
score: 96.52904510498047
patch: } } name
rank: 772
score: 98.48239474826389
patch: } if ( str . length ) {
rank: 772
score: 98.25477818080357
patch: } * } } ) }
rank: 772
score: 98.15032196044922
patch: return ch . char CaMeL At (
rank: 772
score: 98.12445068359375
patch: } else if } if } }
rank: 772
score: 96.52839660644531
patch: } } OS
rank: 773
score: 98.48662651909723
patch: } if ( ( $STRING$ == str )
rank: 773
score: 98.48219807942708
patch: } if ( ! str . to CaMeL String ( ) . size ( ) ) {
rank: 773
score: 98.43476213727679
patch: switch ( this . str )
rank: 773
score: 98.25441487630208
patch: } else { double }
rank: 773
score: 98.175537109375
patch: } else if ( format }
rank: 773
score: 98.14942169189453
patch: } case $NUMBER$ : return false ;
rank: 773
score: 98.12445068359375
patch: } else { this . } , }
rank: 773
score: 97.94783935546874
patch: } / Null :
rank: 773
score: 96.5206069946289
patch: } /
rank: 774
score: 98.4815673828125
patch: } if ( ! false ) {
rank: 774
score: 98.2522705078125
patch: } * } else
rank: 774
score: 98.17497035435268
patch: } } catch } else {
rank: 774
score: 98.14865451388889
patch: } if ( str == false ) {
rank: 774
score: 98.12440999348958
patch: } if ( ! null == } }
rank: 774
score: 97.941064453125
patch: } in == null
rank: 774
score: 97.9322001139323
patch: } / } 1 ;
rank: 774
score: 96.51360321044922
patch: } / else
rank: 775
score: 98.48147243923611
patch: } return str . char CaMeL At ( str . char CaMeL At ( 1 ) ;
rank: 775
score: 98.43308512369792
patch: } if ( $STRING$ .
rank: 775
score: 98.25144449869792
patch: } String } } }
rank: 775
score: 98.14554172092014
patch: return to CaMeL String ( str ) ;
rank: 775
score: 98.12420654296875
patch: } else if } null } null ;
rank: 775
score: 97.93796997070312
patch: } / ? {
rank: 775
score: 97.9322001139323
patch: } if } $STRING$ ;
rank: 775
score: 96.51081848144531
patch: } } Float
rank: 776
score: 98.48104422433036
patch: } switch ( $NUMBER$ ) {
rank: 776
score: 98.47966851128473
patch: } if ( in == null ) {
rank: 776
score: 98.42940848214286
patch: } return String . Boolean ;
rank: 776
score: 98.25025431315105
patch: } } ? ? }
rank: 776
score: 98.12415907118056
patch: } if ( true ) . } }
rank: 776
score: 97.93235778808594
patch: case 1 :
rank: 776
score: 97.93166097005208
patch: } return } ) }
rank: 776
score: 96.51055145263672
patch: } } gc
rank: 777
score: 98.48097059461806
patch: } Object ch = str . char CaMeL At ( str . length ( ) ) ;
rank: 777
score: 98.42681274414062
patch: } return new ;
rank: 777
score: 98.24822998046875
patch: } finally { String }
rank: 777
score: 98.14269341362848
patch: } else { return str == $STRING$ ;
rank: 777
score: 98.1241455078125
patch: } } } } this . } }
rank: 777
score: 97.92821248372395
patch: } else } null }
rank: 777
score: 96.50885772705078
patch: return } else
rank: 778
score: 98.48048909505208
patch: } return str . to CaMeL String ( ) . char CaMeL At ( 0 ) ==
rank: 778
score: 98.42599923270089
patch: } } switch ( $STRING$ )
rank: 778
score: 98.2476806640625
patch: } } catch } )
rank: 778
score: 98.17230224609375
patch: } } int } ) ;
rank: 778
score: 97.92818196614583
patch: } else } $STRING$ }
rank: 778
score: 97.92457275390625
patch: } throw str ;
rank: 778
score: 96.50878143310547
patch: } } initial
rank: 779
score: 98.47955322265625
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( 1 ) ) .
rank: 779
score: 98.17133440290179
patch: } else if ( append )
rank: 779
score: 98.13863796657986
patch: ns = str . length ( ) ;
rank: 779
score: 98.12282986111111
patch: } else / false * * / }
rank: 779
score: 97.927734375
patch: } if / $STRING$ }
rank: 779
score: 97.92445678710938
patch: } throw $STRING$ ;
rank: 780
score: 98.47899712456598
patch: } String ch = $STRING$ . char CaMeL At ( str . length ( ) ) ;
rank: 780
score: 98.47317165798611
patch: } switch ( String . $STRING$ ) {
rank: 780
score: 98.4185791015625
patch: } switch ( err )
rank: 780
score: 98.24132283528645
patch: } * } } else
rank: 780
score: 98.13302612304688
patch: return ( str == $STRING$ ) ;
rank: 780
score: 98.122802734375
patch: } else if ( value instanceof Number }
rank: 780
score: 97.92674763997395
patch: } * ] } /
rank: 780
score: 97.91820678710937
patch: } / $NUMBER$ *
rank: 780
score: 96.50205993652344
patch: } } Char
rank: 781
score: 98.47239854600694
patch: } switch ( ( str == null )
rank: 781
score: 98.2393798828125
patch: } / } else {
rank: 781
score: 98.132080078125
patch: } if ( out == null ) {
rank: 781
score: 98.12169392903645
patch: } else { continue }
rank: 781
score: 97.92666625976562
patch: } else } false ;
rank: 781
score: 97.91631469726562
patch: } * * ;
rank: 781
score: 96.4972915649414
patch: } } parent
rank: 782
score: 98.47726779513889
patch: } switch ( str . char CaMeL At ( 0 ) ) { case $NUMBER$ : }
rank: 782
score: 98.12978108723958
patch: return str . to CaMeL String ( )
rank: 782
score: 97.92664591471355
patch: } catch / 1 ;
rank: 782
score: 97.91591186523438
patch: } * / ;
rank: 783
score: 98.47718641493056
patch: } switch ( in . length ) {
rank: 783
score: 98.46807183159723
patch: } : if ( str == null )
rank: 783
score: 98.40390014648438
patch: } return new $STRING$ ;
rank: 783
score: 98.16543143136161
patch: } int count = 0 ;
rank: 783
score: 98.12800428602431
patch: } if ( format == null ) {
rank: 783
score: 97.9264424641927
patch: } else if ) {
rank: 783
score: 97.91547393798828
patch: } - 1
rank: 783
score: 96.4934310913086
patch: } } package
rank: 784
score: 98.47687445746527
patch: } case str . length ( ) :
rank: 784
score: 98.46806504991319
patch: } int str . length ( ) ?
rank: 784
score: 98.39691162109375
patch: } if ( ( str .
rank: 784
score: 98.227294921875
patch: } } ) . }
rank: 784
score: 98.12577056884766
patch: } case $NUMBER$ : return true ;
rank: 784
score: 98.11771937779018
patch: } else if } ? }
rank: 784
score: 97.91491088867187
patch: } case str :
rank: 784
score: 96.49063873291016
patch: } } register
rank: 785
score: 98.476806640625
patch: } if ( str . to CaMeL String ( ) . length ( ) == 0 )
rank: 785
score: 98.46671295166016
patch: } if ( value == $STRING$ )
rank: 785
score: 98.3965576171875
patch: } return value ;
rank: 785
score: 98.22627766927083
patch: } } , } }
rank: 785
score: 96.48197174072266
patch: * } *
rank: 786
score: 98.47437201605902
patch: } switch ( str . index CaMeL Of ( $STRING$ ) ) { case $STRING$ : {
rank: 786
score: 98.395751953125
patch: } return str == null
rank: 786
score: 98.22598266601562
patch: } else { byte }
rank: 786
score: 98.1640625
patch: } } name = str ;
rank: 786
score: 98.123291015625
patch: this . str = str ;
rank: 786
score: 98.11574881417411
patch: } else { , * }
rank: 786
score: 97.9258321126302
patch: } if 1 ; }
rank: 786
score: 97.91284942626953
patch: } ) {
rank: 786
score: 96.47966003417969
patch: switch } /
rank: 787
score: 98.47325303819444
patch: } if ( str . to CaMeL String ( ) . equals ( $STRING$ ) ) {
rank: 787
score: 98.38092041015625
patch: } switch ( null )
rank: 787
score: 98.16226632254464
patch: } if ( } return }
rank: 787
score: 98.1156005859375
patch: } else { break ;
rank: 787
score: 96.4788589477539
patch: } } init
rank: 788
score: 98.16169956752232
patch: } else { return str ;
rank: 788
score: 98.12164306640625
patch: return ! str . length ( ) ==
rank: 788
score: 97.906201171875
patch: } catch ( )
rank: 788
score: 96.46906280517578
patch: } } min
rank: 789
score: 98.47222900390625
patch: } System . * * * /
rank: 789
score: 98.4529800415039
patch: } else { System . else {
rank: 789
score: 98.37582397460938
patch: } switch ( 0 )
rank: 789
score: 98.22062174479167
patch: } ? ? * }
rank: 789
score: 98.11625671386719
patch: } if ( str != $STRING$ )
rank: 789
score: 98.11308942522321
patch: } if ( false null }
rank: 789
score: 97.9224853515625
patch: } / / / }
rank: 789
score: 97.90013427734375
patch: str = $STRING$ ;
rank: 789
score: 96.46595001220703
patch: assert } }
rank: 790
score: 98.47172037760417
patch: } if ( Double . length ) {
rank: 790
score: 98.45276641845703
patch: } if ( key == null )
rank: 790
score: 98.37471516927083
patch: } switch ( 1 )
rank: 790
score: 98.21940104166667
patch: } } } finally }
rank: 790
score: 98.11493682861328
patch: } while ( str == null )
rank: 790
score: 98.11192103794643
patch: } if ( false == }
rank: 790
score: 97.9222920735677
patch: } else } 0 ;
rank: 790
score: 97.89624633789063
patch: } ++ str ;
rank: 790
score: 96.46556854248047
patch: / } else
rank: 791
score: 98.47119818793402
patch: } String str = str . char CaMeL At ( 0 ) . length ( ) ;
rank: 791
score: 98.11228434244792
patch: } if ( str == null || str
rank: 791
score: 98.11186872209821
patch: } for ( / * }
rank: 791
score: 97.9194091796875
patch: } / else ;
rank: 791
score: 97.89315795898438
patch: } * * static
rank: 791
score: 96.46216583251953
patch: } } %
rank: 792
score: 98.47110324435764
patch: } equals CaMeL Ignore CaMeL Case ( str . char CaMeL At ( ++ ) ) ;
rank: 792
score: 98.4447021484375
patch: } if ( String CaMeL
rank: 792
score: 98.37443324497768
patch: } char ch 0 = $STRING$
rank: 792
score: 98.15275355747768
patch: } else } finally { }
rank: 792
score: 98.11062186104911
patch: } if ( false ) }
rank: 792
score: 97.90382690429688
patch: } catch } }
rank: 792
score: 97.89207763671875
patch: } / $NUMBER$ /
rank: 792
score: 96.45384724934895
patch: return }
rank: 793
score: 98.21368408203125
patch: } } default * /
rank: 793
score: 98.1527099609375
patch: } else } catch ( }
rank: 793
score: 98.10806710379464
patch: } else { throw null }
rank: 793
score: 97.8968017578125
patch: } catch $STRING$ }
rank: 793
score: 97.8905029296875
patch: ; } else {
rank: 793
score: 96.45310974121094
patch: } new }
rank: 794
score: 98.47005886501736
patch: } if ( ! str . to CaMeL String ( ) . next ( ) ) {
rank: 794
score: 98.37020438058036
patch: if ( $STRING$ == str )
rank: 794
score: 98.21229858398438
patch: } return ( }
rank: 794
score: 98.10751342773438
patch: } else / / }
rank: 794
score: 97.88486328125
patch: else return true ;
rank: 794
score: 96.446533203125
patch: } } protected
rank: 795
score: 98.46887885199652
patch: } switch ( byte CaMeL Value ) {
rank: 795
score: 98.36649867466518
patch: } String str = str .
rank: 795
score: 98.2112528483073
patch: } switch ( str }
rank: 795
score: 98.10745675223214
patch: } else * false * /
rank: 795
score: 98.10603841145833
patch: return ( ch . char CaMeL At (
rank: 795
score: 97.888671875
patch: } catch $NUMBER$ ;
rank: 795
score: 97.8830810546875
patch: } / 1 .
rank: 795
score: 96.44508361816406
patch: } } str
rank: 796
score: 98.44039481026786
patch: } if ( ! String CaMeL
rank: 796
score: 98.35947672526042
patch: } } case 1 :
rank: 796
score: 98.21043701171875
patch: } do { }
rank: 796
score: 98.1072489420573
patch: } while ( false }
rank: 796
score: 98.104248046875
patch: } else if ( str .
rank: 796
score: 97.88525390625
patch: } catch } $STRING$
rank: 796
score: 97.88305053710937
patch: } out == null
rank: 796
score: 96.43850708007812
patch: } } err
rank: 797
score: 98.4644775390625
patch: } switch str . length ( ) ;
rank: 797
score: 98.43914794921875
patch: } switch ( values . length )
rank: 797
score: 98.35139683314732
patch: if ( name == null )
rank: 797
score: 98.2058817545573
patch: } else } } ;
rank: 797
score: 98.10547892252605
patch: } else { synchronized }
rank: 797
score: 98.09928131103516
patch: } else return str == $STRING$ ;
rank: 797
score: 97.88257446289063
patch: } catch ( value
rank: 797
score: 97.8751220703125
patch: } if true }
rank: 797
score: 96.43838500976562
patch: public } *
rank: 798
score: 98.46300591362848
patch: } switch ( . length ( ) )
rank: 798
score: 98.10483805338542
patch: } if ( } ;
rank: 798
score: 98.09755452473958
patch: sb . return false ;
rank: 798
score: 97.87703247070313
patch: } / ? .
rank: 798
score: 97.873876953125
patch: else { * /
rank: 798
score: 96.43411254882812
patch: while } /
rank: 799
score: 98.46201869419643
patch: } switch ( key ) {
rank: 799
score: 98.4368896484375
patch: } if ( str == null
rank: 799
score: 98.34445190429688
patch: switch ( str )
rank: 799
score: 98.2047119140625
patch: } / } } ;
rank: 799
score: 98.14619954427083
patch: } else { default :
rank: 799
score: 98.08474731445312
patch: } return false ; }
rank: 799
score: 97.86994934082031
patch: } * )
rank: 799
score: 96.43379211425781
patch: ; } /
rank: 800
score: 98.45989312065973
patch: } if ( char CaMeL At ) {
rank: 800
score: 98.43466186523438
patch: } switch ( str . length )
rank: 800
score: 98.34327189127605
patch: } case $NUMBER$ : }
rank: 800
score: 98.2046630859375
patch: } super . }
rank: 800
score: 98.10318429129464
patch: } else = false ; }
rank: 800
score: 97.86919555664062
patch: } throw value ;
rank: 800
score: 97.86761474609375
patch: } catch } 1
rank: 800
score: 96.4300537109375
patch: else *
rank: 801
score: 98.45808241102431
patch: } if ( count == 0 ) {
rank: 801
score: 98.41950988769531
patch: } if ( err == null )
rank: 801
score: 98.34177943638393
patch: } } switch ( str )
rank: 801
score: 98.10314069475446
patch: } if ( * } }
rank: 801
score: 98.081298828125
patch: return Boolean . FALSE ;
rank: 801
score: 97.8643798828125
patch: } catch ( char
rank: 801
score: 96.42510986328125
patch: } } 1
rank: 802
score: 98.45745086669922
patch: } else { case $NUMBER$ : {
rank: 802
score: 98.41913604736328
patch: } switch ( name == null )
rank: 802
score: 98.33973911830357
patch: if ( str != null )
rank: 802
score: 98.20150756835938
patch: } / } } )
rank: 802
score: 98.14501953125
patch: } } return } ) ;
rank: 802
score: 98.10260009765625
patch: } else / false }
rank: 802
score: 97.856640625
patch: } / * string
rank: 802
score: 97.85090942382813
patch: } else { *
rank: 802
score: 96.42398834228516
patch: } } Not
rank: 803
score: 98.45429823133681
patch: } if ( str == $NUMBER$ ) {
rank: 803
score: 98.4183349609375
patch: } if ( out == null )
rank: 803
score: 98.33821323939732
patch: } } switch ( str .
rank: 803
score: 98.20098876953125
patch: } / } * }
rank: 803
score: 98.14481026785714
patch: } } else { if }
rank: 803
score: 98.10194614955357
patch: } else = ( * }
rank: 803
score: 97.84666137695312
patch: } while false }
rank: 803
score: 96.42277526855469
patch: println } {
rank: 804
score: 98.45363362630208
patch: } if ( str == 1 ) {
rank: 804
score: 98.4177017211914
patch: } if ( command == null )
rank: 804
score: 98.33653041294643
patch: } if ( str . )
rank: 804
score: 98.19638061523438
patch: } int } * /
rank: 804
score: 98.07334681919643
patch: } return ch == $STRING$ ;
rank: 804
score: 97.84981079101563
patch: } - 0 :
rank: 804
score: 97.8464599609375
patch: } else if false
rank: 804
score: 96.41876983642578
patch: { } {
rank: 805
score: 98.44873046875
patch: } if ( str ) {
rank: 805
score: 98.41352844238281
patch: } if ( Integer . to CaMeL
rank: 805
score: 98.19373575846355
patch: } } do { }
rank: 805
score: 98.0911356608073
patch: } for ( * }
rank: 805
score: 98.07323201497395
patch: sb . return true ;
rank: 805
score: 97.8468505859375
patch: } ? else {
rank: 805
score: 97.8449462890625
patch: } while false ;
rank: 805
score: 96.41688537597656
patch: } } exit
rank: 806
score: 98.40785217285156
patch: } if ( log != null )
rank: 806
score: 98.1900390625
patch: } } } .
rank: 806
score: 98.09092203776042
patch: } else = false }
rank: 806
score: 98.07137044270833
patch: } catch ( Exception {
rank: 806
score: 97.8450927734375
patch: : return null ;
rank: 806
score: 97.84395751953124
patch: } } false ;
rank: 806
score: 96.41494750976562
patch: for } }
rank: 807
score: 98.4409423828125
patch: } case $STRING$ ;
rank: 807
score: 98.40196990966797
patch: } if ( null == str )
rank: 807
score: 98.33126395089286
patch: } String ( str ) ;
rank: 807
score: 98.18853759765625
patch: } do { } }
rank: 807
score: 97.8441162109375
patch: } catch ( Error
rank: 807
score: 97.84343872070312
patch: / else { }
rank: 807
score: 96.40877532958984
patch: while } }
rank: 808
score: 98.43879699707031
patch: } if ( ! true ) {
rank: 808
score: 98.39755684988839
patch: } if ( ! true )
rank: 808
score: 98.1881103515625
patch: } * } else }
rank: 808
score: 98.14193289620536
patch: } } if } finally {
rank: 808
score: 98.06794738769531
patch: } System . System . finally {
rank: 808
score: 97.84265747070313
patch: } / * in
rank: 808
score: 96.40692901611328
patch: error } /
rank: 809
score: 98.39142717633929
patch: } String ch = $STRING$ ;
rank: 809
score: 98.31735229492188
patch: } } return null ;
rank: 809
score: 98.18751017252605
patch: } return str . }
rank: 809
score: 98.06468963623047
patch: return true ; } return false ;
rank: 809
score: 97.83880615234375
patch: } catch ( str
rank: 809
score: 96.40353393554688
patch: } } |
rank: 810
score: 98.18611653645833
patch: } } new } )
rank: 810
score: 98.0785624186198
patch: } else throws null ;
rank: 810
score: 98.06287384033203
patch: } else return str == null ;
rank: 810
score: 96.40245819091797
patch: } } insert
rank: 811
score: 98.18406982421875
patch: } boolean } }
rank: 811
score: 98.13795166015625
patch: } else break ;
rank: 811
score: 98.07790120442708
patch: } else { true }
rank: 811
score: 97.83720397949219
patch: } * ,
rank: 811
score: 96.40116119384766
patch: } else super
rank: 812
score: 98.42524065290179
patch: } else { case $STRING$ :
rank: 812
score: 98.18017578125
patch: } else { float }
rank: 812
score: 98.0770263671875
patch: } if ( null }
rank: 812
score: 98.0616455078125
patch: } log . case $NUMBER$ : {
rank: 812
score: 97.83643798828125
patch: } * * .
rank: 812
score: 97.82821044921874
patch: } * else }
rank: 812
score: 96.39654541015625
patch: } } Boolean
rank: 813
score: 98.37214878627232
patch: } if ( ! false )
rank: 813
score: 98.17868041992188
patch: } } else * }
rank: 813
score: 98.13629150390625
patch: } int max = }
rank: 813
score: 97.83269500732422
patch: } - 0
rank: 813
score: 96.39421081542969
patch: Displays } /
rank: 814
score: 98.29880196707589
patch: } return null == str ;
rank: 814
score: 98.06886800130208
patch: } else { else ;
rank: 814
score: 97.8318359375
patch: else return false ;
rank: 814
score: 97.8072509765625
patch: } catch 0 }
rank: 814
score: 96.39344787597656
patch: / } {
rank: 815
score: 98.298095703125
patch: } String str = $STRING$ ;
rank: 815
score: 98.17586263020833
patch: / * * } }
rank: 815
score: 98.13291422526042
patch: } else switch ( }
rank: 815
score: 98.05329241071429
patch: return true ; } else {
rank: 815
score: 97.82802124023438
patch: } * $STRING$ ;
rank: 815
score: 96.39278411865234
patch: AUTHORIZATION } }
rank: 816
score: 98.42217145647321
patch: } switch ( count ) {
rank: 816
score: 98.33092389787946
patch: } switch ( ! $STRING$ )
rank: 816
score: 98.29588826497395
patch: case $NUMBER$ : { }
rank: 816
score: 98.17527262369792
patch: } char [ ] }
rank: 816
score: 98.06365966796875
patch: } for ( / }
rank: 816
score: 97.8272933959961
patch: } * static
rank: 816
score: 97.78314208984375
patch: } } if )
rank: 816
score: 96.38650512695312
patch: } } Locale
rank: 817
score: 98.4186019897461
patch: } switch ( list . length )
rank: 817
score: 98.32882254464286
patch: } else { System . else
rank: 817
score: 98.29568917410714
patch: } switch ( ! str .
rank: 817
score: 98.17301432291667
patch: } } . equals }
rank: 817
score: 98.11916097005208
patch: } else do { }
rank: 817
score: 98.0585205078125
patch: } else ( }
rank: 817
score: 98.05198160807292
patch: return true ; } else
rank: 817
score: 97.826806640625
patch: } + $STRING$ ;
rank: 817
score: 97.7822509765625
patch: } } } true
rank: 817
score: 96.38604736328125
patch: ape} /
rank: 818
score: 98.31825474330357
patch: } if ( FALSE ) {
rank: 818
score: 98.28879220145089
patch: } final char . char CaMeL
rank: 818
score: 98.1173807779948
patch: fail ( $STRING$ + }
rank: 818
score: 98.057861328125
patch: } else throw null ;
rank: 818
score: 98.04564666748047
patch: } if ( str == 0 )
rank: 818
score: 97.82622528076172
patch: } + $STRING$
rank: 818
score: 97.78222045898437
patch: } * * else
rank: 818
score: 96.38035583496094
patch: Finalize } /
rank: 819
score: 98.39539337158203
patch: } if ( == $STRING$ ) {
rank: 819
score: 98.28791155133929
patch: } char ch . char CaMeL
rank: 819
score: 98.17104085286458
patch: / } if ( }
rank: 819
score: 98.0547587076823
patch: } else ; if }
rank: 819
score: 97.820361328125
patch: } : / ?
rank: 819
score: 97.7725601196289
patch: } catch true
rank: 819
score: 96.37808227539062
patch: } } float
rank: 820
score: 98.39507293701172
patch: } switch ( - $NUMBER$ ) {
rank: 820
score: 98.28620256696429
patch: } } if ( str .
rank: 820
score: 98.17076619466145
patch: } } false * /
rank: 820
score: 98.11203002929688
patch: } else case $STRING$ :
rank: 820
score: 98.05356852213542
patch: } else { switch }
rank: 820
score: 97.81947631835938
patch: } ; / *
rank: 820
score: 97.77034301757813
patch: else { } }
rank: 820
score: 96.34817504882812
patch: / }
rank: 821
score: 98.391845703125
patch: } case $STRING$ : break ;
rank: 821
score: 98.1707255045573
patch: } try { } }
rank: 821
score: 98.10355631510417
patch: if ( } else }
rank: 821
score: 97.76854248046875
patch: } } catch )
rank: 822
score: 98.28428431919643
patch: switch ( str == null )
rank: 822
score: 98.17039998372395
patch: } } || str }
rank: 822
score: 98.04440307617188
patch: } if ( 1 }
rank: 822
score: 97.81800842285156
patch: return null ;
rank: 822
score: 96.21678670247395
patch: public }
rank: 823
score: 98.29691859654018
patch: } else { case $NUMBER$ :
rank: 823
score: 98.28087506975446
patch: } return Boolean . char CaMeL
rank: 823
score: 98.16842651367188
patch: / * } } }
rank: 823
score: 98.10054524739583
patch: } else { log }
rank: 823
score: 98.03921508789062
patch: } else / ( }
rank: 823
score: 98.03196716308594
patch: } while ( str == $STRING$ )
rank: 824
score: 98.29685465494792
patch: } switch ( FALSE )
rank: 824
score: 98.10036214192708
patch: } } return $STRING$ ;
rank: 824
score: 98.0390869140625
patch: } else for }
rank: 824
score: 97.8114501953125
patch: } / * Boolean
rank: 824
score: 96.01779174804688
patch: ; }
rank: 825
score: 98.37982940673828
patch: } switch ( ch . length )
rank: 825
score: 98.29383196149554
patch: } synchronized ( $STRING$ ) {
rank: 825
score: 98.28034057617188
patch: } try { }
rank: 825
score: 97.80889282226562
patch: } - 1 ,
rank: 825
score: 97.73970947265624
patch: else } * /
rank: 826
score: 98.37980651855469
patch: } return ( str == $STRING$ )
rank: 826
score: 98.29013671875
patch: } / * else
rank: 826
score: 98.03762817382812
patch: } else { set }
rank: 826
score: 97.80725708007813
patch: } : break ;
rank: 826
score: 95.8074951171875
patch: } this
rank: 827
score: 98.3756612141927
patch: } case 0 : {
rank: 827
score: 98.28883870442708
patch: } String ch 0 ;
rank: 827
score: 98.270263671875
patch: if ( ch != $STRING$ )
rank: 827
score: 98.16492716471355
patch: } } || ( }
rank: 827
score: 98.08230590820312
patch: } else throw new }
rank: 827
score: 98.03102620442708
patch: } if ( $NUMBER$ }
rank: 827
score: 97.80722045898438
patch: } + str
rank: 827
score: 95.60301717122395
patch: } super
rank: 828
score: 98.37177385602679
patch: } System . * * /
rank: 828
score: 98.16356404622395
patch: } int } ) ;
rank: 828
score: 98.0799051920573
patch: } return / * }
rank: 828
score: 97.80567626953125
patch: } * $NUMBER$ ;
rank: 828
score: 97.73525390625
patch: else { * }
rank: 828
score: 95.58884684244792
patch: * }
rank: 829
score: 98.26266479492188
patch: } return $STRING$ . ;
rank: 829
score: 98.16307576497395
patch: } } { String }
rank: 829
score: 98.07860310872395
patch: } finally { if }
rank: 829
score: 98.01770891462054
patch: } out . return false ;
rank: 829
score: 97.80445556640625
patch: } / : public
rank: 829
score: 95.5219014485677
patch: AUTHORIZATION }
rank: 830
score: 98.262060546875
patch: switch ( ch )
rank: 830
score: 98.1629638671875
patch: } } ? } }
rank: 830
score: 98.01747131347656
patch: } if ( format == null )
rank: 830
score: 97.73286743164063
patch: } * * *
rank: 830
score: 95.50303141276042
patch: /
rank: 831
score: 98.36440604073661
patch: } else case $NUMBER$ : {
rank: 831
score: 98.15974934895833
patch: } } && ! }
rank: 831
score: 98.0755106608073
patch: } else { finally {
rank: 831
score: 98.01388113839286
patch: } else switch ( str )
rank: 831
score: 97.72554931640624
patch: } catch ) }
rank: 831
score: 95.46905517578125
patch: throw }
rank: 832
score: 98.36051722935268
patch: } if ( $NUMBER$ ) {
rank: 832
score: 98.27934919084821
patch: } if ( str == )
rank: 832
score: 98.25913492838542
patch: } switch ( str ;
rank: 832
score: 98.15826416015625
patch: } for } * /
rank: 832
score: 98.01526489257813
patch: } else continue }
rank: 832
score: 97.79765625
patch: } / * $NUMBER$
rank: 832
score: 97.7184326171875
patch: } } 0 ;
rank: 833
score: 98.255712890625
patch: } } System .
rank: 833
score: 98.15820922851563
patch: } switch ( }
rank: 833
score: 98.01478068033855
patch: } else throws null }
rank: 833
score: 97.797607421875
patch: : case $NUMBER$ :
rank: 833
score: 97.718212890625
patch: } } } 1
rank: 833
score: 95.38922119140625
patch: else else
rank: 834
score: 98.15545043945312
patch: } } default :
rank: 834
score: 98.06897989908855
patch: } catch } return }
rank: 834
score: 98.00985107421874
patch: } if * }
rank: 834
score: 97.79556274414062
patch: } $NUMBER$ else {
rank: 834
score: 97.71505737304688
patch: else { }
rank: 834
score: 95.38688151041667
patch: break }
rank: 835
score: 98.35823277064732
patch: } else case $STRING$ : {
rank: 835
score: 98.24920654296875
patch: } } try {
rank: 835
score: 98.15292358398438
patch: } else { long }
rank: 835
score: 98.06851196289062
patch: } if } finally {
rank: 835
score: 97.789501953125
patch: } / == $STRING$
rank: 835
score: 97.7063720703125
patch: } if true ;
rank: 836
score: 98.35738699776786
patch: } case $NUMBER$ : break ;
rank: 836
score: 97.78892822265625
patch: } $NUMBER$ * /
rank: 836
score: 97.70234985351563
patch: } } finally ;
rank: 836
score: 95.32926432291667
patch: ace }
rank: 837
score: 98.352685546875
patch: } int ch ;
rank: 837
score: 98.2449239095052
patch: } else { String ch
rank: 837
score: 98.14864501953124
patch: } return true }
rank: 837
score: 98.00585174560547
patch: return false ; } return false ;
rank: 837
score: 97.97947387695312
patch: return null ; }
rank: 837
score: 97.7873291015625
patch: } * $NUMBER$ ,
rank: 837
score: 97.7006591796875
patch: / else if }
rank: 837
score: 95.30617268880208
patch: Displays }
rank: 838
score: 98.35049438476562
patch: } if ( str ;
rank: 838
score: 98.24130249023438
patch: } if ( ch .
rank: 838
score: 97.7859375
patch: } ? / *
rank: 838
score: 97.69506225585937
patch: } catch true {
rank: 838
score: 95.27965545654297
patch: {
rank: 839
score: 98.239990234375
patch: } synchronized ( $STRING$ )
rank: 839
score: 97.78251953125
patch: } $NUMBER$ * *
rank: 839
score: 97.69024658203125
patch: } } true ;
rank: 839
score: 95.27428181966145
patch: error }
rank: 840
score: 98.34650530133929
patch: } } case $STRING$ : {
rank: 840
score: 98.2313232421875
patch: } else case $NUMBER$ :
rank: 840
score: 98.1336669921875
patch: } / / }
rank: 840
score: 98.05558471679687
patch: if ( } }
rank: 840
score: 97.99845377604167
patch: } System . finally {
rank: 840
score: 97.78085327148438
patch: finally { try {
rank: 840
score: 97.68640899658203
patch: } catch }
rank: 840
score: 95.26206461588542
patch: Accelerated }
rank: 841
score: 98.34397379557292
patch: } for ( int )
rank: 841
score: 98.23887125651042
patch: switch ( str ) {
rank: 841
score: 98.11521606445312
patch: } } , }
rank: 841
score: 97.95311889648437
patch: } if null ;
rank: 841
score: 97.77574462890625
patch: } / * str
rank: 841
score: 95.25439453125
patch: = }
rank: 842
score: 98.23375447591145
patch: char ch 0 = $STRING$
rank: 842
score: 98.21484375
patch: } switch ( false )
rank: 842
score: 98.11430053710937
patch: } int } }
rank: 842
score: 97.9320556640625
patch: } else false }
rank: 842
score: 97.77471160888672
patch: } continue ;
rank: 842
score: 97.68533935546876
patch: } catch 1 }
rank: 842
score: 95.25293986002605
patch: tracking }
rank: 843
score: 98.23151397705078
patch: } System .
rank: 843
score: 98.21366373697917
patch: } switch < $NUMBER$ :
rank: 843
score: 98.10921478271484
patch: } boolean }
rank: 843
score: 98.0537618001302
patch: } / * ? }
rank: 843
score: 97.769482421875
patch: } / * null
rank: 843
score: 97.68124389648438
patch: } if ) ;
rank: 843
score: 95.22892252604167
patch: verable }
rank: 844
score: 98.3411153157552
patch: } int ch 0 ;
rank: 844
score: 98.21956380208333
patch: } synchronized ( str )
rank: 844
score: 97.68109741210938
patch: / } * /
rank: 844
score: 95.22237141927083
patch: tee }
rank: 845
score: 98.20890299479167
patch: } if ( FALSE )
rank: 845
score: 98.08707885742187
patch: } for } }
rank: 845
score: 97.88370361328126
patch: else if ( }
rank: 845
score: 97.76693725585938
patch: } - 1 )
rank: 845
score: 97.67587280273438
patch: } * if }
rank: 845
score: 95.21436564127605
patch: quals }
rank: 846
score: 98.33194405691964
patch: } switch ( start ) {
rank: 846
score: 98.212646484375
patch: case $NUMBER$ : }
rank: 846
score: 98.20351155598958
patch: } if ( ch instanceof
rank: 846
score: 98.03985595703125
patch: } String format = }
rank: 846
score: 97.76554565429687
patch: } ++ 0 ;
rank: 846
score: 95.20981852213542
patch: } try
rank: 847
score: 98.33138602120536
patch: } case $NUMBER$ : { {
rank: 847
score: 98.0730224609375
patch: / * * }
rank: 847
score: 98.0390116373698
patch: } } , false }
rank: 847
score: 97.96555873325893
patch: } log . case $NUMBER$ :
rank: 847
score: 97.7650146484375
patch: } * * ,
rank: 847
score: 97.667626953125
patch: return false } }
rank: 847
score: 95.20248413085938
patch: } System
rank: 848
score: 98.32676478794643
patch: } } case $NUMBER$ : {
rank: 848
score: 98.2031962076823
patch: } switch ( XML )
rank: 848
score: 98.20226033528645
patch: } switch = $STRING$ ;
rank: 848
score: 97.84625244140625
patch: } if } else
rank: 848
score: 97.76405639648438
patch: } / : }
rank: 848
score: 95.18202718098958
patch: pulse }
rank: 849
score: 98.19753011067708
patch: } / catch ( Exception
rank: 849
score: 98.0559310913086
patch: } int }
rank: 849
score: 97.96056256975446
patch: return str == null ) ;
rank: 849
score: 97.76141967773438
patch: catch ( $STRING$ )
rank: 849
score: 97.662744140625
patch: } while true }
rank: 849
score: 95.18118286132812
patch: ader }
rank: 850
score: 98.19627888997395
patch: } switch ( TRUE )
rank: 850
score: 98.19581095377605
patch: } / * $STRING$ /
rank: 850
score: 98.045556640625
patch: } return str }
rank: 850
score: 98.02634684244792
patch: } int start = }
rank: 850
score: 97.75823974609375
patch: } * $NUMBER$ )
rank: 850
score: 97.66183471679688
patch: } if 0 ;
rank: 850
score: 95.17446899414062
patch: stly }
rank: 851
score: 98.32350376674107
patch: } if ( ch ) {
rank: 851
score: 98.19434611002605
patch: switch ( str . )
rank: 851
score: 98.0454833984375
patch: } } } ?
rank: 851
score: 98.0259297688802
patch: if ( } return }
rank: 851
score: 97.95977783203125
patch: return ch == $STRING$ ;
rank: 851
score: 97.75745239257813
patch: } * $NUMBER$ out
rank: 851
score: 97.65770263671875
patch: } } $STRING$ }
rank: 851
score: 95.16344197591145
patch: judge }
rank: 852
score: 98.3231201171875
patch: } if ( $STRING$ ) {
rank: 852
score: 98.1897481282552
patch: } return new true ;
rank: 852
score: 98.00531005859375
patch: } } do {
rank: 852
score: 97.95662144252232
patch: return ( str == $STRING$ )
rank: 852
score: 97.81116333007813
patch: } if null }
rank: 852
score: 97.75488891601563
patch: } * ) {
rank: 852
score: 97.65427856445312
patch: / * / /
rank: 852
score: 95.16138712565105
patch: if
rank: 853
score: 98.31793212890625
patch: } add ( str ) ;
rank: 853
score: 98.01411743164063
patch: } } ? }
rank: 853
score: 97.95356096540179
patch: } case Boolean . TRUE :
rank: 853
score: 97.75437927246094
patch: } catch (
rank: 853
score: 97.65382080078125
patch: } } * $STRING$
rank: 853
score: 95.13331095377605
patch: tative }
rank: 854
score: 98.3170166015625
patch: } switch ( max ) {
rank: 854
score: 97.98243408203125
patch: } else do {
rank: 854
score: 97.74776458740234
patch: return ) ;
rank: 854
score: 95.12070719401042
patch: CIRCLE }
rank: 855
score: 98.316650390625
patch: } switch ( ) {
rank: 855
score: 98.1844991048177
patch: } switch ( $NUMBER$ )
rank: 855
score: 98.17580159505208
patch: } switch ( true )
rank: 855
score: 97.98060302734375
patch: if ( } else
rank: 855
score: 97.80657958984375
patch: } while }
rank: 855
score: 97.74573364257813
patch: } - 0 )
rank: 855
score: 95.11838785807292
patch: WILD }
rank: 856
score: 98.18063354492188
patch: } } catch ( ?
rank: 856
score: 97.9708251953125
patch: } } } :
rank: 856
score: 97.94499860491071
patch: } ) ; return false ;
rank: 856
score: 97.80654907226562
patch: } return null }
rank: 856
score: 97.743505859375
patch: } catch ( TRUE
rank: 856
score: 97.64898681640625
patch: if null ; }
rank: 856
score: 95.11837768554688
patch: VALIDATOR }
rank: 857
score: 98.1719258626302
patch: } if ( ( str
rank: 857
score: 97.95787963867187
patch: } String } )
rank: 857
score: 97.80368041992188
patch: } for }
rank: 857
score: 97.7431640625
patch: } . else {
rank: 857
score: 95.11474609375
patch: treatment }
rank: 858
score: 98.31139119466145
patch: } case false : {
rank: 858
score: 98.17502848307292
patch: } switch ( System .
rank: 858
score: 97.9407246907552
patch: } case str : {
rank: 858
score: 97.73981323242188
patch: } * $STRING$ :
rank: 858
score: 97.64307861328125
patch: } } null ;
rank: 858
score: 95.1017557779948
patch: subdirectory }
rank: 859
score: 98.17325846354167
patch: } $NUMBER$ / * /
rank: 859
score: 98.16187540690105
patch: } try { else {
rank: 859
score: 97.95530395507812
patch: / } } }
rank: 859
score: 97.938232421875
patch: } return str == false ;
rank: 859
score: 97.73876953125
patch: } * / final
rank: 859
score: 97.631591796875
patch: assert new ) }
rank: 859
score: 95.09537760416667
patch: *
rank: 860
score: 98.30690220424107
patch: } switch ( null ) {
rank: 860
score: 98.17083740234375
patch: } while ( str .
rank: 860
score: 98.16168212890625
patch: } else { for (
rank: 860
score: 97.9512451171875
patch: } } String }
rank: 860
score: 97.93773542131696
patch: return str == $STRING$ ; }
rank: 860
score: 97.72188568115234
patch: } / ;
rank: 860
score: 97.62718505859375
patch: / else } }
rank: 860
score: 95.08396402994792
patch: spouse }
rank: 861
score: 98.17052612304687
patch: switch ( str .
rank: 861
score: 97.93586077008929
patch: } return Boolean . EMPTY ;
rank: 861
score: 97.70780944824219
patch: break $NUMBER$ :
rank: 861
score: 97.62633514404297
patch: } catch )
rank: 861
score: 95.07616170247395
patch: chng }
rank: 862
score: 98.29749407087054
patch: } case $STRING$ : { {
rank: 862
score: 98.164794921875
patch: } return str ;
rank: 862
score: 97.93526785714286
patch: } else switch ( str .
rank: 862
score: 97.9349365234375
patch: } System . }
rank: 862
score: 97.78252563476562
patch: } else synchronized }
rank: 862
score: 97.70677947998047
patch: } : .
rank: 862
score: 95.07578531901042
patch: INTERCEPTOR }
rank: 863
score: 98.15860595703126
patch: } else { ;
rank: 863
score: 97.93191528320312
patch: } long } }
rank: 863
score: 97.78013916015625
patch: } else arraycopy }
rank: 863
score: 97.69753011067708
patch: } .
rank: 863
score: 97.6191162109375
patch: / * } /
rank: 863
score: 95.0724385579427
patch: csn }
rank: 864
score: 98.28636823381696
patch: } append ( str ) ;
rank: 864
score: 98.15636596679687
patch: } return $STRING$ .
rank: 864
score: 97.93092041015625
patch: } ? if }
rank: 864
score: 97.92851911272321
patch: } return ch == null ;
rank: 864
score: 97.77728271484375
patch: } if * /
rank: 864
score: 97.67725372314453
patch: * * /
rank: 864
score: 95.06581624348958
patch: british }
rank: 865
score: 98.14763793945312
patch: } } for (
rank: 865
score: 97.93018341064453
patch: / * }
rank: 865
score: 97.92174682617187
patch: } else else {
rank: 865
score: 97.6529769897461
patch: break false ;
rank: 865
score: 97.61509399414062
patch: } * else /
rank: 865
score: 95.06002807617188
patch: charts }
rank: 866
score: 98.2826639811198
patch: } clear ( ) ;
rank: 866
score: 97.92691650390626
patch: } * } finally
rank: 866
score: 97.92093912760417
patch: } return true ; }
rank: 866
score: 97.90245361328125
patch: if ( ! }
rank: 866
score: 97.75136108398438
patch: return } * }
rank: 866
score: 97.64879608154297
patch: } * $NUMBER$
rank: 866
score: 97.59931030273438
patch: } while true ;
rank: 866
score: 95.05294799804688
patch: Clustering }
rank: 867
score: 98.12328491210937
patch: switch ( name )
rank: 867
score: 97.64348602294922
patch: } $NUMBER$ .
rank: 867
score: 97.588134765625
patch: / else {
rank: 867
score: 95.05214436848958
patch: avalue }
rank: 868
score: 98.11944580078125
patch: } System . else
rank: 868
score: 97.90902709960938
patch: } final } }
rank: 868
score: 97.89669189453124
patch: } } boolean }
rank: 868
score: 97.6044921875
patch: else {
rank: 868
score: 97.5828125
patch: } } 1 ;
rank: 868
score: 95.05027262369792
patch: trig }
rank: 869
score: 97.9774169921875
patch: } String ch 0
rank: 869
score: 97.9071533203125
patch: } ? * }
rank: 869
score: 97.89554443359376
patch: } } int }
rank: 869
score: 97.74258422851562
patch: return } * /
rank: 869
score: 97.59130859375
patch: } / &
rank: 869
score: 97.5796875
patch: } } $STRING$ {
rank: 869
score: 95.04906209309895
patch: textures }
rank: 870
score: 97.58837890625
patch: } ) .
rank: 870
score: 95.04789225260417
patch: bls }
rank: 871
score: 98.26739501953125
patch: } else { ; }
rank: 871
score: 97.91128104073661
patch: } return str == str ;
rank: 871
score: 97.90362548828125
patch: } String str }
rank: 871
score: 97.583251953125
patch: } / >>
rank: 871
score: 97.57132568359376
patch: } * if )
rank: 871
score: 95.04669189453125
patch: MOVZX }
rank: 872
score: 98.26727294921875
patch: } return ( false ) ;
rank: 872
score: 97.72830200195312
patch: } else else }
rank: 872
score: 97.58318328857422
patch: out == null
rank: 872
score: 95.03929646809895
patch: quartz }
rank: 873
score: 98.25662667410714
patch: } if ( TRUE ) {
rank: 873
score: 97.57923126220703
patch: break true ;
rank: 873
score: 95.03169759114583
patch: ntd }
rank: 874
score: 98.07874755859375
patch: } return FALSE ;
rank: 874
score: 97.90634591238839
patch: } return str != null ;
rank: 874
score: 97.895654296875
patch: } ? } }
rank: 874
score: 97.56865234375
patch: } } catch false
rank: 875
score: 98.25490025111607
patch: } synchronized ( false ) {
rank: 875
score: 98.05972900390626
patch: case 1 : {
rank: 875
score: 97.94724731445312
patch: } if ( new
rank: 875
score: 97.89332275390625
patch: } if } )
rank: 875
score: 97.8582763671875
patch: } ? * /
rank: 875
score: 97.56746673583984
patch: / else }
rank: 875
score: 97.54735565185547
patch: } * :
rank: 875
score: 95.02894083658855
patch: failonerror }
rank: 876
score: 97.84130859375
patch: } else throws }
rank: 876
score: 97.69512176513672
patch: return false }
rank: 876
score: 97.56544189453125
patch: } catch $NUMBER$ }
rank: 876
score: 97.54621124267578
patch: } $NUMBER$ :
rank: 876
score: 95.027587890625
patch: environ }
rank: 877
score: 98.05211181640625
patch: } } false :
rank: 877
score: 97.94144897460937
patch: } catch ( _
rank: 877
score: 97.89960588727679
patch: return str == null ; }
rank: 877
score: 97.883056640625
patch: / } else {
rank: 877
score: 97.83869018554688
patch: } str = }
rank: 877
score: 97.69208984375
patch: } else { do
rank: 877
score: 97.5361099243164
patch: } : }
rank: 877
score: 95.02480061848958
patch: kd }
rank: 878
score: 98.25301688058036
patch: } int ch = $STRING$ ;
rank: 878
score: 97.88219604492187
patch: } while } }
rank: 878
score: 97.68544921875
patch: } else while }
rank: 878
score: 97.56312255859375
patch: if false } }
rank: 878
score: 97.53602600097656
patch: return $STRING$ ;
rank: 878
score: 95.02337646484375
patch: JSPC }
rank: 879
score: 98.24942016601562
patch: } case null : {
rank: 879
score: 98.04664306640625
patch: } try { {
rank: 879
score: 97.89379010881696
patch: return ( str . substring (
rank: 879
score: 97.87974853515625
patch: } boolean } )
rank: 879
score: 97.6763427734375
patch: if ( false }
rank: 879
score: 97.5579833984375
patch: } / catch )
rank: 879
score: 97.53565979003906
patch: return $NUMBER$ ;
rank: 879
score: 95.02225748697917
patch: Responders }
rank: 880
score: 98.03815307617188
patch: } } break ;
rank: 880
score: 97.87869873046876
patch: } for ( int
rank: 880
score: 97.87698364257812
patch: } ? ? }
rank: 880
score: 97.53343200683594
patch: * $NUMBER$ /
rank: 880
score: 95.0155537923177
patch: archiver }
rank: 881
score: 98.23670654296875
patch: } int ch {
rank: 881
score: 97.88247244698661
patch: } System . catch ( Exception
rank: 881
score: 97.875341796875
patch: } Object } }
rank: 881
score: 97.8353271484375
patch: if } else {
rank: 881
score: 97.51668294270833
patch: finally {
rank: 881
score: 95.01544189453125
patch: Refactorings }
rank: 882
score: 98.23085530598958
patch: } close ( ) ;
rank: 882
score: 97.86790771484375
patch: } return } ;
rank: 882
score: 97.648095703125
patch: } else , }
rank: 882
score: 97.55413818359375
patch: } while 0 ;
rank: 882
score: 97.51254272460938
patch: } {
rank: 882
score: 95.01497395833333
patch: logger }
rank: 883
score: 98.03195190429688
patch: } } / ?
rank: 883
score: 97.8646484375
patch: } switch 0 ]
rank: 883
score: 97.81454467773438
patch: if ( ( }
rank: 883
score: 97.64288330078125
patch: } / / ;
rank: 883
score: 97.49003092447917
patch: } false
rank: 883
score: 95.01422119140625
patch: watchdog }
rank: 884
score: 98.03084716796874
patch: if ( str .
rank: 884
score: 97.8591796875
patch: } int ch 0
rank: 884
score: 97.4874267578125
patch: throws $STRING$ ;
rank: 884
score: 95.01411946614583
patch: Limits }
rank: 885
score: 98.2060791015625
patch: } return 0 ;
rank: 885
score: 98.01216430664063
patch: case $STRING$ : {
rank: 885
score: 97.86073608398438
patch: } float } }
rank: 885
score: 97.8601582845052
patch: return str == str ;
rank: 885
score: 97.62453002929688
patch: } else try {
rank: 885
score: 97.48101806640625
patch: } / $NUMBER$
rank: 885
score: 95.0089823404948
patch: Setters }
rank: 886
score: 98.20546468098958
patch: } finally return false ;
rank: 886
score: 98.00755615234375
patch: } try { ;
rank: 886
score: 97.85326131184895
patch: } return return false ;
rank: 886
score: 97.85177001953124
patch: } try { else
rank: 886
score: 97.620263671875
patch: = null ; }
rank: 886
score: 97.52880859375
patch: else if } }
rank: 886
score: 97.4802017211914
patch: * ; }
rank: 886
score: 95.0084228515625
patch: ttypes }
rank: 887
score: 98.00640258789062
patch: } } / :
rank: 887
score: 97.61817016601563
patch: else return false }
rank: 887
score: 97.52639770507812
patch: } } $NUMBER$ ;
rank: 887
score: 97.47517395019531
patch: case 0 :
rank: 887
score: 95.00779215494792
patch: dz }
rank: 888
score: 98.00567016601562
patch: } String System .
rank: 888
score: 97.84095458984375
patch: } else { final
rank: 888
score: 97.82196807861328
patch: } long }
rank: 888
score: 97.6142822265625
patch: } else void }
rank: 888
score: 97.5258544921875
patch: else } } }
rank: 888
score: 97.47111511230469
patch: } : ;
rank: 888
score: 95.0045166015625
patch: paints }
rank: 889
score: 98.19620768229167
patch: } System . * /
rank: 889
score: 97.83988444010417
patch: } str = $STRING$ ;
rank: 889
score: 97.81832275390624
patch: default } else {
rank: 889
score: 97.60968017578125
patch: } else true }
rank: 889
score: 97.5257568359375
patch: * * * /
rank: 889
score: 97.45435333251953
patch: in == null
rank: 889
score: 95.00428263346355
patch: conflicted }
rank: 890
score: 98.19619140625
patch: } case $STRING$ {
rank: 890
score: 97.99419555664062
patch: } return str .
rank: 890
score: 97.8298583984375
patch: } char ch 0
rank: 890
score: 97.45256042480469
patch: continue $NUMBER$ ;
rank: 890
score: 94.99991861979167
patch: sad }
rank: 891
score: 98.19603474934895
patch: } return - $NUMBER$ ;
rank: 891
score: 97.98900146484375
patch: } try { Boolean
rank: 891
score: 97.81265258789062
patch: } new } }
rank: 891
score: 97.60197143554687
patch: } else exit }
rank: 891
score: 94.99069213867188
patch: Clas }
rank: 892
score: 97.976318359375
patch: switch ( value )
rank: 892
score: 97.8067626953125
patch: return true ; break ;
rank: 892
score: 97.79364624023438
patch: return } else {
rank: 892
score: 97.60098876953126
patch: } boolean * }
rank: 892
score: 97.4328842163086
patch: } ? {
rank: 892
score: 94.98988850911458
patch: LITIES }
rank: 893
score: 97.81007080078125
patch: } int } )
rank: 893
score: 97.78665771484376
patch: } else continue ;
rank: 893
score: 97.59961547851563
patch: } else int }
rank: 893
score: 97.42881774902344
patch: : / *
rank: 893
score: 94.988525390625
patch: Pwd }
rank: 894
score: 98.17997233072917
patch: } / * / {
rank: 894
score: 97.97007446289062
patch: switch ( start )
rank: 894
score: 97.80504150390625
patch: } / } else
rank: 894
score: 97.80088297526042
patch: return str == false ;
rank: 894
score: 97.41940307617188
patch: } * {
rank: 894
score: 94.98720296223958
patch: sfe }
rank: 895
score: 97.79823811848958
patch: } str = str ;
rank: 895
score: 97.78203125
patch: } value = }
rank: 895
score: 97.40992228190105
patch: } )
rank: 895
score: 94.984130859375
patch: dominators }
rank: 896
score: 97.95794677734375
patch: } String str ;
rank: 896
score: 97.79555053710938
patch: } } default ?
rank: 896
score: 97.79392496744792
patch: return false ; break ;
rank: 896
score: 97.7786376953125
patch: } else default :
rank: 896
score: 97.588671875
patch: } else false ;
rank: 896
score: 97.40117645263672
patch: } $STRING$ .
rank: 896
score: 94.9833984375
patch: Recreate }
rank: 897
score: 97.7955322265625
patch: } double } }
rank: 897
score: 97.581591796875
patch: } else + }
rank: 897
score: 97.39730834960938
patch: } / 1
rank: 897
score: 94.97959391276042
patch: Compliant }
rank: 898
score: 98.16785685221355
patch: } case $STRING$ * /
rank: 898
score: 97.94183349609375
patch: { return false ;
rank: 898
score: 97.57979125976563
patch: } else catch }
rank: 898
score: 97.38529205322266
patch: return FALSE ;
rank: 898
score: 94.97788492838542
patch: codesource }
rank: 899
score: 97.937939453125
patch: } return TRUE ;
rank: 899
score: 97.79142456054687
patch: } * } )
rank: 899
score: 97.7847412109375
patch: return ( str .
rank: 899
score: 97.37478637695312
patch: throw $STRING$ ;
rank: 899
score: 94.97406005859375
patch: Poster }
rank: 900
score: 97.78667602539062
patch: } out . }
rank: 900
score: 97.78357950846355
patch: return true ; } }
rank: 900
score: 97.36788940429688
patch: / * *
rank: 900
score: 94.97222900390625
patch: updateable }
rank: 901
score: 97.78370971679688
patch: } } while }
rank: 901
score: 97.7824198404948
patch: } if ( ! str
rank: 901
score: 97.74829711914063
patch: } else next }
rank: 901
score: 97.55726318359375
patch: } else add }
rank: 901
score: 97.36763000488281
patch: } * boolean
rank: 901
score: 97.30195617675781
patch: return true }
rank: 901
score: 94.9684549967448
patch: Tooltips }
rank: 902
score: 98.12911987304688
patch: } throw null ;
rank: 902
score: 97.7783447265625
patch: } return ! }
rank: 902
score: 97.7570556640625
patch: } / * )
rank: 902
score: 97.55540771484375
patch: return true } }
rank: 902
score: 97.3664779663086
patch: } ? ;
rank: 902
score: 97.25255584716797
patch: } catch $STRING$
rank: 902
score: 94.96826171875
patch: lbase }
rank: 903
score: 97.7780990600586
patch: } } )
rank: 903
score: 97.36419677734375
patch: } / :
rank: 903
score: 97.22734069824219
patch: if false }
rank: 903
score: 94.96820068359375
patch: tmf }
rank: 904
score: 97.7771728515625
patch: } ) * /
rank: 904
score: 97.75107421875
patch: } for ( )
rank: 904
score: 97.35890197753906
patch: } ; }
rank: 904
score: 94.96795654296875
patch: modelgroup }
rank: 905
score: 98.08275756835937
patch: } boolean ch {
rank: 905
score: 97.7753662109375
patch: } final String }
rank: 905
score: 97.7209228515625
patch: / * * /
rank: 905
score: 97.54120635986328
patch: else if }
rank: 905
score: 97.34906005859375
patch: } / as
rank: 905
score: 97.2184829711914
patch: } catch null
rank: 905
score: 94.96646118164062
patch: dse }
rank: 906
score: 98.07041015625
patch: } return $NUMBER$ ;
rank: 906
score: 97.89157104492188
patch: switch ( null )
rank: 906
score: 97.77529907226562
patch: } ) ; }
rank: 906
score: 97.34237670898438
patch: } / Map
rank: 906
score: 94.96638997395833
patch: mbs }
rank: 907
score: 98.02870483398438
patch: } case $STRING$ ?
rank: 907
score: 97.77131958007813
patch: } } ? ?
rank: 907
score: 97.758984375
patch: } case null ;
rank: 907
score: 97.714013671875
patch: } final int }
rank: 907
score: 97.47557067871094
patch: } break }
rank: 907
score: 97.34147644042969
patch: throw str ;
rank: 907
score: 94.96592203776042
patch: programmer }
rank: 908
score: 97.88778076171874
patch: } return ) ;
rank: 908
score: 97.76846923828126
patch: } } new }
rank: 908
score: 97.75819905598958
patch: } if ( str )
rank: 908
score: 97.70043334960937
patch: } else new }
rank: 908
score: 97.33987426757812
patch: } ) ?
rank: 908
score: 97.18521118164062
patch: return 0 ;
rank: 908
score: 94.96507771809895
patch: low}
rank: 909
score: 98.01585693359375
patch: } case $NUMBER$ ;
rank: 909
score: 97.758056640625
patch: } switch ( count )
rank: 909
score: 97.70286560058594
patch: } static :
rank: 909
score: 94.96396891276042
patch: FY }
rank: 910
score: 97.8841552734375
patch: / * $NUMBER$ /
rank: 910
score: 97.32369995117188
patch: } / not
rank: 910
score: 97.14202880859375
patch: / else ;
rank: 910
score: 94.96333821614583
patch: Unchanged }
rank: 911
score: 97.7583740234375
patch: default : } }
rank: 911
score: 97.69227905273438
patch: / * } else
rank: 911
score: 97.60623168945312
patch: } default :
rank: 911
score: 97.31996154785156
patch: } ? .
rank: 911
score: 97.12626647949219
patch: assert false ;
rank: 911
score: 94.96272277832031
patch: ;
rank: 912
score: 98.00648193359375
patch: } if ( ;
rank: 912
score: 97.87049560546875
patch: } return Boolean ;
rank: 912
score: 97.74910888671874
patch: } byte } }
rank: 912
score: 97.31277465820312
patch: } / iterator
rank: 912
score: 97.12227630615234
patch: assert false }
rank: 912
score: 94.96002197265625
patch: verification }
rank: 913
score: 97.8674560546875
patch: { return true ;
rank: 913
score: 97.7384033203125
patch: } switch } }
rank: 913
score: 97.73161010742187
patch: } / * :
rank: 913
score: 97.68120727539062
patch: } else replace }
rank: 913
score: 97.31217956542969
patch: } . {
rank: 913
score: 94.95895385742188
patch: lcurly }
rank: 914
score: 97.97745361328126
patch: } boolean * /
rank: 914
score: 97.73405151367187
patch: } } : }
rank: 914
score: 97.68116455078125
patch: } else throw }
rank: 914
score: 97.31082916259766
patch: } / 0
rank: 914
score: 97.12101745605469
patch: else { *
rank: 914
score: 94.95810953776042
patch: procname }
rank: 915
score: 97.725439453125
patch: } in . }
rank: 915
score: 97.53828430175781
patch: * $STRING$ ;
rank: 915
score: 97.31015014648438
patch: } : ,
rank: 915
score: 94.95460001627605
patch: Approximation }
rank: 916
score: 97.72045135498047
patch: } Object }
rank: 916
score: 97.67156982421875
patch: / * /
rank: 916
score: 97.32308959960938
patch: return null }
rank: 916
score: 94.95254516601562
patch: wtk }
rank: 917
score: 97.71869506835938
patch: } else || }
rank: 917
score: 97.68297119140625
patch: } case ) {
rank: 917
score: 97.66891479492188
patch: fail ( $STRING$ }
rank: 917
score: 97.30057525634766
patch: } * null
rank: 917
score: 94.95133463541667
patch: Cause }
rank: 918
score: 97.84711303710938
patch: switch ( key )
rank: 918
score: 97.67385864257812
patch: } / * {
rank: 918
score: 97.29195404052734
patch: throw value ;
rank: 918
score: 97.26438903808594
patch: } null }
rank: 918
score: 94.95068359375
patch: langpack }
rank: 919
score: 97.95655517578125
patch: } if ( {
rank: 919
score: 97.83742065429688
patch: case $NUMBER$ : :
rank: 919
score: 97.7156982421875
patch: } } . :
rank: 919
score: 97.67315673828125
patch: } if ( str
rank: 919
score: 97.28284454345703
patch: } / .
rank: 919
score: 97.25875854492188
patch: } else do
rank: 919
score: 97.09486389160156
patch: } finally ;
rank: 919
score: 94.94596354166667
patch: Mbox }
rank: 920
score: 97.25347900390625
patch: } * public
rank: 920
score: 94.94576009114583
patch: ape}
rank: 921
score: 97.93885498046875
patch: } return 1 ;
rank: 921
score: 97.83408203125
patch: } String $STRING$ ;
rank: 921
score: 97.70624389648438
patch: } String value }
rank: 921
score: 97.41122436523438
patch: } String ch
rank: 921
score: 97.2515869140625
patch: } / $STRING$
rank: 921
score: 97.22543334960938
patch: else return }
rank: 921
score: 94.9457295735677
patch: bldg }
rank: 922
score: 97.93132934570312
patch: } case $STRING$ }
rank: 922
score: 97.83256225585937
patch: } else for (
rank: 922
score: 97.24990844726562
patch: break $NUMBER$ }
rank: 922
score: 97.21554565429688
patch: } ( }
rank: 922
score: 97.08602905273438
patch: else * }
rank: 922
score: 94.94401041666667
patch: yloc }
rank: 923
score: 97.9298828125
patch: } case $NUMBER$ ?
rank: 923
score: 97.69754638671876
patch: } / } *
rank: 923
score: 97.63577880859376
patch: fail } else {
rank: 923
score: 97.35388946533203
patch: } int value
rank: 923
score: 97.24523162841797
patch: false ; }
rank: 923
score: 97.16281127929688
patch: } synchronized }
rank: 923
score: 94.94164021809895
patch: Sell }
rank: 924
score: 97.69264221191406
patch: } float }
rank: 924
score: 97.59171295166016
patch: } double }
rank: 924
score: 97.34241485595703
patch: } int 0
rank: 924
score: 97.06805419921875
patch: } ++ }
rank: 924
score: 94.94136555989583
patch: eler }
rank: 925
score: 97.82258911132813
patch: } } $STRING$ :
rank: 925
score: 97.58987426757812
patch: } do {
rank: 925
score: 97.24119567871094
patch: } / ++
rank: 925
score: 97.10697937011719
patch: } else try
rank: 925
score: 94.93992106119792
patch: thf }
rank: 926
score: 97.63745880126953
patch: } false ;
rank: 926
score: 97.240234375
patch: } in .
rank: 926
score: 97.1031265258789
patch: } start }
rank: 926
score: 94.80525970458984
patch: print
rank: 927
score: 97.89297485351562
patch: } finally { {
rank: 927
score: 97.8197021484375
patch: } $NUMBER$ $NUMBER$ /
rank: 927
score: 97.2366943359375
patch: e == null
rank: 927
score: 97.08210754394531
patch: break } }
rank: 927
score: 97.04264831542969
patch: } if false
rank: 927
score: 94.47630310058594
patch: return
rank: 928
score: 97.32306671142578
patch: * $STRING$ :
rank: 928
score: 97.22456359863281
patch: + str ;
rank: 928
score: 97.08102416992188
patch: } switch }
rank: 928
score: 97.03239440917969
patch: * * }
rank: 928
score: 94.272705078125
patch: public
rank: 929
score: 97.6185546875
patch: return return false ;
rank: 929
score: 97.0761947631836
patch: } null ;
rank: 930
score: 97.62894439697266
patch: case } }
rank: 930
score: 97.38079833984375
patch: fail ( }
rank: 930
score: 97.3099136352539
patch: } int ch
rank: 930
score: 97.21516418457031
patch: } + 1
rank: 930
score: 97.06712341308594
patch: } , }
rank: 930
score: 97.01073455810547
patch: catch null }
rank: 930
score: 93.64918518066406
patch: set
rank: 931
score: 97.60444946289063
patch: return return true ;
rank: 931
score: 97.30342102050781
patch: } if (
rank: 931
score: 97.21073404947917
patch: } $STRING$
rank: 931
score: 97.04786682128906
patch: } true }
rank: 931
score: 93.56524658203125
patch: logger
rank: 932
score: 97.620849609375
patch: } byte }
rank: 932
score: 97.3018569946289
patch: } int lower
rank: 932
score: 97.20365905761719
patch: } / extends
rank: 932
score: 97.04495239257812
patch: ; } else
rank: 932
score: 97.01057434082031
patch: catch null ;
rank: 932
score: 93.52900695800781
patch: throws
rank: 933
score: 97.87279052734375
patch: } case $NUMBER$ {
rank: 933
score: 97.60400390625
patch: } ? }
rank: 933
score: 97.3544692993164
patch: } short }
rank: 933
score: 97.29386901855469
patch: * $STRING$ .
rank: 933
score: 97.20355987548828
patch: } + }
rank: 933
score: 96.9962158203125
patch: } final }
rank: 933
score: 93.3914794921875
patch: try
rank: 934
score: 97.19893646240234
patch: : ; }
rank: 934
score: 96.93476104736328
patch: } false }
rank: 934
score: 93.15786743164062
patch: Gms
rank: 935
score: 97.83208618164062
patch: } Object ch {
rank: 935
score: 97.5424560546875
patch: } if ( )
rank: 935
score: 97.19583129882812
patch: } $STRING$ ;
rank: 935
score: 96.99441528320312
patch: finally { }
rank: 935
score: 96.92242431640625
patch: break } else
rank: 935
score: 93.08638763427734
patch: ir@@
rank: 936
score: 97.19578552246094
patch: : else {
rank: 936
score: 93.05938720703125
patch: EXAM@@
rank: 937
score: 97.53855590820312
patch: } finally { else
rank: 937
score: 97.53217315673828
patch: } Process }
rank: 937
score: 97.2700424194336
patch: } int str
rank: 937
score: 93.05689239501953
patch: System
rank: 938
score: 97.53651123046875
patch: flush ( ) ;
rank: 938
score: 97.26802825927734
patch: } Object ch
rank: 938
score: 97.19304656982422
patch: $STRING$ ; }
rank: 938
score: 96.96015930175781
patch: else * /
rank: 938
score: 93.03662109375
patch: Telnet
rank: 939
score: 97.5154037475586
patch: } Integer }
rank: 939
score: 97.24009704589844
patch: } finally }
rank: 939
score: 97.18912506103516
patch: return TRUE ;
rank: 939
score: 96.95977020263672
patch: return 0 }
rank: 939
score: 96.87234497070312
patch: } set }
rank: 939
score: 93.00733947753906
patch: case
rank: 940
score: 97.51403045654297
patch: } ) }
rank: 940
score: 97.23490905761719
patch: default * /
rank: 940
score: 97.1815185546875
patch: } $NUMBER$ ;
rank: 940
score: 96.94815063476562
patch: if true }
rank: 940
score: 92.97407531738281
patch: Osr
rank: 941
score: 97.47929382324219
patch: } Boolean }
rank: 941
score: 96.9435043334961
patch: / catch }
rank: 941
score: 96.86282348632812
patch: } true ;
rank: 941
score: 92.97151184082031
patch: alig@@
rank: 942
score: 97.65695190429688
patch: } case $STRING$
rank: 942
score: 97.51411437988281
patch: } case )
rank: 942
score: 96.92105865478516
patch: } * int
rank: 942
score: 96.84672546386719
patch: } this }
rank: 942
score: 92.96929931640625
patch: SQL@@
rank: 943
score: 97.22279357910156
patch: } String CaMeL
rank: 943
score: 97.17298889160156
patch: } / string
rank: 943
score: 96.839599609375
patch: } default }
rank: 943
score: 92.94990539550781
patch: Addi@@
rank: 944
score: 97.49671936035156
patch: } String $STRING$
rank: 944
score: 97.46298217773438
patch: * / }
rank: 944
score: 97.19966125488281
patch: } switch 0
rank: 944
score: 97.17120361328125
patch: } Float }
rank: 944
score: 97.17086791992188
patch: } ) :
rank: 944
score: 96.89915466308594
patch: } if )
rank: 944
score: 92.94783782958984
patch: LOG
rank: 945
score: 97.47482299804688
patch: } str {
rank: 945
score: 97.45645141601562
patch: default : }
rank: 945
score: 97.4521484375
patch: } String {
rank: 945
score: 97.17061614990234
patch: } / %
rank: 945
score: 96.89451599121094
patch: value } }
rank: 945
score: 92.94294738769531
patch: JI@@
rank: 946
score: 97.55370330810547
patch: } return ;
rank: 946
score: 97.42755889892578
patch: } && }
rank: 946
score: 97.18023681640625
patch: } int 1
rank: 946
score: 97.14426676432292
patch: : {
rank: 946
score: 97.14191436767578
patch: true * /
rank: 946
score: 92.93268585205078
patch: this
rank: 947
score: 97.40023803710938
patch: } Double }
rank: 947
score: 97.17505645751953
patch: } String )
rank: 947
score: 97.13023885091145
patch: : ;
rank: 947
score: 97.12458801269531
patch: this . }
rank: 947
score: 96.79753112792969
patch: } Thread }
rank: 947
score: 92.927001953125
patch: int
rank: 948
score: 97.51708984375
patch: } boolean {
rank: 948
score: 97.42909240722656
patch: } char CaMeL
rank: 948
score: 97.1274922688802
patch: continue ;
rank: 948
score: 92.92486572265625
patch: posed
rank: 949
score: 97.51457977294922
patch: } case $NUMBER$
rank: 949
score: 97.4170150756836
patch: return str ;
rank: 949
score: 97.14734649658203
patch: } long str
rank: 949
score: 97.11803436279297
patch: :
rank: 949
score: 92.91401672363281
patch: acceler@@
rank: 950
score: 97.51126098632812
patch: } switch (
rank: 950
score: 97.41220092773438
patch: return ; }
rank: 950
score: 97.38325500488281
patch: } in }
rank: 950
score: 97.13362884521484
patch: } synchronized (
rank: 950
score: 97.08961995442708
patch: } true
rank: 950
score: 92.91294860839844
patch: segmen@@
rank: 951
score: 97.39240264892578
patch: } $STRING$ :
rank: 951
score: 96.76438903808594
patch: { else {
rank: 951
score: 92.91117858886719
patch: ffec@@
rank: 952
score: 97.39854431152344
patch: } break {
rank: 952
score: 97.13279724121094
patch: } String str
rank: 952
score: 96.92828369140625
patch: * $STRING$
rank: 952
score: 92.90365600585938
patch: Nano
rank: 953
score: 97.37999725341797
patch: case null :
rank: 953
score: 96.73918914794922
patch: ; else {
rank: 953
score: 96.4206034342448
patch: } catch
rank: 953
score: 92.874755859375
patch: tracking
rank: 954
score: 97.35954284667969
patch: } . }
rank: 954
score: 97.33773803710938
patch: case $STRING$ }
rank: 954
score: 97.05512237548828
patch: for ( }
rank: 954
score: 96.87060546875
patch: / *
rank: 954
score: 96.7347640991211
patch: ; if }
rank: 954
score: 96.3911844889323
patch: / else
rank: 954
score: 92.87455749511719
patch: ATTACK@@
rank: 955
score: 97.35035705566406
patch: } str ;
rank: 955
score: 97.33451843261719
patch: } out }
rank: 955
score: 97.1104736328125
patch: } String .
rank: 955
score: 97.04442596435547
patch: false * /
rank: 955
score: 96.84906005859375
patch: logger .
rank: 955
score: 96.72787475585938
patch: = } else
rank: 955
score: 92.8739013671875
patch: fre@@
rank: 956
score: 97.03672790527344
patch: } void }
rank: 956
score: 96.72703552246094
patch: } continue }
rank: 956
score: 96.6216532389323
patch: log .
rank: 956
score: 92.8625717163086
patch: syslog
rank: 957
score: 97.35041809082031
patch: } err .
rank: 957
score: 97.10517120361328
patch: } int line
rank: 957
score: 97.01799774169922
patch: if } else
rank: 957
score: 96.5732421875
patch: try {
rank: 957
score: 92.8600082397461
patch: CE@@
rank: 958
score: 97.31029510498047
patch: } || }
rank: 958
score: 96.55758666992188
patch: * ?
rank: 958
score: 92.84796905517578
patch: gram@@
rank: 959
score: 97.28746032714844
patch: default * }
rank: 959
score: 97.097412109375
patch: } ( (
rank: 959
score: 96.54137166341145
patch: / ?
rank: 959
score: 96.06282552083333
patch: } if
rank: 959
score: 92.84310913085938
patch: OVERRI@@
rank: 960
score: 96.53097534179688
patch: LOG .
rank: 960
score: 95.94254557291667
patch: while }
rank: 960
score: 92.84197998046875
patch: Stack
rank: 961
score: 97.32557678222656
patch: } $NUMBER$ /
rank: 961
score: 97.2759780883789
patch: } { else
rank: 961
score: 96.5283915201823
patch: } ,
rank: 961
score: 92.8369140625
patch: gather
rank: 962
score: 97.21717834472656
patch: } char }
rank: 962
score: 92.83235168457031
patch: Mine
rank: 963
score: 97.27471923828125
patch: } out .
rank: 963
score: 96.5247090657552
patch: } _
rank: 963
score: 96.49234008789062
patch: } final
rank: 963
score: 92.832275390625
patch: Indi@@
rank: 964
score: 97.19996643066406
patch: default } }
rank: 964
score: 96.5123291015625
patch: Collections .
rank: 964
score: 96.47983805338542
patch: } String
rank: 964
score: 96.29444376627605
patch: } finally
rank: 964
score: 95.71302286783855
patch: } default
rank: 964
score: 92.82856750488281
patch: Guesser
rank: 965
score: 97.1942138671875
patch: } try }
rank: 965
score: 96.49538167317708
patch: } $NUMBER$
rank: 965
score: 96.35448201497395
patch: } boolean
rank: 966
score: 97.25740051269531
patch: } case ;
rank: 966
score: 96.96917724609375
patch: } |= }
rank: 966
score: 96.33658854166667
patch: } int
rank: 966
score: 96.14829508463542
patch: ; else
rank: 966
score: 95.67873128255208
patch: else ;
rank: 966
score: 92.81573486328125
patch: fen@@
rank: 967
score: 96.44022623697917
patch: : .
rank: 967
score: 95.67673746744792
patch: : }
rank: 967
score: 92.80819702148438
patch: CLIP
rank: 968
score: 97.24031829833984
patch: } static {
rank: 968
score: 97.14898681640625
patch: } clear }
rank: 968
score: 96.4288330078125
patch: : )
rank: 968
score: 96.16707356770833
patch: } static
rank: 968
score: 96.00379435221355
patch: , }
rank: 968
score: 92.8079833984375
patch: Reducer
rank: 969
score: 97.2398681640625
patch: } static .
rank: 969
score: 97.18272399902344
patch: return ( str
rank: 969
score: 97.11190032958984
patch: } format }
rank: 969
score: 96.40843709309895
patch: $STRING$ ;
rank: 969
score: 92.80462646484375
patch: ape@@
rank: 970
score: 97.25617218017578
patch: } append $NUMBER$
rank: 970
score: 97.17790222167969
patch: case str :
rank: 970
score: 97.10700225830078
patch: } Compiler }
rank: 970
score: 96.68153889973958
patch: fail }
rank: 970
score: 96.40688069661458
patch: } null
rank: 970
score: 95.89700317382812
patch: continue }
rank: 970
score: 92.80441284179688
patch: cross
rank: 971
score: 97.22399139404297
patch: case $STRING$ ;
rank: 971
score: 97.1577377319336
patch: } case :
rank: 971
score: 96.39961751302083
patch: default :
rank: 971
score: 95.75626627604167
patch: catch }
rank: 971
score: 95.5446065266927
patch: * *
rank: 971
score: 92.80311584472656
patch: voted
rank: 972
score: 97.10286458333333
patch: return ;
rank: 972
score: 97.08628845214844
patch: } load }
rank: 972
score: 96.39736938476562
patch: : $STRING$
rank: 972
score: 95.66185506184895
patch: for }
rank: 972
score: 92.80155181884766
patch: Derivation
rank: 973
score: 96.07708740234375
patch: } long
rank: 973
score: 95.53806559244792
patch: finally }
rank: 973
score: 92.79933166503906
patch: super
rank: 974
score: 96.9000244140625
patch: } return
rank: 974
score: 96.3541971842448
patch: for (
rank: 974
score: 95.42510986328125
patch: case }
rank: 974
score: 92.79710388183594
patch: CAN
rank: 975
score: 96.35326131184895
patch: Boolean )
rank: 975
score: 95.98252360026042
patch: } Object
rank: 975
score: 95.41632080078125
patch: value ;
rank: 975
score: 92.79380798339844
patch: Rigid
rank: 976
score: 97.00056457519531
patch: } Long }
rank: 976
score: 96.34761555989583
patch: false ;
rank: 976
score: 95.36658732096355
patch: } while
rank: 976
score: 92.79084777832031
patch: Loss@@
rank: 977
score: 96.99559020996094
patch: } System }
rank: 977
score: 96.65081787109375
patch: } case
rank: 977
score: 96.34653727213542
patch: finally ;
rank: 977
score: 92.7892074584961
patch: SOUR@@
rank: 978
score: 95.88350423177083
patch: } do
rank: 978
score: 95.33260091145833
patch: * else
rank: 978
score: 92.78633117675781
patch: applicability
rank: 979
score: 96.32848103841145
patch: * ;
rank: 979
score: 92.78623962402344
patch: Builtin
rank: 980
score: 96.9652099609375
patch: } XML }
rank: 980
score: 96.2493896484375
patch: * .
rank: 980
score: 95.85374959309895
patch: } char
rank: 980
score: 95.2893778483073
patch: { else
rank: 980
score: 92.78546142578125
patch: version@@
rank: 981
score: 96.21091715494792
patch: str ;
rank: 981
score: 95.8523457845052
patch: } last
rank: 981
score: 94.04817199707031
patch: default
rank: 981
score: 92.78302001953125
patch: RAM
rank: 982
score: 96.9415283203125
patch: } exp }
rank: 982
score: 96.53896077473958
patch: System .
rank: 982
score: 96.19846598307292
patch: do {
rank: 982
score: 92.77880096435547
patch: Descri@@
rank: 983
score: 96.93421936035156
patch: } | }
rank: 983
score: 96.15346272786458
patch: * )
rank: 983
score: 92.77571868896484
patch: WY@@
rank: 984
score: 96.91690826416016
patch: } do }
rank: 984
score: 96.42681884765625
patch: return {
rank: 984
score: 96.22139485677083
patch: $NUMBER$ :
rank: 984
score: 96.14930216471355
patch: case )
rank: 984
score: 92.77540588378906
patch: Fir@@
rank: 985
score: 96.09420776367188
patch: } byte
rank: 985
score: 93.21148681640625
patch: _
rank: 985
score: 92.77195739746094
patch: Etched
rank: 986
score: 96.17086791992188
patch: e {
rank: 986
score: 96.0460205078125
patch: assert }
rank: 986
score: 93.45420837402344
patch: finally
rank: 986
score: 93.02001190185547
patch: j
rank: 986
score: 92.77120208740234
patch: Rotate
rank: 987
score: 96.12113444010417
patch: false :
rank: 987
score: 96.01107788085938
patch: default }
rank: 987
score: 93.56109619140625
patch: lower
rank: 987
score: 92.75711059570312
patch: Aci
rank: 988
score: 96.18746948242188
patch: / )
rank: 988
score: 96.06831868489583
patch: true ;
rank: 988
score: 96.03824869791667
patch: char CaMeL
rank: 988
score: 95.84957885742188
patch: boolean }
rank: 988
score: 93.21968078613281
patch: interned
rank: 988
score: 92.84162902832031
patch: catch
rank: 988
score: 92.7674789428711
patch: iterator
rank: 988
score: 92.75464630126953
patch: Que@@
rank: 989
score: 93.14016723632812
patch: str
rank: 989
score: 92.744873046875
patch: sanity
rank: 990
score: 96.07954915364583
patch: String )
rank: 990
score: 96.0374755859375
patch: throws )
rank: 990
score: 95.73433430989583
patch: String }
rank: 990
score: 93.00563049316406
patch: static
rank: 990
score: 92.74280548095703
patch: while
rank: 990
score: 92.74168395996094
patch: DISCAR@@
rank: 990
score: 92.43135833740234
patch: do
rank: 991
score: 95.73104858398438
patch: true }
rank: 991
score: 94.65052032470703
patch: boolean
rank: 991
score: 92.860107421875
patch: $STRING$
rank: 991
score: 92.73654174804688
patch: Stamper
rank: 992
score: 96.0380859375
patch: return str
rank: 992
score: 96.0219014485677
patch: } -
rank: 992
score: 92.73455810546875
patch: throw
rank: 992
score: 92.59661865234375
patch: m
rank: 993
score: 92.72789001464844
patch: Cash
rank: 993
score: 92.72624206542969
patch: we
rank: 993
score: 92.5146713256836
patch: i
rank: 993
score: 91.87007904052734
patch: source
rank: 994
score: 95.98738606770833
patch: : ,
rank: 994
score: 95.69141642252605
patch: Value }
rank: 994
score: 92.72419738769531
patch: Anything
rank: 995
score: 92.72107696533203
patch: accepts
rank: 995
score: 92.50923919677734
patch: Boolean
rank: 995
score: 92.33529663085938
patch: value
rank: 995
score: 91.57737731933594
patch: root
rank: 996
score: 93.02418518066406
patch: )
rank: 996
score: 92.71731567382812
patch: FAS@@
rank: 996
score: 92.50849914550781
patch: performance
rank: 996
score: 92.31082153320312
patch: ?
rank: 996
score: 91.5694580078125
patch: $
rank: 997
score: 94.48745727539062
patch: String
rank: 997
score: 94.22364807128906
patch: .
rank: 997
score: 93.49093627929688
patch: char
rank: 997
score: 92.71724700927734
patch: low@@
rank: 997
score: 92.30579376220703
patch: private
rank: 997
score: 91.55343627929688
patch: in
rank: 998
score: 93.44664001464844
patch: false
rank: 998
score: 92.85237121582031
patch: break
rank: 998
score: 92.71546936035156
patch: Com@@
rank: 998
score: 92.36822509765625
patch: to
rank: 998
score: 92.17259979248047
patch: found
rank: 999
score: 93.29345703125
patch: true
rank: 999
score: 92.73872375488281
patch: ,
rank: 999
score: 92.70491027832031
patch: scrol@@
rank: 999
score: 91.40597534179688
patch: file
rank: 1000
score: 94.00758361816406
patch: byte
rank: 1000
score: 92.70321655273438
patch: JC
rank: 1000
score: 92.14845275878906
patch: TRUE
rank: 1000
score: 91.34204864501953
patch: layout
