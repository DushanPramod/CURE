rank: 1
score: 99.7843729654948
patch: traverse ( c ) ;
rank: 1
score: 99.69696599786931
patch: c = c . get CaMeL Next ( ) ;
rank: 1
score: 99.66642252604167
patch: Node next = c . get CaMeL Next ( ) ;
rank: 1
score: 99.63473510742188
patch: traverse ( c , c ) ;
rank: 2
score: 99.66597493489583
patch: Node c = c . get CaMeL Next ( ) ;
rank: 2
score: 99.52135358537946
patch: traverse ( c . get CaMeL First CaMeL Child ( ) ) ;
rank: 3
score: 99.5648422241211
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 3
score: 99.53281471946023
patch: c = node . get CaMeL Next ( ) ;
rank: 3
score: 99.46628981370192
patch: c = c . get CaMeL First CaMeL Child ( ) ;
rank: 3
score: 99.45667266845703
patch: traverse ( c , false ) ;
rank: 3
score: 99.4134188565341
patch: traverse ( c ) ; traverse ( c ) ;
rank: 3
score: 99.30824584960938
patch: try { traverse ( c , c ) ;
rank: 3
score: 99.23526436941964
patch: traverse ( c ) ; }
rank: 4
score: 99.53471374511719
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 4
score: 99.52436174665179
patch: traverse ( c , c . get CaMeL Next ( ) ) ;
rank: 4
score: 99.52362823486328
patch: traverse ( c , node . get CaMeL First CaMeL Child ( ) ) ;
rank: 4
score: 99.44471435546875
patch: traverse ( c , c , false ) ;
rank: 4
score: 99.43956756591797
patch: if ( c . get CaMeL First CaMeL Child ( ) != null ) {
rank: 4
score: 99.4027099609375
patch: traverse ( c , node ) ;
rank: 4
score: 99.28836822509766
patch: try { traverse ( c ) ;
rank: 4
score: 99.19178989955357
patch: if ( ! c . is CaMeL Empty ( ) ) return ;
rank: 5
score: 99.50444878472223
patch: traverse ( c ) ; c = c . get CaMeL First CaMeL Child ( ) ;
rank: 5
score: 99.4686050415039
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , node ) ;
rank: 5
score: 99.43133544921875
patch: Object next = c . get CaMeL Next ( ) ;
rank: 5
score: 99.1720703125
patch: traverse ( c , c , c ) ;
rank: 6
score: 99.4859619140625
patch: next = c . get CaMeL Next ( ) ;
rank: 6
score: 99.45676095145089
patch: traverse ( c , c . get CaMeL Parent ( ) ) ;
rank: 6
score: 99.41519165039062
patch: if ( node . get CaMeL First CaMeL Child ( ) != null ) {
rank: 6
score: 99.4135986328125
patch: traverse ( c , c , true ) ;
rank: 6
score: 99.40882219587054
patch: Object c = c . get CaMeL First CaMeL Child ( ) ;
rank: 6
score: 99.28584289550781
patch: traverse ( c , true ) ;
rank: 6
score: 99.25931396484376
patch: traverse ( ! traverse ( c ) ) ;
rank: 6
score: 99.14236450195312
patch: traverse ( c ) ; return ;
rank: 7
score: 99.4477310180664
patch: traverse ( c , c . get CaMeL Root CaMeL Node ( ) ) ;
rank: 7
score: 99.40503801618304
patch: Node c = c . get CaMeL First CaMeL Child ( ) ;
rank: 7
score: 99.39989124644886
patch: node = c . get CaMeL Next ( ) ;
rank: 7
score: 99.39756944444444
patch: traverse ( c , c ) ; }
rank: 7
score: 99.27955211292614
patch: traverse ( get CaMeL Node ( c ) ) ;
rank: 7
score: 99.25156860351562
patch: if ( ! traverse ( c ) ) {
rank: 7
score: 99.14146205357143
patch: if ( ! c . is CaMeL Empty ( ) ) { }
rank: 8
score: 99.47123209635417
patch: traverse ( c . get CaMeL Next ( ) ) ;
rank: 8
score: 99.44624408922698
patch: traverse ( c ) ; c = c . get CaMeL First CaMeL Child ( ) ; }
rank: 8
score: 99.39427897135417
patch: if ( c . get CaMeL First CaMeL Child ( ) != null )
rank: 8
score: 99.22451443142361
patch: traverse ( traverse ( c ) ) ;
rank: 8
score: 99.13138253348214
patch: if ( ! c . is CaMeL Empty ( ) ) break ;
rank: 9
score: 99.46951729910714
patch: traverse ( node . get CaMeL First CaMeL Child ( ) ) ;
rank: 9
score: 99.43746948242188
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 9
score: 99.388427734375
patch: Object c = c . get CaMeL Next ( ) ;
rank: 9
score: 99.38611518012152
patch: traverse ( c ) ; break ; }
rank: 9
score: 99.2646240234375
patch: traverse ( c ) ; c = c ;
rank: 9
score: 99.18053436279297
patch: traverse ( c , null ) ;
rank: 9
score: 99.12555486505681
patch: traverse ( c , traverse ( c ) ) ;
rank: 10
score: 99.38587443033855
patch: traverse ( c , ; c = c . ; }
rank: 10
score: 99.3796615600586
patch: if ( c != null ) {
rank: 10
score: 99.166748046875
patch: try { traverse ( c ) ; }
rank: 10
score: 99.1133804321289
patch: throw new Runtime CaMeL Exception ( c . get CaMeL Name ( ) ) ;
rank: 11
score: 99.4622802734375
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 11
score: 99.42844645182292
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 11
score: 99.41661241319444
patch: c = c . get ( c . get CaMeL First CaMeL Child ( ) ) ;
rank: 11
score: 99.35148402622768
patch: Symbol c = c . get CaMeL First CaMeL Child ( ) ;
rank: 11
score: 99.2364501953125
patch: traverse ( node , c ) ;
rank: 11
score: 99.1602783203125
patch: if ( c != null ) { traverse ( c ) ;
rank: 11
score: 99.10685899522569
patch: else { traverse ( c ) ; }
rank: 12
score: 99.44985129616477
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 12
score: 99.42702811104911
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 12
score: 99.40399528952206
patch: c = c . get CaMeL Next = c . get CaMeL Next ( ) ;
rank: 12
score: 99.37527029854911
patch: c = c . get CaMeL First CaMeL Child ( ) ; }
rank: 12
score: 99.3697509765625
patch: c = node . get CaMeL First CaMeL Child ( ) ;
rank: 12
score: 99.34559983473558
patch: return c . get CaMeL First CaMeL Child ( ) ; }
rank: 12
score: 99.15909576416016
patch: traverse ( c , 0 ) ;
rank: 12
score: 99.10280539772727
patch: c = c . get CaMeL Parent ( ) ;
rank: 13
score: 99.42170545789931
patch: traverse ( ( Node ) c ) ;
rank: 13
score: 99.4086052389706
patch: c = c . get CaMeL Next ( ) . get CaMeL Next ( ) ;
rank: 13
score: 99.369140625
patch: traverse ( c , ; c = c . get CaMeL First CaMeL Child ( ) ) ;
rank: 13
score: 99.1570332845052
patch: if ( c != null ) traverse ( c ) ;
rank: 13
score: 99.09965006510417
patch: System . err . println ( $STRING$ + c . get CaMeL Name ( ) ) ;
rank: 14
score: 99.43612670898438
patch: c = next ( c . get CaMeL First CaMeL Child ( ) ) ;
rank: 14
score: 99.42109818892045
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 14
score: 99.40293666294643
patch: traverse ( next = c . get CaMeL Next ( ) ) ;
rank: 14
score: 99.3923110961914
patch: traverse ( node , node . get CaMeL First CaMeL Child ( ) ) ;
rank: 14
score: 99.34108479817708
patch: Element next = c . get CaMeL Next ( ) ;
rank: 14
score: 99.14537811279297
patch: traverse ( c , n ) ;
rank: 14
score: 99.09944152832031
patch: throw new Runtime CaMeL Exception ( c . get CaMeL Message ( ) ) ;
rank: 15
score: 99.43502807617188
patch: Node next = node . get CaMeL Next ( ) ;
rank: 15
score: 99.40601264105902
patch: traverse ( c ) ; c = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 15
score: 99.3988370028409
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next ( ) ) ;
rank: 15
score: 99.34633091517857
patch: Node next = c . get CaMeL First CaMeL Child ( ) ;
rank: 15
score: 99.33488246372768
patch: int visits = c . get CaMeL First CaMeL Child ( ) ;
rank: 15
score: 99.09870062934027
patch: System . out . println ( $STRING$ + c . get CaMeL Name ( ) ) ;
rank: 16
score: 99.43187459309895
patch: Node next = next . get CaMeL Next ( ) ;
rank: 16
score: 99.39249877929687
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ) ;
rank: 16
score: 99.38443429129464
patch: traverse ( c , node . get CaMeL Next ( ) ) ;
rank: 16
score: 99.34286499023438
patch: while ( c . get CaMeL First CaMeL Child ( ) != null ) {
rank: 16
score: 99.1915771484375
patch: traverse ( new traverse ( c ) ) ;
rank: 16
score: 99.13446655273438
patch: try { traverse ( c , null ) ;
rank: 16
score: 99.09865315755208
patch: throw new Runtime CaMeL Exception ( $STRING$ + c ) ;
rank: 17
score: 99.42601776123047
patch: traverse ( c , next . get CaMeL First CaMeL Child ( ) ) ;
rank: 17
score: 99.40010833740234
patch: traverse ( c , c . get CaMeL Last CaMeL Child ( ) ) ;
rank: 17
score: 99.34654235839844
patch: if ( c . get CaMeL Name ( ) . equals ( $STRING$ ) )
rank: 17
score: 99.3356464092548
patch: try { c = c . get CaMeL Next ( ) ;
rank: 17
score: 99.11611106178977
patch: traverse ( c . traverse ( c ) ) ;
rank: 18
score: 99.37415313720703
patch: traverse ( node . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 18
score: 99.3406473795573
patch: traverse ( c ) ; c = c . ; }
rank: 18
score: 99.32168143136161
patch: int c = c . get CaMeL First CaMeL Child ( ) ;
rank: 18
score: 99.17672729492188
patch: traverse ( c , c ) ; return ;
rank: 18
score: 99.11328125
patch: if ( ! c . contains ( c ) ) {
rank: 18
score: 99.0935546875
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 19
score: 99.41144670758929
patch: c = ( Node ) c . get CaMeL Next ( ) ;
rank: 19
score: 99.39405653211806
patch: traverse ( c ) ; c = c . get CaMeL Last CaMeL Child ( ) ;
rank: 19
score: 99.33950805664062
patch: c = c . get CaMeL First CaMeL Child ( ) ; break ; }
rank: 19
score: 99.32000732421875
patch: Element c = c . get CaMeL Next ( ) ;
rank: 19
score: 99.17652384440105
patch: c = c . c ; traverse ( c ) ;
rank: 19
score: 99.11287434895833
patch: if ( traverse ( c ) ) {
rank: 19
score: 99.09101698133681
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Name ( ) ) ;
rank: 20
score: 99.40548270089286
patch: try { Node c = c . get CaMeL Next ( ) ;
rank: 20
score: 99.38773803710937
patch: int n = c . get CaMeL First CaMeL Child ( ) . get CaMeL Length ( ) ;
rank: 20
score: 99.3717041015625
patch: c = parent . get CaMeL Next ( ) ;
rank: 20
score: 99.336376953125
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 20
score: 99.32730538504464
patch: Node c = node . get CaMeL First CaMeL Child ( ) ;
rank: 20
score: 99.3154052734375
patch: return c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 20
score: 99.17118013822116
patch: traverse ( c ) ; this . traverse ( c ) ;
rank: 20
score: 99.08921813964844
patch: traverse ( c ) ; break ;
rank: 21
score: 99.38745880126953
patch: traverse ( c , c . get CaMeL Current CaMeL Node ( ) ) ;
rank: 21
score: 99.36585235595703
patch: traverse ( node , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 21
score: 99.315185546875
patch: res = c . get CaMeL Next ( ) ;
rank: 21
score: 99.16933030348558
patch: traverse ( c , c ) ; traverse ( c ) ;
rank: 21
score: 99.11119588216145
patch: if ( ! traverse ( c ) ) { return ;
rank: 21
score: 99.08739295372597
patch: if ( ! c . is CaMeL Empty ( ) ) {
rank: 22
score: 99.38671875
patch: c = ( Node ) c . get CaMeL First CaMeL Child ( ) ;
rank: 22
score: 99.3646011352539
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , n ) ;
rank: 22
score: 99.31536865234375
patch: traverse ( c , ; c = c . get CaMeL First CaMeL Child ( ) ) ; }
rank: 22
score: 99.31306596235795
patch: n = c . get CaMeL Next ( ) ;
rank: 22
score: 99.16036376953124
patch: traverse ( c ) ; c = node ;
rank: 22
score: 99.10936889648437
patch: if ( c != null ) { return ;
rank: 22
score: 99.08583984375
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class CaMeL Name ( ) ) ;
rank: 23
score: 99.38551089638158
patch: traverse ( c ) ; c = c . get CaMeL Parent CaMeL Node ( ) ; }
rank: 23
score: 99.31221516927083
patch: AST c = c . get CaMeL Next ( ) ;
rank: 23
score: 99.15984497070312
patch: traverse ( ) ; traverse ( c ) ;
rank: 23
score: 99.09819878472223
patch: if ( c != null ) return ;
rank: 23
score: 99.07809884207589
patch: if ( ! c . is CaMeL Empty ( ) ) continue ;
rank: 24
score: 99.39215959821429
patch: c = c . get CaMeL Next ( ) ; c = c . get CaMeL Next ( ) ;
rank: 24
score: 99.36066436767578
patch: traverse ( c , parent . get CaMeL First CaMeL Child ( ) ) ;
rank: 24
score: 99.35796564275569
patch: c = n . get CaMeL Next ( ) ;
rank: 24
score: 99.32056427001953
patch: if ( c . get CaMeL First CaMeL Child ( ) == null ) {
rank: 24
score: 99.14985795454545
patch: traverse ( get CaMeL Node ( node ) ) ;
rank: 24
score: 99.0977783203125
patch: if ( c != null ) { public
rank: 24
score: 99.07708129882812
patch: else { traverse ( c , c ) ;
rank: 25
score: 99.3909403483073
patch: Node c = node . get CaMeL Next ( ) ;
rank: 25
score: 99.38362630208333
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Last CaMeL Child ( ) ) ;
rank: 25
score: 99.35570526123047
patch: Node next = c . get CaMeL Next ( ) ; c = next ;
rank: 25
score: 99.35503387451172
patch: traverse ( next . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 25
score: 99.31083461216518
patch: Object next = c . get CaMeL First CaMeL Child ( ) ;
rank: 25
score: 99.30772986778847
patch: node = c . get CaMeL First CaMeL Child ( ) ;
rank: 25
score: 99.144775390625
patch: try { traverse ( c , node ) ;
rank: 25
score: 99.09742228190105
patch: traverse ( c . get CaMeL Parent ( ) ) ;
rank: 25
score: 99.07457386363636
patch: if ( c == null ) { break ; }
rank: 26
score: 99.38362260298295
patch: int n = c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 26
score: 99.355419921875
patch: c = c != null && c . get CaMeL Next ( ) ;
rank: 26
score: 99.31016188401442
patch: type = c . get CaMeL First CaMeL Child ( ) ;
rank: 26
score: 99.30722045898438
patch: traverse ( node . get CaMeL First CaMeL Child ( ) , node ) ;
rank: 26
score: 99.09346771240234
patch: traverse ( c , 1 ) ;
rank: 26
score: 99.07231309678819
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Id ( ) ) ;
rank: 27
score: 99.38870675223214
patch: try { Node next = c . get CaMeL Next ( ) ;
rank: 27
score: 99.38304946001838
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) ) ; }
rank: 27
score: 99.35384695870536
patch: visits ++ ; c = c . get CaMeL Next ( ) ;
rank: 27
score: 99.30977376302083
patch: return c . get CaMeL First CaMeL Child ( ) ;
rank: 27
score: 99.29783412388393
patch: traverse ( c , ) ;
rank: 27
score: 99.14217122395833
patch: traverse ( ! c . equals ( c ) ) ;
rank: 27
score: 99.09180908203125
patch: traverse ( c && c != null ) ;
rank: 27
score: 99.0685565655048
patch: c = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 28
score: 99.38857014973958
patch: Node next = parent . get CaMeL Next ( ) ;
rank: 28
score: 99.38218688964844
patch: c = ( Node ) c . get CaMeL Parent CaMeL Node ( ) ;
rank: 28
score: 99.30819702148438
patch: AST next = c . get CaMeL Next ( ) ;
rank: 28
score: 99.29769897460938
patch: try { Node c = c . get CaMeL First CaMeL Child ( ) ;
rank: 28
score: 99.13557652064732
patch: traverse ( c , c . get CaMeL Type ( ) ) ;
rank: 28
score: 99.0878662109375
patch: try { traverse ( c , n ) ;
rank: 28
score: 99.06736924913194
patch: System . out . println ( $STRING$ + c . get CaMeL Id ( ) ) ;
rank: 29
score: 99.35209655761719
patch: traverse ( c ) ; c = c . get CaMeL Next ( ) ;
rank: 29
score: 99.30652965198864
patch: i = c . get CaMeL Next ( ) ;
rank: 29
score: 99.29255894252232
patch: n = c . get CaMeL First CaMeL Child ( ) ; }
rank: 29
score: 99.1329345703125
patch: traverse ( c , c ) ; ) ;
rank: 29
score: 99.08779672475961
patch: if ( c == null ) { traverse ( c ) ;
rank: 29
score: 99.06467013888889
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Message ( ) ) ;
rank: 30
score: 99.38004557291667
patch: c = c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 30
score: 99.34611293247768
patch: traverse ( c . get CaMeL Next ( ) , node ) ;
rank: 30
score: 99.30426494891827
patch: context = c . get CaMeL First CaMeL Child ( ) ;
rank: 30
score: 99.29514857700893
patch: Node next = node . get CaMeL First CaMeL Child ( ) ;
rank: 30
score: 99.29239908854167
patch: if ( c . ; c = c . get CaMeL First CaMeL Child ( ) )
rank: 30
score: 99.13228759765624
patch: traverse ( c ) ; c = true ;
rank: 30
score: 99.08719576322116
patch: traverse ( ! c . get CaMeL Node ( ) ) ;
rank: 31
score: 99.37606811523438
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 31
score: 99.37557279146634
patch: final Node c = c . get CaMeL Next ( ) ;
rank: 31
score: 99.3479248046875
patch: c = c . get = c . get CaMeL Next ( ) ;
rank: 31
score: 99.3037109375
patch: v = c . get CaMeL Next ( ) ;
rank: 31
score: 99.29026576450893
patch: traverse ( c ) ; ;
rank: 31
score: 99.13119506835938
patch: traverse ( ! c . traverse ( c ) ) ;
rank: 31
score: 99.08091227213542
patch: if ( ! c . equals ( c ) ) {
rank: 31
score: 99.06283908420139
patch: System . err . println ( $STRING$ + c . get CaMeL Id ( ) ) ;
rank: 32
score: 99.37485139266305
patch: c = ( node . get CaMeL First CaMeL Child ( ) ) . get CaMeL First CaMeL Child ( ) ;
rank: 32
score: 99.34612358940973
patch: c = c . get ( node . get CaMeL First CaMeL Child ( ) ) ;
rank: 32
score: 99.2938461303711
patch: if ( node . get CaMeL First CaMeL Child ( ) == null ) {
rank: 32
score: 99.28755326704545
patch: traverse ( c , ( Node ) c ) ;
rank: 32
score: 99.12612082741477
patch: traverse ( c , traverse ( node ) ) ;
rank: 32
score: 99.08021129261364
patch: synchronized ( c ) { traverse ( c ) ;
rank: 33
score: 99.37266956676136
patch: traverse ( node . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 33
score: 99.33829752604167
patch: c = c . get CaMeL Next ( ) ; c = next ;
rank: 33
score: 99.29913330078125
patch: traverse ( c . node . get CaMeL First CaMeL Child ( ) ) ;
rank: 33
score: 99.28616098257211
patch: n = c . get CaMeL First CaMeL Child ( ) ;
rank: 33
score: 99.12069936899039
patch: traverse ( ! c . get CaMeL Parent ( ) ) ;
rank: 33
score: 99.06011284722223
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . to CaMeL String ( ) ) ;
rank: 34
score: 99.37020169771634
patch: final Node next = c . get CaMeL Next ( ) ;
rank: 34
score: 99.32571072048611
patch: traverse ( c . get CaMeL Next ( ) . get CaMeL Next ( ) ) ;
rank: 34
score: 99.2875225360577
patch: visits = c . get CaMeL First CaMeL Child ( ) ;
rank: 34
score: 99.28363591974431
patch: n = c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ; }
rank: 34
score: 99.118408203125
patch: traverse ( c ) ; traverse ( ) ;
rank: 34
score: 99.07705688476562
patch: if ( ! traverse ( c ) ) ;
rank: 34
score: 99.05852399553571
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 35
score: 99.36546630859375
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) ) ;
rank: 35
score: 99.35786769701087
patch: c = ( c . get CaMeL First CaMeL Child ( ) ) . get CaMeL First CaMeL Child ( ) ;
rank: 35
score: 99.33561876085069
patch: c = Node . get ( c . get CaMeL First CaMeL Child ( ) ) ;
rank: 35
score: 99.3245849609375
patch: traverse ( next . get CaMeL First CaMeL Child ( ) ) ;
rank: 35
score: 99.29600830078125
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( )
rank: 35
score: 99.11670939127605
patch: traverse ( c , c . null ( ) ) ;
rank: 35
score: 99.07386363636364
patch: if ( traverse ( c ) ) { return ;
rank: 35
score: 99.05647495814732
patch: if ( ! c . is CaMeL Empty ( ) ) { ;
rank: 36
score: 99.35677083333333
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 36
score: 99.33104596819196
patch: traverse ( parent . get CaMeL First CaMeL Child ( ) ) ;
rank: 36
score: 99.3228759765625
patch: traverse ( next . get CaMeL First CaMeL Child ( ) , node ) ;
rank: 36
score: 99.29526589133523
patch: traverse = c . get CaMeL Next ( ) ;
rank: 36
score: 99.11619059244792
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( c ) ;
rank: 36
score: 99.07384033203125
patch: if ( c == null ) { return ;
rank: 36
score: 99.05609489889706
patch: throw new Runtime CaMeL Exception ( c . get CaMeL Message ( $STRING$ ) ) ;
rank: 37
score: 99.3553237915039
patch: traverse ( c , c . get CaMeL Child CaMeL Count ( ) ) ;
rank: 37
score: 99.32854461669922
patch: visit ( c , node . get CaMeL First CaMeL Child ( ) ) ;
rank: 37
score: 99.28289388020833
patch: try { c = c . get CaMeL First CaMeL Child ( ) ;
rank: 37
score: 99.11471993582589
patch: traverse ( c , c . get CaMeL Node ( ) ) ;
rank: 37
score: 99.07213338216145
patch: traverse ( c . get CaMeL Node ( ) ) ;
rank: 38
score: 99.35002899169922
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , c ) ;
rank: 38
score: 99.3117919921875
patch: traverse ( c . get CaMeL Next ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 38
score: 99.28458658854167
patch: Symbol next = c . get CaMeL Next ( ) ;
rank: 38
score: 99.27280495383523
patch: traverse ( c , ; c = c . ;
rank: 38
score: 99.11419067382812
patch: traverse ( c , c , node ) ;
rank: 38
score: 99.05548967633929
patch: else { c = c . get CaMeL Parent ( ) ; }
rank: 39
score: 99.3498779296875
patch: traverse ( c . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 39
score: 99.3281719501202
patch: c = next = c . get CaMeL Next ( ) ;
rank: 39
score: 99.31160481770833
patch: Node next = n . get CaMeL Next ( ) ;
rank: 39
score: 99.28278459821429
patch: int next = c . get CaMeL First CaMeL Child ( ) ;
rank: 39
score: 99.28147486636513
patch: c = c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ;
rank: 39
score: 99.2677001953125
patch: c = c . get CaMeL Parent CaMeL Node ( ) ; }
rank: 39
score: 99.11177978515624
patch: traverse ( c , c ) ; break ;
rank: 39
score: 99.05432891845703
patch: else { c = c . get CaMeL First CaMeL Child ( ) ; }
rank: 40
score: 99.3473233309659
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 40
score: 99.32322591145834
patch: traverse ( c . get CaMeL First CaMeL Child ( ) ) ; }
rank: 40
score: 99.309814453125
patch: traverse ( c , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 40
score: 99.26701216264205
patch: int n = c . get CaMeL First CaMeL Child ( ) . get CaMeL Int CaMeL Value ( ) ;
rank: 40
score: 99.11051432291667
patch: traverse ( node ) ;
rank: 40
score: 99.0714599609375
patch: try { traverse ( c , true ) ;
rank: 40
score: 99.052978515625
patch: traverse ( c ) ; } return ;
rank: 41
score: 99.3444491299716
patch: c = c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ; }
rank: 41
score: 99.32206726074219
patch: traverse ( parent , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 41
score: 99.27906290690105
patch: int next = c . get CaMeL Next ( ) ;
rank: 41
score: 99.27663060238487
patch: c = c . get CaMeL Next ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 41
score: 99.26414137620192
patch: traverse ( c ) ; c = c . get ; }
rank: 41
score: 99.1092196377841
patch: traverse ( c || traverse ( c ) ) ;
rank: 41
score: 99.07075639204545
patch: if ( ! traverse ( c ) ) { public
rank: 41
score: 99.05214436848958
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 42
score: 99.35230509440105
patch: Node next = ref . get CaMeL Next ( ) ;
rank: 42
score: 99.341796875
patch: traverse ( c ) ; c = c . get CaMeL Last CaMeL Child ( ) ; }
rank: 42
score: 99.3204116821289
patch: traverse ( parent , node . get CaMeL First CaMeL Child ( ) ) ;
rank: 42
score: 99.27890846946023
patch: prev = c . get CaMeL Next ( ) ;
rank: 42
score: 99.26277240953948
patch: traverse ( c , ; c = c . get CaMeL Last CaMeL Child ( ) ) ;
rank: 42
score: 99.10749816894531
patch: c = traverse ( c ) ;
rank: 43
score: 99.35163879394531
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , null ) ;
rank: 43
score: 99.34104225852273
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 43
score: 99.3134765625
patch: c . next = c . get CaMeL Next ( ) ;
rank: 43
score: 99.29896129261364
patch: traverse ( next . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 43
score: 99.27693314985795
patch: target = c . get CaMeL Next ( ) ;
rank: 43
score: 99.26839773995536
patch: traverse ( children . get CaMeL First CaMeL Child ( ) ) ;
rank: 43
score: 99.10680135091145
patch: traverse ( c , c ) ; c = c ;
rank: 43
score: 99.0706298828125
patch: try { c = traverse ( c ) ;
rank: 43
score: 99.04906165081522
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 44
score: 99.3505859375
patch: Node c = next ( c . get CaMeL First CaMeL Child ( ) ) ;
rank: 44
score: 99.34004480698529
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) ) ; }
rank: 44
score: 99.31310017903645
patch: visit ( c . get CaMeL Next ( ) ) ;
rank: 44
score: 99.2934341430664
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , visits ) ;
rank: 44
score: 99.27515587439903
patch: path = c . get CaMeL First CaMeL Child ( ) ;
rank: 44
score: 99.26059857536765
patch: traverse ( c , ; c = c . get CaMeL Next ( ) ) ;
rank: 44
score: 99.10560191761364
patch: traverse ( node ) ; traverse ( c ) ;
rank: 44
score: 99.0645751953125
patch: if ( c == null ) { public
rank: 44
score: 99.04888916015625
patch: if ( ! c . is CaMeL Empty ( ) ) ; }
rank: 45
score: 99.34761555989583
patch: Node c = parent . get CaMeL Next ( ) ;
rank: 45
score: 99.31295013427734
patch: traverse ( parent . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 45
score: 99.29313151041667
patch: c = c . get CaMeL Next ( ) ; }
rank: 45
score: 99.27399236505681
patch: result = c . get CaMeL Next ( ) ;
rank: 45
score: 99.25899465460526
patch: c = c . get CaMeL First CaMeL Child ( ) ; } traverse ( c ) ;
rank: 45
score: 99.10267223011364
patch: traverse ( c ) ; traverse ( node ) ;
rank: 45
score: 99.06275523792614
patch: traverse ( traverse ( c , c ) ) ;
rank: 45
score: 99.04766235351562
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Name ( ) ) ;
rank: 46
score: 99.33522542317708
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 46
score: 99.31126990685097
patch: c . node = c . get CaMeL Next ( ) ;
rank: 46
score: 99.27329799107143
patch: Type c = c . get CaMeL First CaMeL Child ( ) ;
rank: 46
score: 99.2580502158717
patch: traverse ( c , ; c = c . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 46
score: 99.09788004557292
patch: traverse ( c ) ; c = c . c ;
rank: 46
score: 99.06168619791667
patch: if ( c == null ) traverse ( c ) ;
rank: 47
score: 99.34676106770833
patch: Node next = ( Node ) c . get CaMeL Next ( ) ;
rank: 47
score: 99.33207433363971
patch: traverse ( ) ; c = c . get CaMeL First CaMeL Child ( ) ;
rank: 47
score: 99.29183197021484
patch: traverse ( n , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 47
score: 99.26912064985795
patch: f = c . get CaMeL Next ( ) ;
rank: 47
score: 99.08919677734374
patch: c = c . traverse ( c ) ;
rank: 47
score: 99.0517807006836
patch: traverse ( n , c ) ;
rank: 47
score: 99.0457051595052
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Name ( ) ) ;
rank: 48
score: 99.29105631510417
patch: Node n = c . get CaMeL Next ( ) ;
rank: 48
score: 99.26823207310268
patch: if ( c . get CaMeL First CaMeL Child ( ) ) {
rank: 48
score: 99.257080078125
patch: if ( c . get CaMeL Class CaMeL Name ( ) . equals ( $STRING$ ) )
rank: 48
score: 99.08388671875
patch: traverse ( c + $STRING$ + c ) ;
rank: 48
score: 99.048828125
patch: if ( ! c . traverse ( c ) ) {
rank: 48
score: 99.04468994140625
patch: traverse ( c ) ; } return false ;
rank: 49
score: 99.327880859375
patch: traverse ( c ) ; n = c . get CaMeL First CaMeL Child ( ) ;
rank: 49
score: 99.30975341796875
patch: c = c . get CaMeL Next ( ) ; traverse ( c ) ;
rank: 49
score: 99.26743727463942
patch: children = c . get CaMeL First CaMeL Child ( ) ;
rank: 49
score: 99.26078796386719
patch: while ( node . get CaMeL First CaMeL Child ( ) != null ) {
rank: 49
score: 99.08382474459134
patch: traverse ( c || c . traverse ( c ) ) ;
rank: 49
score: 99.04734293619792
patch: try { traverse ( c ) ; ;
rank: 49
score: 99.04318237304688
patch: c = c . get CaMeL Parent ( ) ; }
rank: 50
score: 99.28910522460937
patch: traverse ( next . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ) ;
rank: 50
score: 99.25419311523437
patch: traverse ( c , false , true ) ;
rank: 50
score: 99.07177734375
patch: traverse ( c + 1 ) ;
rank: 50
score: 99.04474431818181
patch: traverse ( c && traverse ( c ) ) ;
rank: 50
score: 99.04071451822917
patch: try { c = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 51
score: 99.33551788330078
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , parent ) ;
rank: 51
score: 99.324482421875
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) ) ; }
rank: 51
score: 99.30289459228516
patch: visit ( c , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 51
score: 99.26597243088942
patch: result = c . get CaMeL First CaMeL Child ( ) ;
rank: 51
score: 99.25950622558594
patch: traverse ( next = c . get CaMeL First CaMeL Child ( ) ) ;
rank: 51
score: 99.25361560639881
patch: n = c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 51
score: 99.06943359375
patch: traverse ( c ) ; if ( c ;
rank: 51
score: 99.04325358072917
patch: if ( ! != c ) traverse ( c ) ;
rank: 51
score: 99.04064331054687
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Id ( ) ) ;
rank: 52
score: 99.33505249023438
patch: Node c = ref . get CaMeL Next ( ) ;
rank: 52
score: 99.32254831414474
patch: traverse ( c . traverse ( c . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 52
score: 99.30266655815973
patch: next = c . get ( c . get CaMeL First CaMeL Child ( ) ) ;
rank: 52
score: 99.28712972005208
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , node . get CaMeL First CaMeL Child ( ) ) ;
rank: 52
score: 99.26456996372768
patch: Symbol node = c . get CaMeL First CaMeL Child ( ) ;
rank: 52
score: 99.25344016335227
patch: int n = c . get CaMeL First CaMeL Child ( ) . get CaMeL Last CaMeL Child ( ) ;
rank: 52
score: 99.06754760742187
patch: traverse ( c ; traverse ( c ) ;
rank: 52
score: 99.03990478515625
patch: System . err . println ( $STRING$ + c . get CaMeL Class CaMeL Name ( ) ) ;
rank: 52
score: 99.03948211669922
patch: traverse ( c != null ) ;
rank: 53
score: 99.32178751627605
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL Root CaMeL Node ( ) ) ;
rank: 53
score: 99.30093722873264
patch: traverse ( . get ( c . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 53
score: 99.2611971768466
patch: parent = c . get CaMeL Next ( ) ;
rank: 53
score: 99.25294189453125
patch: traverse ( c , false , false ) ;
rank: 53
score: 99.2512142783717
patch: visits = c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ;
rank: 53
score: 99.06552124023438
patch: traverse ( c , parent ) ;
rank: 53
score: 99.0371826171875
patch: throw new Runtime CaMeL Exception ( ) ; }
rank: 53
score: 99.0362548828125
patch: traverse ( c ) ; ) ;
rank: 54
score: 99.29981578480114
patch: c = next . get CaMeL Next ( ) ;
rank: 54
score: 99.2608133951823
patch: Decl c = c . get CaMeL Next ( ) ;
rank: 54
score: 99.247802734375
patch: c = c . get CaMeL Last CaMeL Child ( ) ;
rank: 54
score: 99.06102576622597
patch: traverse ( c && c . traverse ( c ) ) ;
rank: 54
score: 99.03713156960227
patch: if ( c == null ) { return ; }
rank: 54
score: 99.03505637428977
patch: if ( true ) { traverse ( c ) ;
rank: 55
score: 99.32384535845588
patch: traverse ( c ) ; Node next = c . get CaMeL Next ( ) ;
rank: 55
score: 99.31966145833333
patch: c = c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 55
score: 99.29767204733456
patch: c = node . get CaMeL Next = c . get CaMeL Next ( ) ;
rank: 55
score: 99.28371360085227
patch: ret = c . get CaMeL Next ( ) ;
rank: 55
score: 99.25221653988487
patch: Node c = c . get CaMeL First CaMeL Child ( ) ; traverse ( c ) ;
rank: 55
score: 99.24482945033482
patch: traverse ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 55
score: 99.060791015625
patch: traverse ( c + 0 ) ;
rank: 55
score: 99.03701346261161
patch: if ( ! n . is CaMeL Empty ( ) ) return ;
rank: 55
score: 99.03474731445313
patch: if ( true ) traverse ( c ) ;
rank: 56
score: 99.29694281684027
patch: c = parent . get ( c . get CaMeL First CaMeL Child ( ) ) ;
rank: 56
score: 99.28362426757812
patch: traverse ( c . get CaMeL Next ( ) , c . get CaMeL Next ( ) ) ;
rank: 56
score: 99.26016671316964
patch: traverse ( c . get CaMeL Last CaMeL Child ( ) ) ;
rank: 56
score: 99.2497891512784
patch: if ( c . get CaMeL Name ( ) . equals ( c . get CaMeL Name ( ) ) )
rank: 56
score: 99.24351149338942
patch: c = parent . get CaMeL First CaMeL Child ( ) ;
rank: 56
score: 99.0348369891827
patch: c = c . get CaMeL First CaMeL Line ( ) ;
rank: 57
score: 99.32338169642857
patch: visit ( c . get CaMeL First CaMeL Child ( ) ) ;
rank: 57
score: 99.31707294170673
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 57
score: 99.29644012451172
patch: traverse ( null , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 57
score: 99.28338623046875
patch: traverse ( next . get CaMeL First CaMeL Child ( ) , next . get CaMeL First CaMeL Child ( ) ) ;
rank: 57
score: 99.25556291852679
patch: Symbol visits = c . get CaMeL First CaMeL Child ( ) ;
rank: 57
score: 99.24798177083333
patch: if ( c == node . get CaMeL First CaMeL Child ( ) )
rank: 57
score: 99.24232700892857
patch: Node node = c . get CaMeL First CaMeL Child ( ) ;
rank: 57
score: 99.05938720703125
patch: traverse ( ! c . contains ( c ) ) ;
rank: 57
score: 99.029052734375
patch: if ( c == null ) return ;
rank: 58
score: 99.31631324404762
patch: c = c . get CaMeL Parent CaMeL Node ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 58
score: 99.29541015625
patch: traverse ( c ) ; next = c . get CaMeL Next ( ) ;
rank: 58
score: 99.2545498934659
patch: p = c . get CaMeL Next ( ) ;
rank: 58
score: 99.24048961292614
patch: visits = c . get CaMeL Next ( ) ;
rank: 58
score: 99.05914306640625
patch: traverse ( c ) ; c = false ;
rank: 58
score: 99.023828125
patch: if ( false ) traverse ( c ) ;
rank: 59
score: 99.3182144165039
patch: c = next ( node . get CaMeL First CaMeL Child ( ) ) ;
rank: 59
score: 99.31519571940105
patch: traverse ( c . get CaMeL Root CaMeL Node ( ) , c . get CaMeL Root CaMeL Node ( ) ) ;
rank: 59
score: 99.29446411132812
patch: traverse ( node . get CaMeL Next ( ) ) ;
rank: 59
score: 99.25389515269886
patch: head = c . get CaMeL Next ( ) ;
rank: 59
score: 99.24594350961539
patch: traverse ( c , ; c = c . get ; }
rank: 59
score: 99.05913543701172
patch: traverse ( this , c ) ;
rank: 59
score: 99.0298184481534
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ; }
rank: 59
score: 99.0188876065341
patch: try { traverse ( c ) ; } else {
rank: 60
score: 99.3179931640625
patch: Node c = ( Node ) c . get CaMeL Next ( ) ;
rank: 60
score: 99.25113932291667
patch: else c = c . get CaMeL Next ( ) ;
rank: 60
score: 99.24039459228516
patch: try { Node next = c . get CaMeL First CaMeL Child ( ) ;
rank: 60
score: 99.05824584960938
patch: traverse ( c ) ; c = n ;
rank: 60
score: 99.01665649414062
patch: traverse ( c , 0 , c ) ;
rank: 61
score: 99.3176502046131
patch: c = ( node . get CaMeL First CaMeL Child ( ) ) . get CaMeL Next ( ) ;
rank: 61
score: 99.31175994873047
patch: traverse ( c ) ; c = c . get CaMeL Parent ( ) ;
rank: 61
score: 99.29278923483456
patch: c . get CaMeL Next ( ) : c . get CaMeL Next ( ) ;
rank: 61
score: 99.24938092912946
patch: AST c = c . get CaMeL First CaMeL Child ( ) ;
rank: 61
score: 99.23824310302734
patch: if ( c . get CaMeL First CaMeL Child ( ) != null ) }
rank: 61
score: 99.05644989013672
patch: else { traverse ( c ) ;
rank: 61
score: 99.02668108258929
patch: return traverse ( c ) ;
rank: 61
score: 99.01408247514205
patch: if ( false ) { traverse ( c ) ;
rank: 62
score: 99.30975896661931
patch: int n = c . get CaMeL First CaMeL Child ( ) . get CaMeL Child CaMeL Count ( ) ;
rank: 62
score: 99.275390625
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ) ;
rank: 62
score: 99.24906782670455
patch: return c . get CaMeL Next ( ) ; }
rank: 62
score: 99.23833821614583
patch: c = c . get CaMeL First CaMeL Child ( ) ; break ;
rank: 62
score: 99.23637390136719
patch: if ( c . get CaMeL Last CaMeL Child ( ) != null ) {
rank: 62
score: 99.05548858642578
patch: traverse ( node , node ) ;
rank: 62
score: 99.0260009765625
patch: traverse ( c , parent , c ) ;
rank: 62
score: 99.01355919471153
patch: if ( ! != c ) { traverse ( c ) ;
rank: 63
score: 99.31690131293402
patch: Node c = c . get CaMeL Next = c . get CaMeL Next ( ) ;
rank: 63
score: 99.30949263139205
patch: traverse ( c ) ; c = c ) ;
rank: 63
score: 99.28945688100961
patch: c : c = c . get CaMeL Next ( ) ;
rank: 63
score: 99.27470179966518
patch: traverse ( next = next . get CaMeL Next ( ) ) ;
rank: 63
score: 99.2476806640625
patch: current = c . get CaMeL Next ( ) ;
rank: 63
score: 99.23598118832237
patch: return . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 63
score: 99.0525146484375
patch: traverse ( c , c ) ; continue ;
rank: 63
score: 99.00935581752232
patch: traverse ( ! c ) ;
rank: 64
score: 99.28936360677083
patch: traverse ( c , . get CaMeL First CaMeL Child ( ) ) ;
rank: 64
score: 99.27418101917614
patch: next = next . get CaMeL Next ( ) ;
rank: 64
score: 99.23565673828125
patch: if ( c . get CaMeL Parent ( ) != null ) {
rank: 64
score: 99.04710083007812
patch: traverse ( c , traverse ( ) ) ;
rank: 64
score: 99.02244059244792
patch: if ( c instanceof ) . traverse ( c ) ;
rank: 64
score: 99.00929953835227
patch: if ( traverse ( c , c ) ) {
rank: 65
score: 99.31391252790179
patch: switch ( c . get CaMeL First CaMeL Child ( ) ) {
rank: 65
score: 99.30899047851562
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 65
score: 99.24196079799107
patch: consume ( c . get CaMeL First CaMeL Child ( ) ) ;
rank: 65
score: 99.23530717329545
patch: return . get CaMeL First CaMeL Child ( ) ;
rank: 65
score: 99.23461235894098
patch: traverse ( c ) ; return ; }
rank: 65
score: 99.0460674579327
patch: traverse ( c ) ; super . traverse ( c ) ;
rank: 65
score: 99.00925856370192
patch: if ( c != null ) ; traverse ( c ) ;
rank: 66
score: 99.31181504991319
patch: Node c = c . get CaMeL Next ( ) . get CaMeL Next ( ) ;
rank: 66
score: 99.30743408203125
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 66
score: 99.28397042410714
patch: traverse ( c , node . get CaMeL Parent ( ) ) ;
rank: 66
score: 99.27373395647321
patch: Node next = c . get CaMeL Next ( ) ; for (
rank: 66
score: 99.23428344726562
patch: c = c . get CaMeL First CaMeL Child ( ) ; } return ;
rank: 66
score: 99.0454852764423
patch: try { traverse ( c ) ; traverse ( c ) ;
rank: 66
score: 99.0213982077206
patch: throw new Runtime CaMeL Exception ( c . get CaMeL Message ( ) ) ; }
rank: 66
score: 99.00879923502605
patch: if ( ! c . contains ( c ) ) ;
rank: 67
score: 99.28259955512152
patch: c = c . equals ( node . get CaMeL First CaMeL Child ( ) ) ;
rank: 67
score: 99.27264873798077
patch: do { c = c . get CaMeL Next ( ) ;
rank: 67
score: 99.23946707589286
patch: Object node = c . get CaMeL First CaMeL Child ( ) ;
rank: 67
score: 99.23410034179688
patch: n = c . get CaMeL First CaMeL Child ( ) ; break ; }
rank: 67
score: 99.23404366629464
patch: Node c = parent . get CaMeL First CaMeL Child ( ) ;
rank: 67
score: 99.04435221354167
patch: traverse ( c ) ; c = c . null ;
rank: 67
score: 99.02129657451923
patch: c = c . get CaMeL Parent ( ) ; break ;
rank: 67
score: 99.0078125
patch: try { traverse ( c , 1 ) ;
rank: 68
score: 99.30605061848958
patch: traverse ( c ) ; c = c . get CaMeL Root CaMeL Node ( ) ;
rank: 68
score: 99.28248087565105
patch: visit ( c ) ;
rank: 68
score: 99.27137974330357
patch: Node c = c . get CaMeL Next ( ) ; for (
rank: 68
score: 99.23819986979167
patch: traverse ( c ) ; visits ++ ;
rank: 68
score: 99.2313232421875
patch: c ; c = c . get CaMeL First CaMeL Child ( ) ; }
rank: 68
score: 99.04232025146484
patch: traverse ( c + c ) ;
rank: 68
score: 99.01947021484375
patch: if ( ! node . is CaMeL Empty ( ) ) return ;
rank: 68
score: 99.0076395670573
patch: if ( c == ) { traverse ( c ) ;
rank: 69
score: 99.305078125
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL Parent CaMeL Node ( ) ) ; }
rank: 69
score: 99.27855727251838
patch: traverse ( c , node . get CaMeL First CaMeL Child ( ) ) ; }
rank: 69
score: 99.27113560267857
patch: traverse ( node , c . get CaMeL Next ( ) ) ;
rank: 69
score: 99.23728249289773
patch: context = c . get CaMeL Next ( ) ;
rank: 69
score: 99.23031955295139
patch: if ( c != ; c = c . get CaMeL First CaMeL Child ( ) )
rank: 69
score: 99.03829345703124
patch: traverse ( c , node , c ) ;
rank: 69
score: 99.00523681640625
patch: try { traverse ( c , 0 ) ;
rank: 70
score: 99.30841827392578
patch: traverse ( node , next . get CaMeL First CaMeL Child ( ) ) ;
rank: 70
score: 99.304443359375
patch: traverse ( ( Node ) c . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 70
score: 99.27802068536931
patch: next = node . get CaMeL Next ( ) ;
rank: 70
score: 99.23639993106617
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL
rank: 70
score: 99.23223876953125
patch: traverse ( children . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 70
score: 99.23005981445313
patch: traverse ( c , false , c ) ;
rank: 70
score: 99.03759002685547
patch: c = c . get CaMeL Value ( ) ; traverse ( c ) ;
rank: 70
score: 99.00324096679688
patch: try { traverse ( c , false ) ;
rank: 71
score: 99.30733489990234
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , this ) ;
rank: 71
score: 99.2725601196289
patch: traverse ( null , node . get CaMeL First CaMeL Child ( ) ) ;
rank: 71
score: 99.26617431640625
patch: traverse ( node . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ) ;
rank: 71
score: 99.23614032451923
patch: i = c . get CaMeL First CaMeL Child ( ) ;
rank: 71
score: 99.03719329833984
patch: ) { traverse ( c ) ;
rank: 71
score: 99.01579066685268
patch: break ; } c = c . get CaMeL Parent ( ) ;
rank: 71
score: 99.00289713541666
patch: if ( ! c . is CaMeL Empty ( ) ) { return ;
rank: 72
score: 99.30663045247395
patch: Node c = n . get CaMeL Next ( ) ;
rank: 72
score: 99.30364227294922
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , n ) ;
rank: 72
score: 99.27156575520833
patch: c = c . next = c . get CaMeL Next ( ) ;
rank: 72
score: 99.2660903930664
patch: traverse ( next = next . get CaMeL First CaMeL Child ( ) ) ;
rank: 72
score: 99.23234049479167
patch: Token next = c . get CaMeL Next ( ) ;
rank: 72
score: 99.2308349609375
patch: if ( node . get CaMeL First CaMeL Child ( ) != null )
rank: 72
score: 99.22945827907986
patch: traverse ( c , ; c = c . get CaMeL First CaMeL Child ( ) ;
rank: 72
score: 99.0360595703125
patch: System . out . println ( $STRING$ ) ; traverse ( c ) ;
rank: 72
score: 99.01376488095238
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 72
score: 99.00205300071023
patch: if ( ! traverse ( c ) ) return ;
rank: 73
score: 99.26439711626838
patch: c = node . get CaMeL Next ( ) . get CaMeL Next ( ) ;
rank: 73
score: 99.23047814002403
patch: if ( c . get CaMeL First CaMeL Child ( ) )
rank: 73
score: 99.23028094951923
patch: node = node . get CaMeL First CaMeL Child ( ) ;
rank: 73
score: 99.03370250355114
patch: traverse ( false ) ; traverse ( c ) ;
rank: 73
score: 99.0127182006836
patch: else { c = c . get CaMeL First CaMeL Line ( ) ; }
rank: 73
score: 99.00146484375
patch: if ( c == 0 ) { traverse ( c ) ;
rank: 74
score: 99.30075252757354
patch: traverse ( ( Node ) c . get CaMeL First CaMeL Child ( ) ) ;
rank: 74
score: 99.26974487304688
patch: traverse ( c . get = c . get CaMeL Next ( ) ) ;
rank: 74
score: 99.229443359375
patch: final Node c = c . get CaMeL First CaMeL Child ( ) ;
rank: 74
score: 99.03343912760417
patch: traverse ( c , c ) ; this . traverse ( c ) ;
rank: 74
score: 99.01197306315105
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Id ( ) ) ;
rank: 74
score: 99.00087076822916
patch: if ( ! c . iterator ( ) . iterator ( ) . }
rank: 75
score: 99.30504557291667
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , ) ;
rank: 75
score: 99.29787375710227
patch: c = c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; }
rank: 75
score: 99.26841735839844
patch: traverse ( false , node . get CaMeL First CaMeL Child ( ) ) ;
rank: 75
score: 99.22616416529605
patch: Node n = c . get CaMeL First CaMeL Child ( ) ; traverse ( c ) ;
rank: 75
score: 99.22447204589844
patch: c = ( Node ) node . get CaMeL First CaMeL Child ( ) ;
rank: 75
score: 99.03324068509616
patch: traverse ( c ) ; out . traverse ( c ) ;
rank: 75
score: 99.01080031622024
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c ) ) {
rank: 75
score: 98.99956805889423
patch: if ( n != null ) { traverse ( c ) ;
rank: 76
score: 99.30445207868304
patch: traverse ( ref . get CaMeL First CaMeL Child ( ) ) ;
rank: 76
score: 99.26583426339286
patch: c = next ( c . get CaMeL Next ( ) ) ;
rank: 76
score: 99.22842407226562
patch: Decl next = c . get CaMeL Next ( ) ;
rank: 76
score: 99.22352600097656
patch: traverse ( children . get CaMeL First CaMeL Child ( ) , node ) ;
rank: 76
score: 99.03309122721355
patch: traverse ( c , c . traverse ( ) ) ;
rank: 76
score: 98.99945746527777
patch: traverse ( c , c ) ; ;
rank: 77
score: 99.3026123046875
patch: Node node = c . get CaMeL Next ( ) ;
rank: 77
score: 99.26450020926339
patch: traverse ( current = c . get CaMeL Next ( ) ) ;
rank: 77
score: 99.25987243652344
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , type ) ;
rank: 77
score: 99.22153145926339
patch: Node next = next . get CaMeL First CaMeL Child ( ) ;
rank: 77
score: 99.00956456801471
patch: throw new Runtime CaMeL Exception ( c . get CaMeL Name ( ) ) ; }
rank: 77
score: 98.9993408203125
patch: do { traverse ( c , c ) ;
rank: 78
score: 99.30138397216797
patch: node = next ( c . get CaMeL First CaMeL Child ( ) ) ;
rank: 78
score: 99.2962158203125
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) ) ; }
rank: 78
score: 99.25938197544643
patch: next = c . get CaMeL Next ( ) ; c = c . get CaMeL Next ( ) ;
rank: 78
score: 99.2262850674716
patch: state = c . get CaMeL Next ( ) ;
rank: 78
score: 99.22320556640625
patch: traverse ( c , node , true ) ;
rank: 78
score: 99.21907043457031
patch: traverse ( Node . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 78
score: 99.02945285373264
patch: traverse ( c , - 1 ) ;
rank: 78
score: 99.00707194010417
patch: try { c = c . get CaMeL First CaMeL Line ( ) ;
rank: 78
score: 98.99903453480114
patch: traverse ( c ) ; traverse ( n ) ;
rank: 79
score: 99.2996597290039
patch: try { traverse ( c . get CaMeL First CaMeL Child ( ) ) ;
rank: 79
score: 99.29529260706019
patch: c = c . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 79
score: 99.25670623779297
patch: traverse ( n . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 79
score: 99.22577459161931
patch: tmp = c . get CaMeL Next ( ) ;
rank: 79
score: 99.02930908203125
patch: traverse ( c + 0 , c ) ;
rank: 79
score: 98.99899291992188
patch: if ( c != ) { traverse ( c ) ;
rank: 80
score: 99.29938616071429
patch: c = ( c . get CaMeL First CaMeL Child ( ) ) . get CaMeL Next ( ) ;
rank: 80
score: 99.29477945963542
patch: c = ( node . get CaMeL First CaMeL Child ( ) ) . get CaMeL First CaMeL Child ( ) ; }
rank: 80
score: 99.26046316964286
patch: visit ( next = c . get CaMeL Next ( ) ) ;
rank: 80
score: 99.25584411621094
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , next ) ;
rank: 80
score: 99.22411170372597
patch: name = c . get CaMeL First CaMeL Child ( ) ;
rank: 80
score: 99.2216288248698
patch: traverse ( c , ; c = c . get ;
rank: 80
score: 99.0292217548077
patch: traverse ( c , node ) ; traverse ( c ) ;
rank: 80
score: 99.00567157451923
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Name ( ) ) ;
rank: 80
score: 98.99875112680289
patch: if ( ! c . is CaMeL Empty ( ) ) ;
rank: 81
score: 99.29825032552084
patch: Node c = Node . get CaMeL First CaMeL Child ( c ) ;
rank: 81
score: 99.29324501439145
patch: c = c . get CaMeL Parent ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 81
score: 99.22153607536765
patch: traverse ( c , ; node . get CaMeL First CaMeL Child ( ) ) ;
rank: 81
score: 99.21208190917969
patch: if ( c == node . get CaMeL First CaMeL Child ( ) ) {
rank: 81
score: 99.02728271484375
patch: traverse ( parent , c ) ;
rank: 81
score: 99.00489566200658
patch: System . out . println ( $STRING$ + c . get CaMeL Name ( ) ) ; }
rank: 81
score: 98.99531860351563
patch: traverse ( c && c == null ) ;
rank: 82
score: 99.29120232077206
patch: traverse ( c ) ; c = c . get CaMeL Parent ( ) ; }
rank: 82
score: 99.22298758370536
patch: Symbol next = c . get CaMeL First CaMeL Child ( ) ;
rank: 82
score: 99.22089979383681
patch: c = c . ; c = c . get CaMeL First CaMeL Child ( ) ;
rank: 82
score: 99.21142578125
patch: traverse ( type . get CaMeL First CaMeL Child ( ) ) ;
rank: 82
score: 99.00471576891448
patch: System . err . println ( $STRING$ + c . get CaMeL Name ( ) ) ; }
rank: 82
score: 98.99336460658482
patch: traverse ( c == ) ;
rank: 83
score: 99.25556182861328
patch: c = c . get ( c . get CaMeL Next ( ) ) ;
rank: 83
score: 99.25524321056548
patch: c = c . get CaMeL Next ( ) ; c = node . get CaMeL Next ( ) ;
rank: 83
score: 99.22266387939453
patch: traverse ( c && c . get CaMeL First CaMeL Child ( ) ) ;
rank: 83
score: 99.02560424804688
patch: traverse ( c , c ) ; c = node ;
rank: 83
score: 99.0045394897461
patch: if ( ! c . is CaMeL Empty ( ) ) { break ; }
rank: 83
score: 98.99044979319854
patch: if ( ! c . iterator ( ) . iterator ( ) . : c ;
rank: 84
score: 99.28948974609375
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) . get CaMeL Last CaMeL Child ( ) ) ;
rank: 84
score: 99.22238595145089
patch: if ( c != null )
rank: 84
score: 99.22027587890625
patch: traverse ( c ) ; c = c . get ;
rank: 84
score: 99.02469576322116
patch: traverse ( c , c . traverse ( c ) ) ;
rank: 84
score: 99.0033428485577
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) )
rank: 84
score: 98.98966841264205
patch: if ( c ) { traverse ( c ) ;
rank: 85
score: 99.2930908203125
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 85
score: 99.28902180989583
patch: traverse ( c . get CaMeL Parent ( ) . get CaMeL Parent ( ) ) ;
rank: 85
score: 99.25439453125
patch: traverse ( c . get CaMeL Next ( ) , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 85
score: 99.25399780273438
patch: traverse ( 0 , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 85
score: 99.22011893136161
patch: int n = c . get CaMeL First CaMeL Child ( ) ;
rank: 85
score: 99.2070083618164
patch: if ( node . get CaMeL First CaMeL Child ( ) != null ) }
rank: 85
score: 99.01966959635416
patch: c = c . traverse ( c ) ; traverse ( c ) ;
rank: 85
score: 99.00310668945312
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Message ( ) ) ;
rank: 85
score: 98.98801676432292
patch: if ( c != null ) { c = c ;
rank: 86
score: 99.2922134399414
patch: traverse ( c . get CaMeL First CaMeL Child ( ) ) ; return ;
rank: 86
score: 99.28842002467105
patch: traverse ( c . ; c = c . get CaMeL First CaMeL Child ( ) ) ;
rank: 86
score: 99.25382232666016
patch: c = c . get CaMeL Next ( ) ; visit ( c ) ;
rank: 86
score: 99.21929931640625
patch: if ( c . get CaMeL First CaMeL Child ( ) != )
rank: 86
score: 99.21891704358552
patch: if ( ! c . ; c = c . get CaMeL First CaMeL Child ( ) )
rank: 86
score: 99.2060077373798
patch: c = n . get CaMeL First CaMeL Child ( ) ;
rank: 86
score: 99.01958673650569
patch: traverse ( true ) ; traverse ( c ) ;
rank: 86
score: 99.00221354166666
patch: else { c = c . get CaMeL First CaMeL Child ( ) ;
rank: 86
score: 98.98616849459134
patch: if ( traverse ( c ) ) traverse ( c ) ;
rank: 87
score: 99.28839789496527
patch: traverse ( c ) ; c = c . get CaMeL Current CaMeL Node ( ) ;
rank: 87
score: 99.25185139973958
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 87
score: 99.21875871930804
patch: Node n = c . get CaMeL First CaMeL Child ( ) ;
rank: 87
score: 99.21644810267857
patch: Class n = c . get CaMeL First CaMeL Child ( ) ;
rank: 87
score: 99.01561889648437
patch: traverse ( c ) ; for ( ) ;
rank: 87
score: 99.00215657552083
patch: return traverse ( c , c ) ;
rank: 87
score: 98.98495483398438
patch: if ( ! traverse ( c , c ) ) {
rank: 88
score: 99.29181671142578
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , false ) ;
rank: 88
score: 99.28757149832589
patch: traverse ( c . get CaMeL Root CaMeL Node ( ) ) ;
rank: 88
score: 99.25333898207721
patch: c = c != null && c . get CaMeL First CaMeL Child ( ) ;
rank: 88
score: 99.25002034505208
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , node ) ;
rank: 88
score: 99.21835166529605
patch: c = c . ; c = c . get CaMeL First CaMeL Child ( ) ; }
rank: 88
score: 99.21404559795673
patch: iter = c . get CaMeL First CaMeL Child ( ) ;
rank: 88
score: 99.2055419921875
patch: try { c = node . get CaMeL First CaMeL Child ( ) ;
rank: 88
score: 99.0013427734375
patch: c = c . get CaMeL Parent ( ) ; break ; }
rank: 88
score: 98.98490905761719
patch: traverse ( c == null ) ;
rank: 89
score: 99.28751831054687
patch: traverse ( c . get CaMeL Parent ( ) , c . get CaMeL Parent ( ) ) ;
rank: 89
score: 99.25247395833334
patch: c . node = c . get CaMeL First CaMeL Child ( ) ;
rank: 89
score: 99.24969773065476
patch: c = node . get CaMeL Next ( ) ; c = c . get CaMeL Next ( ) ;
rank: 89
score: 99.21714274088542
patch: if ( c == ; c = c . get CaMeL First CaMeL Child ( ) )
rank: 89
score: 99.21214710582386
patch: r = c . get CaMeL Next ( ) ;
rank: 89
score: 99.0111083984375
patch: c = c ; traverse ( c ) ;
rank: 89
score: 99.00022583007812
patch: traverse ( c ) ; } return true ;
rank: 89
score: 98.98453463040866
patch: if ( c != c ) { traverse ( c ) ;
rank: 90
score: 99.28639526367188
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent ( ) ) ;
rank: 90
score: 99.25174153645834
patch: traverse ( . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 90
score: 99.2466571514423
patch: c = c . get CaMeL Next ( ) ; break ;
rank: 90
score: 99.21610514322917
patch: traverse ( c ) ; c = c . get CaMeL Last CaMeL Sibling ( ) ;
rank: 90
score: 99.21197509765625
patch: Child c = c . get CaMeL Next ( ) ;
rank: 90
score: 99.20534104567308
patch: next = c . get CaMeL First CaMeL Child ( ) ;
rank: 90
score: 99.01098022460937
patch: traverse ( c + 1 , c ) ;
rank: 90
score: 98.99887319711539
patch: try { c = c . get CaMeL Parent ( ) ;
rank: 90
score: 98.98309881036931
patch: if ( c != null ) { return ; }
rank: 91
score: 99.28927612304688
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , true ) ;
rank: 91
score: 99.2858378092448
patch: traverse ( c . get CaMeL Root CaMeL Node ( ) , c . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 91
score: 99.25145545372597
patch: node . next = c . get CaMeL Next ( ) ;
rank: 91
score: 99.21120779854911
patch: Decl c = c . get CaMeL First CaMeL Child ( ) ;
rank: 91
score: 98.99840545654297
patch: if ( ! c . is CaMeL Empty ( ) ) { return ; }
rank: 92
score: 99.21451568603516
patch: if ( c . get CaMeL Type ( ) == Node . ) return ;
rank: 92
score: 99.21114095052083
patch: Object node = c . get CaMeL Next ( ) ;
rank: 92
score: 99.20290958180146
patch: if ( c . get CaMeL First CaMeL Child ( ) != null ) return ;
rank: 92
score: 99.00940880408653
patch: traverse ( c ) ; c = c . ( ) ;
rank: 92
score: 98.9969991048177
patch: if ( ! c . is CaMeL Empty ( ) )
rank: 92
score: 98.981201171875
patch: traverse ( c ) ) ;
rank: 93
score: 99.28813032670455
patch: Node c = ( node . get CaMeL First CaMeL Child ( ) ) . get CaMeL Next ( ) ;
rank: 93
score: 99.28506234975961
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Last CaMeL Child ( ) ) ;
rank: 93
score: 99.24840436662946
patch: c = c . get CaMeL Next ( ) ; visits ++ ;
rank: 93
score: 99.24613189697266
patch: traverse ( n . get CaMeL First CaMeL Child ( ) , node ) ;
rank: 93
score: 99.21107066761364
patch: binding = c . get CaMeL Next ( ) ;
rank: 93
score: 99.20200758713942
patch: Preconditions = c . get CaMeL First CaMeL Child ( ) ;
rank: 93
score: 99.00876089242789
patch: traverse ( c || c . equals ( c ) ) ;
rank: 93
score: 98.99551391601562
patch: traverse ( c ) ; } traverse ( c ) ;
rank: 93
score: 98.97970581054688
patch: if ( c != null ) { ) {
rank: 94
score: 99.2864990234375
patch: Node c = this . get CaMeL First CaMeL Child ( c ) ;
rank: 94
score: 99.24122256324405
patch: c = c . get CaMeL Next ( ) ; c = n . get CaMeL Next ( ) ;
rank: 94
score: 99.2113037109375
patch: traverse ( c , ; ) ;
rank: 94
score: 99.21004813058036
patch: Object n = c . get CaMeL First CaMeL Child ( ) ;
rank: 94
score: 99.20143345424107
patch: Node next = parent . get CaMeL First CaMeL Child ( ) ;
rank: 94
score: 99.00755479600694
patch: try { ; traverse ( c ) ;
rank: 95
score: 99.283935546875
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL Current CaMeL Node ( ) ) ;
rank: 95
score: 99.20971069335937
patch: traverse ( c , ; c = c . get CaMeL Last CaMeL Child ( ) ) ; }
rank: 95
score: 99.00668131510416
patch: traverse ( c , c ) ; out . traverse ( c ) ;
rank: 95
score: 98.97913953993056
patch: traverse ( c , c ) ) ;
rank: 96
score: 99.28319027549342
patch: traverse ( c . traverse ( c . get CaMeL Parent CaMeL Node ( ) ) ) ;
rank: 96
score: 99.24654388427734
patch: visit ( c ) ; c = c . get CaMeL Next ( ) ;
rank: 96
score: 99.23826197574013
patch: c = c . get CaMeL Next ( ) : c . get CaMeL Next ( ) ;
rank: 96
score: 99.20902876420455
patch: ref = c . get CaMeL Next ( ) ;
rank: 96
score: 99.2083381204044
patch: traverse ( c ) ; c = c . get CaMeL Next ( ) ; }
rank: 96
score: 99.00589693509616
patch: cfw . traverse ( c ) ; traverse ( c ) ;
rank: 96
score: 98.97901000976563
patch: try { traverse ( c ) ; return ;
rank: 97
score: 99.28386896306819
patch: Node c = ( c . get CaMeL First CaMeL Child ( ) ) . get CaMeL Next ( ) ;
rank: 97
score: 99.2831394361413
patch: c = ( node . get CaMeL First CaMeL Child ( ) ) . get CaMeL Last CaMeL Child ( ) ;
rank: 97
score: 99.246240234375
patch: c = c . get CaMeL Next ( ) . get ( ) ;
rank: 97
score: 99.2376200358073
patch: traverse ( node . get CaMeL First CaMeL Child ( ) , node . get CaMeL First CaMeL Child ( ) ) ;
rank: 97
score: 99.20870535714286
patch: Iterator n = c . get CaMeL First CaMeL Child ( ) ;
rank: 97
score: 99.2063232421875
patch: traverse ( c , ; c = c . get CaMeL Next ) ;
rank: 97
score: 99.00571511008523
patch: traverse ( c ) ; c ( c ) ;
rank: 97
score: 98.99427286783855
patch: try { c = c . traverse ( c ) ;
rank: 97
score: 98.97843170166016
patch: if ( ! c . iterator ( ) . iterator ( ) . -- ;
rank: 98
score: 99.28294735863095
patch: pos = c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 98
score: 99.23694719587054
patch: traverse ( c . get CaMeL Next ( ) , c ) ;
rank: 98
score: 99.20821439302884
patch: list = c . get CaMeL First CaMeL Child ( ) ;
rank: 98
score: 99.20454676011029
patch: if ( c . get CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 98
score: 99.1983154296875
patch: return . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ; }
rank: 98
score: 99.00510817307692
patch: traverse ( c || node . traverse ( c ) ) ;
rank: 98
score: 98.97752549913194
patch: if ( traverse ( c ) ) ;
rank: 99
score: 99.2828369140625
patch: c = ( c . get CaMeL First CaMeL Child ( ) ) . get CaMeL First CaMeL Child ( ) ; }
rank: 99
score: 99.243896484375
patch: c . get ( c . get CaMeL First CaMeL Child ( ) ) ;
rank: 99
score: 99.23676409040179
patch: traverse ( next = node . get CaMeL Next ( ) ) ;
rank: 99
score: 99.20414428710937
patch: traverse ( c , true , true ) ;
rank: 99
score: 99.00494384765625
patch: traverse ( false ) ;
rank: 99
score: 98.97694749098558
patch: if ( c != 0 ) { traverse ( c ) ;
rank: 100
score: 99.28213500976562
patch: c = ( Node ) c . get CaMeL Last CaMeL Child ( ) ;
rank: 100
score: 99.24369812011719
patch: c . get CaMeL First CaMeL Child ( ) . traverse ( c ) ;
rank: 100
score: 99.23666178385416
patch: traverse ( ! c . get CaMeL First CaMeL Child ( ) ) ;
rank: 100
score: 99.20744105747768
patch: Symbol n = c . get CaMeL First CaMeL Child ( ) ;
rank: 100
score: 99.20393371582031
patch: c = c . get CaMeL Parent CaMeL Node ( ) ; break ; }
rank: 100
score: 99.19820731026786
patch: Node c = n . get CaMeL First CaMeL Child ( ) ;
rank: 100
score: 99.00477294921875
patch: traverse ( c + 1 , node ) ;
rank: 100
score: 98.99029250372024
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) ;
rank: 100
score: 98.97605678013393
patch: if ( c != null ) { traverse ( c ) ; }
rank: 101
score: 99.28014026988636
patch: Node next = ( node . get CaMeL First CaMeL Child ( ) ) . get CaMeL Next ( ) ;
rank: 101
score: 99.27966889880952
patch: c = c . get CaMeL First CaMeL Child ( ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 101
score: 99.24298565204327
patch: traverse ( c . get CaMeL Next ( ) ) ; }
rank: 101
score: 99.23575533353366
patch: try { next = c . get CaMeL Next ( ) ;
rank: 101
score: 99.20554762620192
patch: parent = c . get CaMeL First CaMeL Child ( ) ;
rank: 101
score: 99.20262451171875
patch: String name = c . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ;
rank: 101
score: 99.00289916992188
patch: traverse ( c , c . node ) ;
rank: 101
score: 98.99028577302632
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Name ( ) ) ; }
rank: 101
score: 98.97401780348558
patch: if ( c == c ) { traverse ( c ) ;
rank: 102
score: 99.27962917751736
patch: if ( c . get CaMeL Name ( ) . starts CaMeL With ( $STRING$ ) )
rank: 102
score: 99.24292931189903
patch: traverse ( . get CaMeL First CaMeL Child ( ) ) ;
rank: 102
score: 99.20431518554688
patch: Result next = c . get CaMeL Next ( ) ;
rank: 102
score: 99.2023213704427
patch: traverse ( c , ;
rank: 102
score: 99.19754464285714
patch: Node parent = c . get CaMeL First CaMeL Child ( ) ;
rank: 102
score: 99.00189819335938
patch: traverse ( c , node ) ; return ;
rank: 102
score: 98.98908342633929
patch: if ( ! n . is CaMeL Empty ( ) ) break ;
rank: 103
score: 99.27880859375
patch: Node next = ( Node ) c . get CaMeL First CaMeL Child ( ) ;
rank: 103
score: 99.27862258184524
patch: c = c . get CaMeL Last CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 103
score: 99.24217987060547
patch: traverse ( c , node . get CaMeL Last CaMeL Child ( ) ) ;
rank: 103
score: 99.23533935546875
patch: traverse ( c , c . get CaMeL Next = c . get CaMeL Next ( ) ) ;
rank: 103
score: 99.2022769325658
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( c != null )
rank: 103
score: 99.19430776742789
patch: visits = node . get CaMeL First CaMeL Child ( ) ;
rank: 103
score: 99.00135294596355
patch: traverse ( c ) ; this . c = c ;
rank: 103
score: 98.97203979492187
patch: traverse ( c , c , null ) ;
rank: 104
score: 99.27786254882812
patch: traverse ( c . get CaMeL Current CaMeL Node ( ) , c . get CaMeL Current CaMeL Node ( ) ) ;
rank: 104
score: 99.27579991957721
patch: Node c = ( Node ) c . get CaMeL First CaMeL Child ( ) ;
rank: 104
score: 99.2419204711914
patch: traverse ( c ) ; node = c . get CaMeL Next ( ) ;
rank: 104
score: 99.234619140625
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , node . get CaMeL Next ( ) ) ;
rank: 104
score: 99.20396839488636
patch: t = c . get CaMeL Next ( ) ;
rank: 104
score: 99.19371686662946
patch: traverse ( Node . get CaMeL First CaMeL Child ( ) ) ;
rank: 104
score: 98.9856844815341
patch: if ( c != null ) { break ; }
rank: 104
score: 98.97178141276042
patch: if ( n != null ) traverse ( c ) ;
rank: 105
score: 99.27782141644022
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ) ; }
rank: 105
score: 99.27505493164062
patch: traverse ( ref . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 105
score: 99.23347303602431
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , node ) ;
rank: 105
score: 99.20376586914062
patch: Value next = c . get CaMeL Next ( ) ;
rank: 105
score: 99.20090203536184
patch: traverse ( c ) ; c = c . get CaMeL Last CaMeL Sibling ( ) ; }
rank: 105
score: 99.1932373046875
patch: Node c = c . get CaMeL Last CaMeL Child ( ) ;
rank: 105
score: 98.99971516927083
patch: traverse ( c , ) ; traverse ( c ) ;
rank: 105
score: 98.98550180288461
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Id ( ) ) )
rank: 105
score: 98.97121360085227
patch: try { traverse ( c , c ) ; }
rank: 106
score: 99.2765604654948
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Last CaMeL Child ( ) ) ;
rank: 106
score: 99.23153686523438
patch: traverse ( node . get CaMeL First CaMeL Child ( ) , n ) ;
rank: 106
score: 99.20074462890625
patch: c = c . get CaMeL Last CaMeL Child ( ) ; }
rank: 106
score: 99.1927490234375
patch: traverse ( parent . get CaMeL First CaMeL Child ( ) , node ) ;
rank: 106
score: 98.99964057074652
patch: traverse ( c + - 1 ) ;
rank: 106
score: 98.97008260091145
patch: if ( ! c . equals ( c ) ) ;
rank: 107
score: 99.27608816964286
patch: c = c . get CaMeL First CaMeL Child ( ) . get CaMeL Last CaMeL Child ( ) ;
rank: 107
score: 99.27391706194196
patch: next ( c . get CaMeL First CaMeL Child ( ) ) ;
rank: 107
score: 99.24116067325367
patch: Node next = c . get CaMeL Next ( ) ; traverse ( c ) ;
rank: 107
score: 99.23028094951923
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) . get CaMeL Next ( ) ) ;
rank: 107
score: 99.2032137784091
patch: expr = c . get CaMeL Next ( ) ;
rank: 107
score: 99.20030453330592
patch: n = c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) ;
rank: 107
score: 99.19244025735294
patch: return . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ;
rank: 107
score: 98.98347024356617
patch: if ( ! c . is CaMeL Empty ( ) ) traverse ( c ) ;
rank: 108
score: 99.27587890625
patch: traverse ( ) ; c = c . get CaMeL First CaMeL Child ( ) ; }
rank: 108
score: 99.27377319335938
patch: traverse ( c . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 108
score: 99.24102020263672
patch: Node c = c . get CaMeL Next ( ) ; c = next ;
rank: 108
score: 99.22950962611607
patch: traverse ( n , c . get CaMeL Next ( ) ) ;
rank: 108
score: 99.20282854352679
patch: return c . get CaMeL First CaMeL Child ( ) ; } }
rank: 108
score: 99.19921003069196
patch: traverse ( c , ; c = c . get CaMeL Next ;
rank: 108
score: 99.1919657389323
patch: return . get CaMeL First CaMeL Child ( ) ; }
rank: 108
score: 98.99930826822917
patch: traverse ( c , c . size ( ) ) ;
rank: 108
score: 98.98283247514205
patch: if ( node . get CaMeL Name ( ) . equals ( node . get CaMeL Name ( ) ) )
rank: 108
score: 98.96905517578125
patch: try { traverse ( c ) ; else {
rank: 109
score: 99.27585767663044
patch: c = ( node . get CaMeL First CaMeL Child ( ) ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 109
score: 99.27156829833984
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , $STRING$ ) ;
rank: 109
score: 99.23944091796875
patch: traverse ( this , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 109
score: 99.228759765625
patch: traverse ( c , c . get CaMeL Next ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 109
score: 99.20267159598214
patch: Class c = c . get CaMeL First CaMeL Child ( ) ;
rank: 109
score: 99.19132486979167
patch: if ( ! should CaMeL Visit ( c ) ) {
rank: 109
score: 98.99762725830078
patch: traverse ( false , c ) ;
rank: 109
score: 98.98192487444196
patch: if ( ! node . is CaMeL Empty ( ) ) { }
rank: 109
score: 98.96815999348958
patch: if ( c == 0 ) traverse ( c ) ;
rank: 110
score: 99.27557051809211
patch: traverse ( c ) ; n = c . get CaMeL First CaMeL Child ( ) ; }
rank: 110
score: 99.27108764648438
patch: Node c = ( node . get CaMeL First CaMeL Child ( ) ) . get CaMeL First CaMeL Child ( ) ;
rank: 110
score: 99.23809407552083
patch: c = node . get = c . get CaMeL Next ( ) ;
rank: 110
score: 99.22863188244048
patch: c = c . get CaMeL Next ( ) ; next = c . get CaMeL Next ( ) ;
rank: 110
score: 99.19075012207031
patch: traverse ( Node . get CaMeL First CaMeL Child ( ) , node ) ;
rank: 110
score: 98.98005894252232
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c ) ;
rank: 111
score: 99.27506713867187
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) ) ;
rank: 111
score: 99.27106267755681
patch: Node next = ( c . get CaMeL First CaMeL Child ( ) ) . get CaMeL Next ( ) ;
rank: 111
score: 99.20221354166667
patch: if ( c . get CaMeL First CaMeL Child ( ) != node )
rank: 111
score: 99.19617309570313
patch: traverse ( c , true , false ) ;
rank: 111
score: 99.1884765625
patch: if ( node . get CaMeL Last CaMeL Child ( ) != null ) {
rank: 111
score: 98.97952706473214
patch: if ( ! node . is CaMeL Empty ( ) ) break ;
rank: 111
score: 98.96741943359375
patch: try { traverse ( c , $NUMBER$ ) ;
rank: 112
score: 99.2749911221591
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL Parent ( ) ) ;
rank: 112
score: 99.23709810697116
patch: next : c = c . get CaMeL Next ( ) ;
rank: 112
score: 99.22787911551339
patch: Node next = c . get CaMeL Next ( ) ; break ;
rank: 112
score: 99.19615263097427
patch: traverse ( c , ; c . get CaMeL First CaMeL Child ( ) ) ;
rank: 112
score: 99.18751525878906
patch: traverse ( type . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 112
score: 98.99506225585938
patch: traverse ( c + 0 , node ) ;
rank: 112
score: 98.97901611328125
patch: traverse ( c ) ; } return ) ;
rank: 112
score: 98.96731567382812
patch: traverse ( c != null - 1 ) ;
rank: 113
score: 99.27496016652961
patch: c = c . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 113
score: 99.27006312779018
patch: Node [ ] c = c . get CaMeL Next ( ) ;
rank: 113
score: 99.22782679966518
patch: traverse ( c . get CaMeL Next ( ) , n ) ;
rank: 113
score: 99.19794108072917
patch: if ( c . get CaMeL First CaMeL Child ( ) == node )
rank: 113
score: 99.19513346354167
patch: traverse c = c . get CaMeL First CaMeL Child ( ) ; }
rank: 113
score: 99.18729073660714
patch: if ( ! node . get CaMeL First CaMeL Child ( ) . is CaMeL Empty ( ) ) {
rank: 113
score: 98.97898356119792
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) return ;
rank: 113
score: 98.96718139648438
patch: traverse ( c , 0 , null ) ;
rank: 114
score: 99.2746249112216
patch: traverse ( c . get CaMeL Parent ( ) , c . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 114
score: 99.26991271972656
patch: traverse ( ref = c . get CaMeL First CaMeL Child ( ) ) ;
rank: 114
score: 99.236376953125
patch: traverse ( node . get CaMeL First CaMeL Child ( ) ) ; }
rank: 114
score: 99.1952412923177
patch: node = c . get CaMeL Next ( ) ; }
rank: 114
score: 99.19495849609375
patch: traverse ( c , node , false ) ;
rank: 114
score: 98.9937032063802
patch: traverse ( c , node ) ; c = c ;
rank: 114
score: 98.97893732244319
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 114
score: 98.96694113991477
patch: if ( c != null ) c = c ;
rank: 115
score: 99.23622233072916
patch: next = c . get CaMeL Next ( ) ; c = next ;
rank: 115
score: 99.19454956054688
patch: Symbol c = c . get CaMeL Next ( ) ;
rank: 115
score: 99.19449013157895
patch: int n = c . get CaMeL First CaMeL Child ( ) ; traverse ( c ) ;
rank: 115
score: 98.9659194946289
patch: traverse ( c , type ) ;
rank: 116
score: 99.27451393821023
patch: c = c . get CaMeL Parent CaMeL Node ( ) . get CaMeL First CaMeL Child ( ) ; }
rank: 116
score: 99.23611886160714
patch: visit ( node . get CaMeL First CaMeL Child ( ) ) ;
rank: 116
score: 99.22525024414062
patch: traverse ( next . get CaMeL First CaMeL Child ( ) , n ) ;
rank: 116
score: 99.19415283203125
patch: Object c = node . get CaMeL First CaMeL Child ( ) ;
rank: 116
score: 99.1865234375
patch: Node [ ] next = c . get CaMeL Next ( ) ;
rank: 116
score: 98.99209594726562
patch: c = c . get CaMeL Instance ( ) ; traverse ( c ) ;
rank: 116
score: 98.977294921875
patch: else { c = c . get CaMeL First CaMeL Line ( ) ;
rank: 116
score: 98.96529541015624
patch: if ( c ) traverse ( c ) ;
rank: 117
score: 99.26921081542969
patch: traverse ( ref , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 117
score: 99.23590959821429
patch: traverse ( c = c . get CaMeL Next ( ) ) ;
rank: 117
score: 99.22466169084821
patch: Node c = c . get CaMeL Next ( ) ; break ;
rank: 117
score: 99.19354248046875
patch: traverse ( c , node ) ; }
rank: 117
score: 99.19296061197916
patch: if ( c . get CaMeL Last CaMeL Child ( ) != null )
rank: 117
score: 99.1853778545673
patch: traverse = c . get CaMeL First CaMeL Child ( ) ;
rank: 117
score: 98.99144568810097
patch: traverse ( c && node . traverse ( c ) ) ;
rank: 117
score: 98.97718505859375
patch: traverse ( c , c , parent ) ;
rank: 117
score: 98.96393432617188
patch: try { traverse ( n , c ) ;
rank: 118
score: 99.22376360212054
patch: traverse ( c . get CaMeL Next ( ) , null ) ;
rank: 118
score: 99.19272085336539
patch: this . c = c . get CaMeL Next ( ) ;
rank: 118
score: 99.18516322544643
patch: Node node = node . get CaMeL First CaMeL Child ( ) ;
rank: 118
score: 98.99142456054688
patch: traverse ( c , c + 0 ) ;
rank: 119
score: 99.27318318684895
patch: traverse ( ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 119
score: 99.23512620192308
patch: c = c = c . get CaMeL Next ( ) ;
rank: 119
score: 99.19265265213816
patch: traverse ( c , ; c = c . get CaMeL Last CaMeL Sibling ( ) ) ;
rank: 119
score: 99.19140625
patch: int current = c . get CaMeL First CaMeL Child ( ) ;
rank: 119
score: 99.18312766335227
patch: Preconditions = c . get CaMeL Next ( ) ;
rank: 119
score: 98.99085489908855
patch: traverse ( c ) ; ; traverse ( c ) ;
rank: 119
score: 98.9763653094952
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Id ( ) ) ;
rank: 119
score: 98.96121920072116
patch: if ( n != 0 ) { traverse ( c ) ;
rank: 120
score: 99.272998046875
patch: traverse ( c , c . get CaMeL Parent ( ) ) ; }
rank: 120
score: 99.22181193033855
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 120
score: 99.19138009207589
patch: Token c = c . get CaMeL First CaMeL Child ( ) ;
rank: 120
score: 99.18890787760417
patch: ; c = c . get CaMeL First CaMeL Child ( ) ; }
rank: 120
score: 98.99031982421874
patch: traverse ( c , c . c ) ;
rank: 120
score: 98.97636333264802
patch: System . out . println ( $STRING$ + c . get CaMeL Id ( ) ) ; }
rank: 120
score: 98.95796712239583
patch: if ( c != 0 ) traverse ( c ) ;
rank: 121
score: 99.27217864990234
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , true ) ;
rank: 121
score: 99.23341721754808
patch: c = this . c . get CaMeL Next ( ) ;
rank: 121
score: 99.22113909040179
patch: add ( c . get CaMeL First CaMeL Child ( ) ) ;
rank: 121
score: 99.1907626065341
patch: body = c . get CaMeL Next ( ) ;
rank: 121
score: 99.1885922080592
patch: n = c . get CaMeL First CaMeL Child ( ) ; } traverse ( c ) ;
rank: 121
score: 98.99020821707589
patch: else traverse ( c ) ;
rank: 121
score: 98.97597092848558
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Class CaMeL Name ( ) ) ;
rank: 121
score: 98.95795288085938
patch: if ( ) { traverse ( c ) ;
rank: 122
score: 99.27119777513587
patch: c = ( node . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 122
score: 99.26480538504464
patch: traverse ( input . get CaMeL First CaMeL Child ( ) ) ;
rank: 122
score: 99.23333270733173
patch: c ; c = c . get CaMeL Next ( ) ;
rank: 122
score: 99.21891784667969
patch: visit ( c . get CaMeL First CaMeL Child ( ) , node ) ;
rank: 122
score: 99.18977573939732
patch: Value c = c . get CaMeL First CaMeL Child ( ) ;
rank: 122
score: 99.18065643310547
patch: traverse ( type . get CaMeL First CaMeL Child ( ) , node ) ;
rank: 122
score: 98.9757144325658
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Id ( ) ) ; }
rank: 122
score: 98.9576924641927
patch: if ( c != c ) traverse ( c ) ;
rank: 123
score: 99.2708231608073
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Current CaMeL Node ( ) ) ;
rank: 123
score: 99.18845436789773
patch: found = c . get CaMeL Next ( ) ;
rank: 123
score: 99.18048858642578
patch: traverse ( node . get CaMeL First CaMeL Child ( ) , null ) ;
rank: 123
score: 98.98818359375
patch: traverse ( ( traverse ( c ) ) ;
rank: 123
score: 98.95530395507812
patch: try { c = c ; } else {
rank: 124
score: 99.27033025568181
patch: traverse ( c , c . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 124
score: 99.26383209228516
patch: traverse ( input . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 124
score: 99.2167438009511
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Next ( ) ;
rank: 124
score: 98.9881591796875
patch: c = c . get CaMeL Parent ( ) ; traverse ( c ) ;
rank: 124
score: 98.95408935546875
patch: traverse ( c , null , c ) ;
rank: 125
score: 99.26976521809895
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Root CaMeL Node ( ) ) ;
rank: 125
score: 99.2633768717448
patch: Node c = c . get CaMeL Parent ( ) ;
rank: 125
score: 99.2310791015625
patch: traverse ( 0 , node . get CaMeL First CaMeL Child ( ) ) ;
rank: 125
score: 99.21656383167614
patch: traverse ( next . get CaMeL First CaMeL Child ( ) , next . get CaMeL Next ( ) ) ;
rank: 125
score: 99.18742231889205
patch: element = c . get CaMeL Next ( ) ;
rank: 125
score: 99.18680148654514
patch: traverse ( c , false ) ; }
rank: 125
score: 99.17945207868304
patch: c = this . get CaMeL First CaMeL Child ( c ) ;
rank: 125
score: 98.9861172762784
patch: traverse ( node , traverse ( c ) ) ;
rank: 125
score: 98.97426535866477
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) return ;
rank: 125
score: 98.9540546123798
patch: if ( ! traverse ( c ) ) { return ; }
rank: 126
score: 99.26966349283855
patch: traverse ( c , node . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 126
score: 99.23003278459821
patch: traverse ( node , node . get CaMeL Next ( ) ) ;
rank: 126
score: 99.2150166829427
patch: traverse ( node . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 126
score: 99.1873446377841
patch: q = c . get CaMeL Next ( ) ;
rank: 126
score: 99.18556213378906
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( ;
rank: 126
score: 99.17894744873047
patch: if ( c . get CaMeL First CaMeL Child ( ) instanceof Node ) {
rank: 126
score: 98.9831210049716
patch: traverse ( c ; traverse ( c ) ) ;
rank: 127
score: 99.26273600260417
patch: int c = c . get CaMeL Next ( ) ;
rank: 127
score: 99.2289794921875
patch: c = node . get CaMeL Next ( ) ; c = next ;
rank: 127
score: 99.21498413085938
patch: traverse ( c , c . get CaMeL Next ( ) . get CaMeL Next ( ) ) ;
rank: 127
score: 99.18703988882211
patch: switch ( c . get CaMeL First CaMeL Child ( ) )
rank: 127
score: 98.98215942382812
patch: traverse ( c ) ; c += c ;
rank: 127
score: 98.97378141983695
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) ;
rank: 127
score: 98.95302512428977
patch: try { traverse ( traverse ( c ) ) ;
rank: 128
score: 99.26918431332237
patch: traverse ( c ) ; c = c . get CaMeL Root CaMeL Node ( ) ; }
rank: 128
score: 99.26182047526042
patch: Node c = ( c . get CaMeL First CaMeL Child ( ) ) . get CaMeL First CaMeL Child ( ) ;
rank: 128
score: 99.21497163318452
patch: if ( c . get CaMeL First CaMeL Child ( ) != null && c . get CaMeL Next CaMeL
rank: 128
score: 99.18655395507812
patch: if ( c . should CaMeL Visit ( c . get CaMeL First CaMeL Child ( ) ) )
rank: 128
score: 99.1842269897461
patch: c = c . get CaMeL First CaMeL Child ( ) ; } * /
rank: 128
score: 99.17783203125
patch: while ( c . get CaMeL First CaMeL Child ( ) != null )
rank: 128
score: 98.98186492919922
patch: traverse ( c + node ) ;
rank: 128
score: 98.9729473407452
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 128
score: 98.95291137695312
patch: traverse ( c , c , 1 ) ;
rank: 129
score: 99.269072265625
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Last CaMeL Child ( ) ) ; }
rank: 129
score: 99.22542898995536
patch: c = ( Node ) node . get CaMeL Next ( ) ;
rank: 129
score: 99.21418108258929
patch: traverse ( next = n . get CaMeL Next ( ) ) ;
rank: 129
score: 99.1863301595052
patch: Declaration c = c . get CaMeL Next ( ) ;
rank: 129
score: 99.1771991436298
patch: ret = c . get CaMeL First CaMeL Child ( ) ;
rank: 129
score: 98.98110622829861
patch: traverse ( c ) ; c -- ;
rank: 129
score: 98.97166683799342
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . to CaMeL String ( ) ) ; }
rank: 129
score: 98.95245361328125
patch: if ( ! c . iterator ( ) . iterator ( ) . ++ ;
rank: 130
score: 99.26896528764205
patch: traverse ( c , c . get CaMeL Parent ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 130
score: 99.26022338867188
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , next . get CaMeL First CaMeL Child ( ) ) ;
rank: 130
score: 99.2248764038086
patch: c . get CaMeL First CaMeL Child ( ) . add ( c ) ;
rank: 130
score: 99.21398053850446
patch: visit ( c , c . get CaMeL Next ( ) ) ;
rank: 130
score: 99.18448311941964
patch: Element c = c . get CaMeL First CaMeL Child ( ) ;
rank: 130
score: 99.18291364397321
patch: traverse ( c , get CaMeL Current CaMeL Node ( ) ) ;
rank: 130
score: 98.97946401742789
patch: traverse ( c , get CaMeL Node ( c ) ) ;
rank: 130
score: 98.97115928248355
patch: System . err . println ( $STRING$ + c . get CaMeL Id ( ) ) ; }
rank: 130
score: 98.9507568359375
patch: if ( c != null ) c -- ;
rank: 131
score: 99.26892961774554
patch: c = ( Node ) c . get CaMeL Parent ( ) ;
rank: 131
score: 99.25983072916667
patch: traverse ( Node . get CaMeL First CaMeL Child ( c ) ) ;
rank: 131
score: 99.2240982055664
patch: traverse ( node ) ; c = c . get CaMeL Next ( ) ;
rank: 131
score: 99.18244086371527
patch: traverse ( c , ; break ; }
rank: 131
score: 99.17608235677083
patch: final Node next = c . get CaMeL First CaMeL Child ( ) ;
rank: 131
score: 98.97935791015625
patch: traverse ( c + $STRING$ + node ) ;
rank: 131
score: 98.95034790039062
patch: if ( c == 0 ) { return ;
rank: 132
score: 99.26892852783203
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , node ) ;
rank: 132
score: 99.2238998413086
patch: visit ( c ) ; next = c . get CaMeL Next ( ) ;
rank: 132
score: 99.2130839029948
patch: traverse ( next . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 132
score: 99.18315778459821
patch: Element next = c . get CaMeL First CaMeL Child ( ) ;
rank: 132
score: 99.18081665039062
patch: if ( c . get CaMeL Name ( ) . equals ( ) ) {
rank: 132
score: 98.97896118164063
patch: traverse ( ! traverse ( node ) ) ;
rank: 132
score: 98.97052873883929
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class CaMeL Name ( ) ) ; }
rank: 132
score: 98.95011596679687
patch: try { traverse ( c + true ) ;
rank: 133
score: 99.25703357514881
patch: node = c . get CaMeL Next ( ) ; c = c . get CaMeL Next ( ) ;
rank: 133
score: 99.2233378092448
patch: c = ! c . get CaMeL Next ( ) ;
rank: 133
score: 99.20930989583333
patch: c = n . get CaMeL Next ( ) ; c = c . get CaMeL Next ( ) ;
rank: 133
score: 99.17442103794643
patch: Node next = n . get CaMeL First CaMeL Child ( ) ;
rank: 133
score: 98.9789569561298
patch: traverse ( c || c . contains ( c ) ) ;
rank: 134
score: 99.26773071289062
patch: c = ( Node ) c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 134
score: 99.22324916294643
patch: traverse ( source . get CaMeL First CaMeL Child ( ) ) ;
rank: 134
score: 99.20856584821429
patch: next = c . get CaMeL Next ( ) ; c = next . get CaMeL Next ( ) ;
rank: 134
score: 99.18208821614583
patch: node = c . get CaMeL Next ( ) ; c = next ;
rank: 134
score: 98.96975528492646
patch: if ( node . get CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 135
score: 99.26748318142361
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , false ) ;
rank: 135
score: 99.25263323102679
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ) ;
rank: 135
score: 99.208251953125
patch: traverse ( next . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next ( ) ) ;
rank: 135
score: 99.18101149338942
patch: target = c . get CaMeL First CaMeL Child ( ) ;
rank: 135
score: 99.17808622472427
patch: if ( c == node . get CaMeL First CaMeL Child ( ) ) return ;
rank: 135
score: 99.17136928013393
patch: c = c . get CaMeL Next ( ) ; break ; }
rank: 135
score: 98.9768798828125
patch: traverse ( node ) ; c = c ;
rank: 135
score: 98.96971546519886
patch: if ( node . get CaMeL Name ( ) . equals ( c . get CaMeL Name ( ) ) )
rank: 135
score: 98.9489990234375
patch: traverse ( c + true , c ) ;
rank: 136
score: 99.26707967122395
patch: traverse ( c . get CaMeL Last CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 136
score: 99.25201822916667
patch: Node next = Node . get CaMeL First CaMeL Child ( c ) ;
rank: 136
score: 99.22245649857955
patch: c = type . get CaMeL Next ( ) ;
rank: 136
score: 99.20635986328125
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , index ) ;
rank: 136
score: 99.18064478824013
patch: type = c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) ;
rank: 136
score: 99.17724609375
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( c ;
rank: 136
score: 99.1713005514706
patch: if ( c . get CaMeL First CaMeL Child ( ) == null ) return ;
rank: 136
score: 98.97647798978366
patch: traverse ( c ) ; try { traverse ( c ) ;
rank: 136
score: 98.96846829927884
patch: traverse ( ! node . get CaMeL Parent ( ) ) ;
rank: 137
score: 99.26692962646484
patch: traverse ( c = c . get CaMeL First CaMeL Child ( ) ) ;
rank: 137
score: 99.22225748697916
patch: c = c . get CaMeL Next ( ) ; c = c ;
rank: 137
score: 99.20635986328125
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , null ) ;
rank: 137
score: 99.18052321213942
patch: location = c . get CaMeL First CaMeL Child ( ) ;
rank: 137
score: 99.17709530101104
patch: if ( c ; c = c . get CaMeL First CaMeL Child ( ) )
rank: 137
score: 98.97616577148438
patch: traverse ( true ) ;
rank: 137
score: 98.96754673549107
patch: if ( ! n . is CaMeL Empty ( ) ) { }
rank: 137
score: 98.94868469238281
patch: traverse ( c , $NUMBER$ ) ;
rank: 138
score: 99.26510009765624
patch: if ( c . get CaMeL Class CaMeL Name ( ) . starts CaMeL With ( $STRING$ ) )
rank: 138
score: 99.2509998139881
patch: if ( c . get CaMeL First CaMeL Child ( ) != null ) { traverse ( c ) ;
rank: 138
score: 99.18048095703125
patch: System . out . println ( $STRING$ + c . get CaMeL First CaMeL Child ( ) ) ;
rank: 138
score: 99.170556640625
patch: if ( c . get CaMeL First CaMeL Child ( ) == null )
rank: 138
score: 98.97605895996094
patch: ) ; traverse ( c ) ;
rank: 138
score: 98.96676870492789
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) )
rank: 138
score: 98.94850510817308
patch: if ( ! c . length ( ) ) { return ;
rank: 139
score: 99.26441650390625
patch: c = c . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) ; }
rank: 139
score: 99.25023542131696
patch: traverse ( c , next . get CaMeL Node ( ) ) ;
rank: 139
score: 99.22202555338542
patch: traverse ] = c . get CaMeL Next ( ) ;
rank: 139
score: 99.20534349524456
patch: c = node . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Next ( ) ;
rank: 139
score: 99.17973981584821
patch: Symbol c = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 139
score: 99.17588404605263
patch: int line CaMeL Number = c . get CaMeL Line CaMeL Number ( line CaMeL Number ) ;
rank: 139
score: 98.97568969726562
patch: traverse ( traverse ( c ) ) ; }
rank: 139
score: 98.94634399414062
patch: throw c ; } traverse ( c ) ;
rank: 140
score: 99.26424466646634
patch: if ( c . get CaMeL Class CaMeL Name ( ) . equals ( c . get CaMeL Class CaMeL Name ( ) ) )
rank: 140
score: 99.24967738560268
patch: do { Node c = c . get CaMeL Next ( ) ;
rank: 140
score: 99.20474947415866
patch: break ; c = c . get CaMeL Next ( ) ;
rank: 140
score: 99.17952183314732
patch: Iterator c = c . get CaMeL First CaMeL Child ( ) ;
rank: 140
score: 98.97520955403645
patch: traverse ( ! c . equals ( node ) ) ;
rank: 140
score: 98.94629516601563
patch: traverse ( c + false , c ) ;
rank: 141
score: 99.24936745383523
patch: c = c . get CaMeL Next ( ) ; c = c . get CaMeL Next ( ) ; }
rank: 141
score: 99.22118268694196
patch: traverse ( current . get CaMeL First CaMeL Child ( ) ) ;
rank: 141
score: 99.17491997612848
patch: traverse ( c , ; c = c . get CaMeL Next ( ) ) ; }
rank: 141
score: 98.97455444335938
patch: c = c . get CaMeL First CaMeL Child ( ) ; c . traverse ( c ) ;
rank: 141
score: 98.96528957201087
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c ) ) {
rank: 142
score: 99.24901471819196
patch: Node c = ref . get CaMeL First CaMeL Child ( ) ;
rank: 142
score: 99.22012329101562
patch: traverse ( index . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 142
score: 99.1780118075284
patch: ch = c . get CaMeL Next ( ) ;
rank: 142
score: 98.97428755326705
patch: traverse ( c ) ; traverse ( true ) ;
rank: 142
score: 98.96519470214844
patch: if ( node . get CaMeL Name ( ) . equals ( $STRING$ ) )
rank: 142
score: 98.94449869791667
patch: if ( ! == c ) traverse ( c ) ;
rank: 143
score: 99.26375325520833
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , true ) ;
rank: 143
score: 99.2188361672794
patch: Node c = c . get CaMeL Next ( ) ; traverse ( c ) ;
rank: 143
score: 99.20404052734375
patch: traverse ( c . get CaMeL Next ( ) , $STRING$ ) ;
rank: 143
score: 99.17479790581598
patch: traverse ( c , ; c ) ;
rank: 143
score: 99.1694564819336
patch: if ( c != node . get CaMeL First CaMeL Child ( ) ) {
rank: 143
score: 98.96470642089844
patch: if ( c != null && ! c . is CaMeL Empty ( ) )
rank: 143
score: 98.94381103515624
patch: try { traverse ( c ) ; ) ;
rank: 144
score: 99.26361083984375
patch: c = c . get CaMeL Parent ( ) . get CaMeL First CaMeL Child ( ) ; }
rank: 144
score: 99.24763488769531
patch: traverse ( column . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 144
score: 99.21879359654018
patch: traverse ( index . get CaMeL First CaMeL Child ( ) ) ;
rank: 144
score: 99.20388454861111
patch: c = c . get CaMeL Next ( ) . get CaMeL Next ( ) ; }
rank: 144
score: 99.17750901442308
patch: if ( c . get CaMeL First CaMeL Child ( ) !=
rank: 144
score: 99.17474365234375
patch: traverse ( c , true , c ) ;
rank: 144
score: 98.97334798177083
patch: traverse ( c , c . node ( ) ) ;
rank: 144
score: 98.96448863636364
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class CaMeL Name ( ) ) ;
rank: 145
score: 99.262939453125
patch: c = ( c . get CaMeL First CaMeL Child ( ) ) . get CaMeL Last CaMeL Child ( ) ;
rank: 145
score: 99.20342462713069
patch: traverse ( node . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next ( ) ) ;
rank: 145
score: 99.17725548377403
patch: rs = c . get CaMeL First CaMeL Child ( ) ;
rank: 145
score: 99.17468872070313
patch: traverse ( c , ; c = c . get CaMeL Parent CaMeL Node ( ) ) ; }
rank: 145
score: 99.1682487936581
patch: if ( node . get CaMeL First CaMeL Child ( ) != null ) return ;
rank: 145
score: 98.96389288651316
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Message ( ) ) ; }
rank: 145
score: 98.94305419921875
patch: try { traverse ( c ) ; / /
rank: 146
score: 99.21804470486111
patch: Node next = c . get CaMeL First CaMeL Child ( ) ; c = next ;
rank: 146
score: 99.20330255681819
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , n . get CaMeL Next ( ) ) ;
rank: 146
score: 99.17644708806819
patch: b = c . get CaMeL Next ( ) ;
rank: 146
score: 99.17360617897727
patch: traverse ( c , ; c = c ) ;
rank: 146
score: 98.9729248046875
patch: traverse ( c ) ; c = c . traverse ( c ) ;
rank: 146
score: 98.96263485863095
patch: if ( ! c . is CaMeL Empty ( ) && c . is CaMeL Empty ( ) ) {
rank: 146
score: 98.94251251220703
patch: traverse ( c == c ) ;
rank: 147
score: 99.2472900390625
patch: Node next = this . get CaMeL First CaMeL Child ( c ) ;
rank: 147
score: 99.217529296875
patch: traverse ( source . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 147
score: 99.17622884114583
patch: traverse ( should CaMeL Retraverse ( c ) ) ;
rank: 147
score: 99.17324829101562
patch: c = c . get CaMeL First CaMeL Child ( ) ; return ; }
rank: 147
score: 98.97213745117188
patch: traverse ( c + c , c ) ;
rank: 147
score: 98.9623690518466
patch: if ( ! c . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 147
score: 98.9423828125
patch: try { traverse ( c , ) ;
rank: 148
score: 99.26240539550781
patch: traverse ( ( c . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 148
score: 99.24699183872768
patch: traverse ( column . get CaMeL First CaMeL Child ( ) ) ;
rank: 148
score: 99.21749877929688
patch: traverse ( current . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 148
score: 99.20167893629808
patch: else { c = c . get CaMeL Next ( ) ;
rank: 148
score: 99.17619018554687
patch: if ( c . should CaMeL Visit ( node . get CaMeL First CaMeL Child ( ) ) )
rank: 148
score: 99.173095703125
patch: c = c . get CaMeL Last CaMeL Child ( ) ; break ; }
rank: 148
score: 98.97185668945312
patch: traverse ( c ) ; node = c ;
rank: 148
score: 98.96220703125
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Name ( ) ) ; }
rank: 148
score: 98.94210205078124
patch: traverse ( c , c , n ) ;
rank: 149
score: 99.2623874830163
patch: c = ( c . get CaMeL First CaMeL Child ( ) ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 149
score: 99.17610677083333
patch: if ( c . get CaMeL First CaMeL Child ( )
rank: 149
score: 99.17304338727679
patch: traverse c = c . get CaMeL First CaMeL Child ( ) ;
rank: 149
score: 98.9711669921875
patch: traverse ( c , node ) ; ) ;
rank: 149
score: 98.96190243675595
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Name ( ) ) ; }
rank: 150
score: 99.26089477539062
patch: traverse ( ( c . get CaMeL First CaMeL Child ( ) ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 150
score: 99.2140380859375
patch: c = next != null && c . get CaMeL Next ( ) ;
rank: 150
score: 99.20133833451705
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) , node ) ;
rank: 150
score: 99.17071533203125
patch: traverse ( c , ; c = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 150
score: 99.16492377387152
patch: return . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ; }
rank: 150
score: 98.9701171875
patch: traverse ( c , node ) ; break ;
rank: 150
score: 98.96133422851562
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Source CaMeL Name ( ) ) ;
rank: 150
score: 98.93958129882813
patch: if ( ! traverse ( n ) ) {
rank: 151
score: 99.26078287760417
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 151
score: 99.24443502987133
patch: traverse ( c . get CaMeL First CaMeL Child ( ) ) ; visits ++ ;
rank: 151
score: 99.2120028409091
patch: node = node . get CaMeL Next ( ) ;
rank: 151
score: 99.20122736150569
patch: next = n . get CaMeL Next ( ) ;
rank: 151
score: 99.1754150390625
patch: Token c = c . get CaMeL Next ( ) ;
rank: 151
score: 99.16973517922794
patch: if ( c == node . get CaMeL First CaMeL Child ( ) ) break ;
rank: 151
score: 99.16466522216797
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null ) {
rank: 151
score: 98.96995035807292
patch: traverse ( c , c ) ; c = true ;
rank: 151
score: 98.93880615234374
patch: traverse ( c , 1 , c ) ;
rank: 152
score: 99.2604747953869
patch: n = c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 152
score: 99.21001642400569
patch: visit = c . get CaMeL Next ( ) ;
rank: 152
score: 99.17457275390625
patch: int visits = c . get CaMeL Parent ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 152
score: 99.16431427001953
patch: while ( c . get CaMeL First CaMeL Child ( ) == null ) {
rank: 152
score: 98.9695293719952
patch: traverse ( node , c ) ; traverse ( c ) ;
rank: 152
score: 98.9603515625
patch: if ( ! c . is CaMeL Empty ( ) ) return ; }
rank: 152
score: 98.93865966796875
patch: traverse ( c ? c : c ) ;
rank: 153
score: 99.2599385579427
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Root CaMeL Node ( ) ) ;
rank: 153
score: 99.2412109375
patch: Node c = c . get CaMeL Node ( ) ;
rank: 153
score: 99.20831298828125
patch: next = ( Node ) c . get CaMeL Next ( ) ;
rank: 153
score: 99.19774627685547
patch: Node c = c . get CaMeL First CaMeL Child ( ) ; for (
rank: 153
score: 99.168798828125
patch: c = c . get CaMeL First CaMeL Child ( ) ; } }
rank: 153
score: 99.16351318359375
patch: if ( node . get CaMeL First CaMeL Child ( ) instanceof Node ) {
rank: 153
score: 98.96926047585227
patch: traverse ( $STRING$ ) ; traverse ( c ) ;
rank: 153
score: 98.95992431640624
patch: if ( ! c . is CaMeL Empty ( ) && c . is CaMeL Empty ( ) )
rank: 154
score: 99.25981794084821
patch: traverse ( c , c . get CaMeL Root ( ) ) ;
rank: 154
score: 99.20771484375
patch: c . node = node . get CaMeL First CaMeL Child ( ) ;
rank: 154
score: 99.19752854567308
patch: traverse ( c . get CaMeL Next ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ) ;
rank: 154
score: 99.17412109375
patch: if ( node . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( )
rank: 154
score: 99.168212890625
patch: n = c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) ; }
rank: 154
score: 99.16291155133929
patch: if ( node . get CaMeL Parent ( ) != null ) {
rank: 154
score: 98.96857367621527
patch: traverse ( c ) ; c ++ ;
rank: 154
score: 98.95976118607955
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class CaMeL Name ( ) + $STRING$ ) ;
rank: 155
score: 99.25967567845395
patch: traverse ( c ) ; ; c = c . get CaMeL First CaMeL Child ( ) ;
rank: 155
score: 99.17365465666118
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) )
rank: 155
score: 99.16713645241477
patch: traverse ( c ) ; c = c . ;
rank: 155
score: 99.162841796875
patch: if ( ! node . get CaMeL First CaMeL Child ( ) ) {
rank: 155
score: 98.95972900390625
patch: traverse ( c , type , c ) ;
rank: 155
score: 98.93613978794643
patch: if ( ! c . is CaMeL Empty ( ) ) { public
rank: 156
score: 99.2592061360677
patch: traverse ( c , c . get CaMeL Root CaMeL Node ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 156
score: 99.20732879638672
patch: Node next = node . get CaMeL Next ( ) ; c = next ;
rank: 156
score: 99.19722123579545
patch: traverse ( c . get CaMeL Next ( ) , node . get CaMeL First CaMeL Child ( ) ) ;
rank: 156
score: 99.17169744318181
patch: children = c . get CaMeL Next ( ) ;
rank: 156
score: 99.16658289292279
patch: traverse ( c , ; c = c . get CaMeL Parent ( ) ) ;
rank: 156
score: 99.16270228794643
patch: c = next ( c ) . get CaMeL Next ( ) ;
rank: 156
score: 98.96770770733173
patch: traverse ( c ) ; c = traverse ( c ) ;
rank: 156
score: 98.95965576171875
patch: if ( ! c . is CaMeL Empty ( ) ) { traverse ( c ) ;
rank: 156
score: 98.93565673828125
patch: try { traverse ( node , c ) ;
rank: 157
score: 99.23979048295455
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Node ( ) ) ;
rank: 157
score: 99.20639474051339
patch: traverse ++ ; c = c . get CaMeL Next ( ) ;
rank: 157
score: 99.19685872395833
patch: return node . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ;
rank: 157
score: 99.16581587357955
patch: traverse ( c , c ) ; break ; }
rank: 157
score: 99.16152719350961
patch: c = Node . get CaMeL First CaMeL Child ( ) ;
rank: 157
score: 98.96751819957386
patch: traverse ( get CaMeL Symbol ( c ) ) ;
rank: 157
score: 98.95921020507812
patch: traverse ( c , n , c ) ;
rank: 157
score: 98.93553748497597
patch: if ( ! == c ) { traverse ( c ) ;
rank: 158
score: 99.25875150240384
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 158
score: 99.23965890066964
patch: for ( Node next = c . get CaMeL Next ( ) ;
rank: 158
score: 99.20621163504464
patch: traverse ( c , node . get CaMeL Node ( ) ) ;
rank: 158
score: 99.17018229166666
patch: if ( c != node . get CaMeL First CaMeL Child ( ) )
rank: 158
score: 99.1657485961914
patch: node = c . get CaMeL First CaMeL Child ( ) ; break ; }
rank: 158
score: 98.96683756510417
patch: traverse ( c ) ; c = node . get CaMeL First CaMeL Child ( ) ;
rank: 158
score: 98.933544921875
patch: if ( c != null ) ; return ;
rank: 159
score: 99.25812322443181
patch: int index = c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 159
score: 99.23797607421875
patch: switch ( c . get CaMeL First CaMeL Child ( ) ) { break ;
rank: 159
score: 99.2057113647461
patch: traverse ( c , next = c . get CaMeL Next ( ) ) ;
rank: 159
score: 99.19640350341797
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , name ) ;
rank: 159
score: 99.16563831676136
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) == Node . )
rank: 159
score: 98.96392211914062
patch: traverse ( c ) ; c = null ;
rank: 159
score: 98.95912388392857
patch: if ( ! c . has CaMeL Next ( ) ) return ;
rank: 159
score: 98.93348388671875
patch: try { traverse ( c + c ) ;
rank: 160
score: 99.2570441750919
patch: traverse ( c , c . get CaMeL Root CaMeL Node ( ) ) ; }
rank: 160
score: 99.20528738839286
patch: traverse ( c , parent . get CaMeL Next ( ) ) ;
rank: 160
score: 99.16953531901042
patch: if ( c . get CaMeL Next ( ) ) {
rank: 160
score: 99.16548237047698
patch: traverse ( c , ; ; c = c . get CaMeL First CaMeL Child ( ) ;
rank: 160
score: 99.16057586669922
patch: if ( n . get CaMeL First CaMeL Child ( ) != null ) {
rank: 160
score: 98.96378267728366
patch: traverse ( c ) ; this . c ( c ) ;
rank: 160
score: 98.95883517795139
patch: if ( ! c . get CaMeL Type ( ) . is CaMeL Empty ( ) )
rank: 160
score: 98.932861328125
patch: if ( ! != 0 ) traverse ( c ) ;
rank: 161
score: 99.25648328993056
patch: c = c . get CaMeL Parent ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 161
score: 99.2353848544034
patch: c = ref . get CaMeL Next ( ) ;
rank: 161
score: 99.20431315104166
patch: c . next = c . get CaMeL First CaMeL Child ( ) ;
rank: 161
score: 99.19438340928819
patch: return c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ;
rank: 161
score: 99.16880289713542
patch: Value c = c . get CaMeL Next ( ) ;
rank: 161
score: 99.16492919921875
patch: traverse ( c ) ; c = c . get CaMeL First CaMeL Child ( ) ; } }
rank: 161
score: 99.15843854631696
patch: Node c = Node . get CaMeL First CaMeL Child ( ) ;
rank: 161
score: 98.96370755709134
patch: traverse ( c && c . equals ( c ) ) ;
rank: 161
score: 98.95789155505952
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Id ( ) ) ; }
rank: 161
score: 98.93214721679688
patch: traverse ( c && null != c ) ;
rank: 162
score: 99.23507254464286
patch: node = ( Node ) c . get CaMeL Next ( ) ;
rank: 162
score: 99.2037353515625
patch: traverse ( node . get CaMeL Next ( ) , c ) ;
rank: 162
score: 99.1682637532552
patch: Child next = c . get CaMeL Next ( ) ;
rank: 162
score: 99.16468912760416
patch: if ( c . get CaMeL Name ( ) . equals ( ) )
rank: 162
score: 98.96361694335937
patch: traverse ( c , ( Node ) c ;
rank: 162
score: 98.95660807291667
patch: System . err . println ( $STRING$ ) ; traverse ( c ) ;
rank: 163
score: 99.25611877441406
patch: c = ( Node ) c . get CaMeL Current CaMeL Node ( ) ;
rank: 163
score: 99.234619140625
patch: Node next = c . get CaMeL Parent ( ) ;
rank: 163
score: 99.20349884033203
patch: node . get CaMeL First CaMeL Child ( ) . add ( c ) ;
rank: 163
score: 99.16428736636513
patch: Node n = c . get CaMeL First CaMeL Child ( ) ; traverse ( n ) ;
rank: 163
score: 98.96299391526442
patch: traverse ( c , true ) ; traverse ( c ) ;
rank: 163
score: 98.95589192708333
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) {
rank: 163
score: 98.93184988839286
patch: if ( ! traverse ( c ) ) traverse ( c ) ;
rank: 164
score: 99.23459298270089
patch: traverse ( ref = c . get CaMeL Next ( ) ) ;
rank: 164
score: 99.20135498046875
patch: visit ( c , node . get CaMeL Next ( ) ) ;
rank: 164
score: 99.1926037016369
patch: if ( node . get CaMeL First CaMeL Child ( ) != null && c . get CaMeL Next CaMeL
rank: 164
score: 99.16771589006696
patch: Type next = c . get CaMeL First CaMeL Child ( ) ;
rank: 164
score: 98.96139526367188
patch: traverse ( node , true ) ;
rank: 164
score: 98.95498046875
patch: if ( ! c . is CaMeL Empty ( ) ) throw null ;
rank: 164
score: 98.93097534179688
patch: traverse ( c , c , 0 ) ;
rank: 165
score: 99.25326171875
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) ; }
rank: 165
score: 99.19256591796875
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next ( ) ) ;
rank: 165
score: 99.1620381673177
patch: traverse ( c , ; c = c . ) ;
rank: 165
score: 98.9613396139706
patch: if ( c . is CaMeL Empty ( ) ) { traverse ( c ) ;
rank: 165
score: 98.95479642427884
patch: c = c . get CaMeL Parent ( ) ; return ;
rank: 165
score: 98.93072509765625
patch: do { traverse ( c ) ;
rank: 166
score: 99.2531405362216
patch: n = c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; }
rank: 166
score: 99.23383532072368
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) instanceof
rank: 166
score: 99.16439819335938
patch: { c = c . get CaMeL Next ( ) ;
rank: 166
score: 99.15606689453125
patch: while ( c . get CaMeL Last CaMeL Child ( ) != null ) {
rank: 166
score: 98.961181640625
patch: traverse ( c ) ; System . out . println ( $STRING$ ) ;
rank: 166
score: 98.95411592371323
patch: if ( c != null && ! c . is CaMeL Empty ( ) ) {
rank: 166
score: 98.93040974934895
patch: if ( c == c ) traverse ( c ) ;
rank: 167
score: 99.2525146484375
patch: int index = c . get CaMeL First CaMeL Child ( ) . get CaMeL Length ( ) ;
rank: 167
score: 99.233251953125
patch: traverse ( node . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 167
score: 99.19857584635416
patch: c = c != null || c . get CaMeL Next ( ) ;
rank: 167
score: 99.16426908052884
patch: v = c . get CaMeL First CaMeL Child ( ) ;
rank: 167
score: 99.16022692228618
patch: traverse ( c , ; c = c . get CaMeL First CaMeL Child ( ) ; }
rank: 167
score: 99.15601748511905
patch: if ( ! c . get CaMeL First CaMeL Child ( ) . is CaMeL Empty ( ) ) {
rank: 167
score: 98.95891462053571
patch: traverse ( c ) ; c = c . get ( ) ;
rank: 168
score: 99.25197531960227
patch: c = c . get CaMeL First CaMeL Child ( ) . get CaMeL Parent CaMeL Node ( ) ; }
rank: 168
score: 99.19207000732422
patch: Node next = next . get CaMeL First CaMeL Child ( ) ; for (
rank: 168
score: 98.95802307128906
patch: finally { traverse ( c ) ;
rank: 168
score: 98.9514404296875
patch: traverse ( c , c , type ) ;
rank: 168
score: 98.92873313210227
patch: if ( ! traverse ( c ) ) { ;
rank: 169
score: 99.25115094866071
patch: traverse ( c . get CaMeL Parent ( ) , c ) ;
rank: 169
score: 99.23236083984375
patch: Node next = ( node . get CaMeL First CaMeL Child ( ) ) . get CaMeL First CaMeL Child ( ) ;
rank: 169
score: 99.19709777832031
patch: traverse ( c ) ; c = node . get CaMeL Next ( ) ;
rank: 169
score: 99.19180636935764
patch: return n . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ;
rank: 169
score: 99.16386583116319
patch: if ( c . equals ( node . get CaMeL First CaMeL Child ( ) ) )
rank: 169
score: 99.15989332932692
patch: traverse ( c , ; c = c . ) ; }
rank: 169
score: 98.95111083984375
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Name ( ) + $STRING$ ) ;
rank: 169
score: 98.92861938476562
patch: if ( n != 0 ) traverse ( c ) ;
rank: 170
score: 99.2508903952206
patch: traverse ( ; c = c . get CaMeL First CaMeL Child ( ) ) ;
rank: 170
score: 99.16187633167614
patch: tree = c . get CaMeL Next ( ) ;
rank: 170
score: 99.159423828125
patch: traverse ( c , ( ) c ) ;
rank: 170
score: 98.92851911272321
patch: if ( traverse ( c ) ) { traverse ( c ) ;
rank: 171
score: 99.25009987571023
patch: int n = c . get CaMeL Last CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 171
score: 99.19486177884616
patch: c = c . get CaMeL Next ( ) : null ;
rank: 171
score: 99.18987165178571
patch: next = next . get CaMeL Next ( ) ; c = c . get CaMeL Next ( ) ;
rank: 171
score: 99.1614657315341
patch: m = c . get CaMeL Next ( ) ;
rank: 171
score: 99.15534210205078
patch: traverse ( node . get CaMeL First CaMeL Child ( ) , parent ) ;
rank: 171
score: 98.95441436767578
patch: c = c . get CaMeL Type ( ) ; traverse ( c ) ;
rank: 171
score: 98.95094992897727
patch: if ( node . get CaMeL Name ( ) . equals ( node . get CaMeL Id ( ) ) )
rank: 172
score: 99.1947883157169
patch: c . next ( ) ; c = c . get CaMeL Next ( ) ;
rank: 172
score: 99.15910034179687
patch: int n = c . get CaMeL First CaMeL Child ( ) . get CaMeL Count ( ) ;
rank: 172
score: 98.95379638671875
patch: traverse ( c + $STRING$ + node . get CaMeL Type ( ) ) ;
rank: 172
score: 98.95089721679688
patch: System . err . println ( $STRING$ + c . get CaMeL Name ( ) + $STRING$ ) ;
rank: 172
score: 98.92753092447917
patch: if ( c == null ) { ;
rank: 173
score: 99.24868774414062
patch: traverse ( c , c . get CaMeL Root CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 173
score: 99.19469451904297
patch: c = node . get CaMeL Next ( ) ; traverse ( c ) ;
rank: 173
score: 99.18854229266827
patch: next = next . get CaMeL First CaMeL Child ( ) ;
rank: 173
score: 99.16118977864583
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c .
rank: 173
score: 99.15840454101563
patch: traverse ( c ) ; c = ; }
rank: 173
score: 99.1541748046875
patch: switch ( node . get CaMeL First CaMeL Child ( ) ) {
rank: 173
score: 98.95334694602273
patch: traverse ( this ) ; traverse ( c ) ;
rank: 173
score: 98.92695756392045
patch: traverse ( n ) ; traverse ( c ) ;
rank: 174
score: 99.24854532877605
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Child CaMeL Count ( ) ) ;
rank: 174
score: 99.19440104166667
patch: c . type = c . get CaMeL First CaMeL Child ( ) ;
rank: 174
score: 99.188037109375
patch: traverse ( c . get CaMeL Next ( ) , node . get CaMeL Next ( ) ) ;
rank: 174
score: 99.16063514122597
patch: index = c . get CaMeL First CaMeL Child ( ) ;
rank: 174
score: 99.1562832919034
patch: if ( c . get CaMeL Name ( ) . equals ( node . get CaMeL Name ( ) ) )
rank: 174
score: 98.94935021033653
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Id ( ) ) )
rank: 174
score: 98.92677001953125
patch: traverse ( c || c != null ) ;
rank: 175
score: 99.24847412109375
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 175
score: 99.19405423677884
patch: c = this . node . get CaMeL Next ( ) ;
rank: 175
score: 99.15994966947116
patch: context = node . get CaMeL First CaMeL Child ( ) ;
rank: 175
score: 99.15619659423828
patch: n = c . get CaMeL First CaMeL Child ( ) ; } return ;
rank: 175
score: 98.95293511284723
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( node ) ;
rank: 175
score: 98.94873657226563
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 175
score: 98.92672119140624
patch: try { traverse ( c , type ) ;
rank: 176
score: 99.24802760074013
patch: traverse ( c ) ; c = c . get CaMeL Current CaMeL Node ( ) ; }
rank: 176
score: 99.2309799194336
patch: traverse ( ref . get CaMeL First CaMeL Child ( ) , node ) ;
rank: 176
score: 99.19326171875
patch: c . parent = c . get CaMeL First CaMeL Child ( ) ;
rank: 176
score: 99.15535111860795
patch: traverse ( c , c , false ) ; }
rank: 176
score: 98.95232391357422
patch: traverse ( c + $STRING$ ) ;
rank: 176
score: 98.9266128540039
patch: traverse ( c == 0 ) ;
rank: 177
score: 99.24766031901042
patch: traverse ( c . get CaMeL Last CaMeL Child ( ) , c . get CaMeL Last CaMeL Child ( ) ) ;
rank: 177
score: 99.1931396484375
patch: c = c . get ( c ) ;
rank: 177
score: 99.18682502297794
patch: if ( c != null ) c = c . get CaMeL Next ( ) ;
rank: 177
score: 99.15487850413604
patch: traverse ( c , ; c . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 177
score: 99.1498794555664
patch: if ( c . get CaMeL First CaMeL Child ( ) != null ) ;
rank: 177
score: 98.95181274414062
patch: traverse ( c + $STRING$ + node . get CaMeL Value ( ) ) ;
rank: 177
score: 98.94845581054688
patch: else { traverse ( c ) ; break ;
rank: 177
score: 98.9261983235677
patch: if ( ! c . traverse ( c ) ) ;
rank: 178
score: 99.24715169270833
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL Last CaMeL Child ( ) ) ;
rank: 178
score: 99.22887731481481
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) instanceof
rank: 178
score: 99.1851094563802
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , n ) ;
rank: 178
score: 99.15885416666667
patch: } c = c . get CaMeL Next ( ) ;
rank: 178
score: 98.95140491832386
patch: traverse ( c || traverse ( node ) ) ;
rank: 178
score: 98.94818405877976
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) ;
rank: 178
score: 98.92418561662946
patch: if ( ! c . contains ( c ) ) { return ;
rank: 179
score: 99.24709065755208
patch: traverse ( c , c . get CaMeL Root CaMeL Node ( ) . get CaMeL Root CaMeL Node ( ) ) ;
rank: 179
score: 99.22865874191811
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) instanceof
rank: 179
score: 99.15882457386364
patch: path = c . get CaMeL Next ( ) ;
rank: 179
score: 99.15350748697917
patch: traverse ( c ) ; c = c . get CaMeL Next ; }
rank: 179
score: 98.9510009765625
patch: c = true ; traverse ( c ) ;
rank: 179
score: 98.94801682692308
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( node . get CaMeL Name ( ) ) )
rank: 179
score: 98.92393493652344
patch: traverse ( c + true ) ;
rank: 180
score: 99.18753487723214
patch: traverse ( c , should CaMeL Retraverse ( node ) ) ;
rank: 180
score: 99.15839092548077
patch: expr = c . get CaMeL First CaMeL Child ( ) ;
rank: 180
score: 99.15349469866071
patch: traverse ( c , ; c . ; c = c . get CaMeL First CaMeL Child ( ) ;
rank: 180
score: 99.148193359375
patch: if ( ! node . get CaMeL First CaMeL Child ( ) . has CaMeL Next ( ) ) {
rank: 180
score: 98.95077950613839
patch: traverse ( c || c . get CaMeL Type ( ) ) ;
rank: 181
score: 99.24635823567708
patch: traverse ( c . get CaMeL Root CaMeL Node ( ) , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 181
score: 99.18436431884766
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , 0 ) ;
rank: 181
score: 99.15825946514423
patch: column = c . get CaMeL First CaMeL Child ( ) ;
rank: 181
score: 99.15333387586806
patch: c = c . ; c = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 181
score: 98.94998168945312
patch: traverse ( c , c ) ; traverse ( ) ;
rank: 181
score: 98.94673426011029
patch: if ( ! c . is CaMeL Empty ( ) ) { break ; } }
rank: 181
score: 98.92356520432692
patch: if ( c == null ) ; traverse ( c ) ;
rank: 182
score: 99.24573284646739
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) ; }
rank: 182
score: 99.22795274522569
patch: if ( c . get CaMeL First CaMeL Child ( ) != null ) { return ;
rank: 182
score: 99.1868896484375
patch: c = null ; c = c . get CaMeL Next ( ) ;
rank: 182
score: 99.15590413411458
patch: Declaration next = c . get CaMeL Next ( ) ;
rank: 182
score: 99.15214399857955
patch: type = c . get CaMeL Type ( ) ;
rank: 182
score: 99.14700317382812
patch: if ( c . get CaMeL Parent CaMeL Node ( ) != null ) {
rank: 182
score: 98.9497299194336
patch: traverse ( c ) ; c = c . get CaMeL Value ( ) ;
rank: 182
score: 98.92191772460937
patch: if ( n != null ) { return ;
rank: 183
score: 99.24551730685764
patch: c = ( Node ) ( c . get CaMeL First CaMeL Child ( ) ) ;
rank: 183
score: 99.2264045266544
patch: Node c = next ( node . get CaMeL First CaMeL Child ( ) ) ;
rank: 183
score: 99.18584798177083
patch: c = null ; next = c . get CaMeL Next ( ) ;
rank: 183
score: 99.18310546875
patch: Node next = c . get CaMeL Next ( ) . get CaMeL Next ( ) ;
rank: 183
score: 99.15540568033855
patch: v = c . get CaMeL Next ( ) ; }
rank: 183
score: 99.15184783935547
patch: c = c . get CaMeL Parent CaMeL Node ( ) ; } return ;
rank: 183
score: 98.94967886117789
patch: traverse ( c ) ; c = c . null ) ;
rank: 183
score: 98.94649658203124
patch: System . out . println ( $STRING$ + c . get CaMeL Name ( ) + $STRING$ ) ;
rank: 183
score: 98.9214336688702
patch: if ( n == 0 ) { traverse ( c ) ;
rank: 184
score: 99.24530584161931
patch: c = c . get CaMeL First CaMeL Child ( ) . get CaMeL Last CaMeL Child ( ) ; }
rank: 184
score: 99.18548583984375
patch: c . get CaMeL Next ( ) : c . get CaMeL Next ( ) ; }
rank: 184
score: 99.182861328125
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next CaMeL
rank: 184
score: 99.154541015625
patch: curr = c . get CaMeL Next ( ) ;
rank: 184
score: 99.15077561598558
patch: node = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 184
score: 98.94873046875
patch: c = c . ( ) ; traverse ( c ) ;
rank: 184
score: 98.92124245383523
patch: if ( c == null ) c = c ;
rank: 185
score: 99.24509684244792
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Current CaMeL Node ( ) ) ;
rank: 185
score: 99.1853496844952
patch: c = c : c . get CaMeL Next ( ) ;
rank: 185
score: 99.15446254185268
patch: synchronized ( c . get CaMeL First CaMeL Child ( ) ) {
rank: 185
score: 99.1503173828125
patch: traverse ( c ) ; c = ) ;
rank: 185
score: 99.14455694901316
patch: try { c = c . get CaMeL Next ( ) . get CaMeL Next ( ) ;
rank: 185
score: 98.92041015625
patch: add ( c ) ; traverse ( c ) ;
rank: 186
score: 99.24441528320312
patch: traverse ( c . get CaMeL Child CaMeL Count ( ) , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 186
score: 99.18529334435097
patch: c = next = node . get CaMeL Next ( ) ;
rank: 186
score: 99.18084716796875
patch: c = ( Node ) n . get CaMeL Next ( ) ;
rank: 186
score: 99.15411376953125
patch: Object n = c . get CaMeL Next ( ) ;
rank: 186
score: 99.15008951822917
patch: traverse ( c , ; c = c . get CaMeL Next ; }
rank: 186
score: 99.14419555664062
patch: if ( next = c . get CaMeL First CaMeL Child ( ) ) {
rank: 186
score: 98.91995239257812
patch: try { traverse ( c ) ; } }
rank: 187
score: 99.22554837740384
patch: Node next = ! c . get CaMeL Next ( ) ;
rank: 187
score: 99.18428344726563
patch: c = . get CaMeL Next ( ) ;
rank: 187
score: 99.18058776855469
patch: traverse ( next . get CaMeL First CaMeL Child ( ) , next ) ;
rank: 187
score: 99.15337579900569
patch: e = c . get CaMeL Next ( ) ;
rank: 187
score: 99.14947102864583
patch: c = c . get CaMeL First CaMeL Child ( ) ; ; }
rank: 187
score: 98.94517211914062
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Id ( ) + $STRING$ ) ;
rank: 187
score: 98.94515787760416
patch: traverse ( c , c ) ; super . traverse ( c ) ;
rank: 187
score: 98.91943359375
patch: traverse ( c , 0 , true ) ;
rank: 188
score: 99.24258083767361
patch: traverse ( c , c , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 188
score: 99.22554154829545
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Parent ( ) ) ;
rank: 188
score: 99.18328179253473
patch: c = c . get CaMeL Next = c . get CaMeL Next ( ) ; }
rank: 188
score: 99.15289713541667
patch: if ( c . get CaMeL Parent CaMeL Node ( ) != null )
rank: 188
score: 99.14340355282738
patch: if ( ! node . get CaMeL First CaMeL Child ( ) . is CaMeL All ( ) ) {
rank: 188
score: 98.94502563476563
patch: traverse ( c , true ) ; ) ;
rank: 188
score: 98.94466727120536
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Class CaMeL Name ( ) ) ;
rank: 188
score: 98.91856079101562
patch: traverse ( c + null , c ) ;
rank: 189
score: 99.1832763671875
patch: c = c instanceof Node : c . get CaMeL Next ( ) ;
rank: 189
score: 99.15089768629808
patch: if ( c . get CaMeL Next ( ) != null )
rank: 189
score: 99.1487972861842
patch: if ( c . get CaMeL Name ( ) . starts CaMeL With ( $STRING$ ) ) {
rank: 190
score: 99.24187102141204
patch: n = c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) ;
rank: 190
score: 99.14822387695312
patch: traverse ( c , this ) ;
rank: 190
score: 98.94195556640625
patch: traverse ( c , c + 1 ) ;
rank: 190
score: 98.91810709635416
patch: if ( ! c . is CaMeL Empty ( ) ) ; return ;
rank: 191
score: 99.22252807617187
patch: c = c . get CaMeL Next ++ ; c = c . get CaMeL Next ( ) ;
rank: 191
score: 99.1820556640625
patch: c = c != null && node . get CaMeL Next ( ) ;
rank: 191
score: 99.14888822115384
patch: key = c . get CaMeL First CaMeL Child ( ) ;
rank: 191
score: 99.147705078125
patch: traverse ( c , ; c . traverse ( c ) ;
rank: 191
score: 98.94434611002605
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) break ;
rank: 191
score: 98.9396260579427
patch: traverse ( c + ) ; traverse ( c ) ;
rank: 191
score: 98.91642456054687
patch: try { traverse ( c ) ; ; }
rank: 192
score: 99.24056667751736
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) , true ) ;
rank: 192
score: 99.22232055664062
patch: Node index = c . get CaMeL Next ( ) ;
rank: 192
score: 99.18158428485577
patch: c . node = node . get CaMeL Next ( ) ;
rank: 192
score: 99.17942212975544
patch: c = c . get CaMeL Last CaMeL Child ( ) ; c = c . get CaMeL Next ( ) ;
rank: 192
score: 99.14132690429688
patch: while ( c . get CaMeL First CaMeL Child ( ) != null ) }
rank: 192
score: 98.94324448529412
patch: if ( node . get CaMeL Name ( ) . length ( ) == 0 )
rank: 192
score: 98.93939678485577
patch: traverse ( c , false ) ; traverse ( c ) ;
rank: 192
score: 98.91596069335938
patch: try { traverse ( c ) ; break ;
rank: 193
score: 99.18116048177083
patch: c = node != null && c . get CaMeL Next ( ) ;
rank: 193
score: 99.17892116970486
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , n ) ;
rank: 193
score: 99.14769398082386
patch: index = c . get CaMeL Next ( ) ;
rank: 193
score: 99.14692957261029
patch: c = ( Node ) c . get CaMeL First CaMeL Child ( ) ; }
rank: 193
score: 99.1411844889323
patch: c = c . get CaMeL Next 1 ( ) ;
rank: 193
score: 98.94232732599431
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) return ;
rank: 193
score: 98.93724822998047
patch: traverse ( true , c ) ;
rank: 194
score: 99.24022674560547
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) ) ; break ;
rank: 194
score: 99.17989095052083
patch: traverse ( c , node , node . get CaMeL First CaMeL Child ( ) ) ;
rank: 194
score: 99.1469790810033
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next CaMeL
rank: 194
score: 99.14117901141827
patch: try { c = node . get CaMeL Next ( ) ;
rank: 194
score: 98.94195235402961
patch: if ( ! c . is CaMeL Empty ( ) ) { traverse ( c ) ; }
rank: 194
score: 98.93717447916667
patch: c = c . get CaMeL Instance ( c ) ;
rank: 194
score: 98.91586538461539
patch: if ( ! != 0 ) { traverse ( c ) ;
rank: 195
score: 99.23880004882812
patch: c = ( Node ) c . get CaMeL Root CaMeL Node ( ) ;
rank: 195
score: 99.22071838378906
patch: Node [ ] c = c . get CaMeL First CaMeL Child ( ) ;
rank: 195
score: 99.17954664963942
patch: c : node = c . get CaMeL Next ( ) ;
rank: 195
score: 99.14675071022727
patch: w = c . get CaMeL Next ( ) ;
rank: 195
score: 99.14569498697917
patch: Node n = c . get CaMeL First CaMeL Child ( ) ; )
rank: 195
score: 98.94182477678571
patch: if ( ! c . is CaMeL Empty ( ) || c . is CaMeL Empty ( ) ) {
rank: 195
score: 98.93712158203125
patch: c = ( traverse ( c ) ) ;
rank: 196
score: 99.22065662202381
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) instanceof
rank: 196
score: 99.17801706414474
patch: return c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ; }
rank: 196
score: 99.14673790564903
patch: binding = c . get CaMeL First CaMeL Child ( ) ;
rank: 196
score: 99.1454833984375
patch: int count = c . get CaMeL First CaMeL Child ( ) . get CaMeL Length ( ) ;
rank: 196
score: 99.14056396484375
patch: if ( c = c . get CaMeL First CaMeL Child ( ) ) {
rank: 196
score: 98.9418212890625
patch: if ( ! c . is CaMeL Empty ( ) ) break ; }
rank: 196
score: 98.93699645996094
patch: traverse ( c , name ) ;
rank: 196
score: 98.91455078125
patch: if ( c != null ) { traverse ( c , c ) ;
rank: 197
score: 99.2383700284091
patch: c = c . get CaMeL Last CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ; }
rank: 197
score: 99.22041401110198
patch: c = ( c . get CaMeL Next ( ) ) . get CaMeL Next ( ) ;
rank: 197
score: 99.14531114366319
patch: n = c . get CaMeL First CaMeL Child ( ) ; traverse ( c ) ;
rank: 197
score: 99.14030187270221
patch: if ( node . get CaMeL First CaMeL Child ( ) == null ) return ;
rank: 197
score: 98.9416736421131
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c ) ) {
rank: 197
score: 98.91436767578125
patch: if ( c == 0 ) { public
rank: 198
score: 99.2378641764323
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) . get CaMeL Current CaMeL Node ( ) ) ;
rank: 198
score: 99.21957692792338
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . to CaMeL
rank: 198
score: 99.17786661783855
patch: next = c . get CaMeL Next ( ) ; }
rank: 198
score: 99.14618278952206
patch: node = c . get CaMeL Next ( ) . get CaMeL Next ( ) ;
rank: 198
score: 99.14512416294643
patch: traverse ( c , ; ;
rank: 198
score: 98.94030309606481
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Name ( ) ) ; }
rank: 198
score: 98.93596801757812
patch: for ( ) ; traverse ( c ) ;
rank: 198
score: 98.91234673394098
patch: if ( c != null ) ; public
rank: 199
score: 99.23690795898438
patch: traverse ( c , c . get CaMeL Current CaMeL Node ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 199
score: 99.17660757211539
patch: c . c = c . get CaMeL Next ( ) ;
rank: 199
score: 99.14527476917614
patch: temp = c . get CaMeL Next ( ) ;
rank: 199
score: 99.14479282924107
patch: traverse ( c ) ; c = c . get CaMeL Next ;
rank: 199
score: 99.13850620814732
patch: traverse ( list . get CaMeL First CaMeL Child ( ) ) ;
rank: 199
score: 98.94014485677083
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Property CaMeL Type ( ) ) )
rank: 199
score: 98.935546875
patch: traverse ( c || true ) ;
rank: 199
score: 98.911865234375
patch: if ( ! c . equals ( c ) ) { return ;
rank: 200
score: 99.23688213641827
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL Parent CaMeL Node ( ) , true ) ;
rank: 200
score: 99.17641379616477
patch: c = current . get CaMeL Next ( ) ;
rank: 200
score: 99.17453342013889
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , $STRING$ ) ;
rank: 200
score: 99.14520733173077
patch: module = c . get CaMeL First CaMeL Child ( ) ;
rank: 200
score: 98.94011896306819
patch: if ( ! node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 200
score: 98.93485107421876
patch: traverse ( c ; traverse ( node ) ;
rank: 200
score: 98.91077378216912
patch: if ( ! c . iterator ( ) . iterator ( ) . = c ;
rank: 201
score: 99.23675067608173
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) , true ) ;
rank: 201
score: 99.21763102213542
patch: Node next = ( c . get CaMeL First CaMeL Child ( ) ) . get CaMeL First CaMeL Child ( ) ;
rank: 201
score: 99.17637125651042
patch: traverse ( c , node . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 201
score: 99.14328237680289
patch: res = c . get CaMeL First CaMeL Child ( ) ;
rank: 201
score: 99.13687744140626
patch: if ( ! node . get CaMeL First CaMeL Child ( ) . is CaMeL Empty ( ) )
rank: 201
score: 98.93430463005515
patch: c = c . get CaMeL Instance ( c ) ; traverse ( c ) ;
rank: 201
score: 98.91068522135417
patch: if ( c == null ) { c = c ;
rank: 202
score: 99.2363037109375
patch: traverse ( c , c . get CaMeL Parent ( ) . get CaMeL Parent ( ) ) ;
rank: 202
score: 99.17633526141827
patch: c = c . node . get CaMeL Next ( ) ;
rank: 202
score: 99.1428934733073
patch: Symbol node = c . get CaMeL Next ( ) ;
rank: 202
score: 99.13650512695312
patch: if ( c instanceof Node ) {
rank: 202
score: 98.93904252485795
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) break ;
rank: 202
score: 98.9342041015625
patch: c = false ; traverse ( c ) ;
rank: 202
score: 98.91053185096153
patch: traverse ( c != null && traverse ( c ) ) ;
rank: 203
score: 99.23587036132812
patch: traverse ( c , traverse . get CaMeL First CaMeL Child ( ) ) ;
rank: 203
score: 99.21741594587054
patch: do { Node next = c . get CaMeL Next ( ) ;
rank: 203
score: 99.17624136117789
patch: c = current = c . get CaMeL Next ( ) ;
rank: 203
score: 99.17304920014881
patch: ret = c . get CaMeL Next ( ) ; c = c . get CaMeL Next ( ) ;
rank: 203
score: 99.14396362304687
patch: traverse ( c , ; c = c . get CaMeL Last CaMeL Sibling ( ) ) ; }
rank: 203
score: 99.14288884943181
patch: s = c . get CaMeL Next ( ) ;
rank: 203
score: 99.13592122395833
patch: if ( node . get CaMeL First CaMeL Child ( ) == null )
rank: 203
score: 98.93883666992187
patch: System . err . println ( $STRING$ + c . get CaMeL Id ( ) + $STRING$ ) ;
rank: 203
score: 98.9337909405048
patch: traverse ( c && c . contains ( c ) ) ;
rank: 203
score: 98.9103515625
patch: try { traverse ( c != null ) ;
rank: 204
score: 99.23577880859375
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Last CaMeL Sibling ( ) ) ;
rank: 204
score: 99.21732584635417
patch: Node parent = c . get CaMeL Next ( ) ;
rank: 204
score: 99.17293003627232
patch: Node next = next . get CaMeL Next ( ) ; for (
rank: 204
score: 99.14387730189732
patch: n = c . get CaMeL Parent CaMeL Node ( ) ; }
rank: 204
score: 99.14275653545673
patch: tmp = c . get CaMeL First CaMeL Child ( ) ;
rank: 204
score: 98.93842022235577
patch: System . err . println ( $STRING$ + c ) ; }
rank: 204
score: 98.93321881975446
patch: traverse ( c + ) ;
rank: 204
score: 98.90987723214286
patch: throw traverse ( c ) ;
rank: 205
score: 99.17165701729911
patch: Node next = n . get CaMeL Next ( ) ; for (
rank: 205
score: 99.14374069940476
patch: if ( c . get CaMeL Class CaMeL Name ( ) . starts CaMeL With ( $STRING$ ) ) {
rank: 205
score: 99.1427230834961
patch: if ( c . get CaMeL First CaMeL Child ( ) != node ) {
rank: 205
score: 99.13527544806985
patch: if ( c . get CaMeL First CaMeL Child ( ) != null ) break ;
rank: 205
score: 98.93836321149554
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) return ;
rank: 205
score: 98.93275451660156
patch: traverse ( c + false ) ;
rank: 205
score: 98.90895298549107
patch: if ( ! c . null ) { traverse ( c ) ;
rank: 206
score: 99.23524983723958
patch: traverse ( ( c . get CaMeL Parent CaMeL Node ( ) ) . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 206
score: 99.17420372596153
patch: c . get = c . get CaMeL Next ( ) ;
rank: 206
score: 99.17127482096355
patch: traverse ( next . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 206
score: 99.14370548023896
patch: Node n = c . get CaMeL First CaMeL Child ( ) ; if ( )
rank: 206
score: 99.1421367938702
patch: state = c . get CaMeL First CaMeL Child ( ) ;
rank: 206
score: 98.93828473772321
patch: c = c . get CaMeL Parent ( ) ; } return ;
rank: 206
score: 98.90848795572917
patch: if ( n != null ) return ;
rank: 207
score: 99.23391723632812
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL Child CaMeL Count ( ) ) ;
rank: 207
score: 99.17327117919922
patch: traverse ( c ) ; c = next . get CaMeL Next ( ) ;
rank: 207
score: 99.17086087740384
patch: break ; next = c . get CaMeL Next ( ) ;
rank: 207
score: 99.14202325994319
patch: x = c . get CaMeL Next ( ) ;
rank: 207
score: 99.14198303222656
patch: if ( c . ; c = c . get CaMeL Parent ( ) )
rank: 207
score: 99.13477434430804
patch: if ( c . get CaMeL Next ( ) != null ) {
rank: 207
score: 98.93815394810268
patch: if ( ! n . is CaMeL Empty ( ) ) continue ;
rank: 207
score: 98.90833629261364
patch: try { c = c ; } = c ;
rank: 208
score: 99.2333984375
patch: c = c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) ;
rank: 208
score: 99.21588134765625
patch: else { Node c = c . get CaMeL Next ( ) ;
rank: 208
score: 99.1729403409091
patch: exit = c . get CaMeL Next ( ) ;
rank: 208
score: 99.14195492393092
patch: c = c . ; c = c . get CaMeL Parent CaMeL Node ( ) ; }
rank: 208
score: 99.13373480902777
patch: if ( c . get CaMeL First CaMeL Child ( ) != null ) { try {
rank: 208
score: 98.93771597055289
patch: if ( c . is CaMeL Empty ( ) ) return ;
rank: 208
score: 98.9318603515625
patch: try { c . traverse ( c ) ;
rank: 209
score: 99.23333270733173
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) , false ) ;
rank: 209
score: 99.21565464564732
patch: return ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 209
score: 99.17171223958333
patch: c = c == null : c . get CaMeL Next ( ) ;
rank: 209
score: 99.14178466796875
patch: n = c . get CaMeL First CaMeL Child ( ) ; if ( ;
rank: 209
score: 99.14137776692708
patch: int visits = c . get CaMeL Next ( ) ;
rank: 209
score: 98.93767755681819
patch: if ( node . get CaMeL Name ( ) . equals ( c . get CaMeL Id ( ) ) )
rank: 209
score: 98.90684000651042
patch: traverse ( c . ( ) ) ;
rank: 210
score: 99.23316955566406
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , false ) ;
rank: 210
score: 99.17128092447916
patch: c = parent != null && c . get CaMeL Next ( ) ;
rank: 210
score: 99.16982596261161
patch: traverse ( c , n . get CaMeL Next ( ) ) ;
rank: 210
score: 99.14130510602679
patch: if ( c . get CaMeL First CaMeL Child ( ) == )
rank: 210
score: 99.14121791294643
patch: node = c . get CaMeL First CaMeL Child ( ) ; }
rank: 210
score: 99.13160118689903
patch: next = node . get CaMeL First CaMeL Child ( ) ;
rank: 210
score: 98.93741455078126
patch: System . out . println ( $STRING$ + c . get CaMeL Id ( ) + $STRING$ ) ;
rank: 210
score: 98.93161010742188
patch: traverse ( c + - 1 , c ;
rank: 210
score: 98.9063251201923
patch: if ( ! instanceof Node ) { traverse ( c ) ;
rank: 211
score: 99.17040076622597
patch: c = next = next . get CaMeL Next ( ) ;
rank: 211
score: 99.16852361505681
patch: l = c . get CaMeL Next ( ) ;
rank: 211
score: 99.14103190104167
patch: Leaf c = c . get CaMeL Next ( ) ;
rank: 211
score: 99.13144356863839
patch: try { Node next = next . get CaMeL Next ( ) ;
rank: 211
score: 98.93687086838942
patch: if ( c != null ) traverse ( c ) ; }
rank: 211
score: 98.9312744140625
patch: traverse ( c && c . get CaMeL Type ( ) ) ;
rank: 211
score: 98.90623982747395
patch: if ( ! != null ) traverse ( c ) ;
rank: 212
score: 99.1703632061298
patch: node . node = c . get CaMeL Next ( ) ;
rank: 212
score: 99.14005126953126
patch: int visits = c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ;
rank: 212
score: 99.139892578125
patch: traverse ( c , ; }
rank: 212
score: 99.13055419921875
patch: traverse ( list . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 212
score: 98.93666294642857
patch: while ( ! c . is CaMeL Empty ( ) ) break ;
rank: 212
score: 98.9310635653409
patch: traverse ( c ) ; traverse ( false ) ;
rank: 212
score: 98.90527954101563
patch: try { traverse ( c ) ; ; ;
rank: 213
score: 99.23298828125
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ) ; }
rank: 213
score: 99.21321868896484
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , ref ) ;
rank: 213
score: 99.16891479492188
patch: traverse ( should CaMeL Retraverse ( node ) ) ;
rank: 213
score: 99.16766357421875
patch: traverse ( c . get CaMeL Next ( ) , true ) ;
rank: 213
score: 99.13983623798077
patch: ns = c . get CaMeL First CaMeL Child ( ) ;
rank: 213
score: 99.1397705078125
patch: c ; c = c . get CaMeL First CaMeL Child ( ) ;
rank: 213
score: 99.12978690011161
patch: while ( c . get CaMeL Parent ( ) != null ) {
rank: 213
score: 98.93656281502017
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Property CaMeL Type ( ) ) ) {
rank: 213
score: 98.9033203125
patch: if ( c != null ) { traverse ( n ) ;
rank: 214
score: 99.16792566636029
patch: c = c != null && node . get CaMeL First CaMeL Child ( ) ;
rank: 214
score: 99.16713303786058
patch: c = c . get CaMeL Next ( ) ; for (
rank: 214
score: 99.13973999023438
patch: int n = c . get CaMeL First CaMeL Child ( ) . get CaMeL Value ( ) ;
rank: 214
score: 99.13973294771634
patch: x = c . get CaMeL First CaMeL Child ( ) ;
rank: 214
score: 98.9305087002841
patch: c ( c . traverse ( c ) ) ;
rank: 214
score: 98.90240885416667
patch: if ( ! traverse ( c ) ) { traverse ( c ) ;
rank: 215
score: 99.2324969951923
patch: c = ( Node ) ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 215
score: 99.16649105674342
patch: return node . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ; }
rank: 215
score: 99.13865309495192
patch: this . next = c . get CaMeL Next ( ) ;
rank: 215
score: 99.13786046645221
patch: if ( ! c . get CaMeL Name ( ) . equals ( $STRING$ ) )
rank: 215
score: 99.12884521484375
patch: try { Node next = node . get CaMeL Next ( ) ;
rank: 215
score: 98.92936401367187
patch: traverse ( c , c + c ) ;
rank: 215
score: 98.90084838867188
patch: if ( ! c . contains ( n ) ) {
rank: 216
score: 99.16728515625
patch: c = null ; node = c . get CaMeL Next ( ) ;
rank: 216
score: 99.16638764880952
patch: next = next . get CaMeL Next ( ) ; c = next . get CaMeL Next ( ) ;
rank: 216
score: 99.13809364720395
patch: if ( c != null && c . get CaMeL First CaMeL Child ( ) != null )
rank: 216
score: 99.13752746582031
patch: if ( c . ; c = c . get CaMeL Next ( ) )
rank: 216
score: 99.12856820913461
patch: c = node . get CaMeL Last CaMeL Child ( ) ;
rank: 216
score: 98.92935791015626
patch: traverse ( this , c , c ) ;
rank: 216
score: 98.90052379261364
patch: traverse ( c == null ? ) : c ;
rank: 217
score: 99.23134543678977
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) ) ;
rank: 217
score: 99.16688368055556
patch: traverse ( new Node ( node . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 217
score: 99.13807262073864
patch: o = c . get CaMeL Next ( ) ;
rank: 217
score: 99.1372821514423
patch: n = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 217
score: 99.1279296875
patch: if ( ! node . get CaMeL First CaMeL Child ( ) . has CaMeL Child ( ) ) {
rank: 217
score: 98.9357666015625
patch: if ( ! c . is CaMeL Instance ( c ) ) return ;
rank: 217
score: 98.9293212890625
patch: c = c . get CaMeL First CaMeL Child ( ) ; for ( ; ) ;
rank: 218
score: 99.20973205566406
patch: switch ( c . get CaMeL First CaMeL Child ( ) ) { return ;
rank: 218
score: 99.16593715122768
patch: traverse ( parent , c . get CaMeL Next ( ) ) ;
rank: 218
score: 99.16517857142857
patch: Node next = node . get CaMeL Next ( ) ; for (
rank: 218
score: 99.1377665201823
patch: Symbol c = c . get CaMeL Node ( ) ;
rank: 218
score: 99.12774658203125
patch: if ( c . get CaMeL First CaMeL Child ( ) != null ) { break ;
rank: 218
score: 98.93565538194444
patch: if ( node . get CaMeL Name ( ) . length ( ) == 0 ) {
rank: 218
score: 98.92891438802083
patch: traverse ( c ) ; traverse ( c ) ; }
rank: 218
score: 98.8998514811198
patch: if ( ! c . equals ( 1 ) ) {
rank: 219
score: 99.23106553819444
patch: traverse ( c . ; c = c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 219
score: 99.20913461538461
patch: Node c = c . get CaMeL Next 1 ( ) ;
rank: 219
score: 99.16561889648438
patch: c = c . get CaMeL Next ( ) ; traverse ( node ) ;
rank: 219
score: 99.16456240699405
patch: next = node . get CaMeL Next ( ) ; c = c . get CaMeL Next ( ) ;
rank: 219
score: 99.1370849609375
patch: traverse ( c , get CaMeL First CaMeL Child ( ) ) ;
rank: 219
score: 99.12754603794643
patch: if ( ! c . get CaMeL First CaMeL Child ( ) . has CaMeL Next ( ) ) {
rank: 219
score: 98.93487258184524
patch: System . err . println ( $STRING$ + c . get CaMeL Class CaMeL Name ( ) ) ; }
rank: 219
score: 98.9282470703125
patch: next ( ) ; traverse ( c ) ;
rank: 220
score: 99.20843505859375
patch: traverse ( input . get CaMeL First CaMeL Child ( ) , node ) ;
rank: 220
score: 99.16446940104167
patch: traverse ( next . get CaMeL Next ( ) ) ;
rank: 220
score: 99.13698508522727
patch: if ( node . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) == Node . )
rank: 220
score: 99.12675258091518
patch: if ( c . get CaMeL Node ( ) != null ) {
rank: 220
score: 98.92823204627403
patch: traverse ( c , c ) ; traverse ( node ) ;
rank: 220
score: 98.89969482421876
patch: if ( c != null ) { try {
rank: 221
score: 99.2081298828125
patch: Node next = current . get CaMeL Next ( ) ;
rank: 221
score: 99.16487630208333
patch: traverse ( . get CaMeL First CaMeL Child ( ) , node ) ;
rank: 221
score: 99.16364080255681
patch: traverse ( c . get CaMeL Next ( ) . get CaMeL First CaMeL Child ( ) , node ) ;
rank: 221
score: 99.13587036132813
patch: return c . get CaMeL Next ( ) ;
rank: 221
score: 99.1351254111842
patch: Object c = c . get CaMeL First CaMeL Child ( ) ; traverse ( c ) ;
rank: 221
score: 98.93364800347223
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Id ( ) ) ) {
rank: 221
score: 98.89960123697917
patch: if ( ! c . iterator ( ) . break ( c ) ;
rank: 222
score: 99.23033650716145
patch: traverse ( c , c . get CaMeL Last CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 222
score: 99.20661272321429
patch: Node c = c . get CaMeL Next ++ ; c = c . get CaMeL Next ( ) ;
rank: 222
score: 99.16468003216912
patch: Node next = c . get CaMeL Next ( ) ; traverse ( next ) ;
rank: 222
score: 99.13559792258523
patch: var = c . get CaMeL Next ( ) ;
rank: 222
score: 99.13490054481908
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( c == null )
rank: 222
score: 98.93361990792411
patch: if ( ! c . has CaMeL Next ( ) ) break ;
rank: 222
score: 98.92737579345703
patch: f . traverse ( c ) ;
rank: 223
score: 99.1635971069336
patch: traverse ( node ) ; next = c . get CaMeL Next ( ) ;
rank: 223
score: 99.13479817708334
patch: if ( c . get CaMeL First CaMeL Child ( ) != c )
rank: 223
score: 99.13453892299107
patch: ; c = c . get CaMeL First CaMeL Child ( ) ;
rank: 223
score: 99.12488555908203
patch: if ( c . get CaMeL Last CaMeL Child ( ) == null ) {
rank: 223
score: 98.93317119891827
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( node . get CaMeL Id ( ) ) )
rank: 223
score: 98.92699584960937
patch: traverse ( c + c + 0 ) ;
rank: 223
score: 98.89892578125
patch: if ( ! c . contains ( c ) ) { ;
rank: 224
score: 99.22850545247395
patch: traverse ( c , c . get CaMeL Current CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 224
score: 99.20579020182292
patch: if ( c . get CaMeL First CaMeL Child ( ) == null ) { return ;
rank: 224
score: 99.16212047230114
patch: traverse ( node . get CaMeL First CaMeL Child ( ) , node . get CaMeL Next ( ) ) ;
rank: 224
score: 99.13398822985198
patch: AST c = c . get CaMeL First CaMeL Child ( ) ; traverse ( c ) ;
rank: 224
score: 99.13381522042411
patch: node = Node CaMeL Util . get CaMeL Next ( c ) ;
rank: 224
score: 98.932958984375
patch: if ( ! c . get CaMeL Type ( ) . is CaMeL Empty ( ) ) return ;
rank: 224
score: 98.92687225341797
patch: c = c . get CaMeL Node ( ) ; traverse ( c ) ;
rank: 225
score: 99.22844904119319
patch: int n = c . get CaMeL First CaMeL Child ( ) . get CaMeL Node CaMeL Length ( ) ;
rank: 225
score: 99.20414733886719
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , scope ) ;
rank: 225
score: 99.16192072088069
patch: traverse ( . get CaMeL Next ( ) ) ;
rank: 225
score: 99.1335782137784
patch: resource = c . get CaMeL Next ( ) ;
rank: 225
score: 99.13306427001953
patch: c = c . get CaMeL First CaMeL Child ( ) ; } ) ;
rank: 225
score: 98.93287295386905
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( n ) ) {
rank: 225
score: 98.9250155362216
patch: traverse ( c , c . ( ) ) ;
rank: 225
score: 98.89781775841347
patch: if ( ! c . contains ( c ) ) { public
rank: 226
score: 99.2281161221591
patch: traverse ( c . get CaMeL Root CaMeL Node ( ) , c . get CaMeL Parent ( ) ) ;
rank: 226
score: 99.20363451086956
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , ) ;
rank: 226
score: 99.13330078125
patch: int visits = c . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) ;
rank: 226
score: 99.13275467722039
patch: traverse ( c , ( Node ) c . get CaMeL First CaMeL Child ( ) ) ;
rank: 226
score: 99.12420099431819
patch: c = c . get CaMeL Node ( ) ;
rank: 226
score: 98.9319091796875
patch: traverse ( ( Node ) c ) ; }
rank: 226
score: 98.9243408203125
patch: traverse ( c + c + c ) ;
rank: 226
score: 98.89756944444444
patch: if ( c == 0 ) return ;
rank: 227
score: 99.20277622767857
patch: Node next = ref . get CaMeL First CaMeL Child ( ) ;
rank: 227
score: 99.16100492931548
patch: c = c . get CaMeL Next ( ) ; c = parent . get CaMeL Next ( ) ;
rank: 227
score: 99.16081407335069
patch: traverse ( c , c , node . get CaMeL First CaMeL Child ( ) ) ;
rank: 227
score: 99.1331787109375
patch: n = c . get CaMeL Next ( ) ; }
rank: 227
score: 99.13262532552083
patch: traverse ( c . get CaMeL First CaMeL Child ( ) ) ; ;
rank: 227
score: 99.12418038504464
patch: c = c . get CaMeL Next ( ) ; return ; }
rank: 227
score: 98.93088989257812
patch: if ( ! c . is CaMeL Empty ( ) || c . is CaMeL Empty ( ) )
rank: 227
score: 98.92429606119792
patch: traverse ( c , c ) ; c = false ;
rank: 227
score: 98.89755249023438
patch: if ( ! ) traverse ( c ) ;
rank: 228
score: 99.2278544108073
patch: traverse ( c . get CaMeL Root CaMeL Node ( ) , c . get CaMeL Current CaMeL Node ( ) ) ;
rank: 228
score: 99.16017150878906
patch: c = c . get CaMeL Next ( ) ; visit ( node ) ;
rank: 228
score: 99.13259887695312
patch: traverse ( c ) ; ; c = c . get CaMeL First CaMeL Child ( ) ; }
rank: 228
score: 99.13252476283482
patch: while ( c . get CaMeL First CaMeL Child ( ) ) {
rank: 228
score: 99.12408040364583
patch: Node c = c . get CaMeL First CaMeL Child ( ) ; }
rank: 228
score: 98.93063790457589
patch: traverse ( ! node . get CaMeL Parent ( ) ) ; }
rank: 228
score: 98.92382202148437
patch: traverse ( c + 0 + 1 ) ;
rank: 228
score: 98.8974609375
patch: traverse ( c != c ) ;
rank: 229
score: 99.22781032986111
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) ) ; }
rank: 229
score: 99.201875
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL Containing CaMeL
rank: 229
score: 99.15935872395833
patch: c = false ; c = c . get CaMeL Next ( ) ;
rank: 229
score: 99.13204251802884
patch: p = c . get CaMeL First CaMeL Child ( ) ;
rank: 229
score: 99.13193581321023
patch: int n = c . get CaMeL First CaMeL Child ( ) . get CaMeL Last CaMeL Sibling ( ) ;
rank: 229
score: 98.89649658203125
patch: if ( traverse ( c ) ) { public
rank: 230
score: 99.22692340353261
patch: int n = c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . ;
rank: 230
score: 99.20175606863839
patch: else { Node next = c . get CaMeL Next ( ) ;
rank: 230
score: 99.15912628173828
patch: Node c = c . get CaMeL Next ( ) ; c = c ;
rank: 230
score: 99.13172104779412
patch: c = c . get CaMeL First CaMeL Child ( ) ; } return ; }
rank: 230
score: 99.13165283203125
patch: int c = c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) ;
rank: 230
score: 99.12330979567308
patch: exit = c . get CaMeL First CaMeL Child ( ) ;
rank: 230
score: 98.930390625
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Id ( ) ) ; }
rank: 230
score: 98.9225186434659
patch: traverse ( traverse ( c , node ) ) ;
rank: 231
score: 99.20156424386161
patch: c = Node . get CaMeL First CaMeL Child ( c ) ;
rank: 231
score: 99.15910993303571
patch: f = c . get CaMeL Next ( ) ; c = c . get CaMeL Next ( ) ;
rank: 231
score: 99.13160464638158
patch: if ( c . get CaMeL Class CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 231
score: 98.92230987548828
patch: c = c . get CaMeL First CaMeL Child ( ) ; for ( ;
rank: 232
score: 99.22671169704861
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) , false ) ;
rank: 232
score: 99.20135301159274
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL
rank: 232
score: 99.15836007254464
patch: c = next ( node . get CaMeL Next ( ) ) ;
rank: 232
score: 99.13133826622597
patch: traverse ( c , ; c = c . ; } }
rank: 232
score: 99.13067985983456
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL
rank: 232
score: 98.9301288311298
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Name ( ) + $STRING$ ) ;
rank: 232
score: 98.92179731889205
patch: traverse ( c , c ) ; c ++ ;
rank: 232
score: 98.89598499644886
patch: if ( null ) { traverse ( c ) ;
rank: 233
score: 99.22629018930289
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL Parent CaMeL Node ( ) , false ) ;
rank: 233
score: 99.20127958409927
patch: traverse ( ( Node ) next . get CaMeL First CaMeL Child ( ) ) ;
rank: 233
score: 99.15845889136905
patch: next = c . get CaMeL Next ( ) ; c = node . get CaMeL Next ( ) ;
rank: 233
score: 98.92179361979167
patch: traverse ( c , node ) ; this . traverse ( c ) ;
rank: 233
score: 98.89562049278847
patch: if ( ! c . equals ( c ) ) { ;
rank: 234
score: 99.22601873224431
patch: traverse ( c , c . get CaMeL Parent ( ) . get CaMeL Current CaMeL Node ( ) ) ;
rank: 234
score: 99.20056604456019
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) instanceof
rank: 234
score: 99.1584240141369
patch: c = c . get CaMeL Next ( ) ; next = node . get CaMeL Next ( ) ;
rank: 234
score: 99.15725528492646
patch: c = c != null || c . get CaMeL First CaMeL Child ( ) ;
rank: 234
score: 99.1303378018466
patch: exception = c . get CaMeL Next ( ) ;
rank: 234
score: 99.12098039899554
patch: visits = ( Node ) c . get CaMeL Next ( ) ;
rank: 234
score: 98.9290438565341
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) continue ;
rank: 234
score: 98.91994222005208
patch: traverse ( c ) ; else traverse ( c ) ;
rank: 234
score: 98.89524332682292
patch: if ( ! c . equals ( n ) ) {
rank: 235
score: 99.2260009765625
patch: if ( c . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 235
score: 99.15804036458333
patch: Preconditions = c . get CaMeL Next ( ) ; c = c . get CaMeL Next ( ) ;
rank: 235
score: 99.15664672851562
patch: c = node . get CaMeL Next ( ) ; }
rank: 235
score: 99.131103515625
patch: if ( c . ; c = c . get CaMeL First CaMeL Child ( ) ) {
rank: 235
score: 99.1302490234375
patch: prev = c . get CaMeL Next ( ) ; c = next ;
rank: 235
score: 98.91989135742188
patch: c = c . get CaMeL Value ( ) ; traverse ( node ) ;
rank: 235
score: 98.89476860894098
patch: add ( traverse ( c ) ) ;
rank: 236
score: 99.19899204799107
patch: traverse ( c , next . get CaMeL Next ( ) ) ;
rank: 236
score: 99.15645105698529
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , visits ++ ) ;
rank: 236
score: 99.13072374131944
patch: traverse ( c ; c = c . get CaMeL First CaMeL Child ( ) ) ;
rank: 236
score: 99.13018243963069
patch: ns = c . get CaMeL Next ( ) ;
rank: 236
score: 98.92861599392361
patch: traverse ( c ) ; c = c . get CaMeL First CaMeL Line ( ) ;
rank: 236
score: 98.91939871651786
patch: traverse ( c || node . get CaMeL Type ( ) ) ;
rank: 236
score: 98.89471905048077
patch: if ( n == null ) { traverse ( c ) ;
rank: 237
score: 99.22492532169117
patch: traverse ( c , c . get CaMeL Last CaMeL Child ( ) ) ; }
rank: 237
score: 99.1305419921875
patch: Node c = c . get CaMeL First CaMeL Child ( ) ; if ( c != null )
rank: 237
score: 99.13011756310097
patch: pos = c . get CaMeL First CaMeL Child ( ) ;
rank: 237
score: 99.12008463541666
patch: traverse ( children . get CaMeL First CaMeL Child ( c ) ) ;
rank: 237
score: 98.91853841145833
patch: traverse ( c , c ) ; c = n ;
rank: 237
score: 98.89463454026442
patch: if ( 0 != c ) { traverse ( c ) ;
rank: 238
score: 99.1571044921875
patch: traverse ( c . get CaMeL Next ( ) , false ) ;
rank: 238
score: 99.15451284555289
patch: c ; node = c . get CaMeL Next ( ) ;
rank: 238
score: 99.1305160522461
patch: n = c . get CaMeL First CaMeL Child ( ) ; } * /
rank: 238
score: 99.1185772235577
patch: node = parent . get CaMeL First CaMeL Child ( ) ;
rank: 238
score: 98.92766723632812
patch: / * traverse ( c , c ) ;
rank: 238
score: 98.89462280273438
patch: if ( traverse ( c ) ) { return ; }
rank: 239
score: 99.22427368164062
patch: c = ( Node ) c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 239
score: 99.19724684495192
patch: } Node next = c . get CaMeL Next ( ) ;
rank: 239
score: 99.15426870492789
patch: traverse ( . get CaMeL Next ( ) , c ) ;
rank: 239
score: 99.13031684027777
patch: traverse ( node ) ; c = c . get CaMeL First CaMeL Child ( ) ;
rank: 239
score: 99.11842564174107
patch: if ( c . get CaMeL Parent ( ) == null ) {
rank: 239
score: 98.92725830078125
patch: System . err . println ( $STRING$ + c . get CaMeL Name ( ) ) ; return ;
rank: 239
score: 98.91840154474431
patch: for ( ; ) { traverse ( c ) ;
rank: 239
score: 98.8942119891827
patch: traverse ( c ) ; traverse ( c , c ) ;
rank: 240
score: 99.22388509114583
patch: traverse ( ( Node ) c . get CaMeL Parent ( ) ) ;
rank: 240
score: 99.197021484375
patch: if ( c . get CaMeL First CaMeL Child ( ) == null ) { traverse ( c ) ;
rank: 240
score: 99.15621512276786
patch: prev = c . get CaMeL Next ( ) ; c = c . get CaMeL Next ( ) ;
rank: 240
score: 99.15405951605902
patch: Node c = c . get CaMeL First CaMeL Child ( ) ; c = next ;
rank: 240
score: 99.12931685014205
patch: iter = c . get CaMeL Next ( ) ;
rank: 240
score: 99.11708286830357
patch: if ( ! c . get CaMeL First CaMeL Child ( ) . is CaMeL All ( ) ) {
rank: 240
score: 98.92592592592592
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) ;
rank: 240
score: 98.91785888671875
patch: traverse ( c , true ) ; return ;
rank: 240
score: 98.89396362304687
patch: try { ) ; traverse ( c ) ;
rank: 241
score: 99.22314453125
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) , c ) ;
rank: 241
score: 99.15579562717014
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , 0 ) ;
rank: 241
score: 99.15397135416667
patch: exit ( ) ; c = c . get CaMeL Next ( ) ;
rank: 241
score: 99.1295166015625
patch: if ( c . get CaMeL First CaMeL Child ( ) . equals ( c ) )
rank: 241
score: 98.92557466947116
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( n . get CaMeL Name ( ) ) )
rank: 241
score: 98.9178133877841
patch: traverse ( c ) ; traverse ( out ) ;
rank: 241
score: 98.89333871694711
patch: if ( node != null ) { traverse ( c ) ;
rank: 242
score: 99.2230859375
patch: traverse ( ( Node ) c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 242
score: 99.19683837890625
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) ) ;
rank: 242
score: 99.15491440716912
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , ) ;
rank: 242
score: 99.15370806525735
patch: c . get CaMeL First CaMeL Child ( ) . traverse ( c ) ; }
rank: 242
score: 99.12847541360294
patch: traverse ( c . get CaMeL First CaMeL Child ( ) ) ; break ; }
rank: 242
score: 99.127978515625
patch: if ( c . get CaMeL First CaMeL Child ( ) == c )
rank: 242
score: 99.1153564453125
patch: if ( c . get CaMeL First CaMeL Child ( ) != null ) continue ;
rank: 242
score: 98.91728864397321
patch: traverse ( c ) ; c = c . null ( ) ;
rank: 242
score: 98.8920147235577
patch: if ( ! != null ) { traverse ( c ) ;
rank: 243
score: 99.19654430042614
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) ) ;
rank: 243
score: 99.15370530348558
patch: c . current = c . get CaMeL Next ( ) ;
rank: 243
score: 99.12754193474265
patch: if ( c . get CaMeL First CaMeL Child ( ) == node . get CaMeL
rank: 243
score: 99.11508413461539
patch: try { node = c . get CaMeL Next ( ) ;
rank: 243
score: 98.92514377170139
patch: traverse ( c ) ; type = c . get CaMeL Value CaMeL Type ( ) ;
rank: 243
score: 98.9172696200284
patch: traverse ( ! c . size ( ) ) ;
rank: 243
score: 98.89197387695313
patch: try { if ( c != null ) {
rank: 244
score: 99.19609375
patch: Node c = scope . get CaMeL First CaMeL Child ( c ) ;
rank: 244
score: 99.15343424479167
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c ;
rank: 244
score: 99.12763977050781
patch: n = c . get CaMeL First CaMeL Child ( ) ; if ( )
rank: 244
score: 99.12699381510417
patch: Block c = c . get CaMeL Next ( ) ;
rank: 244
score: 99.11415452223558
patch: return = c . get CaMeL First CaMeL Child ( ) ;
rank: 244
score: 98.92490931919643
patch: if ( ! c . is CaMeL Empty ( ) ) { )
rank: 244
score: 98.91658325195313
patch: try { traverse ( c + node ) ;
rank: 244
score: 98.89179823133681
patch: if ( ! != c ) { public
rank: 245
score: 99.22141335227273
patch: traverse ( c . get CaMeL Parent ( ) , c . get CaMeL Root CaMeL Node ( ) ) ;
rank: 245
score: 99.19447428385416
patch: Node next = scope . get CaMeL First CaMeL Child ( c ) ;
rank: 245
score: 99.15352957589286
patch: Node c = n . get CaMeL Next ( ) ; for (
rank: 245
score: 99.15208943684895
patch: visit ( node . get CaMeL Next ( ) ) ;
rank: 245
score: 99.12730407714844
patch: c = c . get CaMeL First CaMeL Child ( ) ; ++ c ;
rank: 245
score: 99.125830078125
patch: if ( c . get CaMeL First CaMeL Child ( ) != ) {
rank: 245
score: 99.11405726841518
patch: try { Node c = node . get CaMeL Next ( ) ;
rank: 245
score: 98.9248555501302
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) continue ;
rank: 245
score: 98.91624755859375
patch: traverse ( c , true , node ) ;
rank: 245
score: 98.8915303548177
patch: if ( ! != 1 ) traverse ( c ) ;
rank: 246
score: 99.19439453125
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) , ) ;
rank: 246
score: 99.15309361049107
patch: traverse ( c . get CaMeL Next ( ) , type ) ;
rank: 246
score: 99.15194881663604
patch: traverse ( node , node . get CaMeL First CaMeL Child ( ) ) ; }
rank: 246
score: 99.1265380859375
patch: n = c . get CaMeL First CaMeL Child ( ) ; break ;
rank: 246
score: 99.12505425347223
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( )
rank: 246
score: 99.11228314568015
patch: if ( ! node . get CaMeL First CaMeL Child ( ) != null ) {
rank: 246
score: 98.92470831620066
patch: if ( node . get CaMeL Id ( ) == c . get CaMeL Id ( ) )
rank: 246
score: 98.91577758789063
patch: traverse ( c , node , node ) ;
rank: 246
score: 98.8903579711914
patch: traverse ( c . c ) ;
rank: 247
score: 99.2192611694336
patch: traverse ( c . get CaMeL Root CaMeL Node ( ) , c ) ;
rank: 247
score: 99.1943591889881
patch: c = parent . get CaMeL Next ( ) ; c = c . get CaMeL Next ( ) ;
rank: 247
score: 99.1518783569336
patch: next = c . get CaMeL Next ( ) ; traverse ( c ) ;
rank: 247
score: 99.12632057883523
patch: switch ( c . get CaMeL Type ( ) )
rank: 247
score: 99.12496243990384
patch: if ( c . should CaMeL Retraverse ( node ) )
rank: 247
score: 98.9156494140625
patch: try { traverse ( node ) ;
rank: 247
score: 98.8901123046875
patch: return ; else { traverse ( c ) ;
rank: 248
score: 99.21762917258523
patch: traverse ( ( Node ) c , c ) ;
rank: 248
score: 99.19419860839844
patch: traverse ( node . get CaMeL First CaMeL Child ( ) ) ; return ;
rank: 248
score: 99.15274850945724
patch: return n . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ; }
rank: 248
score: 99.15147181919643
patch: traverse ( c , node . get CaMeL Length ( ) ) ;
rank: 248
score: 99.12596435546875
patch: traverse ( c ) ; return true ; }
rank: 248
score: 99.12469951923077
patch: qualifier = c . get CaMeL First CaMeL Child ( ) ;
rank: 248
score: 98.9245361328125
patch: if ( ! c . is CaMeL Empty ( ) ) { break ;
rank: 248
score: 98.91476440429688
patch: traverse ( node , false ) ;
rank: 248
score: 98.89002685546875
patch: if ( n != 0 ) { return ;
rank: 249
score: 99.19415752704327
patch: Node next = c . get CaMeL Next 1 ( ) ;
rank: 249
score: 99.15135701497395
patch: traverse ( parent . get CaMeL Next ( ) ) ;
rank: 249
score: 99.12590789794922
patch: c = c . ; c = c . get CaMeL Next ( ) ;
rank: 249
score: 99.12462158203125
patch: int visits = c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) ;
rank: 249
score: 99.11180114746094
patch: if ( c . get CaMeL First CaMeL Child ( ) == null ) }
rank: 249
score: 98.92450420673077
patch: else { c = c . get CaMeL Parent ( ) ;
rank: 249
score: 98.8897476196289
patch: if ( ! c . iterator ( ) . iterator ( ) . else else
rank: 250
score: 99.2175625887784
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent ( ) ) ;
rank: 250
score: 99.15154474431819
patch: static = c . get CaMeL Next ( ) ;
rank: 250
score: 98.92448120117187
patch: throw new Runtime CaMeL Exception ( c ) ;
rank: 250
score: 98.88974233774039
patch: if ( ! c . equals ( c ) ) { public
rank: 251
score: 99.21750895182292
patch: traverse ( c . get CaMeL Root CaMeL Node ( ) , c . get CaMeL Last CaMeL Child ( ) ) ;
rank: 251
score: 99.14908040364584
patch: traverse ( parent . get CaMeL First CaMeL Child ( ) ) ; }
rank: 251
score: 99.12549506293402
patch: if ( c . get CaMeL Class CaMeL Name ( ) . equals ( ) ) {
rank: 251
score: 99.1244784268466
patch: if ( c . get CaMeL Next ( ) )
rank: 251
score: 98.92446664663461
patch: if ( ! node . is CaMeL Empty ( ) ) {
rank: 251
score: 98.91387469951923
patch: c = traverse ( c ) ; traverse ( c ) ;
rank: 252
score: 99.21644944411058
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 252
score: 99.15068708147321
patch: traverse ( c . get CaMeL Next ( ) , visits ) ;
rank: 252
score: 99.11067030164931
patch: return . get CaMeL Next ( ) ;
rank: 252
score: 98.92445591517857
patch: if ( ! c . is CaMeL Empty ( ) && ! c . is CaMeL Empty ( ) )
rank: 252
score: 98.91365051269531
patch: c = c . get CaMeL First CaMeL Child ( ) ; break ; ;
rank: 252
score: 98.88871626420455
patch: if ( ! ) { traverse ( c ) ;
rank: 253
score: 99.21630859375
patch: if ( c . get CaMeL Type CaMeL Name ( ) . equals ( $STRING$ ) )
rank: 253
score: 99.19294289981617
patch: Node next = ( Node ) next . get CaMeL First CaMeL Child ( ) ;
rank: 253
score: 99.14824567522321
patch: traverse ( c , node . get CaMeL Value ( ) ) ;
rank: 253
score: 99.12476264105902
patch: c = c . get CaMeL Parent CaMeL Node ( ) ; traverse ( c ) ;
rank: 253
score: 99.122705078125
patch: Type c = c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) ;
rank: 253
score: 98.92421653053977
patch: c = c . get CaMeL Value ( ) ;
rank: 253
score: 98.91351928710938
patch: traverse ( c + c , node ) ;
rank: 253
score: 98.8880948153409
patch: traverse ( n , traverse ( c ) ) ;
rank: 254
score: 99.21560434194711
patch: traverse ( c , c . get CaMeL Root CaMeL Node ( ) , c . get CaMeL Root CaMeL Node ( ) ) ;
rank: 254
score: 99.19290865384616
patch: return ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) . get CaMeL Node ( ) ) ;
rank: 254
score: 99.14812554253473
patch: c = c . get ( ) ;
rank: 254
score: 99.1246670809659
patch: if ( c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) == )
rank: 254
score: 99.12233479817708
patch: Object c = c . get CaMeL Node ( ) ;
rank: 254
score: 98.91318766276042
patch: traverse ( ! traverse ( c , c ) ) ;
rank: 254
score: 98.88771362304688
patch: if ( c == c ) { return ;
rank: 255
score: 99.21471150716145
patch: traverse ( c , c . get CaMeL Root CaMeL Node ( ) . get CaMeL Last CaMeL Child ( ) ) ;
rank: 255
score: 99.12383711965461
patch: c = c . get CaMeL Parent CaMeL Node ( ) ; } traverse ( c ) ;
rank: 255
score: 99.11017315204327
patch: Preconditions = node . get CaMeL First CaMeL Child ( ) ;
rank: 255
score: 98.9239834872159
patch: else { traverse ( c , c ) ; }
rank: 255
score: 98.91316053602431
patch: else traverse ( c , c ) ;
rank: 255
score: 98.88738544170673
patch: if ( c != length ) { traverse ( c ) ;
rank: 256
score: 99.2146708170573
patch: traverse ( c . get CaMeL Current CaMeL Node ( ) , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 256
score: 99.14990234375
patch: traverse = c . get CaMeL Next ( ) ; c = c . get CaMeL Next ( ) ;
rank: 256
score: 99.14730834960938
patch: Node next = next . get CaMeL Next ( ) ; c = next ;
rank: 256
score: 99.12372903262867
patch: if ( c . get CaMeL Class CaMeL Name ( ) . equals ( ) )
rank: 256
score: 99.1097183227539
patch: if ( next = next . get CaMeL First CaMeL Child ( ) ) {
rank: 256
score: 98.92381940569196
patch: if ( ! c . is CaMeL Instance ( c ) ) {
rank: 256
score: 98.91211547851563
patch: try { traverse ( c + 1 ) ;
rank: 256
score: 98.88622436523437
patch: if ( c == null ) { ) {
rank: 257
score: 99.21421120383523
patch: traverse ( c . get CaMeL Parent ( ) , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 257
score: 99.12371826171875
patch: traverse ( c , ; c = c . get CaMeL First CaMeL Child ( ) ) ; ;
rank: 257
score: 99.1214130108173
patch: if ( c . get CaMeL Node ( ) != null )
rank: 257
score: 98.92306518554688
patch: System . out . println ( $STRING$ + c . get CaMeL Name ( ) ) ; return ;
rank: 257
score: 98.91195678710938
patch: traverse ( c + $STRING$ + node . get CaMeL Name ( ) ) ;
rank: 257
score: 98.8860614483173
patch: if ( ! c . length ( ) == 1 ) {
rank: 258
score: 99.14930216471355
patch: traverse ( next . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , node ) ;
rank: 258
score: 99.1465705422794
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = next ;
rank: 258
score: 99.12135823567708
patch: Object c = c . get CaMeL Parent ( ) ;
rank: 258
score: 99.10950385199652
patch: while ( c . get CaMeL First CaMeL Child ( ) != null ) { break ;
rank: 258
score: 98.92197672526042
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) ) ;
rank: 258
score: 98.9119403545673
patch: traverse ( c ) ; ) ; traverse ( c ) ;
rank: 258
score: 98.88429953835227
patch: if ( ! c . length ( ) ) {
rank: 259
score: 99.19194684709821
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( )
rank: 259
score: 99.1489727313702
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) , null ) ;
rank: 259
score: 99.12361363002232
patch: n = c . get CaMeL Last CaMeL Child ( ) ; }
rank: 259
score: 99.12133026123047
patch: if ( c != null && c . get CaMeL First CaMeL Child ( )
rank: 259
score: 99.10945434570313
patch: if ( ! c . get CaMeL First CaMeL Child ( ) . is CaMeL Empty ( ) )
rank: 259
score: 98.92160268930289
patch: throw new Runtime CaMeL Exception ( $STRING$ + c ) ; }
rank: 259
score: 98.91179809570312
patch: traverse ( c , c . null ) ;
rank: 259
score: 98.88427734375
patch: traverse ( c ) ; c = c ; }
rank: 260
score: 99.21202021059783
patch: c = c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ; break ;
rank: 260
score: 99.19172014508929
patch: Node next = c . get CaMeL Next ++ ; c = c . get CaMeL Next ( ) ;
rank: 260
score: 99.14877755301339
patch: traverse ( c . get CaMeL Next ( ) , 0 ) ;
rank: 260
score: 99.12338692801339
patch: c = c . get CaMeL First CaMeL Child ( ) ; ;
rank: 260
score: 99.12127130681819
patch: rs = c . get CaMeL Next ( ) ;
rank: 260
score: 99.10846710205078
patch: if ( node . get CaMeL First CaMeL Child ( ) != null ) ;
rank: 260
score: 98.92142159598214
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c ) ) ;
rank: 260
score: 98.91173706054687
patch: traverse ( c , false ) ; ) ;
rank: 260
score: 98.88419283353366
patch: if ( ! != n ) { traverse ( c ) ;
rank: 261
score: 99.21201578776042
patch: while ( c . ; c = c . get CaMeL First CaMeL Child ( ) )
rank: 261
score: 99.14510091145833
patch: c = c ; c = c . get CaMeL Next ( ) ;
rank: 261
score: 99.122314453125
patch: if ( c == node . get CaMeL Last CaMeL Child ( ) )
rank: 261
score: 99.10824924045139
patch: if ( node . get CaMeL First CaMeL Child ( ) != null ) { try {
rank: 261
score: 98.9212058738426
patch: if ( ! node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) )
rank: 261
score: 98.91152954101562
patch: traverse ( ! c ) ; traverse ( c ) ;
rank: 261
score: 98.8841552734375
patch: if ( c != 0 ) { return ;
rank: 262
score: 99.1448974609375
patch: traverse ( node . get CaMeL First CaMeL Child ( ) , c ) ; }
rank: 262
score: 99.12224578857422
patch: traverse ( c , node . get CaMeL First CaMeL Child ( ) , ;
rank: 262
score: 99.12093680245536
patch: if ( ! c . get CaMeL First CaMeL Child ( ) )
rank: 262
score: 99.10776774088542
patch: try { if ( c . get CaMeL First CaMeL Child ( ) != null ) {
rank: 262
score: 98.92112821691177
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Id ( ) ;
rank: 262
score: 98.91081019810268
patch: traverse ( c && node . get CaMeL Type ( ) ) ;
rank: 262
score: 98.88411458333333
patch: traverse ( n ) ;
rank: 263
score: 99.2107645670573
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL Parent CaMeL Node ( ) . ;
rank: 263
score: 99.19092814127605
patch: Node traverse = c . get CaMeL Next ( ) ;
rank: 263
score: 99.12141498766448
patch: c = c . get CaMeL Last CaMeL Child ( ) ; } traverse ( c ) ;
rank: 263
score: 99.12070875901442
patch: f = c . get CaMeL First CaMeL Child ( ) ;
rank: 263
score: 98.920947265625
patch: c = traverse ( c , c ) ;
rank: 263
score: 98.9106689453125
patch: traverse ( c , ( String ) c ;
rank: 263
score: 98.8837890625
patch: traverse ( c , null ) ; ) ;
rank: 264
score: 99.21007622612848
patch: traverse ( n ) ; c = c . get CaMeL First CaMeL Child ( ) ;
rank: 264
score: 99.14740280877976
patch: c = c . get CaMeL Next ( ) ; next = n . get CaMeL Next ( ) ;
rank: 264
score: 99.14470563616071
patch: traverse ( null . get CaMeL First CaMeL Child ( ) ) ;
rank: 264
score: 99.12118869357639
patch: traverse ( c , node . get CaMeL First CaMeL Child ( ) , true ) ;
rank: 264
score: 99.1201171875
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ) {
rank: 264
score: 99.10686492919922
patch: if ( c . get CaMeL Child CaMeL Count ( ) > 0 ) {
rank: 264
score: 98.92082214355469
patch: if ( c != null || ! c . is CaMeL Empty ( ) )
rank: 264
score: 98.90975952148438
patch: else traverse ( c ) ; traverse ( c ) ;
rank: 264
score: 98.88365589488636
patch: traverse ( ! c ; traverse ( c ) ;
rank: 265
score: 99.20958455403645
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) . get CaMeL Root CaMeL Node ( ) ) ;
rank: 265
score: 99.14423479352679
patch: traverse ( null , c . get CaMeL Next ( ) ) ;
rank: 265
score: 99.1211669921875
patch: traverse ( c ) ; break ; } }
rank: 265
score: 99.12009684244792
patch: res = c . get CaMeL Next ( ) ; }
rank: 265
score: 98.9204989346591
patch: if ( ! node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c ) ) {
rank: 265
score: 98.90934244791667
patch: traverse c . traverse ( c ) ;
rank: 265
score: 98.88360040838069
patch: int n = c ; traverse ( c ) ;
rank: 266
score: 99.20958036534927
patch: traverse ( c . traverse ( c . get CaMeL Parent ( ) ) ) ;
rank: 266
score: 99.18888636997768
patch: traverse ( node . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ) ;
rank: 266
score: 99.1440899188702
patch: traverse ( c , . get CaMeL Next ( ) ) ;
rank: 266
score: 99.12106323242188
patch: traverse ( c , ; c = c ;
rank: 266
score: 99.12001546223958
patch: Object traverse = c . get CaMeL Next ( ) ;
rank: 266
score: 99.10580444335938
patch: if ( c == null ) {
rank: 266
score: 98.92023668791118
patch: if ( c . get CaMeL Id ( ) == c . get CaMeL Id ( ) )
rank: 266
score: 98.90931701660156
patch: this . traverse ( c ) ;
rank: 266
score: 98.88326822916666
patch: if ( ! c . length ( ) ) traverse ( c ) ;
rank: 267
score: 99.1885986328125
patch: traverse ( node . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 267
score: 99.14364858774039
patch: c . parent = c . get CaMeL Next ( ) ;
rank: 267
score: 99.12081909179688
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( ) ) {
rank: 267
score: 98.91992865668402
patch: traverse ( c ) ; node = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 267
score: 98.90919404871323
patch: if ( c . has CaMeL Next ( ) ) { traverse ( c ) ;
rank: 267
score: 98.88312377929688
patch: if ( ! traverse ( 1 ) ) {
rank: 268
score: 99.20884076286765
patch: traverse ( ) ; c = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 268
score: 99.18859049479167
patch: traverse ( super . get CaMeL First CaMeL Child ( c ) ) ;
rank: 268
score: 99.14357346754808
patch: c != null && c . get CaMeL Next ( ) ;
rank: 268
score: 99.12080078125
patch: traverse ( c , ( Node ) ) ;
rank: 268
score: 99.11951622596153
patch: tree = c . get CaMeL First CaMeL Child ( ) ;
rank: 268
score: 98.91963252314815
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) {
rank: 268
score: 98.90915749289773
patch: traverse ( ( traverse ( c ) ) ) ;
rank: 268
score: 98.8825350674716
patch: if ( n ) { traverse ( c ) ;
rank: 269
score: 99.20876242897727
patch: traverse ( c , c . get CaMeL Parent ( ) . get CaMeL Root CaMeL Node ( ) ) ;
rank: 269
score: 99.1884296123798
patch: Node next = this . get CaMeL Next ( c ) ;
rank: 269
score: 99.14603097098214
patch: do { c = c . get CaMeL Next ( ) ; }
rank: 269
score: 99.14328002929688
patch: c = node . get CaMeL Next ( ) ; visit ( c ) ;
rank: 269
score: 99.12066329152961
patch: traverse ( c , ; n = c . get CaMeL First CaMeL Child ( ) ) ;
rank: 269
score: 99.11868286132812
patch: Leaf next = c . get CaMeL Next ( ) ;
rank: 269
score: 99.10550130208334
patch: if ( ! c . get CaMeL First CaMeL Child ( ) ) {
rank: 269
score: 98.91949932391827
patch: System . out . println ( $STRING$ + c ) ; }
rank: 269
score: 98.90863800048828
patch: if ( c . traverse ( c ) ) { traverse ( c ) ;
rank: 269
score: 98.88246459960938
patch: if ( c != null ) ) return ;
rank: 270
score: 99.18827311197917
patch: traverse ( c && c . get CaMeL First CaMeL Child ( ) != null ) ;
rank: 270
score: 99.14549763997395
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next ( ) , false ) ;
rank: 270
score: 99.11729939778645
patch: Result c = c . get CaMeL Next ( ) ;
rank: 270
score: 99.10454963235294
patch: if ( c . get CaMeL First CaMeL Child ( ) != null ) { }
rank: 270
score: 98.91895373114224
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Class CaMeL Name ( ) ) ) {
rank: 271
score: 99.18747384207589
patch: Node index = c . get CaMeL First CaMeL Child ( ) ;
rank: 271
score: 99.14522007533482
patch: while ( next = c . get CaMeL Next ( ) ) {
rank: 271
score: 99.14289202008929
patch: traverse ( node . get CaMeL Next ( ) , node ) ;
rank: 271
score: 99.11946186266448
patch: traverse ( node , ; c = c . get CaMeL First CaMeL Child ( ) ) ;
rank: 271
score: 99.1170321377841
patch: slot = c . get CaMeL Next ( ) ;
rank: 271
score: 98.91731770833333
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( null ) ) {
rank: 271
score: 98.9083760579427
patch: traverse ( c , node ) ; c = node ;
rank: 271
score: 98.88111572265625
patch: if ( c != null ) { break ;
rank: 272
score: 99.207705078125
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) . get CaMeL First CaMeL Child ( ) ) ; }
rank: 272
score: 99.1406758626302
patch: c = ! node . get CaMeL Next ( ) ;
rank: 272
score: 99.11666165865384
patch: scope = c . get CaMeL First CaMeL Child ( ) ;
rank: 272
score: 99.10357666015625
patch: if ( ! node . get CaMeL First CaMeL Child ( ) . has CaMeL Next ( ) )
rank: 272
score: 98.90828664679276
patch: c = c . get CaMeL First CaMeL Child ( ) ; ; traverse ( c ) ;
rank: 272
score: 98.88104802911931
patch: if ( ! != traverse ( c ) ) {
rank: 273
score: 99.20762282151442
patch: traverse ( c , node . get CaMeL First CaMeL Child ( ) , node . get CaMeL First CaMeL Child ( ) ) ;
rank: 273
score: 99.1400479403409
patch: traverse ( c ) ; visit ( c ) ;
rank: 273
score: 99.11940403988487
patch: traverse ( c , ; c = c . get CaMeL Current CaMeL Node ( ) ) ;
rank: 273
score: 99.11601118607955
patch: library = c . get CaMeL Next ( ) ;
rank: 273
score: 99.10205078125
patch: try { if ( node . get CaMeL First CaMeL Child ( ) != null ) {
rank: 273
score: 98.91691080729167
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Message ( ) ) ; }
rank: 273
score: 98.90814208984375
patch: ) { traverse ( c , c ) ;
rank: 273
score: 98.8810302734375
patch: if ( n == 0 ) { return ;
rank: 274
score: 99.20731847426471
patch: traverse ( ) ; c = c . get CaMeL Last CaMeL Child ( ) ;
rank: 274
score: 99.1871337890625
patch: c = next ( c . get CaMeL First CaMeL Child ( ) ) . get CaMeL First CaMeL Child ( ) ;
rank: 274
score: 99.14400227864583
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , visits ) ;
rank: 274
score: 99.13876577524039
patch: traverse ( ! should CaMeL Retraverse ( node ) ) ;
rank: 274
score: 99.11917453342014
patch: traverse ( c , true ) ; }
rank: 274
score: 99.11585828993056
patch: int visits = c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL
rank: 274
score: 98.9168701171875
patch: if ( ! node . is CaMeL Empty ( ) ) continue ;
rank: 274
score: 98.8797607421875
patch: try { traverse ( c , c ) ; ;
rank: 275
score: 99.20726521809895
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) . get CaMeL Child CaMeL Count ( ) ) ;
rank: 275
score: 99.14357346754808
patch: do { next = c . get CaMeL Next ( ) ;
rank: 275
score: 99.11574485085227
patch: resolved = c . get CaMeL Next ( ) ;
rank: 275
score: 98.9168368252841
patch: c = c . get CaMeL State ( ) ;
rank: 275
score: 98.90766252790179
patch: traverse ( c ) ; c = c . traverse ( ) ;
rank: 275
score: 98.87962123325893
patch: if ( c == null ) { traverse ( c ) ; }
rank: 276
score: 99.20673684512867
patch: c = ( Node ) c ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 276
score: 99.14331993689903
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) , node ) ;
rank: 276
score: 99.11898643092105
patch: traverse ( node ) ; c = c . get CaMeL First CaMeL Child ( ) ; }
rank: 276
score: 99.10040893554688
patch: if ( c != null && c . get CaMeL First CaMeL Child ( ) != null ) {
rank: 276
score: 98.90723595252403
patch: traverse ( c ) ; c else traverse ( c ) ;
rank: 276
score: 98.87945087139423
patch: if ( ! != 1 ) { traverse ( c ) ;
rank: 277
score: 99.20671875
patch: traverse ( ( Node ) c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 277
score: 99.13831380208333
patch: c = c == null && c . get CaMeL Next ( ) ;
rank: 277
score: 99.11844032689145
patch: c = c . get CaMeL First CaMeL Child ( ) ; } traverse ( c , ;
rank: 277
score: 99.1152099609375
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL
rank: 277
score: 99.10017903645833
patch: visits = c . get CaMeL Next ( ) ; c = c . get CaMeL Next ( ) ;
rank: 277
score: 98.91645159040179
patch: if ( ! c . is CaMeL Function ( ) ) return ;
rank: 277
score: 98.906982421875
patch: traverse ( traverse ( c ) ) ; ;
rank: 278
score: 99.14066808363971
patch: if ( c != null ) next = c . get CaMeL Next ( ) ;
rank: 278
score: 99.1379165649414
patch: traverse ( c , . get CaMeL First CaMeL Child ( ) ) ; }
rank: 278
score: 99.1181973544034
patch: traverse ( c , c , true ) ; }
rank: 278
score: 99.114990234375
patch: qualifier = c . get CaMeL Next ( ) ;
rank: 278
score: 99.10000610351562
patch: if ( ! should CaMeL Visit ( node ) ) {
rank: 278
score: 98.91636256167763
patch: if ( ! c . get CaMeL Type ( ) . is CaMeL Empty ( ) ) {
rank: 278
score: 98.90672471788194
patch: ) ) ; traverse ( c ) ;
rank: 278
score: 98.87812042236328
patch: if ( ! c . iterator ( ) . iterator ( c ) . }
rank: 279
score: 99.20581772748162
patch: c = ( Node ) c . get CaMeL Parent CaMeL Node ( ) ; }
rank: 279
score: 99.138779296875
patch: if ( node . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL Next CaMeL
rank: 279
score: 99.13780866350446
patch: traverse ( this , c . get CaMeL Next ( ) ) ;
rank: 279
score: 99.11804962158203
patch: traverse ( c , ; c = c . get CaMeL Next ) ; }
rank: 279
score: 99.11473670372597
patch: if ( c . should CaMeL Retraverse ( ) ) {
rank: 279
score: 99.09986572265625
patch: visits = c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ; }
rank: 279
score: 98.90650431315105
patch: traverse ( c , c ) ; if ( c ;
rank: 280
score: 99.20576477050781
patch: node = ( Node ) c . get CaMeL Parent CaMeL Node ( ) ;
rank: 280
score: 99.18555797230114
patch: c = next ( c . get CaMeL First CaMeL Child ( ) ) . get CaMeL Next ( ) ;
rank: 280
score: 99.1385269165039
patch: traverse ( c , c . get CaMeL Next ( ) , false ) ;
rank: 280
score: 99.13777982271634
patch: c = c . next . get CaMeL Next ( ) ;
rank: 280
score: 99.11737530048077
patch: traverse ( c , ; c . traverse ( ) ) ;
rank: 280
score: 99.09980991908482
patch: if ( next = c . get CaMeL Next ( ) ) {
rank: 280
score: 98.91619514016544
patch: if ( c != null || ! c . is CaMeL Empty ( ) ) {
rank: 280
score: 98.90565249794408
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( c ) ; }
rank: 280
score: 98.87764485677083
patch: traverse ( c != null ? c ;
rank: 281
score: 99.2049560546875
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) . ;
rank: 281
score: 99.18545735677084
patch: traverse ( node . get CaMeL First CaMeL Child ( ) , ) ;
rank: 281
score: 99.1382344563802
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next ( ) , true ) ;
rank: 281
score: 99.11735704210069
patch: traverse ( c , node . get CaMeL First CaMeL Child ( ) , false ) ;
rank: 281
score: 99.11420232599431
patch: dest = c . get CaMeL Next ( ) ;
rank: 281
score: 98.91587136008523
patch: if ( ! c . traverse ( c ) )
rank: 281
score: 98.87730055588942
patch: if ( parent != null ) { traverse ( c ) ;
rank: 282
score: 99.2047627766927
patch: c = ( node . get CaMeL First CaMeL Child ( ) ) . get CaMeL Last CaMeL Child ( ) ; }
rank: 282
score: 99.18511090959821
patch: return ; } c = c . get CaMeL Next ( ) ;
rank: 282
score: 99.13657924107143
patch: traverse ( c , node . get CaMeL Root ( ) ) ;
rank: 282
score: 99.1171875
patch: if ( c . get CaMeL Type ( ) == Node . )
rank: 282
score: 99.1131950827206
patch: if ( c . get CaMeL First CaMeL Child ( ) != node . get CaMeL
rank: 282
score: 99.09892442491319
patch: if ( node . get CaMeL First CaMeL Child ( ) != null ) { break ;
rank: 282
score: 98.91558837890625
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Id ( ) ) ) return ;
rank: 282
score: 98.90447998046875
patch: traverse ( c + 1 + 1 ) ;
rank: 282
score: 98.87642669677734
patch: if ( ! c . iterator ( ) . iterator ( ) . -- }
rank: 283
score: 99.18471854073661
patch: Node c = next = c . get CaMeL Next ( ) ;
rank: 283
score: 99.13697350543478
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next ( ) ) ; }
rank: 283
score: 99.13605291193181
patch: traverse ( c ) ; visit ( node ) ;
rank: 283
score: 99.11627197265625
patch: int n = c . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ;
rank: 283
score: 99.11304820667614
patch: if ( should CaMeL Retraverse ( c ) )
rank: 283
score: 98.91536865234374
patch: else { traverse ( c ) ; return ;
rank: 283
score: 98.90393676757813
patch: traverse ( c , ( ) node ) ;
rank: 283
score: 98.876171875
patch: try { traverse ( c ) ; } else
rank: 284
score: 99.20376586914062
patch: traverse ( ( c . get CaMeL First CaMeL Child ( ) ) . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 284
score: 99.18447580645162
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) . get CaMeL Containing CaMeL
rank: 284
score: 99.13596598307292
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , visits ) ;
rank: 284
score: 99.13556671142578
patch: traverse ( c . get CaMeL First CaMeL Child ( ) ) ; } }
rank: 284
score: 99.11269906850961
patch: if ( c . should CaMeL Retraverse ( c ) )
rank: 284
score: 99.09788682725694
patch: if ( c . get CaMeL First CaMeL Child ( ) != null ) c . }
rank: 284
score: 98.91524658203124
patch: System . err . println ( $STRING$ + c . get CaMeL Name ( ) ) ; break ;
rank: 284
score: 98.90375310724431
patch: if ( c . traverse ( c ) ) {
rank: 284
score: 98.87537384033203
patch: traverse ( 0 , c ) ;
rank: 285
score: 99.20339965820312
patch: traverse ( c , c . get CaMeL Last CaMeL Child ( ) . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 285
score: 99.1837158203125
patch: Node c = ! c . get CaMeL First CaMeL Child ( ) ;
rank: 285
score: 99.13505415482955
patch: next = parent . get CaMeL Next ( ) ;
rank: 285
score: 99.11459189967105
patch: traverse ( c ; c = c . get CaMeL First CaMeL Child ( ) ) ; }
rank: 285
score: 99.11234537760417
patch: AST n = c . get CaMeL Next ( ) ;
rank: 285
score: 98.9035285500919
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( ) ;
rank: 285
score: 98.87490665211396
patch: if ( ! c . iterator ( ) . iterator ( ) . } else {
rank: 286
score: 99.2025146484375
patch: System . out . println ( c ) ; c = c . get CaMeL First CaMeL Child ( ) ;
rank: 286
score: 99.18369954427084
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) ) ;
rank: 286
score: 99.13501694623162
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , node ) ; }
rank: 286
score: 99.1138916015625
patch: c = c . get CaMeL Last CaMeL Sibling ( ) ;
rank: 286
score: 99.11149458451705
patch: arg = c . get CaMeL Next ( ) ;
rank: 286
score: 99.09754854090073
patch: if ( node . get CaMeL First CaMeL Child ( ) != null ) break ;
rank: 286
score: 98.91469319661458
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Parent ( ) ) ;
rank: 286
score: 98.90224609375
patch: traverse ( c , c + node ) ;
rank: 287
score: 99.2024456521739
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL Parent CaMeL Node ( ) ,
rank: 287
score: 99.18352912454044
patch: traverse ( c ) ; Node c = c . get CaMeL Next ( ) ;
rank: 287
score: 99.11384887695313
patch: traverse ( c , ; c = ) ;
rank: 287
score: 99.11135031960227
patch: type = c . get CaMeL Next ( ) ;
rank: 287
score: 99.09753999255952
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) != null )
rank: 287
score: 98.91459437779018
patch: if ( ! c . is CaMeL Instance ( c ) ) ;
rank: 287
score: 98.90154622395833
patch: traverse ( c ) ; System . out . println ( c ) ;
rank: 287
score: 98.87449137369792
patch: if ( traverse ( traverse ( c ) ) ) {
rank: 288
score: 99.20181937839673
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Parent CaMeL Node ( ) ) ; }
rank: 288
score: 99.13529459635417
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next ( ) , $STRING$ ) ;
rank: 288
score: 99.13459995814732
patch: c . get CaMeL Next ( ) ; traverse ( c ) ;
rank: 288
score: 99.11373291015624
patch: traverse ( c , ; ; c = c . get CaMeL First CaMeL Child ( ) ; }
rank: 288
score: 99.11064147949219
patch: Element next = c . get CaMeL Next ( ) ; c = next ;
rank: 288
score: 99.09732491629464
patch: c = node . get CaMeL First CaMeL Child ( ) ; }
rank: 288
score: 98.91449846540179
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) break ;
rank: 288
score: 98.90144178602431
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( parent ) ;
rank: 289
score: 99.20159912109375
patch: traverse ( c , c . get ( ) ) ;
rank: 289
score: 99.18291364397321
patch: Node c = input . get CaMeL First CaMeL Child ( ) ;
rank: 289
score: 99.13516090029762
patch: if ( c . get CaMeL First CaMeL Child ( ) == null && c . get CaMeL Next CaMeL
rank: 289
score: 99.11360891241776
patch: Node n = c . get CaMeL First CaMeL Child ( ) ; traverse ( node ) ;
rank: 289
score: 99.11021592881944
patch: if ( c . get CaMeL Node ( ) . get CaMeL First CaMeL Child ( )
rank: 289
score: 98.90139770507812
patch: ) ; traverse ( c , c ) ;
rank: 289
score: 98.87438286675348
patch: if ( n != 0 ) return ;
rank: 290
score: 99.2012606534091
patch: traverse ( c , c . get CaMeL Parent ( ) . get CaMeL Last CaMeL Child ( ) ) ;
rank: 290
score: 99.13441467285156
patch: traverse ( c , c . get CaMeL Next ( ) , $STRING$ ) ;
rank: 290
score: 99.13427734375
patch: c = false ; node = c . get CaMeL Next ( ) ;
rank: 290
score: 99.11328125
patch: if ( c . get CaMeL Name ( ) . ends CaMeL With ( $STRING$ ) )
rank: 290
score: 99.10992431640625
patch: Parent c = c . get CaMeL Next ( ) ;
rank: 290
score: 99.095703125
patch: if ( should CaMeL Visit ( c ) ) {
rank: 290
score: 98.91401672363281
patch: traverse ( c ) ; n = c . get CaMeL Next ( ) ;
rank: 290
score: 98.901220703125
patch: traverse ( c ) ; c = $NUMBER$ ;
rank: 290
score: 98.87345377604167
patch: if ( c != null ) { ;
rank: 291
score: 99.20095645680146
patch: traverse ( c , c . get CaMeL Current CaMeL Node ( ) ) ; }
rank: 291
score: 99.1824951171875
patch: traverse ( node ) ; Node next = c . get CaMeL Next ( ) ;
rank: 291
score: 99.13424682617188
patch: visit ( c ) ; node = c . get CaMeL Next ( ) ;
rank: 291
score: 99.13392130533855
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c = c . get CaMeL Next ( ) ) ;
rank: 291
score: 99.11294555664062
patch: c = c . get CaMeL First CaMeL Child ( ) ; count ++ ;
rank: 291
score: 99.1084317294034
patch: template = c . get CaMeL Next ( ) ;
rank: 291
score: 99.09478469122024
patch: while ( c . get CaMeL Next ( ) ) c = c . get CaMeL Next ( ) ;
rank: 291
score: 98.91370985243056
patch: if ( node . get CaMeL Name ( ) . equals ( $STRING$ ) ) return ;
rank: 291
score: 98.9010498046875
patch: traverse ( c ) ; next ( ) ;
rank: 291
score: 98.87239379882813
patch: if ( ! != c ) { return ;
rank: 292
score: 99.20078531901042
patch: c = ( node . get CaMeL First CaMeL Child ( ) ) . get CaMeL Parent CaMeL Node ( ) ; }
rank: 292
score: 99.18247477213542
patch: Node ref = c . get CaMeL Next ( ) ;
rank: 292
score: 99.13355364118304
patch: traverse ( c . get CaMeL Next ( ) , parent ) ;
rank: 292
score: 99.13331139605978
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) ,
rank: 292
score: 99.11157904730902
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( c . ;
rank: 292
score: 99.09177652994792
patch: c = c . get CaMeL Next ( ) ; ;
rank: 292
score: 98.9133056640625
patch: System . out . println ( $STRING$ + c . get CaMeL Name ( ) ) ; break ;
rank: 292
score: 98.9010498046875
patch: traverse ( c , node ) ; continue ;
rank: 292
score: 98.87205153245192
patch: traverse ( c != null || traverse ( c ) ) ;
rank: 293
score: 99.20050518329327
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ) ;
rank: 293
score: 99.18239232113487
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) instanceof
rank: 293
score: 99.1112060546875
patch: c = c . ; } traverse ( c ) ;
rank: 293
score: 99.10710144042969
patch: traverse ( visits < c . get CaMeL First CaMeL Child ( ) ) ;
rank: 293
score: 99.09150834517045
patch: c = c . get CaMeL Root ( ) ;
rank: 293
score: 98.91329390914352
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Id ( ) ) ; }
rank: 293
score: 98.90076793323864
patch: traverse ( c ) ; traverse ( parent ) ;
rank: 294
score: 99.2003885904948
patch: traverse ( c . get CaMeL Child CaMeL Count ( ) , c . get CaMeL Child CaMeL Count ( ) ) ;
rank: 294
score: 99.133056640625
patch: cached = c . get CaMeL Next ( ) ;
rank: 294
score: 99.11089728860294
patch: if ( c == node . get CaMeL First CaMeL Child ( ) ) continue ;
rank: 294
score: 99.10638897235577
patch: owner = c . get CaMeL First CaMeL Child ( ) ;
rank: 294
score: 99.0909912109375
patch: traverse ( list . get CaMeL First CaMeL Child ( c ) ) ;
rank: 294
score: 98.91291155133929
patch: while ( ! c . is CaMeL Empty ( ) ) return ;
rank: 294
score: 98.9002734375
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL First CaMeL Child ( ) ;
rank: 294
score: 98.87125651041667
patch: if ( ! != n ) traverse ( c ) ;
rank: 295
score: 99.18199055989584
patch: Node next = ! c . get CaMeL First CaMeL Child ( ) ;
rank: 295
score: 99.13273402622768
patch: try { c = c . get CaMeL Next ( ) ; }
rank: 295
score: 99.10919189453125
patch: node = c . get CaMeL Parent CaMeL Node ( ) ; }
rank: 295
score: 99.10634940011161
patch: if ( c . should CaMeL Retraverse ( node ) ) {
rank: 295
score: 98.91190592447917
patch: traverse ( ! node . get CaMeL Parent ( ) . equals ( c ) ) ;
rank: 295
score: 98.87001953125
patch: if ( c != c ) { return ;
rank: 296
score: 99.200107421875
patch: traverse ( ) ; c = c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 296
score: 99.18197970920139
patch: if ( c . get CaMeL First CaMeL Child ( ) != null ) visits ++ ;
rank: 296
score: 99.132197265625
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL Next CaMeL
rank: 296
score: 99.10885620117188
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( )
rank: 296
score: 99.10606625205592
patch: type = c . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) ;
rank: 296
score: 99.0901211825284
patch: c = node . get CaMeL Parent ( ) ;
rank: 296
score: 98.9119011374081
patch: if ( ! c . is CaMeL Empty ( ) ) { return ; } }
rank: 296
score: 98.89998372395833
patch: traverse ( c , true ) ; c = c ;
rank: 296
score: 98.87001953125
patch: if ( c == null ) ; return ;
rank: 297
score: 99.19974190848214
patch: int index = c . get CaMeL First CaMeL Child ( ) . index CaMeL Of ( $STRING$ ) ;
rank: 297
score: 99.13235037667411
patch: traverse ( parent , node . get CaMeL Next ( ) ) ;
rank: 297
score: 99.13198416573661
patch: Node next = n . get CaMeL Next ( ) ; break ;
rank: 297
score: 99.10596720377605
patch: tree . get CaMeL First CaMeL Child ( c ) ;
rank: 297
score: 99.08982631138393
patch: Node c = c . get CaMeL Next ( ) ; try {
rank: 297
score: 98.91141941236413
patch: if ( node . get CaMeL Name ( ) . equals ( node . get CaMeL Name ( ) ) ) {
rank: 297
score: 98.86989339192708
patch: if ( node != null ) traverse ( c ) ;
rank: 298
score: 99.19967651367188
patch: c = ; c = c . get CaMeL First CaMeL Child ( ) ;
rank: 298
score: 99.13187902113971
patch: traverse ( node , c . get CaMeL First CaMeL Child ( ) ) ; }
rank: 298
score: 99.13174040421195
patch: c = c . get CaMeL Next ( ) ; c = c . get CaMeL First CaMeL Child ( ) ;
rank: 298
score: 99.1077880859375
patch: Node c = c . get CaMeL Parent CaMeL Node ( ) ; traverse ( c ) ;
rank: 298
score: 99.10589599609375
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( )
rank: 298
score: 99.08966936383929
patch: if ( node . get CaMeL First CaMeL Child ( ) != null ) { traverse ( c ) ;
rank: 298
score: 98.91110755657327
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Type CaMeL Name ( ) ) ) {
rank: 298
score: 98.89943625710227
patch: if ( c ; traverse ( c ) ) {
rank: 298
score: 98.86977132161458
patch: if ( ! c . null ( c ) ) {
rank: 299
score: 99.19955078125
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL Root CaMeL Node ( ) ) ; }
rank: 299
score: 99.10752766927084
patch: Node c = c . get CaMeL First CaMeL Child ( ) ; )
rank: 299
score: 99.10585021972656
patch: while ( c != null ) {
rank: 299
score: 99.08912295386905
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 299
score: 98.91094292534723
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals ( $STRING$ ) )
rank: 299
score: 98.8695576985677
patch: if ( c != null ) traverse ( n ) ;
rank: 300
score: 99.1980224609375
patch: traverse ( c . ; c = c . get CaMeL First CaMeL Child ( ) ) ; }
rank: 300
score: 99.13121032714844
patch: Node next : c . get CaMeL Next ( ) ; c = next ;
rank: 300
score: 99.13117133246527
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , node , true ) ;
rank: 300
score: 99.10752240349265
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( c )
rank: 300
score: 99.10552978515625
patch: int c = c . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) ;
rank: 300
score: 98.91054280598958
patch: traverse ( c ) ; parent = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 300
score: 98.89901572779605
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( c ) ; ;
rank: 301
score: 99.130859375
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , c . get CaMeL
rank: 301
score: 99.1051776592548
patch: element = c . get CaMeL First CaMeL Child ( ) ;
rank: 301
score: 99.08690728081598
patch: if ( c . get CaMeL First CaMeL Child ( ) . next != null ) {
rank: 301
score: 98.91049630301339
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Class CaMeL Name ( ) ) )
rank: 301
score: 98.89844689002403
patch: traverse ( c , c ) ; c ( c ) ;
rank: 301
score: 98.86864624023437
patch: if ( c != null ) c ++ ;
rank: 302
score: 99.19765111019737
patch: traverse ( c . ; c = c . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 302
score: 99.17839704241071
patch: Node c = source . get CaMeL First CaMeL Child ( ) ;
rank: 302
score: 99.1306640625
patch: next = c != null && c . get CaMeL Next ( ) ;
rank: 302
score: 99.12965393066406
patch: traverse ( c , c . get CaMeL Next ( ) , true ) ;
rank: 302
score: 99.10727945963542
patch: if ( node . get CaMeL First CaMeL Child ( ) . equals ( c ) )
rank: 302
score: 99.10512131911058
patch: if ( c . get CaMeL Parent ( ) != null )
rank: 302
score: 98.91033063616071
patch: if ( ! c . is CaMeL Local ( ) ) return ;
rank: 302
score: 98.89753941127232
patch: traverse ( c ) ; traverse ( traverse ( c ) ) ;
rank: 302
score: 98.86817169189453
patch: traverse ( 1 , c ) ;
rank: 303
score: 99.1975430575284
patch: c = c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 303
score: 99.17813270970395
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) !=
rank: 303
score: 99.13053385416667
patch: c = 0 ; c = c . get CaMeL Next ( ) ;
rank: 303
score: 99.12821628736413
patch: c = c . get CaMeL Next ( ) ; c = node . get CaMeL First CaMeL Child ( ) ;
rank: 303
score: 99.10723586309524
patch: node . traverse ( c ) ; c = c . get CaMeL First CaMeL Child ( ) ; }
rank: 303
score: 99.10496937144886
patch: se = c . get CaMeL Next ( ) ;
rank: 303
score: 99.08654174804687
patch: if ( ! c . get CaMeL First CaMeL Child ( ) . has CaMeL Next ( ) )
rank: 303
score: 98.9102783203125
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) return ;
rank: 303
score: 98.8973055752841
patch: traverse ( null ) ; traverse ( c ) ;
rank: 304
score: 99.197265625
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) ) ; break ;
rank: 304
score: 99.13046061197916
patch: c = node . get CaMeL Next ( ) ; c = c ;
rank: 304
score: 99.12812943892045
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) , c ) ;
rank: 304
score: 99.10494995117188
patch: Nodes next = c . get CaMeL Next ( ) ;
rank: 304
score: 98.91010877821181
patch: } else { traverse ( c ) ;
rank: 304
score: 98.8971435546875
patch: traverse ( c ) ; c = parent ;
rank: 304
score: 98.86767578125
patch: if ( ! != c ) ; traverse ( c ) ;
rank: 305
score: 99.19723074776786
patch: traverse ( c . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) ) ; }
rank: 305
score: 99.130126953125
patch: Node c = node . get CaMeL Next ( ) ; c = next ;
rank: 305
score: 99.1279525756836
patch: traverse ( c , c . get CaMeL Next ( ) , null ) ;
rank: 305
score: 99.10481262207031
patch: Object next = c . get CaMeL Next ( ) ; c = next ;
rank: 305
score: 99.08641706194196
patch: visits = c . get CaMeL First CaMeL Child ( ) ; }
rank: 305
score: 98.90998670789931
patch: if ( ! c . get CaMeL State ( ) . is CaMeL Empty ( ) )
rank: 305
score: 98.8970947265625
patch: try { try { traverse ( c ) ;
rank: 305
score: 98.86761474609375
patch: if ( ! != c ) return ;
rank: 306
score: 99.196904296875
patch: traverse ( ; c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 306
score: 99.17694646661931
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , next . get CaMeL Next ( ) ) ;
rank: 306
score: 99.13001251220703
patch: next = c . get CaMeL Next ( ) ; visit ( c ) ;
rank: 306
score: 99.10685729980469
patch: c = c . get CaMeL Last CaMeL Sibling ( ) ; break ; }
rank: 306
score: 99.10471413352273
patch: block = c . get CaMeL Next ( ) ;
rank: 306
score: 98.90996442522321
patch: if ( ! c . is CaMeL Empty ( ) ) ; ;
rank: 306
score: 98.89689636230469
patch: traverse ( get CaMeL Node ( c ) ) ; traverse ( c ) ;
rank: 306
score: 98.86732700892857
patch: if ( c != null ) traverse ( c , c ) ;
rank: 307
score: 99.19688063401442
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL Parent CaMeL Node ( ) ) ; break ;
rank: 307
score: 99.17647611177884
patch: return ; c = c . get CaMeL Next ( ) ;
rank: 307
score: 99.12968444824219
patch: visit ( node ) ; c = c . get CaMeL Next ( ) ;
rank: 307
score: 99.10685424804687
patch: traverse ( c , c ) ; * /
rank: 307
score: 99.10459391276042
patch: i = c . get CaMeL Next ( ) ; }
rank: 307
score: 99.08560035342262
patch: if ( next = c . get CaMeL Next ( ) ) c . get CaMeL Next ( ) ;
rank: 307
score: 98.90989176432292
patch: throw new Runtime CaMeL Exception ( c . get CaMeL Name ( ) , c . get CaMeL Name ( ) ) ;
rank: 307
score: 98.8965576171875
patch: traverse ( c + c + 1 ) ;
rank: 307
score: 98.8669903094952
patch: if ( c != ) { traverse ( c ) ; }
rank: 308
score: 99.19684392755681
patch: traverse ( c . get CaMeL Parent ( ) , c . get CaMeL Current CaMeL Node ( ) ) ;
rank: 308
score: 99.1763556985294
patch: traverse ( c . get CaMeL First CaMeL Child ( ) ) ; return ; }
rank: 308
score: 99.12892150878906
patch: Node node = c . get CaMeL Next ( ) ; c = next ;
rank: 308
score: 99.12634808084239
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next next ( ) ) ;
rank: 308
score: 99.10450846354166
patch: n = c . get CaMeL Next ( ) ; c = next ;
rank: 308
score: 99.08558349609375
patch: c = c . get CaMeL Next ( ) . get CaMeL First CaMeL Child ( ) ; }
rank: 308
score: 98.86549682617188
patch: if ( n ) traverse ( c ) ;
rank: 309
score: 99.19677734375
patch: traverse ( ) ; c = c . get CaMeL Parent CaMeL Node ( ) ; }
rank: 309
score: 99.12852260044643
patch: traverse ( . get CaMeL First CaMeL Child ( c ) ) ;
rank: 309
score: 99.10648890904018
patch: c = c . get CaMeL Last CaMeL Sibling ( ) ; }
rank: 309
score: 99.10447184244792
patch: result = c . get CaMeL Next ( ) ; }
rank: 309
score: 98.90908377511161
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) continue ;
rank: 309
score: 98.86514047475961
patch: if ( 1 != c ) { traverse ( c ) ;
rank: 310
score: 99.12808663504464
patch: traverse ( parent . get CaMeL Next ( ) , c ) ;
rank: 310
score: 99.12594604492188
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , parent ) ;
rank: 310
score: 99.10614568536931
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( )
rank: 310
score: 99.10426025390625
patch: if ( c . get CaMeL Last CaMeL Child ( ) . get CaMeL First CaMeL Child ( )
rank: 310
score: 99.0844959077381
patch: c = c . get CaMeL Parent ( ) ; c = c . get CaMeL Next ( ) ;
rank: 310
score: 98.9085109544837
patch: if ( ! node . get CaMeL Name ( ) . equals ( node . get CaMeL Name ( ) ) )
rank: 310
score: 98.89521135602679
patch: traverse ( c ) ; c = c . current ( ) ;
rank: 310
score: 98.86471557617188
patch: if ( parent != null ) traverse ( c ) ;
rank: 311
score: 99.1268539428711
patch: c = c . get CaMeL Next ( ) ; c = next ; }
rank: 311
score: 99.12588500976562
patch: return node . get CaMeL First CaMeL Child ( ) ;
rank: 311
score: 99.1059634560033
patch: c = c . get CaMeL Parent CaMeL Node ( ) ; if ( c != null )
rank: 311
score: 99.1022590188419
patch: if ( c . get CaMeL First CaMeL Child ( ) == c . get CaMeL
rank: 311
score: 99.08409208409927
patch: if ( c . get CaMeL First CaMeL Child ( ) != null ) { {
rank: 311
score: 98.90776715959821
patch: while ( ! c . is CaMeL Empty ( ) ) ; }
rank: 311
score: 98.8951416015625
patch: traverse ( parent ) ; traverse ( c ) ;
rank: 311
score: 98.86436971028645
patch: traverse ( c == ) ; traverse ( c ) ;
rank: 312
score: 99.19549560546875
patch: c = ( Node ) c . get CaMeL Parent CaMeL Node ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 312
score: 99.12643667367789
patch: traverse ( ! c . get CaMeL Next ( ) ) ;
rank: 312
score: 99.12534586588542
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , type ) ;
rank: 312
score: 99.10224260602679
patch: result = c . get CaMeL First CaMeL Child ( ) ; }
rank: 312
score: 98.89447699652777
patch: traverse ( c , c , ) ;
rank: 312
score: 98.86390269886364
patch: if ( c != traverse ( c ) ) {
rank: 313
score: 99.1954833984375
patch: traverse ( ; c . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 313
score: 99.17330932617188
patch: if ( c . get CaMeL First CaMeL Child ( ) != null && c . get CaMeL First CaMeL Child ( )
rank: 313
score: 99.12593347886029
patch: traverse ( c , parent . get CaMeL First CaMeL Child ( ) ) ; }
rank: 313
score: 99.10484008789062
patch: node . traverse ( c ) ; c = c . get CaMeL First CaMeL Child ( ) ;
rank: 313
score: 99.10218003216912
patch: return c . get CaMeL First CaMeL Child ( ) ; traverse ( c ) ;
rank: 313
score: 99.0835693359375
patch: if ( ! node . get CaMeL First CaMeL Child ( ) . has CaMeL Child ( ) )
rank: 313
score: 98.9066631610577
patch: if ( c instanceof ) . traverse ( c ) ; }
rank: 313
score: 98.86323377821181
patch: if ( n != null ) { public
rank: 314
score: 99.19546169704861
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 314
score: 99.1728515625
patch: Node c = ( Node ) node . get CaMeL First CaMeL Child ( ) ;
rank: 314
score: 99.12588704427084
patch: c = parent . get CaMeL Next ( ) ; c = next ;
rank: 314
score: 99.10450439453125
patch: if ( c == node . get CaMeL First CaMeL Child ( ) ) traverse ( c ) ;
rank: 314
score: 99.10205078125
patch: Element node = c . get CaMeL Next ( ) ;
rank: 314
score: 99.08298068576389
patch: traverse ( next ( c ) ) ;
rank: 314
score: 98.9058837890625
patch: throw new Runtime CaMeL Exception ( c . get CaMeL Name ( ) , c . get CaMeL Id ( ) ) ;
rank: 314
score: 98.89315456814236
patch: traverse ( traverse ( node ) ) ;
rank: 314
score: 98.86312161959134
patch: if ( null != c ) { traverse ( c ) ;
rank: 315
score: 99.1954345703125
patch: traverse ( c , c . get CaMeL Name ( ) ) ;
rank: 315
score: 99.12556726792279
patch: c . get CaMeL First CaMeL Child ( ) . add ( c ) ; }
rank: 315
score: 99.12457596628289
patch: c = c . get CaMeL Next ( ) . get CaMeL Next ( ) ; break ;
rank: 315
score: 99.10407850477431
patch: if ( c ; ; c = c . get CaMeL First CaMeL Child ( ) )
rank: 315
score: 99.1005350748698
patch: Doc c = c . get CaMeL Next ( ) ;
rank: 315
score: 98.90571925951087
patch: if ( ! c . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) return ;
rank: 315
score: 98.89286499023437
patch: traverse ( c + 0 + 0 ) ;
rank: 315
score: 98.86282958984376
patch: if ( traverse ( c ) ) { ;
rank: 316
score: 99.19520920973558
patch: traverse ( c . get CaMeL Parent ( ) ) ; }
rank: 316
score: 99.17261529737904
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) . get CaMeL Containing CaMeL
rank: 316
score: 99.12543131510417
patch: c = c , next = c . get CaMeL Next ( ) ;
rank: 316
score: 99.12457275390625
patch: Node n = n . get CaMeL Next ( ) ;
rank: 316
score: 99.10049599095395
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) !=
rank: 316
score: 99.08226860894098
patch: if ( node . get CaMeL First CaMeL Child ( ) != null ) { return ;
rank: 316
score: 98.89286499023437
patch: traverse ( ) ; traverse ( node ) ;
rank: 316
score: 98.86196001838235
patch: if ( ! c . iterator ( ) . iterator ( ) . ++ ) {
rank: 317
score: 99.1951904296875
patch: if ( c . ; c = c . get CaMeL Parent CaMeL Node ( ) )
rank: 317
score: 99.12523396809895
patch: c = c . get CaMeL Next ( ) ) ;
rank: 317
score: 99.10041639539931
patch: if ( c . get CaMeL Next ( ) . get CaMeL First CaMeL Child ( )
rank: 317
score: 98.90548140914352
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Id ( ) ) ) ;
rank: 317
score: 98.86183675130208
patch: if ( n == 0 ) traverse ( c ) ;
rank: 318
score: 99.1950390625
patch: traverse ( c . get CaMeL Root CaMeL Node ( ) , c . get CaMeL Root CaMeL Node ( ) ) ; }
rank: 318
score: 99.1714336688702
patch: Node c = ! c . get CaMeL Next ( ) ;
rank: 318
score: 99.12510329026442
patch: c = next . get CaMeL First CaMeL Child ( ) ;
rank: 318
score: 99.1039151278409
patch: traverse ( c , node . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) ) ;
rank: 318
score: 99.1000467936198
patch: Parent next = c . get CaMeL Next ( ) ;
rank: 318
score: 98.90538369455645
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Class CaMeL Name ( ) ) ) {
rank: 318
score: 98.892578125
patch: traverse ( c , c ) ; c -- ;
rank: 318
score: 98.86170450846355
patch: if ( ! traverse ( n ) ) { return ;
rank: 319
score: 99.171416015625
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) . get CaMeL Node ( ) instanceof
rank: 319
score: 99.12406412760417
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next ( ) , null ) ;
rank: 319
score: 99.10376790364583
patch: traverse ( c , ; c . get CaMeL Parent ( ) ) ;
rank: 319
score: 99.09996619591347
patch: this . node = c . get CaMeL Next ( ) ;
rank: 319
score: 99.08197985197368
patch: if ( c . get CaMeL First CaMeL Child ( ) != null && c . get CaMeL
rank: 319
score: 98.89247131347656
patch: traverse ( c , $STRING$ ) ;
rank: 319
score: 98.86141967773438
patch: if ( ! != ) { traverse ( c ) ;
rank: 320
score: 99.19497680664062
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Child CaMeL Count ( ) ) ;
rank: 320
score: 99.12372589111328
patch: traverse ( false ) ; c = c . get CaMeL Next ( ) ;
rank: 320
score: 99.10322651110198
patch: Node c = c . get CaMeL Last CaMeL Child ( ) ; traverse ( c ) ;
rank: 320
score: 99.0984748391544
patch: if ( c . get CaMeL First CaMeL Child ( ) ( c . get CaMeL
rank: 320
score: 98.90505746694711
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( n . get CaMeL Id ( ) ) )
rank: 320
score: 98.86116536458333
patch: if ( c == ) { return ;
rank: 321
score: 99.19490269252232
patch: traverse ( c . get CaMeL Current CaMeL Node ( ) ) ;
rank: 321
score: 99.12353515625
patch: traverse ( c . get CaMeL Next ( ) ) ; break ;
rank: 321
score: 99.12329819623162
patch: Node next = c . get CaMeL Next ( ) ; traverse ( node ) ;
rank: 321
score: 99.102294921875
patch: traverse ( c , n , true ) ;
rank: 321
score: 99.0984598795573
patch: Type next = c . get CaMeL Next ( ) ;
rank: 321
score: 99.08113367417279
patch: if ( node . get CaMeL First CaMeL Child ( ) != null ) continue ;
rank: 321
score: 98.9049656080163
patch: if ( node . get CaMeL Name ( ) . equals ( c . get CaMeL Name ( ) ) ) {
rank: 321
score: 98.85997596153847
patch: if ( c == 1 ) { traverse ( c ) ;
rank: 322
score: 99.19443147078805
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) . get CaMeL First CaMeL Child ( ) ) ; }
rank: 322
score: 99.17125202047414
patch: if ( node . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) instanceof
rank: 322
score: 99.10195025275735
patch: c = c . get CaMeL First CaMeL Child ( ) ; } } finally {
rank: 322
score: 99.09719016335227
patch: iv = c . get CaMeL Next ( ) ;
rank: 322
score: 99.0810302734375
patch: while ( node . get CaMeL First CaMeL Child ( ) != null )
rank: 322
score: 98.85902622767857
patch: traverse ( c != ) ;
rank: 323
score: 99.1942138671875
patch: traverse ( ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 323
score: 99.17118326822917
patch: Node next = c . get CaMeL Node ( ) ;
rank: 323
score: 99.12330979567308
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) , $STRING$ ) ;
rank: 323
score: 99.12168532151442
patch: c = type . get CaMeL First CaMeL Child ( ) ;
rank: 323
score: 99.1018928079044
patch: traverse ( c , node . get CaMeL First CaMeL Child ( ) ) ; ;
rank: 323
score: 99.08055284288194
patch: if ( c . get CaMeL First CaMeL Child ( ) != null ) { for (
rank: 323
score: 98.90462593410327
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Name ( ) ;
rank: 323
score: 98.89122314453125
patch: traverse ( node , c ) ; return ;
rank: 323
score: 98.85800405649039
patch: try { traverse ( c , traverse ( c ) ) ;
rank: 324
score: 99.19414813701923
patch: traverse ( ( c . get CaMeL First CaMeL Child ( ) ) , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 324
score: 99.17073974609374
patch: if ( c . get CaMeL First CaMeL Child ( ) != null ) traverse ( c ) ;
rank: 324
score: 99.12281383167614
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) , n ) ;
rank: 324
score: 99.10184326171876
patch: Node n = c . get CaMeL First CaMeL Child ( ) ; if ( n != null )
rank: 324
score: 99.09628295898438
patch: if ( c . get CaMeL First CaMeL Child ( ) == node ) {
rank: 324
score: 99.08055204503677
patch: if ( node . get CaMeL First CaMeL Child ( ) != null ) { }
rank: 324
score: 98.90352957589286
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( name ) ) {
rank: 324
score: 98.8908935546875
patch: traverse ( c + $STRING$ , node ) ;
rank: 324
score: 98.85795454545455
patch: traverse ( c ) ; ; c = c ;
rank: 325
score: 99.17068820529514
patch: Node c = next ( c ) ;
rank: 325
score: 99.12254920372597
patch: Node next = c . get CaMeL Next ( ) ; }
rank: 325
score: 99.1015957919034
patch: if ( c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) != )
rank: 325
score: 98.90322043678977
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c ) ) return ;
rank: 325
score: 98.88965953480114
patch: traverse ( c && traverse ( node ) ) ;
rank: 325
score: 98.85778090533088
patch: if ( ! c . get CaMeL Node ( ) . length ( ) ) {
rank: 326
score: 99.19395955403645
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) , n ) ;
rank: 326
score: 99.170361328125
patch: return ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) ) ;
rank: 326
score: 99.12250225360577
patch: c = next = n . get CaMeL Next ( ) ;
rank: 326
score: 99.12106759207589
patch: traverse ( node , node . get CaMeL Parent ( ) ) ;
rank: 326
score: 99.10094105113636
patch: traverse ( c , ; c . ; c = c . get CaMeL First CaMeL Child ( ) ; }
rank: 326
score: 99.0960922241211
patch: traverse ( c && node . get CaMeL First CaMeL Child ( ) ) ;
rank: 326
score: 98.90310489430146
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Name ( ) ;
rank: 326
score: 98.889208984375
patch: traverse ( c , true ) ; break ;
rank: 326
score: 98.85633850097656
patch: traverse ( c != 0 ) ;
rank: 327
score: 99.19368286132813
patch: if ( c . get CaMeL Type CaMeL Name ( ) . starts CaMeL With ( $STRING$ ) )
rank: 327
score: 99.16983468191964
patch: Node name = c . get CaMeL First CaMeL Child ( ) ;
rank: 327
score: 99.10046997070313
patch: if ( c . ; c = c . get CaMeL First CaMeL Child ( ) ) break ;
rank: 327
score: 99.09487915039062
patch: Block next = c . get CaMeL Next ( ) ;
rank: 327
score: 99.07994384765625
patch: c = c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ; }
rank: 327
score: 98.90303178267045
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) break ;
rank: 327
score: 98.88900553385416
patch: traverse ( c , node ) ; out . traverse ( c ) ;
rank: 328
score: 99.19352722167969
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , this ) ;
rank: 328
score: 99.16955987338362
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Node = c . get CaMeL First CaMeL Child ( ) . get CaMeL
rank: 328
score: 99.12116156684027
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , node , false ) ;
rank: 328
score: 99.11963907877605
patch: next ( c . get CaMeL Next ( ) ) ;
rank: 328
score: 99.09483506944444
patch: traverse ( c != null && c . get CaMeL First CaMeL Child ( ) ) ;
rank: 328
score: 99.07972935267857
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) != null )
rank: 328
score: 98.90288628472223
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( node . get CaMeL Name ( ) ) ) {
rank: 328
score: 98.8887939453125
patch: traverse ( node , c , c ) ;
rank: 328
score: 98.85521351207386
patch: check ( c ) ; traverse ( c ) ;
rank: 329
score: 99.19329155815973
patch: traverse ( c ) ; n = c . get CaMeL Last CaMeL Child ( ) ;
rank: 329
score: 99.16942342122395
patch: Node current = c . get CaMeL Next ( ) ;
rank: 329
score: 99.121025390625
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL Next CaMeL
rank: 329
score: 99.11860926011029
patch: c . next = c . get CaMeL Next ( ) ; c = next ;
rank: 329
score: 99.09926932198661
patch: l = c . get CaMeL First CaMeL Child ( ) ; }
rank: 329
score: 99.09387925091912
patch: if ( c . get CaMeL First CaMeL Child ( ) != null && c .
rank: 329
score: 99.07927594866071
patch: if ( node . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 329
score: 98.90285237630208
patch: c = c . get CaMeL Parent ( ) ) ;
rank: 329
score: 98.88865966796875
patch: traverse ( c + $STRING$ , c ) ;
rank: 329
score: 98.85431780133929
patch: if ( ! c . traverse ( c ) ) { return ;
rank: 330
score: 99.19313557942708
patch: int n = c . get CaMeL First CaMeL Child ( ) . length ( ) ;
rank: 330
score: 99.16930213341347
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) . get CaMeL Node ( ) ) ;
rank: 330
score: 99.12094948508523
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) , $STRING$ ) ;
rank: 330
score: 99.1185302734375
patch: c = c . get CaMeL Next ( ) ; traverse ( c ) ; }
rank: 330
score: 99.09922388980263
patch: traverse ( c , ; c = c . get CaMeL Parent CaMeL Node ( ) ; }
rank: 330
score: 98.90284729003906
patch: if ( c == null && ! c . is CaMeL Empty ( ) )
rank: 330
score: 98.88837224786931
patch: traverse ( c ) ; if ( true ) {
rank: 330
score: 98.854248046875
patch: add ( c ) ;
rank: 331
score: 99.11805943080357
patch: c = c . get CaMeL Next ( ) ; return c ;
rank: 331
score: 99.09901258680556
patch: traverse ( c , ; c = c . get CaMeL Parent ( ) ) ; }
rank: 331
score: 99.09366861979167
patch: AST node = c . get CaMeL Next ( ) ;
rank: 331
score: 98.90204535590277
patch: if ( ! node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Id ( ) ) )
rank: 331
score: 98.88786485460069
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( false ) ;
rank: 331
score: 98.85392622514205
patch: if ( c != null ) { ) return ;
rank: 332
score: 99.16905628551136
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , next . get CaMeL Node ( ) ) ;
rank: 332
score: 99.11795806884766
patch: traverse ( c ) ; next = node . get CaMeL Next ( ) ;
rank: 332
score: 99.09893120659723
patch: traverse ( c , false ) ; ;
rank: 332
score: 99.07721502130681
patch: return = c . get CaMeL Next ( ) ;
rank: 332
score: 98.90152681790866
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Type CaMeL Name ( ) ) ;
rank: 332
score: 98.88712768554687
patch: traverse ( c , false ) ; return ;
rank: 332
score: 98.8535907451923
patch: if ( ! c . length ( ) != 1 ) {
rank: 333
score: 99.19240159254808
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Last CaMeL Child ( ) , true ) ;
rank: 333
score: 99.16863654641544
patch: Node next = ( Node ) node . get CaMeL First CaMeL Child ( ) ;
rank: 333
score: 99.12023053850446
patch: traverse ( list , c . get CaMeL Next ( ) ) ;
rank: 333
score: 99.11789376395089
patch: c . add ( c . get CaMeL Next ( ) ) ;
rank: 333
score: 99.09357653166118
patch: if ( c . get CaMeL Next ( ) . get CaMeL First CaMeL Child ( ) )
rank: 333
score: 99.07684647409539
patch: if ( c != null && c . get CaMeL First CaMeL Child ( ) . get CaMeL
rank: 333
score: 98.90151832217262
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( id ) ) {
rank: 333
score: 98.88657448508523
patch: traverse ( c ) ; next ( c ) ;
rank: 333
score: 98.85320575420673
patch: if ( c instanceof Node ) { traverse ( c ) ;
rank: 334
score: 99.19192708333334
patch: traverse ( ; c . get CaMeL First CaMeL Child ( ) ) ;
rank: 334
score: 99.12003950639205
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) , null ) ;
rank: 334
score: 99.11786295572917
patch: c = c . get CaMeL Next ( ) ; next = next ;
rank: 334
score: 99.09847005208333
patch: traverse ( c , ; node . get CaMeL First CaMeL Child ( ) ) ; }
rank: 334
score: 99.09357096354167
patch: if ( c . get CaMeL First CaMeL Child ( ) instanceof Node )
rank: 334
score: 99.07684326171875
patch: while ( c . get CaMeL First CaMeL Child ( ) != null ) { return ;
rank: 334
score: 98.90111541748047
patch: traverse ( c ) ; type = c . get CaMeL Name ( ) ;
rank: 334
score: 98.88644409179688
patch: traverse ( type , c ) ;
rank: 334
score: 98.85196940104167
patch: synchronized ( c ) { traverse ( c ) ; }
rank: 335
score: 99.19190809461806
patch: traverse ( c , c , c . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 335
score: 99.11986432756696
patch: Node c = node . get CaMeL Next ( ) ; for (
rank: 335
score: 99.11693464006696
patch: c = node . get CaMeL Next ( ) ; visits ++ ;
rank: 335
score: 99.09823843149039
patch: n = c . get CaMeL Last CaMeL Child ( ) ;
rank: 335
score: 99.093505859375
patch: if ( c . equals ( node . get CaMeL First CaMeL Child ( ) ) ) {
rank: 335
score: 99.076806640625
patch: if ( ! node . get CaMeL First CaMeL Child ( ) . equals ( null ) ) {
rank: 335
score: 98.90091745476974
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class CaMeL Name ( ) ;
rank: 335
score: 98.88641357421875
patch: traverse ( c , false , node ) ;
rank: 335
score: 98.85107421875
patch: traverse ( c ) ; c else {
rank: 336
score: 99.1917578125
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL Parent CaMeL Node ( ) ) ; ;
rank: 336
score: 99.168115234375
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) . get CaMeL Node ( ) instanceof
rank: 336
score: 99.1198501586914
patch: traverse ( c , c . get CaMeL Next ( ) , node ) ;
rank: 336
score: 99.11664690290179
patch: traverse ( c , parent . get CaMeL Parent ( ) ) ;
rank: 336
score: 99.09785600142045
patch: traverse ( c , c ) ; return ; }
rank: 336
score: 99.09285278320313
patch: int c = c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ;
rank: 336
score: 98.90085856119792
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Parent ( ) . get CaMeL Id ( ) ) ;
rank: 336
score: 98.88592059795673
patch: traverse ( c ) ; c = c . node ) ;
rank: 337
score: 99.19137573242188
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) , true ) ;
rank: 337
score: 99.16751901726974
patch: if ( c . get CaMeL First CaMeL Child ( ) != null ) { visits ++ ;
rank: 337
score: 99.11968439275569
patch: traverse ( c . get CaMeL Next ( ) . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 337
score: 99.1162971047794
patch: Node next = c . get CaMeL Next ( ) ; visit ( c ) ;
rank: 337
score: 99.09657389322916
patch: traverse ( c , ; c = c . get ( ) ) ;
rank: 337
score: 99.09279087611607
patch: return { c . get CaMeL First CaMeL Child ( ) ; }
rank: 337
score: 99.07573852539062
patch: if ( ! node . get CaMeL First CaMeL Child ( ) . is CaMeL All ( ) )
rank: 337
score: 98.90064832899306
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL State ( ) ) ;
rank: 337
score: 98.88589680989584
patch: traverse ( c , c . node ) ; traverse ( c ) ;
rank: 337
score: 98.8504638671875
patch: if ( c != null ) traverse ( c . c ) ;
rank: 338
score: 99.19122869318181
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) . to CaMeL String ( ) ) ;
rank: 338
score: 99.16724650065105
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , null ) ;
rank: 338
score: 99.11542107077206
patch: c = c . get CaMeL Next ( ) ; while ( c != null )
rank: 338
score: 99.09653930664062
patch: traverse ( c , ; c ++ ) ;
rank: 338
score: 99.092529296875
patch: int n = c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ;
rank: 338
score: 98.90057373046875
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Parent ( ) . get CaMeL Name ( ) ) ;
rank: 338
score: 98.88585662841797
patch: c = c . get CaMeL Parent ( ) ; traverse ( node ) ;
rank: 338
score: 98.84990776909723
patch: if ( c == c ) { public
rank: 339
score: 99.19103551793981
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Last CaMeL Child ( ) ) ; }
rank: 339
score: 99.16657366071429
patch: Node key = c . get CaMeL First CaMeL Child ( ) ;
rank: 339
score: 99.11506204044117
patch: c = c . get CaMeL Next ( ) ; c = next ( ) ;
rank: 339
score: 99.09607872596153
patch: traverse ( c ) ; c = c . ) ; }
rank: 339
score: 99.09249267578124
patch: if ( c . get CaMeL Parent CaMeL Node ( ) . get CaMeL First CaMeL Child ( )
rank: 339
score: 98.89969675164474
patch: traverse ( c ) ; } c = c . get CaMeL First CaMeL Child ( ) ;
rank: 339
score: 98.88581678602431
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( type ) ;
rank: 339
score: 98.84933132595486
patch: return ; } traverse ( c ) ;
rank: 340
score: 99.1907894736842
patch: traverse ( c ) ; c = node . get CaMeL First CaMeL Child ( ) ; }
rank: 340
score: 99.09237850413604
patch: if ( c . node . get CaMeL First CaMeL Child ( ) != null )
rank: 340
score: 99.07505580357143
patch: try { Node node = c . get CaMeL Next ( ) ;
rank: 340
score: 98.89954969618056
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Class CaMeL Name ( ) ) ; }
rank: 340
score: 98.88550415039063
patch: c = null ; traverse ( c ) ;
rank: 340
score: 98.84843226841518
patch: try { c = c ;
rank: 341
score: 99.190673828125
patch: traverse ( c , c . get CaMeL Full CaMeL Name ( ) ) ;
rank: 341
score: 99.1662365141369
patch: c = ref . get CaMeL Next ( ) ; c = c . get CaMeL Next ( ) ;
rank: 341
score: 99.117392578125
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) . get CaMeL
rank: 341
score: 99.11429595947266
patch: next ( c ) ; c = c . get CaMeL Next ( ) ;
rank: 341
score: 99.09569027549342
patch: Node n = c . get CaMeL Last CaMeL Child ( ) ; traverse ( c ) ;
rank: 341
score: 99.09203162560097
patch: current = c . get CaMeL First CaMeL Child ( ) ;
rank: 341
score: 99.0749279203869
patch: if ( c != null && c . get CaMeL First CaMeL Child ( ) . get CaMeL Next CaMeL
rank: 341
score: 98.885498046875
patch: traverse ( c , c + null ) ;
rank: 341
score: 98.84792258522727
patch: if ( c == ) traverse ( c ) ;
rank: 342
score: 99.1901385967548
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL Root CaMeL Node ( ) ) ;
rank: 342
score: 99.16619873046875
patch: int [ ] next = c . get CaMeL Next ( ) ;
rank: 342
score: 99.11651056463069
patch: node = n . get CaMeL Next ( ) ;
rank: 342
score: 99.11423627068015
patch: traverse ( c ) ; next = c . get CaMeL Next ( ) ; }
rank: 342
score: 99.09552360983456
patch: c = c . get CaMeL First CaMeL Child ( ) ; } return true ;
rank: 342
score: 99.0916748046875
patch: input = c . get CaMeL Next ( ) ;
rank: 342
score: 98.8992207845052
patch: if ( c == null ) { break ; } }
rank: 342
score: 98.84779710036058
patch: if ( ! traverse ( traverse ( c ) ) ) {
rank: 343
score: 99.190126953125
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL First CaMeL Child ( ) ) ; }
rank: 343
score: 99.11399739583334
patch: c = type != null && c . get CaMeL Next ( ) ;
rank: 343
score: 99.07466947115384
patch: if ( ! should CaMeL Retraverse ( c ) ) {
rank: 343
score: 98.89919704861111
patch: if ( ! c . is CaMeL Empty ( ) ) traverse ( c ) ; }
rank: 343
score: 98.88515753495066
patch: traverse ( c || node . get CaMeL Type ( ) . equals ( $STRING$ ) ) ;
rank: 343
score: 98.84731820913461
patch: if ( c == ) { traverse ( c ) ; }
rank: 344
score: 99.19003092447916
patch: c = c . get CaMeL Parent CaMeL Node ( ) ; break ;
rank: 344
score: 99.16595458984375
patch: traverse ( c , next . get CaMeL Parent ( ) ) ;
rank: 344
score: 99.11598802649456
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next ( ) . get CaMeL
rank: 344
score: 99.09481650904605
patch: if ( c != null ) c = c . get CaMeL First CaMeL Child ( ) ;
rank: 344
score: 99.09129842122395
patch: return c = c . get CaMeL Next ( ) ;
rank: 344
score: 98.89906663161058
patch: if ( ! c . has CaMeL Next ( ) ) {
rank: 344
score: 98.88506208147321
patch: c = c . node ( ) ; traverse ( c ) ;
rank: 344
score: 98.84646606445312
patch: if ( ! ( traverse ( c ) ) ) {
rank: 345
score: 99.18997192382812
patch: c = ( Node ) c . next ( ) ;
rank: 345
score: 99.11576334635417
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , type ) ;
rank: 345
score: 99.11279296875
patch: int next = c . get CaMeL Next ( ) ; c = next ;
rank: 345
score: 99.09474810431985
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c ) ; }
rank: 345
score: 99.0735332782452
patch: return . next = c . get CaMeL Next ( ) ;
rank: 345
score: 98.89847237723214
patch: c = c . get CaMeL Parent ( ) ; c = c . get CaMeL Parent ( ) ;
rank: 345
score: 98.88451470269098
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( true ) ;
rank: 345
score: 98.84561496310764
patch: if ( c != 0 ) return ;
rank: 346
score: 99.18963264016544
patch: traverse ( ( Node ) c . get CaMeL Last CaMeL Child ( ) ) ;
rank: 346
score: 99.16535554108796
patch: if ( node . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) instanceof
rank: 346
score: 99.09097994290866
patch: prev = c . get CaMeL First CaMeL Child ( ) ;
rank: 346
score: 98.898193359375
patch: throw new Runtime CaMeL Exception ( c . get CaMeL Name ( ) + $STRING$ ) ;
rank: 346
score: 98.88435444078948
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . null ;
rank: 346
score: 98.84535569411058
patch: if ( ! c . length ( ) ) ; return ;
rank: 347
score: 99.18956409801136
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL Parent CaMeL Node ( )
rank: 347
score: 99.11521559495192
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) , 0 ) ;
rank: 347
score: 99.112060546875
patch: c = c . get CaMeL Next ( ) ; next = c ;
rank: 347
score: 98.89806111653645
patch: result = c . get CaMeL Parent ( ) ; }
rank: 347
score: 98.88411088423295
patch: traverse ( out ) ; traverse ( c ) ;
rank: 347
score: 98.84535319010416
patch: if ( ! c . iterator ( ) . iterator ( ) . --
rank: 348
score: 99.1893310546875
patch: c = ( c . get CaMeL First CaMeL Child ( ) ) . get CaMeL Last CaMeL Child ( ) ; }
rank: 348
score: 99.1650390625
patch: Node list = c . get CaMeL Next ( ) ;
rank: 348
score: 99.11181640625
patch: c . next = c . get CaMeL Next ( ) ; }
rank: 348
score: 99.09422471788194
patch: traverse ( c , node . get CaMeL First CaMeL Child ( ) , node ) ;
rank: 348
score: 98.89788818359375
patch: return ( traverse ( c ) ) ;
rank: 348
score: 98.88404541015625
patch: traverse ( c + - 1 + c ;
rank: 348
score: 98.84501509232955
patch: if ( ! c . length ( ) ) ;
rank: 349
score: 99.18918863932292
patch: c = ( c . get CaMeL First CaMeL Child ( ) ) . get CaMeL Parent CaMeL Node ( ) ; }
rank: 349
score: 99.0941162109375
patch: n = ( Node ) c . get CaMeL Next ( ) ;
rank: 349
score: 99.09002130681819
patch: ae = c . get CaMeL Next ( ) ;
rank: 349
score: 99.0723876953125
patch: return . get CaMeL Next ( ) ; }
rank: 349
score: 98.89775028935185
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Id ( ) ) ) {
rank: 349
score: 98.84454815204327
patch: if ( ! c . contains ( c ) ) return ;
rank: 350
score: 99.18915405273438
patch: if ( c . has CaMeL Child ( c . get CaMeL First CaMeL Child ( ) ) )
rank: 350
score: 99.11467633928571
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ) ; }
rank: 350
score: 99.11094447544643
patch: c . get CaMeL Parent ( ) . traverse ( c ) ;
rank: 350
score: 99.09376162574405
patch: int line CaMeL Number = c . get CaMeL Line CaMeL Number ( ) ; traverse ( c ) ;
rank: 350
score: 99.0898946126302
patch: int traverse = c . get CaMeL Next ( ) ;
rank: 350
score: 99.07199435763889
patch: c = ( ( Node ) c ) . get CaMeL First CaMeL Child ( ) ;
rank: 350
score: 98.897548828125
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) return ; }
rank: 350
score: 98.88337707519531
patch: traverse ( c && true ) ;
rank: 350
score: 98.844482421875
patch: if ( 0 != c ) traverse ( c ) ;
rank: 351
score: 99.18879250919117
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) ) ; ;
rank: 351
score: 99.08963012695312
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Last CaMeL Child ( )
rank: 351
score: 99.07164946056548
patch: while ( c . get CaMeL First CaMeL Child ( ) != null && c . get CaMeL Next CaMeL
rank: 351
score: 98.88318684895833
patch: traverse ( c , true ) ; this . traverse ( c ) ;
rank: 351
score: 98.84414672851562
patch: return ; traverse ( c ) ;
rank: 352
score: 99.18853290264423
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Last CaMeL Child ( ) , false ) ;
rank: 352
score: 99.16451009114583
patch: traverse ( node . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , node ) ;
rank: 352
score: 99.11056518554688
patch: Child next = c . get CaMeL Next ( ) ; c = next ;
rank: 352
score: 99.08934437144886
patch: a = c . get CaMeL Next ( ) ;
rank: 352
score: 99.07138671875
patch: Node next = c . get CaMeL First CaMeL Child ( ) ; }
rank: 352
score: 98.89722789417614
patch: c = c . get CaMeL Name ( ) ;
rank: 352
score: 98.8831787109375
patch: traverse ( node , c ) ; c = c ;
rank: 352
score: 98.84366861979167
patch: if ( ! 0 ) { traverse ( c ) ;
rank: 353
score: 99.11038970947266
patch: traverse ( node ) ; node = c . get CaMeL Next ( ) ;
rank: 353
score: 99.09271561472039
patch: if ( c . get CaMeL Name ( ) . ends CaMeL With ( $STRING$ ) ) {
rank: 353
score: 99.0884521484375
patch: current = c . get CaMeL Next ( ) ; c = next ;
rank: 353
score: 98.89711064877717
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class CaMeL Name ( ) ) ; }
rank: 353
score: 98.88241577148438
patch: traverse ( c && node . get CaMeL Type ( ) == $STRING$ ) ;
rank: 353
score: 98.84360758463542
patch: if ( true ) { traverse ( c ) ; }
rank: 354
score: 99.1883036295573
patch: traverse ( c . get CaMeL Current CaMeL Node ( ) , c . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 354
score: 99.1143086751302
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , next ) ;
rank: 354
score: 99.10946890024039
patch: traverse ( ! node . get CaMeL Next ( ) ) ;
rank: 354
score: 99.09268188476562
patch: int n = c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) ;
rank: 354
score: 99.0883724814967
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL
rank: 354
score: 98.89680750229779
patch: if ( node . get CaMeL Name ( ) . length ( ) > 0 )
rank: 354
score: 98.88228934151786
patch: traverse ( c ) ; c = node . null ( ) ;
rank: 354
score: 98.84329223632812
patch: if ( n != ) { traverse ( c ) ;
rank: 355
score: 99.18798828125
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) . get CaMeL Parent CaMeL Node ( ) ) ; }
rank: 355
score: 99.11424909319196
patch: traverse ( next . get CaMeL Next ( ) , node ) ;
rank: 355
score: 99.10929107666016
patch: traverse ( node , next = c . get CaMeL Next ( ) ) ;
rank: 355
score: 99.09261648995536
patch: traverse = c . get CaMeL First CaMeL Child ( ) ; }
rank: 355
score: 99.08824327256944
patch: System . out . println ( $STRING$ + c . get CaMeL Next ( ) ) ;
rank: 355
score: 99.0692608173077
patch: Node c = c . get CaMeL Next ( ) ; }
rank: 355
score: 98.89664713541667
patch: if ( node . get CaMeL Name ( ) . length ( ) > 0 ) {
rank: 355
score: 98.88218587239584
patch: traverse ( c , c ) ; builder . traverse ( c ) ;
rank: 355
score: 98.84262424045139
patch: if ( n == 0 ) return ;
rank: 356
score: 99.164013671875
patch: Node c = ! node . get CaMeL First CaMeL Child ( ) ;
rank: 356
score: 99.10895852481617
patch: Node c = node . get CaMeL Next ( ) ; traverse ( c ) ;
rank: 356
score: 99.09253801618304
patch: if ( c . get CaMeL Type ( ) == ) return ;
rank: 356
score: 98.89647216796875
patch: System . err . println ( $STRING$ + c . get CaMeL Id ( ) ) ; return ;
rank: 356
score: 98.88186645507812
patch: traverse ( this , c , node ) ;
rank: 356
score: 98.84234064275569
patch: if ( true ) ; traverse ( c ) ;
rank: 357
score: 99.18741647820724
patch: traverse ( c , ( Node ) c . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 357
score: 99.16396696671195
patch: if ( c . get CaMeL First CaMeL Child ( ) != null ) c . get CaMeL Next ( ) ;
rank: 357
score: 99.09200246710526
patch: traverse ( c , ) ; c = c . get CaMeL First CaMeL Child ( ) ;
rank: 357
score: 99.0873514811198
patch: prev = c . get CaMeL Next ( ) ; }
rank: 357
score: 98.89613647460938
patch: System . out . println ( $STRING$ + c . get CaMeL Id ( ) ) ; return ;
rank: 357
score: 98.88150185032895
patch: traverse ( c && node . get CaMeL Type ( ) . equals ( $STRING$ ) ) ;
rank: 357
score: 98.84182504507211
patch: if ( n != null ) ; traverse ( c ) ;
rank: 358
score: 99.18720037286931
patch: c = c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ; ;
rank: 358
score: 99.10858513327206
patch: Node c = c . get CaMeL Next ( ) ; visit ( c ) ;
rank: 358
score: 99.09125162760417
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , ; }
rank: 358
score: 99.08706665039062
patch: Symbol c = c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) ;
rank: 358
score: 99.06847272600446
patch: if ( c . get CaMeL Root ( ) != null ) {
rank: 358
score: 98.88084411621094
patch: else ; traverse ( c ) ;
rank: 358
score: 98.84160698784723
patch: if ( c != 0 ) { public
rank: 359
score: 99.18684895833333
patch: traverse ( c . get CaMeL Child CaMeL Count ( ) , c . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 359
score: 99.16382740162037
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) . get CaMeL First CaMeL Child ( ) instanceof
rank: 359
score: 99.1133056640625
patch: traverse ( c , c . get CaMeL Next next ( ) ) ;
rank: 359
score: 99.10800170898438
patch: Node next = next ; c = next . get CaMeL Next ( ) ;
rank: 359
score: 99.06758045014881
patch: c = c . get CaMeL Next ( ) ; c = c . get CaMeL Parent ( ) ;
rank: 359
score: 98.89508928571429
patch: System . err . println ( $STRING$ + c . get CaMeL Name ( ) ) ; break ; }
rank: 359
score: 98.8804931640625
patch: ; traverse ( c ) ;
rank: 359
score: 98.84108664772727
patch: if ( c == 0 ) { return ; }
rank: 360
score: 99.18683624267578
patch: traverse ( c , c . get CaMeL Last CaMeL Sibling ( ) ) ;
rank: 360
score: 99.113037109375
patch: Node next = next . get CaMeL Next ( ) ; break ;
rank: 360
score: 99.10769653320312
patch: traverse ( n . get CaMeL Next ( ) ) ;
rank: 360
score: 99.09109317555146
patch: c = c . get CaMeL First CaMeL Child ( ) ; } if ( ;
rank: 360
score: 99.0866366299716
patch: decl = c . get CaMeL Next ( ) ;
rank: 360
score: 99.06746419270833
patch: if ( ! c . get CaMeL First CaMeL Child ( ) . has CaMeL Child ( ) ) {
rank: 360
score: 98.88041856553819
patch: traverse ( c + $STRING$ + c ;
rank: 361
score: 99.1631390115489
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . to CaMeL
rank: 361
score: 99.11251395089286
patch: if ( c . get CaMeL First CaMeL Child ( ) != null || c . get CaMeL Next CaMeL
rank: 361
score: 99.10730919471153
patch: c = c . get CaMeL Next ( ) ; return ;
rank: 361
score: 99.08624267578125
patch: traverse = c . get CaMeL Next ( ) ; }
rank: 361
score: 98.89500209263393
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Type CaMeL Name ( ) ) )
rank: 361
score: 98.8800048828125
patch: traverse ( c + node , c ) ;
rank: 361
score: 98.84049224853516
patch: traverse ( c + null ) ;
rank: 362
score: 99.1121826171875
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , $STRING$ ) ;
rank: 362
score: 99.1064453125
patch: c = n . get CaMeL Next ( ) ; c = next ;
rank: 362
score: 99.09064127604167
patch: int n = c . get CaMeL First CaMeL Child ( ) ; )
rank: 362
score: 99.08612060546875
patch: Class n = c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) ;
rank: 362
score: 99.06602076480263
patch: if ( c . get CaMeL First CaMeL Child ( ) != null && c . to CaMeL
rank: 362
score: 98.89495849609375
patch: if ( ! c . get CaMeL State ( ) . is CaMeL Empty ( ) ) return ;
rank: 362
score: 98.87971714564732
patch: c = c . get ( ) ; traverse ( c ) ;
rank: 362
score: 98.83954326923077
patch: if ( true ) { traverse ( c , c ) ;
rank: 363
score: 99.18541717529297
patch: if ( c . get CaMeL Type ( ) . equals ( $STRING$ ) )
rank: 363
score: 99.1628926595052
patch: c ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 363
score: 99.11177884615384
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , node . get CaMeL First CaMeL Child ( ) ) ;
rank: 363
score: 99.08986302425987
patch: c = c . get CaMeL First CaMeL Child ( ) ; } traverse ( node ) ;
rank: 363
score: 99.08558146158855
patch: Symbol visits = c . get CaMeL Next ( ) ;
rank: 363
score: 99.06583658854167
patch: if ( ! node . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) ) {
rank: 363
score: 98.89481026785714
patch: if ( ! c . is CaMeL Empty ( ) || ! c . is CaMeL Empty ( ) )
rank: 363
score: 98.87960052490234
patch: c = c . get CaMeL Instance ( ) ; traverse ( node ) ;
rank: 363
score: 98.83946814903847
patch: if ( $NUMBER$ != c ) { traverse ( c ) ;
rank: 364
score: 99.18507690429688
patch: start CaMeL Node ( c ) ; c = c . get CaMeL First CaMeL Child ( ) ;
rank: 364
score: 99.16274077316811
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) . get CaMeL
rank: 364
score: 99.11159261067708
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next ( ) , node ) ;
rank: 364
score: 99.10483224051339
patch: traverse ( c . get CaMeL Next ( ) , this ) ;
rank: 364
score: 99.08963216145834
patch: c = c . get CaMeL First CaMeL Child ( ) ; } ;
rank: 364
score: 99.0850497159091
patch: previous = c . get CaMeL Next ( ) ;
rank: 364
score: 99.06581333705357
patch: Node next = c . get CaMeL Next ( ) ; try {
rank: 364
score: 98.87913004557292
patch: try { traverse ( c ) ; c = c ;
rank: 364
score: 98.83928765190973
patch: if ( c == c ) return ;
rank: 365
score: 99.18478515625
patch: c = c . get CaMeL Parent CaMeL Node ( ) ; c = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 365
score: 99.16273716517857
patch: Node next = c . get CaMeL Last CaMeL Child ( ) ;
rank: 365
score: 99.111328125
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next ( ) , 0 ) ;
rank: 365
score: 99.10437729779412
patch: Node next = node . get CaMeL Next ( ) ; traverse ( c ) ;
rank: 365
score: 99.08477783203125
patch: else next = c . get CaMeL Next ( ) ;
rank: 365
score: 98.89445356889205
patch: if ( ! c . is CaMeL Empty ( ) && c . is CaMeL Empty ( ) ) return ;
rank: 365
score: 98.8788174715909
patch: traverse ( c , c ) ; return ; ;
rank: 365
score: 98.83917999267578
patch: add ( c , c ) ;
rank: 366
score: 99.1841015625
patch: traverse ( ; c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 366
score: 99.11090959821429
patch: Node n = c . get CaMeL Next ( ) ; for (
rank: 366
score: 99.10425914417614
patch: c . get CaMeL First CaMeL Child ( ) ;
rank: 366
score: 99.0894839638158
patch: n = c . get CaMeL First CaMeL Child ( ) ; if ( n != null )
rank: 366
score: 99.08453776041667
patch: if ( c . get CaMeL Current CaMeL Node ( ) != null )
rank: 366
score: 99.06444373497597
patch: c = c . get CaMeL Next ( ) ; try {
rank: 366
score: 98.89433149857955
patch: if ( ! c . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) ;
rank: 366
score: 98.8787841796875
patch: traverse ( c , c . c ) ; traverse ( c ) ;
rank: 366
score: 98.83917791193181
patch: if ( ! traverse ( c ) ) continue ;
rank: 367
score: 99.18377364309211
patch: traverse ( c ) ; c = c . get CaMeL First CaMeL Child ( ) ) ;
rank: 367
score: 99.10421316964286
patch: c . node = c . get CaMeL Next ( ) ; }
rank: 367
score: 99.08878784179687
patch: traverse ( c , ; c = ; }
rank: 367
score: 99.08437093098958
patch: return c . get CaMeL Next ( ) ; } }
rank: 367
score: 98.89377663352273
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) continue ;
rank: 367
score: 98.87874661959134
patch: traverse ( c , c , traverse ( c ) ) ;
rank: 367
score: 98.83882649739583
patch: if ( ! c . is CaMeL Empty ( ) ) ) return ;
rank: 368
score: 99.18366241455078
patch: traverse ( c . get CaMeL Root CaMeL Node ( ) , n ) ;
rank: 368
score: 99.16187540690105
patch: Node next = target . get CaMeL Next ( ) ;
rank: 368
score: 99.11036900111607
patch: Node [ ] n = c . get CaMeL Next ( ) ;
rank: 368
score: 99.10418146306819
patch: c = Node . get CaMeL Next ( ) ;
rank: 368
score: 99.08848170230263
patch: Node node = c . get CaMeL First CaMeL Child ( ) ; traverse ( c ) ;
rank: 368
score: 99.08427290482955
patch: elem = c . get CaMeL Next ( ) ;
rank: 368
score: 98.89374389648438
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c ) )
rank: 368
score: 98.83817545572917
patch: if ( c != c ) return ;
rank: 369
score: 99.18334089006696
patch: traverse ( c . get CaMeL Parent ( ) , n ) ;
rank: 369
score: 99.10977608816964
patch: Node n = c . get CaMeL Next ( ) ; break ;
rank: 369
score: 99.10370279947917
patch: traverse ( c , node . get CaMeL Next ( ) ) ; }
rank: 369
score: 99.08791097005208
patch: / * traverse ( c ) * /
rank: 369
score: 99.08226667131696
patch: if ( c . should CaMeL Retraverse ( c ) ) {
rank: 369
score: 99.06230236235119
patch: if ( node . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) != null )
rank: 369
score: 98.89347330729167
patch: if ( ! node . get CaMeL Type ( ) . is CaMeL Empty ( ) )
rank: 369
score: 98.8370361328125
patch: try { traverse ( c ) ; } = c ;
rank: 370
score: 99.16092122395834
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ) ;
rank: 370
score: 99.10359191894531
patch: Node next = parent . get CaMeL Next ( ) ; c = next ;
rank: 370
score: 99.08765933388158
patch: Node c = c . get CaMeL First CaMeL Child ( ) ; traverse ( c , ;
rank: 370
score: 99.0817626953125
patch: i = c . get CaMeL Next ( ) ; c = next ;
rank: 370
score: 98.89344278971355
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . to CaMeL String ( ) ) ;
rank: 370
score: 98.87700653076172
patch: traverse ( c || node . get CaMeL Type ( ) == $STRING$ ) ;
rank: 371
score: 99.16082763671875
patch: Node c = scope . get CaMeL First CaMeL Child ( ) ;
rank: 371
score: 99.10303673377403
patch: c . type = c . get CaMeL Next ( ) ;
rank: 371
score: 99.08748372395833
patch: if ( c != ; c = c . get CaMeL Last CaMeL Child ( ) )
rank: 371
score: 99.08154296875
patch: ! c = c . get CaMeL Next ( ) ;
rank: 371
score: 98.89320725661058
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Key ( ) ) )
rank: 371
score: 98.87699068509616
patch: traverse ( c , traverse ( c , c ) ) ;
rank: 371
score: 98.83604847301136
patch: traverse ( c ) ; traverse ( 1 ) ;
rank: 372
score: 99.1821621981534
patch: traverse ( c , c . get CaMeL Parent ( ) . get CaMeL Child CaMeL Count ( ) ) ;
rank: 372
score: 99.16066978717673
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL Last CaMeL Child ( ) instanceof
rank: 372
score: 99.10859510633681
patch: try { traverse ( c , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 372
score: 99.08636067708333
patch: n = c . get CaMeL First CaMeL Child ( ) ; } }
rank: 372
score: 99.08149857954545
patch: other = c . get CaMeL Next ( ) ;
rank: 372
score: 98.89314408735795
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Id ( ) + $STRING$ ) ;
rank: 372
score: 98.87696075439453
patch: traverse ( c ) ; c = node . get CaMeL Value ( ) ;
rank: 372
score: 98.83448079427083
patch: if ( ! c . is CaMeL Empty ( ) ) { continue ;
rank: 373
score: 99.08143199573864
patch: clazz = c . get CaMeL Next ( ) ;
rank: 373
score: 99.06058542351974
patch: if ( c . get CaMeL First CaMeL Child ( ) == null ) { return ; }
rank: 373
score: 98.89310913085937
patch: System . out . println ( $STRING$ + c . get CaMeL Id ( ) ) ; break ;
rank: 373
score: 98.83437674386161
patch: traverse ( ! c . get CaMeL Node ( ) ) ; }
rank: 374
score: 99.18163045247395
patch: traverse ( c , c . get CaMeL Root CaMeL Node ( ) . get CaMeL Child CaMeL Count ( ) ) ;
rank: 374
score: 99.10212707519531
patch: visit ( node ) ; next = c . get CaMeL Next ( ) ;
rank: 374
score: 99.08597412109376
patch: if ( c . get CaMeL Parent CaMeL Node ( ) != null ) traverse ( c ) ;
rank: 374
score: 99.0813876065341
patch: owner = c . get CaMeL Next ( ) ;
rank: 374
score: 99.06052533318015
patch: if ( c != null ) c . get CaMeL First CaMeL Child ( ) ;
rank: 374
score: 98.89304896763393
patch: if ( ! n . is CaMeL Empty ( ) ) ; }
rank: 374
score: 98.87685922475961
patch: traverse ( c , null ) ; traverse ( c ) ;
rank: 374
score: 98.8342754657452
patch: if ( traverse ( c , c ) ) { return ;
rank: 375
score: 99.18161939538044
patch: c = c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; break ;
rank: 375
score: 99.1598369891827
patch: } Node c = c . get CaMeL Next ( ) ;
rank: 375
score: 99.1077372233073
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 375
score: 99.10194396972656
patch: c = next ( c ) ;
rank: 375
score: 99.08536783854167
patch: c = c . get CaMeL Last CaMeL Child ( ) ; traverse ( c ) ;
rank: 375
score: 99.07997824928977
patch: dom = c . get CaMeL Next ( ) ;
rank: 375
score: 99.0605109719669
patch: if ( node . get CaMeL First CaMeL Child ( ) != null ) { {
rank: 375
score: 98.89283098493304
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Id ( ) ) ) break ;
rank: 375
score: 98.83402876420455
patch: if ( c == traverse ( c ) ) {
rank: 376
score: 99.18094032689145
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) . traverse ( c ) ) ;
rank: 376
score: 99.1595458984375
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) ) ;
rank: 376
score: 99.10773259943181
patch: next = c . get CaMeL Next ( ) ; c = c . get CaMeL Next ( ) ; }
rank: 376
score: 99.10118865966797
patch: traverse ( null ) ; c = c . get CaMeL Next ( ) ;
rank: 376
score: 99.08494984019886
patch: if ( c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) == ;
rank: 376
score: 99.06043497721355
patch: Node c = node . get CaMeL Parent ( ) ;
rank: 376
score: 98.891845703125
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Id ( ) + $STRING$ ) ;
rank: 376
score: 98.8337871844952
patch: if ( ! c . traverse ( c ) ) { public
rank: 377
score: 99.1808612530048
patch: traverse ( c , c . get CaMeL Current CaMeL Node ( ) , c . get CaMeL Current CaMeL Node ( ) ) ;
rank: 377
score: 99.15951425057871
patch: if ( c . get CaMeL First CaMeL Child ( ) . equals ( node . get CaMeL First CaMeL Child ( ) ) ) {
rank: 377
score: 99.10750325520833
patch: return n . get CaMeL First CaMeL Child ( ) ;
rank: 377
score: 99.100830078125
patch: traverse ( c , ! should CaMeL Retraverse ( node ) ) ;
rank: 377
score: 99.08477461965461
patch: traverse ( c , ; c = ) c . get CaMeL First CaMeL Child ( ) ;
rank: 377
score: 99.07979329427083
patch: switch ( c . get CaMeL First CaMeL Child ( ) ) { }
rank: 377
score: 98.89181082589286
patch: if ( ! c . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 377
score: 98.83377511160714
patch: if ( ! c . iterator ( ) . iterator ( ) .
rank: 378
score: 99.1008071899414
patch: traverse ( parent ) ; c = c . get CaMeL Next ( ) ;
rank: 378
score: 99.08462685032895
patch: traverse ( c , ; ; c = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 378
score: 99.05894068667763
patch: if ( node . get CaMeL First CaMeL Child ( ) != null && c . to CaMeL
rank: 378
score: 98.89179021661931
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Name ( ) + $STRING$ ) ;
rank: 378
score: 98.83375651041666
patch: if ( ! c . iterator ( ) . iterator ( ) . public
rank: 379
score: 99.1580810546875
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next ( ) ) ;
rank: 379
score: 99.10740152994792
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next ( ) ) ; break ;
rank: 379
score: 99.10042572021484
patch: traverse ( c , current = c . get CaMeL Next ( ) ) ;
rank: 379
score: 99.08452497209821
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , ;
rank: 379
score: 99.07809012276786
patch: traverse ( c && c . get CaMeL Next ( ) ) ;
rank: 379
score: 99.05813802083334
patch: Node c = c . get CaMeL First CaMeL Child ( ) ; ;
rank: 379
score: 98.87607421875
patch: traverse ( node + $STRING$ + c ) ;
rank: 379
score: 98.8335293856534
patch: if ( c != ) traverse ( c ) ;
rank: 380
score: 99.18055635340073
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) ) ; ;
rank: 380
score: 99.10723876953125
patch: Node c = n . get CaMeL Next ( ) ; break ;
rank: 380
score: 99.09752807617187
patch: traverse ( new Node ( c ) ) ;
rank: 380
score: 99.07733513327206
patch: if ( c . get CaMeL First CaMeL Child ( ) != c . get CaMeL
rank: 380
score: 99.05806692023026
patch: if ( node . get CaMeL First CaMeL Child ( ) != null && c . get CaMeL
rank: 380
score: 98.89115849247685
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) ;
rank: 380
score: 98.87588161892361
patch: ; traverse ( c , c ) ;
rank: 380
score: 98.83307647705078
patch: if ( ! c . contains ( c ) ) traverse ( c ) ;
rank: 381
score: 99.180361328125
patch: c = c . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) ;
rank: 381
score: 99.15779252485795
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) , node ) ;
rank: 381
score: 99.0772372159091
patch: area = c . get CaMeL Next ( ) ;
rank: 381
score: 98.87567138671875
patch: traverse ( c || false ) ;
rank: 382
score: 99.17927631578948
patch: traverse ( c ) ; c = c . get CaMeL First CaMeL Child ( ) ; ;
rank: 382
score: 99.09593200683594
patch: traverse ( c ) ; node = node . get CaMeL Next ( ) ;
rank: 382
score: 99.0831298828125
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( ) )
rank: 382
score: 99.07670512952302
patch: if ( c . get CaMeL Node ( ) . get CaMeL First CaMeL Child ( ) )
rank: 382
score: 99.05764431423611
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , node , null ) ;
rank: 382
score: 98.89111328125
patch: if ( ! c . is CaMeL Property ( $STRING$ ) ) return ;
rank: 382
score: 98.87557644314236
patch: return c ; traverse ( c ) ;
rank: 382
score: 98.83245849609375
patch: if ( ! c . length ( ) ) { ;
rank: 383
score: 99.1792625144676
patch: if ( c . get CaMeL Class CaMeL Name ( ) . equals ( c . get CaMeL Class CaMeL Name ( ) ) ) {
rank: 383
score: 99.157197265625
patch: if ( c . get CaMeL First CaMeL Child ( ) != null && c . get CaMeL First CaMeL Child ( ) instanceof
rank: 383
score: 99.106201171875
patch: list = c . get CaMeL Next ( ) ;
rank: 383
score: 99.09541015625
patch: traverse ( c , c . get CaMeL Next ( ) ) ; }
rank: 383
score: 99.08213704427084
patch: traverse ( c ) ; c = c . get ( ) ; }
rank: 383
score: 99.07637532552083
patch: Member c = c . get CaMeL Next ( ) ;
rank: 383
score: 99.05738176618304
patch: if ( node . get CaMeL Next ( ) != null ) {
rank: 383
score: 98.89104147518383
patch: if ( ! c . is CaMeL Empty ( ) ) return ; break ; }
rank: 383
score: 98.875
patch: traverse ( c , false ) ; c = c ;
rank: 383
score: 98.83219770951705
patch: if ( false ) ; traverse ( c ) ;
rank: 384
score: 99.17909071180556
patch: c = c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) ;
rank: 384
score: 99.15686456088362
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) . to CaMeL
rank: 384
score: 99.10582386363636
patch: pos = c . get CaMeL Next ( ) ;
rank: 384
score: 99.09538717830883
patch: c = c . get CaMeL Next ( ) ; this . next = c ;
rank: 384
score: 99.08198627672698
patch: if ( c != null ; c = c . get CaMeL First CaMeL Child ( ) )
rank: 384
score: 98.891015625
patch: if ( ! c . get CaMeL Type ( ) . is CaMeL Empty ( ) ) { }
rank: 384
score: 98.87459622896634
patch: traverse ( c , c ; traverse ( c ) ) ;
rank: 384
score: 98.83179820667614
patch: if ( ) { traverse ( c ) ; }
rank: 385
score: 99.179013671875
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) ) ; ;
rank: 385
score: 99.155908203125
patch: traverse ( Node . get CaMeL First CaMeL Child ( node ) ) ;
rank: 385
score: 99.10570610894098
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c != null ) ;
rank: 385
score: 99.0948715209961
patch: Node next = null ; c = next . get CaMeL Next ( ) ;
rank: 385
score: 99.08189086914062
patch: traverse ( c ) traverse ( c ) ;
rank: 385
score: 99.07523600260417
patch: Type c = c . get CaMeL Node ( ) ;
rank: 385
score: 98.89057849702381
patch: System . out . println ( $STRING$ + c . get CaMeL Name ( ) ) ; break ; }
rank: 385
score: 98.87403361002605
patch: traverse ( c ) ) ; traverse ( c ) ;
rank: 385
score: 98.83119710286458
patch: if ( ! traverse ( c ) ) ; return ;
rank: 386
score: 99.17820909288194
patch: System . out . println ( c . get CaMeL Name ( ) + $STRING$ ) ;
rank: 386
score: 99.15529221754808
patch: if ( c . get CaMeL First CaMeL Child ( ) instanceof
rank: 386
score: 99.09442138671875
patch: Node n = c . get CaMeL Next ( ) ; c = next ;
rank: 386
score: 99.08175998263889
patch: while ( c != ; c = c . get CaMeL First CaMeL Child ( ) )
rank: 386
score: 99.0747958096591
patch: part = c . get CaMeL Next ( ) ;
rank: 386
score: 99.05248413085937
patch: if ( ! c . get CaMeL First CaMeL Child ( ) . is CaMeL All ( ) )
rank: 386
score: 98.89041748046876
patch: System . err . println ( $STRING$ + c . get CaMeL Id ( ) ) ; break ;
rank: 386
score: 98.87403361002605
patch: traverse ( c ) ; c traverse ( c ) ;
rank: 386
score: 98.8309795673077
patch: if ( 0 != 0 ) { traverse ( c ) ;
rank: 387
score: 99.17813110351562
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) , ;
rank: 387
score: 99.10500863882211
patch: has CaMeL Child = c . get CaMeL Next ( ) ;
rank: 387
score: 99.09435272216797
patch: Child c = c . get CaMeL Next ( ) ; c = next ;
rank: 387
score: 99.08157009548611
patch: c = c ; c = c . get CaMeL First CaMeL Child ( ) ; }
rank: 387
score: 99.07472229003906
patch: return c . get CaMeL First CaMeL Child ( ) ; } visits ++ ;
rank: 387
score: 99.05186631944444
patch: if ( node . get CaMeL First CaMeL Child ( ) != null ) { for (
rank: 387
score: 98.89015794836956
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Id ( ) ;
rank: 387
score: 98.87335205078125
patch: traverse ( c ) ; c = c . node ( ) ;
rank: 387
score: 98.83090444711539
patch: if ( ! c . size ( ) == 1 ) {
rank: 388
score: 99.17811986019737
patch: traverse ( c ) ; parent = c . get CaMeL Parent CaMeL Node ( ) ; }
rank: 388
score: 99.10487874348958
patch: add ( c . get CaMeL Next ( ) ) ;
rank: 388
score: 99.09419759114583
patch: next ] = c . get CaMeL Next ( ) ;
rank: 388
score: 99.08104790581598
patch: traverse ( c , ; c . get CaMeL First CaMeL Child ( ) ) ; }
rank: 388
score: 99.074462890625
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , node . get CaMeL
rank: 388
score: 99.05121256510417
patch: Node c = c . get CaMeL First CaMeL Child ( ) ; {
rank: 388
score: 98.88972553453948
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Name ( ) + $STRING$ ;
rank: 388
score: 98.87318115234375
patch: traverse ( c && null == c ) ;
rank: 388
score: 98.83090006510416
patch: if ( ! c . iterator ( ) . iterator ( c ) ;
rank: 389
score: 99.17759303042763
patch: if ( c . get CaMeL Type ( ) == c . get CaMeL Type ( ) )
rank: 389
score: 99.15351394127156
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 389
score: 99.10485258556548
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next ( ) ,
rank: 389
score: 99.09398057725694
patch: c . get CaMeL Next ( ) ;
rank: 389
score: 99.08096923828126
patch: traverse ( c ) ; return false ; }
rank: 389
score: 99.07353864397321
patch: if ( node . get CaMeL First CaMeL Child ( ) ) {
rank: 389
score: 99.05077446831598
patch: if ( ( c . get CaMeL First CaMeL Child ( ) != null ) ) {
rank: 389
score: 98.8896125344669
patch: if ( c == null && ! c . is CaMeL Empty ( ) ) {
rank: 389
score: 98.83042555588942
patch: traverse ( c . get CaMeL Parent ( ) ) ; ;
rank: 390
score: 99.17750549316406
patch: traverse ( c ) ; c = c . get CaMeL Root ( ) ;
rank: 390
score: 99.09380026424633
patch: c = node . get CaMeL First CaMeL Child ( ) ; c = next ;
rank: 390
score: 99.08051500822368
patch: if ( c == ; c = c . get CaMeL First CaMeL Child ( ) ) {
rank: 390
score: 99.07305908203125
patch: Object c = c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ;
rank: 390
score: 98.88938621238425
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( node . get CaMeL Id ( ) ) ) {
rank: 390
score: 98.87314022288604
patch: if ( c . get CaMeL Type ( ) == ) traverse ( c ) ;
rank: 390
score: 98.830078125
patch: if ( c != null ) traverse ( c ) ; else
rank: 391
score: 99.1534423828125
patch: check ( c . get CaMeL First CaMeL Child ( ) ) ;
rank: 391
score: 99.10399228050595
patch: if ( c . get CaMeL First CaMeL Child ( ) != null && node . get CaMeL Next CaMeL
rank: 391
score: 99.08028835720486
patch: traverse ( c , ; c = c . get CaMeL Last CaMeL Child ( ) ;
rank: 391
score: 99.07302024147727
patch: item = c . get CaMeL Next ( ) ;
rank: 391
score: 99.04974772135417
patch: try { try { c = c . get CaMeL Next ( ) ;
rank: 391
score: 98.88927734375
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL First CaMeL Line ( ) ;
rank: 391
score: 98.87244370404412
patch: if ( c . get CaMeL Type ( ) != ) traverse ( c ) ;
rank: 391
score: 98.82996368408203
patch: traverse ( $NUMBER$ , c ) ;
rank: 392
score: 99.09236653645833
patch: traverse c = c . get CaMeL Next ( ) ;
rank: 392
score: 99.07977616159539
patch: c = c . get CaMeL First CaMeL Child ( ) ; while ( c != null )
rank: 392
score: 99.072998046875
patch: return ( c . get CaMeL First CaMeL Child ( ) ) ; }
rank: 392
score: 99.04865180121527
patch: try { while ( c . get CaMeL First CaMeL Child ( ) != null ) {
rank: 392
score: 98.87210083007812
patch: try { traverse ( c + 0 ) ;
rank: 392
score: 98.8296875
patch: if ( ! c . is CaMeL Empty ( ) ) { ) {
rank: 393
score: 99.1765848795573
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 393
score: 99.09138758042279
patch: Node node = c . get CaMeL Next ( ) ; traverse ( c ) ;
rank: 393
score: 99.07960611979166
patch: n = c . get CaMeL First CaMeL Child ( ) ; ; }
rank: 393
score: 99.07264200846355
patch: Contents next = c . get CaMeL Next ( ) ;
rank: 393
score: 98.88909040178571
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Id ( ) ) ) continue ;
rank: 393
score: 98.87189483642578
patch: traverse ( c , out ) ;
rank: 393
score: 98.82949829101562
patch: if ( n == null ) traverse ( c ) ;
rank: 394
score: 99.175048828125
patch: c = ( node . get CaMeL First CaMeL Child ( ) ) . get CaMeL Last CaMeL Sibling ( ) ;
rank: 394
score: 99.15286570581897
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) . to CaMeL
rank: 394
score: 99.09132486979166
patch: next = node . get CaMeL Next ( ) ; c = next ;
rank: 394
score: 99.0724589029948
patch: Object next = c . get CaMeL Parent ( ) ;
rank: 394
score: 99.04699096679687
patch: if ( c . get CaMeL Parent ( ) . get CaMeL Node ( ) != null ) {
rank: 394
score: 98.88905639648438
patch: if ( node . get CaMeL Id ( ) == c . get CaMeL Id ( ) ) {
rank: 394
score: 98.8293926532452
patch: if ( c != 1 ) { traverse ( c ) ;
rank: 395
score: 99.17490456321023
patch: pos = c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ; }
rank: 395
score: 99.1527850811298
patch: c = ref . get CaMeL First CaMeL Child ( ) ;
rank: 395
score: 99.0911865234375
patch: traverse ( c ) ; next = next . get CaMeL Next ( ) ;
rank: 395
score: 99.07880602384868
patch: c = c . get CaMeL Last CaMeL Child ( ) ; if ( c != null )
rank: 395
score: 99.07227783203125
patch: Symbol visits = c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) ;
rank: 395
score: 99.04685280539773
patch: traverse ( children . get ( c ) ) ;
rank: 395
score: 98.88880657327586
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Class CaMeL Name ( ) ) ; }
rank: 395
score: 98.8716552734375
patch: traverse ( new traverse ( node ) ) ;
rank: 395
score: 98.82909138997395
patch: if ( c ) { traverse ( c ) ; }
rank: 396
score: 99.17470296223958
patch: traverse ( c ) ; n = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 396
score: 99.15252896012932
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL Parent CaMeL Node ( ) instanceof
rank: 396
score: 99.09099264705883
patch: traverse ( parent , c . get CaMeL First CaMeL Child ( ) ) ; }
rank: 396
score: 99.07217407226562
patch: ret = c . get CaMeL Next ( ) ; }
rank: 396
score: 98.8709716796875
patch: traverse ( c ) ; traverse ( type ) ;
rank: 396
score: 98.8290023803711
patch: if ( ! c . iterator ( ) . iterator ( ) . } }
rank: 397
score: 99.17467151988636
patch: traverse ( c , c . get CaMeL Root CaMeL Node ( ) . get CaMeL Parent ( ) ) ;
rank: 397
score: 99.09088493795956
patch: Node next = c . get CaMeL Next ( ) ; visit ( next ) ;
rank: 397
score: 99.07779269748264
patch: if ( c != ; c = c . get CaMeL Parent CaMeL Node ( ) )
rank: 397
score: 99.07186453683036
patch: return ( c . get CaMeL First CaMeL Child ( ) ) ;
rank: 397
score: 99.04613240559895
patch: List next = c . get CaMeL Next ( ) ;
rank: 397
score: 98.8885986328125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) ) ;
rank: 397
score: 98.8705078125
patch: traverse ( c + 0 , false ) ;
rank: 397
score: 98.82895914713542
patch: traverse ( c != null && c != 0 ) ;
rank: 398
score: 99.174560546875
patch: traverse ( c . get CaMeL Parent ( ) , c . get CaMeL Parent ( ) . get CaMeL Parent ( ) ) ;
rank: 398
score: 99.1520575161638
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL
rank: 398
score: 99.10312124399039
patch: try { c = n . get CaMeL Next ( ) ;
rank: 398
score: 99.07760184151786
patch: if ( c . get CaMeL Name ( ) . equals ( $STRING$ ) ) traverse ( c ) ;
rank: 398
score: 99.07183837890625
patch: parent = c . get CaMeL Next ( ) ; }
rank: 398
score: 98.88851125616776
patch: if ( ! c . get CaMeL State ( ) . is CaMeL Empty ( ) ) {
rank: 398
score: 98.87047230113636
patch: next ( c ) ; traverse ( c ) ;
rank: 398
score: 98.82821890024039
patch: if ( n != c ) { traverse ( c ) ;
rank: 399
score: 99.17430701622597
patch: n = c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . traverse ( c ) ;
rank: 399
score: 99.15180520450367
patch: if ( c . get CaMeL First CaMeL Child ( ) != null ) c .
rank: 399
score: 99.08914005055146
patch: traverse ( parent . get CaMeL First CaMeL Child ( ) , c ) ; }
rank: 399
score: 99.07760009765624
patch: if ( ! c . ; c = c . get CaMeL First CaMeL Child ( ) ) {
rank: 399
score: 99.07145472935268
patch: type = c . get CaMeL First CaMeL Child ( ) ; }
rank: 399
score: 99.04594590928819
patch: while ( c . get CaMeL First CaMeL Child ( ) != null ) { try {
rank: 399
score: 98.8883389559659
patch: if ( ! c . is CaMeL Empty ( ) && ! c . is CaMeL Empty ( ) ) {
rank: 399
score: 98.87040441176471
patch: c = c . traverse ( c ) ; c . traverse ( c ) ;
rank: 399
score: 98.8280517578125
patch: if ( ! c . contains ( c ) ) { return ; }
rank: 400
score: 99.10164097377232
patch: Node next = node . get CaMeL Next ( ) ; break ;
rank: 400
score: 99.08910369873047
patch: c = parent . get CaMeL Next ( ) ; traverse ( c ) ;
rank: 400
score: 99.07734985351563
patch: if ( c . ; c = c . get CaMeL First CaMeL Child ( ) ) return ;
rank: 400
score: 99.07107747395834
patch: return c . get CaMeL First CaMeL Child ( ) ; visits ++ ;
rank: 400
score: 98.88812725360577
patch: if ( ! c . is CaMeL Instance ( c ) )
rank: 400
score: 98.87017059326172
patch: c = c . get CaMeL First CaMeL Child ( ) ; try { ;
rank: 400
score: 98.82781110491071
patch: if ( n != null ) { traverse ( c ) ; }
rank: 401
score: 99.1015625
patch: c = c . get CaMeL Next ( ) ; c ++ ;
rank: 401
score: 99.08863830566406
patch: node = c . get CaMeL Next ( ) ; traverse ( c ) ;
rank: 401
score: 99.07672440378289
patch: if ( c != ; c = c . get CaMeL First CaMeL Child ( ) ) {
rank: 401
score: 99.0706075032552
patch: if ( should CaMeL Retraverse ( c ) ) {
rank: 401
score: 99.04435007195724
patch: if ( node . get CaMeL First CaMeL Child ( ) == null ) { return ; }
rank: 401
score: 98.8879458778783
patch: if ( node . get CaMeL Id ( ) == c . get CaMeL Name ( ) )
rank: 401
score: 98.86967198988971
patch: traverse ( c , c ) ; logger . out . println ( $STRING$ ) ;
rank: 401
score: 98.82758037860577
patch: if ( null == c ) { traverse ( c ) ;
rank: 402
score: 99.17339010799633
patch: traverse ( ( Node ) c . get CaMeL Root CaMeL Node ( ) ) ;
rank: 402
score: 99.0872802734375
patch: Node next = c . get CaMeL Next ( ) ; c = next ; }
rank: 402
score: 99.07664853050595
patch: c = c . get CaMeL First CaMeL Child ( ) ; } while ( c != null ) ;
rank: 402
score: 99.07048797607422
patch: if ( c . get CaMeL First CaMeL Child ( ) != c ) {
rank: 402
score: 98.88793073381696
patch: if ( ! c . has CaMeL Next ( ) ) { }
rank: 402
score: 98.86963500976563
patch: traverse ( get CaMeL Node ( ) ) ;
rank: 402
score: 98.82748647836539
patch: if ( ! c . equals ( c ) ) return ;
rank: 403
score: 99.17321246603261
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ) ; ;
rank: 403
score: 99.14972330729167
patch: Node next = ( Node ) next . get CaMeL Next ( ) ;
rank: 403
score: 99.10071331521739
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next ( ) , ) ;
rank: 403
score: 99.08637029474431
patch: c = scope . get CaMeL Next ( ) ;
rank: 403
score: 99.07657877604167
patch: c = c . get CaMeL First CaMeL Child ( ) ; } this . traverse ( c ) ;
rank: 403
score: 99.06997680664062
patch: int n = c . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) ;
rank: 403
score: 99.043505859375
patch: if ( ! node . get CaMeL First CaMeL Child ( ) . equals ( node . get CaMeL
rank: 403
score: 98.88791329520089
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Id ( ) ) ) return ;
rank: 403
score: 98.86939697265625
patch: traverse ( c , c + false ) ;
rank: 403
score: 98.82734375
patch: if ( ! c . null ) { traverse ( c ) ; }
rank: 404
score: 99.14960793887867
patch: traverse ( node . get CaMeL First CaMeL Child ( ) ) ; visits ++ ;
rank: 404
score: 99.10016424005681
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ) ; break ;
rank: 404
score: 99.08568572998047
patch: Node [ ] parent = c . get CaMeL First CaMeL Child ( ) ;
rank: 404
score: 99.07651977539062
patch: traverse ( c , ( ) n ) ;
rank: 404
score: 99.06995738636364
patch: inst = c . get CaMeL Next ( ) ;
rank: 404
score: 99.04308064778645
patch: while ( c . get CaMeL Next ( ) ) {
rank: 404
score: 98.88779810855263
patch: if ( c . get CaMeL Id ( ) == c . get CaMeL Name ( ) )
rank: 404
score: 98.86920720880681
patch: for ( ; c . equals ( c ) )
rank: 404
score: 98.82677205403645
patch: if ( false ) { traverse ( c ) ; }
rank: 405
score: 99.17284138997395
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ) ; break ;
rank: 405
score: 99.14950448495371
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) . get CaMeL First CaMeL Child ( ) instanceof
rank: 405
score: 99.09972205528847
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) , n ) ;
rank: 405
score: 99.08562469482422
patch: traverse ( c , c = c . get CaMeL Next ( ) ) ;
rank: 405
score: 99.07586669921875
patch: c = c . get CaMeL First CaMeL Child ( ) ; break ; } return ;
rank: 405
score: 99.06977982954545
patch: module = c . get CaMeL Next ( ) ;
rank: 405
score: 99.04305826822916
patch: c = c . get CaMeL First CaMeL Child ( ) ; do {
rank: 405
score: 98.88770816200658
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Id ( ) ;
rank: 405
score: 98.86900227864584
patch: traverse ( c || c . get CaMeL Type ( ) == ) ;
rank: 405
score: 98.82665337456598
patch: traverse ( c ) ; ; ) ;
rank: 406
score: 99.14945162259616
patch: final Node next = next . get CaMeL Next ( ) ;
rank: 406
score: 99.09962293836806
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , parent ) ;
rank: 406
score: 99.08561706542969
patch: visit ( c ) ; c = node . get CaMeL Next ( ) ;
rank: 406
score: 99.07516479492188
patch: short type = c . get CaMeL Type ( ) ;
rank: 406
score: 99.04253680889423
patch: c = c != null . get CaMeL Next ( ) ;
rank: 406
score: 98.88750751201923
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL File CaMeL Name ( ) ) ;
rank: 406
score: 98.86888020833334
patch: traverse ( c , true ) ; out . traverse ( c ) ;
rank: 406
score: 98.82657564603366
patch: if ( node == null ) { traverse ( c ) ;
rank: 407
score: 99.17208984375
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) . get CaMeL Last CaMeL Child ( ) ) ; }
rank: 407
score: 99.09914328835227
patch: c = c . get CaMeL Next ( ) ; c = node . get CaMeL Next ( ) ; }
rank: 407
score: 99.08484825721153
patch: traverse ] = c . get CaMeL Next ( ) ; }
rank: 407
score: 99.07511596679687
patch: traverse ( c , ) ; c = c . get CaMeL First CaMeL Child ( ) ; }
rank: 407
score: 99.06955973307292
patch: I next = c . get CaMeL Next ( ) ;
rank: 407
score: 98.8688232421875
patch: traverse ( c && c . get CaMeL Type ( ) == ) ;
rank: 407
score: 98.82649230957031
patch: if ( ! c . is CaMeL Empty ( ) ) c = c ;
rank: 408
score: 99.17193312872024
patch: traverse ( c . get CaMeL Parent ( ) , c . get CaMeL Parent ( ) ) ; }
rank: 408
score: 99.0695331280048
patch: synchronized ( c . get CaMeL First CaMeL Child ( ) )
rank: 408
score: 98.88667805989583
patch: if ( c != null && ! c . is CaMeL Empty ( ) ) return ;
rank: 408
score: 98.86745383522727
patch: if ( c . traverse ( c ) ) ;
rank: 408
score: 98.8263651529948
patch: if ( ! traverse ( c ) ) { break ;
rank: 409
score: 99.17189534505208
patch: traverse ( c ) ; c = c . next ;
rank: 409
score: 99.14702690972223
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) !=
rank: 409
score: 99.09898158482143
patch: traverse ( c . get CaMeL Next ( ) , next ) ;
rank: 409
score: 98.88637288411458
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Message ( ) ) ;
rank: 409
score: 98.82606090198864
patch: if ( ! traverse ( n ) ) { public
rank: 410
score: 99.171689453125
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) , ; }
rank: 410
score: 99.1469970703125
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) ) ;
rank: 410
score: 99.08386948529412
patch: c = c == null ? null : c . get CaMeL Next ( ) ;
rank: 410
score: 99.04105834960937
patch: if ( node . get CaMeL First CaMeL Child ( ) != null ) traverse ( c ) ;
rank: 410
score: 98.88599795386905
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class CaMeL Name ( ) + $STRING$ ;
rank: 410
score: 98.86707305908203
patch: traverse ( c ) ; c = c . get CaMeL Length ( ) ;
rank: 410
score: 98.82596842447917
patch: if ( c != null ) ; c = c ;
rank: 411
score: 99.17104867788461
patch: traverse ( c , node . get CaMeL First CaMeL Child ( ) , node . get CaMeL Last CaMeL Child ( ) ) ;
rank: 411
score: 99.1468505859375
patch: if ( c . get CaMeL First CaMeL Child ( ) == null && c . get CaMeL First CaMeL Child ( )
rank: 411
score: 99.09839976917614
patch: traverse ( c , c . get CaMeL Next ( ) , c . get CaMeL Next ( ) ) ;
rank: 411
score: 99.0689364346591
patch: val = c . get CaMeL Next ( ) ;
rank: 411
score: 99.03983154296876
patch: if ( ! c . get CaMeL First CaMeL Child ( ) . equals ( null ) ) {
rank: 411
score: 98.88560546875
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Name ( ) + $STRING$ ;
rank: 411
score: 98.86692504882812
patch: traverse ( c ) ; c = 0 ;
rank: 411
score: 98.82594651442308
patch: if ( ! c . traverse ( c ) ) { ;
rank: 412
score: 99.17100016276042
patch: c = ( node . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) . ;
rank: 412
score: 99.07386538856908
patch: traverse ( c , ; c = ) c . get CaMeL Parent CaMeL Node ( ) ;
rank: 412
score: 99.0687255859375
patch: res = c . get CaMeL Next ( ) ; c = next ;
rank: 412
score: 99.03970772879464
patch: if ( node . get CaMeL Parent ( ) == null ) {
rank: 412
score: 98.88537176724138
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Class CaMeL Name ( ) ) ) {
rank: 412
score: 98.86679513113839
patch: traverse ( c , c ) ; this . c = c ;
rank: 413
score: 99.17085346422698
patch: traverse ( n ) ; c = c . get CaMeL First CaMeL Child ( ) ; }
rank: 413
score: 99.14607421875
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) . to CaMeL
rank: 413
score: 99.08330221737133
patch: Node next = next . get CaMeL Next ( ) ; traverse ( c ) ;
rank: 413
score: 98.88536071777344
patch: if ( c . is CaMeL Empty ( ) ) traverse ( c ) ;
rank: 413
score: 98.82516714242789
patch: if ( 0 != null ) { traverse ( c ) ;
rank: 414
score: 99.17080078125
patch: traverse ( ( Node ) c . get CaMeL Parent CaMeL Node ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 414
score: 99.1457050030048
patch: final Node next = node . get CaMeL Next ( ) ;
rank: 414
score: 99.09750366210938
patch: traverse ( c , next ) ;
rank: 414
score: 99.08329772949219
patch: c = n . get CaMeL Next ( ) ; traverse ( c ) ;
rank: 414
score: 99.07330322265625
patch: Node n = c . get CaMeL First CaMeL Child ( ) ; while ( n != null )
rank: 414
score: 99.0391512784091
patch: node = c . get CaMeL Parent ( ) ;
rank: 414
score: 98.88534780649039
patch: if ( ! n . is CaMeL Empty ( ) ) {
rank: 415
score: 99.17052504595588
patch: traverse ( ( ; c . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 415
score: 99.08323160807292
patch: visits ++ ; traverse ( c ) ;
rank: 415
score: 99.07303466796876
patch: traverse ( c , ; n = c . get CaMeL First CaMeL Child ( ) ) ; }
rank: 415
score: 99.06789143880208
patch: return = c . get CaMeL Next ( ) ; }
rank: 415
score: 99.03878348214286
patch: c = c . get CaMeL First CaMeL Child ( ) ) ;
rank: 415
score: 98.88532366071429
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) break ;
rank: 415
score: 98.86527506510417
patch: ) traverse ( c , c ) ;
rank: 415
score: 98.82509358723958
patch: try { traverse ( c + ) ;
rank: 416
score: 99.17043832632211
patch: traverse ( c , n . get CaMeL First CaMeL Child ( ) , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 416
score: 99.14527476917614
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) , c ) ;
rank: 416
score: 99.08311552159927
patch: c = c != null ? c . get CaMeL Next ( ) : null ;
rank: 416
score: 99.07298990885417
patch: c = c . get CaMeL First CaMeL Child ( ) ) ; }
rank: 416
score: 99.03812448601974
patch: if ( c . get CaMeL First CaMeL Child ( ) != null ) { break ; }
rank: 416
score: 98.88510964133523
patch: System . err . println ( $STRING$ + c . get CaMeL Class CaMeL Name ( ) + $STRING$ ) ;
rank: 416
score: 98.86492919921875
patch: traverse ( c , traverse ( c ) ) ; }
rank: 416
score: 98.82488458806819
patch: if ( traverse ( c ) ) ; return ;
rank: 417
score: 99.17043585526316
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) ) ; break ; }
rank: 417
score: 99.0830939797794
patch: traverse ( parent , node . get CaMeL First CaMeL Child ( ) ) ; }
rank: 417
score: 99.06776780348558
patch: while ( c . get CaMeL First CaMeL Child ( ) )
rank: 417
score: 99.03812255859376
patch: if ( ! node . get CaMeL First CaMeL Child ( ) . equals ( node ) ) {
rank: 417
score: 98.88488188244048
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class CaMeL Name ( ) + ) ;
rank: 417
score: 98.86483764648438
patch: traverse ( c , c ; traverse ( c ) ;
rank: 417
score: 98.82486666165866
patch: if ( c == null ) { traverse ( n ) ;
rank: 418
score: 99.17006613991477
patch: c = ( Node ) c . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 418
score: 99.14441499255952
patch: while ( c . get CaMeL First CaMeL Child ( ) != null ) { traverse ( c ) ;
rank: 418
score: 99.09642444957386
patch: c = node . get CaMeL Next ( ) ; c = c . get CaMeL Next ( ) ; }
rank: 418
score: 99.08238983154297
patch: Node next = null ; c = c . get CaMeL Next ( ) ;
rank: 418
score: 99.07211100260416
patch: if ( c . equals ( c ) ) traverse ( c ) ;
rank: 418
score: 99.03706577845982
patch: while ( c . get CaMeL Node ( ) != null ) {
rank: 418
score: 98.88461143092105
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Id ( ) + $STRING$ ;
rank: 418
score: 98.864013671875
patch: try ; traverse ( c ) ;
rank: 418
score: 98.82388305664062
patch: if ( ! traverse ( 1 ) ) { return ;
rank: 419
score: 99.16975483141448
patch: traverse ( ( Node ) c , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 419
score: 99.0947265625
patch: if ( node . get CaMeL First CaMeL Child ( ) == null && c . get CaMeL Next CaMeL
rank: 419
score: 99.08208869485294
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c ;
rank: 419
score: 99.07201038707386
patch: n = c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ; ;
rank: 419
score: 99.06711647727273
patch: g = c . get CaMeL Next ( ) ;
rank: 419
score: 99.03606305803571
patch: c = ( Node ) parent . get CaMeL Next ( ) ;
rank: 420
score: 99.14397872121711
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ==
rank: 420
score: 99.09470502068015
patch: if ( next != null ) next = c . get CaMeL Next ( ) ;
rank: 420
score: 99.071630859375
patch: n = c . get ( c ) ;
rank: 420
score: 99.06619262695312
patch: traverse ( c , node . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 420
score: 99.0360440340909
patch: if ( c . traverse ( node ) ) {
rank: 420
score: 98.88430606617646
patch: c = c . get CaMeL First CaMeL Child ( ) ; else return ; }
rank: 420
score: 98.86316448709239
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Value ( ) ;
rank: 421
score: 99.1694107055664
patch: traverse ( ( c . get CaMeL Parent CaMeL Node ( ) ) ) ;
rank: 421
score: 99.0942049893466
patch: traverse ( next . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) , node ) ;
rank: 421
score: 99.08196258544922
patch: traverse ( true ) ; c = c . get CaMeL Next ( ) ;
rank: 421
score: 99.06596235795455
patch: cell = c . get CaMeL Next ( ) ;
rank: 421
score: 99.03465924944196
patch: for ( Node c = c . get CaMeL Next ( ) ;
rank: 421
score: 98.88386753627232
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Name ( ) + $STRING$ ) ;
rank: 421
score: 98.82359900841347
patch: if ( 0 != n ) { traverse ( c ) ;
rank: 422
score: 99.1692364032452
patch: int n = c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . length ( ) ;
rank: 422
score: 99.14185442243304
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next ( ) . get CaMeL Next ( ) ) ;
rank: 422
score: 99.09379497327302
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , c . get CaMeL
rank: 422
score: 99.08189978966347
patch: traverse ( ! should CaMeL Retraverse ( c ) ) ;
rank: 422
score: 99.07145860460069
patch: traverse ( c , ( ) ) ;
rank: 422
score: 99.06536865234375
patch: Item next = c . get CaMeL Next ( ) ;
rank: 422
score: 98.8837890625
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) return ; }
rank: 422
score: 98.8626708984375
patch: traverse ( c , c ) ; System . out . println ( $STRING$ ) ;
rank: 422
score: 98.8235614483173
patch: if ( c == 0 ) ; traverse ( c ) ;
rank: 423
score: 99.169189453125
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) . get CaMeL Last CaMeL Sibling ( ) ) ;
rank: 423
score: 99.14185288373162
patch: visit ( c ) ; Node next = c . get CaMeL Next ( ) ;
rank: 423
score: 99.09310208834134
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) , visits ) ;
rank: 423
score: 99.08056640625
patch: Node [ ] node = c . get CaMeL First CaMeL Child ( ) ;
rank: 423
score: 99.06526906866776
patch: if ( c . get CaMeL Next ( ) . get CaMeL Node ( ) != null )
rank: 423
score: 98.88372605846774
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Type CaMeL Name ( ) ) ) {
rank: 423
score: 98.862060546875
patch: traverse ( ( ) c ) ;
rank: 423
score: 98.82355205829327
patch: if ( ! c . equals ( n ) ) { public
rank: 424
score: 99.169189453125
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 424
score: 99.08035481770834
patch: Node next = c . get CaMeL Next ( ) ; return next ;
rank: 424
score: 99.07020399305556
patch: traverse ( node ) ; c = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 424
score: 99.06488037109375
patch: ref = c . get CaMeL Next ( ) ; }
rank: 424
score: 98.88362260298295
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { }
rank: 424
score: 98.86138446514423
patch: c = c . c ; traverse ( c ) ; }
rank: 424
score: 98.82295365767045
patch: if ( ! traverse ( c ) ) { )
rank: 425
score: 99.0927734375
patch: c = c . get CaMeL Next ( ) : c ;
rank: 425
score: 99.079345703125
patch: Child c = c . get CaMeL Next ( ) ; traverse ( c ) ;
rank: 425
score: 99.0648193359375
patch: return c . get CaMeL Last CaMeL Child ( ) ; }
rank: 425
score: 98.88357421875
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) break ; }
rank: 425
score: 98.86036682128906
patch: if ( c . contains ( c ) ) { traverse ( c ) ;
rank: 425
score: 98.82291353665866
patch: if ( ! < n ) { traverse ( c ) ;
rank: 426
score: 99.16878255208333
patch: traverse ( c , c . ; c = c . get CaMeL First CaMeL Child ( ) ) ;
rank: 426
score: 99.14125279017857
patch: if ( c . get CaMeL First CaMeL Child ( ) != null ) { traverse ( node ) ;
rank: 426
score: 99.09194548233695
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) true ) ;
rank: 426
score: 99.07928466796875
patch: Next next = c . get CaMeL Next ( ) ; c = next ;
rank: 426
score: 99.06993756975446
patch: v = c . get CaMeL First CaMeL Child ( ) ; }
rank: 426
score: 99.06451416015625
patch: path = c . get CaMeL First CaMeL Child ( ) ; }
rank: 426
score: 98.88291015625
patch: if ( c . get CaMeL Id ( ) == c . get CaMeL Id ( ) ) {
rank: 426
score: 98.86003112792969
patch: traverse ( null , c ) ;
rank: 426
score: 98.8228251139323
patch: if ( null != c ) traverse ( c ) ;
rank: 427
score: 99.16869178185097
patch: c = c . get CaMeL Parent CaMeL Node ( ) ; c = c . get CaMeL Parent CaMeL Node ( ) ; }
rank: 427
score: 99.0792236328125
patch: visit ( c , node . get CaMeL First CaMeL Child ( ) ) ; }
rank: 427
score: 99.06951904296875
patch: c = c . get ; traverse ( c ) ;
rank: 427
score: 99.0643798828125
patch: System . out . println ( $STRING$ + c . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 427
score: 99.0320536295573
patch: Node next = node . get CaMeL Parent ( ) ;
rank: 427
score: 98.88287712545956
patch: if ( c . get CaMeL Name ( ) . length ( ) == 0 )
rank: 427
score: 98.8599520596591
patch: traverse ( c ) ; c = c ; ;
rank: 427
score: 98.82266939603366
patch: if ( false ) { traverse ( c , c ) ;
rank: 428
score: 99.16823167067308
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 428
score: 99.09130859375
patch: c = c . get CaMeL Next ( ) . get CaMeL Next ( ) ; return
rank: 428
score: 99.078857421875
patch: exit = c . get CaMeL Next ( ) ; }
rank: 428
score: 99.0686767578125
patch: if ( c . get CaMeL Parent CaMeL Node ( ) == c )
rank: 428
score: 99.06414325420673
patch: try { c . get CaMeL First CaMeL Child ( ) ;
rank: 428
score: 99.03202681107955
patch: visits = node . get CaMeL Next ( ) ;
rank: 428
score: 98.88260904947917
patch: if ( ! c . is CaMeL Empty ( ) ) { ; }
rank: 428
score: 98.85989815848214
patch: traverse ( c ) ; c = c . this ( ) ;
rank: 428
score: 98.82245551215277
patch: traverse ( c && c == ) ;
rank: 429
score: 99.14060546875
patch: if ( c . get CaMeL First CaMeL Child ( ) == null && c . get CaMeL First CaMeL Child ( ) instanceof
rank: 429
score: 99.0787823016827
patch: traverse ( . get CaMeL Next ( ) , node ) ;
rank: 429
score: 99.06849429481908
patch: traverse ( c , ; c . ; c = c . get CaMeL Next ( ) ;
rank: 429
score: 98.88253963694854
patch: if ( ! c . equals ( c . get CaMeL Name ( ) ) )
rank: 429
score: 98.85964626736111
patch: traverse ( ! c . get CaMeL Parent ( ) ) ; traverse ( c ) ;
rank: 429
score: 98.82228597005208
patch: if ( ! != $NUMBER$ ) traverse ( c ) ;
rank: 430
score: 99.07825724283855
patch: c next = c . get CaMeL Next ( ) ;
rank: 430
score: 99.06832885742188
patch: traverse ( c , ; ; c = c . get CaMeL First CaMeL Child ( ) ) ;
rank: 430
score: 99.06341145833333
patch: v = c . get CaMeL Next ( ) ; c = next ;
rank: 430
score: 98.88219033518145
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Property CaMeL Type ( ) ) ) ;
rank: 430
score: 98.85944281684027
patch: c ( traverse ( c ) ) ;
rank: 430
score: 98.82215711805556
patch: if ( c != c ) { public
rank: 431
score: 99.16664225260416
patch: c = ( ) c . get CaMeL Parent CaMeL Node ( ) ;
rank: 431
score: 99.13963782269022
patch: traverse ( node . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) ; }
rank: 431
score: 99.09018283420139
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , 1 ) ;
rank: 431
score: 99.077392578125
patch: c = this . get CaMeL Next ( ) ;
rank: 431
score: 99.06797485351562
patch: if ( ! Character . is CaMeL Digit ( c . char CaMeL At ( 0 ) ) )
rank: 431
score: 98.85921630859374
patch: c = c . get CaMeL First CaMeL Child ( ) ; try { traverse ( c ) ;
rank: 432
score: 99.16652318050987
patch: traverse ( c ) ; n = c . get CaMeL Parent CaMeL Node ( ) ; }
rank: 432
score: 99.1394512469952
patch: return ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) . get CaMeL Value ( ) ) ;
rank: 432
score: 99.0891621907552
patch: traverse ( next . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , n ) ;
rank: 432
score: 99.07661946614583
patch: c = Node . get CaMeL Next ( c ) ;
rank: 432
score: 99.06771047491776
patch: Node node = c . get CaMeL First CaMeL Child ( ) ; traverse ( node ) ;
rank: 432
score: 99.02895100911458
patch: Node c = c . get CaMeL Root ( ) ;
rank: 432
score: 98.88153948102679
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( node . get CaMeL Name ( ) ) ) return ;
rank: 432
score: 98.859130859375
patch: traverse ( c ? c ; traverse ( c ) ;
rank: 432
score: 98.82158954326923
patch: if ( c != 0 ) ; traverse ( c ) ;
rank: 433
score: 99.16627720424107
patch: int index = c . get CaMeL First CaMeL Child ( ) ;
rank: 433
score: 99.13919503348214
patch: Node type = c . get CaMeL First CaMeL Child ( ) ;
rank: 433
score: 99.08910193810097
patch: try { next = next . get CaMeL Next ( ) ;
rank: 433
score: 99.06754150390626
patch: traverse ( c ) ; c = c . get CaMeL Last CaMeL Child ( ) ; } }
rank: 433
score: 99.06277126736111
patch: int c = c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL
rank: 433
score: 98.88142195991848
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c ) ) ;
rank: 433
score: 98.821533203125
patch: if ( n != 0 ) { public
rank: 434
score: 99.165771484375
patch: traverse ( c ) ; c = c . get CaMeL First CaMeL Child ( ) ; break ;
rank: 434
score: 99.13902372472427
patch: traverse ( c ) ; Node next = next . get CaMeL Next ( ) ;
rank: 434
score: 99.07559204101562
patch: c node = c . get CaMeL Next ( ) ;
rank: 434
score: 99.06752366286058
patch: traverse ( c , ; ; c = c . ; }
rank: 434
score: 99.06245930989583
patch: int n = c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL
rank: 434
score: 99.02841668379934
patch: traverse ( c ) ; Node next = c . get CaMeL First CaMeL Child ( ) ;
rank: 434
score: 98.8814113451087
patch: if ( node . get CaMeL Name ( ) . equals ( node . get CaMeL Id ( ) ) ) {
rank: 434
score: 98.85811614990234
patch: traverse ( c ) ; c = c . get CaMeL Type ( ) ;
rank: 434
score: 98.82150268554688
patch: if ( c != length ) traverse ( c ) ;
rank: 435
score: 99.16565659466912
patch: c = ( Node ) c ) . get CaMeL First CaMeL Child ( ) ;
rank: 435
score: 99.0888671875
patch: traverse ( node , node . get CaMeL First CaMeL Child ( ) , node . get CaMeL First CaMeL Child ( ) ) ;
rank: 435
score: 99.07529860276442
patch: visit ( c . get CaMeL Next ( ) ) ; }
rank: 435
score: 99.06721635298295
patch: n = c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 435
score: 99.06171264648438
patch: Symbol c = c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ;
rank: 435
score: 99.02839878627232
patch: traverse ( c . get CaMeL Parent ( ) , node ) ;
rank: 435
score: 98.881240234375
patch: throw new Runtime CaMeL Exception ( c . get CaMeL Message ( $STRING$ , c . get CaMeL Name ( ) ) ) ;
rank: 435
score: 98.8579989346591
patch: traverse ( node , traverse ( node ) ) ;
rank: 435
score: 98.82083834134616
patch: traverse ( c == null && traverse ( c ) ) ;
rank: 436
score: 99.16546161358173
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL Current CaMeL Node ( ) ) ;
rank: 436
score: 99.13815146998355
patch: if ( node . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) instanceof
rank: 436
score: 99.08882649739583
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Next ( ) ; }
rank: 436
score: 99.07525634765625
patch: traverse ] = node . get CaMeL Next ( ) ;
rank: 436
score: 99.06669108072917
patch: short type = c . get CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 436
score: 99.06167602539062
patch: if ( c . should CaMeL Visit ( ) ) {
rank: 436
score: 98.88123779296875
patch: } else { traverse ( c ) ; }
rank: 436
score: 98.857080078125
patch: traverse ( c && node . get CaMeL Type ( ) == ) ;
rank: 436
score: 98.82077858664773
patch: traverse ( c == null ? c : c ;
rank: 437
score: 99.16497333233173
patch: traverse ( ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) , c ) ;
rank: 437
score: 99.13805280412946
patch: traverse ( column = c . get CaMeL Next ( ) ) ;
rank: 437
score: 99.07521158854166
patch: c = c != null && parent . get CaMeL Next ( ) ;
rank: 437
score: 99.06150309244792
patch: Item c = c . get CaMeL Next ( ) ;
rank: 437
score: 98.88117781929348
patch: if ( ! node . get CaMeL Name ( ) . equals ( c . get CaMeL Name ( ) ) )
rank: 437
score: 98.85706438337054
patch: traverse ( c || c . size ( ) == 0 ) ;
rank: 437
score: 98.82045676491477
patch: if ( 0 ) { traverse ( c ) ;
rank: 438
score: 99.16496839021382
patch: if ( c . get CaMeL Type ( ) != c . get CaMeL Type ( ) )
rank: 438
score: 99.13775956003289
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Value ( ) instanceof
rank: 438
score: 99.07413423978366
patch: if ( ! should CaMeL Retraverse ( node ) ) {
rank: 438
score: 99.0665283203125
patch: node = c . get CaMeL First CaMeL Child ( ) ; } traverse ( c ) ;
rank: 438
score: 99.06111653645833
patch: C next = c . get CaMeL Next ( ) ;
rank: 438
score: 98.8808260830966
patch: if ( ! node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) ;
rank: 438
score: 98.85702514648438
patch: traverse ( c ) ; traverse ( c ) ; ;
rank: 438
score: 98.82023111979167
patch: if ( true ) traverse ( c , c ) ;
rank: 439
score: 99.13771565755208
patch: Node end = c . get CaMeL Next ( ) ;
rank: 439
score: 99.0731201171875
patch: node . get CaMeL First CaMeL Child ( ) ;
rank: 439
score: 99.06647406684027
patch: Node c = c . get CaMeL First CaMeL Child ( ) ; if ( c )
rank: 439
score: 99.06102498372395
patch: Tree next = c . get CaMeL Next ( ) ;
rank: 439
score: 99.02467447916666
patch: while ( c . get CaMeL First CaMeL Child ( ) == null )
rank: 439
score: 98.88032836914063
patch: if ( ! c . get CaMeL Type ( ) . is CaMeL Empty ( ) ) break ;
rank: 439
score: 98.85635196461396
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( true )
rank: 439
score: 98.8193868001302
patch: if ( n == ) { traverse ( c ) ;
rank: 440
score: 99.136962890625
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next = c . get CaMeL Next ( ) ) ;
rank: 440
score: 99.08727496603261
patch: c = c . get CaMeL Next ( ) ; c = c . get CaMeL Last CaMeL Child ( ) ;
rank: 440
score: 99.06064675071023
patch: container = c . get CaMeL Next ( ) ;
rank: 440
score: 99.02444893973214
patch: if ( c = c . get CaMeL Next ( ) ) {
rank: 440
score: 98.88018035888672
patch: traverse ( current , c ) ;
rank: 440
score: 98.85563151041667
patch: c = c . get ( c ) ; traverse ( c ) ;
rank: 440
score: 98.81930541992188
patch: traverse ( c ) ; traverse ( c ) ) ;
rank: 441
score: 99.16402004076087
patch: int index = c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . ;
rank: 441
score: 99.13663736979167
patch: if ( node . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) instanceof
rank: 441
score: 99.0723876953125
patch: c = index . get CaMeL Next ( ) ;
rank: 441
score: 99.06556803385416
patch: if ( c . get CaMeL Parent CaMeL Node ( ) == null )
rank: 441
score: 99.06032307942708
patch: if ( c . has CaMeL Next ( ) ) {
rank: 441
score: 98.87965494791666
patch: if ( ! c . is CaMeL Instance ( c ) ) break ;
rank: 441
score: 98.85558064778645
patch: } traverse ( c ) ; traverse ( c ) ;
rank: 441
score: 98.81927490234375
patch: if ( ! != c ) { c = c ;
rank: 442
score: 99.16368865966797
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , parent ) ;
rank: 442
score: 99.13617302389706
patch: if ( c . get CaMeL First CaMeL Child ( ) != null ) node .
rank: 442
score: 99.08687918526786
patch: else { c = c . get CaMeL Next ( ) ; }
rank: 442
score: 99.07230870863971
patch: traverse ( c ) ; node = c . get CaMeL Next ( ) ; }
rank: 442
score: 99.06521124588816
patch: Element c = c . get CaMeL First CaMeL Child ( ) ; traverse ( c ) ;
rank: 442
score: 99.05991617838542
patch: Symbol c = c . get CaMeL Parent ( ) ;
rank: 442
score: 99.02396065848214
patch: return = c . get CaMeL First CaMeL Child ( ) ; }
rank: 442
score: 98.8553975423177
patch: traverse ( get CaMeL Node ( c ) ) ; }
rank: 442
score: 98.81917572021484
patch: if ( ! c . iterator ( ) . equals ( c ) ) {
rank: 443
score: 99.16361276726974
patch: while ( ( c = c . get CaMeL First CaMeL Child ( ) ) != null )
rank: 443
score: 99.13600667317708
patch: Node next = input . get CaMeL Next ( ) ;
rank: 443
score: 99.086669921875
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , c ;
rank: 443
score: 99.06494750976563
patch: traverse ( c , ; c = ) c . get CaMeL First CaMeL Child ( ) ; }
rank: 443
score: 98.87947221235795
patch: if ( ! c . is CaMeL Empty ( ) || c . is CaMeL Empty ( ) ) return ;
rank: 443
score: 98.85511997767857
patch: traverse ( ! c . get CaMeL Parent ( ) ) ; }
rank: 443
score: 98.81882149832589
patch: if ( c != null ) { traverse ( c ) ; ;
rank: 444
score: 99.16352844238281
patch: traverse ( c . get CaMeL Last CaMeL Child ( ) , c ) ;
rank: 444
score: 99.13600441261575
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL Value ( ) instanceof
rank: 444
score: 99.08652750651042
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , index ) ;
rank: 444
score: 99.07007774939903
patch: traverse ( node . get CaMeL Next ( ) ) ; }
rank: 444
score: 99.064892578125
patch: traverse ( node , ; c = c . get CaMeL First CaMeL Child ( ) ) ; }
rank: 444
score: 99.0594991048177
patch: Decl node = c . get CaMeL Next ( ) ;
rank: 444
score: 98.87929899796195
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) ; return ;
rank: 444
score: 98.85503829152961
patch: c = c . get CaMeL Instance ( c ) ; c . traverse ( c ) ;
rank: 444
score: 98.81850022536058
patch: if ( ! < c ) { traverse ( c ) ;
rank: 445
score: 99.16348970853366
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL Parent CaMeL Node ( ) . get ) ;
rank: 445
score: 99.13555586965461
patch: Node c = ( ( Node ) c ) . get CaMeL First CaMeL Child ( ) ;
rank: 445
score: 99.08650346235795
patch: traverse ( c . get CaMeL Next ( ) . get CaMeL First CaMeL Child ( ) , n ) ;
rank: 445
score: 99.06993103027344
patch: c . traverse ( c ) ;
rank: 445
score: 99.06462016858552
patch: traverse ( c ) ; ; c = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 445
score: 98.87892456054688
patch: traverse ( c ) ; } return * /
rank: 445
score: 98.85486778846153
patch: traverse ( node , node ) ; traverse ( c ) ;
rank: 445
score: 98.81831577845982
patch: if ( ! != c ) { traverse ( c ) ; }
rank: 446
score: 99.13530815972223
patch: if ( node . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) instanceof
rank: 446
score: 99.06391834077381
patch: if ( ! Character . is CaMeL Digit ( c . char CaMeL At ( 0 ) ) ) {
rank: 446
score: 99.05927068536931
patch: mod = c . get CaMeL Next ( ) ;
rank: 446
score: 99.02118474786931
patch: node = parent . get CaMeL Next ( ) ;
rank: 446
score: 98.8788833618164
patch: traverse ( c ) ; type = c . get CaMeL Id ( ) ;
rank: 446
score: 98.8547607421875
patch: System . out . println ( $STRING$ ) ; traverse ( node ) ;
rank: 446
score: 98.8182861328125
patch: if ( c != null ) { traverse ( c , 1 ) ;
rank: 447
score: 99.08627464657738
patch: if ( node . get CaMeL First CaMeL Child ( ) != null || c . get CaMeL Next CaMeL
rank: 447
score: 99.067626953125
patch: traverse ( c . get ( c ) ) ;
rank: 447
score: 99.06338500976562
patch: traverse ( c , ; c = c ) ; }
rank: 447
score: 98.8787777549342
patch: traverse ( c ) ; } c = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 447
score: 98.8544452373798
patch: traverse ( c ) ; traverse ( c ) ; ) ;
rank: 447
score: 98.81641438802083
patch: if ( ! c . iterator ( ) . iterator ( ) . else
rank: 448
score: 99.16245339133523
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL Root ( ) ) ;
rank: 448
score: 99.08612060546875
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , index ) ;
rank: 448
score: 99.06693761488971
patch: Node c = c . get CaMeL Next ( ) ; traverse ( node ) ;
rank: 448
score: 99.06333618164062
patch: traverse ( c , c , this ) ;
rank: 448
score: 99.0572509765625
patch: target = c . get CaMeL Next ( ) ; c = next ;
rank: 448
score: 98.87870456861413
patch: if ( ! node . get CaMeL Name ( ) . equals ( node . get CaMeL Id ( ) ) )
rank: 448
score: 98.85435267857143
patch: traverse ( traverse ( c ) ) ; traverse ( c ) ;
rank: 448
score: 98.81576538085938
patch: if ( ! traverse ( n , c ) ) {
rank: 449
score: 99.16244303385416
patch: traverse ( c . get CaMeL Root CaMeL Node ( ) ) ; }
rank: 449
score: 99.13473992598684
patch: c = ( Node ) next ( c . get CaMeL First CaMeL Child ( ) ) ;
rank: 449
score: 99.08601518110795
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) , true ) ;
rank: 449
score: 99.0632080078125
patch: traverse ( c , ) ; break ; }
rank: 449
score: 98.87869698660714
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( node ) ) {
rank: 449
score: 98.85425567626953
patch: traverse ( c ) ; c = c . get CaMeL Instance ( ) ;
rank: 449
score: 98.8156005859375
patch: if ( ! c . equals ( c ) ) { return ; }
rank: 450
score: 99.16234290081522
patch: c = ( c . get CaMeL First CaMeL Child ( ) ) . get CaMeL Last CaMeL Sibling ( ) ;
rank: 450
score: 99.13462611607143
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Last CaMeL Child ( ) instanceof
rank: 450
score: 99.08566720145089
patch: visit ( c . get CaMeL Next ( ) , null ) ;
rank: 450
score: 99.06300048828125
patch: Node c = c . get CaMeL First CaMeL Child ( ) ; if ( c == null )
rank: 450
score: 99.05696244673295
patch: k = c . get CaMeL Next ( ) ;
rank: 450
score: 98.87864467075893
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) continue ;
rank: 450
score: 98.8542251586914
patch: traverse ( c ) ; System . out . println ( $STRING$ ) ; }
rank: 450
score: 98.81558931790866
patch: if ( c != null && traverse ( c ) ) {
rank: 451
score: 99.16224083533653
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL First CaMeL Child ( ) ; }
rank: 451
score: 99.08546549479166
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) ,
rank: 451
score: 99.06287841796875
patch: if ( c . get CaMeL Name ( ) . equals ( c . get CaMeL Name ) )
rank: 451
score: 99.05692291259766
patch: traverse ( c || c . get CaMeL First CaMeL Child ( ) ) ;
rank: 451
score: 99.0174560546875
patch: while ( node . get CaMeL Parent ( ) != null ) {
rank: 451
score: 98.87847222222223
patch: if ( ! node . get CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 451
score: 98.85379028320312
patch: traverse ( c || c . get CaMeL Type ( ) == $STRING$ ) ;
rank: 451
score: 98.81551920572916
patch: if ( ! c . iterator ( ) . iterator ( c ) .
rank: 452
score: 99.16217912946429
patch: int n = c . get CaMeL First CaMeL Child ( ) . index CaMeL Of ( $STRING$ ) ;
rank: 452
score: 99.13434709821429
patch: if ( c . get CaMeL First CaMeL Child ( ) != null ) . traverse ( c ) ;
rank: 452
score: 99.0849376860119
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) , ) ;
rank: 452
score: 99.06282552083333
patch: if ( c . get CaMeL Name ( ) . equals ( $STRING$ ) ) continue ;
rank: 452
score: 99.05687662760417
patch: if ( c . get CaMeL First CaMeL Child ( ) != 0 )
rank: 452
score: 98.87841796875
patch: if ( ! c . is CaMeL Empty ( ) ) { continue ; }
rank: 452
score: 98.853759765625
patch: traverse ( c , c ) ; c = null ;
rank: 452
score: 98.81549072265625
patch: if ( c != ) { return ;
rank: 453
score: 99.162109375
patch: traverse ( c , c . traverse ( c . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 453
score: 99.08444448617789
patch: final Node next = n . get CaMeL Next ( ) ;
rank: 453
score: 99.064208984375
patch: c = node . get CaMeL Next ( ) : null ;
rank: 453
score: 99.06282552083333
patch: traverse ( c , ; ; c = c . get CaMeL First CaMeL Child ( ) ) ; }
rank: 453
score: 99.05647786458333
patch: return c . get CaMeL First CaMeL Child ( ) ; } visit ( node ) ;
rank: 453
score: 99.01609584263393
patch: if ( c . get CaMeL Nodes ( ) != null ) {
rank: 453
score: 98.87837942023026
patch: if ( ! c . is CaMeL Instance ( c . get CaMeL Name ( ) ) )
rank: 453
score: 98.85372161865234
patch: traverse ( c , line ) ;
rank: 453
score: 98.81527944711539
patch: if ( ! c . size ( ) != 1 ) {
rank: 454
score: 99.13396484375
patch: if ( node . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL Containing CaMeL
rank: 454
score: 99.08425668569711
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 454
score: 99.06284466911765
patch: traverse ( null , c . get CaMeL First CaMeL Child ( ) ) ; }
rank: 454
score: 99.06253051757812
patch: traverse ( c , null , true ) ;
rank: 454
score: 99.01601155598958
patch: Node node = node . get CaMeL Next ( ) ;
rank: 454
score: 98.87837071572581
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL String CaMeL Value ( ) ) ) {
rank: 454
score: 98.85371398925781
patch: traverse ( c && node . get CaMeL Type ( ) != $STRING$ ) ;
rank: 454
score: 98.81478881835938
patch: if ( 1 != c ) traverse ( c ) ;
rank: 455
score: 99.16162109375
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , false ) ;
rank: 455
score: 99.08407592773438
patch: if ( c != null ) { for (
rank: 455
score: 99.05641867897727
patch: fs = c . get CaMeL Next ( ) ;
rank: 455
score: 98.87819066540948
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Type CaMeL Name ( ) ) ) {
rank: 455
score: 98.853369140625
patch: traverse ( c , c ) ; ) ; traverse ( c ) ;
rank: 455
score: 98.8146503155048
patch: if ( ! c . equals ( ) ) { return ;
rank: 456
score: 99.13318401834239
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL
rank: 456
score: 99.08381791548295
patch: j = c . get CaMeL Next ( ) ;
rank: 456
score: 99.0621337890625
patch: if ( c == ; c = c . get CaMeL Last CaMeL Child ( ) )
rank: 456
score: 99.05633075420673
patch: return { c . get CaMeL First CaMeL Child ( ) ;
rank: 456
score: 99.01416954627403
patch: final Node c = node . get CaMeL Next ( ) ;
rank: 456
score: 98.87799072265625
patch: if ( traverse ( c , c ) )
rank: 456
score: 98.85334916548295
patch: traverse ( c ) ; start ( c ) ;
rank: 456
score: 98.81429349459134
patch: if ( ! == n ) { traverse ( c ) ;
rank: 457
score: 99.16138634314903
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Last CaMeL Child ( ) ) ; break ;
rank: 457
score: 99.08340454101562
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Line ( ) ) ;
rank: 457
score: 99.06181408110119
patch: traverse ( c ) ; c = c . get CaMeL First CaMeL Child ( ) ; break ; }
rank: 457
score: 99.05623168945313
patch: if ( c . get CaMeL Next ( ) . get CaMeL First CaMeL Child ( ) ) {
rank: 457
score: 98.87797715928819
patch: if ( c . get CaMeL Name ( ) . equals ( $STRING$ ) ) return ;
rank: 457
score: 98.852880859375
patch: traverse ( c , c ) ; this . traverse ( node ) ;
rank: 457
score: 98.81424967447917
patch: if ( c == 1 ) traverse ( c ) ;
rank: 458
score: 99.08334011501736
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , this ) ;
rank: 458
score: 99.06177920386905
patch: Node c = c . get CaMeL First CaMeL Child ( ) ; traverse ( c , c ) ;
rank: 458
score: 99.06094180836396
patch: c = c . get CaMeL Next ( ) ; } visit ( c ) ;
rank: 458
score: 98.87785200639205
patch: traverse ( c ) ; } return - 1 ;
rank: 458
score: 98.85260009765625
patch: traverse ( c && c . get CaMeL Type ( ) == $STRING$ ) ;
rank: 458
score: 98.81388346354167
patch: traverse ( c ) ; ) ; }
rank: 459
score: 99.16105821397569
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , c . ;
rank: 459
score: 99.13177897135417
patch: Node c = next ( c . get CaMeL Next ( ) ) ;
rank: 459
score: 99.06095805921052
patch: Object n = c . get CaMeL First CaMeL Child ( ) ; traverse ( c ) ;
rank: 459
score: 99.06068725585938
patch: traverse ( c , next ( ) ) ;
rank: 459
score: 99.055419921875
patch: boolean next = c . get CaMeL Next ( ) ;
rank: 459
score: 99.01378455528847
patch: c = c . get CaMeL Next ( ) ; do {
rank: 459
score: 98.87759164663461
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . to CaMeL String ( ) ) ;
rank: 459
score: 98.85256060431985
patch: traverse ( c , c ) ; logger . out . println ( c ) ;
rank: 459
score: 98.81346638997395
patch: if ( ! c . equals ( n ) ) ;
rank: 460
score: 99.1610107421875
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , true ) ;
rank: 460
score: 99.06095805921052
patch: if ( c . ; c = c . get CaMeL First CaMeL Child ( ) ) ;
rank: 460
score: 99.05497602982955
patch: itr = c . get CaMeL Next ( ) ;
rank: 460
score: 98.85198419744319
patch: traverse ( c ) ; traverse ( null ) ;
rank: 460
score: 98.81342022235577
patch: if ( c != null ) { c = c ; }
rank: 461
score: 99.16080729166667
patch: traverse ( ) ; c = c . get CaMeL Last CaMeL Child ( ) ; }
rank: 461
score: 99.08231026785714
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next -- ) ;
rank: 461
score: 99.06084883840461
patch: n = c . get CaMeL First CaMeL Child ( ) ; } traverse ( c , ;
rank: 461
score: 99.05482991536458
patch: return next = c . get CaMeL Next ( ) ;
rank: 461
score: 99.01229154146634
patch: traverse ( node , should CaMeL Visit ( c ) ) ;
rank: 461
score: 98.8133544921875
patch: if ( ( traverse ( c ) ) ) {
rank: 462
score: 99.16070877878289
patch: traverse ( traverse ( c , c . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 462
score: 99.12913004557292
patch: if ( c . get CaMeL First CaMeL Child ( ) == null ) visits ++ ;
rank: 462
score: 99.05965383429276
patch: traverse ( c ) ; ; c = c . get CaMeL Last CaMeL Child ( ) ;
rank: 462
score: 99.05409240722656
patch: for ( Node c : c . get CaMeL First CaMeL Child ( ) )
rank: 462
score: 98.85091145833333
patch: traverse ( c , c ) ; c ( ) ;
rank: 463
score: 99.16043223505434
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL Parent ( ) ) ; }
rank: 463
score: 99.082275390625
patch: next = c . get CaMeL Next ( ) ; break ;
rank: 463
score: 99.05940326891448
patch: if ( c != null && c . get CaMeL Parent CaMeL Node ( ) != null )
rank: 463
score: 99.05397727272727
patch: C = c . get CaMeL Next ( ) ;
rank: 463
score: 99.00999959309895
patch: traverse ( node . get CaMeL Parent ( ) ) ;
rank: 463
score: 98.87612769717262
patch: System . err . println ( $STRING$ + c . get CaMeL Id ( ) ) ; break ; }
rank: 463
score: 98.81318664550781
patch: if ( ! c . iterator ( ) . iterator ( c ) . else
rank: 464
score: 99.16032270951705
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) ) ;
rank: 464
score: 99.12838924632354
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , node , ) ;
rank: 464
score: 99.08188205295139
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , node , n ) ;
rank: 464
score: 99.05927734375
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( c != null ) {
rank: 464
score: 99.05391235351563
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) != )
rank: 464
score: 98.87611299402573
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) ;
rank: 464
score: 98.85063244047619
patch: c = c . get CaMeL Value ( ) ; c = c . get CaMeL Value ( ) ;
rank: 464
score: 98.81307983398438
patch: if ( ! c . length ( ) ) { traverse ( c ) ;
rank: 465
score: 99.16013405539773
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL Name ( ) ) ;
rank: 465
score: 99.08141508556548
patch: traverse ( c , node . get CaMeL First CaMeL Child ( ) , node . get CaMeL Next CaMeL
rank: 465
score: 99.05921630859375
patch: Node c = c . get CaMeL First CaMeL Child ( ) ; while ( c != null )
rank: 465
score: 99.05356959292763
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) )
rank: 465
score: 98.87562216481855
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Value CaMeL Type ( ) ) ) {
rank: 465
score: 98.85036996694711
patch: traverse ( c ) ; ; else traverse ( c ) ;
rank: 465
score: 98.8129374186198
patch: if ( false ) traverse ( c , c ) ;
rank: 466
score: 99.16012234157986
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) ) ; return ;
rank: 466
score: 99.08110961914062
patch: traverse ( c . get CaMeL Next ( ) . get CaMeL Next ( ) , node ) ;
rank: 466
score: 99.05919596354167
patch: node = c . get CaMeL First CaMeL Child ( ) ; break ;
rank: 466
score: 99.05440266927083
patch: c = c . get CaMeL Next ( c ) ;
rank: 466
score: 99.05343017578124
patch: Object c = c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) ;
rank: 466
score: 99.0069351196289
patch: if ( n != null ) {
rank: 466
score: 98.87549990699405
patch: System . out . println ( $STRING$ + c . get CaMeL Id ( ) ) ; break ; }
rank: 466
score: 98.84975022536058
patch: ) { traverse ( c ) ; traverse ( c ) ;
rank: 466
score: 98.81267438616071
patch: if ( ! c . length ( ) ) { return ; }
rank: 467
score: 99.08109907670455
patch: c = c . get CaMeL Next ( ) ; c = n . get CaMeL Next ( ) ; }
rank: 467
score: 99.05904715401786
patch: traverse ( c , ; c . traverse ( c ) ) ;
rank: 467
score: 99.0533447265625
patch: children = c . get CaMeL First CaMeL Child ( ) ; }
rank: 467
score: 99.05055588942308
patch: node != null && c . get CaMeL Next ( ) ;
rank: 467
score: 98.87546608664773
patch: result = c . get CaMeL Parent ( ) ;
rank: 467
score: 98.84786826685855
patch: traverse ( c || c . get CaMeL Type ( ) . equals ( $STRING$ ) ) ;
rank: 467
score: 98.8125508626302
patch: if ( ) { traverse ( c , c ) ;
rank: 468
score: 99.15967735877403
patch: traverse ( c , c . traverse ( this ) ) ;
rank: 468
score: 99.05895182291667
patch: if ( c . get CaMeL Type ( ) == Node . ) {
rank: 468
score: 99.05328979492188
patch: Symbol visits = c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ;
rank: 468
score: 99.04949396306819
patch: traverse = node . get CaMeL Next ( ) ;
rank: 468
score: 98.84735107421875
patch: c = c . get CaMeL First CaMeL Child ( ) ; while ( true ) ;
rank: 469
score: 99.15950150923295
patch: System . out . println ( c ) ; c = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 469
score: 99.12689887152777
patch: traverse ( c && c . get CaMeL First CaMeL Child ( ) == null ) ;
rank: 469
score: 99.08078002929688
patch: traverse ( c , c . get CaMeL Next ( ) , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 469
score: 99.05258178710938
patch: Iterator n = c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ;
rank: 469
score: 99.00194295247395
patch: c = this . get CaMeL Next ( c ) ;
rank: 469
score: 98.84696960449219
patch: c = c . get CaMeL First CaMeL Child ( ) ; ) { ;
rank: 469
score: 98.81235914963942
patch: if ( n != 1 ) { traverse ( c ) ;
rank: 470
score: 99.15925428602431
patch: c = c . get CaMeL Parent ( ) . get CaMeL Parent ( ) ; }
rank: 470
score: 99.05853826349431
patch: if ( c . get CaMeL Class CaMeL Name ( ) . equals ( c . get CaMeL Class ) )
rank: 470
score: 99.05246869255515
patch: type = c . get CaMeL First CaMeL Child ( ) ; c = next ;
rank: 470
score: 98.8748046875
patch: if ( ! c . is CaMeL Instance ( c . get CaMeL Name ( ) ) ) {
rank: 471
score: 99.15921783447266
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , 0 ) ;
rank: 471
score: 99.0801669034091
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) , false ) ;
rank: 471
score: 99.05797400841347
patch: traverse ( c ) ; c = c . ; } }
rank: 471
score: 99.05098470052083
patch: Doc next = c . get CaMeL Next ( ) ;
rank: 471
score: 98.87476427801724
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Class CaMeL Name ( ) ) ) ;
rank: 471
score: 98.84641676682692
patch: traverse ( c , c ) ; traverse ( true ) ;
rank: 471
score: 98.81126912434895
patch: if ( c != null ) { ) return ; }
rank: 472
score: 99.15913899739583
patch: traverse ( c ) ; c = c . parent ;
rank: 472
score: 99.12633260091145
patch: Node c = current . get CaMeL Next ( ) ;
rank: 472
score: 99.05776541573661
patch: c = c . get CaMeL Parent CaMeL Node ( ) ; ;
rank: 472
score: 99.05035400390625
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c
rank: 472
score: 99.04834923377403
patch: c . type = node . get CaMeL Next ( ) ;
rank: 472
score: 98.9957784016927
patch: c = c . get CaMeL Node ( c ) ;
rank: 472
score: 98.87454659598214
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Type CaMeL Name ( ) ) ;
rank: 472
score: 98.81109149639423
patch: traverse ( c == null || traverse ( c ) ) ;
rank: 473
score: 99.12632349917763
patch: if ( c . get CaMeL First CaMeL Child ( ) == null ) { visits ++ ;
rank: 473
score: 99.05726841517857
patch: traverse ( c , ; c . ; c = c . get CaMeL Last CaMeL Child ( ) ;
rank: 473
score: 99.05006917317708
patch: Atom c = c . get CaMeL Next ( ) ;
rank: 473
score: 99.04818115234374
patch: traverse ( c ) ; c = next ;
rank: 473
score: 98.87450358072917
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Class CaMeL Name ( ) ) )
rank: 473
score: 98.8458251953125
patch: ) { ; traverse ( c ) ;
rank: 473
score: 98.81090198863636
patch: if ( ! 0 ) traverse ( c ) ;
rank: 474
score: 99.15814678485577
patch: c = ( Node ) ( c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 474
score: 99.05004204644098
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( )
rank: 474
score: 99.04771071213942
patch: c = c . get CaMeL Next ( ) : false ;
rank: 474
score: 98.87332589285714
patch: System . err . println ( $STRING$ + c . get CaMeL Name ( ) ) ; return ; }
rank: 474
score: 98.84556477864584
patch: traverse ( c || node . get CaMeL Type ( ) == ) ;
rank: 475
score: 99.15767176011029
patch: traverse ( ( Node ) c . get CaMeL Current CaMeL Node ( ) ) ;
rank: 475
score: 99.125390625
patch: Node < Node > c = c . get CaMeL Next ( ) ;
rank: 475
score: 99.05665283203125
patch: c = c . get CaMeL First CaMeL Child ( ) ; } if ( c != null )
rank: 475
score: 99.0494140625
patch: head = c . get CaMeL Next ( ) ; c = next ;
rank: 475
score: 99.04573974609374
patch: c = Node . get ( c ) ;
rank: 475
score: 98.8733243075284
patch: c = c . get CaMeL Id ( ) ;
rank: 475
score: 98.8106689453125
patch: if ( c == null ) { traverse ( c , c ) ;
rank: 476
score: 99.15753173828125
patch: traverse ( c ) ; c . remove CaMeL First CaMeL Child ( ) ;
rank: 476
score: 99.078857421875
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , name ) ;
rank: 476
score: 99.05552571614584
patch: traverse ( c , get CaMeL First CaMeL Child ( c ) ) ;
rank: 476
score: 99.04909446022727
patch: attr = c . get CaMeL Next ( ) ;
rank: 476
score: 98.87320382254464
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Class CaMeL Name ( ) ) )
rank: 476
score: 98.84475708007812
patch: traverse ( c || node . get CaMeL Type ( ) != $STRING$ ) ;
rank: 476
score: 98.80998091264205
patch: if ( ! != c ) c = c ;
rank: 477
score: 99.1570293719952
patch: traverse ( c , c , c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 477
score: 99.055419921875
patch: Node n = c . get CaMeL First CaMeL Child ( ) ; traverse ( c ) ; }
rank: 477
score: 99.04889237253289
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) !=
rank: 477
score: 99.04320068359375
patch: traverse ( c , this , node ) ;
rank: 477
score: 98.87315784801136
patch: System . out . println ( $STRING$ + c . get CaMeL Name ( ) . length ( ) ) ;
rank: 477
score: 98.84473765980114
patch: c ( c ) ; traverse ( c ) ;
rank: 478
score: 99.05540248325893
patch: Node n = c . get CaMeL Last CaMeL Child ( ) ;
rank: 478
score: 99.04860026041666
patch: return c . get CaMeL First CaMeL Child ( ) ; } break ;
rank: 478
score: 99.04248046875
patch: traverse ( c , this , c ) ;
rank: 478
score: 98.87298583984375
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { return ; }
rank: 478
score: 98.8447265625
patch: traverse ( c , c + ) ;
rank: 478
score: 98.80974578857422
patch: if ( ! c . equals ( c ) ) traverse ( c ) ;
rank: 479
score: 99.05531141493056
patch: traverse ( c , ; return ; }
rank: 479
score: 99.04850688733552
patch: if ( c . get CaMeL First CaMeL Child ( ) ( c . get CaMeL Next CaMeL
rank: 479
score: 98.87266031901042
patch: if ( node . get CaMeL Name ( ) . equals ( c . get CaMeL Name ( ) ) ) return ;
rank: 479
score: 98.84471546519886
patch: traverse ( c ) ; parse ( c ) ;
rank: 479
score: 98.80956092247597
patch: if ( 1 != null ) { traverse ( c ) ;
rank: 480
score: 99.0546142578125
patch: traverse ( node , c , false ) ;
rank: 480
score: 99.04838053385417
patch: p = c . get CaMeL Next ( ) ; }
rank: 480
score: 98.87259250217014
patch: if ( ! c . equals ( c . get CaMeL Name ( ) ) ) {
rank: 480
score: 98.84438747829861
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( name ) ;
rank: 480
score: 98.80955505371094
patch: traverse ( c != length ) ;
rank: 481
score: 99.15574244449013
patch: traverse ( ( Node ) ( c . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 481
score: 99.07831774259868
patch: c = c . get CaMeL Next ( ) . get CaMeL Next ( ) ; for (
rank: 481
score: 99.05454711914062
patch: Node c = c . get CaMeL First CaMeL Child ( ) ; traverse ( c ) ; }
rank: 481
score: 99.04793294270833
patch: Container c = c . get CaMeL Next ( ) ;
rank: 481
score: 99.0381192294034
patch: c = name . get CaMeL Next ( ) ;
rank: 481
score: 98.87256876627605
patch: if ( node . get CaMeL Name ( ) . equals ( node . get CaMeL Name ( ) ) ) return ;
rank: 481
score: 98.84365844726562
patch: traverse ( name , c ) ;
rank: 481
score: 98.80930582682292
patch: if ( ! traverse ( c , n ) ) {
rank: 482
score: 99.15569598858173
patch: traverse ( c , c . get CaMeL Last CaMeL Child ( ) , c . get CaMeL Last CaMeL Child ( ) ) ;
rank: 482
score: 99.05431189903847
patch: l = c . get CaMeL First CaMeL Child ( ) ;
rank: 482
score: 99.04737955729166
patch: tmp = c . get CaMeL Next ( ) ; c = next ;
rank: 482
score: 99.03683471679688
patch: c = c . get CaMeL Next ( false ) ;
rank: 482
score: 98.872509765625
patch: throw new Runtime CaMeL Exception ( c . get CaMeL Message ( $STRING$ , c . get CaMeL Id ( ) ) ) ;
rank: 482
score: 98.84356330422794
patch: traverse ( c , c ) ; out . add CaMeL All ( c ) ;
rank: 483
score: 99.12266322544643
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) ) ; }
rank: 483
score: 99.0364990234375
patch: visit ( c , c ) ;
rank: 483
score: 98.98729705810547
patch: if ( node != null ) {
rank: 483
score: 98.87245178222656
patch: / * traverse ( c ) ;
rank: 483
score: 98.84339599609375
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( c , node ) ;
rank: 483
score: 98.80801827566964
patch: traverse ( ! c . get CaMeL Node ( ) ) ; ;
rank: 484
score: 99.07750786675348
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , n , false ) ;
rank: 484
score: 99.04615129743304
patch: this . c = c . get CaMeL Next ( ) ; }
rank: 484
score: 99.03605513139205
patch: c = target . get CaMeL Next ( ) ;
rank: 484
score: 98.9870938387784
patch: c = node . get CaMeL Node ( ) ;
rank: 484
score: 98.87243121603261
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { return ;
rank: 484
score: 98.84337269176136
patch: traverse ( node || traverse ( c ) ) ;
rank: 484
score: 98.80801156850961
patch: if ( 1 != 0 ) { traverse ( c ) ;
rank: 485
score: 99.07724831321023
patch: c = c . get CaMeL Next ( ) ; next = c . get CaMeL Next ( ) ; }
rank: 485
score: 99.0532470703125
patch: Node n = c . get CaMeL First CaMeL Child ( ) ; traverse ( c , ) ;
rank: 485
score: 99.04518636067708
patch: f = c . get CaMeL Next ( ) ; }
rank: 485
score: 98.87194146050348
patch: if ( ! n . get CaMeL Type ( ) . is CaMeL Empty ( ) )
rank: 485
score: 98.84309895833333
patch: traverse ( new traverse ( c , c ) ) ;
rank: 485
score: 98.8077901204427
patch: if ( ! traverse ( c ) ) { continue ;
rank: 486
score: 99.15471942608173
patch: c = c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . traverse ( c ) ;
rank: 486
score: 99.12131754557292
patch: Node start = c . get CaMeL Next ( ) ;
rank: 486
score: 99.07693481445312
patch: Node next : c . get CaMeL Next ( ) ;
rank: 486
score: 99.05194382440476
patch: if ( ! c . ; c = c . get CaMeL First CaMeL Child ( ) ) break ;
rank: 486
score: 99.04472212357955
patch: cp = c . get CaMeL Next ( ) ;
rank: 486
score: 98.98485389122597
patch: Node next = c . get CaMeL Next ( ) ; ;
rank: 486
score: 98.87173227163461
patch: if ( c . is CaMeL Empty ( ) ) break ;
rank: 486
score: 98.842822265625
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( c , c ) ;
rank: 486
score: 98.80752902560764
patch: try { traverse ( c == ) ;
rank: 487
score: 99.15419358473558
patch: traverse ( c , c . get CaMeL Child CaMeL Count ( ) , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 487
score: 99.12083943684895
patch: Node c = target . get CaMeL Next ( ) ;
rank: 487
score: 99.076904296875
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next ( ) , visits ) ;
rank: 487
score: 99.0515887920673
patch: traverse ( c , ; c = c . get ) ;
rank: 487
score: 99.04465553977273
patch: ext = c . get CaMeL Next ( ) ;
rank: 487
score: 98.98422475961539
patch: Node c = c . get CaMeL Next ( ) ; {
rank: 487
score: 98.8713134765625
patch: if ( ! c . get CaMeL State ( ) . is CaMeL Empty ( ) ) { }
rank: 487
score: 98.84261067708333
patch: ; traverse ( c ) ; traverse ( c ) ;
rank: 487
score: 98.80702718098958
patch: traverse ( c == null ? 1 : c ) ;
rank: 488
score: 99.15406212439903
patch: traverse ( ) ; c = c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ; }
rank: 488
score: 99.12010556175595
patch: if ( c . get CaMeL First CaMeL Child ( ) != null ) { next ( c ) ;
rank: 488
score: 99.05142415364584
patch: c = c . get CaMeL First CaMeL Child ( ) ; return ;
rank: 488
score: 99.04433186848958
patch: Class c = c . get CaMeL Node ( ) ;
rank: 488
score: 99.03214808872768
patch: c = next ( ) ;
rank: 488
score: 98.98232199928977
patch: return : c . get CaMeL Next ( ) ;
rank: 488
score: 98.87096715856481
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Id ( ) ) ) ;
rank: 488
score: 98.80696244673295
patch: if ( c == 0 ) c = c ;
rank: 489
score: 99.15396881103516
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , list ) ;
rank: 489
score: 99.05134887695313
patch: if ( c . ; c = c . get CaMeL First CaMeL Child ( ) ) continue ;
rank: 489
score: 99.04414876302083
patch: String next = c . get CaMeL Next ( ) ;
rank: 489
score: 98.87070719401042
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { }
rank: 489
score: 98.84219699435764
patch: traverse ( c ) ; c = c . get CaMeL Instance CaMeL Type ( ) ;
rank: 489
score: 98.80684720552884
patch: if ( 1 == c ) { traverse ( c ) ;
rank: 490
score: 99.07649031929348
patch: next = c . get CaMeL Next ( ) ; c = next . get CaMeL First CaMeL Child ( ) ;
rank: 490
score: 99.05116373697916
patch: c = c . get CaMeL Last CaMeL Child ( ) ; break ;
rank: 490
score: 99.0441162109375
patch: if ( c . get CaMeL Node ( ) . get CaMeL First CaMeL Child ( ) ) {
rank: 490
score: 99.03006998697917
patch: traverse ( index . get CaMeL Next ( ) ) ;
rank: 490
score: 98.9806659405048
patch: Node next = c . get CaMeL Next ( ) ; {
rank: 490
score: 98.87020169771634
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Type ( ) ) )
rank: 490
score: 98.8418856534091
patch: if ( c . contains ( c ) ) ;
rank: 490
score: 98.80673452524039
patch: if ( c != $NUMBER$ ) { traverse ( c ) ;
rank: 491
score: 99.11898803710938
patch: Node c = list . get CaMeL Next ( ) ;
rank: 491
score: 99.0763690655048
patch: return node . get CaMeL First CaMeL Child ( ) ; }
rank: 491
score: 99.05077514648437
patch: if ( ! Character . is CaMeL Whitespace ( c . char CaMeL At ( 0 ) ) )
rank: 491
score: 99.04405628551136
patch: ps = c . get CaMeL Next ( ) ;
rank: 491
score: 99.02984064275569
patch: c = should CaMeL Retraverse ( c ) ;
rank: 491
score: 98.84156629774306
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( true ) {
rank: 492
score: 99.15335083007812
patch: traverse ( c , c . get CaMeL Parent ( ) , false ) ;
rank: 492
score: 99.118896484375
patch: Node c = ( c . get CaMeL First CaMeL Child ( ) )
rank: 492
score: 99.07614003057066
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) ;
rank: 492
score: 98.97969193892045
patch: check = c . get CaMeL Next ( ) ;
rank: 492
score: 98.87003267728366
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { return ; }
rank: 492
score: 98.84135606553819
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( n ) ;
rank: 492
score: 98.80619303385417
patch: if ( ! c . iterator ( ) . iterator ( ) . ;
rank: 493
score: 99.1531982421875
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , c . get CaMeL Parent CaMeL Node ( ) , this ) ;
rank: 493
score: 99.04965209960938
patch: traverse ( c ) ; ; c = c . get CaMeL Parent CaMeL Node ( ) ; }
rank: 493
score: 99.0432461825284
patch: table = c . get CaMeL Next ( ) ;
rank: 493
score: 99.02909342447917
patch: c = c . get CaMeL Next ( 1 ) ;
rank: 493
score: 98.87000732421875
patch: if ( traverse ( c ) ) return ;
rank: 493
score: 98.80582682291667
patch: if ( c != null ) { return ; else {
rank: 494
score: 99.15259728064903
patch: c = c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . traverse ( c ) ;
rank: 494
score: 99.11858809621711
patch: traverse ( c . get CaMeL First CaMeL Child ( ) ) ; traverse ( c ) ;
rank: 494
score: 99.0492831143466
patch: traverse ( c ) ; c = ) ; }
rank: 494
score: 99.0432064658717
patch: traverse ( c . node . get CaMeL First CaMeL Child ( ) , c . get CaMeL
rank: 494
score: 98.86997477213542
patch: if ( c . equals ( c ) ) return ;
rank: 494
score: 98.8409423828125
patch: traverse ( c + c ; traverse ( c ) ;
rank: 494
score: 98.8057528409091
patch: Node c = c ; traverse ( c ) ;
rank: 495
score: 99.07579456676136
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) , type ) ;
rank: 495
score: 99.04916042751736
patch: traverse ( c , node ) ; ;
rank: 495
score: 99.04313354492187
patch: if ( c . get CaMeL Next ( ) && c . get CaMeL First CaMeL Child ( )
rank: 495
score: 99.02803178267045
patch: visit = node . get CaMeL Next ( ) ;
rank: 495
score: 98.97885964133523
patch: null = c . get CaMeL Next ( ) ;
rank: 495
score: 98.86983235677083
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Id ) )
rank: 495
score: 98.83979797363281
patch: traverse ( c && false ) ;
rank: 495
score: 98.8056411743164
patch: traverse ( n , null ) ;
rank: 496
score: 99.11796875
patch: Node next = ( Node ) node . get CaMeL Next ( ) ;
rank: 496
score: 99.07572115384616
patch: traverse ( node , c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 496
score: 99.0428799715909
patch: name = c . get CaMeL Next ( ) ;
rank: 496
score: 98.86966075067934
patch: if ( node . get CaMeL Name ( ) . equals ( c . get CaMeL Id ( ) ) ) {
rank: 496
score: 98.8397575827206
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = null ;
rank: 496
score: 98.80562337239583
patch: if ( n != null ) { c = c ;
rank: 497
score: 99.15224045973558
patch: c = c . get CaMeL Root CaMeL Node ( ) ;
rank: 497
score: 99.07547433035714
patch: if ( c . get CaMeL Last CaMeL Child ( ) != null && c . get CaMeL Next CaMeL
rank: 497
score: 99.0489501953125
patch: if ( c != node . get CaMeL First CaMeL Child ( ) ) traverse ( c ) ;
rank: 497
score: 99.04285606971153
patch: traverse ( = c . get CaMeL Next ( ) ) ;
rank: 497
score: 99.02700570913461
patch: c = c . get CaMeL Next ( ) : node ;
rank: 497
score: 98.97431640625
patch: traverse ( c , node , null ) ;
rank: 497
score: 98.86895073784723
patch: if ( c . get CaMeL Name ( ) . length ( ) == 0 ) {
rank: 497
score: 98.80555308948864
patch: try { traverse ( c , null ) ; }
rank: 498
score: 99.15201509915866
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Last CaMeL Sibling ( ) ) ;
rank: 498
score: 99.11747814360119
patch: c = c . get CaMeL Next ( ) ; c = c . get CaMeL Node ( ) ;
rank: 498
score: 99.07546997070312
patch: c = node . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Next ( ) ; }
rank: 498
score: 99.04880981445312
patch: if ( c . get CaMeL Node ( ) . get CaMeL Type ( ) == Node . )
rank: 498
score: 99.04281955295139
patch: if ( c . node . get CaMeL First CaMeL Child ( ) != null ) {
rank: 498
score: 99.0260518391927
patch: c = c . get CaMeL Next ( $STRING$ ) ;
rank: 498
score: 98.86853899274554
patch: if ( ! node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) {
rank: 498
score: 98.83955463610198
patch: traverse ( c && c . get CaMeL Type ( ) . equals ( $STRING$ ) ) ;
rank: 498
score: 98.80548773871527
patch: if ( ! == c ) { public
rank: 499
score: 99.15170288085938
patch: traverse ( c . traverse ( c . get CaMeL First CaMeL Child ( ) ) ) ; }
rank: 499
score: 99.11741129557292
patch: Node next = source . get CaMeL Next ( ) ;
rank: 499
score: 99.0484619140625
patch: Node c = c . get CaMeL First CaMeL Child ( ) ; traverse ( c , ) ;
rank: 499
score: 99.0427754720052
patch: Element n = c . get CaMeL Next ( ) ;
rank: 499
score: 99.02266438802083
patch: c = ! should CaMeL Retraverse ( c ) ;
rank: 499
score: 98.86845092773437
patch: if ( ! node . get CaMeL Type ( ) . is CaMeL Empty ( ) ) return ;
rank: 499
score: 98.83926391601562
patch: ) traverse ( c ) ; traverse ( c ) ;
rank: 499
score: 98.80463409423828
patch: if ( c != null ) ;
rank: 500
score: 99.15159205386513
patch: traverse ( c ) ; n = c . get CaMeL Last CaMeL Child ( ) ; }
rank: 500
score: 99.11720377604166
patch: Node next = ! node . get CaMeL First CaMeL Child ( ) ;
rank: 500
score: 99.07494007457386
patch: traverse ( node . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) , node ) ;
rank: 500
score: 99.04242498224431
patch: toc = c . get CaMeL Next ( ) ;
rank: 500
score: 99.02256944444444
patch: should CaMeL Retraverse ( c ) ;
rank: 500
score: 98.86781377377717
patch: if ( ! c . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) break ;
rank: 500
score: 98.80454664963942
patch: if ( c != ( traverse ( c ) ) ) {
rank: 501
score: 99.15148207720588
patch: c = c ; c = c . get CaMeL First CaMeL Child ( ) ;
rank: 501
score: 99.11676897321429
patch: if ( c . get CaMeL First CaMeL Child ( ) instanceof Node ) { traverse ( c ) ;
rank: 501
score: 99.04744175502232
patch: type = c . get CaMeL Type ( ) ; break ; }
rank: 501
score: 99.04239908854167
patch: Binding next = c . get CaMeL Next ( ) ;
rank: 501
score: 98.97242320667614
patch: c = c . has CaMeL Next ( ) ;
rank: 501
score: 98.86779333043981
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( node . get CaMeL Name ( ) ) ) ;
rank: 501
score: 98.80429909446023
patch: traverse ( c == null ? null : c ;
rank: 502
score: 99.116455078125
patch: if ( c . get CaMeL First CaMeL Child ( ) != null ) next ( c ) ;
rank: 502
score: 99.07467990451389
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , n , true ) ;
rank: 502
score: 99.04715401785714
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( c != null ) break ;
rank: 502
score: 99.04217122395833
patch: return c ; } c = c . get CaMeL Next ( ) ;
rank: 502
score: 98.97137920673077
patch: Node c = c . get CaMeL Next ( ) ; ;
rank: 502
score: 98.86768639605978
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) break ; }
rank: 502
score: 98.83855438232422
patch: traverse ( c ; c = c . get CaMeL Next ( ) ) ;
rank: 502
score: 98.80421799879808
patch: synchronized ( c ) { traverse ( c , c ) ;
rank: 503
score: 99.15135779747597
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get ( ) ) ;
rank: 503
score: 99.07456341911765
patch: if ( next != null ) c = next . get CaMeL Next ( ) ;
rank: 503
score: 99.0468280498798
patch: t = c . get CaMeL First CaMeL Child ( ) ;
rank: 503
score: 99.04184977213542
patch: T next = c . get CaMeL Next ( ) ;
rank: 503
score: 98.97126770019531
patch: if ( parent != null ) {
rank: 503
score: 98.8672587076823
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( this . c ) ) return ;
rank: 503
score: 98.83849158653847
patch: traverse ( c ) ; traverse ( ( ) c ) ;
rank: 503
score: 98.80396617542614
patch: if ( c == null ) { ) return ;
rank: 504
score: 99.1510009765625
patch: traverse ( c . get CaMeL Parent ( ) . get CaMeL Parent ( ) , c . get CaMeL Parent ( ) ) ;
rank: 504
score: 99.07422984730114
patch: traverse ( next . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) , c ) ;
rank: 504
score: 99.0466076078869
patch: traverse ( c , ; c = c . get CaMeL First CaMeL Child ( ) ) ; ; }
rank: 504
score: 99.04180353338069
patch: this = c . get CaMeL Next ( ) ;
rank: 504
score: 98.8671875
patch: if ( c != null ) { break ; } }
rank: 504
score: 98.83822866586539
patch: traverse ( c ) ; if ( c == null ) {
rank: 504
score: 98.80367606026786
patch: if ( ! c . iterator ( ) . iterator ( ) ;
rank: 505
score: 99.04652099609375
patch: traverse ( c ) ; ; c = c . get CaMeL Last CaMeL Child ( ) ; }
rank: 505
score: 99.0416015625
patch: int next = c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ;
rank: 505
score: 99.0155029296875
patch: c = id . get CaMeL Next ( ) ;
rank: 505
score: 98.97051447088069
patch: if ( should CaMeL Visit ( node ) ) {
rank: 505
score: 98.86694946289063
patch: break ) ; } traverse ( c ) ;
rank: 505
score: 98.83716930042614
patch: traverse ( ! traverse ( c ) ) ; ;
rank: 505
score: 98.8036397298177
patch: if ( ! c . contains ( n ) ) ;
rank: 506
score: 99.15086012620192
patch: traverse ( c , c . get CaMeL Last CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 506
score: 99.11436703330592
patch: Node next = ( ( Node ) c ) . get CaMeL First CaMeL Child ( ) ;
rank: 506
score: 99.07404033954327
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) , type ) ;
rank: 506
score: 99.04638061523437
patch: traverse ( c , ; c = ) c . get CaMeL Parent CaMeL Node ( ) ; }
rank: 506
score: 99.01526896158855
patch: c = parent . get CaMeL Next ( ) ; }
rank: 506
score: 98.86693548387096
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Instance CaMeL Type ( ) ) ) {
rank: 506
score: 98.83704552283653
patch: traverse ( c ) ; c = c . this ) ;
rank: 506
score: 98.80354817708333
patch: if ( n == null ) return ;
rank: 507
score: 99.1507098858173
patch: n = c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . traverse ( node ) ;
rank: 507
score: 99.11361694335938
patch: Node next = list . get CaMeL Next ( ) ;
rank: 507
score: 99.04594494047619
patch: if ( ! Character . is CaMeL Whitespace ( c . char CaMeL At ( 0 ) ) ) {
rank: 507
score: 99.04151826746323
patch: if ( c != null && c . get CaMeL First CaMeL Child ( ) )
rank: 507
score: 98.96856689453125
patch: Node type = c . get CaMeL Next ( ) ;
rank: 507
score: 98.86683238636364
patch: if ( ! c . is CaMeL Empty ( ) && c . is CaMeL Empty ( ) ) break ;
rank: 507
score: 98.83665466308594
patch: super . traverse ( c ) ;
rank: 507
score: 98.8035000887784
patch: if ( c != null ) { throw c ;
rank: 508
score: 99.15069289434524
patch: c = ( node . get CaMeL First CaMeL Child ( ) ) . get CaMeL Parent ( ) ;
rank: 508
score: 99.11342210036058
patch: return ( Node ) c . get CaMeL Next ( ) ;
rank: 508
score: 99.07391357421875
patch: c = c . get CaMeL Next next ( ) ;
rank: 508
score: 99.04473586309524
patch: int n = c . get CaMeL First CaMeL Child ( ) . get CaMeL Length ( ) ; )
rank: 508
score: 99.01283957741477
patch: c = vars . get CaMeL Next ( ) ;
rank: 508
score: 98.96830444335937
patch: if ( ( c != null ) ) {
rank: 508
score: 98.83665466308594
patch: c = c . get CaMeL Type ( ) ; traverse ( node ) ;
rank: 508
score: 98.80335235595703
patch: try { add ( c ) ;
rank: 509
score: 99.14993990384616
patch: traverse ( c , c . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ) ;
rank: 509
score: 99.07358961838942
patch: traverse ( c , node . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 509
score: 99.04443359375
patch: traverse ( c , n , false ) ;
rank: 509
score: 98.96818033854167
patch: visits = c . get CaMeL Next ( ) ; }
rank: 509
score: 98.8667522927989
patch: if ( ! node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) return ;
rank: 509
score: 98.83603341238839
patch: ) traverse ( c ) ;
rank: 509
score: 98.80335150824652
patch: if ( n == 0 ) { public
rank: 510
score: 99.14951171875
patch: c = ( node . get CaMeL First CaMeL Child ( ) ) ;
rank: 510
score: 99.044189453125
patch: traverse ( c , ; c = c . get CaMeL Current CaMeL Node ( ) ) ; }
rank: 510
score: 99.04114786783855
patch: Decl n = c . get CaMeL Next ( ) ;
rank: 510
score: 99.00988006591797
patch: traverse ( index , c ) ;
rank: 510
score: 98.8666015625
patch: if ( ! c . get CaMeL Type ( ) . is CaMeL Empty ( ) ) continue ;
rank: 510
score: 98.83583577473958
patch: c = c . get CaMeL First CaMeL Child ( ) ; for ( ; ) {
rank: 510
score: 98.80314127604167
patch: try { c = c = c ;
rank: 511
score: 99.149267578125
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) . traverse ( ) ) ;
rank: 511
score: 99.11228590745192
patch: Node next = Node . get CaMeL Next ( c ) ;
rank: 511
score: 99.07339079483695
patch: c = c . get CaMeL Next ( ) ; next = node . get CaMeL First CaMeL Child ( ) ;
rank: 511
score: 99.04415457589286
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( c == null ) break ;
rank: 511
score: 99.04109700520833
patch: current = c . get CaMeL Next ( ) ; }
rank: 511
score: 99.0089999112216
patch: visit ( c ) ; visit ( c ) ;
rank: 511
score: 98.8028231534091
patch: try { traverse ( c ) ; return ; }
rank: 512
score: 99.14893341064453
patch: traverse ( ( ; c . get CaMeL First CaMeL Child ( ) ) ;
rank: 512
score: 99.11198987458882
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , ( Node ) c ) ;
rank: 512
score: 99.07326096754808
patch: traverse ( c , c . get CaMeL Next ( ) . get CaMeL Next ( ) . get CaMeL Next ( ) ) ;
rank: 512
score: 99.04385375976562
patch: if ( c != ; c = c . get CaMeL First CaMeL Child ( ) ) break ;
rank: 512
score: 99.0409797219669
patch: n = c . get CaMeL First CaMeL Child ( ) ; c = next ;
rank: 512
score: 98.80274454752605
patch: if ( ! traverse ( c ) ) { ) {
rank: 513
score: 99.11184895833334
patch: traverse ( ( Node ) c . get CaMeL Next ( ) ) ;
rank: 513
score: 99.043212890625
patch: traverse ( c , c , ;
rank: 513
score: 99.04078433388158
patch: if ( c . get CaMeL First CaMeL Child ( ) == node . get CaMeL Next CaMeL
rank: 513
score: 98.866455078125
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { return ;
rank: 513
score: 98.83543904622395
patch: traverse ( get CaMeL Node ( c ) ) ; ;
rank: 513
score: 98.8020528157552
patch: if ( ! c . equals ( ) ) { ;
rank: 514
score: 99.14866536458334
patch: traverse ( c ) ; c = c . traverse ( node ) ;
rank: 514
score: 99.11155192057292
patch: Node in = c . get CaMeL Next ( ) ;
rank: 514
score: 99.07294379340277
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , node , node ) ;
rank: 514
score: 99.04315185546875
patch: traverse ( c ) ; c = c . ) ;
rank: 514
score: 99.00507354736328
patch: visit ( c , node ) ;
rank: 514
score: 98.86643580386513
patch: if ( node . get CaMeL Id ( ) == c . get CaMeL Type ( ) )
rank: 514
score: 98.83537292480469
patch: traverse ( ( Node ) c ;
rank: 514
score: 98.80135091145833
patch: do { traverse ( c ) ; }
rank: 515
score: 99.14859444754464
patch: traverse ( c . get CaMeL Parent ( ) ) ; break ;
rank: 515
score: 99.07269287109375
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , true ) ;
rank: 515
score: 99.04313151041667
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( c == null ) return ;
rank: 515
score: 99.04070081208882
patch: System . out . println ( $STRING$ + c . get CaMeL Parent CaMeL Node ( ) .
rank: 515
score: 99.004150390625
patch: c = in . get CaMeL Next ( ) ;
rank: 515
score: 98.96036376953126
patch: Node c = c . get ( ) ;
rank: 515
score: 98.86623046875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Name ( ) ;
rank: 515
score: 98.83522033691406
patch: traverse ( c ) ; traverse ( c ) ; traverse ( c ) ;
rank: 515
score: 98.8011474609375
patch: if ( c == 0 ) { c = c ;
rank: 516
score: 99.04285249255952
patch: traverse ( c , ; c . ; c = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 516
score: 99.04032175164474
patch: if ( c . get CaMeL Node ( ) . get CaMeL First CaMeL Child ( ) !=
rank: 516
score: 99.00319213867188
patch: traverse ( . get ( c ) ) ;
rank: 516
score: 98.95984996448864
patch: Preconditions = node . get CaMeL Next ( ) ;
rank: 516
score: 98.86614435369319
patch: System . err . println ( $STRING$ + c . get CaMeL Class CaMeL Name ( ) ) ; break ;
rank: 516
score: 98.83516751802884
patch: traverse ( c ) ; else { traverse ( c ) ;
rank: 516
score: 98.80084228515625
patch: if ( c != c ) { traverse ( c ) ; }
rank: 517
score: 99.14797141335227
patch: traverse ( c . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) , c ) ;
rank: 517
score: 99.1072246844952
patch: Node c = get CaMeL First CaMeL Child ( c ) ;
rank: 517
score: 99.07246668198529
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , c ;
rank: 517
score: 99.04020552201705
patch: namespace = c . get CaMeL Next ( ) ;
rank: 517
score: 99.00275213068181
patch: c : c . get CaMeL Next ( ) ;
rank: 517
score: 98.95920817057292
patch: if ( should CaMeL Retraverse ( node ) ) {
rank: 517
score: 98.86583362926136
patch: throw new Runtime CaMeL Exception ( c ) ; }
rank: 517
score: 98.80058942522321
patch: if ( c != 0 ) { traverse ( c ) ; }
rank: 518
score: 99.07223510742188
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) ; for (
rank: 518
score: 99.04017469618056
patch: type = c . get CaMeL First CaMeL Child ( ) ; traverse ( c ) ;
rank: 518
score: 99.00137329101562
patch: c = ! should CaMeL Retraverse ( node ) ;
rank: 518
score: 98.8656005859375
patch: if ( ! c . is CaMeL Empty ( ) && c . is CaMeL Empty ( ) ) { }
rank: 518
score: 98.83416748046875
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . ( ) ;
rank: 518
score: 98.7997577373798
patch: if ( ! c . length ( ) == 0 ) {
rank: 519
score: 99.14780680338542
patch: if ( c . traverse ( c . get CaMeL First CaMeL Child ( ) ) )
rank: 519
score: 99.10586111886161
patch: int [ ] c = c . get CaMeL Next ( ) ;
rank: 519
score: 99.0718106356534
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) , visits ) ;
rank: 519
score: 99.04246215820312
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ) {
rank: 519
score: 99.04000651041666
patch: parent = c . get CaMeL Next ( ) ; c = next ;
rank: 519
score: 98.95874962439903
patch: if ( ! ! should CaMeL Visit ( c ) ) {
rank: 519
score: 98.86527934827302
patch: if ( ! c . is CaMeL Instance ( c . get CaMeL Id ( ) ) )
rank: 519
score: 98.83350481305804
patch: } traverse ( c ) ;
rank: 519
score: 98.79972700639205
patch: if ( c == null ) { ; else {
rank: 520
score: 99.10503829152961
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , traverse ( c ) ) ;
rank: 520
score: 99.04209391276042
patch: traverse ( c , c , ; }
rank: 520
score: 99.03963012695313
patch: Object c = c . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) ;
rank: 520
score: 98.99965598366477
patch: c = value . get CaMeL Next ( ) ;
rank: 520
score: 98.86503331801471
patch: if ( ! n . is CaMeL Empty ( ) ) traverse ( c ) ;
rank: 520
score: 98.83332170758929
patch: traverse ( c && c . size ( ) == 0 ) ;
rank: 520
score: 98.79970481178977
patch: if ( c != ) { c = c ;
rank: 521
score: 99.14755428538604
patch: c = c . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 521
score: 99.1048583984375
patch: if ( c . get CaMeL First CaMeL Child ( ) . to CaMeL
rank: 521
score: 99.07065993088942
patch: traverse ( c . get CaMeL Next ( ) , c . get CaMeL Next ( ) . get CaMeL Next ( ) ) ;
rank: 521
score: 99.04169311523438
patch: if ( c == ; c = c . get CaMeL First CaMeL Child ( ) ) break ;
rank: 521
score: 98.86494140625
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) ; return ;
rank: 521
score: 98.83294677734375
patch: traverse ( c , node ) ; c = true ;
rank: 521
score: 98.79939778645833
patch: if ( c != 1 ) traverse ( c ) ;
rank: 522
score: 99.10420445033482
patch: c = scope . get CaMeL First CaMeL Child ( c ) ;
rank: 522
score: 99.06986730238971
patch: if ( next != null ) c = c . get CaMeL Next ( ) ;
rank: 522
score: 99.04166870117187
patch: traverse ( c , null , false ) ;
rank: 522
score: 99.03904030539773
patch: vars = c . get CaMeL Next ( ) ;
rank: 522
score: 98.9969482421875
patch: traverse ( c , next ( c ) ) ;
rank: 522
score: 98.86484555844908
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) }
rank: 522
score: 98.83259721235795
patch: traverse ( c ) ; end ( c ) ;
rank: 522
score: 98.79938213641827
patch: if ( 0 == c ) { traverse ( c ) ;
rank: 523
score: 99.06949556790866
patch: traverse ( c . get CaMeL Next next ( ) ) ;
rank: 523
score: 99.0412930575284
patch: traverse ( c , false ) ; break ; }
rank: 523
score: 99.03896077473958
patch: Sibling c = c . get CaMeL Next ( ) ;
rank: 523
score: 98.95534446022727
patch: traverse ( should CaMeL Visit ( c ) ) ;
rank: 523
score: 98.86480712890625
patch: int n = c . get CaMeL Length ( ) ;
rank: 523
score: 98.799072265625
patch: if ( ! traverse ( c ) ) ) return ;
rank: 524
score: 99.14475611636513
patch: traverse ( c , traverse ( c . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 524
score: 99.06932484019886
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) , 0 ) ;
rank: 524
score: 99.0409423828125
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) == )
rank: 524
score: 98.99606323242188
patch: c = get CaMeL Next ( c ) ;
rank: 524
score: 98.95525653545673
patch: c = node . get CaMeL Next ( ) ; break ;
rank: 524
score: 98.86478969029018
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL File CaMeL Name ( ) ) ;
rank: 524
score: 98.83219146728516
patch: if ( c . equals ( c ) ) { traverse ( c ) ;
rank: 525
score: 99.14475384880515
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) ) ; break ; }
rank: 525
score: 99.06882731119792
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next ( ) , 1 ) ;
rank: 525
score: 99.04092843191964
patch: f = c . get CaMeL First CaMeL Child ( ) ; }
rank: 525
score: 98.99601606889205
patch: c = source . get CaMeL Next ( ) ;
rank: 525
score: 98.95482381184895
patch: c = c . get CaMeL Next ( ) ; {
rank: 525
score: 98.86473499644886
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Name ) ;
rank: 525
score: 98.83213454026442
patch: traverse ( c ) ; c = c . null ; ;
rank: 525
score: 98.798291015625
patch: if ( ! c . is CaMeL Empty ( ) ) { try {
rank: 526
score: 99.0684305826823
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , 0 ) ;
rank: 526
score: 99.0407470703125
patch: int n = c . get CaMeL First CaMeL Child ( ) ; while ( n < n )
rank: 526
score: 99.0379638671875
patch: en = c . get CaMeL Next ( ) ;
rank: 526
score: 98.99530639648438
patch: traverse ( c ) ; visits ++ ; }
rank: 526
score: 98.86473173253677
patch: if ( c == null || ! c . is CaMeL Empty ( ) ) {
rank: 526
score: 98.83187161959134
patch: else { traverse ( c ) ; traverse ( c ) ;
rank: 526
score: 98.79817708333333
patch: if ( ! < c ) traverse ( c ) ;
rank: 527
score: 99.14441596137152
patch: traverse ( c , c , c . get CaMeL Root CaMeL Node ( ) ) ;
rank: 527
score: 99.1023457845052
patch: Node source = c . get CaMeL Next ( ) ;
rank: 527
score: 99.06826636904762
patch: if ( node . get CaMeL First CaMeL Child ( ) != null && node . get CaMeL Next CaMeL
rank: 527
score: 99.04031808035714
patch: traverse ( c , ; c = c . get CaMeL First CaMeL Child ( ) ) ; } }
rank: 527
score: 99.03736368815105
patch: Exp c = c . get CaMeL Next ( ) ;
rank: 527
score: 98.95362345377605
patch: if ( ! should CaMeL Visit ( n ) ) {
rank: 527
score: 98.86470992476852
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( n . get CaMeL Name ( ) ) ) {
rank: 527
score: 98.8317159016927
patch: traverse ( c , c ) ; ) ; ) ;
rank: 527
score: 98.7977803548177
patch: traverse ( c != null && n != 0 ) ;
rank: 528
score: 99.14422248391544
patch: c = ; c = c . get CaMeL First CaMeL Child ( ) ; }
rank: 528
score: 99.10230509440105
patch: Node next = index . get CaMeL Next ( ) ;
rank: 528
score: 99.06791355298913
patch: if ( node . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL
rank: 528
score: 99.04027099609375
patch: Node n = c . get CaMeL First CaMeL Child ( ) ; if ( n == null )
rank: 528
score: 99.03719075520833
patch: Symbol n = c . get CaMeL Next ( ) ;
rank: 528
score: 98.99336073133681
patch: traverse ( c , visits ++ ) ;
rank: 528
score: 98.86470170454545
patch: if ( ! c . is CaMeL Empty ( ) || ! c . is CaMeL Empty ( ) ) {
rank: 528
score: 98.83155314127605
patch: traverse ( c , c ) ; c += c ;
rank: 528
score: 98.79746791294643
patch: try { traverse ( c ) ; } traverse ( c ) ;
rank: 529
score: 99.06780450994319
patch: do = c . get CaMeL Next ( ) ;
rank: 529
score: 99.0399169921875
patch: b = c . get CaMeL First CaMeL Child ( ) ;
rank: 529
score: 99.037158203125
patch: Symbol c = c . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) ;
rank: 529
score: 98.99335271661931
patch: c = src . get CaMeL Next ( ) ;
rank: 529
score: 98.95258331298828
patch: traverse ( parent , node ) ;
rank: 529
score: 98.83063151041667
patch: traverse ( c && c . get CaMeL Type ( ) != ) ;
rank: 529
score: 98.79710036057692
patch: if ( n != 0 ) ; traverse ( c ) ;
rank: 530
score: 99.14377010569854
patch: traverse ( c , n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 530
score: 99.03988211495536
patch: Node c = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 530
score: 99.0369873046875
patch: state = c . get CaMeL Next ( ) ; c = next ;
rank: 530
score: 98.99151611328125
patch: traverse ( c . get ( ) ) ;
rank: 530
score: 98.83002580915179
patch: c = c . c ; traverse ( c , node ) ;
rank: 530
score: 98.79706365411931
patch: if ( c != null ) { public else {
rank: 531
score: 99.1432746438419
patch: traverse ( c , c . get CaMeL Child CaMeL Count ( ) ) ; }
rank: 531
score: 99.10125262920673
patch: Node c = this . get CaMeL Next ( c ) ;
rank: 531
score: 99.06724717881944
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , visits , $STRING$ ) ;
rank: 531
score: 99.03655042146382
patch: if ( c . get CaMeL First CaMeL Child ( ) . has CaMeL Child ( ) )
rank: 531
score: 98.94846598307292
patch: Node c = Node . get CaMeL Next ( ) ;
rank: 531
score: 98.86449323381696
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Id ( ) ) ) break ;
rank: 531
score: 98.79700646033653
patch: if ( n instanceof Node ) { traverse ( c ) ;
rank: 532
score: 99.14323344983552
patch: traverse ( ( Node ) c , c . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 532
score: 99.0990702311198
patch: Node next = type . get CaMeL Next ( ) ;
rank: 532
score: 99.06723920036765
patch: if ( next != null ) next = next . get CaMeL Next ( ) ;
rank: 532
score: 98.9908447265625
patch: goal = c . get CaMeL Next ( ) ;
rank: 532
score: 98.86447625411184
patch: if ( c . get CaMeL Id ( ) == c . get CaMeL Type ( ) )
rank: 532
score: 98.82962472098214
patch: c = c . c ; traverse ( c , c ) ;
rank: 532
score: 98.79698768028847
patch: if ( c != null ) { consume ( c ) ;
rank: 533
score: 99.06708441840277
patch: traverse ( c , node . get CaMeL First CaMeL Child ( ) , n ) ;
rank: 533
score: 99.03565470377605
patch: state = c . get CaMeL Next ( ) ; }
rank: 533
score: 98.99055786132813
patch: c = c . get ( false ) ;
rank: 533
score: 98.86444382440476
patch: System . out . println ( $STRING$ + c . get CaMeL Name ( ) ) ; } return ;
rank: 533
score: 98.8294921875
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = node . get CaMeL First CaMeL Child ( ) ;
rank: 533
score: 98.79681396484375
patch: if ( 0 != 0 ) traverse ( c ) ;
rank: 534
score: 99.14222547743056
patch: traverse ( c ) ; current = c . get CaMeL First CaMeL Child ( ) ;
rank: 534
score: 99.09812418619792
patch: List c = c . get CaMeL Next ( ) ;
rank: 534
score: 99.03848702566964
patch: n = c . get CaMeL First CaMeL Child ( ) ; ;
rank: 534
score: 99.03563343394886
patch: grammar = c . get CaMeL Next ( ) ;
rank: 534
score: 98.86410958426339
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) )
rank: 534
score: 98.79630220853366
patch: if ( c != c ) ; traverse ( c ) ;
rank: 535
score: 99.14158002068015
patch: traverse ( c ) ; c = c . get CaMeL Root ( ) ; }
rank: 535
score: 99.096435546875
patch: Node next = value . get CaMeL Next ( ) ;
rank: 535
score: 99.0655517578125
patch: Node n = node . get CaMeL Next ( ) ;
rank: 535
score: 99.03821382068452
patch: traverse ( c ) ; c = c . get CaMeL First CaMeL Child ( ) ; } * /
rank: 535
score: 99.03547106291118
patch: Symbol c = c . get CaMeL First CaMeL Child ( ) ; traverse ( c ) ;
rank: 535
score: 98.86389741443452
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( null ) ) ;
rank: 535
score: 98.8292236328125
patch: traverse ( n , node ) ;
rank: 535
score: 98.79613148082386
patch: try { if ( traverse ( c ) ) {
rank: 536
score: 99.06540814568015
patch: if ( n != null ) c = c . get CaMeL Next ( ) ;
rank: 536
score: 99.03819861778847
patch: j = c . get CaMeL First CaMeL Child ( ) ;
rank: 536
score: 99.03506469726562
patch: if ( c . get CaMeL First CaMeL Child ( ) != null && c
rank: 536
score: 98.86343088457662
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Component CaMeL Type ( ) ) ) {
rank: 536
score: 98.82867431640625
patch: c = c . traverse ( c ) ; if ( c ;
rank: 536
score: 98.7958233173077
patch: traverse ( c . get CaMeL Node ( ) ) ; ;
rank: 537
score: 99.14152308872768
patch: traverse ( c , c . get CaMeL Symbol ( ) ) ;
rank: 537
score: 99.06531292459239
patch: c = c . get CaMeL Next ( ) ; c = n . get CaMeL First CaMeL Child ( ) ;
rank: 537
score: 99.0380859375
patch: traverse ( c , true ) ; ;
rank: 537
score: 99.03496955422794
patch: node = c . get CaMeL First CaMeL Child ( ) ; c = next ;
rank: 537
score: 98.988427734375
patch: c = node . get ( c ) ;
rank: 537
score: 98.86330344460227
patch: c = c . get CaMeL Type ( ) ;
rank: 537
score: 98.82863362630208
patch: traverse ( $STRING$ + c ; traverse ( c ) ;
rank: 537
score: 98.79572405133929
patch: if ( c == 0 ) { traverse ( c ) ; }
rank: 538
score: 99.14088948567708
patch: traverse ( c , c . get CaMeL Root CaMeL Node ( ) , true ) ;
rank: 538
score: 99.06524367559524
patch: if ( c . get CaMeL First CaMeL Child ( ) != null && n . get CaMeL Next CaMeL
rank: 538
score: 99.03782435825893
patch: t = c . get CaMeL First CaMeL Child ( ) ; }
rank: 538
score: 98.98734907670455
patch: node = next . get CaMeL Next ( ) ;
rank: 538
score: 98.9442138671875
patch: if ( c . should CaMeL Visit ( node ) ) {
rank: 538
score: 98.86322312127976
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( n ) ) {
rank: 538
score: 98.828271484375
patch: traverse ( c || c . get CaMeL Type ( ) != ) ;
rank: 538
score: 98.79547588641827
patch: if ( ! == 0 ) { traverse ( c ) ;
rank: 539
score: 99.140869140625
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , ; }
rank: 539
score: 99.0940653483073
patch: Node c : c . get CaMeL Next ( ) ;
rank: 539
score: 99.06496175130208
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c == null ) ;
rank: 539
score: 99.03763253348214
patch: traverse ( c ) ; c = c . get CaMeL First CaMeL Child ( ) ; } return ;
rank: 539
score: 99.03457205636161
patch: if ( node . get CaMeL First CaMeL Child ( ) != )
rank: 539
score: 98.98710123697917
patch: c = node . get CaMeL Next ( ) ) ;
rank: 539
score: 98.94370339133523
patch: Node c = c . get ( c ) ;
rank: 539
score: 98.86314290364584
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Class CaMeL Name ( ) ) ) return ;
rank: 539
score: 98.79544771634616
patch: if ( c == $NUMBER$ ) { traverse ( c ) ;
rank: 540
score: 99.14070638020833
patch: traverse ( c ) ; c = parent . get CaMeL First CaMeL Child ( ) ;
rank: 540
score: 99.06476702008929
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next ( ) ;
rank: 540
score: 99.0376220703125
patch: traverse ( c ) ; c = c . get CaMeL First CaMeL Child ( ) ; ; }
rank: 540
score: 99.03432210286458
patch: Object next = node . get CaMeL Next ( ) ;
rank: 540
score: 98.98693237304687
patch: traverse ( c , $STRING$ , $STRING$ ) ;
rank: 540
score: 98.86287064985795
patch: if ( c != null ) return ; break ;
rank: 540
score: 98.82823768028847
patch: traverse ( c ) ; ( traverse ( c ) ) ;
rank: 540
score: 98.79501953125
patch: if ( c != null ) { traverse ( c , n ) ;
rank: 541
score: 99.14046223958333
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent ( ) ) ; }
rank: 541
score: 99.037353515625
patch: c = c . get CaMeL Parent ( ) ; return ; }
rank: 541
score: 99.03428141276042
patch: Row c = c . get CaMeL Next ( ) ;
rank: 541
score: 98.98591752485795
patch: should CaMeL Retraverse ( c , c ) ;
rank: 541
score: 98.9415283203125
patch: if ( node . get CaMeL First CaMeL Child ( ) instanceof
rank: 541
score: 98.86282784598214
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Class CaMeL Name ( ) + $STRING$ ) ;
rank: 541
score: 98.82819073016827
patch: traverse ( parent , c ) ; traverse ( c ) ;
rank: 541
score: 98.7948467548077
patch: traverse ( c , 0 ) ; traverse ( c ) ;
rank: 542
score: 99.06419613486842
patch: if ( c != null ) c = node . get CaMeL First CaMeL Child ( ) ;
rank: 542
score: 99.0338134765625
patch: iter . next ( ) ; c = c . get CaMeL Next ( ) ;
rank: 542
score: 98.94078650841347
patch: node = c . get CaMeL Next ( ) ; break ;
rank: 542
score: 98.79454549153645
patch: if ( ! instanceof Node ) traverse ( c ) ;
rank: 543
score: 99.08840707632211
patch: Node next = get CaMeL First CaMeL Child ( c ) ;
rank: 543
score: 99.06405978732639
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , name ) ;
rank: 543
score: 99.03377278645833
patch: if ( node . get CaMeL First CaMeL Child ( ) != node )
rank: 543
score: 98.86265827047414
patch: if ( ! node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) return ;
rank: 543
score: 98.79393592247597
patch: if ( ! != $NUMBER$ ) { traverse ( c ) ;
rank: 544
score: 99.08518473307292
patch: Node c = type . get CaMeL Next ( ) ;
rank: 544
score: 99.06395321800595
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , should CaMeL Retraverse ) ;
rank: 544
score: 99.03504289899554
patch: c = c . get CaMeL Current CaMeL Node ( ) ; }
rank: 544
score: 98.93589782714844
patch: if ( c != node ) {
rank: 544
score: 98.86260308159723
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) traverse ( c ) ;
rank: 544
score: 98.82762145996094
patch: traverse ( false , node ) ;
rank: 544
score: 98.7934237393466
patch: if ( ! ( c != null ) ) {
rank: 545
score: 99.13985866970486
patch: traverse ( c ) ; c = c . remove CaMeL First CaMeL Child ( ) ;
rank: 545
score: 99.0632091703869
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , node . get CaMeL Next CaMeL
rank: 545
score: 99.0347900390625
patch: i = c . get CaMeL First CaMeL Child ( ) ; }
rank: 545
score: 99.03353881835938
patch: int current = c . get CaMeL Next ( ) ;
rank: 545
score: 98.98471901633523
patch: c = column . get CaMeL Next ( ) ;
rank: 545
score: 98.93516956676136
patch: traverse ( children . get ( node ) ) ;
rank: 545
score: 98.86256626674107
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( node . get CaMeL Name ( ) ) ) break ;
rank: 545
score: 98.82722981770833
patch: traverse ( node , c ; traverse ( c ) ;
rank: 545
score: 98.79305326021634
patch: if ( n == 1 ) { traverse ( c ) ;
rank: 546
score: 99.13959612165179
patch: traverse ( c . get CaMeL Parent ( ) , true ) ;
rank: 546
score: 99.08441162109375
patch: Node children = c . get CaMeL Next ( ) ;
rank: 546
score: 99.06314791165866
patch: traverse ( c . get CaMeL Next ( ) , ) ;
rank: 546
score: 99.03457496279762
patch: Node n = c . get CaMeL First CaMeL Child ( ) ; traverse ( c , n ) ;
rank: 546
score: 99.03351593017578
patch: if ( c . get CaMeL Current CaMeL Node ( ) != null ) {
rank: 546
score: 98.98292032877605
patch: next = node . get CaMeL Next ( ) ; }
rank: 546
score: 98.93324788411458
patch: if ( ! is CaMeL Empty ( c ) ) {
rank: 546
score: 98.86223493303571
patch: System . err . println ( $STRING$ + c . get CaMeL Name ( ) ) ; } return ;
rank: 546
score: 98.82719282670455
patch: traverse ( c , traverse ( type ) ) ;
rank: 546
score: 98.79208374023438
patch: if ( $NUMBER$ != c ) traverse ( c ) ;
rank: 547
score: 99.13948567708333
patch: if ( c instanceof ; c = c . get CaMeL First CaMeL Child ( ) )
rank: 547
score: 99.0823974609375
patch: Node value = c . get CaMeL Next ( ) ;
rank: 547
score: 99.062744140625
patch: if ( c . get CaMeL First CaMeL Child ( ) == null || c . get CaMeL Next CaMeL
rank: 547
score: 99.03345743815105
patch: Object c = node . get CaMeL Next ( ) ;
rank: 547
score: 98.93136596679688
patch: traverse ( node , node , null ) ;
rank: 547
score: 98.82713317871094
patch: traverse ( out , c ) ;
rank: 547
score: 98.79193115234375
patch: if ( ! c . equals ( 1 ) ) ;
rank: 548
score: 99.1391834077381
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) . traverse ( c ) ) ;
rank: 548
score: 99.0823465983073
patch: Node check = c . get CaMeL Next ( ) ;
rank: 548
score: 99.06271229619566
patch: traverse ( next . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) ; }
rank: 548
score: 99.03324068509616
patch: traverse ( c ) ; ; c = c . ; }
rank: 548
score: 98.98212224786931
patch: traverse ( index . get ( c ) ) ;
rank: 548
score: 98.86211867559524
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( null ) ) {
rank: 548
score: 98.82674153645833
patch: traverse ( c && node . get CaMeL Type ( ) != ) ;
rank: 548
score: 98.79181377704327
patch: if ( 1 != n ) { traverse ( c ) ;
rank: 549
score: 99.06203125
patch: traverse ( next . get CaMeL First CaMeL Child ( ) , next . get CaMeL First CaMeL Child ( ) ) ; }
rank: 549
score: 99.03325737847223
patch: int next = c . get CaMeL First CaMeL Child ( ) ; c = next ;
rank: 549
score: 99.03321251502403
patch: ( ( Node ) c ) . traverse ( c ) ;
rank: 549
score: 98.98104248046874
patch: traverse ( visits < $NUMBER$ , $STRING$ ) ;
rank: 549
score: 98.93062337239583
patch: while ( c . has CaMeL Next ( ) ) {
rank: 549
score: 98.82657199435764
patch: traverse ( ! traverse ( ) ) ;
rank: 549
score: 98.79147573617789
patch: if ( c == traverse ) { traverse ( c ) ;
rank: 550
score: 99.13856201171875
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) . traverse ( ) ) ;
rank: 550
score: 99.08160400390625
patch: Node next = scope . get CaMeL Next ( ) ;
rank: 550
score: 99.06201171875
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , next CaMeL
rank: 550
score: 99.03309461805556
patch: traverse ( c , ; ) ; }
rank: 550
score: 99.03280479029605
patch: if ( c . get CaMeL First CaMeL Child ( ) == node . get CaMeL First CaMeL
rank: 550
score: 98.92860921223958
patch: if ( should CaMeL Visit ( c ) ) return ;
rank: 550
score: 98.86190091646634
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Message ( ) ) ;
rank: 550
score: 98.82654825846355
patch: try { traverse ( ! traverse ( c ) ) ;
rank: 550
score: 98.79114786783855
patch: traverse ( c ) ; traverse ( ! c ) ;
rank: 551
score: 99.13821614583334
patch: c = ( c . get CaMeL First CaMeL Child ( ) ) ;
rank: 551
score: 99.08144906850961
patch: Node c = Node . get CaMeL Next ( c ) ;
rank: 551
score: 99.06129039417614
patch: c = n . get CaMeL Next ( ) ; c = c . get CaMeL Next ( ) ; }
rank: 551
score: 99.03281813401442
patch: traverse ( c , ; c = c . ; ; }
rank: 551
score: 99.03224875710227
patch: z = c . get CaMeL Next ( ) ;
rank: 551
score: 98.9789306640625
patch: traverse ( c ) ; next = c ;
rank: 551
score: 98.86173095703126
patch: result = c . traverse ( c ) ;
rank: 551
score: 98.82645670572917
patch: traverse ( c , c . get CaMeL Type ( ) ) ; }
rank: 551
score: 98.79103597005208
patch: if ( node == null ) traverse ( c ) ;
rank: 552
score: 99.13809814453126
patch: traverse ( c ) ; current CaMeL Parent = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 552
score: 99.07999674479167
patch: Node c = scope . get CaMeL Next ( ) ;
rank: 552
score: 99.06128607855902
patch: traverse ( node , node . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 552
score: 99.03238932291667
patch: traverse ( c , ; c = c . get CaMeL First CaMeL Child ( ) ) ; } ;
rank: 552
score: 99.03223941200658
patch: node = c . get CaMeL Next ( ) ; c . get CaMeL Next ( ) ;
rank: 552
score: 98.97886149088542
patch: void next = c . get CaMeL Next ( ) ;
rank: 552
score: 98.861708984375
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) traverse ( c ) ;
rank: 552
score: 98.82614135742188
patch: traverse ( c ) ; c = c . get CaMeL Count ( ) ;
rank: 552
score: 98.79079026442308
patch: if ( ! != 0 ) ; traverse ( c ) ;
rank: 553
score: 99.07919546274039
patch: Node next = scope . get CaMeL Next ( c ) ;
rank: 553
score: 99.03206380208333
patch: found = c . get CaMeL Next ( ) ; }
rank: 553
score: 98.97776489257812
patch: traverse ( c , parent , node ) ;
rank: 553
score: 98.86122349330357
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( node . get CaMeL Id ( ) ) ) return ;
rank: 553
score: 98.82603102463942
patch: traverse ( c ) ; } ; traverse ( c ) ;
rank: 553
score: 98.7906494140625
patch: if ( 0 != null ) traverse ( c ) ;
rank: 554
score: 99.13743954613095
patch: c = ( c . get CaMeL First CaMeL Child ( ) ) . get CaMeL Parent ( ) ;
rank: 554
score: 99.07743326822917
patch: Node break = c . get CaMeL Next ( ) ;
rank: 554
score: 99.06121826171875
patch: traverse ( node , c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next ( ) ) ;
rank: 554
score: 99.03193803267045
patch: cl = c . get CaMeL Next ( ) ;
rank: 554
score: 99.03171011117789
patch: traverse ( c ) ; c . traverse ( c ) ;
rank: 554
score: 98.97702858664773
patch: visit ( c ) ; traverse ( c ) ;
rank: 554
score: 98.86107680376838
patch: if ( ! node . get CaMeL Name ( ) . equals ( $STRING$ ) )
rank: 554
score: 98.82569376627605
patch: try { traverse ( c ; traverse ( c ) ;
rank: 554
score: 98.79061185396634
patch: if ( c == false ) { traverse ( c ) ;
rank: 555
score: 99.13701428865132
patch: traverse ( c . get CaMeL Parent ( ) . get CaMeL Parent ( ) ) ; }
rank: 555
score: 99.07717660757211
patch: c = scope . get CaMeL First CaMeL Child ( ) ;
rank: 555
score: 99.06013997395833
patch: traverse ( c , c . get CaMeL Next ( ) , ) ;
rank: 555
score: 99.03192497702206
patch: traverse ( c . node . get CaMeL First CaMeL Child ( ) ) ; }
rank: 555
score: 98.97698974609375
patch: traverse ( node . get CaMeL Node ( ) ) ;
rank: 555
score: 98.91846923828125
patch: traverse ( node , node , node ) ;
rank: 555
score: 98.86093284970238
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class CaMeL Name ( ) ) ) ;
rank: 555
score: 98.82535807291667
patch: else { ; traverse ( c ) ;
rank: 555
score: 98.79051717122395
patch: if ( ! traverse ( 1 , c ) ) {
rank: 556
score: 99.05994140625
patch: if ( next . get CaMeL First CaMeL Child ( ) != null ) next . get CaMeL First CaMeL Child ( ) ;
rank: 556
score: 99.03191460503473
patch: System . err . println ( $STRING$ + c . get CaMeL Next ( ) ) ;
rank: 556
score: 98.91751098632812
patch: if ( c != null ) next ( c ) ;
rank: 556
score: 98.86060546875
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Name ( ) + ) ;
rank: 556
score: 98.82533365885416
patch: traverse ( c , c ) ; out . traverse ( node ) ;
rank: 556
score: 98.79046630859375
patch: traverse ( c instanceof Node ) ;
rank: 557
score: 99.13592529296875
patch: c = ( Node ) ( c . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 557
score: 99.05986192491319
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , visits , 0 ) ;
rank: 557
score: 99.03179610402961
patch: if ( c . get CaMeL First CaMeL Child ( ) != node . get CaMeL Next CaMeL
rank: 557
score: 99.02893647693452
patch: if ( ! c . ; c = c . get CaMeL First CaMeL Child ( ) ) return ;
rank: 557
score: 98.97597434303977
patch: c = super . get CaMeL Next ( ) ;
rank: 557
score: 98.91657104492188
patch: try { while ( c != null ) {
rank: 557
score: 98.85977909482759
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Type CaMeL Name ( ) ) ) ;
rank: 557
score: 98.8252685546875
patch: traverse ( c + $STRING$ + node . get CaMeL Type ( ) ;
rank: 557
score: 98.79043344350961
patch: if ( n != null ) { traverse ( n ) ;
rank: 558
score: 99.13588353207237
patch: traverse ( ( Node ) c . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 558
score: 99.05982462565105
patch: traverse ( c , node . get CaMeL First CaMeL Child ( ) , node . get CaMeL Next ( ) ) ;
rank: 558
score: 99.03169759114583
patch: target = c . get CaMeL Next ( ) ; }
rank: 558
score: 99.02864213423295
patch: traverse ( c , ; c = c ; }
rank: 558
score: 98.97270063920455
patch: exit = node . get CaMeL Next ( ) ;
rank: 558
score: 98.85977608816964
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Type CaMeL Name ( ) ) )
rank: 558
score: 98.82515462239583
patch: traverse ( c ) ; c = c . get ( c ) ;
rank: 558
score: 98.79017130533855
patch: if ( ! traverse ( c , 1 ) ) {
rank: 559
score: 99.13538953993056
patch: if ( traverse ( c , c . get CaMeL First CaMeL Child ( ) ) )
rank: 559
score: 99.0596415201823
patch: try { traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next ( ) ) ;
rank: 559
score: 99.03163655598958
patch: Elem c = c . get CaMeL Next ( ) ;
rank: 559
score: 99.02776630108173
patch: node = c . get CaMeL Last CaMeL Child ( ) ;
rank: 559
score: 98.8596903483073
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c ) ) return ;
rank: 559
score: 98.82515092329545
patch: traverse ( c , c ) ; break ; ;
rank: 559
score: 98.79013061523438
patch: if ( c != 0 ) { c = c ;
rank: 560
score: 99.13525390625
patch: traverse ( c ) ; c = c . get CaMeL First CaMeL Child ( ; }
rank: 560
score: 99.0742696126302
patch: Node c = source . get CaMeL Next ( ) ;
rank: 560
score: 99.02596028645833
patch: int n = c . get CaMeL First CaMeL Child ( ) ; traverse ( c , n ) ;
rank: 560
score: 98.97113647460938
patch: traverse ( [ 0 ] , c ) ;
rank: 560
score: 98.91368272569444
patch: traverse ( next ( node ) ) ;
rank: 560
score: 98.8596255653783
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Name ( ) ;
rank: 560
score: 98.82469685872395
patch: traverse ( c , true ) ; c = node ;
rank: 560
score: 98.78987630208333
patch: traverse ( c != null && c == 0 ) ;
rank: 561
score: 99.1349628155048
patch: c = c . get CaMeL Current CaMeL Node ( ) ;
rank: 561
score: 99.03153483072917
patch: head = c . get CaMeL Next ( ) ; }
rank: 561
score: 98.85948988970588
patch: if ( ! c . is CaMeL Empty ( ) ) { throw null ; }
rank: 561
score: 98.8242938701923
patch: traverse ( c , node ) ; traverse ( node ) ;
rank: 561
score: 98.78971354166667
patch: if ( c != null ) { traverse ( c ) ; else {
rank: 562
score: 99.13495551215277
patch: traverse ( c ) ; node = c . get CaMeL First CaMeL Child ( ) ;
rank: 562
score: 99.07317645733173
patch: Node next = c . get CaMeL Next ( 1 ) ;
rank: 562
score: 99.05760701497395
patch: Node node = n . get CaMeL Next ( ) ;
rank: 562
score: 99.03102620442708
patch: if ( ! ( c . get CaMeL First CaMeL Child ( ) != null ) )
rank: 562
score: 98.9130859375
patch: while ( c != null ) { break ;
rank: 562
score: 98.85932268415179
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Id ( ) ) ) continue ;
rank: 562
score: 98.78966471354167
patch: if ( ! c . is CaMeL Empty ( ) ) c -- ;
rank: 563
score: 99.13491482204861
patch: traverse ( c , c . get CaMeL Root CaMeL Node ( ) , false ) ;
rank: 563
score: 99.056884765625
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , node . get CaMeL First CaMeL Child ( ) ) ; }
rank: 563
score: 99.03070427389706
patch: context = c . get CaMeL First CaMeL Child ( ) ; c = next ;
rank: 563
score: 99.02296956380208
patch: if ( c != null ) c = c . ;
rank: 563
score: 98.85918317522321
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Id ( ) ) )
rank: 563
score: 98.82335611979167
patch: c = c . traverse ( c ) ; traverse ( node ) ;
rank: 563
score: 98.78966267903645
patch: if ( c != $NUMBER$ ) traverse ( c ) ;
rank: 564
score: 99.1341064453125
patch: traverse ( c . get CaMeL Root ( ) , c . get CaMeL Root ( ) ) ;
rank: 564
score: 99.0710918719952
patch: while ( c != null ) { traverse ( c ) ;
rank: 564
score: 99.0568378155048
patch: return n . get CaMeL First CaMeL Child ( ) ; }
rank: 564
score: 99.03068033854167
patch: Style c = c . get CaMeL Next ( ) ;
rank: 564
score: 98.96923828125
patch: traverse ( c ) . traverse ( node ) ;
rank: 564
score: 98.911376953125
patch: return : c . get CaMeL Next ( ) ; }
rank: 564
score: 98.85913927801724
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) {
rank: 564
score: 98.82335486778847
patch: traverse ( c , c ) ; end ( c ) ;
rank: 564
score: 98.7892596905048
patch: if ( ! < 0 ) { traverse ( c ) ;
rank: 565
score: 99.05613199869792
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , false ) ;
rank: 565
score: 99.030029296875
patch: Declaration node = c . get CaMeL Next ( ) ;
rank: 565
score: 99.02244984019886
patch: traverse ( c ) ; break ; } return ;
rank: 565
score: 98.96919389204545
patch: should CaMeL Retraverse ( c , node ) ;
rank: 565
score: 98.9112881747159
patch: if ( node . traverse ( node ) ) {
rank: 565
score: 98.859130859375
patch: System . out . println ( $STRING$ + c . get CaMeL Name ( ) ) ; return ; }
rank: 565
score: 98.78917518028847
patch: if ( ! c . ( c ) ) { return ;
rank: 566
score: 99.13291713169643
patch: traverse ( c . get CaMeL Child CaMeL Count ( ) ) ;
rank: 566
score: 99.07047526041667
patch: Node next = c . get CaMeL Root ( ) ;
rank: 566
score: 99.05598280164931
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , next ) ;
rank: 566
score: 99.02994791666667
patch: ; c = c . get CaMeL Next ( ) ;
rank: 566
score: 99.02226118607955
patch: traverse ( node , ( Node ) c ) ;
rank: 566
score: 98.96645285866477
patch: c = key . get CaMeL Next ( ) ;
rank: 566
score: 98.85890706380208
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ) )
rank: 566
score: 98.82236328125
patch: traverse ( c , c ) ; out . add ( c ) ;
rank: 566
score: 98.78899383544922
patch: try { c = c ; }
rank: 567
score: 99.1327892485119
patch: c = c . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) ; break ;
rank: 567
score: 99.05591837565105
patch: Node count = c . get CaMeL Next ( ) ;
rank: 567
score: 99.02991832386364
patch: cb = c . get CaMeL Next ( ) ;
rank: 567
score: 99.02186168323864
patch: traverse ( c , node ) ; break ; }
rank: 567
score: 98.85888671875
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class CaMeL Name ( ) + $STRING$ ) ; }
rank: 567
score: 98.78868865966797
patch: if ( ! c . traverse ( c ) ) traverse ( c ) ;
rank: 568
score: 99.02967418323864
patch: column = c . get CaMeL Next ( ) ;
rank: 568
score: 99.021044921875
patch: traverse ( c ) ; break ; } ;
rank: 568
score: 98.91103108723958
patch: if ( next ( c ) ) {
rank: 568
score: 98.85882013494319
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c ) ) break ;
rank: 568
score: 98.82200520833334
patch: c = c . get CaMeL Value ( ) ; traverse ( ) ;
rank: 568
score: 98.78802020733173
patch: if ( parent == null ) { traverse ( c ) ;
rank: 569
score: 99.13249768708882
patch: traverse ( c ) ; ; n = c . get CaMeL First CaMeL Child ( ) ;
rank: 569
score: 99.05583052201705
patch: traverse ( node . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) , c ) ;
rank: 569
score: 99.02037556966145
patch: traverse ( c ) ; c . traverse ( ) ;
rank: 569
score: 98.96455891927083
patch: c = n . get CaMeL Next ( ) ; }
rank: 569
score: 98.8583514873798
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Key ( ) ) )
rank: 569
score: 98.82187906901042
patch: traverse ( c , || traverse ( c ) ) ;
rank: 570
score: 99.13232421875
patch: traverse ( c . traverse ( node ) ) ;
rank: 570
score: 99.05581325954861
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) ) ; for (
rank: 570
score: 99.02022705078124
patch: traverse ( c ) ; ; break ; }
rank: 570
score: 98.96455688476563
patch: next = c . get ( c ) ;
rank: 570
score: 98.90970458984376
patch: traverse ( node , node , false ) ;
rank: 570
score: 98.85796564275569
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Id ) ;
rank: 570
score: 98.82182965959821
patch: traverse ( c , c ;
rank: 570
score: 98.78778545673077
patch: if ( c != size ) { traverse ( c ) ;
rank: 571
score: 99.13220796130952
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) ) ; }
rank: 571
score: 99.05557250976562
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , node . get CaMeL Next ( ) ) ;
rank: 571
score: 99.02927652994792
patch: if ( c . should CaMeL Visit ( node ) )
rank: 571
score: 99.02019794170673
patch: line = c . get CaMeL First CaMeL Child ( ) ;
rank: 571
score: 98.8579434481534
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( null ) ) return ;
rank: 571
score: 98.82090657552084
patch: traverse ( ! traverse ( c ) ) ; traverse ( c ) ;
rank: 571
score: 98.7877197265625
patch: if ( c != null ) traverse ( 1 ) ;
rank: 572
score: 99.05542670355902
patch: traverse ( c , node . get CaMeL First CaMeL Child ( ) , null ) ;
rank: 572
score: 99.02913411458333
patch: Root c = c . get CaMeL Next ( ) ;
rank: 572
score: 99.01943969726562
patch: traverse ( c , ; ; c = c . ;
rank: 572
score: 98.85772026909723
patch: break traverse ( c , c ) ;
rank: 572
score: 98.820458984375
patch: traverse ( c , c ) ; end CaMeL Node ( c ) ;
rank: 572
score: 98.78770094651442
patch: if ( $NUMBER$ == c ) { traverse ( c ) ;
rank: 573
score: 99.13168569711539
patch: traverse ( c , c . traverse ( node ) ) ;
rank: 573
score: 99.0626729329427
patch: Node c = input . get CaMeL Next ( ) ;
rank: 573
score: 99.05523681640625
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next ( )
rank: 573
score: 99.01806030273437
patch: traverse ( c , c ) ; ; }
rank: 573
score: 98.8576896421371
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Class CaMeL Name ( ) ) ) ;
rank: 573
score: 98.82042518028847
patch: traverse ( c || c ; traverse ( c ) ) ;
rank: 574
score: 99.131298828125
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) ) ; ;
rank: 574
score: 99.028955078125
patch: if ( node . get CaMeL First CaMeL Child ( ) == node )
rank: 574
score: 99.01798872514205
patch: if ( ! c . equals ( c ) )
rank: 574
score: 98.962353515625
patch: traverse ( c , node , parent ) ;
rank: 574
score: 98.9072265625
patch: if ( ! should CaMeL Visit ( parent ) ) {
rank: 574
score: 98.85726928710938
patch: if ( node . get CaMeL Name ( ) . equals ( node . get CaMeL Name ( ) ) ) break ;
rank: 574
score: 98.82029724121094
patch: traverse ( c && c . get CaMeL Type ( ) != $STRING$ ) ;
rank: 574
score: 98.78768920898438
patch: traverse ( c . null ) ;
rank: 575
score: 99.05991617838542
patch: Node c = index . get CaMeL Next ( ) ;
rank: 575
score: 99.01568603515625
patch: traverse ( c , c , false , true ) ;
rank: 575
score: 98.96208360460069
patch: node . get CaMeL Next ( ) ;
rank: 575
score: 98.85721028645834
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Type CaMeL Name ( ) ) )
rank: 575
score: 98.82029215494792
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( $STRING$ ) ;
rank: 575
score: 98.78740583147321
patch: if ( n != 0 ) { traverse ( c ) ; }
rank: 576
score: 99.1306884765625
patch: traverse ( c . get CaMeL Root ( ) , c . get CaMeL Parent ( ) ) ;
rank: 576
score: 99.05417351973684
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) . get CaMeL Next CaMeL
rank: 576
score: 99.02852006392045
patch: reference = c . get CaMeL Next ( ) ;
rank: 576
score: 99.0130615234375
patch: if ( c instanceof Node ) traverse ( c ) ;
rank: 576
score: 98.9617032137784
patch: visit ( c ) ; visit ( node ) ;
rank: 576
score: 98.85718883167614
patch: if ( c == null ) { continue ; }
rank: 576
score: 98.82021658761161
patch: traverse ( c ) ; c -- ; traverse ( c ) ;
rank: 576
score: 98.78705596923828
patch: check ( c , c ) ;
rank: 577
score: 99.05909220377605
patch: Collection c = c . get CaMeL Next ( ) ;
rank: 577
score: 99.02827962239583
patch: element = c . get CaMeL Next ( ) ; c = next ;
rank: 577
score: 99.012841796875
patch: traverse ( node , c , true ) ;
rank: 577
score: 98.90425415039063
patch: if ( c == null ) { break ;
rank: 577
score: 98.8568115234375
patch: break traverse ( c ) ;
rank: 577
score: 98.82010591947116
patch: traverse ( this , c ) ; traverse ( c ) ;
rank: 577
score: 98.78641451322116
patch: if ( ! c . size ( ) == 0 ) {
rank: 578
score: 99.1298828125
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) . traverse ( c ) ) ;
rank: 578
score: 99.05333891369048
patch: traverse ( c . get CaMeL Next ( ) . get CaMeL First CaMeL Child ( ) ) ; }
rank: 578
score: 99.02792197779605
patch: if ( c . get CaMeL First CaMeL Child ( ) . equals ( node . get CaMeL
rank: 578
score: 99.01209716796875
patch: if ( c . equals ( c ) )
rank: 578
score: 98.9024658203125
patch: if ( ! should CaMeL Visit ( c ) )
rank: 578
score: 98.85661177201705
patch: System . err . println ( $STRING$ + c . get CaMeL Class CaMeL Name ( ) ) ; return ;
rank: 578
score: 98.81993272569444
patch: } traverse ( c , c ) ;
rank: 578
score: 98.78624471028645
patch: if ( ! == 0 ) traverse ( c ) ;
rank: 579
score: 99.12921142578125
patch: traverse ( c ) ; value = c . get CaMeL First CaMeL Child ( ) ;
rank: 579
score: 99.05291015625
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) , c . get CaMeL Next CaMeL
rank: 579
score: 99.02788751775569
patch: chunk = c . get CaMeL Next ( ) ;
rank: 579
score: 99.01123046875
patch: traverse ( c , ; ; break ; }
rank: 579
score: 98.90228271484375
patch: traverse ( node , n ) ;
rank: 579
score: 98.856298828125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Id ( ) ;
rank: 579
score: 98.819921875
patch: traverse ( c , c ) ; this . c ( c ) ;
rank: 579
score: 98.78564453125
patch: traverse ( c , null ) ; ;
rank: 580
score: 99.12827555338542
patch: traverse ( c ) ; in = c . get CaMeL First CaMeL Child ( ) ;
rank: 580
score: 99.05565296519886
patch: Node next = c . get CaMeL Next ++ ;
rank: 580
score: 99.05288357204861
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , visits , $NUMBER$ ) ;
rank: 580
score: 99.02787017822266
patch: Element c = c . get CaMeL Next ( ) ; c = next ;
rank: 580
score: 99.01035563151042
patch: traverse ( c ) ; n = c . ; }
rank: 580
score: 98.96011962890626
patch: traverse ( c , null , node ) ;
rank: 580
score: 98.90028076171875
patch: c = children . get ( c ) ;
rank: 580
score: 98.85604194972827
patch: if ( ! c . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) continue ;
rank: 580
score: 98.81956722861842
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . c ;
rank: 580
score: 98.7855936686198
patch: if ( ! traverse ( 0 ) ) { return ;
rank: 581
score: 99.12795003255208
patch: traverse ( c ) ; c = n . get CaMeL First CaMeL Child ( ) ;
rank: 581
score: 99.05255805121527
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , $NUMBER$ ) ;
rank: 581
score: 99.00884454900569
patch: if ( c . equals ( c ) ) {
rank: 581
score: 98.85579833984374
patch: if ( c != null ) return ; }
rank: 581
score: 98.81946563720703
patch: traverse ( c || c . get CaMeL Type ( ) != $STRING$ ) ;
rank: 581
score: 98.78507486979167
patch: if ( ! c ; traverse ( c ) ) {
rank: 582
score: 99.12755062705592
patch: traverse ( ( ( Node ) c ) . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 582
score: 99.05247913707386
patch: int visits = c . get CaMeL First CaMeL Child ( ) . get CaMeL Child CaMeL Count ( ) ;
rank: 582
score: 99.02720811631944
patch: Object next = c . get CaMeL First CaMeL Child ( ) ; c = next ;
rank: 582
score: 99.00729370117188
patch: traverse ( c , ; n ++ ) ;
rank: 582
score: 98.95475630326705
patch: traverse ( c ) . visit ( node ) ;
rank: 582
score: 98.85543020148026
patch: if ( c != null ) c = c . get CaMeL First CaMeL Line ( ) ;
rank: 582
score: 98.81882887620192
patch: traverse ( c ) ; } else traverse ( c ) ;
rank: 582
score: 98.78463040865384
patch: if ( ! < 1 ) { traverse ( c ) ;
rank: 583
score: 99.12748887803819
patch: traverse ( ( c . get CaMeL First CaMeL Child ( ) ) , c ) ;
rank: 583
score: 99.0270004272461
patch: AST next = c . get CaMeL Next ( ) ; c = next ;
rank: 583
score: 99.00638834635417
patch: int type = c . get CaMeL Type ( ) ;
rank: 583
score: 98.95389404296876
patch: traverse ( c , node , this ) ;
rank: 583
score: 98.89530436197917
patch: if ( node . get CaMeL First CaMeL Child ( )
rank: 583
score: 98.85528009588069
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c ) )
rank: 583
score: 98.8187255859375
patch: traverse ( c ) ; c = c . c ; }
rank: 583
score: 98.7843487079327
patch: if ( null != n ) { traverse ( c ) ;
rank: 584
score: 99.05113728841145
patch: Node next = in . get CaMeL Next ( ) ;
rank: 584
score: 99.0267333984375
patch: node = c . get CaMeL Next ( ) ; c = next ; }
rank: 584
score: 99.00611368815105
patch: traverse ( c , ; n = c . ; }
rank: 584
score: 98.94959605823864
patch: traverse ( node ) ; visit ( c ) ;
rank: 584
score: 98.81842041015625
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . null ) ;
rank: 584
score: 98.78434244791667
patch: traverse ( c != null && c == c ) ;
rank: 585
score: 99.12740652901786
patch: c = c . get CaMeL Parent ( ) . get CaMeL First CaMeL Child ( ) ; break ;
rank: 585
score: 99.0504659016927
patch: Node c = c . get CaMeL Value ( ) ;
rank: 585
score: 99.02643377130681
patch: st = c . get CaMeL Next ( ) ;
rank: 585
score: 99.00579364483173
patch: traverse ( c , traverse ( c , false ) ) ;
rank: 585
score: 98.94926147460937
patch: traverse ( c , null , null ) ;
rank: 585
score: 98.89442443847656
patch: traverse ( node , parent ) ;
rank: 585
score: 98.8549273947011
patch: if ( node . get CaMeL Name ( ) . equals ( node . get CaMeL Name ( ) ) ) ;
rank: 585
score: 98.8177490234375
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = true ;
rank: 585
score: 98.78392537434895
patch: traverse ( c != null && n == 0 ) ;
rank: 586
score: 99.052099609375
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) , c ;
rank: 586
score: 99.02598987926136
patch: header = c . get CaMeL Next ( ) ;
rank: 586
score: 99.00410600142045
patch: traverse ( c , c , false ) ; ;
rank: 586
score: 98.85469876802884
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( node . get CaMeL Key ( ) ) )
rank: 586
score: 98.81771995907738
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get ( ) ;
rank: 586
score: 98.78387451171875
patch: if ( c != null ) { c = n ;
rank: 587
score: 99.02574398643092
patch: if ( c . get CaMeL Next ( ) . get CaMeL First CaMeL Child ( ) !=
rank: 587
score: 98.94779459635417
patch: c = n . get ( ) ;
rank: 587
score: 98.85459206321023
patch: c = c . get CaMeL Length ( ) ;
rank: 587
score: 98.81758117675781
patch: traverse ( c ) ; c = c . get CaMeL Node ( ) ;
rank: 587
score: 98.78383382161458
patch: if ( ! traverse ( c ) ) ; else {
rank: 588
score: 99.12628851996527
patch: traverse ( ( Node ) c . get CaMeL Parent CaMeL Node ( ) ) ; }
rank: 588
score: 99.05174763997395
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next ( ) , $NUMBER$ ) ;
rank: 588
score: 99.04960123697917
patch: Node c = value . get CaMeL Next ( ) ;
rank: 588
score: 99.0255126953125
patch: f = c . get CaMeL Next ( ) ; c = next ;
rank: 588
score: 99.00260009765626
patch: traverse ( c , ; c ) ; }
rank: 588
score: 98.94603135850694
patch: c = c . next ( ) ;
rank: 588
score: 98.85451341711956
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) }
rank: 588
score: 98.81736246744792
patch: traverse ( c ) ; if traverse ( c ) ;
rank: 588
score: 98.78376116071429
patch: if ( c != null ) ; traverse ( c ) ; }
rank: 589
score: 99.0512186686198
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , this ) ;
rank: 589
score: 99.04884847005208
patch: Node input = c . get CaMeL Next ( ) ;
rank: 589
score: 99.02533513849431
patch: code = c . get CaMeL Next ( ) ;
rank: 589
score: 99.00196422230114
patch: traverse ( c , ; c = ) ; }
rank: 589
score: 98.88728471235795
patch: traverse ( node , next ( c ) ) ;
rank: 589
score: 98.8544391134511
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Parent ( ) ;
rank: 589
score: 98.81734525240384
patch: traverse ( c + c ) ; traverse ( c ) ;
rank: 589
score: 98.7835223858173
patch: traverse ( c ) ; traverse ( c , 1 ) ;
rank: 590
score: 99.12587280273438
patch: c = ( node . get CaMeL First CaMeL Child ( ) ) . traverse ( c ) ;
rank: 590
score: 99.04827880859375
patch: Node next = name . get CaMeL Next ( ) ;
rank: 590
score: 99.0252685546875
patch: if ( c . get CaMeL First CaMeL Child ( ) == c ) {
rank: 590
score: 99.00191650390624
patch: traverse ( c , c ) ; } ;
rank: 590
score: 98.94371948242187
patch: c = parent . get ( c ) ;
rank: 590
score: 98.88421020507812
patch: if ( c != null - 1 ) {
rank: 590
score: 98.8542147549716
patch: else { traverse ( c ) ; break ; }
rank: 590
score: 98.78282752403847
patch: if ( c != null ) { return ; } else {
rank: 591
score: 99.12586127387152
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) , this ) ;
rank: 591
score: 99.05100319602273
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ) ; for (
rank: 591
score: 99.00111694335938
patch: n = c . traverse ( c ) ;
rank: 591
score: 98.85410766601562
patch: traverse ( parent , c , c ) ;
rank: 591
score: 98.81698947482639
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( null ) ;
rank: 591
score: 98.7823486328125
patch: if ( c != c ) { c = c ;
rank: 592
score: 99.05098470052083
patch: c = c . get CaMeL Last CaMeL Child ( ) ; c = c . get CaMeL Next ( ) ; }
rank: 592
score: 99.04653695913461
patch: Node next = c . get CaMeL Node ( c ) ;
rank: 592
score: 99.02470317639802
patch: if ( c != null || c . get CaMeL First CaMeL Child ( ) != null )
rank: 592
score: 98.9430264559659
patch: traverse ( c , ( Node ) node ) ;
rank: 592
score: 98.85404459635417
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { break ; }
rank: 592
score: 98.81655544704861
patch: traverse ( get ( c ) ) ;
rank: 592
score: 98.7821796123798
patch: if ( ! c . Reference ( ) ) { return ;
rank: 593
score: 99.12465413411458
patch: traverse ( c , c . get CaMeL Current CaMeL Node ( ) , true ) ;
rank: 593
score: 99.0508700284091
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) , parent ) ;
rank: 593
score: 99.024658203125
patch: return c . get CaMeL First CaMeL Child ( ) ; c = next ;
rank: 593
score: 99.00064086914062
patch: if ( c != ; c = c . ; }
rank: 593
score: 98.94208984375
patch: traverse ( c , parent , false ) ;
rank: 593
score: 98.88182983398437
patch: try { if ( c instanceof Node ) {
rank: 593
score: 98.81653771033653
patch: traverse ( c , c ) ; traverse ( false ) ;
rank: 593
score: 98.78203667534723
patch: if ( c == null ) ; public
rank: 594
score: 99.12344021267361
patch: if ( c . get CaMeL Type ( ) . starts CaMeL With ( $STRING$ ) )
rank: 594
score: 99.05063348067434
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , next ( c ) ) ;
rank: 594
score: 99.02393863075658
patch: if ( c . get CaMeL Next ( ) && c . get CaMeL Next ( ) )
rank: 594
score: 99.00064086914062
patch: traverse ( c , ; c = c . ; ;
rank: 594
score: 98.9415054321289
patch: traverse ( c , index ) ;
rank: 594
score: 98.85355224609376
patch: if ( ! c . is CaMeL Instance ( c . get CaMeL Id ( ) ) ) {
rank: 594
score: 98.8164774576823
patch: traverse ( c , c ) ; traverse ( c ;
rank: 594
score: 98.78195190429688
patch: if ( c == null ) { ) return ; }
rank: 595
score: 99.02333420973558
patch: if ( node . get CaMeL First CaMeL Child ( ) )
rank: 595
score: 98.99875895182292
patch: traverse ( c , n ) ; }
rank: 595
score: 98.93860541449652
patch: visit ( next ( c ) ) ;
rank: 595
score: 98.85349439538044
patch: if ( node . get CaMeL Name ( ) . equals ( c . get CaMeL Name ( ) ) ) ;
rank: 595
score: 98.81626383463542
patch: c = c . get CaMeL First CaMeL Child ( ) ; while ( false ) ;
rank: 596
score: 99.12242367393092
patch: if ( ( c = c . get CaMeL First CaMeL Child ( ) ) != null )
rank: 596
score: 99.0425516764323
patch: Node next = group . get CaMeL Next ( ) ;
rank: 596
score: 99.02280787417763
patch: while ( c != null && c . get CaMeL First CaMeL Child ( ) != null )
rank: 596
score: 98.99840087890625
patch: traverse ( c , ) ; return ; }
rank: 596
score: 98.93821207682292
patch: visit ( node ) ;
rank: 596
score: 98.87559814453125
patch: if ( c instanceof Node ) { try {
rank: 596
score: 98.85338745117187
patch: if ( node . get CaMeL Id ( ) == c . get CaMeL Name ( ) ) {
rank: 596
score: 98.81615271935097
patch: traverse ( c , traverse ( c , node ) ) ;
rank: 596
score: 98.7810528094952
patch: if ( c != null ) ) traverse ( c ) ;
rank: 597
score: 99.12217407226562
patch: traverse ( c . ; c = c . get CaMeL Parent CaMeL Node ( ) ) ; }
rank: 597
score: 99.04985215928819
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , node , visits ) ;
rank: 597
score: 99.04191080729167
patch: c = c . get CaMeL Next ( ) ; return
rank: 597
score: 99.02223036024306
patch: context = c . get CaMeL First CaMeL Child ( ) ; traverse ( c ) ;
rank: 597
score: 98.99763997395833
patch: traverse ( c , ; ( Node ) c ) ;
rank: 597
score: 98.85326538085937
patch: if ( c . get CaMeL Id ( ) == c . get CaMeL Name ( ) ) {
rank: 597
score: 98.81605931332237
patch: c = c . get CaMeL First CaMeL Child ( ) ; while ( c == null )
rank: 597
score: 98.7805926983173
patch: if ( ! == 1 ) { traverse ( c ) ;
rank: 598
score: 99.1220703125
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) , c ) ;
rank: 598
score: 99.04958177649456
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) , c . get CaMeL
rank: 598
score: 99.02218467310855
patch: if ( ! ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL
rank: 598
score: 98.9961825284091
patch: traverse ( c , true ) ; break ; }
rank: 598
score: 98.93745422363281
patch: c . traverse ( node ) ;
rank: 598
score: 98.8731689453125
patch: add CaMeL Node ( c ) ;
rank: 598
score: 98.8532650596217
patch: System . err . println ( $STRING$ + c . get CaMeL Name ( ) ) ; ;
rank: 598
score: 98.81536865234375
patch: traverse ( c , ! traverse ( c ) ) ;
rank: 598
score: 98.78026404747597
patch: if ( ! c . contains ( c ) ) { )
rank: 599
score: 99.12179904513889
patch: traverse ( c , c . get CaMeL Last CaMeL Child ( ) , false ) ;
rank: 599
score: 99.0494384765625
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , id ) ;
rank: 599
score: 99.02168412642045
patch: cs = c . get CaMeL Next ( ) ;
rank: 599
score: 98.87131958007812
patch: traverse ( node , c , node ) ;
rank: 599
score: 98.85296921502976
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) }
rank: 599
score: 98.81517537434895
patch: traverse ( c , c ) ; node = c ;
rank: 599
score: 98.77987905649039
patch: if ( ! c . equals ( n ) ) { ;
rank: 600
score: 99.12106323242188
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) . get ( ) ) ;
rank: 600
score: 99.04936387803819
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , node , 0 ) ;
rank: 600
score: 99.03893025716145
patch: Node line = c . get CaMeL Next ( ) ;
rank: 600
score: 99.02157432154605
patch: if ( c . get CaMeL First CaMeL Child ( ) == c . get CaMeL Next CaMeL
rank: 600
score: 98.9945576985677
patch: String name = c . get CaMeL Name ( ) ;
rank: 600
score: 98.93553577769886
patch: traverse ( node ) ; visit ( node ) ;
rank: 600
score: 98.85285897090517
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( node . get CaMeL Class CaMeL Name ( ) ) ) {
rank: 600
score: 98.81512920673077
patch: traverse ( c , parent ) ; traverse ( c ) ;
rank: 600
score: 98.77965369591347
patch: if ( c == null ) { c = c ; }
rank: 601
score: 99.12088216145834
patch: if ( c . get CaMeL Type ( ) . equals ( ) )
rank: 601
score: 99.0490966796875
patch: traverse ( c , node , n ) ;
rank: 601
score: 99.02073567708334
patch: traverse = c . get CaMeL Next ( ) ; c = next ;
rank: 601
score: 98.93458140980114
patch: visits ++ ; traverse ( c , c ) ;
rank: 601
score: 98.86880493164062
patch: return . traverse ( c ) ;
rank: 601
score: 98.85274929470486
patch: break ; } traverse ( c ) ;
rank: 601
score: 98.77940877278645
patch: if ( c == null ) { ; = c ;
rank: 602
score: 99.04908511513158
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , node . get CaMeL Next CaMeL
rank: 602
score: 99.02064098011364
patch: end = c . get CaMeL Next ( ) ;
rank: 602
score: 98.99343532986111
patch: traverse ( c , null ) ; }
rank: 602
score: 98.9331942471591
patch: c = should CaMeL Retraverse ( node ) ;
rank: 602
score: 98.86821899414062
patch: if ( c != null ) visits ++ ;
rank: 602
score: 98.85269601004464
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( node . get CaMeL Name ( ) ) ) continue ;
rank: 602
score: 98.81455078125
patch: traverse ( c ) ; c = c ; traverse ( c ) ;
rank: 602
score: 98.77921295166016
patch: traverse ( n , 0 ) ;
rank: 603
score: 99.12054443359375
patch: traverse ( c ) ; level = c . get CaMeL First CaMeL Child ( ) ;
rank: 603
score: 99.04893275669643
patch: if ( c . get CaMeL First CaMeL Child ( ) == null && node . get CaMeL Next CaMeL
rank: 603
score: 99.01995171440973
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . node ) ;
rank: 603
score: 98.93305053710938
patch: traverse ( c , 0 , false ) ;
rank: 603
score: 98.85255126953125
patch: if ( ! c . get CaMeL State ( ) . is CaMeL Empty ( ) ) break ;
rank: 603
score: 98.77867635091145
patch: if ( ! > 0 ) traverse ( c ) ;
rank: 604
score: 99.04862467447917
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , n , $STRING$ ) ;
rank: 604
score: 99.0357196514423
patch: else c = c . get CaMeL Next ( ) ; }
rank: 604
score: 99.01943359375
patch: if ( c . get CaMeL First CaMeL Child ( ) == ) {
rank: 604
score: 98.99149576822917
patch: traverse ( c , c , false , false ) ;
rank: 604
score: 98.9314208984375
patch: traverse ( c , [ 0 ] ) ;
rank: 604
score: 98.8671646118164
patch: traverse ( node , null ) ;
rank: 604
score: 98.8525390625
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( node . get CaMeL Id ( ) ) ) ;
rank: 604
score: 98.81387329101562
patch: do . traverse ( c ) ;
rank: 604
score: 98.77845177283653
patch: traverse ( c , c ) ; traverse ( n ) ;
rank: 605
score: 99.11982807360198
patch: traverse ( c , ( Node ) c . get CaMeL Last CaMeL Child ( ) ) ;
rank: 605
score: 99.04860617897727
patch: ret = c . get CaMeL Next ( ) ; c = c . get CaMeL Next ( ) ; }
rank: 605
score: 99.0189541903409
patch: col = c . get CaMeL Next ( ) ;
rank: 605
score: 98.99089965820312
patch: traverse ( c , ; return true ) ;
rank: 605
score: 98.93074340820313
patch: traverse ( c ) ; next = next ;
rank: 605
score: 98.85247171336206
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( this . get CaMeL Class CaMeL Name ( ) ) ) {
rank: 605
score: 98.81385216346153
patch: traverse ( c || true ) ; traverse ( c ) ;
rank: 605
score: 98.77835083007812
patch: if ( ! < 0 ) traverse ( c ) ;
rank: 606
score: 99.0479736328125
patch: next = c . get CaMeL Next ( ) ; c = next . get CaMeL Next ( ) ; }
rank: 606
score: 99.018798828125
patch: component = c . get CaMeL Next ( ) ;
rank: 606
score: 98.8523418719952
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( this . get CaMeL Name ( ) ) )
rank: 606
score: 98.81298217773437
patch: if ( c . get CaMeL Type ( ) != ? c . get CaMeL Type ( ) ;
rank: 607
score: 99.11965506417411
patch: traverse ( c . get CaMeL Parent ( ) , false ) ;
rank: 607
score: 99.047861328125
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) , c . ) ;
rank: 607
score: 99.03373209635417
patch: Node key = c . get CaMeL Next ( ) ;
rank: 607
score: 99.0185546875
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Last CaMeL
rank: 607
score: 98.92794189453124
patch: traverse ( c , visits < $NUMBER$ ) ;
rank: 607
score: 98.85891723632812
patch: if ( c != null ) }
rank: 607
score: 98.85231615149456
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) return ; }
rank: 607
score: 98.81293083639706
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( c ;
rank: 607
score: 98.77829996744792
patch: traverse ( c == null && c == 0 ) ;
rank: 608
score: 99.1195068359375
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) ) ; traverse ( c ) ;
rank: 608
score: 99.04753766741071
patch: traverse ( c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ,
rank: 608
score: 99.03363037109375
patch: Node next = id . get CaMeL Next ( ) ;
rank: 608
score: 98.9899169921875
patch: traverse ( c , false ) ; * /
rank: 608
score: 98.85230509440105
patch: traverse ( parent ) ;
rank: 608
score: 98.85228474934895
patch: if ( node . get CaMeL Name ( ) . equals ( c . get CaMeL Name ( ) ) ) break ;
rank: 608
score: 98.81285942925348
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( this ) ;
rank: 608
score: 98.77822641225961
patch: if ( c != null ) traverse ( c ) ) ;
rank: 609
score: 99.04725406044408
patch: if ( c . get CaMeL First CaMeL Child ( ) == null && c . get CaMeL
rank: 609
score: 99.01824396306819
patch: entry = c . get CaMeL Next ( ) ;
rank: 609
score: 98.98980712890625
patch: traverse ( c , c , true , true ) ;
rank: 609
score: 98.85226279810855
patch: System . err . println ( $STRING$ + c . get CaMeL Name ( ) + ) ;
rank: 609
score: 98.85128784179688
patch: if ( c != null ) { do {
rank: 609
score: 98.8125712076823
patch: traverse ( c , null ) ; c = c ;
rank: 609
score: 98.77820763221153
patch: if ( $NUMBER$ != null ) { traverse ( c ) ;
rank: 610
score: 99.11888292100694
patch: traverse ( c , c . get CaMeL Last CaMeL Child ( ) , true ) ;
rank: 610
score: 99.01790578741776
patch: if ( c . get CaMeL First CaMeL Child ( ) != c . get CaMeL Next CaMeL
rank: 610
score: 98.9887451171875
patch: traverse ( c , ; c . ) ;
rank: 610
score: 98.92387390136719
patch: traverse ( [ 0 ] ) ;
rank: 610
score: 98.85216796875
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Id ( ) + $STRING$ ;
rank: 610
score: 98.8125244140625
patch: traverse ( c || node . get CaMeL Type ( ) != ) ;
rank: 610
score: 98.7779071514423
patch: if ( traverse ( c ) ) traverse ( n ) ;
rank: 611
score: 99.11875813802084
patch: int line = c . get CaMeL Line CaMeL Number ( line ) ;
rank: 611
score: 99.047099609375
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) true ) ;
rank: 611
score: 99.01773874383224
patch: if ( node . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) )
rank: 611
score: 98.9870361328125
patch: traverse ( c , c ) ; } }
rank: 611
score: 98.85208290501645
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals ( $STRING$ ) ) {
rank: 611
score: 98.84952121310764
patch: c = c . size ( ) ;
rank: 611
score: 98.81201171875
patch: c = c . get CaMeL Value ( ) ; c = c . get CaMeL Next ( ) ;
rank: 611
score: 98.77779812282986
patch: try { traverse ( c ) ; else
rank: 612
score: 99.11847245065789
patch: traverse ( ( Node ) c . get CaMeL Parent CaMeL Node ( ) , c ) ;
rank: 612
score: 99.04641241776316
patch: if ( c . get CaMeL Parent ( ) != null && c . get CaMeL Next CaMeL
rank: 612
score: 98.92224799262152
patch: c = node . get ( ) ;
rank: 612
score: 98.85206298828125
patch: if ( ! n . get CaMeL Type ( ) . is CaMeL Empty ( ) ) return ;
rank: 612
score: 98.8455810546875
patch: if ( c != null ) { }
rank: 612
score: 98.81189643012152
patch: ) ; ; traverse ( c ) ;
rank: 612
score: 98.7775409405048
patch: traverse ( c , n ) ; traverse ( c ) ;
rank: 613
score: 99.11820475260417
patch: ; c = c . get CaMeL Parent CaMeL Node ( ) ; }
rank: 613
score: 99.01739501953125
patch: Symbol next = c . get CaMeL Next ( ) ; c = next ;
rank: 613
score: 98.98382098858173
patch: if ( c . ) { traverse ( c ) ; }
rank: 613
score: 98.9216796875
patch: traverse ( c , c , $STRING$ ) ;
rank: 613
score: 98.85205078125
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class CaMeL Name ( ) , ) ;
rank: 613
score: 98.81173706054688
patch: traverse ( c , c ) ; for ( ) ;
rank: 613
score: 98.77739606584821
patch: if ( ! c . iterator ( ) . break ( ) ;
rank: 614
score: 99.11755981445313
patch: traverse ( c ) ; c = ( node . get CaMeL First CaMeL Child ( ) ) ;
rank: 614
score: 99.04528130425348
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c , null ) ;
rank: 614
score: 98.983154296875
patch: traverse ( c ) ; break ; } * /
rank: 614
score: 98.9201431274414
patch: traverse ( id , c ) ;
rank: 614
score: 98.85162062872024
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c ) ) ;
rank: 614
score: 98.81148529052734
patch: traverse ( c + $NUMBER$ ) ;
rank: 614
score: 98.77730305989583
patch: if ( n == null ) { public
rank: 615
score: 99.04439453125
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next = c . get CaMeL Next CaMeL
rank: 615
score: 99.03054809570312
patch: Node c = c . get CaMeL Line ( ) ;
rank: 615
score: 99.01732584635417
patch: if ( c . get CaMeL Next ( ) && c . get CaMeL
rank: 615
score: 98.918994140625
patch: traverse ( c . next ( ) ) ;
rank: 615
score: 98.84197998046875
patch: if ( c instanceof Node ) { return ;
rank: 615
score: 98.77706146240234
patch: if ( ! c . iterator ( ) . iterator ( ) ; break ;
rank: 616
score: 99.11664225260417
patch: while ( c . get CaMeL Parent CaMeL Node ( ) != null )
rank: 616
score: 99.04365871263587
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) )
rank: 616
score: 99.01706764914773
patch: match = c . get CaMeL Next ( ) ;
rank: 616
score: 98.98264567057292
patch: if ( c . equals ( c ) ) continue ;
rank: 616
score: 98.91826171875
patch: traverse ( c + $NUMBER$ , c ) ;
rank: 616
score: 98.85151110197368
patch: if ( ! node . get CaMeL Type ( ) . is CaMeL Empty ( ) ) {
rank: 616
score: 98.84141710069444
patch: if ( c != null ) { {
rank: 616
score: 98.81050618489583
patch: c = c . get CaMeL First CaMeL Child ( ) ; while ( c ) ;
rank: 616
score: 98.77701241629464
patch: if ( c != ) { traverse ( c , c ) ;
rank: 617
score: 99.11648995535714
patch: traverse ( c , c . get CaMeL Parent ( ) . get CaMeL Parent ( ) ) ; }
rank: 617
score: 99.04286545973558
patch: Node next = c . get CaMeL Next ( c ) ;
rank: 617
score: 99.01667924360795
patch: replaced = c . get CaMeL Next ( ) ;
rank: 617
score: 98.98252868652344
patch: traverse ( c , current ) ;
rank: 617
score: 98.91609497070313
patch: traverse ( ! next ( c ) ) ;
rank: 617
score: 98.85129310344827
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Id ( ) ) ) {
rank: 617
score: 98.83943314985795
patch: if ( c instanceof Node ) { return ; }
rank: 617
score: 98.80990600585938
patch: traverse ( c , c ) ; current = c ;
rank: 617
score: 98.77649603949652
patch: try { add ( c ) ; }
rank: 618
score: 99.11624948601974
patch: traverse ( c , ( Node ) c . get CaMeL Current CaMeL Node ( ) ) ;
rank: 618
score: 99.042724609375
patch: if ( node . get CaMeL Last CaMeL Child ( ) != null && c . get CaMeL Next CaMeL
rank: 618
score: 99.0298739346591
patch: c = list . get CaMeL Next ( ) ;
rank: 618
score: 99.01667616102431
patch: traverse ( c == null && c . get CaMeL First CaMeL Child ( ) ) ;
rank: 618
score: 98.98155721028645
patch: traverse ( c , ; traverse ( c ) ) ;
rank: 618
score: 98.91510009765625
patch: traverse ( node , c , null ) ;
rank: 618
score: 98.85120738636364
patch: if ( ! c . is CaMeL Empty ( ) || c . is CaMeL Empty ( ) ) { }
rank: 618
score: 98.83821244673295
patch: if ( node . traverse ( c ) ) {
rank: 618
score: 98.77617938701923
patch: if ( ! traverse ( c ) ) { return ; else
rank: 619
score: 99.11561414930556
patch: traverse ( c , n , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 619
score: 99.01663411458334
patch: body = c . get CaMeL Next ( ) ; c = next ;
rank: 619
score: 98.9145840731534
patch: c = c . get CaMeL Next = c ;
rank: 619
score: 98.85115872896634
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . to CaMeL Lower CaMeL Case ( ) ) ;
rank: 619
score: 98.83786010742188
patch: return . traverse ( node ) ;
rank: 619
score: 98.77607945033482
patch: if ( ! c . equals ( n ) ) { return ;
rank: 620
score: 99.1156005859375
patch: traverse ( c , c . get CaMeL Current CaMeL Node ( ) , false ) ;
rank: 620
score: 99.04209498355263
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) ) ; visits ++ ;
rank: 620
score: 99.02766557173295
patch: c = c . get CaMeL Line ( ) ;
rank: 620
score: 99.01625689338235
patch: if ( c != null && c . get CaMeL First CaMeL Child ( ) !=
rank: 620
score: 98.97983620383523
patch: traverse ( c , node ) ; return ; }
rank: 620
score: 98.91404418945312
patch: traverse ( [ 0 ] , node ) ;
rank: 620
score: 98.85088556463069
patch: if ( ! c . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c ) ) {
rank: 620
score: 98.83665161132812
patch: Node next = c . get ( ) ;
rank: 620
score: 98.80948893229167
patch: traverse ( c ) ; traverse traverse ( c ) ;
rank: 620
score: 98.77589246961806
patch: traverse ( c && c != ) ;
rank: 621
score: 99.03917100694444
patch: if ( c . get CaMeL First CaMeL Child ( ) == null ) { for (
rank: 621
score: 99.01617986505681
patch: scope = c . get CaMeL Next ( ) ;
rank: 621
score: 98.97823392427884
patch: temp = c . get CaMeL First CaMeL Child ( ) ;
rank: 621
score: 98.85067894345238
patch: System . err . println ( $STRING$ + c . get CaMeL Id ( ) ) ; return ; }
rank: 621
score: 98.83270263671875
patch: if ( ! next ( c ) ) {
rank: 621
score: 98.77570936414931
patch: if ( c == 0 ) { ;
rank: 622
score: 99.11514442845395
patch: traverse ( c ) ; c = c ) . get CaMeL First CaMeL Child ( ) ;
rank: 622
score: 99.03900701349431
patch: position = c . get CaMeL Next ( ) ;
rank: 622
score: 99.01612046185662
patch: try { if ( c . get CaMeL First CaMeL Child ( ) != null )
rank: 622
score: 98.97822265625
patch: traverse ( c , current ( ) ) ;
rank: 622
score: 98.85037364130434
patch: if ( ! node . get CaMeL Name ( ) . equals ( c . get CaMeL Id ( ) ) )
rank: 622
score: 98.80935668945312
patch: traverse ( new c ) ; traverse ( c ) ;
rank: 622
score: 98.77512032645089
patch: if ( ! c . equals ( 1 ) ) { return ;
rank: 623
score: 99.11482747395833
patch: int n = c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( )
rank: 623
score: 99.03861490885417
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , node ) ; break ;
rank: 623
score: 99.02280495383523
patch: Node = c . get CaMeL Next ( ) ;
rank: 623
score: 99.01568603515625
patch: if ( c . get CaMeL Parent ( ) . get CaMeL First CaMeL Child ( )
rank: 623
score: 98.97819213867187
patch: traverse ( c , node ) ; * /
rank: 623
score: 98.85036399147727
patch: if ( ! c . is CaMeL Empty ( ) || c . is CaMeL Empty ( ) ) break ;
rank: 623
score: 98.80928548177083
patch: c = c . get CaMeL First CaMeL Child ( ) ; c ( c ) ;
rank: 623
score: 98.7747333233173
patch: traverse ( c ) ; traverse ( n , c ) ;
rank: 624
score: 99.11415501644737
patch: traverse ( c , c . get CaMeL Parent CaMeL Node ( ) ) ; break ; }
rank: 624
score: 99.0156582919034
patch: actual = c . get CaMeL Next ( ) ;
rank: 624
score: 98.97777210582386
patch: n = c . get CaMeL Parent ( ) ;
rank: 624
score: 98.91016734730114
patch: traverse ( c , visit ( c ) ) ;
rank: 624
score: 98.84953703703704
patch: if ( ! c . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Type ( ) ) )
rank: 624
score: 98.82940673828125
patch: do { if ( c != null ) {
rank: 624
score: 98.80907185872395
patch: traverse ( c , c ) ; c = $NUMBER$ ;
rank: 624
score: 98.77452596028645
patch: traverse ( c != null ? c : c ) ;
rank: 625
score: 99.11361355251736
patch: traverse ( c , c , traverse . get CaMeL First CaMeL Child ( ) ) ;
rank: 625
score: 99.038447265625
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , next ( c . get CaMeL Next ( ) ) ) ;
rank: 625
score: 99.01556951349431
patch: pt = c . get CaMeL Next ( ) ;
rank: 625
score: 98.97760620117188
patch: traverse ( c , traverse ( c , ;
rank: 625
score: 98.84925426136364
patch: if ( ! node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c ) ) ;
rank: 625
score: 98.82771301269531
patch: should CaMeL Visit ( c ) ;
rank: 625
score: 98.8088848407452
patch: ) ; traverse ( c ) ; traverse ( c ) ;
rank: 625
score: 98.77443440755208
patch: if ( 1 != null ) traverse ( c ) ;
rank: 626
score: 99.01548138786765
patch: children = c . get CaMeL First CaMeL Child ( ) ; c = next ;
rank: 626
score: 98.82746717664931
patch: if ( c != null ) break ;
rank: 626
score: 98.808837890625
patch: traverse ( ! traverse ( c , node ) ) ;
rank: 626
score: 98.77423565204327
patch: if ( ! == c ) ; traverse ( c ) ;
rank: 627
score: 99.11308458116319
patch: traverse ( c , c , c . get CaMeL Last CaMeL Child ( ) ) ;
rank: 627
score: 99.03827582465277
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , visits , 1 ) ;
rank: 627
score: 99.01530317826705
patch: comp = c . get CaMeL Next ( ) ;
rank: 627
score: 98.8489990234375
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( n . get CaMeL Name ( ) ) ) return ;
rank: 627
score: 98.8267489346591
patch: traverse ( c , next ( node ) ) ;
rank: 627
score: 98.8087870279948
patch: traverse ( c , node ) ; traverse ( ) ;
rank: 627
score: 98.7740478515625
patch: traverse ( c != null ) ; traverse ( c ) ;
rank: 628
score: 99.11274549696181
patch: traverse ( c , 0 , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 628
score: 98.90919189453125
patch: traverse ( new Node ( node ) ) ;
rank: 628
score: 98.84885475852273
patch: traverse ( c , c , c ) ; }
rank: 628
score: 98.82654418945313
patch: if ( c instanceof Node ) { break ;
rank: 628
score: 98.8085578469669
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = false ;
rank: 628
score: 98.77381184895833
patch: if ( ! c . length ( ) == 1 ) { return ;
rank: 629
score: 99.01445978338069
patch: loop = c . get CaMeL Next ( ) ;
rank: 629
score: 99.01357199928977
patch: Node c = c . get CaMeL Next ++ ;
rank: 629
score: 98.97687237079327
patch: traverse ( c , ; c = c . next ) ;
rank: 629
score: 98.90888214111328
patch: c = visit ( c ) ;
rank: 629
score: 98.84874471028645
patch: if ( node . get CaMeL Name ( ) . equals ( c . get CaMeL Name ( ) ) ) continue ;
rank: 629
score: 98.82526397705078
patch: if ( type != null ) {
rank: 629
score: 98.80843411959134
patch: traverse ( ( Node ) c ; traverse ( c ) ;
rank: 629
score: 98.77369035993304
patch: if ( c == null ) { ; traverse ( c ) ;
rank: 630
score: 99.11233681126645
patch: traverse ( c ) ; c = parent . get CaMeL First CaMeL Child ( ) ; }
rank: 630
score: 99.03733995225694
patch: Node next = next . get CaMeL First CaMeL Child ( ) ; c = next ;
rank: 630
score: 99.01406028053977
patch: if ( c != null && c . get CaMeL
rank: 630
score: 98.9759033203125
patch: traverse ( ( Node ) c , ) ;
rank: 630
score: 98.84871633429276
patch: traverse ( c ) ; } c = c . get CaMeL First CaMeL Line ( ) ;
rank: 630
score: 98.80819498697916
patch: traverse ( c , c ) ; try { traverse ( c ) ;
rank: 630
score: 98.77322152944711
patch: if ( c != null ) { traverse ( 0 ) ;
rank: 631
score: 99.03697265625
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL First CaMeL Child ( ) false ) ;
rank: 631
score: 99.01349431818181
patch: d = c . get CaMeL Next ( ) ;
rank: 631
score: 98.97552020733173
patch: traverse ( c ) ; c = c . next ; }
rank: 631
score: 98.90626525878906
patch: traverse ( this , node ) ;
rank: 631
score: 98.84844760237068
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( node . get CaMeL Type CaMeL Name ( ) ) ) {
rank: 631
score: 98.80782877604166
patch: if ( c . null != c ) { traverse ( c ) ;
rank: 631
score: 98.77321213942308
patch: if ( c != null ) { traverse ( node ) ;
rank: 632
score: 99.11223754882812
patch: c = ( c . get CaMeL First CaMeL Child ( ) ) . traverse ( c ) ;
rank: 632
score: 98.84832763671875
patch: if ( traverse ( c ) ) continue ;
rank: 632
score: 98.80771019345238
patch: c = c . get CaMeL Value ( ) ; c = c . get CaMeL Type ( ) ;
rank: 632
score: 98.77303372896634
patch: if ( ! c . length ( ) == $NUMBER$ ) {
rank: 633
score: 99.1121826171875
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , traverse ) ;
rank: 633
score: 99.03639051649306
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) , size ) ;
rank: 633
score: 99.01309967041016
patch: return c . get CaMeL First CaMeL Child ( ) ; c = c ;
rank: 633
score: 98.84830147879464
patch: if ( ! node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) ;
rank: 633
score: 98.82254638671876
patch: if ( c != null ) { else {
rank: 633
score: 98.8075641134511
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . has CaMeL Next ( ) ;
rank: 633
score: 98.7728500366211
patch: if ( c != null ) { traverse ( c ) ; } else {
rank: 634
score: 99.01221812855114
patch: sym = c . get CaMeL Next ( ) ;
rank: 634
score: 99.00632934570312
patch: c = c . get CaMeL Next ++ ;
rank: 634
score: 98.97511800130208
patch: traverse ( c ) ; ; c = c . ;
rank: 634
score: 98.90492942116477
patch: visits ++ ; traverse ( c , node ) ;
rank: 634
score: 98.84812233664773
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c ) ) continue ;
rank: 634
score: 98.80748833550348
patch: traverse ( c + 0 , c ;
rank: 634
score: 98.77249908447266
patch: traverse ( c + n ) ;
rank: 635
score: 99.11106363932292
patch: traverse ( c ) ; n = c . get CaMeL Child CaMeL Count ( ) ;
rank: 635
score: 99.03606305803571
patch: if ( node . get CaMeL First CaMeL Child ( ) == null || c . get CaMeL Next CaMeL
rank: 635
score: 99.01212935014205
patch: group = c . get CaMeL Next ( ) ;
rank: 635
score: 99.0054219563802
patch: Node next = c . get CaMeL Line ( ) ;
rank: 635
score: 98.90299072265626
patch: visits ++ ; traverse ( c ) ; }
rank: 635
score: 98.8480936686198
patch: if ( node . get CaMeL Name ( ) . equals ( node . get CaMeL Name ( ) ) ) continue ;
rank: 635
score: 98.82167746803977
patch: while ( should CaMeL Visit ( c ) ) {
rank: 635
score: 98.80650419347427
patch: System . out . println ( $STRING$ ) ; traverse ( c , c ) ;
rank: 635
score: 98.7724609375
patch: if ( ! > 0 ) { traverse ( c ) ;
rank: 636
score: 99.11092122395833
patch: traverse ( ( Node ) c . get CaMeL First CaMeL Child ( ) ) ; }
rank: 636
score: 99.03597683376736
patch: traverse ( node , c . get CaMeL First CaMeL Child ( ) , node ) ;
rank: 636
score: 99.01153923483456
patch: return c . get CaMeL First CaMeL Child ( ) ; visit ( c ) ;
rank: 636
score: 98.97442157451923
patch: traverse ( c , ; c = c . ; } ;
rank: 636
score: 98.902783203125
patch: traverse ( c , false , null ) ;
rank: 636
score: 98.84787513469827
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Source CaMeL Name ( ) ) ) {
rank: 636
score: 98.81973605685764
patch: traverse ( ( Node ) node ) ;
rank: 636
score: 98.80569278492646
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( false )
rank: 636
score: 98.77234825721153
patch: if ( ! ( c != null ) ) { return ;
rank: 637
score: 99.01117498224431
patch: sel = c . get CaMeL Next ( ) ;
rank: 637
score: 99.00458441840277
patch: Node c = traverse ( c ) ;
rank: 637
score: 98.97365159254808
patch: traverse ( c , ; c . traverse ( node ) ;
rank: 637
score: 98.84775262129934
patch: System . err . println ( $STRING$ + c . get CaMeL Name ( ) ) ) ;
rank: 637
score: 98.81911399147727
patch: if ( should CaMeL Visit ( n ) ) {
rank: 637
score: 98.77189127604167
patch: if ( ! < 1 ) traverse ( c ) ;
rank: 638
score: 99.01078657670455
patch: ctor = c . get CaMeL Next ( ) ;
rank: 638
score: 98.84764685997597
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( n . get CaMeL Key ( ) ) )
rank: 638
score: 98.80502464657738
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( traverse ( c ) ) ;
rank: 638
score: 98.7716815655048
patch: if ( ! != null ) ; traverse ( c ) ;
rank: 639
score: 99.01073109019886
patch: definition = c . get CaMeL Next ( ) ;
rank: 639
score: 99.0037841796875
patch: int n = c . get CaMeL Next ( ) ;
rank: 639
score: 98.97206624348958
patch: n = c . get CaMeL Parent ( ) ; }
rank: 639
score: 98.89806518554687
patch: traverse ( c , type , node ) ;
rank: 639
score: 98.8475008877841
patch: c = c . get CaMeL Parent ( ) ; c = c . get CaMeL Parent ( ) ; }
rank: 639
score: 98.81797485351562
patch: while ( c != null ) { return ;
rank: 639
score: 98.80432710193452
patch: c = c . get CaMeL First CaMeL Child ( ) ; c . traverse ( c ) ; }
rank: 639
score: 98.7716533954327
patch: if ( c ) { traverse ( c , c ) ;
rank: 640
score: 99.11035834418402
patch: traverse ( n ) ; c = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 640
score: 99.01063232421875
patch: traverse ( c . traverse ( ) ) ;
rank: 640
score: 98.97184614701705
patch: traverse ( c , c , true ) ; ;
rank: 640
score: 98.89728338068181
patch: visit ( c ) ; traverse ( node ) ;
rank: 640
score: 98.8474609375
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Name ( ) ) ) ;
rank: 640
score: 98.80428466796874
patch: c = c . get CaMeL First CaMeL Child ( ) ; c . traverse ( node ) ;
rank: 640
score: 98.77151053292411
patch: if ( ! c . is CaMeL Empty ( ) ) { final
rank: 641
score: 99.11027018229167
patch: if ( traverse ( c , c . get CaMeL Parent CaMeL Node ( ) ) )
rank: 641
score: 98.9707364169034
patch: traverse ( c , ( Node ) c , ;
rank: 641
score: 98.89598388671875
patch: traverse ( c , [ 1 ] ) ;
rank: 641
score: 98.84734700520833
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Type CaMeL Name ( ) ) ) return ;
rank: 641
score: 98.81662326388889
patch: return . get CaMeL Parent ( ) ;
rank: 641
score: 98.80413140190973
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( 1 ) ;
rank: 641
score: 98.7710952758789
patch: traverse ( c - c ) ;
rank: 642
score: 99.030947265625
patch: if ( node . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL
rank: 642
score: 99.01019287109375
patch: if ( c != null && c . get CaMeL First CaMeL Child ( ) != )
rank: 642
score: 98.99944513494319
patch: traverse ( c , c ) ; visits ++ ;
rank: 642
score: 98.8951416015625
patch: traverse ( [ 1 ] , c ) ;
rank: 642
score: 98.80320909288194
patch: c = c . get CaMeL Value ( ) ; try { traverse ( c ) ;
rank: 642
score: 98.770751953125
patch: for ( ; ; ) { traverse ( c ) ;
rank: 643
score: 99.03041015625
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , c . get CaMeL Next ( ) . get CaMeL Next CaMeL
rank: 643
score: 99.01018323396382
patch: if ( c == null && c . get CaMeL First CaMeL Child ( ) != null )
rank: 643
score: 98.96729454627403
patch: traverse ( c ) ; c = c . ; ; }
rank: 643
score: 98.81599564985795
patch: while ( c . traverse ( node ) ) {
rank: 643
score: 98.80302348889802
patch: c = c . get CaMeL First CaMeL Child ( ) ; for ( ; ; ) {
rank: 643
score: 98.77011108398438
patch: if ( 1 != 0 ) traverse ( c ) ;
rank: 644
score: 99.11017809416118
patch: traverse ( c , c . get CaMeL First CaMeL Child ( ) ) ; return ; }
rank: 644
score: 99.03019575639205
patch: row = c . get CaMeL Next ( ) ;
rank: 644
score: 99.01012465533088
patch: i = c . get CaMeL First CaMeL Child ( ) ; c = next ;
rank: 644
score: 98.99867757161458
patch: int next = node . get CaMeL Next ( ) ;
rank: 644
score: 98.96729278564453
patch: traverse ( c ) ; * /
rank: 644
score: 98.89410400390625
patch: traverse ( null , node ) ;
rank: 644
score: 98.84689015355603
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) throw null ;
rank: 644
score: 98.81570434570312
patch: if ( ( c instanceof Node ) ) {
rank: 644
score: 98.76971435546875
patch: if ( ! traverse ( 0 , c ) ) {
rank: 645
score: 99.10977333470395
patch: traverse ( n ) ; c = c . get CaMeL Parent CaMeL Node ( ) ; }
rank: 645
score: 98.96673583984375
patch: traverse ( c ) ; ++ count ;
rank: 645
score: 98.893994140625
patch: c = n . get ( c ) ;
rank: 645
score: 98.81074662642045
patch: if ( has CaMeL Child ( c ) ) {
rank: 645
score: 98.80285113790761
patch: traverse ( c ) ; c = c . get CaMeL First CaMeL Child ( ) ; traverse ( c ) ;
rank: 645
score: 98.76971435546875
patch: if ( n != 0 ) { c = c ;
rank: 646
score: 99.10941354851974
patch: traverse ( c ) ; } n = c . get CaMeL First CaMeL Child ( ) ;
rank: 646
score: 99.00902602251838
patch: traverse ( c , node . get CaMeL First CaMeL Child ( ) . get CaMeL
rank: 646
score: 98.96607801649306
patch: traverse ( node , c ) ; }
rank: 646
score: 98.893408203125
patch: c = c . get ( 1 ) ;
rank: 646
score: 98.84617396763393
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Id ( ) + $STRING$ ) ;
rank: 646
score: 98.80208333333333
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( false ) {
rank: 647
score: 99.10785875822368
patch: traverse ( c , ( ; c . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 647
score: 99.0089444247159
patch: source = c . get CaMeL Next ( ) ;
rank: 647
score: 98.9981689453125
patch: Node c = c . get CaMeL Declaration ( ) ;
rank: 647
score: 98.9649658203125
patch: traverse ( c , ; traverse ( c ) ;
rank: 647
score: 98.8931640625
patch: traverse ( node + 1 , c ) ;
rank: 647
score: 98.84596410290948
patch: if ( ! node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Class CaMeL Name ( ) ) )
rank: 647
score: 98.80961470170455
patch: if ( c . equals ( node ) ) {
rank: 647
score: 98.80194769965277
patch: else traverse ( c , node ) ;
rank: 647
score: 98.7689208984375
patch: if ( n != 1 ) traverse ( c ) ;
rank: 648
score: 99.1071841591283
patch: traverse ( c ) ; traverse ( c . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 648
score: 99.0087531594669
patch: Symbol c = ( Node ) c . get CaMeL First CaMeL Child ( ) ;
rank: 648
score: 98.99516157670455
patch: AST = c . get CaMeL Next ( ) ;
rank: 648
score: 98.89187622070312
patch: traverse ( c + $NUMBER$ , node ) ;
rank: 648
score: 98.84587890625
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Name ( ) , ) ;
rank: 648
score: 98.80958557128906
patch: traverse ( node , this ) ;
rank: 648
score: 98.80046844482422
patch: cfw . traverse ( c ) ;
rank: 648
score: 98.7687479654948
patch: if ( n != c ) traverse ( c ) ;
rank: 649
score: 99.10675920758929
patch: traverse ( c . parent ) ; c = c . parent ;
rank: 649
score: 99.00831514246323
patch: result = c . get CaMeL First CaMeL Child ( ) ; c = next ;
rank: 649
score: 98.99353790283203
patch: traverse ( ref , c ) ;
rank: 649
score: 98.96442205255681
patch: traverse ( c , traverse ( n ) ) ;
rank: 649
score: 98.89031372070312
patch: c . get CaMeL Next ( ) ; }
rank: 649
score: 98.84580414870689
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) return ; }
rank: 649
score: 98.80947875976562
patch: traverse ( node , visits ) ;
rank: 649
score: 98.79999334161931
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . traverse ( c ) ;
rank: 649
score: 98.76852651742789
patch: if ( c == c ) ; traverse ( c ) ;
rank: 650
score: 99.10659950657895
patch: traverse ( ( Node ) ( c . get CaMeL Parent CaMeL Node ( ) ) ) ;
rank: 650
score: 99.00830796185662
patch: if ( node . get CaMeL First CaMeL Child ( ) == node . get CaMeL
rank: 650
score: 98.99260919744319
patch: Node next = list . get ( c ) ;
rank: 650
score: 98.88986206054688
patch: traverse ( node + 0 , c ) ;
rank: 650
score: 98.84575805664062
patch: else { traverse ( node , c ) ;
rank: 650
score: 98.80869362571023
patch: if ( c == node ) { return ; }
rank: 650
score: 98.7999600497159
patch: traverse ( c , c . get CaMeL Type ( ) , c . get CaMeL Type ( ) ) ;
rank: 650
score: 98.76851712740384
patch: if ( 0 != 1 ) { traverse ( c ) ;
rank: 651
score: 99.10625256990132
patch: traverse ( ( ( Node ) c ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 651
score: 99.00740189985795
patch: jsp = c . get CaMeL Next ( ) ;
rank: 651
score: 98.962890625
patch: return traverse ( c , c ) ; }
rank: 651
score: 98.88926391601562
patch: c = type . get ( c ) ;
rank: 651
score: 98.84563446044922
patch: return traverse ( c ) ; }
rank: 651
score: 98.79969853940217
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Type ( ) ;
rank: 651
score: 98.76829020182292
patch: traverse ( c != null || c != 0 ) ;
rank: 652
score: 99.02366129557292
patch: c ( c . get CaMeL Next ( ) ) ;
rank: 652
score: 99.00733531605114
patch: transaction = c . get CaMeL Next ( ) ;
rank: 652
score: 98.88854370117187
patch: traverse ( c , parent , null ) ;
rank: 652
score: 98.84558526400862
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( n . get CaMeL Type CaMeL Name ( ) ) ) {
rank: 652
score: 98.7996826171875
patch: traverse ( this ) ;
rank: 652
score: 98.76806640625
patch: traverse ( c - 0 ) ;
rank: 653
score: 99.10525716145834
patch: traverse ( c . get CaMeL Parent CaMeL Node ( ) , ) ;
rank: 653
score: 99.0073306435033
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , node . get CaMeL First CaMeL
rank: 653
score: 98.989697265625
patch: traverse ( c , next , c ) ;
rank: 653
score: 98.96140358664773
patch: traverse ( c , ; return true ) ; }
rank: 653
score: 98.84526909722223
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( n . get CaMeL Id ( ) ) ) {
rank: 653
score: 98.80411529541016
patch: exit CaMeL Node ( c ) ;
rank: 653
score: 98.76749361478366
patch: if ( $NUMBER$ != 0 ) { traverse ( c ) ;
rank: 654
score: 99.1036376953125
patch: traverse ( c . get CaMeL Last CaMeL Child ( ) ) ; }
rank: 654
score: 99.00656960227273
patch: return c . get CaMeL Node ( ) ; }
rank: 654
score: 98.9895352450284
patch: removed = c . get CaMeL Next ( ) ;
rank: 654
score: 98.96111450195312
patch: traverse ( c ) ; break ; ; }
rank: 654
score: 98.84501591435185
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( this . get CaMeL Name ( ) ) ) {
rank: 654
score: 98.80313449435764
patch: traverse ( c , next null ) ;
rank: 654
score: 98.79943237304687
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( c == null ) {
rank: 654
score: 98.76712799072266
patch: traverse ( n != null ) ;
rank: 655
score: 99.00654871323529
patch: if ( c . get CaMeL Node ( ) . get CaMeL Next ( ) )
rank: 655
score: 98.98874733664773
patch: node = ref . get CaMeL Next ( ) ;
rank: 655
score: 98.96092732747395
patch: traverse ( c ) ; break ; } } finally {
rank: 655
score: 98.84498131793478
patch: if ( ! c . is CaMeL Empty ( ) && ! c . is CaMeL Empty ( ) ) return ;
rank: 655
score: 98.80292510986328
patch: traverse ( node , next ) ;
rank: 655
score: 98.76708221435547
patch: traverse ( c ) ; else {
rank: 656
score: 99.0204326923077
patch: c = n . get CaMeL Next ( ) ; break ;
rank: 656
score: 99.00641946231617
patch: parent = c . get CaMeL First CaMeL Child ( ) ; c = next ;
rank: 656
score: 98.95993041992188
patch: if ( c != null ) traverse ( c , ;
rank: 656
score: 98.88715209960938
patch: c = c . get ( null ) ;
rank: 656
score: 98.84482828776042
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class CaMeL Name ( ) + $STRING$ ) ;
rank: 656
score: 98.80267888849431
patch: if ( n == null ) { return ; }
rank: 656
score: 98.76682535807292
patch: traverse ( c == null ? c : c ) ;
rank: 657
score: 99.10015869140625
patch: traverse ( c ) ; c = c ) ; }
rank: 657
score: 99.00624778053977
patch: ec = c . get CaMeL Next ( ) ;
rank: 657
score: 98.95974731445312
patch: traverse ( c , c , ; ) ;
rank: 657
score: 98.887109375
patch: c = c . get ( 0 ) ;
rank: 657
score: 98.84482421875
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Value CaMeL Type ( ) ) )
rank: 657
score: 98.797607421875
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c .
rank: 657
score: 98.7664043719952
patch: if ( c == true ) { traverse ( c ) ;
rank: 658
score: 99.09911295572917
patch: traverse ( c ) ; c = c . traverse ( this ) ;
rank: 658
score: 98.98765980113636
patch: Node c = list . get ( c ) ;
rank: 658
score: 98.95941772460938
patch: traverse ( c , false ) ; break ;
rank: 658
score: 98.88689630681819
patch: next ( c ) ; next ( c ) ;
rank: 658
score: 98.8447265625
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL String CaMeL Value ( ) ) )
rank: 658
score: 98.80040893554687
patch: while ( c != null ) { try {
rank: 658
score: 98.7974853515625
patch: System . out . println ( $STRING$ ) ; traverse ( c , node ) ;
rank: 658
score: 98.766357421875
patch: if ( ! c . length ( ) == 1 ) ;
rank: 659
score: 99.00600363991477
patch: line = c . get CaMeL Next ( ) ;
rank: 659
score: 98.98690795898438
patch: Node next = c . get CaMeL Declaration ( ) ;
rank: 659
score: 98.88571506076389
patch: next = c . get ( ) ;
rank: 659
score: 98.8441162109375
patch: if ( ! node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Id ( ) ) ) {
rank: 659
score: 98.79987335205078
patch: if ( next != null ) {
rank: 659
score: 98.7970660665761
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Code ( ) ;
rank: 659
score: 98.76600138346355
patch: if ( ! traverse ( node ) ) { return ;
rank: 660
score: 99.01718374399039
patch: next = c . get CaMeL Next ( ) ; for (
rank: 660
score: 99.00600363991477
patch: fn = c . get CaMeL Next ( ) ;
rank: 660
score: 98.95855712890625
patch: traverse ( c , c , true , false ) ;
rank: 660
score: 98.88528442382812
patch: traverse ( c , false , $STRING$ ) ;
rank: 660
score: 98.8438008626302
patch: if ( c == null ) { return ; } }
rank: 660
score: 98.79655456542969
patch: out . traverse ( c ) ;
rank: 660
score: 98.7659912109375
patch: if ( c != null ) ; traverse ( n ) ;
rank: 661
score: 99.09571329752605
patch: traverse ( c . traverse ( c ) ) ; }
rank: 661
score: 99.00596217105263
patch: if ( c != null && c . get CaMeL First CaMeL Child ( ) != node )
rank: 661
score: 98.98520236545139
patch: Node next = traverse ( c ) ;
rank: 661
score: 98.95615844726562
patch: c = c . get ( ) ; }
rank: 661
score: 98.84326171875
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Class CaMeL Name ( ) ;
rank: 661
score: 98.79817199707031
patch: traverse ( type , node ) ;
rank: 661
score: 98.79520456414474
patch: traverse ( c ) ; c = c . get CaMeL First CaMeL Child ( c ) ;
rank: 661
score: 98.76580403645833
patch: if ( c != null ) { traverse ( c , 0 ) ;
rank: 662
score: 99.09567696707589
patch: traverse ( c ) ; c = c . ( ) ; }
rank: 662
score: 99.00582725123355
patch: if ( c . get CaMeL First CaMeL Child ( ) != node . get CaMeL First CaMeL
rank: 662
score: 98.84325110394022
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { continue ;
rank: 662
score: 98.79724799262152
patch: } if ( c != null ) {
rank: 662
score: 98.79480698529412
patch: c = c . get CaMeL Instance ( c ) ; traverse ( node ) ;
rank: 662
score: 98.76561628069196
patch: if ( c == c ) { traverse ( c ) ; }
rank: 663
score: 99.01642315204327
patch: int next next = c . get CaMeL Next ( ) ;
rank: 663
score: 99.00543767755681
patch: sc = c . get CaMeL Next ( ) ;
rank: 663
score: 98.95537651909723
patch: traverse ( c ) ; continue ; }
rank: 663
score: 98.8427978515625
patch: traverse ( c , current , c ) ;
rank: 663
score: 98.79309760199652
patch: traverse ( node ) ; visits ++ ;
rank: 663
score: 98.76551231971153
patch: if ( ! != traverse ( c ) ) { return ;
rank: 664
score: 99.095068359375
patch: traverse ( ) ; c = c . get CaMeL Parent ( ) ;
rank: 664
score: 99.0042660361842
patch: if ( c . get CaMeL Next ( ) . get CaMeL Node ( ) != node )
rank: 664
score: 98.95524088541667
patch: traverse ( c ) ; c = ;
rank: 664
score: 98.88084106445312
patch: traverse ( count < $NUMBER$ , $STRING$ ) ;
rank: 664
score: 98.84273976293103
patch: if ( ! node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) break ;
rank: 664
score: 98.793876953125
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Instance CaMeL Type ( ) ;
rank: 664
score: 98.78670925564236
patch: if ( c != null ) continue ;
rank: 665
score: 99.09316580636161
patch: traverse ( c . get CaMeL Parent ( ) , this ) ;
rank: 665
score: 98.95509847005208
patch: traverse ( c , ; c = c . next ;
rank: 665
score: 98.8806640625
patch: traverse ( c , n , node ) ;
rank: 665
score: 98.8426513671875
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( node . get CaMeL Id ( ) ) ) break ;
rank: 665
score: 98.79358927408855
patch: traverse ( $STRING$ ) ;
rank: 665
score: 98.76534329927884
patch: if ( c > 0 ) { traverse ( c ) ;
rank: 666
score: 99.0146484375
patch: added = c . get CaMeL Next ( ) ;
rank: 666
score: 99.00398523667279
patch: if ( c . get CaMeL First CaMeL Child ( ) ( ) != null )
rank: 666
score: 98.97499778053977
patch: c = c . get CaMeL Declaration ( ) ;
rank: 666
score: 98.87893676757812
patch: traverse ( null , c , node ) ;
rank: 666
score: 98.84264322916667
patch: if ( ! node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Class CaMeL Name ( ) ) ) {
rank: 666
score: 98.79317220052083
patch: else ; ; traverse ( c ) ;
rank: 666
score: 98.78562927246094
patch: if ( node instanceof Node ) {
rank: 666
score: 98.76531575520833
patch: if ( n != null ) { traverse ( c , c ) ;
rank: 667
score: 99.01367950439453
patch: traverse ( next != null ) ;
rank: 667
score: 99.0035400390625
patch: prev = c . get CaMeL First CaMeL Child ( ) ; c = next ;
rank: 667
score: 98.87889515269886
patch: traverse ( c , visit ( node ) ) ;
rank: 667
score: 98.84198467548077
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( node . get CaMeL Type ( ) ) )
rank: 667
score: 98.79302978515625
patch: if ( ! traverse ( c ) )
rank: 667
score: 98.78404405381944
patch: if ( c instanceof Node ) return ;
rank: 667
score: 98.7652118389423
patch: if ( ! instanceof Node ) ; traverse ( c ) ;
rank: 668
score: 99.08917643229167
patch: traverse ( ) ; c = c . get CaMeL Next ( ) ;
rank: 668
score: 99.0136249248798
patch: final Node c = n . get CaMeL Next ( ) ;
rank: 668
score: 99.00295538651316
patch: if ( c . get CaMeL First CaMeL Child ( ) ) { traverse ( c ) ;
rank: 668
score: 98.95394897460938
patch: traverse ( c ) ; ; }
rank: 668
score: 98.87860717773438
patch: traverse ( c , this . node ) ;
rank: 668
score: 98.841796875
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Parent ( ) . to CaMeL String ( ) ) ;
rank: 668
score: 98.76463216145834
patch: if ( ! c . is CaMeL Empty ( ) ) ; else {
rank: 669
score: 99.0890380859375
patch: c = ( Node ) c . get CaMeL Parent ( ) ; }
rank: 669
score: 99.01251775568181
patch: break = c . get CaMeL Next ( ) ;
rank: 669
score: 99.00266400505515
patch: if ( ( c . get CaMeL First CaMeL Child ( ) != null ) )
rank: 669
score: 98.95386962890625
patch: traverse ( c , ; break ; } ;
rank: 669
score: 98.79222412109375
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( c , true ) ;
rank: 669
score: 98.78041076660156
patch: if ( visits != null ) {
rank: 670
score: 99.0021084872159
patch: y = c . get CaMeL Next ( ) ;
rank: 670
score: 98.9529141512784
patch: traverse ( c , false ) ; return ; }
rank: 670
score: 98.87760416666667
patch: traverse ( visit ( c ) ) ;
rank: 670
score: 98.77840847439236
patch: if ( next ( node ) ) {
rank: 670
score: 98.76358032226562
patch: if ( ! 1 ) { traverse ( c ) ;
rank: 671
score: 99.0014981356534
patch: tuple = c . get CaMeL Next ( ) ;
rank: 671
score: 98.84156212439903
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { break ; }
rank: 671
score: 98.79172650505515
patch: c = c . get CaMeL Value ( ) ; traverse ( c ) ; }
rank: 671
score: 98.76344807942708
patch: if ( ! traverse ( c , c ) ) ;
rank: 672
score: 99.00094784007354
patch: for ( Node c : c . get CaMeL First CaMeL Child ( ) ) {
rank: 672
score: 98.94972922585227
patch: traverse ( c , c , - 1 ) ;
rank: 672
score: 98.87648315429688
patch: c = c . get ( true ) ;
rank: 672
score: 98.84084065755208
patch: c = c . get CaMeL Value ( ) ; }
rank: 672
score: 98.79156494140625
patch: c = c . get CaMeL First CaMeL Child ( ) ; c ( c . null ) ;
rank: 672
score: 98.76341901506696
patch: if ( traverse ( c ) ) ; traverse ( c ) ;
rank: 673
score: 99.00906372070312
patch: if ( c instanceof Node ) { for (
rank: 673
score: 99.00086805555556
patch: path = c . get CaMeL First CaMeL Child ( ) ; traverse ( c ) ;
rank: 673
score: 98.94929504394531
patch: node . traverse ( c ) ;
rank: 673
score: 98.87506103515625
patch: c = c . get ( node ) ;
rank: 673
score: 98.79074435763889
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( line ) ;
rank: 673
score: 98.76947021484375
patch: c = next ( node ) ;
rank: 674
score: 99.00054931640625
patch: traverse ( c . node . get CaMeL First CaMeL Child ( ) , c ) ;
rank: 674
score: 98.94880814985795
patch: traverse ( c , ; c , true ) ;
rank: 674
score: 98.87451171875
patch: traverse ( c , $STRING$ , false ) ;
rank: 674
score: 98.8408203125
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( ) ) return ;
rank: 674
score: 98.79026197350544
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( node . get CaMeL Type ( ) ;
rank: 674
score: 98.76250751201923
patch: if ( traverse ( c ) ) { c = c ;
rank: 675
score: 99.08548583984376
patch: traverse ( c , c , options ) ;
rank: 675
score: 99.00030158547794
patch: target = c . get CaMeL First CaMeL Child ( ) ; c = next ;
rank: 675
score: 98.94810791015625
patch: traverse ( c , true ) ; * /
rank: 675
score: 98.84076334635417
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Instance CaMeL Type ( ) ) )
rank: 675
score: 98.78943359375
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Last CaMeL Child ( ) ;
rank: 675
score: 98.76742553710938
patch: if ( c == node ) {
rank: 675
score: 98.76210530598958
patch: if ( c != null ) { traverse ( ) ;
rank: 676
score: 99.0843017578125
patch: traverse ( c , c , traverse ) ;
rank: 676
score: 99.00629131610577
patch: c = c . get CaMeL Next ( ) ; / *
rank: 676
score: 98.966162109375
patch: traverse ( c , c , next ) ;
rank: 676
score: 98.946533203125
patch: type = c . get CaMeL Type ( ) ; }
rank: 676
score: 98.84045831088362
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Class CaMeL Name ( ) ) ) ;
rank: 676
score: 98.78916864809783
patch: c = c . get CaMeL Value ( ) ; c = c . get CaMeL First CaMeL Child ( ) ;
rank: 676
score: 98.761962890625
patch: if ( ! c . traverse ( c ) ) { return ; }
rank: 677
score: 99.08407156808036
patch: Node n = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 677
score: 98.999267578125
patch: if ( c . get CaMeL Next ( ) . get CaMeL Next ( ) )
rank: 677
score: 98.9464999112216
patch: c = c . get ( c ) ; }
rank: 677
score: 98.8399658203125
patch: if ( node . get CaMeL Name ( ) . equals ( node . get CaMeL Id ( ) ) ) return ;
rank: 677
score: 98.78867594401042
patch: c = c . get CaMeL Value ( ) ; traverse ( c , node ) ;
rank: 677
score: 98.76601833767361
patch: if ( traverse ( node ) ) {
rank: 677
score: 98.76158728966347
patch: if ( ! >= c ) { traverse ( c ) ;
rank: 678
score: 99.08367513020833
patch: traverse ( c , c . get CaMeL Root ( ) ) ; }
rank: 678
score: 98.9458340731534
patch: traverse ( c , get ( c ) ) ;
rank: 678
score: 98.87175903320312
patch: node = c . get ( c ) ;
rank: 678
score: 98.83976915147569
patch: throw new Runtime CaMeL Exception ( ) ;
rank: 678
score: 98.78865913722827
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = node . get CaMeL Next ( ) ;
rank: 678
score: 98.76370578342014
patch: while ( next ( c ) ) {
rank: 678
score: 98.76109822591145
patch: if ( c == null ) traverse ( n ) ;
rank: 679
score: 99.08244105747768
patch: traverse ( ( c . get CaMeL Parent ( ) ) ) ;
rank: 679
score: 99.0021240234375
patch: return n . get CaMeL Next ( ) ;
rank: 679
score: 98.99707749310662
patch: traverse ( c && c . get CaMeL First CaMeL Child ( ) . get CaMeL
rank: 679
score: 98.83970575747283
patch: System . err . println ( $STRING$ + c . get CaMeL Class CaMeL Name ( ) ) ; break ; }
rank: 679
score: 98.78809950086806
patch: traverse ( c && node . get CaMeL Type ( ) . equals ( ) ) ;
rank: 679
score: 98.7616195678711
patch: if ( n == null ) {
rank: 679
score: 98.7608154296875
patch: if ( c != null ) { traverse ( n , c ) ;
rank: 680
score: 99.08160400390625
patch: if ( c . traverse ( c ) )
rank: 680
score: 99.00155029296874
patch: traverse ( c , next != null ) ;
rank: 680
score: 98.99705921519886
patch: start = c . get CaMeL Next ( ) ;
rank: 680
score: 98.8701416015625
patch: traverse ( c , name , c ) ;
rank: 680
score: 98.8394775390625
patch: if ( node . get CaMeL Name ( ) . equals ( c . get CaMeL Id ( ) ) ) return ;
rank: 680
score: 98.76109313964844
patch: if ( ref != null ) {
rank: 680
score: 98.76040414663461
patch: if ( ! > 1 ) { traverse ( c ) ;
rank: 681
score: 98.99683335248162
patch: return c . get CaMeL First CaMeL Child ( ) ; } c = node ;
rank: 681
score: 98.94468180338542
patch: while ( c != null ) traverse ( c ) ;
rank: 681
score: 98.86943359375
patch: traverse ( parent , c , node ) ;
rank: 681
score: 98.8392803485577
patch: System . out . println ( $STRING$ + c . get CaMeL Name ( ) , c . get CaMeL Name ( ) ) ;
rank: 681
score: 98.78750949435764
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( true ) ;
rank: 681
score: 98.76022573617789
patch: if ( 0 == 0 ) { traverse ( c ) ;
rank: 681
score: 98.75938415527344
patch: if ( children != null ) {
rank: 682
score: 98.99648868336396
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Next CaMeL
rank: 682
score: 98.86910400390624
patch: traverse ( c , visits < 0 ) ;
rank: 682
score: 98.83865356445312
patch: if ( ! node . get CaMeL Name ( ) . equals ( node . get CaMeL Name ( ) ) ) {
rank: 682
score: 98.7870232077206
patch: traverse ( c ) ; c = node . get CaMeL Next ( ) ; }
rank: 682
score: 98.7598407451923
patch: if ( c == null ) traverse ( c ) ; }
rank: 683
score: 98.99974476207386
patch: visits = n . get CaMeL Next ( ) ;
rank: 683
score: 98.99641557173295
patch: in = c . get CaMeL Next ( ) ;
rank: 683
score: 98.94416947798295
patch: traverse ( c , c , null ) ; }
rank: 683
score: 98.8690185546875
patch: next ( c ) ;
rank: 683
score: 98.83863321940105
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { continue ; }
rank: 683
score: 98.78655684621711
patch: traverse ( c , c . get CaMeL Parent ( ) ) ; traverse ( c ) ;
rank: 683
score: 98.75939069475446
patch: if ( c != null ) { traverse ( c , ) ;
rank: 684
score: 98.94270463423295
patch: traverse ( c , ; c = ) c ;
rank: 684
score: 98.8684414950284
patch: return node . get CaMeL Next ( ) ; }
rank: 684
score: 98.83854536576705
patch: if ( c ) traverse ( c ) ; }
rank: 684
score: 98.75902448381696
patch: if ( ! c . is CaMeL Empty ( ) ) ) public
rank: 685
score: 99.077880859375
patch: int n = c . get CaMeL Last CaMeL Child ( ) ;
rank: 685
score: 98.99798029119319
patch: ret = node . get CaMeL Next ( ) ;
rank: 685
score: 98.99577062270221
patch: if ( node . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL
rank: 685
score: 98.94258626302083
patch: traverse ( c , ; n ) ;
rank: 685
score: 98.86797485351562
patch: traverse ( c , id , c ) ;
rank: 685
score: 98.83839699074075
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Key ( ) ) ) {
rank: 685
score: 98.78620461856617
patch: if ( ! c . equals ( c ) ) { traverse ( c ) ;
rank: 685
score: 98.75875150240384
patch: traverse ( c ) ; traverse ( c , n ) ;
rank: 685
score: 98.75698852539062
patch: while ( c instanceof Node ) {
rank: 686
score: 98.99749755859375
patch: traverse ( c , visits ) ;
rank: 686
score: 98.95814208984375
patch: traverse ( c , next , node ) ;
rank: 686
score: 98.94251598011364
patch: traverse ( c ) ; init ( c ) ;
rank: 686
score: 98.86754150390625
patch: return node . get CaMeL Next ( ) ;
rank: 686
score: 98.78596496582031
patch: result = traverse ( c ) ;
rank: 686
score: 98.75874546595982
patch: if ( ! traverse ( c , c ) ) { return ;
rank: 686
score: 98.7569351196289
patch: while ( c == null ) {
rank: 687
score: 99.07669067382812
patch: traverse ( c . get CaMeL Root ( ) ) ;
rank: 687
score: 98.99709250710227
patch: nodes = c . get CaMeL Next ( ) ;
rank: 687
score: 98.99545127467105
patch: traverse ( c && c . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL
rank: 687
score: 98.78527113970588
patch: traverse ( c ) ; c = c . get CaMeL Next ( ) ; ;
rank: 687
score: 98.75868577223558
patch: if ( ! != c ) { traverse ( n ) ;
rank: 687
score: 98.75676133897569
patch: traverse ( node , next null ) ;
rank: 688
score: 98.99533260569854
patch: Object c = c . get CaMeL Next ( ) ; traverse ( c ) ;
rank: 688
score: 98.94045188210227
patch: traverse ( c , ( Node ) n ) ;
rank: 688
score: 98.86671031605114
patch: traverse ( c , node ) ; visits ++ ;
rank: 688
score: 98.83810546875
patch: if ( c != null && c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 688
score: 98.78497635690789
patch: if ( c . get CaMeL Name ( ) != null ) { traverse ( c ) ;
rank: 688
score: 98.75856236049107
patch: if ( ! c . contains ( n ) ) { return ;
rank: 689
score: 98.99500621448864
patch: prop = c . get CaMeL Next ( ) ;
rank: 689
score: 98.94024047851562
patch: / * traverse ( c , ) * /
rank: 689
score: 98.83807779947917
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Component CaMeL Type ( ) ) )
rank: 689
score: 98.78494262695312
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( c . has CaMeL Next ( ) ) {
rank: 689
score: 98.75809733072917
patch: traverse ( ! c . get CaMeL Node ( ) ) ; return ;
rank: 689
score: 98.75341796875
patch: traverse ( node , node ) ; }
rank: 690
score: 98.99608265269886
patch: statements = c . get CaMeL Next ( ) ;
rank: 690
score: 98.99476453993056
patch: traverse ( c . node . get CaMeL First CaMeL Child ( ) , node ) ;
rank: 690
score: 98.93949381510417
patch: if ( c . ) { traverse ( c ) ;
rank: 690
score: 98.86611328125
patch: traverse ( c , node + 1 ) ;
rank: 690
score: 98.83787378771552
patch: if ( ! node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Id ( ) ) ) return ;
rank: 690
score: 98.78492567274306
patch: traverse ( current ( c ) ) ;
rank: 690
score: 98.75804036458334
patch: if ( c != null ) ; traverse ( c , c ) ;
rank: 691
score: 99.07294573102679
patch: int n = c . get CaMeL Child CaMeL Count ( ) ;
rank: 691
score: 98.93923950195312
patch: traverse ( c , ; break ;
rank: 691
score: 98.8378018465909
patch: if ( n == null ) { break ; }
rank: 691
score: 98.78475288722827
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( c ) ; traverse ( c ) ;
rank: 691
score: 98.75748443603516
patch: if ( ! c . iterator ( ) . iterator ( ) . } ;
rank: 692
score: 99.07064383370536
patch: ; c = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 692
score: 98.99440696022727
patch: sender = c . get CaMeL Next ( ) ;
rank: 692
score: 98.93874782986111
patch: traverse ( c , this ) ; }
rank: 692
score: 98.83774594907408
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Name ( ) + $STRING$ ;
rank: 692
score: 98.78450520833333
patch: traverse ( c || node . get CaMeL Type ( ) . equals ( ) ) ;
rank: 692
score: 98.75719275841347
patch: if ( ! c . contains ( n ) ) { public
rank: 693
score: 99.07032993861607
patch: if ( c . get CaMeL Type ( ) == ; return ;
rank: 693
score: 98.9941470497533
patch: if ( c . get CaMeL First CaMeL Child ( ) ( c . get CaMeL First CaMeL
rank: 693
score: 98.86485460069444
patch: visit ( c ) ; visits ++ ;
rank: 693
score: 98.83773908943965
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Number CaMeL Value ( ) ) ) {
rank: 693
score: 98.7842433763587
patch: c = c . get CaMeL First CaMeL Child ( ) ; while ( c . has CaMeL Next ( ) )
rank: 693
score: 98.7570556640625
patch: if ( c != null ) { traverse ( c ) ; } }
rank: 693
score: 98.74745686848958
patch: return . traverse ( c ) ; }
rank: 694
score: 99.06924203725961
patch: traverse ( c ) ; c = c . get ) ;
rank: 694
score: 98.99399636008523
patch: prev = next . get CaMeL Next ( ) ;
rank: 694
score: 98.9937385110294
patch: while ( c != null && c . get CaMeL First CaMeL Child ( ) )
rank: 694
score: 98.9384765625
patch: traverse ( c , c ) ; } return ;
rank: 694
score: 98.837470703125
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . to CaMeL String ( ) ) ; }
rank: 694
score: 98.78352186414931
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( target ) ;
rank: 694
score: 98.74738311767578
patch: while ( node != null ) {
rank: 695
score: 99.06778658353366
patch: traverse ( c ) ; c = c . parent ; }
rank: 695
score: 98.99373002485795
patch: outer = c . get CaMeL Next ( ) ;
rank: 695
score: 98.94346788194444
patch: Node c = next ( node ) ;
rank: 695
score: 98.93658447265625
patch: traverse ( c , ; break ; } }
rank: 695
score: 98.86326293945312
patch: traverse ( c , node , 0 ) ;
rank: 695
score: 98.83699857271634
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Source CaMeL Name ( ) ) ;
rank: 695
score: 98.75654296875
patch: if ( ! != c ) { traverse ( c , c ) ;
rank: 696
score: 98.99367453835227
patch: stmt = c . get CaMeL Next ( ) ;
rank: 696
score: 98.83693150111607
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( node . get CaMeL Class CaMeL Name ( ) ) )
rank: 696
score: 98.78324672154018
patch: c = c . c ;
rank: 696
score: 98.75569370814732
patch: if ( ! traverse ( c ) ) { return ; } }
rank: 696
score: 98.74126434326172
patch: if ( list != null ) {
rank: 697
score: 98.9935302734375
patch: modified = c . get CaMeL Next ( ) ;
rank: 697
score: 98.93560236150569
patch: traverse ( c , create ( c ) ) ;
rank: 697
score: 98.85959879557292
patch: visit ( ( Node ) c ) ;
rank: 697
score: 98.83663807744566
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) ; return ;
rank: 697
score: 98.78275390625
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = parent . get CaMeL First CaMeL Child ( ) ;
rank: 697
score: 98.75528971354167
patch: traverse ( ! c . get CaMeL Node ( ) ) ; break ;
rank: 697
score: 98.73912702287946
patch: traverse ( node ) ; }
rank: 698
score: 99.0672607421875
patch: traverse ( c ) ; c = c . traverse ( ;
rank: 698
score: 98.99335394965277
patch: traverse ( Node != null && c . get CaMeL First CaMeL Child ( ) ) ;
rank: 698
score: 98.99174360795455
patch: tp = c . get CaMeL Next ( ) ;
rank: 698
score: 98.83645193917411
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Type ( ) ) )
rank: 698
score: 98.78230116102431
patch: c = new traverse ( c ) ;
rank: 698
score: 98.75444684709821
patch: if ( ! traverse ( c ) ) { c = c ;
rank: 698
score: 98.73808288574219
patch: visit ( node , node ) ;
rank: 699
score: 99.06487567608173
patch: pos = c . get CaMeL Last CaMeL Child ( ) ;
rank: 699
score: 98.99335038034539
patch: if ( c . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) !=
rank: 699
score: 98.93393776633523
patch: traverse ( c ) ; return ; } return ;
rank: 699
score: 98.83630823206019
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( n . get CaMeL Name ( ) ) ) ;
rank: 699
score: 98.78218383789063
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( c ) ; return ;
rank: 699
score: 98.75418795072116
patch: if ( c > null ) { traverse ( c ) ;
rank: 700
score: 99.0602315266927
patch: traverse ( ; c . traverse ( c ) ) ;
rank: 700
score: 98.83603515625
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { continue ;
rank: 700
score: 98.78197021484375
patch: traverse ( c ) ; System . out . println ( $STRING$ ) ; traverse ( c ) ;
rank: 700
score: 98.7540512084961
patch: if ( ! c . equals ( ) ) { traverse ( c ) ;
rank: 700
score: 98.73532104492188
patch: traverse ( target , c ) ;
rank: 701
score: 98.99247661389802
patch: traverse ( c , node . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL
rank: 701
score: 98.85696411132812
patch: traverse ( null ) ;
rank: 701
score: 98.83570963541666
patch: if ( ! c . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Type CaMeL Name ( ) ) ) {
rank: 701
score: 98.78144073486328
patch: try { traverse ( true ) ;
rank: 701
score: 98.75373840332031
patch: traverse ( c . get CaMeL Parent ( ) ) ; c = c ;
rank: 702
score: 98.9335604580966
patch: traverse ( c , c ) ; continue ; }
rank: 702
score: 98.92619018554687
patch: traverse ( node , node , true ) ;
rank: 702
score: 98.85661177201705
patch: traverse ( node ) ; traverse ( node ) ;
rank: 702
score: 98.8355859375
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 702
score: 98.78120754076087
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Length ( ) ;
rank: 702
score: 98.7534649188702
patch: if ( ! != 1 ) ; traverse ( c ) ;
rank: 702
score: 98.7336934407552
patch: exit ( c ) ;
rank: 703
score: 98.99156358506944
patch: Element next = c . get CaMeL First CaMeL Child ( ) ; c = next ;
rank: 703
score: 98.932421875
patch: if ( traverse ( c ) ) break ;
rank: 703
score: 98.92390747070313
patch: traverse ( c , next , null ) ;
rank: 703
score: 98.85639953613281
patch: traverse ( [ 1 ] ) ;
rank: 703
score: 98.83548409598214
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( node . get CaMeL Id ( ) ) ) continue ;
rank: 703
score: 98.780517578125
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( node == null )
rank: 703
score: 98.7532958984375
patch: if ( ! > c ) { traverse ( c ) ;
rank: 703
score: 98.7293701171875
patch: this . traverse ( node ) ;
rank: 704
score: 98.99139083059211
patch: if ( c . get CaMeL Parent ( ) . get CaMeL First CaMeL Child ( ) )
rank: 704
score: 98.93232865767045
patch: traverse ( c , c ) ; } * /
rank: 704
score: 98.92277221679687
patch: traverse ( c , node , visits ) ;
rank: 704
score: 98.855859375
patch: c = list . get ( c ) ;
rank: 704
score: 98.78034057617188
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = traverse ( c ) ;
rank: 704
score: 98.75327711838942
patch: if ( c == traverse ( c ) ) { return ;
rank: 704
score: 98.72719319661458
patch: if ( c instanceof Node ) { }
rank: 705
score: 98.99061168323864
patch: editing = c . get CaMeL Next ( ) ;
rank: 705
score: 98.83499461206897
patch: if ( ! node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) continue ;
rank: 705
score: 98.78032090928819
patch: traverse ( c && c . get CaMeL Type ( ) . equals ( ) ) ;
rank: 705
score: 98.75308931790866
patch: if ( ! != c ) traverse ( c ) ; }
rank: 705
score: 98.72391764322917
patch: while ( next ( c ) ) ;
rank: 706
score: 98.9906005859375
patch: attrset = c . get CaMeL Next ( ) ;
rank: 706
score: 98.8547119140625
patch: c = c . contains ( c ) ;
rank: 707
score: 98.99028986150569
patch: destination = c . get CaMeL Next ( ) ;
rank: 707
score: 98.9313252766927
patch: traverse ( c , ( Node ) c ) ; }
rank: 707
score: 98.83454695991848
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) break ; }
rank: 707
score: 98.77931722005208
patch: traverse ( c , c ) ; logger . out . println ( $STRING$ ) ; }
rank: 707
score: 98.75299541766827
patch: if ( c == null ) traverse ( c ) ; else
rank: 708
score: 98.99016779119319
patch: cmp = c . get CaMeL Next ( ) ;
rank: 708
score: 98.93064371744792
patch: traverse ( c ) ; ++ c ;
rank: 708
score: 98.83447265625
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Name ( ) ) ; ;
rank: 708
score: 98.77914767795139
patch: if ( c . is CaMeL Empty ( ) ) { traverse ( c ) ; }
rank: 708
score: 98.75271809895834
patch: if ( ! c . is CaMeL Empty ( ) ) { c .
rank: 708
score: 98.72181532118056
patch: if ( c == null ) break ;
rank: 709
score: 98.83435510706019
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Id ( ) ) ) }
rank: 709
score: 98.77794731987848
patch: traverse ( c || c . get CaMeL Type ( ) . equals ( ) ) ;
rank: 709
score: 98.75254469651442
patch: if ( 0 == n ) { traverse ( c ) ;
rank: 710
score: 98.98987926136364
patch: enumeration = c . get CaMeL Next ( ) ;
rank: 710
score: 98.85122680664062
patch: traverse ( c , scope ) ;
rank: 710
score: 98.8343017578125
patch: System . err . println ( $STRING$ + c . get CaMeL Class CaMeL Name ( ) , c . get CaMeL Class CaMeL Name ( ) ) ;
rank: 710
score: 98.77787950303819
patch: c = c . get CaMeL Next ( ) ; try { traverse ( c ) ;
rank: 710
score: 98.75223482572116
patch: if ( ! c . size ( ) != 0 ) {
rank: 710
score: 98.72138977050781
patch: add CaMeL Node ( node ) ;
rank: 711
score: 98.98777077414773
patch: dd = c . get CaMeL Next ( ) ;
rank: 711
score: 98.92960205078126
patch: traverse ( c , traverse ( c ) ;
rank: 711
score: 98.8508056640625
patch: traverse ( c ) ; node = next ;
rank: 711
score: 98.83420138888889
patch: traverse ( c ) ; } break ;
rank: 711
score: 98.75218098958334
patch: traverse ( ! c . get CaMeL Node ( ) ) ; ) ;
rank: 711
score: 98.72090911865234
patch: c = traverse ( node ) ;
rank: 712
score: 98.9875155362216
patch: retval = c . get CaMeL Next ( ) ;
rank: 712
score: 98.92939897017045
patch: if ( c == null || c == null )
rank: 712
score: 98.90686645507813
patch: traverse ( node , node , c ) ;
rank: 712
score: 98.85078430175781
patch: traverse ( key , c ) ;
rank: 712
score: 98.83381257233796
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . to CaMeL String ( ) ) ; }
rank: 713
score: 99.0366680438702
patch: c = ( Node ) c . traverse ( c ) ;
rank: 713
score: 98.98747114701705
patch: type = c . get CaMeL Node ( ) ;
rank: 713
score: 98.98485218394886
patch: false = c . get CaMeL Next ( ) ;
rank: 713
score: 98.90684814453125
patch: traverse ( c , next , $STRING$ ) ;
rank: 713
score: 98.84933471679688
patch: traverse ( c , id ) ;
rank: 713
score: 98.83371206430289
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Type ( ) ) )
rank: 713
score: 98.77751922607422
patch: traverse ( true , node ) ;
rank: 713
score: 98.75139508928571
patch: if ( ! c . is CaMeL Empty ( ) ) ; else
rank: 714
score: 98.98738236860795
patch: loc = c . get CaMeL Next ( ) ;
rank: 714
score: 98.90514026988636
patch: Node next = next ; traverse ( c ) ;
rank: 714
score: 98.84768337673611
patch: traverse ( c , visits < $NUMBER$ ,
rank: 714
score: 98.83369954427083
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { return ; }
rank: 714
score: 98.75132751464844
patch: traverse ( c , traverse ) ;
rank: 715
score: 98.9835537997159
patch: flags = c . get CaMeL Next ( ) ;
rank: 715
score: 98.92786661783855
patch: traverse ( c ) ; c = c . ; ;
rank: 715
score: 98.84750366210938
patch: traverse ( index , node ) ;
rank: 715
score: 98.77715100740132
patch: if ( c . get CaMeL Type ( ) == $STRING$ ) { traverse ( c ) ;
rank: 715
score: 98.75103290264423
patch: if ( n == c ) { traverse ( c ) ;
rank: 715
score: 98.71589660644531
patch: traverse ( node , type ) ;
rank: 716
score: 99.03390502929688
patch: traverse ( c , c , filter ) ;
rank: 716
score: 98.98667214133523
patch: query = c . get CaMeL Next ( ) ;
rank: 716
score: 98.92739868164062
patch: traverse ( c , ; ++ c ) ;
rank: 716
score: 98.833251953125
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( n . get CaMeL Class CaMeL Name ( ) ) ) {
rank: 716
score: 98.77684326171875
patch: traverse ( c , c ; c = c . get CaMeL First CaMeL Child ( ) ) ;
rank: 716
score: 98.75043596540179
patch: if ( c != null ) { traverse ( c ) ) ;
rank: 716
score: 98.71482340494792
patch: else if ( c != null ) {
rank: 717
score: 99.03276977539062
patch: traverse ( ( ) c , c ) ;
rank: 717
score: 98.92722389914773
patch: traverse ( c , false , c ) ; }
rank: 717
score: 98.90219455295139
patch: traverse ( c , node , ) ;
rank: 717
score: 98.84435356987848
patch: traverse ( node , visits ++ ) ;
rank: 717
score: 98.77678479646382
patch: c = c . get CaMeL First CaMeL Child ( ) ; boolean traverse ( c ) ;
rank: 717
score: 98.75025227864583
patch: if ( c != 0 ) { traverse ( c , c ) ;
rank: 718
score: 99.03143865411931
patch: while ( c . has CaMeL Next ( ) )
rank: 718
score: 98.98649458451705
patch: dst = c . get CaMeL Next ( ) ;
rank: 718
score: 98.92692057291667
patch: if ( c == node ) traverse ( c ) ;
rank: 718
score: 98.84282684326172
patch: visit ( node , c ) ;
rank: 718
score: 98.83299719769022
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( null ) ) {
rank: 718
score: 98.77655029296875
patch: if ( c . get CaMeL Type ( ) == || c . get CaMeL Type ( ) ;
rank: 718
score: 98.7498028094952
patch: if ( ! >= n ) { traverse ( c ) ;
rank: 718
score: 98.70475769042969
patch: try { visit ( c ) ;
rank: 719
score: 99.03011474609374
patch: traverse ( c ) ; c = ( ;
rank: 719
score: 98.98561604817708
patch: if ( c != null && c . get CaMeL First CaMeL Child ( ) ) {
rank: 719
score: 98.92690207741477
patch: if ( ! n . equals ( c ) )
rank: 719
score: 98.84156494140625
patch: traverse ( c ) ; exit ( ) ;
rank: 719
score: 98.832861328125
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) traverse ( c ) ;
rank: 719
score: 98.77651638454861
patch: c = c . get CaMeL Value ( ) ; traverse ( c , c ) ;
rank: 719
score: 98.74945537860577
patch: traverse ( c == null ) ; traverse ( c ) ;
rank: 719
score: 98.70397186279297
patch: traverse ( parent , n ) ;
rank: 720
score: 99.02544696514423
patch: pos = c . get CaMeL Parent CaMeL Node ( ) ;
rank: 720
score: 98.89993896484376
patch: traverse ( c , next , true ) ;
rank: 720
score: 98.84073486328126
patch: c = c . equals ( c ) ;
rank: 720
score: 98.8325907389323
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Name ) ;
rank: 720
score: 98.77623980978261
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Instance ( ) ;
rank: 720
score: 98.74933330829327
patch: if ( c ; traverse ( c ) ) { return ;
rank: 721
score: 99.02530611478366
patch: traverse ( c , c ) ; c = c ) ;
rank: 721
score: 98.98377990722656
patch: traverse ( c ) ; } }
rank: 721
score: 98.83248768682066
patch: if ( ! node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) break ;
rank: 721
score: 98.77580460258152
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( c . get CaMeL Type ( ) ;
rank: 721
score: 98.74924879807692
patch: if ( type != null ) { traverse ( c ) ;
rank: 722
score: 98.98374245383523
patch: ip = c . get CaMeL Next ( ) ;
rank: 722
score: 98.92610307173295
patch: traverse ( c ) ; return ; } * /
rank: 722
score: 98.8324444110577
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Function CaMeL Name ( ) ) ;
rank: 722
score: 98.77565511067708
patch: c = c . get CaMeL First CaMeL Child ( ) ; while ( c . has CaMeL Next ( ) ) {
rank: 722
score: 98.74907977764423
patch: if ( n != 0 ) { traverse ( n ) ;
rank: 722
score: 98.69361029730902
patch: c = c . get CaMeL Next CaMeL
rank: 723
score: 99.024365234375
patch: traverse ( c , options , c ) ;
rank: 723
score: 98.83197021484375
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( n . get CaMeL Name ( ) ) ) break ;
rank: 723
score: 98.83070203993056
patch: c = c . clone ( ) ;
rank: 723
score: 98.74906703404018
patch: if ( c == null ) { traverse ( c ) ; ;
rank: 724
score: 98.98323567708333
patch: if ( c . get CaMeL First CaMeL Child ( ) ) traverse ( c ) ;
rank: 724
score: 98.97686212713069
patch: data = c . get CaMeL Next ( ) ;
rank: 724
score: 98.92488606770833
patch: traverse ( c , c ) ; c = ) ;
rank: 724
score: 98.83162434895833
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Class CaMeL Name ( ) ) ) continue ;
rank: 724
score: 98.82957153320312
patch: visit ( c ) ; c = next ;
rank: 724
score: 98.7752685546875
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( c ) ;
rank: 724
score: 98.74905395507812
patch: traverse ( 0 != c ) ;
rank: 724
score: 98.68478054470486
patch: if ( c != null false ) {
rank: 725
score: 99.02332481971153
patch: traverse ( c , c . get ( c ) ) ;
rank: 725
score: 98.98286946614583
patch: Symbol c = c . get CaMeL First CaMeL Child ( ) ; c = next ;
rank: 725
score: 98.9754971590909
patch: attribute = c . get CaMeL Next ( ) ;
rank: 725
score: 98.92486572265625
patch: traverse ( ( Node ) c , ;
rank: 725
score: 98.83146720096983
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) break ; }
rank: 725
score: 98.77376556396484
patch: traverse ( $STRING$ , c ) ;
rank: 725
score: 98.74901404747597
patch: if ( 1 != 1 ) { traverse ( c ) ;
rank: 725
score: 98.68196105957031
patch: should CaMeL Visit ( node ) ;
rank: 726
score: 99.02328725961539
patch: traverse ( c ) ; c = ( Node ) c ;
rank: 726
score: 98.982666015625
patch: traverse ( c . get CaMeL First CaMeL Child ( ) , should CaMeL Visit ) ;
rank: 726
score: 98.92426147460938
patch: traverse ( c , this , false ) ;
rank: 726
score: 98.83146421370968
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL File CaMeL Name ( ) ) ) {
rank: 726
score: 98.82710096571181
patch: should CaMeL Retraverse ( node ) ;
rank: 726
score: 98.77340565557066
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( c . has CaMeL Next ( ) )
rank: 726
score: 98.74887319711539
patch: if ( null != 0 ) { traverse ( c ) ;
rank: 727
score: 98.98259819878473
patch: Node c = c . get CaMeL First CaMeL Child ( ) ; c = c ;
rank: 727
score: 98.924169921875
patch: traverse ( c ) ; ; return ; }
rank: 727
score: 98.89500732421875
patch: traverse ( c , next == null ) ;
rank: 727
score: 98.83131626674107
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . to CaMeL Lower CaMeL Case ( ) ) ;
rank: 727
score: 98.82583182198661
patch: visit ( c ) ; }
rank: 727
score: 98.74884502704327
patch: if ( c == n ) { traverse ( c ) ;
rank: 727
score: 98.6781997680664
patch: if ( c != c ) {
rank: 728
score: 98.98237440321181
patch: Symbol next = c . get CaMeL First CaMeL Child ( ) ; c = next ;
rank: 728
score: 98.92078653971355
patch: traverse ( c ) ; if ( c != null )
rank: 728
score: 98.8312237079327
patch: System . err . println ( $STRING$ + c . get CaMeL Name ( ) , c . get CaMeL Name ( ) ) ;
rank: 728
score: 98.82525634765625
patch: traverse ( node ) ; c = next ;
rank: 728
score: 98.7731689453125
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( c , false ) ;
rank: 728
score: 98.74834442138672
patch: if ( ! c . is CaMeL Empty ( ) ) ; return ; }
rank: 729
score: 98.92069868607955
patch: synchronized ( this ) { traverse ( c ) ;
rank: 729
score: 98.83110700334821
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( node . get CaMeL Type CaMeL Name ( ) ) )
rank: 729
score: 98.77273559570312
patch: c = c . get CaMeL First CaMeL Child ( ) ; ) { traverse ( c ) ;
rank: 729
score: 98.74787902832031
patch: try { traverse ( n ) ;
rank: 729
score: 98.6773681640625
patch: traverse ( next ) ;
rank: 730
score: 98.98173384232955
patch: combo = c . get CaMeL Next ( ) ;
rank: 730
score: 98.97332208806819
patch: ret = n . get CaMeL Next ( ) ;
rank: 730
score: 98.920556640625
patch: / * traverse ( c , ; * /
rank: 730
score: 98.83102651742789
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { continue ; }
rank: 730
score: 98.82354736328125
patch: c = c . length ( ) ;
rank: 730
score: 98.77260131835938
patch: c = c . get CaMeL First CaMeL Child ( ) ; while ( c != null ) {
rank: 730
score: 98.74691009521484
patch: if ( ! c . length ( ) ) ; traverse ( c ) ;
rank: 730
score: 98.67728097098214
patch: traverse ( node , ) ;
rank: 731
score: 98.98164506392045
patch: br = c . get CaMeL Next ( ) ;
rank: 731
score: 98.919921875
patch: traverse ( c , ; return false ) ; }
rank: 731
score: 98.83099772135417
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Class CaMeL Name ( ) ) ) return ;
rank: 731
score: 98.82341172960069
patch: traverse ( c , parent ) ; }
rank: 731
score: 98.7724609375
patch: traverse ( c + c + ) ;
rank: 731
score: 98.74529559795673
patch: if ( c != traverse ( c ) ) { return ;
rank: 731
score: 98.67509460449219
patch: traverse ( ref , node ) ;
rank: 732
score: 98.98117897727273
patch: design = c . get CaMeL Next ( ) ;
rank: 732
score: 98.91991577148437
patch: if ( c != ; c = c )
rank: 732
score: 98.8880126953125
patch: traverse ( c , next , false ) ;
rank: 732
score: 98.83078342013889
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Name ( ) + $STRING$ ) ; }
rank: 732
score: 98.82239447699652
patch: visits ++ ; traverse ( node ) ;
rank: 732
score: 98.77228461371527
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( current ) ;
rank: 732
score: 98.74525553385416
patch: if ( ! c . length ( ) != 1 ) { return ;
rank: 732
score: 98.67243957519531
patch: while ( n != null ) {
rank: 733
score: 99.01270640980114
patch: if ( c . has CaMeL Next ( ) )
rank: 733
score: 98.98081276633523
patch: marker = c . get CaMeL Next ( ) ;
rank: 733
score: 98.91988118489583
patch: if ( c == ; c = c . ; }
rank: 733
score: 98.77225952148437
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( c ) ; ) ;
rank: 733
score: 98.7450702373798
patch: if ( ! != node ) { traverse ( c ) ;
rank: 734
score: 99.0125732421875
patch: c = ( Node ) c . traverse ( node ) ;
rank: 734
score: 98.98039106889205
patch: cursor = c . get CaMeL Next ( ) ;
rank: 734
score: 98.91913396661931
patch: traverse ( ( Node ) c , node ) ;
rank: 734
score: 98.83037651909723
patch: if ( ! node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( n . get CaMeL Name ( ) ) )
rank: 734
score: 98.82109069824219
patch: visit ( c , null ) ;
rank: 734
score: 98.74503267728366
patch: if ( ! c . length ( ) != 1 ) ;
rank: 734
score: 98.67074584960938
patch: if ( node == null ) {
rank: 735
score: 98.98012473366477
patch: saved = c . get CaMeL Next ( ) ;
rank: 735
score: 98.9183349609375
patch: traverse ( c , ; c . ; }
rank: 735
score: 98.83030192057292
patch: if ( ! n . is CaMeL Empty ( ) )
rank: 735
score: 98.77156982421874
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( c . null ) ;
rank: 735
score: 98.74484688895089
patch: if ( c != null ) { ; traverse ( c ) ;
rank: 735
score: 98.66983032226562
patch: traverse ( n , parent ) ;
rank: 736
score: 98.97971413352273
patch: th = c . get CaMeL Next ( ) ;
rank: 736
score: 98.91827947443181
patch: / * traverse ( c , c ) * /
rank: 736
score: 98.88636610243056
patch: traverse ( ! c , c ) ;
rank: 736
score: 98.830234375
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Parent ( ) . get CaMeL Id ( ) ) ; }
rank: 736
score: 98.77136840820313
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( Node . c ) ;
rank: 736
score: 98.74480731670673
patch: if ( c != n ) { traverse ( c ) ;
rank: 736
score: 98.6671371459961
patch: traverse ( list , c ) ;
rank: 737
score: 98.97965864701705
patch: argument = c . get CaMeL Next ( ) ;
rank: 737
score: 98.91827947443181
patch: traverse ( c , ( ) c ) ; }
rank: 737
score: 98.83012333622685
patch: if ( ! c . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) )
rank: 737
score: 98.77130126953125
patch: traverse ( c ) ; c = node . get CaMeL Instance CaMeL Type ( ) ;
rank: 738
score: 99.01035719651442
patch: traverse ( ( Node ) c . next ( ) ) ;
rank: 738
score: 98.97954767400569
patch: param = c . get CaMeL Next ( ) ;
rank: 738
score: 98.91796875
patch: traverse ( c ) ; n = c ;
rank: 738
score: 98.81471082899306
patch: c . traverse ( c ) ; }
rank: 738
score: 98.74468524639423
patch: if ( c != null ) { traverse ( c ) throws
rank: 739
score: 99.00687662760417
patch: if ( c . has CaMeL Child ( c ) )
rank: 739
score: 98.97944779829545
patch: finished = c . get CaMeL Next ( ) ;
rank: 739
score: 98.91766357421875
patch: traverse ( c , type , true ) ;
rank: 739
score: 98.77108154296874
patch: traverse ( c ) ; c = node . get CaMeL First CaMeL Child ( ) ; break ;
rank: 739
score: 98.74408428485577
patch: traverse ( c , 1 ) ; traverse ( c ) ;
rank: 739
score: 98.66401672363281
patch: while ( c != node ) {
rank: 740
score: 98.97919256036931
patch: I = c . get CaMeL Next ( ) ;
rank: 740
score: 98.95389811197917
patch: Node name = c . get CaMeL Next ( ) ;
rank: 740
score: 98.91669311523438
patch: traverse ( c , ; return false ) ;
rank: 740
score: 98.82969156901042
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { ;
rank: 740
score: 98.81399197048611
patch: traverse ( [ - 1 ] ) ;
rank: 740
score: 98.77102322048611
patch: traverse ( new traverse ( ) ) ;
rank: 740
score: 98.74395751953125
patch: if ( ! c . get CaMeL Node ( ) . length ( ) ;
rank: 740
score: 98.66259002685547
patch: if ( current != null ) {
rank: 741
score: 99.00497436523438
patch: traverse ( c , options ) ;
rank: 741
score: 98.97779430042614
patch: fam = c . get CaMeL Next ( ) ;
rank: 741
score: 98.91650390625
patch: traverse ( c , node , true ) ; }
rank: 741
score: 98.82953287760417
patch: if ( ! node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Type CaMeL Name ( ) ) ) {
rank: 741
score: 98.81355794270833
patch: traverse ( index ) ;
rank: 741
score: 98.77054636101974
patch: traverse ( c ) ; c = node . get CaMeL First CaMeL Child ( ) ; ;
rank: 741
score: 98.74384014423077
patch: if ( c != null ) { traverse ( type ) ;
rank: 742
score: 99.00458318536931
patch: traverse ( ( Node ) c ) ; break ;
rank: 742
score: 98.82951750578704
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Type CaMeL Name ( ) ) ; }
rank: 742
score: 98.77049618675595
patch: c = c . get CaMeL Next ( ) ; if ( node . get CaMeL Type ( ) ;
rank: 742
score: 98.74365234375
patch: if ( ! traverse ( c ) ) { return ; } else {
rank: 742
score: 98.65814208984375
patch: traverse ( Node c ) ;
rank: 743
score: 98.97650701349431
patch: caller = c . get CaMeL Next ( ) ;
rank: 743
score: 98.88001598011364
patch: traverse ( c ) ; next ( node ) ;
rank: 743
score: 98.8295010653409
patch: if ( ! c . contains ( c ) )
rank: 743
score: 98.80923800998264
patch: traverse ( parent , c ) ; }
rank: 743
score: 98.77030436197917
patch: c = c . get CaMeL Parent ( ) ; try { traverse ( c ) ;
rank: 743
score: 98.65776824951172
patch: visit ( parent , c ) ;
rank: 744
score: 98.9757412997159
patch: bp = c . get CaMeL Next ( ) ;
rank: 744
score: 98.91597290039063
patch: traverse ( c , start , c ) ;
rank: 744
score: 98.80890570746527
patch: traverse ( clone ( c ) ) ;
rank: 744
score: 98.77020263671875
patch: traverse ( c ) ; c = c . get CaMeL First CaMeL Child ( ) ; return ;
rank: 744
score: 98.74355844350961
patch: int n = c ; traverse ( c , c ) ;
rank: 744
score: 98.6568374633789
patch: exit CaMeL Node ( node ) ;
rank: 745
score: 99.00332641601562
patch: traverse ( c , n ) ; break ;
rank: 745
score: 98.97444291548295
patch: editor = c . get CaMeL Next ( ) ;
rank: 745
score: 98.914990234375
patch: traverse ( c , c , $NUMBER$ ) ;
rank: 745
score: 98.80882432725694
patch: visits ++ ; visit ( c ) ;
rank: 745
score: 98.7698284646739
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = node . get CaMeL Value ( ) ;
rank: 745
score: 98.74343872070312
patch: if ( ! c . iterator ( ) . iterator ( ) ; return ;
rank: 745
score: 98.65621185302734
patch: traverse ( definition , c ) ;
rank: 746
score: 98.97416548295455
patch: al = c . get CaMeL Next ( ) ;
rank: 746
score: 98.94020385742188
patch: = c . get CaMeL Next ( ) ;
rank: 746
score: 98.9149169921875
patch: traverse ( c , init ( c ) ) ;
rank: 746
score: 98.8292236328125
patch: if ( ! node . is CaMeL Empty ( ) )
rank: 746
score: 98.80805969238281
patch: c . add ( c ) ;
rank: 746
score: 98.76921280570652
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Count ( ) ;
rank: 746
score: 98.7429950420673
patch: if ( c != null ) { traverse ( 1 ) ;
rank: 746
score: 98.65298461914062
patch: visits = next ( c ) ;
rank: 747
score: 98.97414328835227
patch: re = c . get CaMeL Next ( ) ;
rank: 747
score: 98.94015163845486
patch: traverse ( next 1 , c ) ;
rank: 747
score: 98.91462846235795
patch: line = c . get CaMeL Line ( ) ;
rank: 747
score: 98.87642822265624
patch: traverse ( node , visits < $NUMBER$ ) ;
rank: 747
score: 98.80582682291667
patch: traverse ( type ) ;
rank: 747
score: 98.7427978515625
patch: if ( 0 == null ) { traverse ( c ) ;
rank: 747
score: 98.65144348144531
patch: node = traverse ( c ) ;
rank: 748
score: 99.00196422230114
patch: traverse ( c ) ; c = ( ; }
rank: 748
score: 98.97358842329545
patch: sd = c . get CaMeL Next ( ) ;
rank: 748
score: 98.93844265407986
patch: if ( c != null ) { return
rank: 748
score: 98.91455078125
patch: traverse ( c , this , true ) ;
rank: 748
score: 98.87449340820312
patch: traverse ( c , c , visits ) ;
rank: 748
score: 98.82850864955357
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( n . get CaMeL Type CaMeL Name ( ) ) )
rank: 748
score: 98.80377197265625
patch: visit ( c , false ) ;
rank: 748
score: 98.76897430419922
patch: traverse ( c , prefix ) ;
rank: 748
score: 98.74244103064903
patch: if ( $NUMBER$ != n ) { traverse ( c ) ;
rank: 748
score: 98.65039825439453
patch: super . traverse ( node ) ;
rank: 749
score: 98.97271173650569
patch: mi = c . get CaMeL Next ( ) ;
rank: 749
score: 98.828408203125
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Parent ( ) . get CaMeL Name ( ) ) ; }
rank: 749
score: 98.76819428943452
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . null ( ) ;
rank: 749
score: 98.64952087402344
patch: node . traverse ( node ) ;
rank: 750
score: 98.99913940429687
patch: traverse ( c , c . parent ) ;
rank: 750
score: 98.97175736860795
patch: changed = c . get CaMeL Next ( ) ;
rank: 750
score: 98.87337493896484
patch: traverse ( c , ref ) ;
rank: 750
score: 98.82796223958333
patch: if ( ! c . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Id ( ) ) )
rank: 750
score: 98.76692922491776
patch: c = c . get CaMeL First CaMeL Child ( ) ; c . traverse ( ) ;
rank: 750
score: 98.74176432291667
patch: if ( ! c . is CaMeL Empty ( ) ) { ; ;
rank: 751
score: 98.99845747514205
patch: if ( c . has CaMeL Child ( ) )
rank: 751
score: 98.97112482244319
patch: nested = c . get CaMeL Next ( ) ;
rank: 751
score: 98.93583984375
patch: c = c . get CaMeL Next -- ;
rank: 751
score: 98.91375122070312
patch: / * traverse ( c ) * / ;
rank: 751
score: 98.82794596354167
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Class CaMeL Name ( ) + $STRING$ ) ;
rank: 751
score: 98.79869927300348
patch: traverse ( - 1 , c ) ;
rank: 751
score: 98.7665506998698
patch: traverse ( c , c . get CaMeL Type ( ) , c . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 751
score: 98.74176025390625
patch: traverse ( c - 1 ) ;
rank: 751
score: 98.64734649658203
patch: while ( parent != null ) {
rank: 752
score: 98.99830211292614
patch: traverse ( c . traverse ( this ) ) ;
rank: 752
score: 98.9710693359375
patch: key = c . get CaMeL Next ( ) ;
rank: 752
score: 98.93565784801136
patch: expression = c . get CaMeL Next ( ) ;
rank: 752
score: 98.91340467664931
patch: traverse ( c , ; c = ;
rank: 752
score: 98.87169647216797
patch: traverse ( children , c ) ;
rank: 752
score: 98.82784598214286
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Source CaMeL Name ( ) ) )
rank: 752
score: 98.74141751802884
patch: if ( n == 0 ) ; traverse ( c ) ;
rank: 753
score: 98.99802468039773
patch: traverse ( c . traverse ( n ) ) ;
rank: 753
score: 98.79475911458333
patch: c = next . get ( ) ;
rank: 753
score: 98.76507568359375
patch: ; traverse ( c , node ) ;
rank: 753
score: 98.74127960205078
patch: traverse ( 0 == c ) ;
rank: 753
score: 98.6456527709961
patch: traverse ( name , node ) ;
rank: 754
score: 98.9692049893466
patch: control = c . get CaMeL Next ( ) ;
rank: 754
score: 98.9312255859375
patch: while ( c != null ) { for (
rank: 754
score: 98.9097900390625
patch: if ( c != ; c = c . ;
rank: 754
score: 98.8712491122159
patch: synchronized ( node ) { traverse ( c ) ;
rank: 754
score: 98.82717063210227
patch: traverse ( c , traverse ( parent ) ) ;
rank: 754
score: 98.76435004340277
patch: traverse ( end ( c ) ) ;
rank: 754
score: 98.74095052083334
patch: if ( c != null ) { traverse ( c ) ; return ;
rank: 754
score: 98.63949584960938
patch: if ( null != c ) {
rank: 755
score: 98.96858354048295
patch: li = c . get CaMeL Next ( ) ;
rank: 755
score: 98.90972900390625
patch: traverse ( c , ) ; c = c . ;
rank: 755
score: 98.8271063442888
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) return ; else
rank: 755
score: 98.76387939453124
patch: traverse ( c ) ; c = c . get CaMeL First CaMeL Child ( ) ; } ;
rank: 755
score: 98.74092923677884
patch: if ( 1 == 0 ) { traverse ( c ) ;
rank: 755
score: 98.63832092285156
patch: traverse ( exp , c ) ;
rank: 756
score: 98.96821732954545
patch: parameter = c . get CaMeL Next ( ) ;
rank: 756
score: 98.93007405598958
patch: traverse ( c , next 1 ) ;
rank: 756
score: 98.82696533203125
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Key ( ) ) ) return ;
rank: 756
score: 98.763427734375
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( ( Node ) c ) ;
rank: 756
score: 98.74070521763393
patch: if ( c != length ) { traverse ( c ) ; }
rank: 756
score: 98.63827514648438
patch: ret = next ( c ) ;
rank: 757
score: 98.90812377929687
patch: / * * traverse ( c ) * /
rank: 757
score: 98.826904296875
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Id ( ) ) ) throw null ;
rank: 757
score: 98.78577532087054
patch: c . next ( ) ;
rank: 757
score: 98.76333984375
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Current CaMeL Node ( ) ;
rank: 757
score: 98.74057442801339
patch: if ( c == null ) traverse ( c , c ) ;
rank: 757
score: 98.63824462890625
patch: if ( name != null ) {
rank: 758
score: 98.99094848632812
patch: traverse ( c , c , scope ) ;
rank: 758
score: 98.9671963778409
patch: value = c . get CaMeL Next ( ) ;
rank: 758
score: 98.90792846679688
patch: traverse ( c , ( ) null ) ;
rank: 758
score: 98.82663399832589
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( n . get CaMeL Id ( ) ) ) return ;
rank: 758
score: 98.78370496961806
patch: c -- ; traverse ( c ) ;
rank: 758
score: 98.76329456676136
patch: traverse ( c , c . get CaMeL Parent ( ) , c . get CaMeL Parent ( ) ) ;
rank: 758
score: 98.74039132254464
patch: if ( ! c . length ( ) == 1 ) { public
rank: 758
score: 98.63801574707031
patch: if ( next ( ) ) {
rank: 759
score: 98.90782674153645
patch: if ( c . equals ( c ) ) break ;
rank: 759
score: 98.82663198617789
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Value ( ) ) )
rank: 759
score: 98.7794189453125
patch: traverse ( 0 , node ) ;
rank: 759
score: 98.7629165649414
patch: try { traverse ( false ) ;
rank: 759
score: 98.74010291466347
patch: traverse ( n , c ) ; traverse ( c ) ;
rank: 759
score: 98.63785552978516
patch: traverse ( declarations , c ) ;
rank: 760
score: 98.9661865234375
patch: meth = c . get CaMeL Next ( ) ;
rank: 760
score: 98.92594401041667
patch: traverse ( c , next $NUMBER$ ) ;
rank: 760
score: 98.82658781828704
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) }
rank: 760
score: 98.77882893880208
patch: c = node . next ( ) ;
rank: 760
score: 98.76248931884766
patch: traverse ( c , children ) ;
rank: 760
score: 98.740087890625
patch: if ( ! c . size ( ) == 1 ) { return ;
rank: 761
score: 98.96602006392045
patch: ctx = c . get CaMeL Next ( ) ;
rank: 761
score: 98.92578125
patch: traverse ( c , c != null ) ;
rank: 761
score: 98.90656072443181
patch: try { traverse ( c ) ; } finally {
rank: 761
score: 98.86128540039063
patch: traverse ( c ) ; } visits ++ ;
rank: 761
score: 98.82650991586539
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Name ( ) , c ) ;
rank: 761
score: 98.76180013020833
patch: traverse ( c , c . get CaMeL Type ( ) , c . get CaMeL Current CaMeL Node ( ) ) ;
rank: 761
score: 98.74001840444711
patch: if ( ! c . equals ( 1 ) ) { public
rank: 761
score: 98.6357650756836
patch: if ( visits == $NUMBER$ ) {
rank: 762
score: 98.96593128551136
patch: box = c . get CaMeL Next ( ) ;
rank: 762
score: 98.92409939236111
patch: traverse ( next $NUMBER$ , c ) ;
rank: 762
score: 98.9050625887784
patch: traverse ( c , ; ) ; break ; }
rank: 762
score: 98.82642540564903
patch: System . out . println ( $STRING$ + c . get CaMeL Name ( ) , c . get CaMeL Id ( ) ) ;
rank: 762
score: 98.74000767299107
patch: traverse ( c 1 ) ;
rank: 762
score: 98.63533782958984
patch: if ( target != null ) {
rank: 763
score: 98.98799641927083
patch: if ( c . get CaMeL Type ( ) == ;
rank: 763
score: 98.96506569602273
patch: xsp = c . get CaMeL Next ( ) ;
rank: 763
score: 98.9232510653409
patch: c = c . get CaMeL Next ( ) {
rank: 763
score: 98.90503540039063
patch: traverse ( c , c , false , ;
rank: 763
score: 98.85939719460227
patch: Node c = traverse ( c , c ) ;
rank: 763
score: 98.82627563476562
patch: if ( c == null ) return ; }
rank: 763
score: 98.77495659722223
patch: c = parent . get ( ) ;
rank: 763
score: 98.76080877130681
patch: traverse ( c , c . get CaMeL Type ( ) , c . get CaMeL Parent ( ) ) ;
rank: 763
score: 98.739990234375
patch: if ( c != null ) { traverse ( c ) ; break ;
rank: 764
score: 98.98672146267361
patch: traverse ( c ) ; n ++ ;
rank: 764
score: 98.96443314985795
patch: type = c . get CaMeL Parent ( ) ;
rank: 764
score: 98.923193359375
patch: c = should CaMeL Visit ( c ) ;
rank: 764
score: 98.90457763671876
patch: traverse ( c , consume ( ) ) ;
rank: 764
score: 98.75970458984375
patch: traverse ( c ) ; c = c . get CaMeL First CaMeL Child ( ) ; continue ;
rank: 764
score: 98.63435363769531
patch: if ( c == c ) {
rank: 765
score: 98.96434437144886
patch: atom = c . get CaMeL Next ( ) ;
rank: 765
score: 98.90361328125
patch: traverse ( c , create ( ) ) ;
rank: 765
score: 98.82602945963542
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Id ) ;
rank: 765
score: 98.7728042602539
patch: c . visit ( c ) ;
rank: 765
score: 98.75940704345703
patch: traverse ( c + name ) ;
rank: 765
score: 98.633056640625
patch: traverse ( function , c ) ;
rank: 766
score: 98.96391157670455
patch: me = c . get CaMeL Next ( ) ;
rank: 766
score: 98.9020663174716
patch: traverse ( c , ; c , false ) ;
rank: 766
score: 98.82590247844827
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Type CaMeL Name ( ) ) ) ;
rank: 766
score: 98.75639011548913
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Node ( ) ;
rank: 766
score: 98.73866624098558
patch: if ( n > 0 ) { traverse ( c ) ;
rank: 767
score: 98.96347878196023
patch: tc = c . get CaMeL Next ( ) ;
rank: 767
score: 98.90113525390625
patch: traverse ( node , ( ) c ) ;
rank: 767
score: 98.82578125
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Id ( ) + ) ;
rank: 767
score: 98.77183532714844
patch: traverse ( next == c ) ;
rank: 767
score: 98.75628662109375
patch: return ) ; traverse ( c ) ;
rank: 767
score: 98.73822428385417
patch: if ( c != null ) { traverse ( c , $NUMBER$ ) ;
rank: 767
score: 98.63199615478516
patch: if ( parent instanceof Node ) {
rank: 768
score: 98.96291281960227
patch: el = c . get CaMeL Next ( ) ;
rank: 768
score: 98.85532448508523
patch: if ( c != null ) { visits ++ ;
rank: 768
score: 98.8256640625
patch: if ( node . get CaMeL Name ( ) . equals ( c . get CaMeL Class CaMeL Name ( ) ) ) {
rank: 768
score: 98.77082824707031
patch: traverse ( c , key ) ;
rank: 768
score: 98.75495741102431
patch: traverse ( c + 1 , c ;
rank: 768
score: 98.7374267578125
patch: if ( node != null ) ; traverse ( c ) ;
rank: 768
score: 98.63189697265625
patch: node = next ( c ) ;
rank: 769
score: 98.96251331676136
patch: exp = c . get CaMeL Next ( ) ;
rank: 769
score: 98.91531372070312
patch: do { traverse ( c , node ) ;
rank: 769
score: 98.90074157714844
patch: traverse ( c , filter ) ;
rank: 769
score: 98.75419689360119
patch: c = c . get CaMeL First CaMeL Child ( ) ; break ; } traverse ( c ) ;
rank: 769
score: 98.73737335205078
patch: traverse ( c , c ) throws
rank: 769
score: 98.6312026977539
patch: traverse ( id , node ) ;
rank: 770
score: 98.96128151633523
patch: er = c . get CaMeL Next ( ) ;
rank: 770
score: 98.90057927911931
patch: traverse ( c , true ) ; return ; }
rank: 770
score: 98.82546657986111
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Name ( ) ) ) ;
rank: 770
score: 98.76814100477431
patch: traverse ( this , c ) ; }
rank: 770
score: 98.73734224759616
patch: if ( null != null ) { traverse ( c ) ;
rank: 770
score: 98.6299819946289
patch: traverse ( parent , parent ) ;
rank: 771
score: 98.98344282670455
patch: traverse ( c , c ) ; n ++ ;
rank: 771
score: 98.96014959161931
patch: addr = c . get CaMeL Next ( ) ;
rank: 771
score: 98.89998779296874
patch: / * traverse ( c ) ; * /
rank: 771
score: 98.824951171875
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Value CaMeL Type ( ) ) ) {
rank: 771
score: 98.76776885986328
patch: visit ( c , parent ) ;
rank: 771
score: 98.75166829427083
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( node . has CaMeL Next ( ) ) {
rank: 771
score: 98.73685128348214
patch: if ( c != null ) { traverse ( c ) ; else
rank: 772
score: 98.96009410511364
patch: ws = c . get CaMeL Next ( ) ;
rank: 772
score: 98.82476596174568
patch: if ( ! node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Type CaMeL Name ( ) ) )
rank: 772
score: 98.75158160665761
patch: traverse ( c ) ; c = node . get CaMeL First CaMeL Child ( ) ; traverse ( c ) ;
rank: 772
score: 98.73680701622597
patch: traverse ( c ) ; traverse ( c , 0 ) ;
rank: 772
score: 98.6278305053711
patch: traverse ( node , current ) ;
rank: 773
score: 98.98178932883523
patch: traverse ( c ) ; n = c ) ;
rank: 773
score: 98.95936168323864
patch: ex = c . get CaMeL Next ( ) ;
rank: 773
score: 98.89921264648437
patch: traverse ( c ) ; return ; } ;
rank: 773
score: 98.82460530598958
patch: if ( node . get CaMeL Name ( ) . equals ( node . get CaMeL Id ( ) ) ) break ;
rank: 773
score: 98.75061616443452
patch: c = c . get CaMeL First CaMeL Child ( ) ; try { ; traverse ( c ) ;
rank: 773
score: 98.73630934495192
patch: if ( n != $NUMBER$ ) { traverse ( c ) ;
rank: 773
score: 98.6274185180664
patch: traverse ( c , target ) ;
rank: 774
score: 98.98057250976562
patch: traverse ( c , c , input ) ;
rank: 774
score: 98.89820445667614
patch: traverse ( c , false , false ) ; }
rank: 774
score: 98.76045057508681
patch: traverse ( null , c ) ; }
rank: 774
score: 98.75015113467262
patch: c = c . get CaMeL Value ( ) ; c = c . get CaMeL Instance ( ) ;
rank: 774
score: 98.7362530048077
patch: if ( c != null ) { traverse ( parent ) ;
rank: 775
score: 98.97972869873047
patch: traverse ( c , list ) ;
rank: 775
score: 98.9574307528409
patch: frame = c . get CaMeL Next ( ) ;
rank: 775
score: 98.89797141335227
patch: traverse ( next ( c ) , node ) ;
rank: 775
score: 98.89671741832386
patch: traverse ( c , ; c ++ ) ; }
rank: 775
score: 98.82430013020833
patch: throw new Runtime CaMeL Exception ( c . get CaMeL Message ( $STRING$ , c . get CaMeL Class CaMeL Name ( ) ) ) ;
rank: 775
score: 98.73619666466347
patch: if ( null == n ) { traverse ( c ) ;
rank: 776
score: 98.95680930397727
patch: context = c . get CaMeL Node ( ) ;
rank: 776
score: 98.89650656960227
patch: traverse ( ( Node ) c , false ) ;
rank: 776
score: 98.84156799316406
patch: traverse ( scope , c ) ;
rank: 776
score: 98.82395652488425
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Name ( ) + ) ;
rank: 776
score: 98.74898274739583
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( c . has CaMeL Next ( ) ) ;
rank: 776
score: 98.73610276442308
patch: if ( c != null ) { traverse ( $NUMBER$ ) ;
rank: 776
score: 98.62599182128906
patch: traverse ( node != null ) ;
rank: 777
score: 98.97825317382812
patch: traverse ( ) ; c = c ) ;
rank: 777
score: 98.95543323863636
patch: NIL = c . get CaMeL Next ( ) ;
rank: 777
score: 98.89589233398438
patch: traverse ( c , node , type ) ;
rank: 777
score: 98.89580743963069
patch: traverse ( c , node , false ) ; }
rank: 777
score: 98.82325846354166
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Class CaMeL Name ( ) ) ) break ;
rank: 777
score: 98.74791463216145
patch: traverse ( c , c . get CaMeL Parent ( ) , c . get CaMeL Current CaMeL Node ( ) ) ;
rank: 777
score: 98.736083984375
patch: if ( ! == null ) { traverse ( c ) ;
rank: 778
score: 98.95429021661931
patch: meta = c . get CaMeL Next ( ) ;
rank: 778
score: 98.89540793678977
patch: traverse ( c , check ( c ) ) ;
rank: 778
score: 98.75471496582031
patch: traverse ( node , index ) ;
rank: 778
score: 98.74785907451923
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL First CaMeL Child ( ) ; ;
rank: 778
score: 98.73580228365384
patch: if ( ! c . equals ( 1 ) ) { ;
rank: 778
score: 98.62486267089844
patch: traverse ( definition , node ) ;
rank: 779
score: 98.97528076171875
patch: c = c . traverse ( node ) ;
rank: 779
score: 98.9539794921875
patch: operation = c . get CaMeL Next ( ) ;
rank: 779
score: 98.89518229166667
patch: traverse ( node , ; c ) ;
rank: 779
score: 98.83124389648438
patch: if ( c != null ) { c .
rank: 779
score: 98.75301361083984
patch: traverse ( 1 , node ) ;
rank: 779
score: 98.73496907552084
patch: if ( c == null ) { traverse ( c , 1 ) ;
rank: 779
score: 98.62449645996094
patch: traverse ( module , c ) ;
rank: 780
score: 98.894287109375
patch: traverse ( c , ; ) ; ;
rank: 780
score: 98.89232177734375
patch: traverse ( c , n , null ) ;
rank: 780
score: 98.82285766601562
patch: else { traverse ( c , parent ) ;
rank: 780
score: 98.73440115792411
patch: if ( c == ) { traverse ( c , c ) ;
rank: 780
score: 98.6242904663086
patch: traverse ( target , node ) ;
rank: 781
score: 98.94844563802083
patch: traverse ( c ) ; visits -- ;
rank: 781
score: 98.88803932883523
patch: traverse ( next ( c ) , c ) ;
rank: 781
score: 98.82265940020162
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Type CaMeL Name ( ) ) ) ;
rank: 781
score: 98.73410470145089
patch: if ( c != null ) traverse ( c , n ) ;
rank: 781
score: 98.62382507324219
patch: traverse ( n , n ) ;
rank: 782
score: 98.92176513671875
patch: return c . get CaMeL Node ( ) ;
rank: 782
score: 98.88651123046876
patch: traverse ( c , next instanceof Node ) ;
rank: 782
score: 98.82244403545673
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ;
rank: 782
score: 98.75132921006944
patch: traverse ( [ - 0 ] ) ;
rank: 782
score: 98.743525390625
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = node . get CaMeL Parent CaMeL Node ( ) ;
rank: 782
score: 98.73393249511719
patch: traverse ( c - true ) ;
rank: 782
score: 98.62265014648438
patch: Node c = next ( ) ;
rank: 783
score: 98.96829223632812
patch: traverse ( c . traverse ( node ) ) ; }
rank: 783
score: 98.91273498535156
patch: traverse ( c ) ; try {
rank: 783
score: 98.89366566051136
patch: traverse ( c , false , true ) ; }
rank: 783
score: 98.82228137600806
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Method CaMeL Name ( ) ) ) {
rank: 783
score: 98.7492446899414
patch: traverse ( this . node ) ;
rank: 783
score: 98.7423785665761
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Line ( ) ;
rank: 783
score: 98.73369891826923
patch: if ( 1 == null ) { traverse ( c ) ;
rank: 783
score: 98.61965942382812
patch: traverse ( level , c ) ;
rank: 784
score: 98.9090347290039
patch: traverse ( c . node ) ;
rank: 784
score: 98.74822998046875
patch: c = c . get = c ;
rank: 784
score: 98.7335205078125
patch: traverse ( n == 0 ) ;
rank: 784
score: 98.61931501116071
patch: if ( ! false ) {
rank: 785
score: 98.96475219726562
patch: if ( c . starts CaMeL With ( $STRING$ ) )
rank: 785
score: 98.89949340820313
patch: if ( c . traverse ( node ) )
rank: 785
score: 98.8914462002841
patch: traverse ( c , filter ( c ) ) ;
rank: 785
score: 98.80537923177083
patch: int c = next ( c ) ;
rank: 785
score: 98.73910522460938
patch: c = c . get CaMeL First CaMeL Child ( ) ; c ( c . get CaMeL Type ( ) ) ;
rank: 785
score: 98.7335205078125
patch: if ( null ) { traverse ( c , c ) ;
rank: 785
score: 98.61798858642578
patch: if ( c != 0 ) {
rank: 786
score: 98.96400146484375
patch: traverse ( c , c , mode ) ;
rank: 786
score: 98.82209725215517
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Id ( ) ) ) return ; }
rank: 786
score: 98.73806895380434
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL State ( ) ;
rank: 786
score: 98.73324819711539
patch: if ( c != false ) { traverse ( c ) ;
rank: 786
score: 98.6176528930664
patch: if ( n instanceof Node ) {
rank: 787
score: 98.89592633928571
patch: while ( c != null )
rank: 787
score: 98.88944498697917
patch: traverse ( c , c , ; ;
rank: 787
score: 98.82190755208333
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Type CaMeL Name ( ) ) ) break ;
rank: 787
score: 98.73788850203805
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Nodes ( ) ;
rank: 787
score: 98.7330322265625
patch: if ( ! != 0 ) { traverse ( c ) ; }
rank: 787
score: 98.6141357421875
patch: if ( c == null )
rank: 788
score: 98.87416381835938
patch: traverse ( next != null , c ) ;
rank: 788
score: 98.82152210582386
patch: traverse ( c ) ; } traverse ( ) ;
rank: 788
score: 98.6126937866211
patch: if ( parent == null ) {
rank: 789
score: 98.82149658203124
patch: if ( c == null ) throw null ;
rank: 789
score: 98.80474175347223
patch: traverse ( ( Node ) next ) ;
rank: 789
score: 98.73506496263587
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Symbol ( ) ;
rank: 789
score: 98.7344970703125
patch: visit ( c , c ) ; }
rank: 789
score: 98.73262845552884
patch: if ( n != ) { traverse ( c ) ; }
rank: 789
score: 98.61221313476562
patch: result = next ( c ) ;
rank: 790
score: 98.8833895596591
patch: if ( c == ; c = c . ;
rank: 790
score: 98.883154296875
patch: if ( should CaMeL Visit ( c ) )
rank: 790
score: 98.8713134765625
patch: try { c = next ( c ) ;
rank: 790
score: 98.8203125
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Type ( ) ) ) {
rank: 790
score: 98.73471467391305
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( node . has CaMeL Next ( ) )
rank: 790
score: 98.73247821514423
patch: if ( ! != type ) { traverse ( c ) ;
rank: 790
score: 98.61170196533203
patch: if ( c != false ) {
rank: 791
score: 98.88246848366477
patch: traverse ( c , new Node ( ) ) ;
rank: 791
score: 98.73383440290179
patch: traverse ( [ ] ) ;
rank: 791
score: 98.73234340122768
patch: if ( ! c . is CaMeL Empty ( ) ) ) ;
rank: 791
score: 98.61095319475446
patch: if ( c . get CaMeL
rank: 792
score: 98.88128107244319
patch: traverse ( c , ; ) ; return ; }
rank: 792
score: 98.82003580729166
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Type CaMeL Name ( ) ) ) continue ;
rank: 792
score: 98.73284912109375
patch: traverse ( c , value ) ;
rank: 792
score: 98.73224346454327
patch: if ( parent != null ) ; traverse ( c ) ;
rank: 792
score: 98.7312890625
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = node . get CaMeL Instance CaMeL Type ( ) ;
rank: 793
score: 98.95538330078125
patch: traverse ( c , c . ( ) ) ; }
rank: 793
score: 98.8812484741211
patch: if ( traverse ( c ) )
rank: 793
score: 98.87044067382813
patch: return c . get CaMeL Parent ( ) ;
rank: 793
score: 98.81962733114919
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL String CaMeL Value ( ) ) ) ;
rank: 793
score: 98.79507882254464
patch: return next ( c ) ;
rank: 793
score: 98.73222351074219
patch: if ( c == ) { ;
rank: 793
score: 98.73189290364583
patch: traverse ( index , c ) ; }
rank: 793
score: 98.7293117357337
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = node . get CaMeL Type ( ) ;
rank: 793
score: 98.60337320963542
patch: traverse ( ref ) ;
rank: 794
score: 98.95517800071023
patch: while ( c . has CaMeL Child ( ) )
rank: 794
score: 98.866650390625
patch: if ( c == null ) { for (
rank: 794
score: 98.81946818033855
patch: if ( node . get CaMeL Name ( ) . equals ( c . get CaMeL Id ( ) ) ) break ;
rank: 794
score: 98.79398600260417
patch: } while ( c != null ) ;
rank: 794
score: 98.73214017427884
patch: if ( ! c . equals ( c ) ) { )
rank: 794
score: 98.72911580403645
patch: traverse ( c , c . get CaMeL Type ( ) , c . get CaMeL Root CaMeL Node ( ) ) ;
rank: 794
score: 98.60001918247768
patch: if ( ! true ) {
rank: 795
score: 98.9541015625
patch: if ( c . has CaMeL Children ( ) )
rank: 795
score: 98.88033040364583
patch: traverse ( c , n ) ; ;
rank: 795
score: 98.8193780307112
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) ; return ;
rank: 795
score: 98.73170823317308
patch: if ( c == 0 ) { traverse ( n ) ;
rank: 795
score: 98.72907257080078
patch: try { traverse ( parent ) ;
rank: 796
score: 98.95330810546875
patch: traverse ( ( Node ) c , c ) ; }
rank: 796
score: 98.87684215198864
patch: traverse ( ( Node ) c , true ) ;
rank: 796
score: 98.81928542564656
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Type CaMeL Name ( ) ) ; }
rank: 796
score: 98.79313151041667
patch: } while ( c != null ) {
rank: 796
score: 98.73102678571429
patch: if ( ! instanceof Node ) { traverse ( c ) ; }
rank: 796
score: 98.72928619384766
patch: c = next ( false ) ;
rank: 796
score: 98.72889775815217
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Root ( ) ;
rank: 797
score: 98.95269775390625
patch: traverse ( ( Node ) c ) ; ;
rank: 797
score: 98.8763760653409
patch: traverse ( c , node , c ) ; }
rank: 797
score: 98.81915072737068
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name CaMeL Index ( ) ) ) {
rank: 797
score: 98.730029296875
patch: if ( ! c . is CaMeL Empty ( ) ) { for (
rank: 797
score: 98.7288818359375
patch: traverse ( c , input ) ;
rank: 797
score: 98.72742716471355
patch: traverse ( c , c . get CaMeL Type ( ) , c . get CaMeL First CaMeL Child ( ) ) ;
rank: 797
score: 98.58938598632812
patch: synchronized ( node ) {
rank: 798
score: 98.9526700106534
patch: traverse ( ( Node ) c , n ) ;
rank: 798
score: 98.81898153981855
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Instance CaMeL Type ( ) ) ) ;
rank: 799
score: 98.85743059430804
patch: traverse ( next 1 ) ;
rank: 799
score: 98.8188897494612
patch: if ( ! node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Id ( ) ) ) break ;
rank: 799
score: 98.78376600477431
patch: traverse ( c ) ; next ++ ;
rank: 799
score: 98.72891438802084
patch: if ( n != 0 ) { traverse ( c , c ) ;
rank: 799
score: 98.72676595052083
patch: c = c . get CaMeL First CaMeL Child ( ) ; while ( node . has CaMeL Next ( ) ) {
rank: 799
score: 98.72660319010417
patch: exit CaMeL Node ( c ) ; }
rank: 800
score: 98.86978488498264
patch: traverse ( c , ) ; break ;
rank: 800
score: 98.84180908203125
patch: if ( c . traverse ( ) ) {
rank: 800
score: 98.81862035290948
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL File CaMeL Name ( ) ) ) {
rank: 800
score: 98.72877720424107
patch: traverse ( ! 1 ) ;
rank: 800
score: 98.72662908380681
patch: traverse ( c , c . get CaMeL Type ( ) , c . get CaMeL Id ( ) ) ;
rank: 801
score: 98.95166015625
patch: traverse ( c ) ; c ++ ; }
rank: 801
score: 98.86637369791667
patch: traverse ( c ) ; count ++ ;
rank: 801
score: 98.818515625
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { break ;
rank: 801
score: 98.77683512369792
patch: traverse ( c true , c ) ;
rank: 801
score: 98.72869466145833
patch: if ( c == 0 ) { traverse ( c , c ) ;
rank: 801
score: 98.72662353515625
patch: traverse ( current ( ) ) ;
rank: 801
score: 98.56944056919643
patch: return . next ( ) ;
rank: 802
score: 98.86441379123264
patch: traverse ( c , false , ) ;
rank: 802
score: 98.818046875
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Value CaMeL Type ( ) ;
rank: 802
score: 98.72861153738839
patch: if ( c != null ) return ; traverse ( c ) ;
rank: 802
score: 98.7245456861413
patch: c = c . get CaMeL First CaMeL Child ( ) ; while ( node . has CaMeL Next ( ) )
rank: 802
score: 98.71803283691406
patch: c ; traverse ( c ) ;
rank: 802
score: 98.56636555989583
patch: Node next = next ;
rank: 803
score: 98.95077514648438
patch: traverse ( c , c ) ; c = ; }
rank: 803
score: 98.8455810546875
patch: traverse ( n , ( Node ) c ) ;
rank: 803
score: 98.8179931640625
patch: if ( node . get CaMeL Name ( ) . equals ( c . get CaMeL Class CaMeL Name ( ) ) )
rank: 803
score: 98.72713470458984
patch: traverse ( c ) ; ; ;
rank: 803
score: 98.5615946451823
patch: exit ( node ) ;
rank: 804
score: 98.84503851996527
patch: traverse ( next 1 , node ) ;
rank: 804
score: 98.81791856553819
patch: else { c = c ) ; }
rank: 804
score: 98.77287462022569
patch: traverse ( c false , c ) ;
rank: 804
score: 98.72712053571429
patch: if ( n == 0 ) { traverse ( c ) ; }
rank: 804
score: 98.72346635298295
patch: c = c . get CaMeL Next ( ) ; if ( node . has CaMeL Next ( ) ) {
rank: 804
score: 98.7094497680664
patch: c . get ( c ) ;
rank: 804
score: 98.56037248883929
patch: traverse ( ! node ) ;
rank: 805
score: 98.85768636067708
patch: traverse ( c , type ) ; }
rank: 805
score: 98.81781005859375
patch: else { c = c ; break ; }
rank: 805
score: 98.72627476283482
patch: if ( ! == c ) { traverse ( c ) ; }
rank: 805
score: 98.72280883789062
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL First CaMeL Child ) ;
rank: 805
score: 98.70655059814453
patch: c = count ( c ) ;
rank: 805
score: 98.54837036132812
patch: check ( c ) ;
rank: 806
score: 98.857177734375
patch: traverse ( c , ; false ) ;
rank: 806
score: 98.81770833333333
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c ) ) break ;
rank: 806
score: 98.80492401123047
patch: tree . traverse ( c ) ;
rank: 806
score: 98.7256591796875
patch: if ( c != null ) { c = traverse ( c ) ;
rank: 806
score: 98.7218017578125
patch: traverse ( c , c . get CaMeL Type ( ) , c . get CaMeL Node ( ) ) ;
rank: 806
score: 98.54493204752605
patch: traverse ( Node ) ;
rank: 807
score: 98.94300426136364
patch: traverse ( c , c ) ; c = ;
rank: 807
score: 98.85696072048611
patch: if ( c == null ) continue ;
rank: 807
score: 98.81760475852273
patch: if ( c != null ) { continue ; }
rank: 807
score: 98.80371704101563
patch: if ( c . node != null ) {
rank: 807
score: 98.72548014322916
patch: if ( ! c . size ( ) != 1 ) { return ;
rank: 807
score: 98.72117106119792
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Next ( ) ; ;
rank: 807
score: 98.70494079589844
patch: Preconditions . check ( c ) ;
rank: 807
score: 98.5443827311198
patch: traverse ( target ) ;
rank: 808
score: 98.94192504882812
patch: traverse ( c , c ) ; else {
rank: 808
score: 98.85629611545139
patch: traverse ( c ) ; return true ;
rank: 808
score: 98.72442626953125
patch: if ( c != null ) traverse ( c ) ; return ;
rank: 808
score: 98.72089385986328
patch: traverse ( $STRING$ + c ) ;
rank: 808
score: 98.70292154947917
patch: traverse ( name ) ;
rank: 809
score: 98.83843383789062
patch: if ( n != null ) { for (
rank: 809
score: 98.81743332435344
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) return ; }
rank: 809
score: 98.72020467122395
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( node . has CaMeL Next ( ) ) ;
rank: 809
score: 98.70046997070312
patch: c . visit ( node ) ;
rank: 809
score: 98.53815569196429
patch: traverse ( node ) ; ;
rank: 810
score: 98.94080810546875
patch: traverse ( c , line CaMeL Number ) ;
rank: 810
score: 98.816953125
patch: if ( ! node . get CaMeL Name ( ) . equals ( node . get CaMeL Name ( ) ) ) return ;
rank: 810
score: 98.72276960100446
patch: if ( ! c . contains ( c ) ) { ) {
rank: 810
score: 98.71931966145833
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Instance ( c ) ;
rank: 810
score: 98.70036969866071
patch: c = c . next ;
rank: 810
score: 98.53168596540179
patch: Node next ( c ) ;
rank: 811
score: 98.81663004557292
patch: if ( node . get CaMeL Name ( ) . equals ( node . get CaMeL Id ( ) ) ) continue ;
rank: 811
score: 98.722705078125
patch: if ( c != c ) { traverse ( c , c ) ;
rank: 811
score: 98.7191390991211
patch: traverse ( prefix , c ) ;
rank: 811
score: 98.69874572753906
patch: traverse ( parent , false ) ;
rank: 811
score: 98.52642822265625
patch: visit ( n ) ;
rank: 812
score: 98.84156629774306
patch: traverse ( c , ; c . ;
rank: 812
score: 98.81630859375
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Type CaMeL Name ( ) ) ) return ;
rank: 812
score: 98.72140938895089
patch: if ( ! c . Reference ( ) ) { return ; }
rank: 812
score: 98.71855163574219
patch: traverse ( c ) ; continue ;
rank: 812
score: 98.69837188720703
patch: visit ( c , true ) ;
rank: 812
score: 98.51675415039062
patch: add ( node ) ;
rank: 813
score: 98.84145100911458
patch: if ( ) traverse ( c ) ;
rank: 813
score: 98.82766384548611
patch: c = next next ( c ) ;
rank: 813
score: 98.81619262695312
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { break ; }
rank: 813
score: 98.78744845920139
patch: if ( ( c != null ) )
rank: 813
score: 98.72139195033482
patch: if ( c != null ) { traverse ( n ) ; }
rank: 813
score: 98.71583140980114
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Next ) ;
rank: 814
score: 98.938720703125
patch: traverse ( c , c ) ; count ++ ;
rank: 814
score: 98.84083557128906
patch: traverse ( c , start ) ;
rank: 814
score: 98.82305908203125
patch: traverse ( next $NUMBER$ ) ;
rank: 814
score: 98.81567993164063
patch: traverse ( c ) ; else return ; }
rank: 814
score: 98.72057291666667
patch: if ( ! c . is CaMeL Empty ( ) ) ; ) {
rank: 814
score: 98.7156982421875
patch: traverse ( c , c . get CaMeL Type ( ) , c . get CaMeL Name ( ) ) ;
rank: 814
score: 98.69603729248047
patch: traverse ( c , vars ) ;
rank: 814
score: 98.50687953404018
patch: if ( node . get CaMeL
rank: 815
score: 98.8155078125
patch: throw new Runtime CaMeL Exception ( c . get CaMeL Message ( $STRING$ , c . get CaMeL Message ( ) ) ) ;
rank: 815
score: 98.7489242553711
patch: traverse ( namespace , c ) ;
rank: 815
score: 98.7201156616211
patch: traverse ( c == 1 ) ;
rank: 815
score: 98.71445100203805
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( node . get CaMeL Code ( ) ;
rank: 815
score: 98.69539642333984
patch: traverse ( node , 0 ) ;
rank: 815
score: 98.505615234375
patch: next ( node ) ;
rank: 816
score: 98.83829752604167
patch: traverse ( c ) ; if ( ;
rank: 816
score: 98.81576877170139
patch: traverse ( next $NUMBER$ , node ) ;
rank: 816
score: 98.81467507102273
patch: try { c = c . get ( ) ;
rank: 816
score: 98.78227233886719
patch: traverse ( c ) ; for (
rank: 816
score: 98.72005462646484
patch: if ( c == 0 ) {
rank: 816
score: 98.71433423913044
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = node . get CaMeL Parent ( ) ;
rank: 816
score: 98.68855285644531
patch: traverse ( node + 1 ) ;
rank: 816
score: 98.50270298549107
patch: if ( c instanceof Node )
rank: 817
score: 98.93634588068181
patch: traverse ( c , c ) ; n -- ;
rank: 817
score: 98.83746337890625
patch: traverse ( c , ) ; }
rank: 817
score: 98.8146263860887
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Source CaMeL Name ( ) ) ) {
rank: 817
score: 98.71893310546875
patch: if ( traverse ( c ) ) { return ; } else {
rank: 817
score: 98.71229619565217
patch: c = c . get CaMeL First CaMeL Child ( ) ; for ( ; ) { traverse ( c ) ;
rank: 817
score: 98.48312377929688
patch: traverse ( definition ) ;
rank: 818
score: 98.814453125
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { return ; } }
rank: 818
score: 98.71687534877232
patch: if ( 0 != c ) { traverse ( c ) ; }
rank: 818
score: 98.71182250976562
patch: traverse ( c ) ; c = c . get CaMeL First CaMeL Child ( ) ; } traverse ( c ) ;
rank: 818
score: 98.68649291992188
patch: traverse ( 0 ) ;
rank: 818
score: 98.48055594308036
patch: if ( c != ) {
rank: 819
score: 98.93565538194444
patch: traverse ( c ) ; n -- ;
rank: 819
score: 98.83689371744792
patch: traverse ( node , c ) ; ;
rank: 819
score: 98.81296875
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Id ( ) ) ) ;
rank: 819
score: 98.810791015625
patch: visit ( c , n ) ;
rank: 819
score: 98.71603190104166
patch: if ( traverse ( c ) ) { traverse ( c ) ; }
rank: 819
score: 98.710791015625
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Source CaMeL Node ( ) ;
rank: 819
score: 98.68644714355469
patch: traverse ( key , node ) ;
rank: 819
score: 98.47976684570312
patch: switch ( c ) {
rank: 820
score: 98.83062065972223
patch: traverse ( c , ; continue ; }
rank: 820
score: 98.8127734375
patch: if ( node . get CaMeL Name ( ) . equals ( node . get CaMeL Class CaMeL Name ( ) ) ) {
rank: 820
score: 98.71600341796875
patch: if ( ! != null ) { traverse ( c ) ; }
rank: 820
score: 98.70948791503906
patch: traverse ( c , src ) ;
rank: 820
score: 98.68501281738281
patch: traverse ( node + 0 ) ;
rank: 820
score: 98.47498430524554
patch: return next ( node ) ;
rank: 821
score: 98.82687717013889
patch: / * traverse ( c ) * ;
rank: 821
score: 98.81271158854166
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) return ;
rank: 821
score: 98.71446010044643
patch: if ( ! c . length ( ) != 1 ) { public
rank: 821
score: 98.70894368489583
patch: traverse ( c , c . get CaMeL Type ( ) , c . get CaMeL Line CaMeL Index ( ) ) ;
rank: 822
score: 98.81267700195312
patch: traverse ( c ) ; return ) ; }
rank: 822
score: 98.71425955636161
patch: if ( node != null ) { traverse ( c ) ; }
rank: 822
score: 98.70879657451923
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL First CaMeL Child ( c ) ;
rank: 822
score: 98.68411254882812
patch: visit ( null , c ) ;
rank: 822
score: 98.47349330357143
patch: traverse ( n ) ; }
rank: 823
score: 98.9300870028409
patch: parent = c . get CaMeL Parent ( ) ;
rank: 823
score: 98.81254725302419
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Value CaMeL Type ( ) ) ) ;
rank: 823
score: 98.79645453559027
patch: traverse ( c true , node ) ;
rank: 823
score: 98.77266235351563
patch: return should CaMeL Retraverse ( c ) ;
rank: 823
score: 98.71415492466518
patch: if ( ! traverse ( n ) ) traverse ( c ) ;
rank: 823
score: 98.708544921875
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Root CaMeL Node ( ) ;
rank: 823
score: 98.68282318115234
patch: c = visit ( node ) ;
rank: 823
score: 98.47243826729911
patch: System . next ( ) ;
rank: 824
score: 98.82255045572917
patch: traverse ( c , this ) ; ;
rank: 824
score: 98.77216796875
patch: if ( c . clone ( ) ) {
rank: 824
score: 98.71393694196429
patch: if ( ! != c ) traverse ( c , c ) ;
rank: 825
score: 98.82102457682292
patch: traverse ( c , ; ; break ;
rank: 825
score: 98.81196732954545
patch: if ( ! traverse ( c , c ) )
rank: 825
score: 98.76968994140626
patch: if ( c . next ( ) ) {
rank: 825
score: 98.72612762451172
patch: traverse ( value , c ) ;
rank: 825
score: 98.71326497395833
patch: if ( c != null ) { traverse ( c ) ; / /
rank: 825
score: 98.70763629415761
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = node . get CaMeL Code ( ) ;
rank: 825
score: 98.67915344238281
patch: traverse ( node , name ) ;
rank: 825
score: 98.46715291341145
patch: remove ( c ) ;
rank: 826
score: 98.92603759765625
patch: node = c . traverse ( c ) ;
rank: 826
score: 98.81868489583333
patch: traverse ( node ) ; break ; }
rank: 826
score: 98.7875747680664
patch: traverse ( next == null ) ;
rank: 826
score: 98.76896362304687
patch: if ( c . get CaMeL Next ( )
rank: 826
score: 98.7203140258789
patch: traverse ( vars , c ) ;
rank: 826
score: 98.7131591796875
patch: if ( ! traverse ( c ) ) ; traverse ( c ) ;
rank: 826
score: 98.7074609375
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Value ( ) ; break ;
rank: 826
score: 98.67893763950893
patch: } visit ( c ) ;
rank: 826
score: 98.46659633091518
patch: add ( c ) ; }
rank: 827
score: 98.9254483309659
patch: traverse ( ( Node [ ] ) c ) ;
rank: 827
score: 98.81849670410156
patch: traverse ( c ) ; } ;
rank: 827
score: 98.81150716145834
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL File CaMeL Name ( ) ) )
rank: 827
score: 98.7130615234375
patch: if ( c != null ) { traverse ( c ) ; } ;
rank: 827
score: 98.67790222167969
patch: traverse ( c , count ) ;
rank: 828
score: 98.924609375
patch: traverse ( c , c . get ) ;
rank: 828
score: 98.81741672092014
patch: n = c . get ( ) ;
rank: 828
score: 98.81129150390625
patch: traverse ( c ) ; } break ; }
rank: 828
score: 98.76401774088542
patch: if ( c != null && c .
rank: 828
score: 98.71906280517578
patch: traverse ( list , node ) ;
rank: 828
score: 98.71241106305804
patch: if ( ! traverse ( c ) ) { return ; else {
rank: 828
score: 98.45875040690105
patch: traverse ( current ) ;
rank: 829
score: 98.81093277469758
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Component CaMeL Type ( ) ) ) ;
rank: 829
score: 98.78410508897569
patch: next ( next ( c ) ) ;
rank: 829
score: 98.71212005615234
patch: if ( c == null ) ;
rank: 829
score: 98.7064208984375
patch: c = c . get CaMeL First CaMeL Child ( ) ; while ( c . has CaMeL Next ( ) ) ;
rank: 829
score: 98.67766571044922
patch: traverse ( count < $NUMBER$ ) ;
rank: 829
score: 98.45272391183036
patch: return . size ( ) ;
rank: 830
score: 98.81458197699652
patch: traverse ( c , true , ) ;
rank: 830
score: 98.81066500756049
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Name ( ) ) ) traverse ( c ) ;
rank: 830
score: 98.76163736979167
patch: for ( ; c != null ) {
rank: 830
score: 98.7176284790039
patch: traverse ( children , node ) ;
rank: 830
score: 98.70516204833984
patch: traverse ( n , true ) ;
rank: 830
score: 98.45152064732143
patch: exit ( c ) ; }
rank: 831
score: 98.92153930664062
patch: c = ( Node ) c ;
rank: 831
score: 98.81340789794922
patch: traverse ( c , new ) ;
rank: 831
score: 98.8105705015121
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Property CaMeL Type ( ) ) ) }
rank: 831
score: 98.77814398871527
patch: traverse ( next null , c ) ;
rank: 831
score: 98.75859375
patch: if ( c . get CaMeL Node ( )
rank: 831
score: 98.71146647135417
patch: if ( c != null ) { traverse ( c , true ) ;
rank: 831
score: 98.70496715198864
patch: traverse ( c , c . get CaMeL Type ( ) , c . get CaMeL Class ( ) ) ;
rank: 831
score: 98.67667388916016
patch: traverse ( [ $NUMBER$ ] ) ;
rank: 831
score: 98.45091029575893
patch: if ( ! null ) {
rank: 832
score: 98.92017711292614
patch: state = c . get CaMeL State ( ) ;
rank: 832
score: 98.80919731987848
patch: traverse ( c ) ; } * /
rank: 832
score: 98.77745819091797
patch: traverse ( next instanceof Node ) ;
rank: 832
score: 98.75792694091797
patch: for ( ; c != null )
rank: 832
score: 98.711328125
patch: if ( c != null ) { c = c ; } else {
rank: 832
score: 98.4493916829427
patch: traverse ( exp ) ;
rank: 833
score: 98.81097412109375
patch: traverse ( c , current ) ; }
rank: 833
score: 98.8089453125
patch: if ( node . get CaMeL Id ( ) == c . get CaMeL Type ( ) . get CaMeL Name ( ) )
rank: 833
score: 98.77469211154514
patch: traverse ( c false , node ) ;
rank: 833
score: 98.7578125
patch: if ( c . get CaMeL Parent ( )
rank: 833
score: 98.71111653645833
patch: traverse ( c . get CaMeL Parent ( ) ) ; ; else {
rank: 833
score: 98.7041546365489
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Declaration ( ) ;
rank: 833
score: 98.67292785644531
patch: next ( c , c ) ;
rank: 833
score: 98.44498697916667
patch: traverse ( list ) ;
rank: 834
score: 98.91908957741477
patch: traverse ( c ) ; n = c . ;
rank: 834
score: 98.8087109375
patch: if ( c . get CaMeL Id ( ) == c . get CaMeL Type ( ) . get CaMeL Name ( ) )
rank: 834
score: 98.70383522727273
patch: c = c . get CaMeL Next ( ) ; if ( c . has CaMeL Next ( ) ) {
rank: 834
score: 98.6718978881836
patch: traverse ( [ false ] ) ;
rank: 834
score: 98.44483439127605
patch: return - 1 ; }
rank: 835
score: 98.80744140625
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Message ( ) ) ; }
rank: 835
score: 98.75383165147569
patch: traverse ( c , node . get CaMeL
rank: 835
score: 98.70337975543478
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Out ( ) ;
rank: 835
score: 98.43296305338542
patch: traverse ( children ) ;
rank: 836
score: 98.80937957763672
patch: traverse ( c , ) ; ;
rank: 836
score: 98.80699055989584
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Id ( ) ) ) return ;
rank: 836
score: 98.71034342447916
patch: if ( ! c . iterator ( ) . iterator ( ) . protected
rank: 836
score: 98.70907592773438
patch: return { traverse ( c ) ;
rank: 836
score: 98.703359375
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Next ( ) ; break ;
rank: 836
score: 98.41908772786458
patch: traverse ( source ) ;
rank: 837
score: 98.91729181463069
patch: c = ( Node ) traverse ( c ) ;
rank: 837
score: 98.80692545572917
patch: if ( ! node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Class CaMeL Name ( ) ) ) ;
rank: 837
score: 98.80645073784723
patch: traverse ( c , ( Node ) ;
rank: 837
score: 98.70975167410714
patch: if ( c != != 0 ) { traverse ( c ) ;
rank: 837
score: 98.70906066894531
patch: traverse ( source , c ) ;
rank: 837
score: 98.70303344726562
patch: traverse ( src , c ) ;
rank: 837
score: 98.6705551147461
patch: visit ( c , this ) ;
rank: 837
score: 98.41560872395833
patch: traverse ( break ) ;
rank: 838
score: 98.9165283203125
patch: traverse ( c ) ; c = c )
rank: 838
score: 98.806259765625
patch: if ( node . get CaMeL Id ( ) == c . get CaMeL Type ( ) . get CaMeL Id ( ) )
rank: 838
score: 98.75126647949219
patch: traverse ( next , c ) ;
rank: 838
score: 98.70947265625
patch: if ( ! c . ( c ) ) { return ; }
rank: 838
score: 98.7023395040761
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = node . get CaMeL Instance ( ) ;
rank: 838
score: 98.41464233398438
patch: if ( false ) {
rank: 839
score: 98.805703125
patch: throw new Runtime CaMeL Exception ( $STRING$ + c . get CaMeL Class ( ) . get CaMeL Id ( ) , ) ;
rank: 839
score: 98.70945638020834
patch: if ( c != null ) { traverse ( c , type ) ;
rank: 839
score: 98.70205688476562
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Value ( ) ; }
rank: 839
score: 98.66838836669922
patch: traverse ( input , c ) ;
rank: 839
score: 98.39785766601562
patch: synchronized ( this ) {
rank: 840
score: 98.805166015625
patch: if ( c . get CaMeL Id ( ) == c . get CaMeL Type ( ) . get CaMeL Id ( ) )
rank: 840
score: 98.74917602539062
patch: traverse ( n , next ) ;
rank: 840
score: 98.74740939670139
patch: if ( c . traverse ( ) )
rank: 840
score: 98.70182999320652
patch: c = c . get CaMeL Value ( ) ; c = c . get CaMeL Instance CaMeL Type ( ) ;
rank: 840
score: 98.69837188720703
patch: traverse ( group , c ) ;
rank: 840
score: 98.393310546875
patch: return - 1 ;
rank: 841
score: 98.91553344726563
patch: traverse ( c , c , value ) ;
rank: 841
score: 98.804423828125
patch: if ( node . get CaMeL Name ( ) . equals ( c . get CaMeL Type CaMeL Name ( ) ) ) {
rank: 841
score: 98.79914686414931
patch: traverse ( c , ; } return ;
rank: 841
score: 98.74703979492188
patch: traverse ( next == node ) ;
rank: 841
score: 98.70896809895834
patch: if ( ! c . contains ( c ) ) c = c ;
rank: 841
score: 98.70149369673295
patch: traverse ( c , c . get CaMeL Parent ( ) , c . get CaMeL Node ( ) ) ;
rank: 841
score: 98.66548156738281
patch: c = index ( c ) ;
rank: 841
score: 98.3899434407552
patch: if ( true ) {
rank: 842
score: 98.8042879971591
patch: if ( c == null ) return ; break ;
rank: 842
score: 98.79830593532986
patch: traverse ( c , ; } * /
rank: 842
score: 98.70880998883929
patch: if ( ! c . equals ( ) ) { return ; }
rank: 842
score: 98.3843994140625
patch: visit ( parent ) ;
rank: 843
score: 98.8039883700284
patch: if ( ! c ) traverse ( c ) ;
rank: 843
score: 98.70865304129464
patch: if ( ! c . length ( ) == 1 ) { ;
rank: 843
score: 98.70132211538461
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = node . get CaMeL First CaMeL Child ( ) ; }
rank: 843
score: 98.66154479980469
patch: traverse ( false , false ) ;
rank: 843
score: 98.38210042317708
patch: traverse ( module ) ;
rank: 844
score: 98.802744140625
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { break ; } }
rank: 844
score: 98.79466417100694
patch: while ( traverse ( c ) ) ;
rank: 844
score: 98.70816243489584
patch: if ( ! ( c != null ) ) traverse ( c ) ;
rank: 844
score: 98.701181640625
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( c . has CaMeL Next ( ) ) return ;
rank: 844
score: 98.37674967447917
patch: check ( node ) ;
rank: 845
score: 98.80135769314236
patch: traverse ( c ) ; return ) ;
rank: 845
score: 98.70768519810268
patch: if ( ! c . contains ( c ) ) { continue ;
rank: 845
score: 98.70113431490384
patch: c = c . get CaMeL First CaMeL Child ( ) ; c ( c . get CaMeL First CaMeL Child ( ) ) ;
rank: 845
score: 98.68842315673828
patch: traverse ( scope , node ) ;
rank: 845
score: 98.65846470424107
patch: c = c != null )
rank: 845
score: 98.36302693684895
patch: try {
rank: 846
score: 98.79289245605469
patch: c = c . get ; }
rank: 846
score: 98.72918023003473
patch: Node n = next ( c ) ;
rank: 846
score: 98.707275390625
patch: if ( n != null ) traverse ( c , c ) ;
rank: 846
score: 98.70029084578805
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Style ( ) ;
rank: 846
score: 98.68099212646484
patch: return next ( c ) ; }
rank: 846
score: 98.36288452148438
patch: traverse ( vars ) ;
rank: 847
score: 98.79915889616936
patch: if ( ! node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Class CaMeL Name ( ) ) ) return ;
rank: 847
score: 98.79218207465277
patch: traverse ( c ) ; return false ;
rank: 847
score: 98.69861328125
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = node . get CaMeL Current CaMeL Node ( ) ;
rank: 847
score: 98.65713500976562
patch: traverse ( $STRING$ , node ) ;
rank: 847
score: 98.3532206217448
patch: initialize ( c ) ;
rank: 848
score: 98.911181640625
patch: traverse ( c , c , children ) ;
rank: 848
score: 98.7989013671875
patch: if ( ! c . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Value CaMeL Type ( ) ) ) {
rank: 848
score: 98.78820122612848
patch: traverse ( c ) ; ; break ;
rank: 848
score: 98.70688302176339
patch: try { traverse ( c ) ; traverse ( c ) ; }
rank: 848
score: 98.69851248604911
patch: traverse ( c + c ;
rank: 848
score: 98.67418670654297
patch: traverse ( count , c ) ;
rank: 848
score: 98.65645599365234
patch: visit ( this , c ) ;
rank: 848
score: 98.3511962890625
patch: match ( c ) ;
rank: 849
score: 98.90950317382813
patch: traverse ( c , traverse , c ) ;
rank: 849
score: 98.79827473958333
patch: if ( c . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Class CaMeL Name ( ) ) ) continue ;
rank: 849
score: 98.70647321428571
patch: if ( n == null ) { traverse ( c ) ; }
rank: 849
score: 98.69742484714673
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Name ( ) ;
rank: 849
score: 98.65549723307292
patch: traverse ( id ) ;
rank: 849
score: 98.34183756510417
patch: process ( c ) ;
rank: 850
score: 98.7980069247159
patch: else { traverse ( c ) ; return ; }
rank: 850
score: 98.70618547712054
patch: if ( c != null ) { traverse ( ! c ) ;
rank: 850
score: 98.65479278564453
patch: visit ( c , 0 ) ;
rank: 851
score: 98.79789595170455
patch: traverse ( c ) ; } c = c ;
rank: 851
score: 98.71630859375
patch: if ( c != node )
rank: 851
score: 98.70595703125
patch: if ( ! c . is CaMeL Empty ( ) ) { ) ;
rank: 851
score: 98.69601440429688
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Property ( $STRING$ ) ;
rank: 851
score: 98.65469360351562
patch: traverse ( this . c ) ;
rank: 851
score: 98.34140014648438
patch: traverse ( visits ) ;
rank: 852
score: 98.904541015625
patch: traverse ( ( Node ) ( c ) ) ;
rank: 852
score: 98.79734753024194
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Class CaMeL Loader ( ) ) ) {
rank: 852
score: 98.70556640625
patch: if ( ! c . equals ( n ) ) { return ; }
rank: 852
score: 98.69573974609375
patch: traverse ( c , exp ) ;
rank: 852
score: 98.33889770507812
patch: return ; }
rank: 853
score: 98.90174560546875
patch: traverse ( c , c . traverse ( ;
rank: 853
score: 98.79678548177084
patch: if ( node . get CaMeL Property CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Method CaMeL Name ( ) ) )
rank: 853
score: 98.78110177176339
patch: c = c . ; }
rank: 853
score: 98.70700412326389
patch: if ( c . next ( ) )
rank: 853
score: 98.70524379185268
patch: if ( c != null ) traverse ( c ) ; else {
rank: 853
score: 98.33663940429688
patch: synchronized ( c ) {
rank: 854
score: 98.90098987926136
patch: traverse ( traverse ( c , n ) ) ;
rank: 854
score: 98.70502471923828
patch: if ( c == ) { public
rank: 854
score: 98.70083279079861
patch: if ( c . node != null )
rank: 854
score: 98.69412364130434
patch: c = c . get CaMeL First CaMeL Child ( ) ; traverse ( get CaMeL Node ( c ) ) ;
rank: 854
score: 98.64640299479167
patch: traverse ( 1 ) ;
rank: 854
score: 98.32982788085937
patch: try { try {
rank: 855
score: 98.79341888427734
patch: else traverse ( c ) ; }
rank: 855
score: 98.70490373883929
patch: if ( ! c . contains ( c ) ) ; return ;
rank: 855
score: 98.69983588324652
patch: try { if ( c != null )
rank: 855
score: 98.64574432373047
patch: c . push ( c ) ;
rank: 855
score: 98.31524658203125
patch: traverse ( function ) ;
rank: 856
score: 98.89943625710227
patch: traverse ( c , c ) ; count -- ;
rank: 856
score: 98.79327947443181
patch: if ( c != null ) { for ( )
rank: 856
score: 98.77432250976562
patch: traverse ( c , max ) ;
rank: 856
score: 98.70465959821429
patch: if ( ! c . equals ( c ) ) { ) {
rank: 856
score: 98.6453857421875
patch: c . create ( c ) ;
rank: 856
score: 98.30723063151042
patch: synchronized ( parent ) {
rank: 857
score: 98.89718017578124
patch: traverse = c . traverse ( c ) ;
rank: 857
score: 98.70445149739584
patch: if ( ! c . size ( ) == 0 ) { return ;
rank: 857
score: 98.69876437717014
patch: traverse ( c ) . visits ++ ;
rank: 858
score: 98.89679633246527
patch: traverse ( c ) ; count -- ;
rank: 858
score: 98.79151500355114
patch: if ( c == null ) { ; * /
rank: 858
score: 98.76766531808036
patch: c = c . get ;
rank: 858
score: 98.7030517578125
patch: if ( ! c . is CaMeL Empty ( ) ) { throw CaMeL
rank: 858
score: 98.69032796223958
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Value ( ) ; ;
rank: 858
score: 98.66495513916016
patch: traverse ( column , c ) ;
rank: 858
score: 98.63174874441964
patch: c = c instanceof Node ;
rank: 858
score: 98.29290771484375
patch: if ( c ) {
rank: 859
score: 98.79133852066532
patch: if ( node . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( c . get CaMeL Id ( ) ) ) traverse ( c ) ;
rank: 859
score: 98.70277506510416
patch: if ( ! c . length ( ) == 0 ) { return ;
rank: 859
score: 98.694091796875
patch: traverse ( c ) ; c ;
rank: 859
score: 98.68848673502605
patch: traverse ( c ) ; c = c . get CaMeL First CaMeL Child ( ) ; else traverse ( c ) ;
rank: 859
score: 98.2916259765625
patch: remove ( node ) ;
rank: 860
score: 98.70177350725446
patch: if ( ! c != null ) { traverse ( c ) ;
rank: 860
score: 98.69078063964844
patch: Object c = c . get CaMeL
rank: 860
score: 98.66111755371094
patch: traverse ( node ) ; return ;
rank: 860
score: 98.28988647460938
patch: visits ++ ;
rank: 861
score: 98.78474934895833
patch: finally { traverse ( c ) ; }
rank: 861
score: 98.76127624511719
patch: traverse ( c , ; ; }
rank: 861
score: 98.70143345424107
patch: if ( ! != 1 ) { traverse ( c ) ; }
rank: 861
score: 98.68705240885417
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( $STRING$ . has CaMeL Next ( ) ) {
rank: 861
score: 98.28975423177083
patch: traverse ( scope ) ;
rank: 862
score: 98.70259857177734
patch: traverse ( n , visits ) ;
rank: 862
score: 98.70125906808036
patch: if ( ! c . size ( ) == 1 ) { public
rank: 862
score: 98.68606567382812
patch: traverse ( ( Node ) node ;
rank: 862
score: 98.67235456194196
patch: traverse ( c . ) ;
rank: 862
score: 98.28763834635417
patch: if ( node ) {
rank: 863
score: 98.78024631076389
patch: return * * traverse ( c ) ;
rank: 863
score: 98.75081961495536
patch: traverse ( c c ) ;
rank: 863
score: 98.68548828125
patch: c = c . get CaMeL First CaMeL Child ( ) ; c . if ( c . get CaMeL Type ( ) ;
rank: 863
score: 98.66350446428571
patch: { traverse ( c ) ;
rank: 863
score: 98.2836405436198
patch: traverse ( stream ) ;
rank: 864
score: 98.8888427734375
patch: traverse ( c , list , c ) ;
rank: 864
score: 98.69969940185547
patch: traverse ( c == $NUMBER$ ) ;
rank: 864
score: 98.68489583333333
patch: c = c . get CaMeL First CaMeL Child ( ) ; c ( c . get CaMeL Value ( ) ) ;
rank: 864
score: 98.65821329752605
patch: search ( c ) ;
rank: 864
score: 98.65814971923828
patch: traverse ( c , namespace ) ;
rank: 864
score: 98.27921549479167
patch: Next ( c ) ;
rank: 865
score: 98.88726196289062
patch: traverse ( c , n , n ) ;
rank: 865
score: 98.77201843261719
patch: return * traverse ( c ) ;
rank: 865
score: 98.74825286865234
patch: traverse ( c , ; } ;
rank: 865
score: 98.69505092075893
patch: traverse ( c true ) ;
rank: 865
score: 98.61618477957589
patch: traverse ( c . get CaMeL
rank: 865
score: 98.60784912109375
patch: traverse ( c false ) ;
rank: 865
score: 98.27376302083333
patch: change ( c ) ;
rank: 866
score: 98.68787384033203
patch: traverse ( n , $STRING$ ) ;
rank: 866
score: 98.68322265625
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Function CaMeL Type ( ) ;
rank: 866
score: 98.615966796875
patch: traverse ( c ) ; else
rank: 866
score: 98.27189127604167
patch: visit ( this ) ;
rank: 867
score: 98.88617498224431
patch: traverse ( c , n ) ; break ; }
rank: 867
score: 98.74021911621094
patch: traverse ( c , ; c ;
rank: 867
score: 98.682294921875
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Declaration CaMeL Node ( ) ;
rank: 867
score: 98.60694231305804
patch: if ( n != null )
rank: 867
score: 98.58756801060268
patch: node . next ( ) ;
rank: 867
score: 98.2698262532552
patch: traverse ( site ) ;
rank: 868
score: 98.88507080078125
patch: traverse ( c , input , c ) ;
rank: 868
score: 98.73987579345703
patch: traverse ( c , mode ) ;
rank: 868
score: 98.68557739257812
patch: traverse ( c != $NUMBER$ ) ;
rank: 868
score: 98.68162109375
patch: c = c . get CaMeL First CaMeL Child ( ) ; c . traverse ( c ) ; traverse ( c ) ;
rank: 868
score: 98.26522827148438
patch: traverse ( report ) ;
rank: 869
score: 98.68159484863281
patch: printer . traverse ( c ) ;
rank: 869
score: 98.59693254743304
patch: while ( c == null )
rank: 869
score: 98.57033865792411
patch: c . clone ( ) ;
rank: 869
score: 98.26353963216145
patch: visits ( c ) ;
rank: 870
score: 98.73356628417969
patch: traverse ( c , false , ;
rank: 870
score: 98.5626729329427
patch: traverse ( value ) ;
rank: 870
score: 98.2630106608073
patch: synchronized ( null ) {
rank: 871
score: 98.88052029079861
patch: traverse ( n , c ) ; }
rank: 871
score: 98.73307037353516
patch: traverse ( c , ; return ;
rank: 871
score: 98.6808369954427
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Node ( c ) ;
rank: 871
score: 98.66517857142857
patch: if ( c == ) {
rank: 871
score: 98.57840401785714
patch: if ( c == node )
rank: 871
score: 98.56170654296875
patch: visit ( false ) ;
rank: 871
score: 98.26080322265625
patch: for ( try {
rank: 872
score: 98.72530364990234
patch: traverse ( c , init ) ;
rank: 872
score: 98.68080078125
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Full CaMeL Name ( ) ;
rank: 872
score: 98.64637756347656
patch: traverse ( site , c ) ;
rank: 872
score: 98.25631713867188
patch: if ( next ) {
rank: 873
score: 98.75436062282986
patch: return traverse ( node , c ) ;
rank: 873
score: 98.68074035644531
patch: traverse ( false , true ) ;
rank: 873
score: 98.66050211588542
patch: start ( c ) ;
rank: 873
score: 98.54323904854911
patch: traverse ( c ) ; try
rank: 874
score: 98.87065294053819
patch: traverse ( c , c . ) ;
rank: 874
score: 98.72178649902344
patch: traverse ( c , node , ;
rank: 874
score: 98.67995198567708
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = node . get CaMeL Next ( ) ; }
rank: 874
score: 98.65809849330357
patch: traverse ( c ? c ;
rank: 874
score: 98.54644775390625
patch: traverse ( key ) ;
rank: 874
score: 98.53849283854167
patch: consume ( c ) ;
rank: 874
score: 98.24993896484375
patch: Node next = c ;
rank: 875
score: 98.71946207682292
patch: c = c . ;
rank: 875
score: 98.67886788504464
patch: try { traverse ( c ;
rank: 875
score: 98.64774780273437
patch: c = c ;
rank: 875
score: 98.53424072265625
patch: reset ( c ) ;
rank: 875
score: 98.24925537109375
patch: try { for (
rank: 876
score: 98.75172254774306
patch: else { traverse ( node ) ; }
rank: 876
score: 98.63528878348214
patch: traverse ( c ) ; c
rank: 876
score: 98.53009905133929
patch: iter . next ( ) ;
rank: 876
score: 98.52557373046875
patch: traverse ( false ) ; }
rank: 876
score: 98.24903361002605
patch: load ( c ) ;
rank: 877
score: 98.85637749565973
patch: traverse ( ( Node ) n ) ;
rank: 877
score: 98.675703125
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = node . get CaMeL First CaMeL Line ( ) ;
rank: 877
score: 98.66358947753906
patch: do { visit ( c ) ;
rank: 877
score: 98.63035074869792
patch: traverse ( ! c ;
rank: 877
score: 98.52402169363839
patch: next ( c ) ; }
rank: 877
score: 98.24734497070312
patch: add ( n ) ;
rank: 878
score: 98.71598052978516
patch: traverse ( c , - ) ;
rank: 878
score: 98.67493438720703
patch: traverse ( parent , true ) ;
rank: 878
score: 98.62294514973958
patch: push ( c ) ;
rank: 878
score: 98.52367292131696
patch: } visit ( node ) ;
rank: 878
score: 98.51670328776042
patch: init ( c ) ;
rank: 879
score: 98.71133422851562
patch: traverse ( ( Node ) ) ;
rank: 879
score: 98.67482503255208
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Parent ( ) ; }
rank: 879
score: 98.64159393310547
patch: traverse ( c , source ) ;
rank: 879
score: 98.61821637834821
patch: traverse ( c $NUMBER$ ) ;
rank: 879
score: 98.52286202566964
patch: c . close ( ) ;
rank: 880
score: 98.672529296875
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( node . has CaMeL Next ( ) ) return ;
rank: 880
score: 98.64059448242188
patch: traverse ( property , c ) ;
rank: 880
score: 98.2431131998698
patch: Node c = null ;
rank: 881
score: 98.64022064208984
patch: traverse ( new Node c ) ;
rank: 881
score: 98.49521891276042
patch: Object c = c ;
rank: 881
score: 98.24305216471355
patch: show ( c ) ;
rank: 882
score: 98.82466634114583
patch: traverse ( c ) ; -- c ;
rank: 882
score: 98.73810492621527
patch: else traverse ( c ) ; return ;
rank: 882
score: 98.61562093098958
patch: if ( ! c ;
rank: 882
score: 98.51102992466518
patch: visit ( node ) ; }
rank: 882
score: 98.24115600585938
patch: traverse ( ) ;
rank: 883
score: 98.671064453125
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Instance ( c ) ; }
rank: 883
score: 98.61099679129464
patch: traverse ( ! n ) ;
rank: 883
score: 98.22886149088542
patch: Node c = false ;
rank: 884
score: 98.73582628038194
patch: if ( c == null ) { }
rank: 884
score: 98.65079498291016
patch: traverse ( next , node ) ;
rank: 884
score: 98.50891985212054
patch: traverse ( c , node ;
rank: 884
score: 98.45325724283855
patch: cleanup ( c ) ;
rank: 884
score: 98.22869873046875
patch: if ( ) {
rank: 885
score: 98.81588406032986
patch: c = c . traverse ( ) ;
rank: 885
score: 98.63687133789062
patch: traverse ( visits , c ) ;
rank: 885
score: 98.60274832589286
patch: for ( ; ; ) {
rank: 885
score: 98.50705392020089
patch: traverse ( - 1 ) ;
rank: 885
score: 98.2173828125
patch: if ( c instanceof
rank: 886
score: 98.81512451171875
patch: traverse ( ( ) c ) ; }
rank: 886
score: 98.69943237304688
patch: traverse ( c , ; * /
rank: 886
score: 98.6680078125
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Int CaMeL Value ( ) ;
rank: 886
score: 98.42825317382812
patch: redo ( c ) ;
rank: 886
score: 98.20383707682292
patch: if ( ! ) {
rank: 887
score: 98.72865125868056
patch: traverse ( c ) ; } ) ;
rank: 887
score: 98.58351353236607
patch: traverse ( n == ) ;
rank: 887
score: 98.5015380859375
patch: exit ( ) ;
rank: 887
score: 98.42406209309895
patch: Node c = c ;
rank: 887
score: 98.2032470703125
patch: Node next = node ;
rank: 888
score: 98.81141662597656
patch: traverse ( c , in ) ;
rank: 888
score: 98.68983459472656
patch: if ( traverse ( c ) ;
rank: 888
score: 98.664794921875
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Value ( ) ; continue ;
rank: 888
score: 98.63351440429688
patch: visit ( c , next ) ;
rank: 888
score: 98.50111607142857
patch: traverse ( c , $STRING$ ,
rank: 889
score: 98.68730926513672
patch: n = traverse ( c ) ;
rank: 889
score: 98.664326171875
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Function CaMeL Id ( ) ;
rank: 889
score: 98.63209533691406
patch: traverse ( options , c ) ;
rank: 889
score: 98.5716044108073
patch: traverse ( c ) throws
rank: 889
score: 98.498046875
patch: c . exit ( ) ;
rank: 889
score: 98.42338053385417
patch: resolve ( c ) ;
rank: 889
score: 98.195556640625
patch: if ( c != null
rank: 890
score: 98.80647786458333
patch: traverse ( c ) ; c = )
rank: 890
score: 98.7174072265625
patch: try { c = c ) ;
rank: 890
score: 98.66408203125
patch: c = c . get CaMeL First CaMeL Child ( ) ; c ( c . get CaMeL Type ( ) ) ; }
rank: 890
score: 98.5690409342448
patch: traverse ( $NUMBER$ ) ;
rank: 890
score: 98.4966328938802
patch: visit ( null ) ;
rank: 890
score: 98.42313639322917
patch: execute ( c ) ;
rank: 890
score: 98.1943868001302
patch: synchronized ( false ) {
rank: 891
score: 98.68273162841797
patch: c = c ; break ; }
rank: 891
score: 98.663515625
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Input CaMeL Id ( ) ;
rank: 891
score: 98.64407348632812
patch: traverse ( next == n ) ;
rank: 891
score: 98.56104387555804
patch: traverse ( ! $NUMBER$ ) ;
rank: 891
score: 98.1861083984375
patch: c = null ;
rank: 892
score: 98.71321868896484
patch: callback . traverse ( c ) ;
rank: 892
score: 98.68085479736328
patch: n = c . get ; }
rank: 892
score: 98.66240692138672
patch: traverse ( n , false ) ;
rank: 892
score: 98.56101481119792
patch: clear ( c ) ;
rank: 892
score: 98.49562377929688
patch: c = next ;
rank: 892
score: 98.4080810546875
patch: forward ( c ) ;
rank: 892
score: 98.18605550130208
patch: Node c = next ;
rank: 893
score: 98.80204264322917
patch: traverse ( c ) ( c ) ;
rank: 893
score: 98.66200256347656
patch: c = end ( c ) ;
rank: 893
score: 98.54916817801339
patch: final traverse ( c ) ;
rank: 893
score: 98.49210030691964
patch: c = c . node ;
rank: 893
score: 98.18589274088542
patch: Node c = true ;
rank: 894
score: 98.67384338378906
patch: traverse . traverse ( c ) ;
rank: 894
score: 98.661962890625
patch: c = c . get CaMeL First CaMeL Child ( ) ; if ( c . has CaMeL Next ( ) ) continue ;
rank: 894
score: 98.54218401227679
patch: traverse traverse ( c ) ;
rank: 894
score: 98.49074881417411
patch: traverse ( , c ) ;
rank: 894
score: 98.39718627929688
patch: interrupt ( c ) ;
rank: 894
score: 98.18555704752605
patch: Node next = false ;
rank: 895
score: 98.67134857177734
patch: sb . traverse ( c ) ;
rank: 895
score: 98.66169921875
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Line CaMeL Index ( ) ;
rank: 895
score: 98.54017857142857
patch: return ; c = c ;
rank: 895
score: 98.15587768554687
patch: c = false ;
rank: 896
score: 98.66990661621094
patch: traverse ( c , true , ;
rank: 896
score: 98.66001383463542
patch: traverse ( out ) ;
rank: 896
score: 98.53758021763393
patch: if ( ! = c ;
rank: 896
score: 98.48538643973214
patch: traverse ( parent ) ; }
rank: 897
score: 98.66681671142578
patch: traverse ( c , size ) ;
rank: 897
score: 98.660009765625
patch: c = c . get CaMeL First CaMeL Child ( ) ; c = c . get CaMeL Base CaMeL Name ( ) ;
rank: 897
score: 98.52888706752232
patch: try { traverse = c ;
rank: 897
score: 98.47927420479911
patch: node = next ( ) ;
rank: 897
score: 98.3861796061198
patch: link ( c ) ;
rank: 898
score: 98.6934814453125
patch: Disposer . traverse ( c ) ;
rank: 898
score: 98.66661834716797
patch: traverse ( node , ; ) ;
rank: 898
score: 98.65300641741071
patch: traverse ( new c ) ;
rank: 898
score: 98.52137102399554
patch: if traverse ( c ) ;
rank: 898
score: 98.3834228515625
patch: read ( c ) ;
rank: 898
score: 98.1218017578125
patch: return : c ;
rank: 899
score: 98.6642074584961
patch: traverse CaMeL Edge ( c ) ;
rank: 899
score: 98.64701625279018
patch: c traverse ( c ) ;
rank: 899
score: 98.47598702566964
patch: c = next = next ;
rank: 899
score: 98.37964884440105
patch: preview ( c ) ;
rank: 899
score: 98.1189453125
patch: c = true ;
rank: 900
score: 98.69241333007812
patch: traverse ( in , c ) ;
rank: 900
score: 98.66242218017578
patch: traverse ( c , group ) ;
rank: 900
score: 98.62580871582031
patch: do { traverse ( node ) ;
rank: 900
score: 98.51114908854167
patch: pop ( c ) ;
rank: 900
score: 98.4732666015625
patch: visit ( [ ] ) ;
rank: 900
score: 98.37504069010417
patch: layout ( c ) ;
rank: 900
score: 98.1138916015625
patch: return . c ;
rank: 901
score: 98.79320610894098
patch: traverse ( c , c } ) ;
rank: 901
score: 98.11337280273438
patch: break ; }
rank: 902
score: 98.79095458984375
patch: traverse ( c ) ; c ) ;
rank: 902
score: 98.65834263392857
patch: n = c . ; }
rank: 902
score: 98.47927856445312
patch: close ( c ) ;
rank: 902
score: 98.3604736328125
patch: found ( c ) ;
rank: 902
score: 98.11156616210937
patch: return break ; }
rank: 903
score: 98.61316789899554
patch: traverse ( node , c ;
rank: 903
score: 98.102783203125
patch: return c ; }
rank: 904
score: 98.65799713134766
patch: traverse ( c , ( ) ;
rank: 904
score: 98.4716084798177
patch: release ( c ) ;
rank: 904
score: 98.3510233561198
patch: create ( c ) ;
rank: 904
score: 98.0911356608073
patch: for (
rank: 905
score: 98.67364501953125
patch: for ( ) break ; }
rank: 905
score: 98.60918317522321
patch: try { traverse ( ) ;
rank: 905
score: 98.46939086914062
patch: report ( c ) ;
rank: 905
score: 98.35069783528645
patch: invalidate ( c ) ;
rank: 905
score: 98.08038330078125
patch: next = next ;
rank: 906
score: 98.78091430664062
patch: traverse ( c . parent ) ;
rank: 906
score: 98.65186309814453
patch: traverse ( c , create ) ;
rank: 906
score: 98.46289934430804
patch: c = c . parent ;
rank: 906
score: 98.06683349609375
patch: break ;
rank: 907
score: 98.67058563232422
patch: break traverse ( c ) ; }
rank: 907
score: 98.6516342163086
patch: if ( c == ) return ;
rank: 907
score: 98.46143595377605
patch: traverse ( c , }
rank: 907
score: 98.42631022135417
patch: invoke ( c ) ;
rank: 907
score: 98.3450419108073
patch: flush ( c ) ;
rank: 907
score: 98.064013671875
patch: try { break ;
rank: 908
score: 98.65058135986328
patch: parser . traverse ( c ) ;
rank: 908
score: 98.58513532366071
patch: int end ( c ) ;
rank: 908
score: 98.54646519252232
patch: traverse ( c , next ;
rank: 908
score: 98.42343139648438
patch: notify ( c ) ;
rank: 908
score: 98.01126098632812
patch: return c ;
rank: 909
score: 98.63426862444196
patch: n = c . get ;
rank: 909
score: 97.9860595703125
patch: return . next ;
rank: 910
score: 98.773193359375
patch: traverse ( c , c ) ; else
rank: 910
score: 98.61630684988839
patch: traverse ( c ) ; )
rank: 910
score: 98.4377950032552
patch: exit ( false ) ;
rank: 910
score: 98.33798217773438
patch: resume ( c ) ;
rank: 910
score: 97.96535034179688
patch: try { do {
rank: 911
score: 98.54544503348214
patch: boolean traverse ( c ) ;
rank: 911
score: 98.39719645182292
patch: traverse ( ! ) ;
rank: 911
score: 98.33768717447917
patch: body ( c ) ;
rank: 911
score: 97.9641845703125
patch: return - $NUMBER$ ;
rank: 912
score: 98.66593933105469
patch: } else traverse ( c ) ;
rank: 912
score: 98.53459821428571
patch: boolean end ( c ) ;
rank: 912
score: 98.45064290364583
patch: Node next = null ;
rank: 912
score: 98.39574178059895
patch: end ( c ) ;
rank: 912
score: 97.950341796875
patch: break ; break ;
rank: 913
score: 98.33707682291667
patch: this . visits ++ ;
rank: 913
score: 97.94643147786458
patch: return ;
rank: 914
score: 98.52131870814732
patch: traverse ( c || c ;
rank: 914
score: 98.42411295572917
patch: visit ( true ) ;
rank: 914
score: 97.94417724609374
patch: traverse ( c ;
rank: 915
score: 98.6608657836914
patch: ret = traverse ( c ) ;
rank: 915
score: 98.57709612165179
patch: traverse ( c , false ;
rank: 915
score: 98.33001708984375
patch: delete ( c ) ;
rank: 915
score: 97.94309692382812
patch: return 1 ; }
rank: 916
score: 98.57663399832589
patch: traverse ( c , new ;
rank: 916
score: 98.32956949869792
patch: modify ( c ) ;
rank: 916
score: 97.937548828125
patch: traverse ( next ;
rank: 917
score: 98.65129852294922
patch: traverse ( n ) ; return ;
rank: 917
score: 98.4000956217448
patch: traverse ( input ) ;
rank: 917
score: 98.32759602864583
patch: validate ( c ) ;
rank: 917
score: 97.93026123046874
patch: c = type ;
rank: 918
score: 98.55360630580357
patch: c = c . ) ;
rank: 918
score: 98.51457868303571
patch: traverse ( $STRING$ + c ;
rank: 918
score: 98.37361145019531
patch: throw c ;
rank: 918
score: 97.92525634765624
patch: for ( for (
rank: 919
score: 98.7396011352539
patch: traverse ( c , c . ;
rank: 919
score: 98.64994049072266
patch: traverse ( c , break ) ;
rank: 919
score: 98.5109354654948
patch: traverse ( line ) ;
rank: 919
score: 98.46779959542411
patch: traverse ( -- c ) ;
rank: 919
score: 98.32706705729167
patch: Decl ( c ) ;
rank: 919
score: 97.92196655273438
patch: visits -- ;
rank: 920
score: 98.54354422433036
patch: try traverse ( c ) ;
rank: 920
score: 98.50179617745536
patch: else traverse ( node ) ;
rank: 920
score: 98.38196818033855
patch: traverse ( group ) ;
rank: 920
score: 98.36895751953125
patch: c = c ; }
rank: 920
score: 98.32499186197917
patch: evaluate ( c ) ;
rank: 921
score: 98.6456527709961
patch: f ( c , c ) ;
rank: 921
score: 98.54276529947917
patch: n = c . ;
rank: 921
score: 98.49939836774554
patch: traverse ( node + ) ;
rank: 921
score: 98.38114420572917
patch: visit ( type ) ;
rank: 921
score: 97.90565795898438
patch: return - 0 ;
rank: 922
score: 98.46006556919643
patch: traverse ( next null ) ;
rank: 922
score: 98.36338297526042
patch: error ( c ) ;
rank: 922
score: 97.90556640625
patch: return : node ;
rank: 923
score: 98.64067840576172
patch: else { traverse ( node ) ;
rank: 923
score: 98.5299072265625
patch: c = c . ; ;
rank: 923
score: 98.47652762276786
patch: traverse ( c ; ) ;
rank: 923
score: 98.37569173177083
patch: visit ( next ) ;
rank: 923
score: 98.35427856445312
patch: c ( c ) ;
rank: 923
score: 98.31106567382812
patch: synch ( c ) ;
rank: 923
score: 97.89834594726562
patch: else return ; }
rank: 924
score: 98.69982147216797
patch: traverse ( c . get ) ;
rank: 924
score: 98.52055140904018
patch: traverse ( c , n ;
rank: 924
score: 98.30967203776042
patch: play ( c ) ;
rank: 924
score: 97.89775390625
patch: try { else {
rank: 925
score: 98.69558715820312
patch: c = c . ( ) ;
rank: 925
score: 98.63900756835938
patch: traverse ( node ) ; break ;
rank: 925
score: 98.51604352678571
patch: traverse ( c , true ;
rank: 925
score: 98.36428833007812
patch: traverse ( count ) ;
rank: 925
score: 98.34496053059895
patch: fail ( c ) ;
rank: 925
score: 98.30733235677083
patch: clone ( c ) ;
rank: 925
score: 97.8963134765625
patch: return . node ;
rank: 926
score: 98.69320678710938
patch: traverse ( c , nodes ) ;
rank: 926
score: 98.46849714006696
patch: traverse ( c , c .
rank: 926
score: 98.37508138020833
patch: traverse ( column ) ;
rank: 926
score: 98.30686442057292
patch: attach ( c ) ;
rank: 926
score: 97.857568359375
patch: return . visits ;
rank: 927
score: 98.36776733398438
patch: Node next = true ;
rank: 927
score: 98.35177612304688
patch: traverse ( size ) ;
rank: 927
score: 98.33936564127605
patch: append ( c ) ;
rank: 927
score: 98.30462646484375
patch: filter ( c ) ;
rank: 927
score: 97.85449981689453
patch: return break ;
rank: 928
score: 98.34419759114583
patch: exit ( ) ; }
rank: 928
score: 98.3348388671875
patch: f ( c ) ;
rank: 928
score: 98.30116780598958
patch: binding ( c ) ;
rank: 928
score: 97.85140380859374
patch: do { try {
rank: 929
score: 98.49517822265625
patch: n ( c ) ;
rank: 929
score: 98.34153238932292
patch: traverse ( src ) ;
rank: 929
score: 98.29667154947917
patch: template ( c ) ;
rank: 929
score: 97.81318664550781
patch: Preconditions ++ ;
rank: 930
score: 98.68917846679688
patch: traverse ( c ) ; ) {
rank: 930
score: 98.49464634486607
patch: traverse ( c , current ;
rank: 930
score: 98.3589579264323
patch: next ( n ) ;
rank: 930
score: 98.341064453125
patch: traverse ( in ) ;
rank: 930
score: 98.33324178059895
patch: set ( c ) ;
rank: 930
score: 98.2950439453125
patch: translate ( c ) ;
rank: 930
score: 97.81155395507812
patch: return 1 ;
rank: 931
score: 98.42264811197917
patch: ok ( c ) ;
rank: 931
score: 98.29381306966145
patch: int c = c ;
rank: 931
score: 97.80780029296875
patch: Node c ;
rank: 932
score: 98.62425994873047
patch: traverse ( parent ) ; return ;
rank: 932
score: 98.48720005580357
patch: traverse ( c , ; c
rank: 932
score: 98.4225565592448
patch: prev ( c ) ;
rank: 932
score: 98.33499145507812
patch: visit ( index ) ;
rank: 932
score: 98.28768920898438
patch: reload ( c ) ;
rank: 932
score: 97.80012512207031
patch: return ) {
rank: 933
score: 98.32177734375
patch: traverse ( builder ) ;
rank: 933
score: 98.3201904296875
patch: before ( c ) ;
rank: 933
score: 97.79986572265625
patch: do {
rank: 934
score: 98.46148681640625
patch: node = c . get ;
rank: 934
score: 98.32080078125
patch: c = count ++ ;
rank: 934
score: 98.2825215657552
patch: query ( c ) ;
rank: 934
score: 97.73652648925781
patch: Node next ;
rank: 935
score: 98.59821428571429
patch: return traverse ( node ) ;
rank: 935
score: 98.34283447265625
patch: traverse ( c , (
rank: 935
score: 98.30894978841145
patch: stop ( c ) ;
rank: 935
score: 98.28012084960938
patch: synchronize ( c ) ;
rank: 935
score: 97.73043823242188
patch: throw null ;
rank: 936
score: 98.27854410807292
patch: group ( c ) ;
rank: 936
score: 97.65623474121094
patch: traverse ( {
rank: 937
score: 98.30726114908855
patch: visit ( 0 ) ;
rank: 937
score: 98.27559407552083
patch: expr ( c ) ;
rank: 937
score: 98.23706665039063
patch: throw c ; }
rank: 937
score: 97.64794921875
patch: Node ) {
rank: 938
score: 98.4024149576823
patch: c = c ) ;
rank: 938
score: 98.37080891927083
patch: traverse ( new ) ;
rank: 938
score: 98.27432250976562
patch: populate ( c ) ;
rank: 938
score: 98.22972869873047
patch: throw n ;
rank: 938
score: 97.62974548339844
patch: return ) ;
rank: 939
score: 98.29453531901042
patch: traverse ( start ) ;
rank: 939
score: 98.28190104166667
patch: traverse ( filter ) ;
rank: 939
score: 98.26669311523438
patch: target ( c ) ;
rank: 939
score: 98.19339752197266
patch: throw ) ;
rank: 939
score: 97.62815856933594
patch: if ( !
rank: 940
score: 98.27640787760417
patch: visit ( ref ) ;
rank: 940
score: 98.26005045572917
patch: traverse ( visit ) ;
rank: 940
score: 98.186376953125
patch: for ( ) ;
rank: 940
score: 97.62781524658203
patch: else return ;
rank: 941
score: 98.50365339006696
patch: start ( c ) ; }
rank: 941
score: 98.36148071289062
patch: node = c . ;
rank: 941
score: 98.35817464192708
patch: traverse ( level ) ;
rank: 941
score: 98.282958984375
patch: return next ( ) ;
rank: 941
score: 98.15645751953124
patch: try { ) ;
rank: 941
score: 97.58715057373047
patch: for ( (
rank: 942
score: 98.4952392578125
patch: c = c ) ; }
rank: 942
score: 98.31392415364583
patch: traverse ( prefix ) ;
rank: 942
score: 98.2569580078125
patch: finished ( c ) ;
rank: 942
score: 97.58592224121094
patch: for ( }
rank: 943
score: 98.6256103515625
patch: traverse ( c , column ) ;
rank: 943
score: 98.26795450846355
patch: traverse ( command ) ;
rank: 943
score: 98.25428263346355
patch: traverse ( c , {
rank: 943
score: 98.2540791829427
patch: setup ( c ) ;
rank: 943
score: 98.14310455322266
patch: for ( )
rank: 943
score: 97.58160400390625
patch: return * /
rank: 944
score: 98.29238891601562
patch: traverse ( c . ;
rank: 944
score: 98.25253295898438
patch: disconnect ( c ) ;
rank: 944
score: 98.245556640625
patch: traverse ( c ,
rank: 944
score: 98.04981079101563
patch: return ; ) ;
rank: 944
score: 97.57624053955078
patch: for ( else
rank: 945
score: 98.48799351283482
patch: if ( c ) break ;
rank: 945
score: 98.2894287109375
patch: n = c ) ;
rank: 945
score: 98.25236002604167
patch: expanded ( c ) ;
rank: 945
score: 98.24161783854167
patch: traverse ( property ) ;
rank: 945
score: 98.23729248046875
patch: c = node ;
rank: 945
score: 97.57252502441406
patch: else break ;
rank: 946
score: 98.59341866629464
patch: traverse ( ; c ) ;
rank: 946
score: 98.47771344866071
patch: traverse ( ! type ) ;
rank: 946
score: 98.28670247395833
patch: for ( ; ) {
rank: 946
score: 98.01072387695312
patch: throw ) ; }
rank: 946
score: 97.571533203125
patch: visits * /
rank: 947
score: 98.47739083426339
patch: result ( c ) ; }
rank: 947
score: 98.26263427734375
patch: type ( c ) ;
rank: 947
score: 98.2520039876302
patch: del ( c ) ;
rank: 947
score: 98.16004028320313
patch: next ( ) ;
rank: 947
score: 98.0046630859375
patch: throw n ; }
rank: 947
score: 97.55736541748047
patch: } try {
rank: 948
score: 98.52764892578125
patch: traverse ( c , c ,
rank: 948
score: 98.47071184430804
patch: traverse ( ) ; break ;
rank: 948
score: 98.2502950032552
patch: super ( c ) ;
rank: 948
score: 98.00421142578125
patch: return ) ; }
rank: 948
score: 97.552978515625
patch: traverse ( }
rank: 949
score: 98.46228899274554
patch: return ( c ) ; }
rank: 949
score: 98.26380411783855
patch: traverse ( c ) ||
rank: 949
score: 98.25581868489583
patch: AST ( c ) ;
rank: 949
score: 98.25009155273438
patch: actual ( c ) ;
rank: 949
score: 98.2193603515625
patch: Node c = 0 ;
rank: 949
score: 98.001611328125
patch: throw -- c ;
rank: 949
score: 97.55097961425781
patch: visits * *
rank: 950
score: 98.2451171875
patch: v ( c ) ;
rank: 950
score: 98.1048583984375
patch: traverse ++ ;
rank: 950
score: 98.00103759765625
patch: result = c ;
rank: 950
score: 97.52044677734375
patch: try { }
rank: 951
score: 98.50150844029018
patch: traverse ( ( ) ) ;
rank: 951
score: 98.45443289620536
patch: return c ; break ; }
rank: 951
score: 98.24876912434895
patch: backup ( c ) ;
rank: 951
score: 98.2315165201823
patch: apply ( c ) ;
rank: 951
score: 98.217041015625
patch: Node next = 0 ;
rank: 951
score: 98.09776000976562
patch: c = 0 ;
rank: 951
score: 97.98934326171874
patch: do { ) ;
rank: 951
score: 97.51776123046875
patch: if ( {
rank: 952
score: 98.26009114583333
patch: traverse ( c / ;
rank: 952
score: 98.22599283854167
patch: block ( c ) ;
rank: 952
score: 97.98895874023438
patch: ret = c ;
rank: 952
score: 97.48638153076172
patch: if ( }
rank: 953
score: 98.49151611328125
patch: traverse $NUMBER$ ( c ) ;
rank: 953
score: 98.2444559733073
patch: marshal ( c ) ;
rank: 953
score: 98.05748291015625
patch: c = 1 ;
rank: 953
score: 97.98544311523438
patch: return ; else {
rank: 953
score: 97.48207092285156
patch: return node ;
rank: 954
score: 98.2568868001302
patch: redraw ( c ) ;
rank: 954
score: 98.23719278971355
patch: render ( c ) ;
rank: 954
score: 98.22165934244792
patch: traverse ( c ; ;
rank: 954
score: 98.21500651041667
patch: traverse ( namespace ) ;
rank: 954
score: 98.04867553710938
patch: next = false ;
rank: 954
score: 97.984033203125
patch: this = c ;
rank: 954
score: 97.47612762451172
patch: return * *
rank: 955
score: 98.43086460658482
patch: if ( c ) return ;
rank: 955
score: 98.03730010986328
patch: c -- ;
rank: 955
score: 97.97735595703125
patch: start = c ;
rank: 955
score: 97.47282409667969
patch: } return ;
rank: 956
score: 98.45817347935268
patch: if ( c == c )
rank: 956
score: 98.42757742745536
patch: ret ( c ) ; }
rank: 956
score: 98.2354736328125
patch: commit ( c ) ;
rank: 956
score: 98.21677652994792
patch: if ( c != )
rank: 956
score: 98.0358642578125
patch: next = c ;
rank: 956
score: 97.9636474609375
patch: throw ( ) ;
rank: 956
score: 97.47139739990234
patch: } for (
rank: 957
score: 98.44562639508929
patch: traverse ( c , c )
rank: 957
score: 98.2545878092448
patch: result ( c ) ;
rank: 957
score: 98.23533121744792
patch: parse ( c ) ;
rank: 957
score: 98.03219604492188
patch: visit ( ) ;
rank: 957
score: 97.90852355957031
patch: traverse ) ;
rank: 957
score: 97.47119140625
patch: return next ;
rank: 958
score: 98.4446512858073
patch: if ( c instanceof )
rank: 958
score: 98.23496500651042
patch: eval ( c ) ;
rank: 958
score: 98.20740763346355
patch: repaint ( c ) ;
rank: 958
score: 98.19703165690105
patch: Node next = n ;
rank: 958
score: 98.01048583984375
patch: c = index ;
rank: 958
score: 97.45626831054688
patch: } break ;
rank: 959
score: 98.23276774088542
patch: deactivate ( c ) ;
rank: 959
score: 98.1991475423177
patch: traverse ( ) ; ;
rank: 959
score: 97.4448013305664
patch: return null ;
rank: 960
score: 98.19715372721355
patch: if ( c == )
rank: 960
score: 97.97846069335938
patch: c = parent ;
rank: 960
score: 97.82798767089844
patch: throw $NUMBER$ ;
rank: 960
score: 97.44058990478516
patch: visits - 1
rank: 961
score: 98.30947875976562
patch: traverse ( c , c
rank: 961
score: 97.97059326171875
patch: next = null ;
rank: 961
score: 97.80319213867188
patch: try { ;
rank: 961
score: 97.4403076171875
patch: c = }
rank: 962
score: 98.24180094401042
patch: next ( false ) ;
rank: 962
score: 98.18903198242188
patch: traverse ( c .
rank: 962
score: 98.18719482421875
patch: traverse ( node , ;
rank: 962
score: 97.96614990234374
patch: c = current ;
rank: 962
score: 97.73248291015625
patch: return ; ;
rank: 962
score: 97.43123626708984
patch: return false ;
rank: 963
score: 98.32310791015625
patch: break ) ; }
rank: 963
score: 98.240234375
patch: prepare ( c ) ;
rank: 963
score: 98.18408203125
patch: created ( c ) ;
rank: 963
score: 98.14303588867188
patch: if ( c .
rank: 963
score: 97.42540740966797
patch: throw node ;
rank: 964
score: 98.17952473958333
patch: l = c . ;
rank: 964
score: 98.08899688720703
patch: if ( c
rank: 964
score: 98.05204467773437
patch: do { for (
rank: 964
score: 97.91878051757813
patch: Node next ++ ;
rank: 964
score: 97.67568969726562
patch: throw 1 ;
rank: 964
score: 97.42205047607422
patch: continue ; }
rank: 965
score: 98.26235961914062
patch: if ( c . ;
rank: 965
score: 98.23988850911458
patch: normal ( c ) ;
rank: 965
score: 98.078271484375
patch: if ( c !=
rank: 965
score: 97.63937377929688
patch: throw false ;
rank: 965
score: 97.40850067138672
patch: count ++ ;
rank: 966
score: 98.24802856445312
patch: c = c )
rank: 966
score: 98.0169189453125
patch: for ( ) {
rank: 966
score: 97.90382080078125
patch: c = n ;
rank: 966
score: 97.63786315917969
patch: System . ;
rank: 966
score: 97.38468424479167
patch: else {
rank: 967
score: 98.1708475748698
patch: traverse c = c ;
rank: 967
score: 97.98494262695313
patch: consume ( ) ;
rank: 967
score: 97.84458923339844
patch: c ++ ;
rank: 967
score: 97.25454711914062
patch: c ;
rank: 968
score: 98.2826436360677
patch: for ( ) break ;
rank: 968
score: 98.23180135091145
patch: out ( c ) ;
rank: 968
score: 98.22764078776042
patch: c = c ) {
rank: 968
score: 97.99006958007813
patch: traverse ( next CaMeL
rank: 968
score: 97.9780517578125
patch: node = c ;
rank: 968
score: 97.59456634521484
patch: for ( {
rank: 968
score: 97.24542236328125
patch: return {
rank: 969
score: 98.23170979817708
patch: traverse ( error ) ;
rank: 969
score: 98.22097778320312
patch: while ( c ) {
rank: 969
score: 98.1664326985677
patch: loop ( c ) ;
rank: 969
score: 97.9301025390625
patch: if ( c )
rank: 969
score: 97.72493743896484
patch: next ++ ;
rank: 969
score: 97.59388732910156
patch: throw true ;
rank: 969
score: 97.16078694661458
patch: continue ;
rank: 970
score: 98.26470947265625
patch: recalculate ( c ) ;
rank: 970
score: 98.15084838867188
patch: n = c ;
rank: 970
score: 97.8901611328125
patch: return ; break ;
rank: 970
score: 97.50874328613281
patch: return ; else
rank: 970
score: 97.1361592610677
patch: visits :
rank: 971
score: 98.26141357421875
patch: wait ( c ) ;
rank: 971
score: 97.10921223958333
patch: visits *
rank: 972
score: 98.25956217447917
patch: traverse ( c ) {
rank: 972
score: 98.15762939453126
patch: traverse ( c )
rank: 972
score: 98.131201171875
patch: return c ; ;
rank: 972
score: 97.87720947265625
patch: traverse ( c {
rank: 972
score: 97.87261352539062
patch: revalidate ( ) ;
rank: 972
score: 97.8705322265625
patch: c = ref ;
rank: 972
score: 97.48725128173828
patch: try continue ;
rank: 972
score: 97.08314005533855
patch: if (
rank: 973
score: 98.06763916015625
patch: switch ( c )
rank: 973
score: 97.73322296142578
patch: v ++ ;
rank: 973
score: 97.59740447998047
patch: next -- ;
rank: 973
score: 97.03171793619792
patch: traverse (
rank: 974
score: 98.13478597005208
patch: traverse ( ; ) ;
rank: 974
score: 98.09354858398437
patch: if ( c ;
rank: 974
score: 97.85270690917969
patch: return n ;
rank: 974
score: 97.68030548095703
patch: pos ++ ;
rank: 974
score: 97.56129455566406
patch: c . }
rank: 974
score: 96.94141642252605
patch: this .
rank: 975
score: 98.13047281901042
patch: traverse ( ) ; }
rank: 975
score: 97.50443267822266
patch: exit ++ ;
rank: 975
score: 97.44361877441406
patch: for ( throws
rank: 975
score: 96.9139404296875
patch: ) {
rank: 976
score: 98.22957356770833
patch: return traverse ( ) ;
rank: 976
score: 98.1246337890625
patch: pos = c ) ;
rank: 976
score: 96.88478597005208
patch: c .
rank: 977
score: 97.61119079589844
patch: traverse ( (
rank: 977
score: 97.39734649658203
patch: try { )
rank: 977
score: 96.8759765625
patch: traverse CaMeL
rank: 978
score: 98.11952718098958
patch: Node n = c )
rank: 978
score: 97.9027587890625
patch: c = ) ;
rank: 978
score: 97.58702850341797
patch: result ++ ;
rank: 978
score: 97.4434814453125
patch: Node next =
rank: 978
score: 97.37484741210938
patch: throw type ;
rank: 978
score: 96.8091532389323
patch: node .
rank: 979
score: 97.8588623046875
patch: return true ; }
rank: 979
score: 97.58644104003906
patch: i ++ ;
rank: 979
score: 97.56188201904297
patch: return type ;
rank: 979
score: 97.44324493408203
patch: visit ++ ;
rank: 979
score: 96.79737345377605
patch: return }
rank: 980
score: 97.87583618164062
patch: return false ; ;
rank: 980
score: 97.57759094238281
patch: res ++ ;
rank: 980
score: 96.76576741536458
patch: node ;
rank: 980
score: 96.72288004557292
patch: System .
rank: 981
score: 98.21091715494792
patch: return ( c ) ;
rank: 981
score: 97.86854248046875
patch: break ; ; ;
rank: 981
score: 97.5614242553711
patch: retval ++ ;
rank: 981
score: 97.51826477050781
patch: return index ;
rank: 981
score: 96.75795491536458
patch: c =
rank: 981
score: 96.64510091145833
patch: System ;
rank: 982
score: 97.89822998046876
patch: node = c )
rank: 982
score: 97.54888153076172
patch: loop ++ ;
rank: 982
score: 97.45381164550781
patch: return true ;
rank: 982
score: 96.73177083333333
patch: logger .
rank: 982
score: 96.59574381510417
patch: ) ;
rank: 983
score: 97.82561645507812
patch: n = c )
rank: 983
score: 97.52603149414062
patch: type ++ ;
rank: 983
score: 97.4316635131836
patch: -- c ;
rank: 983
score: 96.70946502685547
patch: }
rank: 983
score: 96.48701985677083
patch: try ;
rank: 984
score: 98.1487060546875
patch: return c ) ;
rank: 984
score: 97.80767211914062
patch: if ( traverse )
rank: 984
score: 97.64947509765625
patch: for ( ;
rank: 984
score: 97.50469970703125
patch: children ++ ;
rank: 984
score: 97.39418029785156
patch: / * /
rank: 984
score: 96.70943196614583
patch: * /
rank: 984
score: 96.28962707519531
patch: try
rank: 985
score: 97.803955078125
patch: traverse = c )
rank: 985
score: 97.63273620605469
patch: break ; ;
rank: 985
score: 96.70094807942708
patch: / *
rank: 985
score: 95.42567443847656
patch: do
rank: 986
score: 97.50210571289062
patch: traverse ( c
rank: 986
score: 97.3783950805664
patch: return return ;
rank: 986
score: 97.36474609375
patch: Node c =
rank: 986
score: 97.32112121582031
patch: ++ c ;
rank: 986
score: 97.00260416666667
patch: Node <
rank: 986
score: 96.68980916341145
patch: LOG .
rank: 987
score: 97.98004150390625
patch: return * * /
rank: 987
score: 97.48915100097656
patch: int ) {
rank: 987
score: 97.42500305175781
patch: continue ; ;
rank: 987
score: 97.24655151367188
patch: -- count ;
rank: 987
score: 95.38580322265625
patch: /
rank: 988
score: 97.46775817871094
patch: position ++ ;
rank: 988
score: 97.35591125488281
patch: return visits ;
rank: 988
score: 97.24610900878906
patch: ++ count ;
rank: 988
score: 96.67784627278645
patch: visits ;
rank: 988
score: 95.371337890625
patch: System
rank: 989
score: 97.90186767578125
patch: throw new ) ;
rank: 989
score: 97.46147918701172
patch: index ++ ;
rank: 989
score: 97.35298919677734
patch: ) ) ;
rank: 989
score: 96.65416463216145
patch: Node {
rank: 989
score: 95.34757995605469
patch: final
rank: 990
score: 97.45637512207031
patch: children -- ;
rank: 990
score: 96.63199869791667
patch: do :
rank: 990
score: 96.56842041015625
patch: next ;
rank: 990
score: 95.30635070800781
patch: public
rank: 991
score: 97.45185852050781
patch: finished ++ ;
rank: 991
score: 97.19401550292969
patch: counter ++ ;
rank: 991
score: 96.53574625651042
patch: null {
rank: 991
score: 95.24845123291016
patch: {
rank: 992
score: 97.86219787597656
patch: break ) ;
rank: 992
score: 97.43375396728516
patch: path ++ ;
rank: 992
score: 97.16578674316406
patch: traverse ( ;
rank: 992
score: 96.11650085449219
patch: else
rank: 992
score: 94.94818115234375
patch: )
rank: 993
score: 97.1126480102539
patch: count -- ;
rank: 993
score: 96.98399353027344
patch: c = ;
rank: 993
score: 96.07415771484375
patch: return
rank: 993
score: 94.90840148925781
patch: this
rank: 994
score: 96.98179626464844
patch: n ++ ;
rank: 994
score: 94.83171844482422
patch: c
rank: 995
score: 97.3821792602539
patch: ws ++ ;
rank: 995
score: 96.49295043945312
patch: / /
rank: 995
score: 94.79225158691406
patch: throw
rank: 996
score: 96.39302571614583
patch: Node next
rank: 997
score: 96.5509745279948
patch: ) )
rank: 997
score: 94.81631469726562
patch: Node
rank: 997
score: 94.69161987304688
patch: null
rank: 997
score: 94.6622543334961
patch: protected
rank: 998
score: 96.50472005208333
patch: else ;
rank: 998
score: 95.01542663574219
patch: break
rank: 998
score: 94.56327819824219
patch: int
rank: 998
score: 94.55972290039062
patch: logger
rank: 999
score: 95.42100524902344
patch: ;
rank: 999
score: 94.35780334472656
patch: My@@
rank: 1000
score: 94.60560607910156
patch: continue
rank: 1000
score: 94.28181457519531
patch: LOG
rank: 1000
score: 94.21540832519531
patch: visits
