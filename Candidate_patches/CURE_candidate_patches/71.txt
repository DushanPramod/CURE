rank: 1
score: 99.79703776041667
patch: case Token . AND :
rank: 1
score: 99.6579081217448
patch: switch ( n . get CaMeL Type ( ) ) {
rank: 1
score: 99.64040013363487
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 1
score: 99.54747425426136
patch: case Token . AND : case Token . AND :
rank: 2
score: 99.60621134440105
patch: case Token . HOOK :
rank: 2
score: 99.52850896661931
patch: case Token . HOOK : case Token . HOOK :
rank: 2
score: 99.47317504882812
patch: case Token . AND : case Token . AND : :
rank: 2
score: 99.33551897321429
patch: case Token . AND : :
rank: 3
score: 99.55609130859375
patch: case Token . OR :
rank: 3
score: 99.52281429893092
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , n ) ;
rank: 3
score: 99.42487127130681
patch: case Token . AND : case Token . NULL :
rank: 3
score: 99.40042114257812
patch: case Token . AND : : case Token . AND :
rank: 3
score: 99.3055419921875
patch: case Type . AND :
rank: 3
score: 99.26303932883523
patch: case Token . TRUE : case Token . AND :
rank: 4
score: 99.55422141335227
patch: case Token . OR : case Token . AND :
rank: 4
score: 99.51820283777573
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 4
score: 99.36441040039062
patch: case Token . AND : Token case Token . AND :
rank: 4
score: 99.25367228190105
patch: case Integer . AND :
rank: 4
score: 99.24714799360795
patch: case Token . : : case Token . AND :
rank: 5
score: 99.5450439453125
patch: case Token . OR : case Token . OR :
rank: 5
score: 99.5146817294034
patch: case Token . HOOK : case Token . AND :
rank: 5
score: 99.41483931107955
patch: case Token . AND : case Token . HOOK :
rank: 5
score: 99.3621317545573
patch: case Token . AND : case Token . NULL : :
rank: 5
score: 99.33039994673295
patch: case Token . AND : case Node . AND :
rank: 5
score: 99.32961203835227
patch: case Token . AND : case Token . NONE :
rank: 5
score: 99.24163818359375
patch: case Token . AND : : :
rank: 6
score: 99.54270426432292
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) ,
rank: 6
score: 99.41416422526042
patch: switch ( n . get CaMeL String ( ) ) {
rank: 6
score: 99.32021484375
patch: case Token . AND : Token . AND :
rank: 6
score: 99.31343217329545
patch: case Token . AND : case Token . TRUE :
rank: 6
score: 99.22711181640625
patch: case Token . : :
rank: 7
score: 99.30587768554688
patch: case Token . AND : : return Token . AND :
rank: 7
score: 99.2996074969952
patch: case Token . AND : case Token . AND : break ;
rank: 7
score: 99.29823996803977
patch: switch ( n . get CaMeL Type ( ) )
rank: 7
score: 99.22430419921875
patch: case Token . : case Token . AND :
rank: 7
score: 99.07448904854911
patch: case Type . AND : :
rank: 8
score: 99.53306513247283
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) {
rank: 8
score: 99.47556023848684
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( variable , variable ) ;
rank: 8
score: 99.42429421164773
patch: case Token . AND : case Token . OR :
rank: 8
score: 99.21698552911931
patch: case Token . FALSE : case Token . AND :
rank: 8
score: 99.06494903564453
patch: case Token . AND : break :
rank: 9
score: 99.53159005301339
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) {
rank: 9
score: 99.4103116122159
patch: case Token . OR : case Token . HOOK :
rank: 9
score: 99.29672241210938
patch: case Token . AND : { case Token . AND :
rank: 9
score: 99.28205871582031
patch: case Token . AND : break ;
rank: 9
score: 99.28135172526042
patch: case Token . NULL : case Token . AND : :
rank: 9
score: 99.19120958116319
patch: case $STRING$ : case Token . AND :
rank: 9
score: 99.05280412946429
patch: case Token . AND : .
rank: 10
score: 99.52707248263889
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) , variable ) ;
rank: 10
score: 99.27986653645833
patch: case Token . AND : case Token . AND : {
rank: 10
score: 99.27543131510417
patch: case Token . NULL : case Token . NULL : :
rank: 10
score: 99.27007501775569
patch: case Token . AND : case Token . EMPTY :
rank: 10
score: 99.0041015625
patch: case Token . AND + Token . AND :
rank: 11
score: 99.26442649147727
patch: case Token . AND : case Token . TYPE :
rank: 11
score: 99.26129705255681
patch: case Token . AND : case Token . FUNCTION :
rank: 11
score: 99.2463045987216
patch: case Node . AND : case Token . AND :
rank: 11
score: 99.24268256293402
patch: return n . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ;
rank: 11
score: 99.1778564453125
patch: case Token . TRUE :
rank: 11
score: 99.0022216796875
patch: case Token . AND | Token . AND :
rank: 12
score: 99.51019694010417
patch: if ( Node CaMeL Util . is CaMeL Name ( n ) ) {
rank: 12
score: 99.44301470588235
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 12
score: 99.24247233072917
patch: case Node . AND : : case Token . AND :
rank: 12
score: 98.98037719726562
patch: case Token . Definition . AND :
rank: 13
score: 99.50850423177083
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) {
rank: 13
score: 99.42400801809211
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 13
score: 99.2607177734375
patch: case Token . AND : case Token . AND : Token . AND :
rank: 13
score: 99.23016912286931
patch: case Node . AND : case Node . AND :
rank: 13
score: 99.1951571377841
patch: case Token . AND : return Token . HOOK ;
rank: 13
score: 99.175
patch: case Token . AND : : case $STRING$ :
rank: 13
score: 98.97909545898438
patch: case Token . TYPE :
rank: 14
score: 99.50796875
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 14
score: 99.35195090553977
patch: case Token . HOOK : case Token . OR :
rank: 14
score: 99.25481622869319
patch: case Token . NULL : case Token . AND :
rank: 14
score: 99.23662923177083
patch: if ( n . get CaMeL Type ( ) == Token . AND )
rank: 14
score: 99.22798665364583
patch: case Token . AND : switch case Token . AND :
rank: 14
score: 99.16620427911931
patch: return Token . AND : : Token . AND ;
rank: 14
score: 98.95166693793402
patch: case ( Token . AND : break :
rank: 15
score: 99.41085476345486
patch: check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 15
score: 99.2972412109375
patch: switch ( n . get CaMeL Parent ( ) ) {
rank: 15
score: 99.23106032151442
patch: case Token . AND : break ; case Token . AND :
rank: 15
score: 99.2236328125
patch: case Node . AND :
rank: 15
score: 99.18285023082386
patch: case Token . AND : return Token . AND :
rank: 15
score: 99.16415405273438
patch: case Token . : case $STRING$ :
rank: 15
score: 98.95062255859375
patch: case Token . AND : : /
rank: 16
score: 99.50767450747283
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) {
rank: 16
score: 99.40545654296875
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n ) )
rank: 16
score: 99.29557291666667
patch: } switch ( n . get CaMeL Type ( ) )
rank: 16
score: 99.23899147727273
patch: case Token . NULL : case Token . NULL :
rank: 16
score: 99.22986857096355
patch: case Token . AND : case Token . NOT : :
rank: 16
score: 99.20736694335938
patch: case Token . AND : } case Token . AND :
rank: 16
score: 99.18463134765625
patch: case Token . AND : / * /
rank: 16
score: 99.16969992897727
patch: case Token . AND : return Token . AND ;
rank: 16
score: 99.16156005859375
patch: return Token . AND : Token . AND :
rank: 16
score: 98.94334193638393
patch: case Integer . AND : :
rank: 17
score: 99.4029541015625
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 17
score: 99.22743443080357
patch: if ( Token . AND . equals ( Token . AND ) )
rank: 17
score: 99.22718302408855
patch: case Token . AND : case Token . EMPTY : :
rank: 17
score: 99.17969767252605
patch: switch ( n . get CaMeL Node ( ) ) {
rank: 17
score: 99.14509721235795
patch: return Token . AND : : Token . AND :
rank: 17
score: 98.9366455078125
patch: case Integer : if case Token . AND :
rank: 18
score: 99.22061920166016
patch: case Token . AND : case Token . AND : case Token . AND :
rank: 18
score: 99.22035910866477
patch: case Token . AND : case Token . NOT :
rank: 18
score: 99.19954427083333
patch: case Token . AND : case Node . AND : :
rank: 18
score: 99.15691061580883
patch: n . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ;
rank: 18
score: 98.93577745225694
patch: case $NUMBER$ : case Token . AND :
rank: 19
score: 99.494140625
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) {
rank: 19
score: 99.37245008680556
patch: case Node CaMeL Util . is CaMeL Lhs ( n . get CaMeL Parent ( ) )
rank: 19
score: 99.21343439275569
patch: case Token . TARGET : case Token . AND :
rank: 19
score: 99.2117032137784
patch: case Token . AND : case Token . ASSIGN :
rank: 19
score: 99.19118245442708
patch: case Token . AND : . case Token . AND :
rank: 19
score: 99.1492919921875
patch: case Token . AND : return n . get CaMeL First CaMeL Child ( ) ;
rank: 19
score: 99.12268744574652
patch: case Token . AND : case $STRING$ :
rank: 19
score: 98.935546875
patch: case Token . NOT :
rank: 20
score: 99.36891682942708
patch: case Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n )
rank: 20
score: 99.21186659071181
patch: if ( Token . NULL . equals ( n . get CaMeL String ( ) ) )
rank: 20
score: 99.20635431463069
patch: case Token . AND : case Token . NO :
rank: 20
score: 99.18780517578125
patch: case Token . AND ? Token . AND :
rank: 20
score: 99.14677159926471
patch: case Token . AND : return Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ;
rank: 20
score: 99.12090509588069
patch: case Token . TRUE : case Token . NULL :
rank: 20
score: 98.93125915527344
patch: case Type . AND : break :
rank: 21
score: 99.475830078125
patch: if ( Node CaMeL Util . is CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 21
score: 99.21095784505208
patch: case Token . AND : case Token . TYPE : :
rank: 21
score: 99.20458984375
patch: case Token . AND : case Token . TRUE : :
rank: 21
score: 99.19384087456598
patch: case Token . HOOK : / * /
rank: 21
score: 99.18577991832386
patch: case Token . AND : case Exception . AND :
rank: 21
score: 99.16175333658855
patch: if ( n . get CaMeL Type ( ) ) {
rank: 21
score: 99.14409930889423
patch: case Node CaMeL Util . AND : case Token . AND :
rank: 21
score: 99.10335693359374
patch: case Token . AND : : case $STRING$ ;
rank: 21
score: 98.92768690321181
patch: case Token . AND : : break :
rank: 22
score: 99.35976993336396
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 22
score: 99.20992024739583
patch: case Token . TARGET : case Token . AND : :
rank: 22
score: 99.1842549641927
patch: case Token . AND : : case Node . AND :
rank: 22
score: 99.15733991350446
patch: case Token . AND : {
rank: 22
score: 99.14329528808594
patch: case Token . AND : / :
rank: 22
score: 99.10263893821023
patch: case Token . TYPE : case Token . AND :
rank: 22
score: 98.92549896240234
patch: case Type . Definition . AND :
rank: 23
score: 99.47007242838542
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , variable ,
rank: 23
score: 99.20526123046875
patch: case Token . AND : case Token . FUNCTION : :
rank: 23
score: 99.1962158203125
patch: case Token . AND : Token . AND : case Token . AND :
rank: 23
score: 99.1519775390625
patch: switch ( n . get CaMeL Next ( ) ) {
rank: 23
score: 99.14253373579545
patch: case Token . HOOK : return Token . HOOK ;
rank: 23
score: 99.09726784446023
patch: case Token . : case Token . AND : :
rank: 23
score: 98.92527262369792
patch: case Integer : case Token . AND :
rank: 24
score: 99.46229044596355
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) {
rank: 24
score: 99.35785590277777
patch: case Node CaMeL Util . is CaMeL Lhs ( n . get CaMeL First ( ) )
rank: 24
score: 99.1807861328125
patch: case Token . AND : return case Token . AND :
rank: 24
score: 99.1380615234375
patch: case Token . HOOK : return Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ;
rank: 24
score: 99.09503728693181
patch: case Token . NONE : case Token . AND :
rank: 24
score: 98.92421264648438
patch: case Token . AND = Token . AND :
rank: 25
score: 99.45607346754808
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) , variable ,
rank: 25
score: 99.35605340254934
patch: case Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 25
score: 99.19415283203125
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 25
score: 99.17598470052083
patch: case Token . AND : case Exception . AND : {
rank: 25
score: 99.13681030273438
patch: case Node CaMeL Util . AND :
rank: 25
score: 99.0909423828125
patch: return Token . AND : case Token . AND :
rank: 25
score: 98.92330932617188
patch: case Type . AND : Token . AND :
rank: 26
score: 99.45318134014423
patch: check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) , variable ) ;
rank: 26
score: 99.34928813733552
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( variable , n ) ;
rank: 26
score: 99.17454020182292
patch: case Token . AND : { return Token . AND :
rank: 26
score: 99.16551624644886
patch: case Token . OR : return Token . HOOK ;
rank: 26
score: 99.13626437717014
patch: break n . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ;
rank: 26
score: 99.12905051491477
patch: case Token . ASSIGN : case Token . AND :
rank: 26
score: 98.91998901367188
patch: case $NUMBER$ : if case Token . AND :
rank: 27
score: 99.45272163722827
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) {
rank: 27
score: 99.34518868582589
patch: Node n = n . get CaMeL First CaMeL Child ( ) ;
rank: 27
score: 99.19277954101562
patch: case Token . AND : case Token . NONE : :
rank: 27
score: 99.1815518465909
patch: case Token . AND : case Token . VOID :
rank: 27
score: 99.1728006998698
patch: case Node . AND : Token case Token . AND :
rank: 27
score: 99.13153754340277
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . ) ;
rank: 27
score: 99.1045809659091
patch: case Token . NOT : case Token . AND :
rank: 27
score: 99.0890401204427
patch: case Token . FALSE :
rank: 27
score: 98.91578504774306
patch: case Token . AND : : / /
rank: 28
score: 99.4455078125
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n ) ) {
rank: 28
score: 99.34354440789474
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( this , variable ) ;
rank: 28
score: 99.1911288174716
patch: case Token . AND : case Token . TARGET :
rank: 28
score: 99.16119939630681
patch: case Token . OR : case Token . ASSIGN :
rank: 28
score: 99.1009012858073
patch: switch ( n . get CaMeL Name ( ) ) {
rank: 28
score: 99.08492431640624
patch: case : case Token . AND : : :
rank: 28
score: 98.90253448486328
patch: case Type . AND : : :
rank: 29
score: 99.15743001302083
patch: case Node . AND : : case Node . AND :
rank: 29
score: 99.12451171875
patch: case Token . HOOK : return n . get CaMeL First CaMeL Child ( ) ;
rank: 29
score: 99.0987881747159
patch: case Token . IN : case Token . AND :
rank: 29
score: 99.08131713867188
patch: case $STRING$ : case Token . AND : :
rank: 29
score: 98.90208943684895
patch: case Token . WARNING :
rank: 30
score: 99.4315897623698
patch: switch ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) {
rank: 30
score: 99.31890190972223
patch: case Node CaMeL Util . is CaMeL Lhs ( n . get CaMeL Next ( ) )
rank: 30
score: 99.17952104048295
patch: case Token . AND : case Token . FALSE :
rank: 30
score: 99.1566670735677
patch: case Token . AND : while case Token . AND :
rank: 30
score: 99.15492757161458
patch: case Token . AND : case Token . HOOK : {
rank: 30
score: 99.11474609375
patch: case Token . OR : return Token . AND :
rank: 30
score: 99.0804931640625
patch: case Token . : : : case $STRING$ ;
rank: 30
score: 98.898681640625
patch: case Token . AND || Token . AND :
rank: 31
score: 99.42881266276042
patch: check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 31
score: 99.31411404079861
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n )
rank: 31
score: 99.17969689002403
patch: case Token . AND : case Token . Na CaMeL N :
rank: 31
score: 99.15381537543402
patch: case Token . OR : / * /
rank: 31
score: 99.15259806315105
patch: return Token . AND :
rank: 31
score: 99.11355929904514
patch: case Token . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Token . AND :
rank: 31
score: 99.07938842773437
patch: case Token . : : : case $STRING$ :
rank: 32
score: 99.42494140625
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First ( ) , variable ) ;
rank: 32
score: 99.30881173270089
patch: case Node CaMeL Util . is CaMeL Lhs ( n , variable )
rank: 32
score: 99.17684936523438
patch: case Token . NULL : case Token . EMPTY : :
rank: 32
score: 99.17385864257812
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 32
score: 99.15040079752605
patch: case Token . AND : case Node . AND : {
rank: 32
score: 99.14693196614583
patch: switch ( n . get CaMeL First ( ) ) {
rank: 32
score: 99.1125018780048
patch: expr = n . get CaMeL First CaMeL Child ( ) ;
rank: 32
score: 99.07884724934895
patch: case Token = n . get CaMeL First ( ) ;
rank: 32
score: 99.07863547585227
patch: case $STRING$ . case Token . AND : : :
rank: 32
score: 98.89335123697917
patch: case 0 : case Token . AND :
rank: 33
score: 99.42232082201087
patch: switch ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) {
rank: 33
score: 99.30177935431985
patch: if ( n . get CaMeL Type ( ) . is CaMeL Lhs ( ) )
rank: 33
score: 99.17025756835938
patch: case Token . AND : Token . AND : break ;
rank: 33
score: 99.14359283447266
patch: case Token . AND : / /
rank: 33
score: 99.14235432942708
patch: case Token . AND : case Token . AND : }
rank: 33
score: 99.11055261948529
patch: n . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) .
rank: 33
score: 99.07855779474431
patch: case Token . FALSE : case Token . NULL :
rank: 33
score: 99.07319779829545
patch: case Token . AND : case Token . IN :
rank: 34
score: 99.42201334635416
patch: switch ( Node CaMeL Util . is CaMeL Name ( n ) ) {
rank: 34
score: 99.17571466619319
patch: case Token . AND : case Token . RIGHT :
rank: 34
score: 99.16997884114583
patch: case Token . AND : case Token . AND : Token . TRUE :
rank: 34
score: 99.13716430664063
patch: case Node CaMeL Util . Token . AND :
rank: 34
score: 99.13190252130681
patch: switch ( n . get CaMeL Parent ( ) )
rank: 34
score: 99.0731201171875
patch: case Node CaMeL Util . OR :
rank: 34
score: 99.06942409939236
patch: case $STRING$ . case Token . AND :
rank: 34
score: 98.89166259765625
patch: case 0 : if case Token . AND :
rank: 35
score: 99.42186390269886
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First ( ) ,
rank: 35
score: 99.29585774739583
patch: check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , n ) ;
rank: 35
score: 99.17535955255681
patch: case Token . AND : case Token . CHECK :
rank: 35
score: 99.16619318181819
patch: case Token . AND : break Token . AND :
rank: 35
score: 99.1336337002841
patch: case Token . AND : case Integer . AND :
rank: 35
score: 99.1298828125
patch: case Token . OR : return Token . AND ;
rank: 35
score: 99.09617262620192
patch: case Token . Token . AND : case Token . AND :
rank: 35
score: 99.07282049005681
patch: case Token . NO : case Token . AND :
rank: 35
score: 99.06941223144531
patch: case Token . : : : :
rank: 35
score: 98.88965861002605
patch: case Token . FUNCTION :
rank: 36
score: 99.4217529296875
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) )
rank: 36
score: 99.29528130425348
patch: case Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n )
rank: 36
score: 99.1690673828125
patch: case Token . AND : case Token . NAME :
rank: 36
score: 99.16422816685268
patch: if ( Token . AND . equals ( Token . AND ) :
rank: 36
score: 99.13016764322917
patch: } case Token . AND : case Token . AND :
rank: 36
score: 99.09449351917614
patch: case Token . AND : return Token . KILL ;
rank: 36
score: 99.0699234008789
patch: case Node CaMeL Util . HOOK :
rank: 36
score: 99.0664950284091
patch: case Token . WARNING : case Token . AND :
rank: 36
score: 98.880615234375
patch: case Token . AND + AND :
rank: 37
score: 99.29374186197917
patch: return Node CaMeL Util . is CaMeL Lhs ( n . get CaMeL First ( ) )
rank: 37
score: 99.16873508029514
patch: if ( Token . AND . equals ( n . get CaMeL String ( ) ) )
rank: 37
score: 99.1635009765625
patch: if ( n . get CaMeL Type ( ) == Token . AND :
rank: 37
score: 99.12982732599431
patch: case Token . AND : case Object . AND :
rank: 37
score: 99.12378946940105
patch: if ( variable . equals ( Token . ASSIGN ) )
rank: 37
score: 99.09314903846153
patch: case Token . AND : case Node CaMeL Util . AND :
rank: 37
score: 99.06955973307292
patch: case Token . HOOK : case Token . AND : {
rank: 37
score: 99.06427556818181
patch: case Token . TRUE : case Token . TRUE :
rank: 37
score: 98.87716674804688
patch: case Token . AND : . :
rank: 38
score: 99.41064453125
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) )
rank: 38
score: 99.293701171875
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n ) ; }
rank: 38
score: 99.16810191761364
patch: case Token . AND : case Token . STRING :
rank: 38
score: 99.16248372395833
patch: if ( node . get CaMeL Type ( ) == Token . AND )
rank: 38
score: 99.12937418619792
patch: case Node . AND : { case Token . AND :
rank: 38
score: 99.12084089006696
patch: case Token . HOOK : {
rank: 38
score: 99.06868489583333
patch: switch ( n . get CaMeL Class ( ) ) {
rank: 38
score: 99.05638538707386
patch: case Token . AND : : case Token . :
rank: 38
score: 98.86570231119792
patch: case Token . AND : case 0 :
rank: 39
score: 99.41036854619566
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ) {
rank: 39
score: 99.29232025146484
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 39
score: 99.1671854654948
patch: case Token . NONE : case Token . AND : :
rank: 39
score: 99.11824544270833
patch: case Token . AND : if case Token . AND :
rank: 39
score: 99.08590494791666
patch: case Node CaMeL Util . Token . AND : case Token . AND :
rank: 39
score: 98.86378173828125
patch: case Token . AND : : / / /
rank: 40
score: 99.40852864583333
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 40
score: 99.29206678602431
patch: if ( check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n ) )
rank: 40
score: 99.16608220880681
patch: case Token . TYPE : case Token . TYPE :
rank: 40
score: 99.1587383563702
patch: case Token . AND : case Token . NONE : break ;
rank: 40
score: 99.12000621448864
patch: case Token . ASSIGN : case Token . HOOK :
rank: 40
score: 99.11274857954545
patch: case Type . AND : case Token . AND :
rank: 40
score: 99.083740234375
patch: break n . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ;
rank: 40
score: 99.06764914772727
patch: case Token . NAME : case Token . AND :
rank: 40
score: 98.86356811523437
patch: case char : if case Token . AND :
rank: 41
score: 99.4076436360677
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) , variable ) ;
rank: 41
score: 99.29126848493304
patch: if ( Node CaMeL Util . is CaMeL Lhs ( variable ) )
rank: 41
score: 99.16180419921875
patch: case Token . EMPTY : case Token . AND : :
rank: 41
score: 99.11956787109375
patch: case Token . OR : case Token . HOOK : {
rank: 41
score: 99.1117451985677
patch: case Token . AND : case Exception . AND : :
rank: 41
score: 99.06712849934895
patch: if ( variable . is CaMeL Name ( ) ) {
rank: 41
score: 98.8579345703125
patch: case Integer : : case Token . AND :
rank: 42
score: 99.40695529513889
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ,
rank: 42
score: 99.28814697265625
patch: return n . get CaMeL Parent ( ) . get CaMeL Next ( ) ;
rank: 42
score: 99.11641438802083
patch: return n . get CaMeL First CaMeL Child ( ) ;
rank: 42
score: 99.11009724934895
patch: case Type . AND : : case Token . AND :
rank: 42
score: 99.08161010742188
patch: case Token . AND : case Token . :
rank: 42
score: 98.85791778564453
patch: case Token . AND : this .
rank: 43
score: 99.40321978400735
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n , variable ) ) {
rank: 43
score: 99.28449563419117
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( node ) ;
rank: 43
score: 99.15810139973958
patch: case Token . EMPTY : case Token . NULL : :
rank: 43
score: 99.14732008713942
patch: case Token . AND : case Token . AND : break :
rank: 43
score: 99.11548961292614
patch: case Token . HOOK : return Token . AND ;
rank: 43
score: 99.1089375813802
patch: case Token . AND : . return Token . AND :
rank: 43
score: 99.07658247514205
patch: case Token . AND : return Token . HOOK :
rank: 43
score: 99.06356472439236
patch: / * / case Token . AND :
rank: 43
score: 99.03754272460938
patch: return Token . AND : Token . AND ;
rank: 43
score: 98.85736083984375
patch: case Token . Token . AND :
rank: 44
score: 99.402216796875
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) , n
rank: 44
score: 99.28348214285714
patch: Node variable = n . get CaMeL First CaMeL Child ( ) ;
rank: 44
score: 99.1580810546875
patch: if case Token . AND : case Token . AND :
rank: 44
score: 99.14661754261364
patch: case Token . AND : case Token . code :
rank: 44
score: 99.11126154119319
patch: case Token . AND : return Token . OR ;
rank: 44
score: 99.10403442382812
patch: case Node . AND : : return Token . AND :
rank: 44
score: 99.0596415201823
patch: Node n = n . get CaMeL Next ( ) ;
rank: 44
score: 99.03474256727431
patch: case Token . AND : : : :
rank: 44
score: 98.8487060546875
patch: case Token . AND : case / / :
rank: 45
score: 99.2829818725586
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n ,
rank: 45
score: 99.15498490767045
patch: case Token . AND : case Token . LEFT :
rank: 45
score: 99.146484375
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ ) ;
rank: 45
score: 99.03465687144886
patch: case Token . AND : case Token . parse :
rank: 45
score: 98.84869384765625
patch: case Token . AND : case - AND :
rank: 46
score: 99.400283203125
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n , n . get CaMeL Last CaMeL Child ( ) ) ) {
rank: 46
score: 99.28289794921875
patch: return n . get CaMeL Last CaMeL Child ( ) . get CaMeL Next ( ) ;
rank: 46
score: 99.14958190917969
patch: if ( n . get CaMeL Type ( ) == Token . AND ) {
rank: 46
score: 99.14471990411931
patch: case Token . AND : case Token . READ :
rank: 46
score: 99.10988547585227
patch: case Token . READ : case Token . AND :
rank: 46
score: 99.0951919555664
patch: this . case Token . AND :
rank: 46
score: 99.07393646240234
patch: n . get CaMeL First CaMeL Child ( ) . case Token . AND :
rank: 46
score: 99.03193664550781
patch: case : case Token . AND :
rank: 46
score: 98.8486328125
patch: case Token . AND : : .
rank: 47
score: 99.39907438858695
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( parent ) ) {
rank: 47
score: 99.28203667534723
patch: case Node CaMeL Util . is CaMeL Lhs ( n . get CaMeL Type ( ) )
rank: 47
score: 99.14698282877605
patch: case Token . AND : case Token . TARGET : :
rank: 47
score: 99.1076151529948
patch: case Token . OR : case Token . AND : {
rank: 47
score: 99.09284002130681
patch: case Token . AND : case Property . AND :
rank: 47
score: 99.02703302556819
patch: case Boolean . AND : case Token . AND :
rank: 47
score: 98.84660034179687
patch: case Integer . AND : Token . AND :
rank: 48
score: 99.39900008491848
patch: switch ( Node CaMeL Util . is CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 48
score: 99.14597574869792
patch: case Token . AND : : case Token . NULL :
rank: 48
score: 99.140869140625
patch: case Token . consume ( Token . AND ) :
rank: 48
score: 99.10316975911458
patch: if ( n . is CaMeL Name ( ) ) {
rank: 48
score: 99.09016927083333
patch: case Token . AND : : return Token . AND ;
rank: 48
score: 98.84513346354167
patch: case Token . IN :
rank: 49
score: 99.39892578125
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) )
rank: 49
score: 99.13955688476562
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ;
rank: 49
score: 99.10302734375
patch: case Token . HOOK : case Token . ASSIGN :
rank: 49
score: 99.06585223858173
patch: case Node CaMeL Util . OR : case Token . AND :
rank: 49
score: 99.02552379261364
patch: case Token . : : case Token . NULL :
rank: 49
score: 98.83851453993056
patch: case 1 : case Token . AND :
rank: 50
score: 99.39455003004808
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL First CaMeL Child ( ) ,
rank: 50
score: 99.27819010416667
patch: if ( n . get CaMeL Type ( ) != Token . ASSIGN )
rank: 50
score: 99.10014204545455
patch: case Token . ASSIGN : case Token . OR :
rank: 50
score: 99.08619273792614
patch: case Type . AND : case Node . AND :
rank: 50
score: 99.0647723858173
patch: case Node CaMeL Util . HOOK : case Token . AND :
rank: 50
score: 99.0529276529948
patch: Node n = n . get CaMeL First ( ) ;
rank: 50
score: 99.02433638139205
patch: case Token . AND : case Token . : :
rank: 50
score: 98.83645629882812
patch: case Type . AND | Token . AND :
rank: 51
score: 99.39445356889205
patch: switch ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) {
rank: 51
score: 99.27748325892857
patch: if ( Node CaMeL Util . is CaMeL Name ( n ) )
rank: 51
score: 99.14285278320312
patch: case Token . AND : case Token . AND : case Token . NULL :
rank: 51
score: 99.13340407151442
patch: case Token . AND : case Token . TRUE : break ;
rank: 51
score: 99.0997823079427
patch: case Token . HOOK : case Token . HOOK : {
rank: 51
score: 99.0861307779948
patch: case Token . AND : Token case Node . AND :
rank: 51
score: 99.0599365234375
patch: node = n . get CaMeL First CaMeL Child ( ) ;
rank: 51
score: 99.0506258877841
patch: case Token . AND ; case Token . AND :
rank: 51
score: 99.021240234375
patch: case Token . : : :
rank: 51
score: 98.83364868164062
patch: case $STRING$ : : case Token . AND :
rank: 52
score: 99.394453125
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ) {
rank: 52
score: 99.2762451171875
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n , variable ) )
rank: 52
score: 99.14170328776042
patch: case Token . AND : case Token . RIGHT : :
rank: 52
score: 99.13329060872395
patch: case Token . AND : case Token . NO : :
rank: 52
score: 99.093505859375
patch: case Token . AND : case Token . ERROR :
rank: 52
score: 99.05930989583334
patch: case Token . AND : return Control CaMeL Flow CaMeL Graph . KILL ;
rank: 52
score: 99.05040486653645
patch: switch ( node . get CaMeL Type ( ) ) {
rank: 52
score: 99.0207852450284
patch: case Token . FALSE : case Token . TRUE :
rank: 52
score: 98.83291625976562
patch: case Token . RIGHT :
rank: 53
score: 99.39439561631944
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) , n ) ;
rank: 53
score: 99.27534315321181
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , ) ;
rank: 53
score: 99.13758433948864
patch: case Token . EMPTY : case Token . AND :
rank: 53
score: 99.05828302556819
patch: case Token . AND : return Token . READ ;
rank: 53
score: 99.01342163085937
patch: return Token . AND : : case $STRING$ :
rank: 53
score: 98.83064778645833
patch: case Token . NULL :
rank: 54
score: 99.2667236328125
patch: Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 54
score: 99.13656955295139
patch: if ( Token . EMPTY . equals ( n . get CaMeL String ( ) ) )
rank: 54
score: 99.13180338541666
patch: if ( Token . AND . equals ( Token . AND ) ) {
rank: 54
score: 99.09187825520833
patch: / switch ( n . get CaMeL Type ( ) )
rank: 54
score: 99.07735188802083
patch: case Token . AND : { case Node . AND :
rank: 54
score: 99.0475565592448
patch: / case Token . AND : case Token . AND :
rank: 54
score: 99.01154119318181
patch: case $STRING$ : case Token . AND : : :
rank: 54
score: 98.8306376139323
patch: case Token . NAME :
rank: 55
score: 99.39341517857143
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) ,
rank: 55
score: 99.26494683159723
patch: return Node CaMeL Util . is CaMeL Lhs ( n . get CaMeL Parent ( ) )
rank: 55
score: 99.13514293323864
patch: case Token . AND : case Token . LABEL :
rank: 55
score: 99.12994384765625
patch: if ( Token . AND ) {
rank: 55
score: 99.09176635742188
patch: case Token . AND : case Token . HOOK : }
rank: 55
score: 99.07555042613636
patch: return Token . AND : case Node . AND :
rank: 55
score: 99.04728190104167
patch: case Token = n . get CaMeL Next ( ) ;
rank: 55
score: 99.00016645951705
patch: case $STRING$ . case Token . AND : { :
rank: 55
score: 98.82906494140624
patch: case $NUMBER$ : : case Token . AND :
rank: 56
score: 99.39230213994566
patch: if ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) {
rank: 56
score: 99.262060546875
patch: return Node CaMeL Util . is CaMeL Lhs ( n , variable ) ;
rank: 56
score: 99.12856820913461
patch: case Token . AND : case Token . NULL : break ;
rank: 56
score: 99.12821451822917
patch: case Token . AND : case Token . decode ( :
rank: 56
score: 99.07246907552083
patch: case Node . AND : Token case Node . AND :
rank: 56
score: 99.05709075927734
patch: case Token . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) :
rank: 56
score: 98.9984463778409
patch: case Token . parse : case Token . AND :
rank: 56
score: 98.82617950439453
patch: case ( Token . AND : :
rank: 57
score: 99.26123046875
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill (
rank: 57
score: 99.12743268694196
patch: case Token . AND : case Token . case Token . AND :
rank: 57
score: 99.1258544921875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 57
score: 99.0722147623698
patch: case Token . AND : else return Token . AND :
rank: 57
score: 99.05624186197916
patch: case Token . AND : return n . get CaMeL Next ( ) ;
rank: 57
score: 99.04586791992188
patch: case Token . AND : case Token . AND finally :
rank: 57
score: 98.99723677201705
patch: case $STRING$ . case Token . AND : / :
rank: 57
score: 98.82460239955357
patch: case new Token . AND :
rank: 58
score: 99.3905719259511
patch: switch ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) {
rank: 58
score: 99.2609375
patch: if ( n . get CaMeL Type ( ) == Token . ASSIGN )
rank: 58
score: 99.12525634765625
patch: if ( Token . AND . AND . equals ( n . get CaMeL String ( ) ) )
rank: 58
score: 99.12502219460227
patch: case Token . AND : case Token . DEFAULT :
rank: 58
score: 99.08856201171875
patch: case Token . AND : case Token . OR : {
rank: 58
score: 99.07208251953125
patch: case Token . AND : return Token . AND : :
rank: 58
score: 99.05365349264706
patch: n . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) .
rank: 58
score: 98.9968594637784
patch: case Token . TRUE : case Token . NONE :
rank: 59
score: 99.38846390335648
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ,
rank: 59
score: 99.26009792751736
patch: super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 59
score: 99.1248779296875
patch: if ( Token . NULL == n . get CaMeL Type ( ) )
rank: 59
score: 99.122412109375
patch: case Token . AND : case Token . consume ( Token . AND :
rank: 59
score: 99.06944783528645
patch: case Token . AND : break : Token . AND :
rank: 59
score: 99.0518798828125
patch: n . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) :
rank: 59
score: 99.04266357421875
patch: case Token . ASSIGN :
rank: 59
score: 98.82084350585937
patch: case $STRING$ : if case Token . AND :
rank: 60
score: 99.25935194227431
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 60
score: 99.12452281605114
patch: if ( Token . AND || Token . TRUE . equals ( n . get CaMeL String ( ) ) )
rank: 60
score: 99.11865234375
patch: case Token . AND : case Token . AND : . AND :
rank: 60
score: 99.06856282552083
patch: break case Token . AND : case Token . AND :
rank: 60
score: 99.05135404146634
patch: case Token . AND : case Node CaMeL Util . HOOK :
rank: 60
score: 98.99514431423611
patch: case : case Token . AND : :
rank: 60
score: 98.81957329644098
patch: case * : case Token . AND :
rank: 61
score: 99.38578464673913
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 61
score: 99.2537841796875
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n )
rank: 61
score: 99.08341471354167
patch: if ( variable . equals ( Token . AND ) )
rank: 61
score: 99.06756591796875
patch: case Token . AND : . = Token . AND :
rank: 61
score: 99.0503662109375
patch: case Node CaMeL Util . AND : case Node CaMeL Util . AND :
rank: 61
score: 98.99259643554687
patch: case Token . TRUE : : case $STRING$ :
rank: 61
score: 98.81781616210938
patch: case ( $NUMBER$ : case Token . AND :
rank: 62
score: 99.38525390625
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ) {
rank: 62
score: 99.25373670789931
patch: case Node CaMeL Util . is CaMeL Name ( n . get CaMeL Parent ( ) )
rank: 62
score: 99.08299671519886
patch: switch ( n . get CaMeL String ( ) )
rank: 62
score: 99.06719970703125
patch: return Token . AND : : case Token . AND :
rank: 62
score: 98.9920883178711
patch: return Token . AND : : :
rank: 62
score: 98.81678009033203
patch: case Token . AND : . /
rank: 63
score: 99.38364664713542
patch: switch ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) {
rank: 63
score: 99.25335693359375
patch: return Node CaMeL Util . is CaMeL Lhs ( n . get CaMeL Next ( ) )
rank: 63
score: 99.12409319196429
patch: if ( Token . NULL . equals ( Token . AND ) )
rank: 63
score: 99.11562093098958
patch: case Token . NOT : case Token . AND : :
rank: 63
score: 99.0630391438802
patch: Token case Token . AND : case Token . AND :
rank: 63
score: 99.05002728630515
patch: n . get CaMeL Parent ( ) . get CaMeL Type ( ) . break ;
rank: 63
score: 99.03602183948864
patch: case Node . HOOK : case Token . AND :
rank: 63
score: 98.99189897017045
patch: case Token . : ? case Token . AND :
rank: 63
score: 98.81665649414063
patch: case * : if case Token . AND :
rank: 64
score: 99.38203568892045
patch: if ( Node CaMeL Util . is CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) )
rank: 64
score: 99.25209045410156
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 64
score: 99.11159446022727
patch: case Token . AND : case Token . class :
rank: 64
score: 99.0624287923177
patch: case Token . AND : type case Token . AND :
rank: 64
score: 99.04458438648896
patch: case Token . OR : return Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ;
rank: 64
score: 99.03566487630208
patch: case Token . AND : / * Token . AND :
rank: 64
score: 98.9911376953125
patch: case Token . AND : case $STRING$ : :
rank: 64
score: 98.81114501953125
patch: case Token . AND : Token . AND /
rank: 65
score: 99.38173647280092
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Last CaMeL Child ( ) ) ;
rank: 65
score: 99.25188131893383
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( this ) ;
rank: 65
score: 99.1203946200284
patch: case Token . EMPTY : case Token . NULL :
rank: 65
score: 99.11130593039773
patch: switch ( n . get CaMeL Type ( ) :
rank: 65
score: 99.07986450195312
patch: if ( n . is CaMeL Lhs ( ) ) {
rank: 65
score: 99.06224476207386
patch: if Token . AND : case Token . AND :
rank: 65
score: 99.04212535511364
patch: case Token . HOOK : return Token . AND :
rank: 65
score: 98.99086303710938
patch: case Token . : case Token . FALSE :
rank: 65
score: 98.81055365668402
patch: case Token . AND : case / :
rank: 66
score: 99.38166809082031
patch: if ( n . get CaMeL Type ( ) == Token . OR ) {
rank: 66
score: 99.251416015625
patch: if ( n . get CaMeL Type ( ) != Token . HOOK )
rank: 66
score: 99.10911342075893
patch: case Token . AND : case Token . AND : : break ;
rank: 66
score: 99.073876953125
patch: case Token . AND : / * * /
rank: 66
score: 99.06219482421875
patch: case Token . AND : else case Token . AND :
rank: 66
score: 99.03096516927083
patch: Node variable = n . get CaMeL Next ( ) ;
rank: 66
score: 98.81024169921875
patch: case - $NUMBER$ : case Token . AND :
rank: 67
score: 99.37838040865384
patch: Preconditions . check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 67
score: 99.10360378689236
patch: case Token . AND : : break ;
rank: 67
score: 99.0712178548177
patch: if ( variable . equals ( Token . HOOK ) )
rank: 67
score: 99.05922444661458
patch: case Node . AND : case Token . AND : :
rank: 67
score: 99.04002470128677
patch: case Token . OR : return n . get CaMeL First CaMeL Child ( ) ;
rank: 67
score: 98.98455255681819
patch: case Token . : : case Token . : :
rank: 68
score: 99.37833984375
patch: case Token . HOOK || Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 68
score: 99.2462158203125
patch: } switch ( n . get CaMeL Type ( ) ) {
rank: 68
score: 99.11790974934895
patch: case Token . AND : case Token . STRING : :
rank: 68
score: 99.10157359730114
patch: case Token . AND : case Token . FORMAT :
rank: 68
score: 99.06305486505681
patch: case Token . HOOK : return Token . OR ;
rank: 68
score: 99.0590108235677
patch: case Token . AND : } return Token . AND :
rank: 68
score: 99.0395866842831
patch: n . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ;
rank: 68
score: 99.02864583333333
patch: case Token . AND : / * Token . HOOK :
rank: 68
score: 98.9838134765625
patch: case Token . AND : : case 0 :
rank: 68
score: 98.8064676920573
patch: case Result . AND :
rank: 69
score: 99.37781292459239
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 69
score: 99.24574110243056
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , n ,
rank: 69
score: 99.1160555752841
patch: case Token . FUNCTION : case Token . AND :
rank: 69
score: 99.10005405970982
patch: case Token . AND : Token . AND : Token . AND :
rank: 69
score: 99.06276633522727
patch: case Token . READ : case Token . HOOK :
rank: 69
score: 98.98269653320312
patch: } : case Token . AND :
rank: 69
score: 98.80447387695312
patch: case 0 : : case Token . AND :
rank: 70
score: 99.37759254092262
patch: if ( Node CaMeL Util . is CaMeL Name ( n . get CaMeL First ( ) ) ) {
rank: 70
score: 99.24530029296875
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( , variable ) ;
rank: 70
score: 99.11597789417614
patch: case Token . NULL : case Token . EMPTY :
rank: 70
score: 99.09866536458334
patch: if ( node . get CaMeL Type ( ) == Token . AND :
rank: 70
score: 99.06053924560547
patch: case Token . HOOK : / /
rank: 70
score: 99.05669487847223
patch: case Token . AND : case Token :
rank: 70
score: 98.98148193359376
patch: case Token . AND : : : : :
rank: 70
score: 98.8001480102539
patch: case Integer . AND : break :
rank: 71
score: 99.3771441915761
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First ( ) ) ;
rank: 71
score: 99.11541748046875
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;
rank: 71
score: 99.09767503004808
patch: case Token . AND : case Token . AND : : :
rank: 71
score: 99.05965169270833
patch: if ( variable . equals ( Token . OR ) )
rank: 71
score: 99.05325317382812
patch: case Token . AND : case ? Token . AND :
rank: 71
score: 99.03579477163461
patch: case Token . AND : case Token . Token . AND :
rank: 71
score: 99.02248128255208
patch: case Token . AND : case Token . AND : else
rank: 71
score: 98.97991388494319
patch: case Token . TRUE : case Node . AND :
rank: 71
score: 98.799853515625
patch: case / : if case Token . AND :
rank: 72
score: 99.3770061990489
patch: switch ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) {
rank: 72
score: 99.24069552951389
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , n )
rank: 72
score: 99.11260986328125
patch: case Token . NONE : case Token . NULL : :
rank: 72
score: 99.0972567471591
patch: return Token . AND ; case Token . AND :
rank: 72
score: 99.05952592329545
patch: case Token . OR : return Token . OR ;
rank: 72
score: 99.03506673177084
patch: case Token . HOOK : return Control CaMeL Flow CaMeL Graph . KILL ;
rank: 72
score: 99.02028586647727
patch: case Node . AND : case Token . HOOK :
rank: 72
score: 98.79646809895833
patch: case Token . AND : case Integer :
rank: 73
score: 99.37654296875
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n , n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 73
score: 99.23961684283088
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( false ) ;
rank: 73
score: 99.11204020182292
patch: case Token . NULL : case Token . NONE : :
rank: 73
score: 99.0970458984375
patch: case Token . AND : case Token . VOID : :
rank: 73
score: 99.0594482421875
patch: case Token . AND : case Token . AND ;
rank: 73
score: 99.0508145419034
patch: case Token . AND : case Type . AND :
rank: 73
score: 99.01546223958333
patch: switch ( n . get CaMeL Key ( ) ) {
rank: 73
score: 98.97661798650569
patch: case Token . TRUE : case Token . EMPTY :
rank: 73
score: 98.79593331473214
patch: case Type . AND : .
rank: 74
score: 99.37612915039062
patch: if ( n . get CaMeL First CaMeL Child ( ) != null ) {
rank: 74
score: 99.23779296875
patch: if ( n . get CaMeL Type ( ) != Token . AND )
rank: 74
score: 99.1104736328125
patch: case Token . AND : case Token . CHECK : :
rank: 74
score: 99.09695199819711
patch: case Token . AND : case Token . EMPTY : break ;
rank: 74
score: 99.05837180397727
patch: case Token . READ : case Token . OR :
rank: 74
score: 99.05066935221355
patch: case Node . AND : { case Node . AND :
rank: 74
score: 98.97566361860795
patch: case Token . equals ( Token . AND : :
rank: 74
score: 98.79408569335938
patch: case Token . AND : case ? / :
rank: 75
score: 99.10985649956598
patch: if ( Token . AND . equals ( n . get CaMeL Type ( ) ) )
rank: 75
score: 99.04912719726562
patch: case Token . AND > Token . AND :
rank: 75
score: 99.0292724609375
patch: case Token . AND : Token . HOOK :
rank: 75
score: 99.01393636067708
patch: case Token . AND * / case Token . AND :
rank: 75
score: 98.97551935369319
patch: case Token . ERROR : case Token . AND :
rank: 75
score: 98.79264322916667
patch: case Token . AND : case null :
rank: 76
score: 99.37476603190105
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( parent ) ) {
rank: 76
score: 99.23581764914773
patch: case Node . HOOK : case Token . HOOK :
rank: 76
score: 99.1080322265625
patch: case Token . AND : case Token . LEFT : :
rank: 76
score: 99.09588623046875
patch: case Token . TYPE : case Token . AND : :
rank: 76
score: 99.05328369140625
patch: case Token . OR : case Token . HOOK : }
rank: 76
score: 99.0482889811198
patch: case Node . AND : case Node . AND : {
rank: 76
score: 99.02737630208334
patch: n . get CaMeL Parent ( ) . get CaMeL Type ( ) :
rank: 76
score: 99.01071166992188
patch: case Node = n . get CaMeL Next ( ) ;
rank: 76
score: 98.97356567382812
patch: case Token . AND : : case $STRING$ {
rank: 76
score: 98.79107666015625
patch: case Integer . AND : : :
rank: 77
score: 99.37471829927884
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Last CaMeL Child ( ) ,
rank: 77
score: 99.23239474826389
patch: if ( variable . equals ( n . get CaMeL First CaMeL Child ( ) ) )
rank: 77
score: 99.09573974609376
patch: case Token . AND : Token . TRUE :
rank: 77
score: 99.0522793856534
patch: case Token . OR : case Token . READ :
rank: 77
score: 99.0478006998698
patch: case Node . AND : case Node . AND : :
rank: 77
score: 99.02569025213069
patch: expr = n . get CaMeL Next ( ) ;
rank: 77
score: 99.00879923502605
patch: return n . get CaMeL Next ( ) ; default :
rank: 77
score: 98.97298177083333
patch: case Token . TRUE : case $STRING$ :
rank: 77
score: 98.79075927734375
patch: case Type . AND + Token . AND :
rank: 78
score: 99.37450408935547
patch: if ( n . get CaMeL Type ( ) == Token . ASSIGN ) {
rank: 78
score: 99.23212076822917
patch: if ( n . get CaMeL Type ( ) == Token . HOOK )
rank: 78
score: 99.10622151692708
patch: case Token . EMPTY : case Token . EMPTY : :
rank: 78
score: 99.09531947544643
patch: if ( Token . AND . equals ( Token . NONE ) )
rank: 78
score: 99.04330444335938
patch: case Type . AND : Token case Token . AND :
rank: 78
score: 99.02495930989583
patch: case Node CaMeL Util . AND : case Node CaMeL Util . HOOK :
rank: 78
score: 99.00824584960938
patch: if ( n . get CaMeL Type ( )
rank: 78
score: 98.97011108398438
patch: case Token . : case Token . TRUE :
rank: 78
score: 98.78971099853516
patch: case Token . AND : AND :
rank: 79
score: 99.374453125
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Parent ( ) , variable ) ;
rank: 79
score: 99.22993299696181
patch: if ( n . get CaMeL Type ( ) . equals ( Token . ASSIGN ) )
rank: 79
score: 99.09521484375
patch: break ; case Token . AND : case Token . AND :
rank: 79
score: 99.0232177734375
patch: case Token . HOOK : return n . get CaMeL Next ( ) ;
rank: 79
score: 99.00555419921875
patch: case Node = n . get CaMeL First ( ) ;
rank: 79
score: 98.96993001302083
patch: case $STRING$ : case Token . TRUE :
rank: 79
score: 98.7890869140625
patch: case Token . AND : Token . AND ,
rank: 80
score: 99.37413441051136
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 80
score: 99.22904698988971
patch: if ( n . get CaMeL Type ( ) . is CaMeL Name ( ) )
rank: 80
score: 99.10504150390625
patch: return Token . AND ; case Token . AND : :
rank: 80
score: 99.09469401041666
patch: case Token . AND : case Token . AND | Token . AND :
rank: 80
score: 99.03902435302734
patch: case Token . OR : / /
rank: 80
score: 98.96822357177734
patch: case $STRING$ case Token . AND :
rank: 80
score: 98.78870239257813
patch: case -- : if case Token . AND :
rank: 81
score: 99.373310546875
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( child CaMeL Value ) ) {
rank: 81
score: 99.22759331597223
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( variable ) ; }
rank: 81
score: 99.10479266826923
patch: case Token . AND : : case Token . AND : :
rank: 81
score: 99.0938212076823
patch: case Token . TYPE : case Token . TYPE : :
rank: 81
score: 99.03839111328125
patch: case Token . AND : Token = Token . AND :
rank: 81
score: 99.03682084517045
patch: case Token . AND : case Token . ) :
rank: 81
score: 99.02146559495192
patch: case Node CaMeL Util . AND : case Token . HOOK :
rank: 81
score: 98.96785278320313
patch: case Token . AND : : case : {
rank: 81
score: 98.78854709201389
patch: case null : case Token . AND :
rank: 82
score: 99.37251790364583
patch: case Token . HOOK : return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 82
score: 99.2261734008789
patch: return n . get CaMeL Parent ( ) . get CaMeL Type ( ) ;
rank: 82
score: 99.0380350748698
patch: case Node . AND : case Token . AND : {
rank: 82
score: 98.78848266601562
patch: case Token . STRING :
rank: 83
score: 99.37037109375
patch: check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) , variable ,
rank: 83
score: 99.10214233398438
patch: case Token . AND : case Token . NAME : :
rank: 83
score: 99.03778076171875
patch: case Token . AND > : case Token . AND :
rank: 83
score: 99.0351229580966
patch: case Token . OR : case Node . AND :
rank: 83
score: 99.01780072380515
patch: if ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill (
rank: 83
score: 98.96277965198864
patch: return : Token . AND : Token . AND :
rank: 83
score: 98.78740844726562
patch: case ( Integer : case Token . AND :
rank: 84
score: 99.225830078125
patch: case Token . HOOK : case Node . HOOK :
rank: 84
score: 99.0996826171875
patch: if ( n . get CaMeL Type ( ) == Token . NULL )
rank: 84
score: 99.03623453776042
patch: case Token . AND : case Node . AND : }
rank: 84
score: 99.0344970703125
patch: case Token . HOOK : / * * /
rank: 84
score: 99.0170539407169
patch: if ( variable . equals ( n . get CaMeL String ( ) ) ) {
rank: 84
score: 98.99968927556819
patch: case Node . OR : case Token . AND :
rank: 84
score: 98.96117054332386
patch: case Token . arraycopy : case Token . AND :
rank: 84
score: 98.78502197265625
patch: case Type . AND || Token . AND :
rank: 85
score: 99.2241569967831
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n != null
rank: 85
score: 99.09011008522727
patch: case Token . AND : case Token . UNKNOWN :
rank: 85
score: 99.03444602272727
patch: case Token . OR : case Token . ERROR :
rank: 85
score: 99.0340576171875
patch: if Token . AND ? Token . AND :
rank: 85
score: 98.99885697798295
patch: case Token . AND : case Token . WARNING :
rank: 85
score: 98.95944213867188
patch: case $STRING$ . case Token . AND : :
rank: 85
score: 98.78325737847223
patch: case Token . AND : . / /
rank: 86
score: 99.36805826822916
patch: if ( Node CaMeL Util . is CaMeL Name ( variable ) ) {
rank: 86
score: 99.22187805175781
patch: if ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) )
rank: 86
score: 99.09881232766544
patch: case Token . AND : case Token . AND : case Token . AND : :
rank: 86
score: 99.08971228966347
patch: case Token . starts CaMeL With ( Token . AND ) :
rank: 86
score: 98.7830322265625
patch: case Token . AND : if case 0 :
rank: 87
score: 99.36770395132211
patch: super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) , variable ) ;
rank: 87
score: 99.22118268694196
patch: if ( Node CaMeL Util . is CaMeL Name ( variable ) )
rank: 87
score: 99.08946736653645
patch: case Token . AND : case Token . IN : :
rank: 87
score: 99.03204900568181
patch: break Token . AND : case Token . AND :
rank: 87
score: 99.01343790690105
patch: break n . get CaMeL First CaMeL Child ( ) ;
rank: 87
score: 98.996484375
patch: / * * / case Token . AND :
rank: 87
score: 98.95580444335937
patch: return Token . AND : : case $STRING$ ;
rank: 87
score: 98.7821553548177
patch: case Token . AND ,
rank: 88
score: 99.09534912109375
patch: if ( Token . AND . AND . equals ( n . get CaMeL Type ( ) ) )
rank: 88
score: 99.0318094889323
patch: case Node . AND : } case Token . AND :
rank: 88
score: 99.02394797585227
patch: if ( n . get CaMeL Type ( ) )
rank: 88
score: 98.94994439019098
patch: } : : case Token . AND :
rank: 88
score: 98.77999267578124
patch: case 1 : if case Token . AND :
rank: 89
score: 99.36681676793981
patch: if ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) ,
rank: 89
score: 99.0877685546875
patch: case Token . AND : case Token . ALL :
rank: 89
score: 99.028564453125
patch: if Token . AND :
rank: 89
score: 99.02277166193181
patch: case Token . HOOK : case Token . FUNCTION :
rank: 89
score: 99.01275165264423
patch: case Token . Token . AND : case Token . HOOK :
rank: 89
score: 98.94989568536931
patch: case Token . FALSE : case Token . NONE :
rank: 89
score: 98.77894592285156
patch: case Type . Token . AND :
rank: 90
score: 99.36632770040761
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) )
rank: 90
score: 99.21310604319854
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ) ;
rank: 90
score: 99.0919189453125
patch: case Token . NULL : case Token . TYPE : :
rank: 90
score: 99.08612932477679
patch: case Token . AND : break ; case Token . AND : :
rank: 90
score: 99.02829996744792
patch: case Token . AND * : case Token . AND :
rank: 90
score: 99.02256081321023
patch: case Token . AND : case Node . HOOK :
rank: 90
score: 98.99244273792614
patch: case Token . HOOK : case Node . AND :
rank: 90
score: 98.94981553819444
patch: case Token . : : case $STRING$ :
rank: 90
score: 98.77811686197917
patch: case Token . AND : break : :
rank: 91
score: 99.3660546875
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Next ( ) , variable ) ;
rank: 91
score: 99.21307732077206
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( parent ) ;
rank: 91
score: 99.08802379261364
patch: case Token . AND : case Token . EXPRESSION :
rank: 91
score: 99.02805582682292
patch: case Node . AND : switch case Token . AND :
rank: 91
score: 99.0220947265625
patch: switch ( n . get CaMeL Next ( ) )
rank: 91
score: 99.0095573874081
patch: expr = n . get CaMeL Next ( ) . get CaMeL Next ( ) ;
rank: 91
score: 98.94803466796876
patch: case Token . AND : : Token { :
rank: 91
score: 98.77659912109375
patch: case Token . AND : : : break :
rank: 92
score: 99.36536661783855
patch: check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First ( ) , variable ) ;
rank: 92
score: 99.21275111607143
patch: Node node = n . get CaMeL First CaMeL Child ( ) ;
rank: 92
score: 99.08757781982422
patch: if ( node . get CaMeL Type ( ) == Token . AND ) {
rank: 92
score: 99.02559204101563
patch: case Token . AND * Token . AND :
rank: 92
score: 99.0194091796875
patch: case Token . HOOK : case Token . READ :
rank: 92
score: 99.0081787109375
patch: n . get CaMeL Parent ( ) . get CaMeL Type ( ) . code :
rank: 92
score: 98.94779052734376
patch: case 0 : case Token . AND : :
rank: 92
score: 98.7754638671875
patch: case Integer . AND | Token . AND :
rank: 93
score: 99.21155503216912
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( type ) ;
rank: 93
score: 99.08162434895833
patch: if ( Token . AND && Token . AND ) {
rank: 93
score: 99.02175903320312
patch: case Node . AND : Token . AND :
rank: 93
score: 98.9886807528409
patch: case Node . AND : case Token . OR :
rank: 93
score: 98.94754638671876
patch: case $STRING$ : case Token . AND : {
rank: 93
score: 98.77507188585069
patch: case Token . AND : : if :
rank: 94
score: 99.36262313179348
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( this ) ) {
rank: 94
score: 99.20828067555146
patch: throw is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 94
score: 99.08602905273438
patch: case Token . NAME : case Token . AND : :
rank: 94
score: 99.08155924479166
patch: if ( n . get CaMeL Type ( ) == Token . TYPE )
rank: 94
score: 99.0203857421875
patch: case Token . AND : case Integer . AND : :
rank: 94
score: 99.00487467447917
patch: n . get CaMeL Parent ( ) . get CaMeL Type ( ) .
rank: 94
score: 98.98805541992188
patch: return Control CaMeL Flow CaMeL Graph . READ ;
rank: 94
score: 98.94740125868056
patch: case Token . AND : : Token {
rank: 94
score: 98.77452935112848
patch: case Token . AND : : / :
rank: 95
score: 99.36160411005434
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL String ( ) ) ;
rank: 95
score: 99.08338120404412
patch: if ( Token . NULL . equals ( n . get CaMeL String ( ) :
rank: 95
score: 99.0812655362216
patch: case Token . NULL : case Token . NONE :
rank: 95
score: 99.01950073242188
patch: break : case Token . AND :
rank: 95
score: 98.94550170898438
patch: case Token . TRUE : : case $STRING$ ;
rank: 95
score: 98.77171020507812
patch: case Token . parse case Token . AND :
rank: 96
score: 99.36150251116071
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , variable , variable ) ;
rank: 96
score: 99.01893107096355
patch: case Token . AND : Token return Token . AND :
rank: 96
score: 99.0115234375
patch: if ( variable . equals ( variable ) )
rank: 96
score: 99.00392061121323
patch: case Token . AND : return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill (
rank: 96
score: 98.9874600497159
patch: case Token . NAME : case Token . HOOK :
rank: 96
score: 98.9426040649414
patch: case : case Token . TRUE :
rank: 96
score: 98.7673095703125
patch: case Token . Definition . AND : break :
rank: 97
score: 99.36030910326087
patch: check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) ,
rank: 97
score: 99.20455932617188
patch: if ( variable . equals ( n . get CaMeL Parent ( ) ) )
rank: 97
score: 99.08050944010417
patch: if ( n . get CaMeL Type ( ) == Token . NONE )
rank: 97
score: 99.0177001953125
patch: case Token . AND ++ : case Token . AND :
rank: 97
score: 99.00365397135417
patch: case Token . AND : case Node CaMeL Util . Token . AND :
rank: 97
score: 98.94220581054688
patch: case Token . AND : : case : :
rank: 97
score: 98.76686401367188
patch: case Integer . AND + Token . AND :
rank: 98
score: 99.35799153645833
patch: if ( Node CaMeL Util . is CaMeL Name ( n . get CaMeL String ( ) ) ) {
rank: 98
score: 99.20323270909927
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( name ) ;
rank: 98
score: 99.08013509114583
patch: Token . AND : case Token . AND : case Token . AND :
rank: 98
score: 99.07923235212054
patch: case Token . AND : Token . AND | Token . AND :
rank: 98
score: 99.01547241210938
patch: case Node . AND : . case Token . AND :
rank: 98
score: 99.00986550071023
patch: case Token . AND : case Node . OR :
rank: 98
score: 99.00338541666666
patch: case Token . HOOK : return Node CaMeL Util . MAYBE _ LIVE ;
rank: 98
score: 98.98536173502605
patch: return n . get CaMeL First ( ) ; default :
rank: 98
score: 98.9416748046875
patch: case : case Token . TRUE : : :
rank: 98
score: 98.76660834418402
patch: case Token . Definition . AND : :
rank: 99
score: 99.35767415364583
patch: switch ( Node CaMeL Util . get CaMeL Name ( n ) ) {
rank: 99
score: 99.07970513237848
patch: if ( Token . NULL . equals ( n . get CaMeL String ( ) ) :
rank: 99
score: 99.07852172851562
patch: case Token . AND : Token . TRUE : break ;
rank: 99
score: 99.01519775390625
patch: case Type . AND : : return Token . AND :
rank: 99
score: 99.00740189985795
patch: case Token . OR : return Token . KILL ;
rank: 99
score: 98.93792046440973
patch: case Token . : case Token . :
rank: 99
score: 98.76650390625
patch: case Token . AND case Token . AND :
rank: 100
score: 99.35732797475961
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ) {
rank: 100
score: 99.20232077205883
patch: if ( n . get CaMeL Parent ( ) . is CaMeL Name ( ) )
rank: 100
score: 99.07808061079545
patch: case Token . AND : case Token . YES :
rank: 100
score: 99.07765891335227
patch: if ( Token . AND || Token . NULL . equals ( n . get CaMeL String ( ) ) )
rank: 100
score: 99.01483709161931
patch: case Integer . AND : case Token . AND :
rank: 100
score: 99.00579833984375
patch: if ( variable == null ) {
rank: 100
score: 99.00214700137867
patch: expr = n . get CaMeL First ( ) . get CaMeL Next ( ) ;
rank: 100
score: 98.98382568359375
patch: Node variable = n . get CaMeL First ( ) ;
rank: 100
score: 98.937841796875
patch: case Token . FALSE : : case $STRING$ :
rank: 100
score: 98.76643676757813
patch: case / * : case Token . AND :
rank: 101
score: 99.35600353422619
patch: if ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) {
rank: 101
score: 99.20108235677084
patch: if ( n . get CaMeL Type ( ) != Token . OR )
rank: 101
score: 99.07743326822917
patch: case Token . AND : case Token . AND || Token . AND :
rank: 101
score: 99.01417032877605
patch: return case Token . AND : case Token . AND :
rank: 101
score: 99.001318359375
patch: n . get CaMeL Parent ( ) . get CaMeL Type ( ) ;
rank: 101
score: 98.93726264105902
patch: case : : case Token . AND :
rank: 102
score: 99.355908203125
patch: if ( Node CaMeL Util . is CaMeL Name ( n , n . get CaMeL Last CaMeL Child ( ) ) ) {
rank: 102
score: 99.07268415178571
patch: if ( Token . AND )
rank: 102
score: 99.00918579101562
patch: case Token . AND : Token case Type . AND :
rank: 102
score: 99.00553755326705
patch: case Token . HOOK : case Token . ERROR :
rank: 102
score: 98.76536051432292
patch: case Type . NOT :
rank: 103
score: 99.19865866268383
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 103
score: 99.07366943359375
patch: case Token . NULL : case Token . FUNCTION : :
rank: 103
score: 99.07239583333333
patch: case Token . AND | Token . AND : case Token . AND :
rank: 103
score: 99.00912475585938
patch: case Token . AND : type = Token . AND :
rank: 103
score: 99.00546700613839
patch: case Token . OR : {
rank: 103
score: 99.00081634521484
patch: case Token . AND : case Token . AND : case Token . HOOK :
rank: 103
score: 98.98213704427083
patch: if ( n . get CaMeL String ( ) ) {
rank: 103
score: 98.9344253540039
patch: case Token . TRUE : : :
rank: 103
score: 98.76476372612848
patch: case char : case Token . AND :
rank: 104
score: 99.35459833559783
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ;
rank: 104
score: 99.19862994025735
patch: if ( n . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) )
rank: 104
score: 99.07297770182292
patch: case Token . AND : : case Token . EMPTY :
rank: 104
score: 99.07082895132211
patch: case Token . AND : break ; case Token . NONE :
rank: 104
score: 99.00832112630208
patch: case Node . AND : return case Token . AND :
rank: 104
score: 99.00473361545139
patch: case Token . AND : return null ;
rank: 104
score: 98.92808702256944
patch: case Token . AND : Token { :
rank: 104
score: 98.76417846679688
patch: case * * : case Token . AND :
rank: 105
score: 99.3542578125
patch: case Token . OR || Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 105
score: 99.19669596354167
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 105
score: 99.07034505208334
patch: case Token . AND : case Token . NOT : Token . AND :
rank: 105
score: 99.007568359375
patch: } Token case Token . AND :
rank: 105
score: 98.927392578125
patch: case Token . TRUE | Token . AND :
rank: 105
score: 98.76405639648438
patch: case ( ? : case Token . AND :
rank: 106
score: 99.35407820991848
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Type ( ) ) ;
rank: 106
score: 99.19582693917411
patch: case Node CaMeL Util . is CaMeL Lhs ( n , n )
rank: 106
score: 99.07013408954327
patch: case Token . AND : case Token . AND : default :
rank: 106
score: 99.06884765625
patch: case Token . AND : case Token . LABEL : :
rank: 106
score: 99.00559303977273
patch: case Node . AND : case Object . AND :
rank: 106
score: 99.00173514229911
patch: case Token . AND : }
rank: 106
score: 99.0001220703125
patch: break n . get CaMeL Parent ( ) . get CaMeL Type ( ) ;
rank: 106
score: 98.92650689019098
patch: case Token . : case $STRING$ : :
rank: 106
score: 98.76229519314236
patch: case Integer : if Token . AND :
rank: 107
score: 99.35364708533653
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) , n ,
rank: 107
score: 99.19565716911765
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( $STRING$ ) ;
rank: 107
score: 99.06987653459821
patch: case Token . AND || Token . AND || Token . AND :
rank: 107
score: 99.06778971354167
patch: case Token . TRUE : case Token . AND : :
rank: 107
score: 99.00506591796875
patch: case Token . AND : / case Token . AND :
rank: 107
score: 99.0016202059659
patch: switch ( n . get CaMeL Node ( ) )
rank: 107
score: 98.99965256911058
patch: case Token . Token . OR : case Token . AND :
rank: 107
score: 98.97882634943181
patch: if ( variable . equals ( variable ) ) {
rank: 107
score: 98.92603759765625
patch: case : : case Token . AND : :
rank: 107
score: 98.76207817925348
patch: case Token . AND : case $NUMBER$ :
rank: 108
score: 99.06707208806819
patch: case Token . AND : case Token . LINE :
rank: 108
score: 99.003662109375
patch: case Token . AND : switch Token . AND :
rank: 108
score: 98.99728190104166
patch: case Node CaMeL Util . OR : case Node CaMeL Util . AND :
rank: 108
score: 98.9232177734375
patch: case $STRING$ :
rank: 108
score: 98.76157633463542
patch: case Integer . 0 :
rank: 109
score: 99.35314360119048
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 109
score: 99.19337463378906
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n , n ) )
rank: 109
score: 99.06748268821023
patch: case Token . AND : case Token . CONTINUE :
rank: 109
score: 99.0640536221591
patch: if ( Token . AND || Token . EMPTY . equals ( n . get CaMeL String ( ) ) )
rank: 109
score: 99.00351969401042
patch: case Token . AND : case Object . AND : :
rank: 109
score: 99.00095436789773
patch: case Token . OR : case Token . FUNCTION :
rank: 109
score: 98.99559437144886
patch: case Token . HOOK : return Token . KILL ;
rank: 109
score: 98.97513580322266
patch: / * case Token . AND :
rank: 109
score: 98.9231465657552
patch: case $STRING$ : case :
rank: 109
score: 98.76023864746094
patch: case Type . Type . AND :
rank: 110
score: 99.35302734375
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Parent ( ) ,
rank: 110
score: 99.19237518310547
patch: check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 110
score: 99.06739390980114
patch: case Token . AND : Token . AND : :
rank: 110
score: 99.06362017463235
patch: case Token . AND : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 110
score: 99.00175337357955
patch: final Token . AND : case Token . AND :
rank: 110
score: 99.00001109730114
patch: case Token . OR : return Token . READ ;
rank: 110
score: 98.99532376802884
patch: result = n . get CaMeL First CaMeL Child ( ) ;
rank: 110
score: 98.96018288352273
patch: case Token . AND : case Token . NEW :
rank: 110
score: 98.75911865234374
patch: case Token . AND : case ? * /
rank: 111
score: 99.35302734375
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) , false ) ;
rank: 111
score: 99.19218444824219
patch: if ( variable . equals ( n . get CaMeL String ( ) ) )
rank: 111
score: 99.06695556640625
patch: if ( Token . TRUE . equals ( Token . AND ) )
rank: 111
score: 99.00062052408855
patch: return Token . AND : case Token . AND : :
rank: 111
score: 98.99950062144886
patch: if ( n . is CaMeL Lhs ( ) )
rank: 111
score: 98.99473571777344
patch: break n . get CaMeL Parent ( ) . get CaMeL Type ( ) :
rank: 111
score: 98.922705078125
patch: case : case Token . : : : :
rank: 111
score: 98.75899658203124
patch: case - AND : case Token . AND :
rank: 112
score: 99.35264521059783
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( )
rank: 112
score: 99.0621337890625
patch: case Token . AND : case Token . case Token . NULL :
rank: 112
score: 99.00041060014205
patch: case Token . AND : : Token . AND :
rank: 112
score: 98.9986801147461
patch: if ( variable != null ) {
rank: 112
score: 98.99368286132812
patch: case String . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) :
rank: 112
score: 98.92178344726562
patch: case Token . : case Token . NONE :
rank: 112
score: 98.758544921875
patch: case Token . AND : if :
rank: 113
score: 99.35204173900463
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) , $STRING$ ) ;
rank: 113
score: 99.1868537454044
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( true ) ;
rank: 113
score: 99.06671142578125
patch: case Token . AND : if ( Token . AND )
rank: 113
score: 99.06197317023026
patch: if ( Token . NULL . equals ( n . get CaMeL String ( ) ) ) {
rank: 113
score: 98.92109375
patch: case Token . AND : . case $STRING$ :
rank: 113
score: 98.75578962053571
patch: case Token . TYPE : :
rank: 114
score: 99.35072835286458
patch: throw check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) ,
rank: 114
score: 99.06637573242188
patch: case Token . AND : case Token . FALSE : :
rank: 114
score: 99.06102498372395
patch: case Token . FUNCTION : case Token . AND : :
rank: 114
score: 98.9990234375
patch: / Token . AND : case Token . AND :
rank: 114
score: 98.99209798177084
patch: case Node CaMeL Util . Token . AND : case Token . HOOK :
rank: 114
score: 98.92023468017578
patch: case : case Token . : :
rank: 114
score: 98.75572374131944
patch: case Token . AND : case 1 :
rank: 115
score: 99.349921875
patch: case Token . AND || Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 115
score: 99.18531087239583
patch: case Node CaMeL Util . is CaMeL Lhs ( n , variable ) ;
rank: 115
score: 99.06606223366477
patch: if ( Token . AND && Token . AND )
rank: 115
score: 99.06060236150569
patch: case Token . NONE : case Token . NULL :
rank: 115
score: 98.99672154017857
patch: Token case Token . AND :
rank: 115
score: 98.99198608398437
patch: case Token . OR : / * * /
rank: 115
score: 98.99054424579327
patch: case Token . OR : case Node CaMeL Util . AND :
rank: 115
score: 98.91885375976562
patch: case $STRING$ : : case $STRING$ :
rank: 115
score: 98.75541856553819
patch: case / : case Token . AND :
rank: 116
score: 99.34981282552083
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First ( ) , variable ,
rank: 116
score: 99.18519502527573
patch: if ( n . get CaMeL Parent ( ) . is CaMeL Lhs ( ) )
rank: 116
score: 98.99602593315973
patch: case Token . AND : case Exception :
rank: 116
score: 98.99163263494319
patch: case Token . AND : case Type . HOOK :
rank: 116
score: 98.99033490349265
patch: n . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) {
rank: 116
score: 98.95175170898438
patch: case Node CaMeL Util . READ :
rank: 116
score: 98.91834106445313
patch: } : : case Token . AND : {
rank: 116
score: 98.75505235460069
patch: case Type . AND : : break :
rank: 117
score: 99.06446251502403
patch: case Token . AND : break ; case Token . NULL :
rank: 117
score: 99.05950249565973
patch: if ( Token . NULL . equals ( n . get CaMeL Type ( ) ) )
rank: 117
score: 98.9957987467448
patch: Token . AND : case Token . AND : break :
rank: 117
score: 98.98779296875
patch: case Node CaMeL Util . AND : case Token . OR :
rank: 117
score: 98.9512606534091
patch: case Token . NOT : case Token . HOOK :
rank: 117
score: 98.91720581054688
patch: } case $STRING$ : case Token . AND :
rank: 117
score: 98.75385393415179
patch: if case Token . AND :
rank: 118
score: 99.34888756793478
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Parent ( ) ) ;
rank: 118
score: 99.18299102783203
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n )
rank: 118
score: 99.06362479073661
patch: if ( Token . AND . equals ( Token . TRUE ) )
rank: 118
score: 99.05918375651042
patch: case Token . STRING : case Token . AND : :
rank: 118
score: 98.9949063387784
patch: case Token . AND : return Node . AND :
rank: 118
score: 98.9906005859375
patch: if ( n . is CaMeL Name ( ) )
rank: 118
score: 98.98705336626838
patch: node = n . get CaMeL Next ( ) . get CaMeL Next ( ) ;
rank: 118
score: 98.947119140625
patch: return Control CaMeL Flow CaMeL Graph . KILL ;
rank: 118
score: 98.91624755859375
patch: Token . AND : case Token . AND :
rank: 118
score: 98.75352986653645
patch: case Token . MIN :
rank: 119
score: 99.34726097470238
patch: if ( Node CaMeL Util . is CaMeL Name ( n . get CaMeL Type ( ) ) ) {
rank: 119
score: 99.05912642045455
patch: case Token . STRING : case Token . AND :
rank: 119
score: 98.99424235026042
patch: { case Token . AND : case Token . AND :
rank: 119
score: 98.9901123046875
patch: if ( variable . equals ( ) ) {
rank: 119
score: 98.94392903645833
patch: / * / case Token . HOOK :
rank: 119
score: 98.91024780273438
patch: case Boolean . AND :
rank: 119
score: 98.75193277994792
patch: case Type . Definition . AND : :
rank: 120
score: 99.3471875
patch: Preconditions . check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) ,
rank: 120
score: 99.06320626395089
patch: break Token . AND | Token . AND | Token . AND :
rank: 120
score: 99.05909729003906
patch: case Token . AND : case Token . TYPE : case Token . TYPE :
rank: 120
score: 98.99405924479167
patch: case Token . AND : Token . AND : break :
rank: 120
score: 98.98571014404297
patch: System . out . println ( n . get CaMeL String ( ) ) ;
rank: 120
score: 98.90947265625
patch: case Token . FALSE : : case $STRING$ ;
rank: 120
score: 98.75114222935268
patch: case Token . NOT : :
rank: 121
score: 99.346357421875
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) {
rank: 121
score: 99.18184988839286
patch: case Node = n . get CaMeL First CaMeL Child ( ) ;
rank: 121
score: 99.06289672851562
patch: break ; case Token . AND :
rank: 121
score: 99.05759974888393
patch: return Token . AND | Token . AND | Token . AND ;
rank: 121
score: 98.9921875
patch: if Token . AND : case Node . AND :
rank: 121
score: 98.98944646661931
patch: case Token . HOOK : return Token . READ ;
rank: 121
score: 98.98482019761029
patch: expr = n . get CaMeL Node ( ) . get CaMeL Next ( ) ;
rank: 121
score: 98.90745239257812
patch: case Token . AND : . case : {
rank: 121
score: 98.75047471788194
patch: case -- : case Token . AND :
rank: 122
score: 99.34596946022727
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Next ( ) ,
rank: 122
score: 99.18177795410156
patch: case Token . HOOK : case Token . HOOK : case Token . HOOK :
rank: 122
score: 99.06242231889205
patch: case Token . VOID : case Token . AND :
rank: 122
score: 98.991455078125
patch: case Token . AND : switch ( Token . AND :
rank: 122
score: 98.74974822998047
patch: case Token . AND : case ?
rank: 123
score: 99.34525240384616
patch: case Token . HOOK : return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 123
score: 99.18046061197917
patch: if ( n . get CaMeL Type ( ) == Token . OR )
rank: 123
score: 99.06219012920673
patch: if ( Token . AND ) { case Token . AND :
rank: 123
score: 99.05747292258523
patch: case Token . AND : case Token . COLON :
rank: 123
score: 98.9876376065341
patch: case Token . AND : case Token . n :
rank: 123
score: 98.984619140625
patch: case Token . AND : case Node CaMeL Util . OR :
rank: 123
score: 98.905224609375
patch: case Token . AND : : case $STRING$ .
rank: 123
score: 98.74906005859376
patch: case Token . AND : case ? break :
rank: 124
score: 99.34391276041667
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) , null ) ;
rank: 124
score: 99.17324649586396
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , variable ) ;
rank: 124
score: 99.05738067626953
patch: case Token . AND : case Token . TYPE : case Token . AND :
rank: 124
score: 98.99076334635417
patch: case Token . AND ? : case Token . AND :
rank: 124
score: 98.98707164417614
patch: case Token . AND : case Token . OR ;
rank: 124
score: 98.9843521118164
patch: n . get CaMeL Parent ( ) . get CaMeL Type ( ) . :
rank: 124
score: 98.90445285373264
patch: case Token . AND : : case :
rank: 124
score: 98.74769287109375
patch: case null : : case Token . AND :
rank: 125
score: 99.34360758463542
patch: switch ( n . get CaMeL Parent ( ) . get CaMeL Type ( ) ) {
rank: 125
score: 99.17298990885416
patch: if ( n . get CaMeL First CaMeL Child ( ) != null )
rank: 125
score: 99.05589076450893
patch: case Token . decode ( n . get CaMeL String ( ) )
rank: 125
score: 98.99053955078125
patch: case Token . EMPTY : : case Token . AND :
rank: 125
score: 98.98398659446023
patch: case Token . HOOK : return Token . HOOK :
rank: 125
score: 98.90354614257812
patch: case : : : case Token . AND :
rank: 125
score: 98.74718627929687
patch: case Token . AND + AND : break :
rank: 126
score: 99.34275535300925
patch: if ( Node CaMeL Util . is CaMeL Name ( n . get CaMeL Parent ( ) . get CaMeL Type ( ) ) ) {
rank: 126
score: 99.0601806640625
patch: if ( Token . NOT . equals ( Token . AND ) )
rank: 126
score: 99.05583190917969
patch: case Token . AND : case Token . NULL : case Token . AND :
rank: 126
score: 98.9889424641927
patch: case Node . AND : return case Node . AND :
rank: 126
score: 98.9861172762784
patch: case Token . OR : case Node . HOOK :
rank: 126
score: 98.9007568359375
patch: case Token . FALSE : case $STRING$ :
rank: 126
score: 98.74669189453125
patch: case Token . AND : case ? / /
rank: 127
score: 99.34227498372395
patch: case Token . OR : return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 127
score: 99.17225646972656
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( variable )
rank: 127
score: 99.05500030517578
patch: case Token . AND : case Token . NULL : case Token . NULL :
rank: 127
score: 98.98782348632812
patch: if Token . AND || Token . AND :
rank: 127
score: 98.9851407137784
patch: case Token . OR : case Token . STRING :
rank: 127
score: 98.98255830652573
patch: expr = n . get CaMeL Parent ( ) . get CaMeL Type ( ) ;
rank: 127
score: 98.89912109375
patch: case Token . AND : : case Node {
rank: 127
score: 98.74346923828125
patch: case Token . AND : case / * /
rank: 128
score: 99.34154163707386
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) )
rank: 128
score: 99.1722412109375
patch: Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n )
rank: 128
score: 99.05584716796875
patch: case Token . AND : : break Token . AND :
rank: 128
score: 99.05495383522727
patch: case Token . EMPTY : case Token . EMPTY :
rank: 128
score: 98.98768107096355
patch: case Type . AND : : case Node . AND :
rank: 128
score: 98.98085374098558
patch: result = Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ;
rank: 128
score: 98.89878540039062
patch: case Token . : case Token . : :
rank: 128
score: 98.743212890625
patch: case Integer : case Token . AND : :
rank: 129
score: 99.34141474184783
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ref ) ) {
rank: 129
score: 99.17180319393383
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( null ) ;
rank: 129
score: 99.05580491286058
patch: case Token . AND : case Token . NOT : break ;
rank: 129
score: 99.0525235262784
patch: case Token . NOT : case Token . NULL :
rank: 129
score: 98.98729705810547
patch: / Token case Token . AND :
rank: 129
score: 98.93337180397727
patch: case Token . class : case Token . AND :
rank: 129
score: 98.74275512695313
patch: case Token . TYPE case Token . AND :
rank: 130
score: 99.34116821289062
patch: Preconditions . check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 130
score: 99.17102864583333
patch: case Node CaMeL Util . Token . HOOK : case Token . AND :
rank: 130
score: 99.05519797585227
patch: case Token . AND : case Token . INSTANCEOF :
rank: 130
score: 99.05190207741477
patch: case Token . AND : case Token . OTHER :
rank: 130
score: 98.98158957741477
patch: case Token . OR : case Token . AND ;
rank: 130
score: 98.98004557291667
patch: case Node CaMeL Util . Token . OR : case Token . AND :
rank: 130
score: 98.93153076171875
patch: case Token . AND : / * / /
rank: 130
score: 98.89816284179688
patch: case $STRING$ case Token . AND : : :
rank: 130
score: 98.74219767252605
patch: case Token . NONE :
rank: 131
score: 99.34109262319711
patch: / / return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) ,
rank: 131
score: 99.16867065429688
patch: if ( Node CaMeL Util . is CaMeL Name ( n , variable ) )
rank: 131
score: 99.05088297526042
patch: if ( case Token . AND || Token . AND )
rank: 131
score: 98.9814961751302
patch: case Token . AND : ? case Token . AND :
rank: 131
score: 98.98128933376736
patch: case Token . AND : / finally {
rank: 131
score: 98.97860514322916
patch: result = check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill (
rank: 131
score: 98.93058638139205
patch: case Token . WINDOW : case Token . AND :
rank: 131
score: 98.89815063476563
patch: case Token . : case $STRING$ : : :
rank: 132
score: 99.34105282738095
patch: if ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) {
rank: 132
score: 99.16763305664062
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill (
rank: 132
score: 99.04932512555804
patch: if ( Token . AND . equals ( Token . NULL ) )
rank: 132
score: 98.9814453125
patch: if ( Token . AND : case Token . AND :
rank: 132
score: 98.9798583984375
patch: case Token . ERROR : case Token . HOOK :
rank: 132
score: 98.977587890625
patch: case Token . AND : return Node CaMeL Util . MAYBE _ LIVE ;
rank: 132
score: 98.93046431107955
patch: case Token . ALL : case Token . AND :
rank: 132
score: 98.898046875
patch: case $STRING$ : : return Token . AND :
rank: 132
score: 98.73936157226562
patch: case Type . Definition . AND : break :
rank: 133
score: 99.34099872295673
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) , ) ;
rank: 133
score: 99.04534357244319
patch: case Token . AND : case Token . MIN :
rank: 133
score: 98.98138982599431
patch: case Token . AND : case Boolean . AND :
rank: 133
score: 98.97788307883523
patch: case Token . HOOK : case Token . ) :
rank: 133
score: 98.9762321920956
patch: case Token . HOOK : return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill (
rank: 133
score: 98.93037553267045
patch: case Token . NEW : case Token . AND :
rank: 133
score: 98.73840942382813
patch: case Token . AND : case - $NUMBER$ :
rank: 134
score: 99.3405010516827
patch: case Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) )
rank: 134
score: 99.0504483309659
patch: switch ( node . get CaMeL Type ( ) )
rank: 134
score: 99.04427664620536
patch: case Token . AND | Token . AND | Token . AND :
rank: 134
score: 98.976220703125
patch: case Node CaMeL Util . HOOK : case Node CaMeL Util . AND :
rank: 134
score: 98.9748202237216
patch: switch ( n . get CaMeL First ( ) )
rank: 134
score: 98.89468722873264
patch: case $STRING$ . case Token . TRUE :
rank: 134
score: 98.7377197265625
patch: case Token . AND : case - 1 :
rank: 135
score: 99.34010597511575
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) , true ) ;
rank: 135
score: 99.16616821289062
patch: if ( variable . equals ( n . get CaMeL Type ( ) ) )
rank: 135
score: 99.05006760817308
patch: this . case Token . AND : case Token . AND :
rank: 135
score: 98.98112182617187
patch: case Node . AND ? Token . AND :
rank: 135
score: 98.97563934326172
patch: case Token . OR : case Token . AND : case Token . AND :
rank: 135
score: 98.97272283380681
patch: case Token . OR : case Type . AND :
rank: 135
score: 98.9286221590909
patch: case Token . START : case Token . AND :
rank: 135
score: 98.73716905381944
patch: case ( Token . AND : n .
rank: 136
score: 99.33976236979167
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) +
rank: 136
score: 99.16464412913604
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( return ) ;
rank: 136
score: 99.04921468098958
patch: if case Token . AND : case Token . NULL :
rank: 136
score: 99.04226684570312
patch: case Token . AND : case Token . ALL : :
rank: 136
score: 98.98060099283855
patch: case Token . AND : : if Token . AND :
rank: 136
score: 98.9722567471591
patch: case Token . n : case Token . AND :
rank: 136
score: 98.92856667258523
patch: case Token . AND : case Token . error :
rank: 136
score: 98.88930053710938
patch: case Token . : : : case $STRING$ {
rank: 136
score: 98.735400390625
patch: case Token . AND : : / break :
rank: 137
score: 99.16310221354166
patch: case Node CaMeL Util . is CaMeL Lhs ( n , variable ) .
rank: 137
score: 99.04868977864584
patch: if ( node . get CaMeL Type ( ) == Token . NULL )
rank: 137
score: 98.97788492838542
patch: } case Token . AND : case Node . AND :
rank: 137
score: 98.9730224609375
patch: node = n . get CaMeL Next ( ) ;
rank: 137
score: 98.88616333007812
patch: case Token . : case Token . EMPTY :
rank: 137
score: 98.73477935791016
patch: case Token . AND : : {
rank: 138
score: 99.33951469089673
patch: switch ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) )
rank: 138
score: 99.16046549479167
patch: if ( n . get CaMeL Type ( ) == Node . HOOK )
rank: 138
score: 99.04829915364583
patch: if ( n . get CaMeL Type ( ) == Token . TARGET )
rank: 138
score: 98.9739013671875
patch: case Token . AND : : / * /
rank: 138
score: 98.97274780273438
patch: n . get CaMeL First CaMeL Child ( ) . case Token . OR :
rank: 138
score: 98.92833362926136
patch: case Token . OR : case Token . NOT :
rank: 138
score: 98.88561401367187
patch: case Token . AND : : case $STRING$ }
rank: 138
score: 98.73198852539062
patch: case $NUMBER$ : case Token . AND : :
rank: 139
score: 99.33949497767857
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( {
rank: 139
score: 99.160400390625
patch: if ( n . get CaMeL Type ( ) != Node . HOOK )
rank: 139
score: 99.04789595170455
patch: case Token . LABEL : case Token . AND :
rank: 139
score: 98.97354125976562
patch: break Token case Token . AND :
rank: 139
score: 98.97097981770834
patch: n . get CaMeL Parent ( ) . get CaMeL Type ( ) {
rank: 139
score: 98.96833939985795
patch: case Token . AND : case Token . KILL :
rank: 139
score: 98.92650257457386
patch: switch = n . get CaMeL First ( ) ;
rank: 139
score: 98.88546142578124
patch: case 0 : : return Token . AND :
rank: 139
score: 98.7315673828125
patch: case * * / case Token . AND :
rank: 140
score: 99.33895874023438
patch: case Token . AND : return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 140
score: 99.16028703962054
patch: case Token = n . get CaMeL First CaMeL Child ( ) ;
rank: 140
score: 99.04681951349431
patch: case Token . AND : case Token . ADD :
rank: 140
score: 99.03853665865384
patch: case Token . AND : case Char CaMeL Sequence . AND :
rank: 140
score: 98.97283935546875
patch: case Token . AND : break case Token . AND :
rank: 140
score: 98.97032581676136
patch: case Token . AND : return Token . OR :
rank: 140
score: 98.88504464285714
patch: case Token . TRUE : :
rank: 140
score: 98.73021697998047
patch: case Integer . Definition . AND :
rank: 141
score: 99.33679651331019
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Last CaMeL Child ( ) , variable ) ;
rank: 141
score: 99.15904998779297
patch: case Token . HOOK : case Token . HOOK : case Token . AND :
rank: 141
score: 99.04507107204861
patch: if ( Token . AND . equals ( n . get CaMeL String ( ) ) :
rank: 141
score: 99.0360576923077
patch: case Token . AND : break ; case Token . EMPTY :
rank: 141
score: 98.96883451021634
patch: case Token . AND : case Token . AND : / :
rank: 141
score: 98.96771795099431
patch: case Token . n : case Token . HOOK :
rank: 141
score: 98.92462713068181
patch: case Token . HOOK : case Token . NOT :
rank: 141
score: 98.88401489257812
patch: return Token . TRUE : Token . AND :
rank: 141
score: 98.72920057508681
patch: case Type . AND : : / /
rank: 142
score: 99.33604939778645
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( this ) ) {
rank: 142
score: 99.04444231305804
patch: this . : case Token . AND : case Token . AND :
rank: 142
score: 99.03567270132211
patch: case Token . AND : case Token . AND : AND :
rank: 142
score: 98.97273763020833
patch: case Integer . AND : : case Token . AND :
rank: 142
score: 98.96778453480114
patch: case Type . OR : case Token . AND :
rank: 142
score: 98.88258666992188
patch: case Token . AND : Token case 0 :
rank: 142
score: 98.7291259765625
patch: case Token . AND : case ? :
rank: 143
score: 99.33604079026442
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( child CaMeL Value ) ) {
rank: 143
score: 99.15801130022321
patch: Node parent = n . get CaMeL First CaMeL Child ( ) ;
rank: 143
score: 99.04378255208333
patch: case Token . LABEL : case Token . AND : :
rank: 143
score: 99.03374689275569
patch: case Token . AND : case Token . consume :
rank: 143
score: 98.97265625
patch: / * Token . AND : case Token . AND :
rank: 143
score: 98.96392267400569
patch: case Token . AND : case Type . OR :
rank: 143
score: 98.8823974609375
patch: return Token . AND : : case $STRING$ {
rank: 143
score: 98.72806803385417
patch: case ( Token . AND : : :
rank: 144
score: 99.33568274456522
patch: if ( Node CaMeL Util . is CaMeL Name ( n . get CaMeL Last CaMeL Child ( ) ) ) {
rank: 144
score: 99.15732643821023
patch: case Node . OR : case Token . HOOK :
rank: 144
score: 99.04375143612133
patch: if ( Token . AND . equals ( n . get CaMeL String ( ) :
rank: 144
score: 99.03362567608173
patch: case Token . AND : case Token . MIN _ VALUE :
rank: 144
score: 98.97263590494792
patch: case Token . AND / : case Token . AND :
rank: 144
score: 98.96574401855469
patch: case Token . OR : / :
rank: 144
score: 98.9638338955966
patch: case Token . OR : case Token . NONE :
rank: 144
score: 98.72749837239583
patch: case ? if case Token . AND :
rank: 145
score: 99.33545860877403
patch: check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 145
score: 99.04310960036058
patch: / * case Token . AND : case Token . AND :
rank: 145
score: 99.03334263392857
patch: if ( Token . AND . equals ( Token . TYPE ) )
rank: 145
score: 98.9713467684659
patch: case Object . AND : case Token . AND :
rank: 145
score: 98.96565755208333
patch: case Node CaMeL Util . HOOK : case Node CaMeL Util . HOOK :
rank: 145
score: 98.87831420898438
patch: case Token . AND : Token case $STRING$ :
rank: 145
score: 98.72666422526042
patch: case Type . FUNCTION :
rank: 146
score: 99.3353515625
patch: case Token . HOOK || Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) :
rank: 146
score: 99.04280090332031
patch: case Token . AND : case Token . AND : case Token . EMPTY :
rank: 146
score: 99.03316824776786
patch: if ( Token . class . equals ( Token . class ) )
rank: 146
score: 98.97072531960227
patch: case Node . AND : return Token . AND :
rank: 146
score: 98.96459197998047
patch: n . get CaMeL First CaMeL Child ( ) . case Token . HOOK :
rank: 146
score: 98.877734375
patch: case $STRING$ : case : Token . AND :
rank: 146
score: 98.72412109375
patch: case Token . AND : . break :
rank: 147
score: 99.33529550057871
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) . get ) ;
rank: 147
score: 99.15459798177083
patch: if ( n . get CaMeL Type ( ) != Node . ASSIGN )
rank: 147
score: 98.97068093039773
patch: case Token . AND > case Token . AND :
rank: 147
score: 98.9641582782452
patch: case Token . AND : return Node CaMeL Util . KILL ;
rank: 147
score: 98.71817016601562
patch: case Integer . TYPE :
rank: 148
score: 99.33463541666667
patch: if ( Node CaMeL Util . is CaMeL Name ( n . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ,
rank: 148
score: 99.15267240084134
patch: else switch ( n . get CaMeL Type ( ) ) {
rank: 148
score: 99.04173694957386
patch: case Token . AND : case Token . EOF :
rank: 148
score: 98.97062174479167
patch: } else { case Token . AND :
rank: 148
score: 98.96269087357955
patch: case Token . OR : return Token . HOOK :
rank: 148
score: 98.91740278764205
patch: case Token . OR : case Token . IN :
rank: 148
score: 98.87588936941964
patch: } case Token . AND :
rank: 148
score: 98.71629333496094
patch: case new Token . AND : :
rank: 149
score: 99.15260416666666
patch: case Node CaMeL Util . Token . HOOK : case Token . HOOK :
rank: 149
score: 99.04167036576705
patch: if ( Token . AND || Token . AND . equals ( n . get CaMeL String ( ) ) )
rank: 149
score: 99.03167255108173
patch: case Token . AND : break ; case Token . TRUE :
rank: 149
score: 98.91721413352273
patch: case Token . OR : case Token . NAME :
rank: 149
score: 98.87220458984375
patch: case Token . AND : : case Node )
rank: 149
score: 98.71478271484375
patch: case Token . CHECK :
rank: 150
score: 99.33309823495371
patch: if ( check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 150
score: 99.152099609375
patch: Node name = n . get CaMeL First CaMeL Child ( ) ;
rank: 150
score: 99.04163707386364
patch: case Token . AND : case Token . RAW :
rank: 150
score: 99.03105024857955
patch: case Token . AND : case Token . INCLUDE :
rank: 150
score: 98.96999104817708
patch: case Token . AND : next case Token . AND :
rank: 150
score: 98.95920034555289
patch: case Token . HOOK : return Node CaMeL Util . KILL ;
rank: 150
score: 98.95537775213069
patch: case Token . HOOK : case Token . STRING :
rank: 150
score: 98.91703657670455
patch: case Token . AND : ( Token . AND )
rank: 150
score: 98.87155587332589
patch: case $STRING$ : case : :
rank: 150
score: 98.71474783761161
patch: : case Token . AND :
rank: 151
score: 99.3319842998798
patch: cfw . return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) ,
rank: 151
score: 99.15164947509766
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ) ;
rank: 151
score: 99.041015625
patch: case Token . AND : case Token . consume ( Token . AND ) :
rank: 151
score: 98.969970703125
patch: case Token . AND : { return Token . AND ;
rank: 151
score: 98.95858060396634
patch: binding = n . get CaMeL First CaMeL Child ( ) ;
rank: 151
score: 98.9539794921875
patch: case Token . HOOK : }
rank: 151
score: 98.91673694957386
patch: case Token . LINE : case Token . AND :
rank: 151
score: 98.8703842163086
patch: case Token . AND : Token {
rank: 151
score: 98.71451144748264
patch: case $NUMBER$ : if Token . AND :
rank: 152
score: 99.3315938313802
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL First ( ) ,
rank: 152
score: 99.15134840745192
patch: return Node CaMeL Util . is CaMeL Lhs ( n ) ;
rank: 152
score: 99.04029482886905
patch: if ( Token . AND || Token . TRUE . equals ( n . get CaMeL String ( ) :
rank: 152
score: 98.96940104166667
patch: case Object . AND : : case Token . AND :
rank: 152
score: 98.95374644886364
patch: case Token . OR : case Node . OR :
rank: 152
score: 98.91649280894886
patch: case Token . HOOK : case Token . NAME :
rank: 152
score: 98.8697021484375
patch: case Token . : case Token . WARNING :
rank: 152
score: 98.71425374348958
patch: case Type . TYPE :
rank: 153
score: 99.33127759850544
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n , n . get CaMeL Last CaMeL Child ( ) ,
rank: 153
score: 99.04008345170455
patch: case Token . NULL : case Token . FUNCTION :
rank: 153
score: 99.02985174005681
patch: case Token . AND : case Token . LOCAL :
rank: 153
score: 98.95486886160714
patch: Token node = n . get CaMeL First CaMeL Child ( ) ;
rank: 153
score: 98.8694580078125
patch: case Token . : : : Token { :
rank: 153
score: 98.71133422851562
patch: case Integer case Token . AND :
rank: 154
score: 99.3310546875
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 154
score: 99.14988606770834
patch: if ( n . get CaMeL Type ( ) == Node . ASSIGN )
rank: 154
score: 99.03955841064453
patch: if ( n . get CaMeL Type ( ) == Token . NULL ) {
rank: 154
score: 98.96820068359375
patch: case Token . AND : : / Token . AND :
rank: 154
score: 98.95476825420673
patch: case Token . OR : case Token . Token . AND :
rank: 154
score: 98.95046164772727
patch: case Token . HOOK : case Token . n :
rank: 154
score: 98.86846923828125
patch: case Token . : : : case : {
rank: 154
score: 98.71065266927083
patch: case ( Token . AND : null :
rank: 155
score: 99.3310546875
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) ,
rank: 155
score: 99.03911798650569
patch: case Token . AND : case Token . SWITCH :
rank: 155
score: 99.02940784801136
patch: case Token . decode ( Token . AND ) :
rank: 155
score: 98.9677734375
patch: case Token . AND : case Function . AND :
rank: 155
score: 98.95365084134616
patch: case Node CaMeL Util . HOOK : case Token . HOOK :
rank: 155
score: 98.94987349076705
patch: case Token . HOOK : case Token . AND ;
rank: 155
score: 98.91401811079545
patch: case Token . AND : case Token . WINDOW :
rank: 155
score: 98.866943359375
patch: case Token . AND : { case $STRING$ :
rank: 155
score: 98.71043904622395
patch: case Token . YES :
rank: 156
score: 99.33090096932871
patch: check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First ( ) . get CaMeL Next ( ) ,
rank: 156
score: 99.03854370117188
patch: if ( $STRING$ . equals ( n . get CaMeL String ( ) ) )
rank: 156
score: 99.02867780412946
patch: if ( Type . AND . equals ( Token . AND ) )
rank: 156
score: 98.95230305989584
patch: case Token . AND : return Node CaMeL Util . get CaMeL Variable CaMeL
rank: 156
score: 98.94858620383523
patch: case Token . HOOK : case Node . OR :
rank: 156
score: 98.9138516512784
patch: case Token . HOOK : case Token . IN :
rank: 156
score: 98.86670532226563
patch: case Token . : : : case 0 :
rank: 156
score: 98.70974295479911
patch: case Node . AND : :
rank: 157
score: 99.33081993689903
patch: / . return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) ,
rank: 157
score: 99.03793770926339
patch: case Token . AND : case Token . | Token . AND :
rank: 157
score: 99.02802068536931
patch: case Token . AND : case Token . COMMA :
rank: 157
score: 98.96566772460938
patch: case Token . AND : } case Node . AND :
rank: 157
score: 98.95095825195312
patch: case Token . AND : case Token . HOOK : case Token . AND :
rank: 157
score: 98.94725452769886
patch: case Token . OR : case Token . ) :
rank: 157
score: 98.91368519176136
patch: case Token . AND : case Token . PARAMETER :
rank: 157
score: 98.86647033691406
patch: case 0 :
rank: 157
score: 98.70929827008929
patch: case Token . WARNING : :
rank: 158
score: 99.33006004050925
patch: break check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) , variable ) ;
rank: 158
score: 99.1419677734375
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n ;
rank: 158
score: 99.03788248697917
patch: case Token . NO : case Token . AND : :
rank: 158
score: 99.02713448660714
patch: if ( Token . NONE . equals ( Token . AND ) )
rank: 158
score: 98.9655253092448
patch: case Token . AND : Token case Exception . AND :
rank: 158
score: 98.95032552083333
patch: case Token . AND : return Control CaMeL Flow CaMeL Graph . READ ;
rank: 158
score: 98.94627685546875
patch: if ( variable . equals ( null ) )
rank: 158
score: 98.86529541015625
patch: case Token . AND : . {
rank: 158
score: 98.70758734809027
patch: case Token . AND : . / :
rank: 159
score: 99.33001239483173
patch: case Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) ,
rank: 159
score: 99.14122663225446
patch: Node index = n . get CaMeL First CaMeL Child ( ) ;
rank: 159
score: 99.03749778053977
patch: case Token . NULL : case Token . TYPE :
rank: 159
score: 98.94793294270833
patch: case Node CaMeL Util . HOOK : case Node CaMeL Util . OR :
rank: 159
score: 98.94568980823864
patch: case Node . HOOK : case Token . OR :
rank: 159
score: 98.86507161458333
patch: case 0 : case Token . TRUE :
rank: 159
score: 98.70722791883681
patch: case Type . AND : break : :
rank: 160
score: 99.32996057581019
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL First ( ) , variable ) ;
rank: 160
score: 99.02437650240384
patch: case Token . AND : case Token . NO : break ;
rank: 160
score: 98.96434437144886
patch: return Token . AND : case Exception . AND :
rank: 160
score: 98.94565651633523
patch: case Token . OR : case Type . HOOK :
rank: 160
score: 98.86450805664063
patch: case : case Token . AND : / :
rank: 160
score: 98.70562065972223
patch: case Token . AND : System . :
rank: 161
score: 99.32968284970238
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n . get CaMeL First CaMeL Child ( ) ,
rank: 161
score: 99.14034329927884
patch: case Token . HOOK : case Node CaMeL Util . HOOK :
rank: 161
score: 99.03439331054688
patch: case Token . NOT : case Token . NULL : :
rank: 161
score: 99.0234844501202
patch: case Token . AND : break ; case Token . NOT :
rank: 161
score: 98.96387736002605
patch: case Token . AND : switch case Node . AND :
rank: 161
score: 98.94695172991071
patch: Token n = n . get CaMeL First CaMeL Child ( ) ;
rank: 161
score: 98.94540744357639
patch: case Token . HOOK : return null ;
rank: 161
score: 98.90936834161931
patch: case Token . AND : case Token . STATEMENT :
rank: 161
score: 98.86405181884766
patch: case $STRING$ : case : : :
rank: 161
score: 98.70415581597223
patch: case 0 : if Token . AND :
rank: 162
score: 99.32944516782408
patch: case Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) ) :
rank: 162
score: 99.14002336774554
patch: case Node CaMeL Util . is CaMeL Name ( n , variable )
rank: 162
score: 99.03415352957589
patch: if ( Token . NULL . equals ( Token . AND ) :
rank: 162
score: 99.02297738882211
patch: case Token . compare CaMeL To ( Token . AND ) :
rank: 162
score: 98.96316528320312
patch: case Token . AND : this case Token . AND :
rank: 162
score: 98.946875
patch: case Token . AND : return n . get CaMeL First ( ) ;
rank: 162
score: 98.86344401041667
patch: case $STRING$ case Token . AND : :
rank: 162
score: 98.70379638671875
patch: case Integer . Token . AND :
rank: 163
score: 99.32941804108796
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) , this ) ;
rank: 163
score: 99.13994140625
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n
rank: 163
score: 99.0328369140625
patch: case Token . CHECK : case Token . AND :
rank: 163
score: 99.02279663085938
patch: case Token . AND : case Token . READ : :
rank: 163
score: 98.9630635579427
patch: break Token . AND :
rank: 163
score: 98.9416973407452
patch: case Token . Token . HOOK : case Token . AND :
rank: 163
score: 98.8624267578125
patch: case Token . parse ( ) :
rank: 163
score: 98.70076497395833
patch: case Type . NAME :
rank: 164
score: 99.32719089673913
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( null ) ) {
rank: 164
score: 99.1393310546875
patch: case Token . HOOK : Token . HOOK : case Token . HOOK :
rank: 164
score: 98.96291097005208
patch: case Token . AND : case case Token . AND :
rank: 164
score: 98.9434481534091
patch: case Token . KILL : case Token . AND :
rank: 164
score: 98.94095052083334
patch: case Node CaMeL Util . AND : case Node CaMeL Util . OR :
rank: 164
score: 98.860205078125
patch: case Token . AND : if case $STRING$ :
rank: 164
score: 98.69873046875
patch: case Token . FUNCTION : :
rank: 165
score: 99.32642578125
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n . get CaMeL First CaMeL Child ( ) , variable ) ) {
rank: 165
score: 99.13851928710938
patch: case Token . HOOK : case Token . AND : case Token . AND :
rank: 165
score: 99.03036338404605
patch: if ( Token . AND . equals ( n . get CaMeL String ( ) ) ) {
rank: 165
score: 98.9621914950284
patch: case Token . AND : while Token . AND :
rank: 165
score: 98.94132856889205
patch: case Node . OR : case Token . OR :
rank: 165
score: 98.94087982177734
patch: case Token . HOOK = n . get CaMeL First CaMeL Child ( ) ;
rank: 165
score: 98.90599476207386
patch: case Token . AND : case Token . TRY :
rank: 165
score: 98.85926649305556
patch: case Token . AND : case $STRING$ ;
rank: 165
score: 98.6953633626302
patch: case Token . ERROR :
rank: 166
score: 99.32623046875
patch: if ( Node CaMeL Util . is CaMeL Name ( n , n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 166
score: 99.02085524338942
patch: case Token . AND : case Token . VOID : break ;
rank: 166
score: 98.9619852701823
patch: Token case Type . AND : case Token . AND :
rank: 166
score: 98.93997192382812
patch: return n . get CaMeL First ( ) ;
rank: 166
score: 98.93984985351562
patch: throw n . get CaMeL Parent ( ) . get CaMeL Type ( ) ;
rank: 166
score: 98.90580610795455
patch: case Token . AND : case Token . START :
rank: 166
score: 98.85884857177734
patch: case $STRING$ + Token . AND :
rank: 166
score: 98.69203186035156
patch: case Token . AND : . .
rank: 167
score: 99.32587890625
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 167
score: 99.13750813802083
patch: if ( n . get CaMeL Type ( ) == Node . AND )
rank: 167
score: 99.02940877278645
patch: case Token . NULL : case Token . decode ( :
rank: 167
score: 98.96174760298295
patch: case Property . AND : case Token . AND :
rank: 167
score: 98.93974609375
patch: case Token . OR : return Control CaMeL Flow CaMeL Graph . KILL ;
rank: 167
score: 98.9395751953125
patch: case Token . OR : case Token . TYPE :
rank: 167
score: 98.85838623046875
patch: } : if case Token . AND : {
rank: 167
score: 98.68946668836806
patch: case 1 : if Token . AND :
rank: 168
score: 99.32558079769737
patch: if ( n . get CaMeL Type ( ) . equals ( Token . ASSIGN ) ) {
rank: 168
score: 99.02916541466347
patch: case Token . NULL : case Token . Na CaMeL N :
rank: 168
score: 98.95995076497395
patch: case Token . AND : case Integer . AND : {
rank: 168
score: 98.93951009114583
patch: case Token . HOOK : return Node CaMeL Util . get CaMeL Variable CaMeL
rank: 168
score: 98.9052734375
patch: case Token . AND : return Token . ASSIGN ;
rank: 168
score: 98.85831451416016
patch: case Token . AND : : }
rank: 168
score: 98.68931070963542
patch: case Type . RIGHT :
rank: 169
score: 99.32544921875
patch: cfw . check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) ,
rank: 169
score: 99.13644205729166
patch: if ( n . get CaMeL Type ( ) != Node . AND )
rank: 169
score: 99.0291035970052
patch: case Token . TARGET : case Token . TARGET : :
rank: 169
score: 99.01959228515625
patch: case Token . AND : break ; default :
rank: 169
score: 98.95974731445312
patch: case Exception . AND : { case Token . AND :
rank: 169
score: 98.93800706129808
patch: case Token . HOOK : case Node CaMeL Util . AND :
rank: 169
score: 98.8573486328125
patch: case Boolean . AND : : case $STRING$ :
rank: 169
score: 98.68815104166667
patch: case Type . AND : case 0 :
rank: 170
score: 99.32540760869566
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( index ) ) {
rank: 170
score: 99.02804565429688
patch: case Token . NULL : : case Token . AND :
rank: 170
score: 99.01780482700893
patch: if ( Token . AND . equals ( Token . NONE ) :
rank: 170
score: 98.95972696940105
patch: case Token . AND ? while case Token . AND :
rank: 170
score: 98.93730024857955
patch: if ( variable . equals ( null ) ) {
rank: 170
score: 98.93721771240234
patch: n . get CaMeL Parent ( ) . get CaMeL Type ( ) . {
rank: 170
score: 98.90293190696023
patch: case Token . AND : case Token . WITH :
rank: 170
score: 98.85729108537946
patch: return Token . AND : :
rank: 171
score: 99.3252734375
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , variable ) ) {
rank: 171
score: 99.13374328613281
patch: case Token . HOOK : case Token . AND : case Token . HOOK :
rank: 171
score: 99.02674153645833
patch: case Token . AND : case Token . TYPE || Token . AND :
rank: 171
score: 99.01753452845982
patch: if ( Token . EMPTY . equals ( Token . AND ) )
rank: 171
score: 98.95890669389205
patch: case Token . AND : case Result . AND :
rank: 171
score: 98.93701782226563
patch: if ( variable . equals ( $STRING$ ) )
rank: 171
score: 98.85626831054688
patch: } : case Token . AND : : :
rank: 171
score: 98.68543836805556
patch: case Integer . AND : : break :
rank: 172
score: 99.325048828125
patch: throw check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 172
score: 99.13326009114583
patch: return Node CaMeL Util . is CaMeL Lhs ( n , n ) ;
rank: 172
score: 99.02620442708333
patch: case Token . CHECK : case Token . AND : :
rank: 172
score: 99.01735432942708
patch: case Token . AND : break Token . AND : :
rank: 172
score: 98.957763671875
patch: this . case Token . AND : Token . AND :
rank: 172
score: 98.93687608506944
patch: case Token . OR : return null ;
rank: 172
score: 98.90219948508523
patch: case Token . NOT : case Token . OR :
rank: 172
score: 98.85543060302734
patch: case Token . FALSE : : :
rank: 172
score: 98.68224080403645
patch: case String . AND :
rank: 173
score: 99.32459077380952
patch: case Token . HOOK : return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 173
score: 99.13251604352679
patch: return Node CaMeL Util . is CaMeL Lhs ( n , variable )
rank: 173
score: 99.01699829101562
patch: case Token . AND : case Token . WITH : :
rank: 173
score: 98.95770263671875
patch: case Token . AND ? Token case Token . AND :
rank: 173
score: 98.936376953125
patch: n . get CaMeL Parent ( ) . get CaMeL Type ( ) )
rank: 173
score: 98.89970259232955
patch: case Token . AND : case Token . PROPERTY :
rank: 173
score: 98.85516357421875
patch: case Token . : ( case $STRING$ ) :
rank: 173
score: 98.68168640136719
patch: case Token . AND , break :
rank: 174
score: 99.32417629076087
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( id ) ) {
rank: 174
score: 99.12816619873047
patch: if ( n . get CaMeL Type ( ) . equals ( null ) )
rank: 174
score: 99.02565104166666
patch: if ( n . get CaMeL Type ( ) == Token . EMPTY )
rank: 174
score: 99.01554652622768
patch: case Token . AND || Token . AND || Token . AND )
rank: 174
score: 98.95745849609375
patch: case Token : case Token . AND :
rank: 174
score: 98.93634440104167
patch: case Node CaMeL Util . Token . AND : case Token . OR :
rank: 174
score: 98.93483664772727
patch: case Token . HOOK : case Token . NONE :
rank: 174
score: 98.89912553267045
patch: case Token . NAME : case Token . OR :
rank: 174
score: 98.85438368055556
patch: case : case Token . TRUE : :
rank: 174
score: 98.67694091796875
patch: case Token . AND : Token . :
rank: 175
score: 99.02560424804688
patch: case Token . AND : case Token . EXPRESSION : :
rank: 175
score: 99.01513671875
patch: break ; case Token . AND : Token . AND :
rank: 175
score: 98.95707194010417
patch: case Token . AND : case Property . AND : :
rank: 175
score: 98.93623046875
patch: case Token . AND : case Node CaMeL Util . Token . HOOK :
rank: 175
score: 98.85403442382812
patch: case Token . TRUE ? Token . AND :
rank: 175
score: 98.67684936523438
patch: case Token . AND - AND :
rank: 176
score: 99.323349609375
patch: case Token . OR || Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) :
rank: 176
score: 99.12757975260416
patch: case Token . HOOK : return Control CaMeL Flow CaMeL Graph . READ ;
rank: 176
score: 99.0255126953125
patch: case Token . TRUE : case Token . NULL : :
rank: 176
score: 99.01476111778847
patch: case Token . AND : case Token . TYPE : break ;
rank: 176
score: 98.95684814453125
patch: case Exception . AND : : case Token . AND :
rank: 176
score: 98.93445763221153
patch: case Token . AND : case Token . Token . HOOK :
rank: 176
score: 98.9337158203125
patch: case Token . OR : case Token . KILL :
rank: 176
score: 98.89893687855114
patch: case Token . AND : case Token . PREFIX :
rank: 176
score: 98.853857421875
patch: case $STRING$ : case Token . TRUE : :
rank: 176
score: 98.67601776123047
patch: case Integer . AND : : /
rank: 177
score: 99.32318115234375
patch: cfw . check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 177
score: 99.12574869791666
patch: case String variable = n . get CaMeL First CaMeL Child ( ) ;
rank: 177
score: 99.02537952769886
patch: if ( Token . AND || Token . AND . equals ( n . get CaMeL Type ( ) ) )
rank: 177
score: 99.0145596590909
patch: case Token . LT : case Token . AND :
rank: 177
score: 98.95597700639205
patch: case Token . AND ? case Token . AND :
rank: 177
score: 98.9329833984375
patch: case Token . n : case Token . OR :
rank: 177
score: 98.93238243689903
patch: expr = n . get CaMeL Last CaMeL Child ( ) ;
rank: 177
score: 98.89892578125
patch: case Token . IN : case Token . OR :
rank: 177
score: 98.8537841796875
patch: case : case Token . AND : break :
rank: 177
score: 98.67506408691406
patch: case Type case Token . AND :
rank: 178
score: 99.3218661221591
patch: switch ( Node CaMeL Util . is CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) )
rank: 178
score: 99.02512904575893
patch: if ( Token . AND || Token . TRUE . equals ( :
rank: 178
score: 98.9558837890625
patch: if Token . AND == Token . AND :
rank: 178
score: 98.93212890625
patch: case Token . HOOK : case Type . HOOK :
rank: 178
score: 98.85331420898437
patch: case Token . : : { case $STRING$ ;
rank: 178
score: 98.67300415039062
patch: case Character . AND :
rank: 179
score: 99.32179857336956
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n , n . get CaMeL First ( ) ) ) {
rank: 179
score: 99.12504069010417
patch: if ( n . get CaMeL Type ( ) != Node . OR )
rank: 179
score: 99.02459716796875
patch: case Token . TARGET : case Token . NULL : :
rank: 179
score: 99.01267787388393
patch: switch ( n . get CaMeL Type ( Token . AND ) )
rank: 179
score: 98.95568237304687
patch: case Token . AND : : / * :
rank: 179
score: 98.93121337890625
patch: case Token . AND | Token . HOOK :
rank: 179
score: 98.930908203125
patch: case Token . AND : case Token . HOOK ;
rank: 179
score: 98.67220052083333
patch: case Token . AND : this . .
rank: 180
score: 99.32173084077381
patch: if ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ) {
rank: 180
score: 99.1249008178711
patch: case Token . AND : case Token . HOOK : case Token . HOOK :
rank: 180
score: 99.02445162259616
patch: case Token . AND : case Token . decode ( ) :
rank: 180
score: 98.95463053385417
patch: case Token . AND : : case Exception . AND :
rank: 180
score: 98.93070845170455
patch: case Type . AND : case Token . HOOK :
rank: 180
score: 98.92906775841347
patch: case Token . Token . AND : case Token . OR :
rank: 180
score: 98.85215759277344
patch: case Token . AND | $STRING$ :
rank: 180
score: 98.67131805419922
patch: case ? case Token . AND :
rank: 181
score: 99.32011274857955
patch: switch ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) )
rank: 181
score: 99.12476457868304
patch: Node check = n . get CaMeL First CaMeL Child ( ) ;
rank: 181
score: 99.02430216471355
patch: case Token . AND : case Token . SWITCH : :
rank: 181
score: 99.010009765625
patch: case Token . AND : case Token . DEFAULT : :
rank: 181
score: 98.95379638671875
patch: case Node . AND : while case Token . AND :
rank: 181
score: 98.93068625710227
patch: case Token . HOOK : case Type . AND :
rank: 181
score: 98.92861703725961
patch: case Token . Exception . AND : case Token . AND :
rank: 181
score: 98.85034790039063
patch: if case $STRING$ : case Token . AND :
rank: 181
score: 98.66505432128906
patch: case Type . AND : : /
rank: 182
score: 99.31855701264881
patch: if ( check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) {
rank: 182
score: 99.02335611979167
patch: case Token . NULL : case Token . TRUE : :
rank: 182
score: 99.00972123579545
patch: case Token . RIGHT : case Token . AND :
rank: 182
score: 98.92913263494319
patch: case Type . HOOK : case Token . AND :
rank: 182
score: 98.89661254882813
patch: return n . get CaMeL Next ( ) ;
rank: 182
score: 98.84979248046875
patch: case Token . AND : . case $STRING$ ;
rank: 182
score: 98.66458129882812
patch: case Type . IN :
rank: 183
score: 99.31766764322917
patch: switch ( variable . get CaMeL Type ( ) ) {
rank: 183
score: 99.0229263305664
patch: case Token . AND : case Token . AND : case Token . FUNCTION :
rank: 183
score: 98.95274861653645
patch: case Token . AND : return Token . AND : }
rank: 183
score: 98.92894398082386
patch: case Type . AND : case Token . OR :
rank: 183
score: 98.92792217548077
patch: case Token . OR : case Node CaMeL Util . HOOK :
rank: 183
score: 98.84886474609375
patch: case Token . AND : . case 0 :
rank: 183
score: 98.66212972005208
patch: case Token . MAX :
rank: 184
score: 99.31753394717262
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , n , variable ) ;
rank: 184
score: 99.12123460036058
patch: case Token . HOOK : / / case Token . HOOK :
rank: 184
score: 99.02278645833333
patch: case Token . NULL : case Token . STRING : :
rank: 184
score: 98.95050048828125
patch: case Token . AND : . case Node . AND :
rank: 184
score: 98.92722731370192
patch: context = n . get CaMeL First CaMeL Child ( ) ;
rank: 184
score: 98.92701416015625
patch: case Token . AND : / * / }
rank: 184
score: 98.84846801757813
patch: case Token . TRUE : case $STRING$ : :
rank: 184
score: 98.6614990234375
patch: case ( Token . AND : / :
rank: 185
score: 99.31746215820313
patch: super . check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 185
score: 99.11793619791666
patch: if ( n . get CaMeL Type ( ) == Node . OR )
rank: 185
score: 99.0226542154948
patch: case Token . LOCAL : case Token . AND : :
rank: 185
score: 98.92685768821023
patch: if ( variable . equals ( $STRING$ ) ) {
rank: 185
score: 98.84745483398437
patch: case String case ) || Token . AND :
rank: 185
score: 98.66082763671875
patch: case Integer :
rank: 186
score: 99.31723420516305
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( name ) ) {
rank: 186
score: 99.02244984019886
patch: case Token . TARGET : case Token . TARGET :
rank: 186
score: 99.00592041015625
patch: case Token . AND : case Token . compiler . . . .
rank: 186
score: 98.94971812855114
patch: break case Token . AND : Token . AND :
rank: 186
score: 98.92644708806819
patch: case Token . FUNCTION : case Token . HOOK :
rank: 186
score: 98.66067504882812
patch: case Token . NO :
rank: 187
score: 99.31436011904762
patch: if ( Node CaMeL Util . is CaMeL Name ( n . get CaMeL Parent ( ) ) ) {
rank: 187
score: 98.94809977213542
patch: case Token . AND : : case Object . AND :
rank: 187
score: 98.92561479048295
patch: switch ( n . get CaMeL Name ( ) )
rank: 187
score: 98.92484224759616
patch: case Node CaMeL Util . OR : case Token . HOOK :
rank: 187
score: 98.89417613636364
patch: case Token . WITH : case Token . AND :
rank: 187
score: 98.84688110351563
patch: case Token . : case Token . NULL :
rank: 187
score: 98.66034613715277
patch: case void : case Token . AND :
rank: 188
score: 99.31317545572917
patch: if ( Node CaMeL Util . is CaMeL Lhs ( variable ) ) {
rank: 188
score: 99.02166193181819
patch: if ( Token . AND || Token . TRUE . equals ( n . get CaMeL String ( ) ) :
rank: 188
score: 98.9478759765625
patch: case Type . AND : case Token . AND : :
rank: 188
score: 98.92295328776042
patch: case Token . OR : case Token . AND : :
rank: 188
score: 98.89389870383523
patch: case Token . IN : case Token . HOOK :
rank: 188
score: 98.84683227539062
patch: case $STRING$ . case Token . AND : {
rank: 188
score: 98.65840657552083
patch: case Token . Token . AND : :
rank: 189
score: 99.31198459201389
patch: if ( n . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ) {
rank: 189
score: 99.0213114420573
patch: case Token . RIGHT : case Token . AND : :
rank: 189
score: 99.00456891741071
patch: if ( Token . AND . equals ( Token . NOT ) )
rank: 189
score: 98.94756525213069
patch: Token case Token . AND : Token . AND :
rank: 189
score: 98.92388361150569
patch: case Token . OR : case Token . NO :
rank: 189
score: 98.92247721354167
patch: case Token . OR : return n . get CaMeL Next ( ) ;
rank: 189
score: 98.84558715820313
patch: case Token . TRUE + Token . AND :
rank: 189
score: 98.6578369140625
patch: case Integer = Token . AND :
rank: 190
score: 99.30852399553571
patch: case Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 190
score: 99.11334635416667
patch: return Node CaMeL Util . is CaMeL Name ( n , variable ) ;
rank: 190
score: 99.02100372314453
patch: case Token . AND : case Token . AND : case Token . NONE :
rank: 190
score: 99.00351784446023
patch: break Token . AND ; case Token . AND :
rank: 190
score: 98.94700113932292
patch: case Token . AND : Token . AND : : {
rank: 190
score: 98.92161207932692
patch: line = n . get CaMeL First CaMeL Child ( ) ;
rank: 190
score: 98.89316628196023
patch: case Token . NO : case Token . OR :
rank: 190
score: 98.65702819824219
patch: case Token . AND : : if
rank: 191
score: 99.30687713623047
patch: if ( n . get CaMeL Type ( ) != Token . OR ) {
rank: 191
score: 99.1124737079327
patch: / switch ( n . get CaMeL Type ( ) ) {
rank: 191
score: 99.01962280273438
patch: case Token . AND : case Token . UNKNOWN : :
rank: 191
score: 99.00296724759616
patch: case Token . AND : case Token . NONE : break :
rank: 191
score: 98.94675699869792
patch: case Type . AND : { case Token . AND :
rank: 191
score: 98.9215087890625
patch: val = n . get CaMeL First CaMeL Child ( ) ;
rank: 191
score: 98.84539794921875
patch: case Token . : : case $STRING$ : :
rank: 191
score: 98.65658230251736
patch: case Type . AND : case null :
rank: 192
score: 99.30487351190476
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 192
score: 99.11234828404018
patch: Node type = n . get CaMeL First CaMeL Child ( ) ;
rank: 192
score: 99.01952406939338
patch: case Token . AND : case Token . AND : case Token . NULL : :
rank: 192
score: 99.0029629794034
patch: case Token . AND : case Token . mode :
rank: 192
score: 98.94521755642361
patch: case Token . AND : case Number :
rank: 192
score: 98.84476928710937
patch: case Token . AND | Token . FALSE :
rank: 192
score: 98.65653228759766
patch: if case Token . AND : :
rank: 193
score: 99.30312965029762
patch: / / return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 193
score: 99.01902465820312
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Message ( ) ) ;
rank: 193
score: 98.94100613064236
patch: case Token . AND : : * /
rank: 193
score: 98.91841264204545
patch: if ( n . get CaMeL Type ( ) .
rank: 193
score: 98.84432644314236
patch: } : case Token . AND : :
rank: 194
score: 99.11172688802084
patch: case Token . HOOK : case Node CaMeL Util . Token . HOOK :
rank: 194
score: 99.01902077414773
patch: case Token . COLON : case Token . AND :
rank: 194
score: 99.00110735212054
patch: if ( State . AND . equals ( Token . AND ) )
rank: 194
score: 98.9407958984375
patch: Token . AND : Token case Token . AND :
rank: 194
score: 98.91815863715277
patch: case Token . HOOK : / finally {
rank: 194
score: 98.65559387207031
patch: case Type . AND : this .
rank: 195
score: 99.30195617675781
patch: if ( n . get CaMeL Type ( ) != Token . ASSIGN ) {
rank: 195
score: 99.01805530894886
patch: if ( Token . AND || Token . AND )
rank: 195
score: 98.9395419034091
patch: case Token . AND : case Symbol . AND :
rank: 195
score: 98.65488688151042
patch: case n . case Token . AND :
rank: 196
score: 99.30166480654762
patch: case Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) :
rank: 196
score: 99.1109110514323
patch: case Node CaMeL Util . is CaMeL Lhs ( n )
rank: 196
score: 99.01763361150569
patch: case Token . AND : case Token . NUMBER :
rank: 196
score: 98.93735573508523
patch: case Number . AND : case Token . AND :
rank: 196
score: 98.88649680397727
patch: case Token . OR ; case Token . AND :
rank: 196
score: 98.84254150390625
patch: return Token . AND : : case $STRING$ .
rank: 196
score: 98.65455457899306
patch: case char : if Token . AND :
rank: 197
score: 99.29944428943452
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) )
rank: 197
score: 99.11001790364584
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( {
rank: 197
score: 99.01724446614584
patch: case Token . AND : throw new Illegal CaMeL State CaMeL Exception ( :
rank: 197
score: 99.00023304332386
patch: case Token . AND : case Token . sin :
rank: 197
score: 98.93676079644098
patch: case Token . AND : case char :
rank: 197
score: 98.91779119318181
patch: result = n . get CaMeL Next ( ) ;
rank: 197
score: 98.9162841796875
patch: case Node CaMeL Util . Token . HOOK :
rank: 197
score: 98.88515403053977
patch: case Token . AND ; case Token . HOOK :
rank: 197
score: 98.84144897460938
patch: case Token . FALSE | Token . AND :
rank: 198
score: 99.29921177455357
patch: switch ( n . get CaMeL Last CaMeL Child ( ) ) {
rank: 198
score: 99.01708112444196
patch: case Token . AND : case Token . Token . AND : :
rank: 198
score: 98.99985573508523
patch: case Token . AND : case Token . default :
rank: 198
score: 98.91763305664062
patch: ++ n . get CaMeL First CaMeL Child ( ) ;
rank: 198
score: 98.91612659801136
patch: case Token . ASSIGN : return Token . HOOK ;
rank: 198
score: 98.88502086292614
patch: case Token . AND : case Token . BOTH :
rank: 198
score: 98.841259765625
patch: return Token . AND : Token . EMPTY :
rank: 198
score: 98.6544189453125
patch: case ( Token == Token . AND :
rank: 199
score: 99.29627227783203
patch: if ( n . get CaMeL Type ( ) != Token . AND ) {
rank: 199
score: 99.0167948404948
patch: if ( Token . AND == Token . AND ) {
rank: 199
score: 98.9995450106534
patch: case Token . AND : case Token . BLOCK :
rank: 199
score: 98.93404812282986
patch: } else if case Token . AND :
rank: 199
score: 98.91747436523437
patch: case Token . HOOK | Token . AND :
rank: 199
score: 98.91422895951705
patch: case Token . OR : case Token . OR ;
rank: 199
score: 98.88478781960227
patch: case Token . AND : case Token . SET :
rank: 199
score: 98.84100952148438
patch: case Token . AND : . case : :
rank: 199
score: 98.65406629774306
patch: case Type . AND : case Integer :
rank: 200
score: 99.29612513950893
patch: switch ( n . get CaMeL Type ( ) ) { * /
rank: 200
score: 99.10861642020089
patch: if ( n . get CaMeL Type ( ) != Token . )
rank: 200
score: 98.99880545479911
patch: if Token . AND || Token . AND || Token . AND )
rank: 200
score: 98.9331298828125
patch: case Token . AND && Token . AND :
rank: 200
score: 98.88371138139205
patch: case Token . HOOK : case Token . NO :
rank: 200
score: 98.84083387586806
patch: case Token . AND : case $STRING$ {
rank: 200
score: 98.65259467230902
patch: case ( Token != Token . AND :
rank: 201
score: 99.29283650716145
patch: switch ( n . get CaMeL Value ( ) ) {
rank: 201
score: 99.10690307617188
patch: case Token = n . get CaMeL Parent ( ) ;
rank: 201
score: 99.015869140625
patch: case Token . NULL : case Token . TARGET : :
rank: 201
score: 98.93293900923295
patch: case Token . AND : if Token . AND :
rank: 201
score: 98.91614379882813
patch: case Token . : case Token . OR :
rank: 201
score: 98.84057006835937
patch: case Token . : : Token case $STRING$ :
rank: 201
score: 98.65247260199652
patch: case Token . AND + AND : :
rank: 202
score: 99.29146118164063
patch: if ( n . get CaMeL First CaMeL Child ( ) . get CaMeL Next ( ) ) {
rank: 202
score: 99.10511881510416
patch: case Token . HOOK : Token . HOOK : case Token . AND :
rank: 202
score: 99.01549479166667
patch: if ( n . get CaMeL Type ( ) == Token . STRING )
rank: 202
score: 98.93248401988636
patch: case Token . AND : case Float . AND :
rank: 202
score: 98.91609700520833
patch: case Token . OR : case Node CaMeL Util . Token . AND :
rank: 202
score: 98.9112881747159
patch: if ( n . get CaMeL Type ( ) ==
rank: 202
score: 98.88260498046876
patch: switch ( n . get CaMeL Type ) {
rank: 202
score: 98.84044189453125
patch: case Token . : | Token . AND :
rank: 202
score: 98.65104675292969
patch: case Integer : Token . AND :
rank: 203
score: 99.28966064453125
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , variable , variable ,
rank: 203
score: 98.93142361111111
patch: case Token . AND Token . AND :
rank: 203
score: 98.91604817708334
patch: case Node CaMeL Util . OR : case Node CaMeL Util . HOOK :
rank: 203
score: 98.9110107421875
patch: case Token . HOOK : case Token . TYPE :
rank: 203
score: 98.8802823153409
patch: case Token . NO : case Token . HOOK :
rank: 203
score: 98.83843994140625
patch: case Token . : : Token case 0 :
rank: 203
score: 98.65058051215277
patch: case ? { case Token . AND :
rank: 204
score: 99.287646484375
patch: switch ( Node CaMeL Util . is CaMeL Lhs ( n ) ) {
rank: 204
score: 99.0144755045573
patch: case Token . NONE : case Token . NONE : :
rank: 204
score: 98.931396484375
patch: if Token . AND : return Token . AND :
rank: 204
score: 98.91604614257812
patch: case Token . OR : case Token . :
rank: 204
score: 98.91037819602273
patch: case Token . HOOK : case Token . OR ;
rank: 204
score: 98.87877308238636
patch: case Token . AND : switch ( variable ) {
rank: 204
score: 98.65054321289062
patch: case Token . AND : break /
rank: 205
score: 99.28305053710938
patch: if ( n . get CaMeL Type ( ) == Token . HOOK ) {
rank: 205
score: 99.10286167689732
patch: Node n = n . get CaMeL Last CaMeL Child ( ) ;
rank: 205
score: 99.01418050130208
patch: case Token . AND : : case Token . NONE :
rank: 205
score: 98.99639020647321
patch: if ( Node CaMeL Util . is CaMeL Function ( n ) )
rank: 205
score: 98.92790083451705
patch: case Token . AND : * Token . AND :
rank: 205
score: 98.91553673377403
patch: case Node CaMeL Util . OR : case Token . OR :
rank: 205
score: 98.91004527698864
patch: case Token . KILL : case Token . HOOK :
rank: 205
score: 98.83809814453124
patch: Token . AND :
rank: 205
score: 98.64912245008681
patch: case T : case Token . AND :
rank: 206
score: 99.28179931640625
patch: if ( check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( ) ) {
rank: 206
score: 99.10153634207589
patch: return Node CaMeL Util . is CaMeL Lhs ( n , n )
rank: 206
score: 99.01380679481908
patch: if ( Token . NULL . equals ( n . get CaMeL String ( : ) ) )
rank: 206
score: 98.99582741477273
patch: case Token . AND : case Token . RESET :
rank: 206
score: 98.92787863991477
patch: case Result . AND : case Token . AND :
rank: 206
score: 98.91529192243304
patch: Token variable = n . get CaMeL First CaMeL Child ( ) ;
rank: 206
score: 98.83771362304688
patch: case Token . WARNING : : case $STRING$ :
rank: 206
score: 98.6488545735677
patch: case Integer . $NUMBER$ :
rank: 207
score: 99.01365661621094
patch: case Token . AND : case Token . visit ( Token . AND ) :
rank: 207
score: 98.9941073330966
patch: case Token . AND : case Token . LT :
rank: 207
score: 98.91387469951923
patch: buf = n . get CaMeL First CaMeL Child ( ) ;
rank: 207
score: 98.87608753551136
patch: case Token . NUMBER : case Token . AND :
rank: 207
score: 98.83746337890625
patch: if : case Token . AND : : :
rank: 207
score: 98.64759826660156
patch: case Token . NOT : : :
rank: 208
score: 99.277587890625
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 208
score: 99.0136474609375
patch: case Token . AND || Token . AND : case Token . AND :
rank: 208
score: 98.99382672991071
patch: if ( n . get CaMeL Type ( Token . AND ) :
rank: 208
score: 98.92616780598958
patch: / * * * Token . AND :
rank: 208
score: 98.9131328876202
patch: case Token . AND : case Token . Exception . AND :
rank: 208
score: 98.90669389204545
patch: case Type . OR : case Token . HOOK :
rank: 208
score: 98.87556596235795
patch: case Token . TYPE : case Token . OR :
rank: 208
score: 98.83492431640624
patch: case Token . TRUE : : case 0 :
rank: 208
score: 98.64658900669643
patch: case Token . IN : :
rank: 209
score: 99.27578299386161
patch: if ( n . get CaMeL First CaMeL Child ( ) ) {
rank: 209
score: 99.09886823381696
patch: if ( n . get CaMeL Type ( ) == Token . )
rank: 209
score: 99.0129903157552
patch: case Token . COLON : case Token . AND : :
rank: 209
score: 98.99366978236607
patch: if ( Token . NOT . equals ( Token . AND ) :
rank: 209
score: 98.92518199573864
patch: case Exception . AND : case Token . AND :
rank: 209
score: 98.91148963341347
patch: case Token . AND : case Token . Token . OR :
rank: 209
score: 98.90552775065105
patch: case Token . READ :
rank: 209
score: 98.83455657958984
patch: Token { case Token . AND :
rank: 209
score: 98.64656829833984
patch: case Token . AND : AND /
rank: 210
score: 99.27540806361607
patch: switch ( Node CaMeL Util . is CaMeL Name ( n ) )
rank: 210
score: 99.09873860677084
patch: if ( n . get CaMeL Type ( ) == String . ASSIGN )
rank: 210
score: 98.99360874720982
patch: if ( Token . TYPE . equals ( Token . AND ) )
rank: 210
score: 98.91099196213942
patch: case Node CaMeL Util . READ : case Token . AND :
rank: 210
score: 98.90516246448864
patch: case Token . AND : case Token . IF :
rank: 210
score: 98.8340576171875
patch: return Token . NONE : Token . AND :
rank: 210
score: 98.64635213216145
patch: case Token . PROPERTY :
rank: 211
score: 99.27520430715461
patch: break check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 211
score: 99.09842354910714
patch: Node next = n . get CaMeL First CaMeL Child ( ) ;
rank: 211
score: 99.01294884314903
patch: if ( : case Token . AND || Token . AND )
rank: 211
score: 98.9933330829327
patch: case Token . AND : case Token . FALSE : break ;
rank: 211
score: 98.92378373579545
patch: break Token . AND : case Node . AND :
rank: 211
score: 98.91089806189903
patch: case Token . HOOK : case Token . Token . AND :
rank: 211
score: 98.87221950954861
patch: / * / case Token . OR :
rank: 211
score: 98.83383178710938
patch: case Token . AND : . . . {
rank: 211
score: 98.6456807454427
patch: case Token . EMPTY :
rank: 212
score: 99.27310519748264
patch: check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( variable , variable ) ;
rank: 212
score: 99.09822591145833
patch: if ( n . get CaMeL First CaMeL Child ( ) == null )
rank: 212
score: 98.92218889508929
patch: break case Token . AND :
rank: 212
score: 98.9097900390625
patch: case Token . AND : . case Token . HOOK :
rank: 212
score: 98.9014004794034
patch: case Token . STRING : case Token . HOOK :
rank: 212
score: 98.83353271484376
patch: case Token . AND : AND case $STRING$ :
rank: 212
score: 98.64487711588542
patch: case ? : case Token . AND :
rank: 213
score: 99.27261117788461
patch: switch ( n . get CaMeL First CaMeL Child ( ) )
rank: 213
score: 99.09651692708333
patch: case Token . HOOK : case Token . HOOK : Token . HOOK :
rank: 213
score: 99.011962890625
patch: case Token . Type . AND : case Token . Type . AND :
rank: 213
score: 98.99271937779018
patch: if ( Node CaMeL Util . is CaMeL Undefined ( n ) )
rank: 213
score: 98.91935591264205
patch: return Token . AND : case Integer . AND :
rank: 213
score: 98.90950150923295
patch: expr = n . get CaMeL First ( ) ;
rank: 213
score: 98.9007235440341
patch: case Token . ERROR : case Token . OR :
rank: 213
score: 98.83319702148438
patch: case Token . : : : case : :
rank: 213
score: 98.64423963758681
patch: case Integer . AND : : / /
rank: 214
score: 99.27203690378289
patch: if ( n . get CaMeL Type ( ) . equals ( Token . OR ) ) {
rank: 214
score: 99.09614780970982
patch: / } switch ( n . get CaMeL Type ( ) ) {
rank: 214
score: 99.01187133789062
patch: case Token . AND : case Token . AND : case Token . TRUE :
rank: 214
score: 98.9923807779948
patch: String name = n . get CaMeL String ( ) ;
rank: 214
score: 98.91877885298295
patch: case Function . AND : case Token . AND :
rank: 214
score: 98.90041281960227
patch: case Token . OR : case Token . n :
rank: 214
score: 98.83302001953125
patch: case Token . AND : : case 0 ;
rank: 214
score: 98.64360894097223
patch: case new Token . AND : break :
rank: 215
score: 98.99236188616071
patch: if ( Token . TRUE . equals ( Token . AND ) :
rank: 215
score: 98.91840154474431
patch: case Type . AND : case Exception . AND :
rank: 215
score: 98.90941273082386
patch: case Token . OR : return Token . OR :
rank: 215
score: 98.89936967329545
patch: if ( variable . is CaMeL Name ( ) )
rank: 215
score: 98.83211059570313
patch: case Token . : : : case $STRING$ }
rank: 215
score: 98.64288330078125
patch: : : case Token . AND :
rank: 216
score: 99.01172984730114
patch: if ( Token . AND && Token . AND . equals ( n . get CaMeL String ( ) ) )
rank: 216
score: 98.99118041992188
patch: if ( Token . AND . equals ( $STRING$ ) )
rank: 216
score: 98.90931114783653
patch: n = n . get CaMeL First CaMeL Child ( ) ;
rank: 216
score: 98.89894797585227
patch: case Token . OR : case Type . OR :
rank: 216
score: 98.83206787109376
patch: case : case Token . FALSE : : :
rank: 216
score: 98.63983154296875
patch: case Type . AND : . / /
rank: 217
score: 99.09372384207589
patch: case Token . HOOK : case Token . HOOK : / * /
rank: 217
score: 99.01137473366477
patch: case Token . EOF : case Token . AND :
rank: 217
score: 98.99116734095982
patch: if ( Node CaMeL Util . is CaMeL Interface ( n ) )
rank: 217
score: 98.9176913174716
patch: case Token . AND : case State . AND :
rank: 217
score: 98.90922241210937
patch: case Token . OR | Token . AND :
rank: 217
score: 98.86702104048295
patch: case Token . PROPERTY : case Token . AND :
rank: 217
score: 98.83109741210937
patch: case Token . : case Token . AND ?
rank: 217
score: 98.63913981119792
patch: case Type . STRING :
rank: 218
score: 99.26555432771382
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( node , variable ) ;
rank: 218
score: 99.09358433314732
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill :
rank: 218
score: 99.01133728027344
patch: case Token . AND : case Token . AND : case Token . TYPE :
rank: 218
score: 98.99091448102679
patch: if Token . AND && Token . AND && Token . AND )
rank: 218
score: 98.917236328125
patch: return case Token . AND : Token . AND :
rank: 218
score: 98.90890737680289
patch: case Node CaMeL Util . HOOK : case Token . OR :
rank: 218
score: 98.89742606026786
patch: case Token . OR : }
rank: 218
score: 98.8302734375
patch: case Token . AND : { case $STRING$ ;
rank: 218
score: 98.63913981119792
patch: case Token . AND : AND / /
rank: 219
score: 99.26290090460526
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( parent , variable ) ;
rank: 219
score: 99.0930908203125
patch: if ( n . get CaMeL Type ( ) != Token . READ )
rank: 219
score: 99.01124572753906
patch: case Token . NULL : case Token . AND : case Token . AND :
rank: 219
score: 98.9901455965909
patch: case Token . AND : case Token . STAR :
rank: 219
score: 98.907470703125
patch: case Token . AND : return Token . MAYBE _ LIVE ;
rank: 219
score: 98.89673614501953
patch: case Token . AND : } }
rank: 219
score: 98.83026733398438
patch: case ? ) : case Token . AND :
rank: 219
score: 98.63899230957031
patch: case $STRING$ : Token . AND :
rank: 220
score: 99.26262749565973
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( variable , variable ,
rank: 220
score: 98.99012974330357
patch: if Token . AND || Token . AND || Token . AND :
rank: 220
score: 98.91583251953125
patch: if Token . AND && Token . AND :
rank: 220
score: 98.90696614583334
patch: expr = check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill (
rank: 220
score: 98.864306640625
patch: switch ( get CaMeL Type ( ) ) {
rank: 220
score: 98.82966613769531
patch: if : case Token . AND :
rank: 220
score: 98.63896348741319
patch: case byte : case Token . AND :
rank: 221
score: 99.26258760340073
patch: switch ( n . get CaMeL Parent ( ) . get CaMeL Type ( ) )
rank: 221
score: 99.01090494791667
patch: case Token . AND : case Token . COLON : :
rank: 221
score: 98.91486150568181
patch: case Long . AND : case Token . AND :
rank: 221
score: 98.90658908420139
patch: case Token . case Token . AND :
rank: 221
score: 98.89632839626736
patch: case Token . AND : / * :
rank: 221
score: 98.86383611505681
patch: case Node CaMeL Util . HOOK : / * /
rank: 222
score: 99.09079811789773
patch: case Token . HOOK : case Token . HOOK ;
rank: 222
score: 98.9147616299716
patch: case Token . AND : case Character . AND :
rank: 222
score: 98.82811482747395
patch: case Token . AND ?
rank: 223
score: 98.98841349283855
patch: case Token . AND : case Token . INCLUDE : :
rank: 223
score: 98.91427612304688
patch: case Token . AND : case char : }
rank: 223
score: 98.90560208834134
patch: case Token . AND : return Node CaMeL Util . HOOK ;
rank: 223
score: 98.86248224431819
patch: case Token . AND ; case Token . OR :
rank: 223
score: 98.82706027560764
patch: case $STRING$ + case Token . AND :
rank: 223
score: 98.63715471540179
patch: case Token . NULL : :
rank: 224
score: 99.01051548549107
patch: case Token . AND : case Token . Na CaMeL N : :
rank: 224
score: 98.9880038174716
patch: case Token . COMMA : case Token . AND :
rank: 224
score: 98.91411798650569
patch: case Short . AND : case Token . AND :
rank: 224
score: 98.90462239583333
patch: return Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ;
rank: 224
score: 98.89365456321023
patch: case Token . OR : return Token . ASSIGN ;
rank: 224
score: 98.82510375976562
patch: case $STRING$ : : :
rank: 224
score: 98.63683064778645
patch: case Integer . NOT :
rank: 225
score: 99.25818888346355
patch: if ( n . get CaMeL First ( ) ) {
rank: 225
score: 99.0892333984375
patch: case Token . HOOK : case Node CaMeL Util . OR :
rank: 225
score: 99.01004028320312
patch: if ( Token . AND . AND . equals ( n . get CaMeL String ( ) ) :
rank: 225
score: 98.98726399739583
patch: case Token . AND : case Token . YES : :
rank: 225
score: 98.90362548828125
patch: case Token . HOOK : break ;
rank: 225
score: 98.89303249782986
patch: case Token . OR : / finally {
rank: 225
score: 98.82433403862848
patch: case $STRING$ ? case Token . AND :
rank: 225
score: 98.63427056206598
patch: case * / case Token . AND :
rank: 226
score: 99.25651041666667
patch: switch ( Node CaMeL Util . is CaMeL Name ( variable ) ) {
rank: 226
score: 99.0882568359375
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 226
score: 99.0090840657552
patch: case Token . EMPTY : case Token . NONE : :
rank: 226
score: 98.98699481670673
patch: case Token . NULL : case Token . AND : break ;
rank: 226
score: 98.91188742897727
patch: case Token . AND : case Throwable . AND :
rank: 226
score: 98.86054021661931
patch: case Symbol . AND : case Token . AND :
rank: 226
score: 98.82428656684027
patch: } : case Token . AND : {
rank: 226
score: 98.63411458333333
patch: case Token . AND : case ? {
rank: 227
score: 99.25620631167763
patch: throw check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 227
score: 99.08806903545673
patch: if ( n . get CaMeL Parent ( ) != null )
rank: 227
score: 99.00871138139205
patch: if ( Token . AND || Token . TRUE . equals ( n . get CaMeL Type ( ) ) )
rank: 227
score: 98.98635031960227
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;
rank: 227
score: 98.91129927201705
patch: case Token . AND && case Token . AND :
rank: 227
score: 98.90146891276042
patch: case Token . AND : return Token . HOOK ; }
rank: 227
score: 98.8928955078125
patch: case Token . AND : / * / {
rank: 227
score: 98.85919744318181
patch: case Token . error : case Token . AND :
rank: 227
score: 98.82415771484375
patch: case $STRING$ . : case $STRING$ ;
rank: 227
score: 98.63369315011161
patch: case Token . RIGHT : :
rank: 228
score: 99.25593566894531
patch: if ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ) {
rank: 228
score: 99.00797895951705
patch: case Token . LOCAL : case Token . AND :
rank: 228
score: 98.98629324776786
patch: switch ( n . get CaMeL Type ( Token . AND ) :
rank: 228
score: 98.90545099431819
patch: case Object . AND : case Node . AND :
rank: 228
score: 98.85472106933594
patch: if ( n != null ) {
rank: 228
score: 98.82380981445313
patch: } : case Token . AND : { :
rank: 228
score: 98.63345336914062
patch: case Token . TYPE : : :
rank: 229
score: 99.25339642693015
patch: if ( Node CaMeL Util . is CaMeL Name ( n , variable ) ) {
rank: 229
score: 99.08701985677084
patch: throw is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 229
score: 99.00770670572916
patch: case Token . AND : Token . AND : case Token . NULL :
rank: 229
score: 98.90507676866319
patch: case Token . AND : break AND :
rank: 229
score: 98.8910245028409
patch: case Token . HOOK : case Type . OR :
rank: 229
score: 98.8529296875
patch: / * * / case Token . HOOK :
rank: 229
score: 98.82373046875
patch: case : : case Token . AND : {
rank: 229
score: 98.63324652777777
patch: case Token . AND : : : .
rank: 230
score: 99.25146484375
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , name ) ;
rank: 230
score: 99.08507283528645
patch: case Node CaMeL Util . is CaMeL Lhs ( variable )
rank: 230
score: 99.00738525390625
patch: case Token . AND : case Token . LINE : :
rank: 230
score: 98.9861727627841
patch: case Token . EMPTY : case Token . NONE :
rank: 230
score: 98.85286088423295
patch: case Token . AND : case Token . MAX :
rank: 230
score: 98.82324896918402
patch: case Token . : : : : :
rank: 230
score: 98.63267686631944
patch: case Number : case Token . AND :
rank: 231
score: 99.24908806295956
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Name ( n ) ) {
rank: 231
score: 99.084912109375
patch: case Node CaMeL Util . Token . OR : case Token . HOOK :
rank: 231
score: 99.00691731770833
patch: case Token . NUMBER : case Token . AND : :
rank: 231
score: 98.90456321022727
patch: if Token . AND ? || Token . AND :
rank: 231
score: 98.89054731889205
patch: case Token . FUNCTION : case Token . OR :
rank: 231
score: 98.82317437065973
patch: case int case : Token . AND :
rank: 231
score: 98.63217163085938
patch: case Integer . 1 :
rank: 232
score: 99.24762321920956
patch: if ( Node CaMeL Util . is CaMeL Lhs ( variable , variable ) ) {
rank: 232
score: 99.08477783203125
patch: / case Token . HOOK : case Token . HOOK :
rank: 232
score: 99.00637478298611
patch: if ( Token . EMPTY . equals ( n . get CaMeL String ( ) ) :
rank: 232
score: 98.9854403409091
patch: case Token . AND : case Token . ANNOTATION :
rank: 232
score: 98.90392388237848
patch: / * : case Token . AND :
rank: 232
score: 98.8975830078125
patch: attribute = n . get CaMeL First CaMeL Child ( ) ;
rank: 232
score: 98.85075378417969
patch: case Node CaMeL Util . FUNCTION :
rank: 232
score: 98.63125271267361
patch: case Type . Token . AND : :
rank: 233
score: 99.24757786800987
patch: if ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) {
rank: 233
score: 99.08326939174107
patch: if ( Node CaMeL Util . is CaMeL Lhs ( node ) )
rank: 233
score: 98.98524983723958
patch: case Token . AND : case Token . CONTINUE : :
rank: 233
score: 98.90336470170455
patch: case Token . AND : case E . AND :
rank: 233
score: 98.89680786132813
patch: case Token . OR : Token . AND :
rank: 233
score: 98.8229248046875
patch: case 0 : case Token . AND : {
rank: 233
score: 98.63119167751736
patch: case false : case Token . AND :
rank: 234
score: 99.00526936848958
patch: if ( Token . AND || Token . AND . equals ( Token . AND ) )
rank: 234
score: 98.90156693892045
patch: break Token . AND : break Token . AND :
rank: 234
score: 98.8224589029948
patch: case $STRING$ . case :
rank: 234
score: 98.63096788194444
patch: case Type . AND : : : :
rank: 235
score: 99.24569936899039
patch: if ( Node CaMeL Util . is CaMeL Name ( n )
rank: 235
score: 99.08243815104167
patch: case Token . HOOK : case Token . HOOK : else
rank: 235
score: 99.00371955422794
patch: if ( Token . EMPTY . equals ( n . get CaMeL String ( ) :
rank: 235
score: 98.98512486049107
patch: Token . AND : case Token . AND : Token . AND :
rank: 235
score: 98.90046997070313
patch: case Token . AND : : / / :
rank: 235
score: 98.89585571289062
patch: case Token . : case Token . HOOK :
rank: 235
score: 98.8873623934659
patch: case Token . OR : case Token . error :
rank: 235
score: 98.82030639648437
patch: case : : : return Token . AND :
rank: 235
score: 98.63081359863281
patch: case Type . AND : . :
rank: 236
score: 99.24319661458334
patch: } switch ( n . get CaMeL First CaMeL Child ( ) ) {
rank: 236
score: 99.00370649857955
patch: case Token . TARGET : case Token . NULL :
rank: 236
score: 98.9849520596591
patch: case Token . NONE : case Token . NONE :
rank: 236
score: 98.89444986979167
patch: case Token . AND : case Token . HOOK : :
rank: 236
score: 98.8487881747159
patch: case Token . HOOK ; case Token . AND :
rank: 236
score: 98.630126953125
patch: case Token . NAME : :
rank: 237
score: 99.2424252158717
patch: case Token . HOOK : return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill (
rank: 237
score: 99.08146158854167
patch: if ( n . get CaMeL Type ( ) != Token . NO )
rank: 237
score: 99.00340687144886
patch: case Token . SEMI : case Token . AND :
rank: 237
score: 98.9848299893466
patch: case Token . YES : case Token . AND :
rank: 237
score: 98.89988878038194
patch: Token . AND : Token . AND :
rank: 237
score: 98.81993408203125
patch: case Token . AND : : case Integer :
rank: 237
score: 98.629638671875
patch: case Type . NOT : :
rank: 238
score: 99.24203973067434
patch: if ( variable . equals ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 238
score: 99.00337727864583
patch: case Token . LEFT : case Token . AND : :
rank: 238
score: 98.98383037860577
patch: case Token . NOT : case Token . AND : break ;
rank: 238
score: 98.89336286272321
patch: case Token . OR : :
rank: 238
score: 98.88458806818181
patch: case Token . HOOK : case Token . KILL :
rank: 238
score: 98.81993103027344
patch: case : case Token . FALSE :
rank: 239
score: 99.24163497121711
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , false ) ;
rank: 239
score: 99.07980143229166
patch: if ( n . get CaMeL Last CaMeL Child ( ) != null )
rank: 239
score: 99.00322409237133
patch: case Token . AND : case Token . AND : : case Token . AND :
rank: 239
score: 98.98368013822116
patch: case Token . AND : break ; case Token . TYPE :
rank: 239
score: 98.89669189453124
patch: case Type . AND ? Token . AND :
rank: 239
score: 98.89314778645833
patch: case Token . AND : return n . get CaMeL String ( ) ;
rank: 239
score: 98.88454367897727
patch: case String . AND : case Token . AND :
rank: 239
score: 98.81983100043402
patch: case $STRING$ : case Token . FALSE :
rank: 239
score: 98.62859344482422
patch: case ? = Token . AND :
rank: 240
score: 99.23903245192308
patch: if ( variable . equals ( Token . OR ) ) {
rank: 240
score: 99.07947591145833
patch: if ( ! Node CaMeL Util . is CaMeL Lhs ( n ) )
rank: 240
score: 99.00302124023438
patch: case Token . AND : case Token . ADD : :
rank: 240
score: 98.89655897352431
patch: } else { case Node . AND :
rank: 240
score: 98.89244791666667
patch: case Token . OR : return Node CaMeL Util . MAYBE _ LIVE ;
rank: 240
score: 98.8837890625
patch: case Type . HOOK : case Token . HOOK :
rank: 240
score: 98.81968383789062
patch: case Token . : case Token . TYPE :
rank: 240
score: 98.62812042236328
patch: case Token . State . AND :
rank: 241
score: 99.23861355251736
patch: if ( n . get CaMeL Type ( ) . is CaMeL Name ( ) ) {
rank: 241
score: 99.07758440290179
patch: if ( n . get CaMeL Type ( ) != Node . )
rank: 241
score: 99.00274658203125
patch: case Token . EMPTY : case Token . TYPE : :
rank: 241
score: 98.98289271763393
patch: case Token . AND : . AND : case Token . AND :
rank: 241
score: 98.89240264892578
patch: case Token . AND : HOOK :
rank: 241
score: 98.88350830078124
patch: case Token . AND : / / break ;
rank: 241
score: 98.8470126065341
patch: case Node . HOOK : case Node . AND :
rank: 241
score: 98.81936645507812
patch: case Boolean . AND : : :
rank: 241
score: 98.62735421316964
patch: case Result . AND : :
rank: 242
score: 99.23769802517361
patch: / / return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 242
score: 99.00271426930146
patch: case Token . AND : case Token . NULL : case Token . AND : :
rank: 242
score: 98.98211115056819
patch: case Token . AND : case Token . round :
rank: 242
score: 98.89111328125
patch: Token n = n . get CaMeL Last CaMeL Child ( ) ;
rank: 242
score: 98.88181374289773
patch: case Token . OR : case Token . HOOK ;
rank: 242
score: 98.84700150923295
patch: case Node . AND : case Node . HOOK :
rank: 242
score: 98.81910536024306
patch: case Token . AND | Token . :
rank: 242
score: 98.6270751953125
patch: case Token . AND + $STRING$ :
rank: 243
score: 99.23653738839286
patch: switch ( this . n . get CaMeL Type ( ) ) {
rank: 243
score: 99.0758056640625
patch: else if ( Node CaMeL Util . is CaMeL Lhs ( n ) )
rank: 243
score: 98.98193359375
patch: case Token . AND : case Token . AND : : break :
rank: 243
score: 98.8935546875
patch: case Type . AND : return Token . AND :
rank: 243
score: 98.89084097055289
patch: case Token . Token . HOOK : case Token . HOOK :
rank: 243
score: 98.84674627130681
patch: case Token . HOOK : case Token . WARNING :
rank: 243
score: 98.81895141601562
patch: case Token . : : Token case $STRING$ ;
rank: 243
score: 98.6269302368164
patch: case Type . AND : / /
rank: 244
score: 99.23364975873162
patch: case Token . HOOK : switch ( n . get CaMeL Type ( ) ) {
rank: 244
score: 99.07563999720982
patch: if ( Node CaMeL Util . is CaMeL Lhs ( name ) )
rank: 244
score: 99.00203450520833
patch: if ( n . get CaMeL Type ( ) == Token . FUNCTION )
rank: 244
score: 98.98192342122395
patch: if ( Token . AND || Token . AND ) {
rank: 244
score: 98.88998413085938
patch: case Token . HOOK : case Token . :
rank: 244
score: 98.8466796875
patch: case Token . OR : case Token . WARNING :
rank: 244
score: 98.818701171875
patch: case Token . TRUE case Token . AND :
rank: 244
score: 98.62647247314453
patch: case Token . AND : System .
rank: 245
score: 99.22811126708984
patch: if ( n . get CaMeL Last CaMeL Child ( ) != null ) {
rank: 245
score: 99.0753173828125
patch: return Node CaMeL Util . is CaMeL Name ( n , variable )
rank: 245
score: 99.00165349786931
patch: if ( Token . AND || Token . TRUE . equals ( n . get CaMeL Value ( ) ) )
rank: 245
score: 98.98184204101562
patch: switch ( n . get CaMeL Type ( ) : :
rank: 245
score: 98.89262251420455
patch: * Token . AND : case Token . AND :
rank: 245
score: 98.88032670454545
patch: case Token . ASSIGN : case Token . ASSIGN :
rank: 245
score: 98.81842041015625
patch: case Token . : : case $STRING$ ;
rank: 245
score: 98.62134660993304
patch: case Integer . AND : .
rank: 246
score: 99.22707693917411
patch: switch ( n . get CaMeL Type ( ) ) { finally {
rank: 246
score: 99.07530628551136
patch: case Node . HOOK : case Node . HOOK :
rank: 246
score: 99.00099690755208
patch: case Token . NULL : case Token . NOT : :
rank: 246
score: 98.89151611328126
patch: } else / * * Token . AND :
rank: 246
score: 98.88758138020833
patch: case Token . HOOK : return n . get CaMeL First ( ) ;
rank: 246
score: 98.8796719637784
patch: case Token . KILL : case Token . OR :
rank: 246
score: 98.8464688387784
patch: case Token . PARAMETER : case Token . AND :
rank: 246
score: 98.81837158203125
patch: case Token . AND : : else { :
rank: 246
score: 98.62107849121094
patch: case Token . WARNING : : :
rank: 247
score: 99.22662712545956
patch: switch ( Node CaMeL Util . is CaMeL Lhs ( n , variable ) ) {
rank: 247
score: 98.99935913085938
patch: if ( n . get CaMeL Type ( ) == Token . TARGET ) {
rank: 247
score: 98.89124644886364
patch: / Token . AND : case Node . AND :
rank: 247
score: 98.88654033954327
patch: break switch ( n . get CaMeL Type ( ) ) {
rank: 247
score: 98.87959594726563
patch: if ( Node CaMeL Util != null ) {
rank: 247
score: 98.81816101074219
patch: case 0 : : : : :
rank: 248
score: 99.0740966796875
patch: if ( n . get CaMeL Type ( ) != String . ASSIGN )
rank: 248
score: 98.99880801930146
patch: case Token . AND : case Token . NULL : case Token . NULL : :
rank: 248
score: 98.9801025390625
patch: case Token . AND : Token . consume ( Token . AND :
rank: 248
score: 98.8899813565341
patch: case Token . AND : case Thread . AND :
rank: 248
score: 98.87876198508523
patch: case Token . OR : case Token . EMPTY :
rank: 248
score: 98.84560324928977
patch: switch = n . get CaMeL Next ( ) ;
rank: 248
score: 98.817041015625
patch: case Token . TRUE : Token case 0 :
rank: 248
score: 98.61918131510417
patch: case * : if Token . AND :
rank: 249
score: 99.073974609375
patch: if ( n . get CaMeL Type ( ) == Node . )
rank: 249
score: 98.99857584635417
patch: if ( n . get CaMeL Type ( ) == Token . TRUE )
rank: 249
score: 98.97940767728366
patch: case Token . NULL : break ; case Token . AND :
rank: 249
score: 98.88980865478516
patch: try { case Token . AND :
rank: 249
score: 98.88570556640624
patch: case Token . AND ( Token . AND :
rank: 249
score: 98.87776322798295
patch: case Type . OR : case Token . OR :
rank: 249
score: 98.84547008167614
patch: return Control CaMeL Flow CaMeL Graph . READ ; }
rank: 249
score: 98.81703491210938
patch: case Token . AND : case ? ) :
rank: 249
score: 98.6180419921875
patch: case Object . AND :
rank: 250
score: 99.22165096507354
patch: check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( n , variable ,
rank: 250
score: 99.0715801532452
patch: case Token . AND : / / case Token . HOOK :
rank: 250
score: 98.99854532877605
patch: case Token . AND : case Token . OTHER : :
rank: 250
score: 98.97934977213542
patch: if ( Token . AND ) case Token . AND :
rank: 250
score: 98.88563537597656
patch: case Token . AND : OR :
rank: 250
score: 98.87655639648438
patch: case Token . AND : / ?
rank: 250
score: 98.61794026692708
patch: case Integer . NAME :
rank: 251
score: 99.07072230747768
patch: for ( Node n . get CaMeL First CaMeL Child ( ) )
rank: 251
score: 98.99798583984375
patch: case Token . EOF : case Token . AND : :
rank: 251
score: 98.88551839192708
patch: case Token . AND : return Token . AND ; }
rank: 251
score: 98.87570190429688
patch: case Token . HOOK : / * / }
rank: 251
score: 98.84403852982955
patch: case Token . OR : case Token . class :
rank: 251
score: 98.81553649902344
patch: case Token . AND ? : :
rank: 251
score: 98.61756388346355
patch: case Token . ANNOTATION :
rank: 252
score: 99.21827697753906
patch: if ( n . get CaMeL First CaMeL Child ( ) == null ) {
rank: 252
score: 99.070263671875
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( child
rank: 252
score: 98.99713134765625
patch: case Token . NONE : case Token . EMPTY : :
rank: 252
score: 98.9776611328125
patch: if ( Token . AND : case Token . AND )
rank: 252
score: 98.88851928710938
patch: case Node . AND | Token . AND :
rank: 252
score: 98.8421630859375
patch: case Token . HOOK : case Token . class :
rank: 252
score: 98.81521945529514
patch: case Token . : : : case :
rank: 252
score: 98.61748504638672
patch: case Node . Definition . AND :
rank: 253
score: 99.21756998697917
patch: switch ( n . get CaMeL Length ( ) ) {
rank: 253
score: 99.0702392578125
patch: Token . HOOK : case Token . HOOK : case Token . HOOK :
rank: 253
score: 98.9968994140625
patch: case Token . AND : case Token . AND : case Token . :
rank: 253
score: 98.888427734375
patch: case Type . AND : case Type . AND :
rank: 253
score: 98.81447347005208
patch: case 0 : : :
rank: 253
score: 98.6172383626302
patch: case Type . WARNING :
rank: 254
score: 99.07014973958333
patch: if ( n . get CaMeL Type ( ) == Token . READ )
rank: 254
score: 98.9967400045956
patch: case Token . AND : throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 254
score: 98.97683279854911
patch: if ( Token . AND . equals ( Token . NULL ) :
rank: 254
score: 98.88818359375
patch: break : case Node . AND :
rank: 254
score: 98.8732022372159
patch: case Type . HOOK : case Token . OR :
rank: 254
score: 98.811279296875
patch: case : case Token . : : :
rank: 254
score: 98.61705780029297
patch: case Type . AND : : .
rank: 255
score: 99.21449190027573
patch: if ( variable . equals ( n . get CaMeL Type ( ) ) ) {
rank: 255
score: 98.99660422585227
patch: case Token . FUNCTION : case Token . FUNCTION :
rank: 255
score: 98.88687133789062
patch: break . case Token . AND :
rank: 255
score: 98.88175142728366
patch: case Token . Token . OR : case Token . HOOK :
rank: 255
score: 98.83952192826705
patch: case Token . PREFIX : case Token . AND :
rank: 255
score: 98.80965750558036
patch: case $STRING$ : case 0 :
rank: 255
score: 98.61651611328125
patch: case Token . STRING : :
rank: 256
score: 99.21245465959821
patch: switch ( Node CaMeL Util . get CaMeL Name ( n ) )
rank: 256
score: 99.0694580078125
patch: if ( n . get CaMeL Type ( ) != Token . NOT )
rank: 256
score: 98.88583374023438
patch: case Token . AND : * /
rank: 256
score: 98.88071852463942
patch: case Token . OR : case Node CaMeL Util . OR :
rank: 256
score: 98.87225896661931
patch: case Token . OR : case Token . LINE :
rank: 256
score: 98.80739339192708
patch: case Token . AND : : else {
rank: 256
score: 98.61624145507812
patch: case Token . VOID :
rank: 257
score: 99.21116129557292
patch: if ( n . get CaMeL Next ( ) ) {
rank: 257
score: 99.06937662760417
patch: if ( n . get CaMeL Type ( ) != Token . NAME )
rank: 257
score: 98.9959247295673
patch: if : case Token . AND : case Token . AND :
rank: 257
score: 98.8848648071289
patch: case Node . AND : break :
rank: 257
score: 98.87112765842014
patch: case Token . AND : case ) :
rank: 257
score: 98.83883666992188
patch: Token . HOOK : case Token . AND :
rank: 257
score: 98.80652727399554
patch: case Token . FALSE : :
rank: 257
score: 98.61188507080078
patch: case Node case Token . AND :
rank: 258
score: 99.21105018028847
patch: if ( variable . equals ( Token . ASSIGN ) ) {
rank: 258
score: 99.06922200520833
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( ;
rank: 258
score: 98.9955078125
patch: if ( node . get CaMeL Type ( ) == Token . NONE )
rank: 258
score: 98.97557721819196
patch: case Token . AND : case Char CaMeL Sequence . AND : :
rank: 258
score: 98.88481001420455
patch: case Node . AND : case Exception . AND :
rank: 258
score: 98.8710604580966
patch: case Token . STRING : case Token . OR :
rank: 258
score: 98.80628967285156
patch: case $STRING$ : : case 0 :
rank: 258
score: 98.61146375868056
patch: case ( Token != Type . AND :
rank: 259
score: 99.06888834635417
patch: case Token . HOOK : case Node CaMeL Util . Token . AND :
rank: 259
score: 98.88446599786931
patch: } case Token . AND : Token . AND :
rank: 259
score: 98.8776385967548
patch: node = n . get CaMeL Last CaMeL Child ( ) ;
rank: 259
score: 98.61137559678819
patch: case Token . AND : case ? /
rank: 260
score: 98.9951171875
patch: case Token . TARGET : case Token . AND : case Token . AND :
rank: 260
score: 98.9750088778409
patch: case Token . AND : case Token . NE :
rank: 260
score: 98.88348943536931
patch: case Token . AND : / Token . AND :
rank: 260
score: 98.87725067138672
patch: case Token . HOOK : / :
rank: 260
score: 98.87067205255681
patch: if ( n . get CaMeL Type ( ) !=
rank: 260
score: 98.8373135653409
patch: case Token . HOOK : case Token . EMPTY :
rank: 260
score: 98.79855346679688
patch: case 0 : : case $STRING$ :
rank: 260
score: 98.611328125
patch: case Token . Type . AND :
rank: 261
score: 99.06827799479167
patch: if ( n . get CaMeL Type ( ) . equals ( ) )
rank: 261
score: 98.99502766927084
patch: case Token . AND : case Token . NULL : Token . AND :
rank: 261
score: 98.97281901041667
patch: case Token . TRUE : case Token . TRUE : :
rank: 261
score: 98.88325330946181
patch: / * * case Token . AND :
rank: 261
score: 98.87620849609375
patch: case Node CaMeL Util . Token . OR :
rank: 261
score: 98.83714710582386
patch: case Token . INCLUDE : case Token . AND :
rank: 261
score: 98.79806179470486
patch: case : : case Token . TRUE :
rank: 261
score: 98.6105244954427
patch: case char . AND :
rank: 262
score: 99.0674540201823
patch: return Node CaMeL Util . is CaMeL Lhs ( n )
rank: 262
score: 98.97238159179688
patch: case Token . VOID : case Token . AND : :
rank: 262
score: 98.88289794921874
patch: case Token . AND : : / / }
rank: 262
score: 98.87563852163461
patch: element = n . get CaMeL First CaMeL Child ( ) ;
rank: 262
score: 98.8680752840909
patch: case Token . AND : case Token . HOOK finally
rank: 262
score: 98.79644775390625
patch: case Token . WARNING : case $STRING$ :
rank: 262
score: 98.61032104492188
patch: case Token . AND || null :
rank: 263
score: 99.20701599121094
patch: if ( n . get CaMeL Type ( ) != Token . HOOK ) {
rank: 263
score: 99.06708635602679
patch: Node CaMeL Util . is CaMeL Lhs ( n , variable ) ;
rank: 263
score: 98.9940185546875
patch: case Token . AND : case Token . FUNCTION : case Token . AND :
rank: 263
score: 98.97222900390625
patch: case Token . AND : case Token . ^ Token . AND :
rank: 263
score: 98.87433330829327
patch: key = n . get CaMeL First CaMeL Child ( ) ;
rank: 263
score: 98.8347500887784
patch: case Token . UNKNOWN : case Token . AND :
rank: 263
score: 98.79534912109375
patch: case $STRING$ : : : : :
rank: 263
score: 98.60972764756944
patch: case Type case Token . AND : :
rank: 264
score: 99.20511067708334
patch: switch ( Node CaMeL Util . get CaMeL Type ( n ) ) {
rank: 264
score: 99.06639811197917
patch: if ( n . get CaMeL Type ( ) != Token . ERROR )
rank: 264
score: 98.9718768780048
patch: case Token . AND : if ( Token . AND ) {
rank: 264
score: 98.88231312144886
patch: if ( Token . AND == Token . AND :
rank: 264
score: 98.87361450195313
patch: case Token . OR : Token . HOOK :
rank: 264
score: 98.863525390625
patch: case Node CaMeL Util . AND : / * /
rank: 264
score: 98.79355875651042
patch: case $STRING$ : case Token . NULL :
rank: 264
score: 98.60906982421875
patch: case Type . Type . AND : :
rank: 265
score: 99.066162109375
patch: if ( null != n . get CaMeL First CaMeL Child ( ) )
rank: 265
score: 98.99334716796875
patch: case Token . AND : case Token . AND : case Token . RIGHT :
rank: 265
score: 98.97088623046875
patch: case Token . AND : Token . AND : Token . TRUE :
rank: 265
score: 98.88093784877232
patch: Token case Type . AND :
rank: 265
score: 98.87254749644886
patch: case Token . HOOK : return Token . OR :
rank: 265
score: 98.83348999023437
patch: case Token . AND : / / * /
rank: 265
score: 98.79275173611111
patch: case Token . : Token . AND :
rank: 265
score: 98.60868326822917
patch: case String : case Token . AND :
rank: 266
score: 99.2012939453125
patch: switch ( this . get CaMeL Type ( ) ) {
rank: 266
score: 98.99274444580078
patch: case Token . AND : case Token . decode ( Token . AND ) :
rank: 266
score: 98.97048117897727
patch: case Token . AND : break Token . TRUE :
rank: 266
score: 98.8629483309659
patch: case Token . AND : ( Token . HOOK )
rank: 266
score: 98.79093424479167
patch: case Integer ; case Token . AND :
rank: 266
score: 98.60866873604911
patch: case += Token . AND :
rank: 267
score: 98.9925537109375
patch: Token . AND : case Token . AND : case Token . NULL :
rank: 267
score: 98.96898396809895
patch: case Token . AND : case Token . code : :
rank: 267
score: 98.83274147727273
patch: case Token . FORMAT : case Token . AND :
rank: 267
score: 98.78913031684027
patch: case Token . AND : . case :
rank: 267
score: 98.60801188151042
patch: case Type . AND : case $NUMBER$ :
rank: 268
score: 99.0635986328125
patch: case Node CaMeL Util . is CaMeL Name ( n , variable ) ;
rank: 268
score: 98.99181019176136
patch: case Token . visit ( Token . AND ) :
rank: 268
score: 98.9688720703125
patch: case Token . AND : case Token . LOCAL : :
rank: 268
score: 98.87945556640625
patch: case Node . AND + Token . AND :
rank: 268
score: 98.8706563313802
patch: case Token . HOOK : case Token . AND : :
rank: 268
score: 98.8599520596591
patch: case Token . TYPE : case Token . HOOK :
rank: 268
score: 98.78912353515625
patch: case $STRING$ + Token . AND : :
rank: 268
score: 98.60686577690973
patch: : : if case Token . AND :
rank: 269
score: 99.19355119977679
patch: / * switch ( n . get CaMeL Type ( ) ) {
rank: 269
score: 98.99136207217262
patch: if ( Token . AND . AND . equals ( n . get CaMeL String ( ) ) ) {
rank: 269
score: 98.96827281605114
patch: case Token . AND : case Token . LE :
rank: 269
score: 98.87901722301136
patch: case Token . AND : case Task . AND :
rank: 269
score: 98.87042791193181
patch: case Token . AND : = Token . AND ;
rank: 269
score: 98.8304776278409
patch: case Token . DEFAULT : case Token . AND :
rank: 269
score: 98.60679626464844
patch: case Token . AND : : else
rank: 270
score: 99.1904296875
patch: if ( variable . equals ( Token . AND ) ) {
rank: 270
score: 98.99119984019886
patch: if ( Token . AND && Token . AND . equals ( n . get CaMeL Type ( ) ) )
rank: 270
score: 98.9672139485677
patch: case Token . AND : case Token . MIN : :
rank: 270
score: 98.87032470703124
patch: case Token . AND | Token . OR :
rank: 270
score: 98.83008922230114
patch: case Token . SET : case Token . AND :
rank: 270
score: 98.78792317708333
patch: case Token . AND : . { :
rank: 270
score: 98.60584259033203
patch: case Token . AND : this :
rank: 271
score: 99.0617167154948
patch: case Token . HOOK : case Token . AND : else
rank: 271
score: 98.99098899147727
patch: case Token . code : case Token . AND :
rank: 271
score: 98.96663724459134
patch: case Token . AND : case Token . READ : break ;
rank: 271
score: 98.878662109375
patch: Token case Token . AND ? Token . AND :
rank: 271
score: 98.87010701497395
patch: -- n . get CaMeL First CaMeL Child ( ) ;
rank: 271
score: 98.85310668945313
patch: case Token . AND : case Token . AND
rank: 271
score: 98.78587341308594
patch: case Token . parse ( : :
rank: 271
score: 98.60542297363281
patch: case Token . AND : : *
rank: 272
score: 99.18904622395833
patch: switch ( n . get CaMeL Id ( ) ) {
rank: 272
score: 98.99097964638158
patch: if ( Token . EMPTY . equals ( n . get CaMeL String ( ) ) ) {
rank: 272
score: 98.9664815266927
patch: case Token . LT : case Token . AND : :
rank: 272
score: 98.87790749289773
patch: case Token . EMPTY : case Node . AND :
rank: 272
score: 98.8697509765625
patch: case Token . HOOK : return Token . MAYBE _ LIVE ;
rank: 272
score: 98.85152180989583
patch: case Token . ASSIGN : / * /
rank: 272
score: 98.78556993272569
patch: case Token . AND : AND : :
rank: 272
score: 98.60539415147569
patch: case Token . AND : : * :
rank: 273
score: 99.18772379557292
patch: switch ( n . is CaMeL Name ( ) ) {
rank: 273
score: 98.96622408353366
patch: case Token . AND : break ; case Token . FALSE :
rank: 273
score: 98.87588161892361
patch: case Short : case Token . AND :
rank: 273
score: 98.86922781808036
patch: sb . append ( n . get CaMeL String ( ) ) ;
rank: 273
score: 98.84676784939236
patch: if ( variable . equals ( ) )
rank: 273
score: 98.8267489346591
patch: case Token . MIN : case Token . AND :
rank: 273
score: 98.7852554321289
patch: case Token . AND : : AND
rank: 273
score: 98.60491180419922
patch: case Token . AND : Token :
rank: 274
score: 99.18079552283653
patch: / / case Token . OR : case Token . OR :
rank: 274
score: 98.99075317382812
patch: if ( n . get CaMeL Type ( ) == Token . NONE ) {
rank: 274
score: 98.96584065755208
patch: if Token . TRUE . equals ( Token . AND )
rank: 274
score: 98.87534401633523
patch: if Token . AND ? && Token . AND :
rank: 274
score: 98.86909702845982
patch: break n . get CaMeL First CaMeL Child ( ) . get CaMeL
rank: 274
score: 98.82593883167614
patch: case Token . AND : case Token . RETURN :
rank: 274
score: 98.78398980034723
patch: case Token . TYPE : case $STRING$ :
rank: 274
score: 98.60466851128473
patch: case Token . AND : . AND :
rank: 275
score: 99.057861328125
patch: case Token . HOOK : / / case Token . AND :
rank: 275
score: 98.99013108473558
patch: default : case Token . AND : case Token . AND :
rank: 275
score: 98.87513316761364
patch: case Token . AND : for Token . AND :
rank: 275
score: 98.84470825195312
patch: case Token . OR : / * / }
rank: 275
score: 98.78129577636719
patch: case $STRING$ : : case $STRING$ ;
rank: 275
score: 98.60393524169922
patch: case Integer . AND + AND :
rank: 276
score: 99.17913348858173
patch: / / case Token . OR : case Token . AND :
rank: 276
score: 99.05742938701923
patch: case Token . HOOK : case Token . HOOK : / /
rank: 276
score: 98.99010213216145
patch: case Token . TARGET : : case Token . AND :
rank: 276
score: 98.96546349158653
patch: case Token . AND : case Token . NULL : break :
rank: 276
score: 98.87322998046875
patch: } else * * * Token . AND :
rank: 276
score: 98.86671799879808
patch: arg = n . get CaMeL First CaMeL Child ( ) ;
rank: 276
score: 98.84254964192708
patch: switch ( variable ) {
rank: 276
score: 98.78042263454861
patch: case Token . AND : : Token ;
rank: 276
score: 98.60350884331598
patch: case LT : case Token . AND :
rank: 277
score: 99.17828369140625
patch: switch ( variable . get CaMeL First CaMeL Child ( ) ) {
rank: 277
score: 98.99005998883929
patch: if ( Token . NULL . equals ( n . get CaMeL String ( Token . AND ) ) )
rank: 277
score: 98.9649658203125
patch: case Token . IN : case Token . AND : :
rank: 277
score: 98.87202592329545
patch: case Integer . AND : case Node . AND :
rank: 277
score: 98.86603252704327
patch: operation = n . get CaMeL First CaMeL Child ( ) ;
rank: 277
score: 98.83851841517857
patch: case Token . AND finally {
rank: 277
score: 98.78038872612848
patch: case $STRING$ : case Token . TYPE :
rank: 277
score: 98.60325113932292
patch: case $NUMBER$ : case Node . AND :
rank: 278
score: 99.17545259915866
patch: if ( n . get CaMeL First CaMeL Child ( ) ;
rank: 278
score: 98.99001639229911
patch: case Token . Token . AND : case Token . AND : :
rank: 278
score: 98.87159729003906
patch: / : case Token . AND :
rank: 278
score: 98.8658447265625
patch: break n . get CaMeL First CaMeL Child ( ) . type :
rank: 278
score: 98.77823893229167
patch: case $STRING$ : case Token . : :
rank: 278
score: 98.60171508789062
patch: case Node . AND : : :
rank: 279
score: 99.17397635323661
patch: / / switch ( n . get CaMeL Type ( ) ) {
rank: 279
score: 98.98995971679688
patch: case Token . AND : case Token . NUMBER : :
rank: 279
score: 98.96437072753906
patch: case Token . AND : default :
rank: 279
score: 98.8711929321289
patch: } else if Token . AND :
rank: 279
score: 98.86548790564903
patch: case Token . AND : return Node CaMeL Util . HOOK :
rank: 279
score: 98.82523970170455
patch: case Token . EMPTY : case Token . OR :
rank: 279
score: 98.77767944335938
patch: case $STRING$ case Token . TRUE :
rank: 279
score: 98.60164388020833
patch: case $STRING$ : if Token . AND :
rank: 280
score: 99.1712646484375
patch: switch ( variable . get CaMeL String ( ) ) {
rank: 280
score: 99.055615234375
patch: case Node CaMeL Util . Token . HOOK : case Token . OR :
rank: 280
score: 98.98923746744792
patch: case Token . AND : case Token . EOF : :
rank: 280
score: 98.96392822265625
patch: case Token . consume ( Token . AND :
rank: 280
score: 98.87046120383523
patch: case Node . AND : case Type . AND :
rank: 280
score: 98.86526254507211
patch: i = n . get CaMeL First CaMeL Child ( ) ;
rank: 280
score: 98.83648681640625
patch: case Token . HOOK : / * :
rank: 280
score: 98.82489568536931
patch: case Token . EMPTY : case Token . HOOK :
rank: 280
score: 98.77694702148438
patch: case 0 : case : : :
rank: 280
score: 98.60162353515625
patch: case char case Token . AND :
rank: 281
score: 99.17044270833334
patch: switch ( ! n . get CaMeL First CaMeL Child ( ) ) {
rank: 281
score: 99.05531819661458
patch: case Token . HOOK : case Token . HOOK : case
rank: 281
score: 98.98909265854779
patch: this . Token . AND : case Token . AND : case Token . AND :
rank: 281
score: 98.96383901742789
patch: if ( Token . AND ) { return Token . AND ;
rank: 281
score: 98.86943901909723
patch: } else / * Token . AND :
rank: 281
score: 98.86496206430289
patch: buffer = n . get CaMeL First CaMeL Child ( ) ;
rank: 281
score: 98.83636474609375
patch: if ( Node CaMeL Util == null ) {
rank: 281
score: 98.82472922585227
patch: case Token . WARNING : case Token . HOOK :
rank: 281
score: 98.77651638454861
patch: case Token . arraycopy ( case ) ;
rank: 281
score: 98.60141330295139
patch: case Token . AND : : this .
rank: 282
score: 99.17041015625
patch: case Token . OR : case Token . OR : case Token . AND :
rank: 282
score: 98.96357865767045
patch: case Token . NULL : case Token . TRUE :
rank: 282
score: 98.8686856356534
patch: } Token . AND : case Token . AND :
rank: 282
score: 98.86488694411058
patch: case Token . OR : case Token . AND : / :
rank: 282
score: 98.82463989257812
patch: / * * / case Token . OR :
rank: 282
score: 98.77519395616319
patch: case $STRING$ ; case Token . AND :
rank: 282
score: 98.60122680664062
patch: case Token . FUNCTION : : :
rank: 283
score: 99.05466918945312
patch: case Token . HOOK : Token . HOOK :
rank: 283
score: 98.98851600060097
patch: if case Token . AND : case Token . AND : :
rank: 283
score: 98.96341646634616
patch: case Token . AND : Token . AND : : break ;
rank: 283
score: 98.86780395507813
patch: this . case Token . AND : break :
rank: 283
score: 98.82359008789062
patch: case Token . HOOK : / * / /
rank: 283
score: 98.77398681640625
patch: case Token . : : : Token {
rank: 283
score: 98.60015869140625
patch: case Token . AND + null :
rank: 284
score: 99.0544942220052
patch: / case Token . HOOK : case Token . AND :
rank: 284
score: 98.98707164417614
patch: if ( Token . AND || Token . EMPTY . equals ( n . get CaMeL Type ( ) ) )
rank: 284
score: 98.96316528320312
patch: case Token . AND : case Token . INSTANCEOF : :
rank: 284
score: 98.86762029474431
patch: return Type . AND : case Token . AND :
rank: 284
score: 98.86376953125
patch: case Token . AND : . HOOK :
rank: 284
score: 98.77367292131696
patch: case 0 : case : :
rank: 284
score: 98.59579467773438
patch: case $NUMBER$ + Token . AND :
rank: 285
score: 99.16824776785714
patch: if ( n . get CaMeL Parent ( ) != null ) {
rank: 285
score: 99.05418294270834
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill * /
rank: 285
score: 98.9865389737216
patch: case Token . LEFT : case Token . AND :
rank: 285
score: 98.86582253196023
patch: case Token . AND : ? Token . AND :
rank: 285
score: 98.86285400390625
patch: case Token . Token . OR :
rank: 285
score: 98.83244323730469
patch: case Token . HOOK : } }
rank: 285
score: 98.81625366210938
patch: case Token . ) case Token . AND :
rank: 285
score: 98.77328491210938
patch: case 0 : case :
rank: 286
score: 99.16707611083984
patch: if ( ! Node CaMeL Util . is CaMeL Name ( n ) ) {
rank: 286
score: 98.98648834228516
patch: if ( node . get CaMeL Type ( ) == Token . NULL ) {
rank: 286
score: 98.86521218039773
patch: / case Token . AND : Token . AND :
rank: 286
score: 98.86247422960069
patch: case Token . AND : return variable ;
rank: 286
score: 98.83183458116319
patch: case Token . AND : / * }
rank: 286
score: 98.77323913574219
patch: case $STRING$ . case : : :
rank: 286
score: 98.5947774251302
patch: case Token . LINE :
rank: 287
score: 99.16609409877232
patch: case Token . HOOK = n . get CaMeL First ( ) ;
rank: 287
score: 99.05275472005208
patch: Node node = n . get CaMeL Next ( ) ;
rank: 287
score: 98.96286843039773
patch: case Token . AND : case Token . GLOBAL :
rank: 287
score: 98.8599384014423
patch: xsp = n . get CaMeL First CaMeL Child ( ) ;
rank: 287
score: 98.82992553710938
patch: if ( variable . equals ( n ) )
rank: 287
score: 98.81228637695312
patch: case / * / case Token . AND :
rank: 287
score: 98.77273220486111
patch: case Token . AND : . . .
rank: 287
score: 98.59469943576389
patch: case Type . AND : case 1 :
rank: 288
score: 99.05271559495192
patch: / / case Token . HOOK : case Token . HOOK :
rank: 288
score: 98.98612467447917
patch: switch ( case Token . AND || Token . AND )
rank: 288
score: 98.86443536931819
patch: if Token . AND ? case Token . AND :
rank: 288
score: 98.8286865234375
patch: return n . get CaMeL Parent ( ) ;
rank: 288
score: 98.59236653645833
patch: case Type . NULL :
rank: 289
score: 99.16445922851562
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { * /
rank: 289
score: 99.05216471354167
patch: case Node CaMeL Util . is CaMeL Lhs ( n , n ) ;
rank: 289
score: 98.98579545454545
patch: case Token . NULL : case Token . STRING :
rank: 289
score: 98.96219576322116
patch: case Token . AND : case Token . TRUE : break :
rank: 289
score: 98.8592529296875
patch: case Token . OR : return Node CaMeL Util . KILL ;
rank: 289
score: 98.82845458984374
patch: case Token . HOOK : / * / {
rank: 289
score: 98.8102798461914
patch: / * case Token . HOOK :
rank: 289
score: 98.76824273003473
patch: if : case Token . AND : :
rank: 289
score: 98.5908915201823
patch: case Double . AND :
rank: 290
score: 99.05196940104166
patch: if ( n . get CaMeL Type ( ) != Token . TYPE )
rank: 290
score: 98.9854377297794
patch: if ( Token . AND . equals ( n . get CaMeL Type ( ) :
rank: 290
score: 98.9619140625
patch: case Token . AND : case Token . COMMA : :
rank: 290
score: 98.86341857910156
patch: if ( case Type . AND :
rank: 290
score: 98.85914024939903
patch: pos = n . get CaMeL First CaMeL Child ( ) ;
rank: 290
score: 98.76801215277777
patch: case Token . arraycopy ( case ) :
rank: 290
score: 98.59067789713542
patch: case Type . AND : case ? :
rank: 291
score: 99.1603534405048
patch: / / case Token . OR : case Token . HOOK :
rank: 291
score: 98.98527018229167
patch: case Token . AND : case Token . NULL || Token . AND :
rank: 291
score: 98.8633700284091
patch: case Token . AND : case Double . AND :
rank: 291
score: 98.8588534268466
patch: case Token . AND : case String . AND :
rank: 291
score: 98.82676866319444
patch: case Token . AND : / / /
rank: 291
score: 98.80535125732422
patch: / / case Token . AND :
rank: 291
score: 98.76692708333333
patch: case Token . AND : : Token :
rank: 291
score: 98.58885192871094
patch: case Token . AND + 1 :
rank: 292
score: 99.16021728515625
patch: if ( n . get CaMeL Name ( ) ) {
rank: 292
score: 99.0511474609375
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ;
rank: 292
score: 98.98471214657738
patch: if ( Token . AND || Token . NULL . equals ( n . get CaMeL String ( ) :
rank: 292
score: 98.96170043945312
patch: case Token . AND : case Token . intern ( :
rank: 292
score: 98.8621826171875
patch: / case Token . AND :
rank: 292
score: 98.85775991586539
patch: pos = n . get CaMeL Last CaMeL Child ( ) ;
rank: 292
score: 98.8195068359375
patch: case Token . HOOK : / / break ;
rank: 292
score: 98.79996163504464
patch: if ( variable != null )
rank: 293
score: 99.051025390625
patch: case Token . HOOK : case Token . HOOK : }
rank: 293
score: 98.98462677001953
patch: case Token . AND : case Token . AND : case Token . CHECK :
rank: 293
score: 98.9606182391827
patch: case Token . NONE : break ; case Token . AND :
rank: 293
score: 98.86126708984375
patch: case Token . AND : case Short :
rank: 293
score: 98.81681823730469
patch: case Token . HOOK : / ?
rank: 293
score: 98.7901611328125
patch: case Token . AND : / * / .
rank: 293
score: 98.76362827845982
patch: case $STRING$ . case : :
rank: 293
score: 98.58830261230469
patch: case $NUMBER$ : Token . AND :
rank: 294
score: 98.98433685302734
patch: case Token . NULL : case Token . AND : case Token . NULL :
rank: 294
score: 98.8611172762784
patch: Token case Type . AND ? Token . AND :
rank: 294
score: 98.85755333533653
patch: case Token . HOOK : case Token . Token . HOOK :
rank: 294
score: 98.80951538085938
patch: case Token . OR : / * / {
rank: 294
score: 98.78870849609375
patch: / * / / case Token . AND :
rank: 294
score: 98.7625020345052
patch: case Token . parse :
rank: 295
score: 99.15702819824219
patch: / / case Token . HOOK :
rank: 295
score: 98.9842862215909
patch: if ( Token . AND || Token . NULL . equals ( n . get CaMeL Type ( ) ) )
rank: 295
score: 98.95977228338069
patch: case Token . AND : case Token . Comparable :
rank: 295
score: 98.86046253551136
patch: case Token . AND : { Token . AND :
rank: 295
score: 98.80938110351562
patch: return n . get CaMeL Type ( ) ;
rank: 295
score: 98.76249694824219
patch: case : :
rank: 295
score: 98.58687337239583
patch: case Type . AND : : / :
rank: 296
score: 99.15678405761719
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) :
rank: 296
score: 99.05000813802083
patch: Node n = n . get CaMeL Parent ( ) ;
rank: 296
score: 98.98426920572916
patch: if ( node . get CaMeL Type ( ) == Token . TARGET )
rank: 296
score: 98.9591952237216
patch: case Token . AND : case Token . interrupt :
rank: 296
score: 98.85999755859375
patch: return Token . AND || Token . AND :
rank: 296
score: 98.85708383413461
patch: name = n . get CaMeL First CaMeL Child ( ) ;
rank: 296
score: 98.8067626953125
patch: case Token . OR : / * / /
rank: 296
score: 98.76232147216797
patch: case 0 case Token . AND :
rank: 296
score: 98.58653913225446
patch: case ( Token . AND :
rank: 297
score: 99.15618489583333
patch: if ( Node CaMeL Util . is CaMeL Name ( node ) ) {
rank: 297
score: 99.04801432291667
patch: if ( n . get CaMeL Type ( ) != Token . IN )
rank: 297
score: 98.984130859375
patch: case Token . CONTINUE : case Token . AND :
rank: 297
score: 98.95902876420455
patch: case Token . EMPTY : case Token . TYPE :
rank: 297
score: 98.85977783203126
patch: case Token . AND : case ? ? :
rank: 297
score: 98.85613544170673
patch: value = n . get CaMeL First CaMeL Child ( ) ;
rank: 297
score: 98.80654568142361
patch: case Token . OR : / * :
rank: 297
score: 98.76032850477431
patch: case Token . TRUE : Token { :
rank: 297
score: 98.58613586425781
patch: case Number case Token . AND :
rank: 298
score: 98.98405905330883
patch: case Token . NULL : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 298
score: 98.85967462713069
patch: final Token . AND : case Node . AND :
rank: 298
score: 98.85554643110795
patch: n . get CaMeL First CaMeL Child ( ) ;
rank: 298
score: 98.80539957682292
patch: case Token . AND : return n ;
rank: 298
score: 98.75833565848214
patch: case Boolean . AND : :
rank: 298
score: 98.58179582868304
patch: case Type . FUNCTION : :
rank: 299
score: 99.1535400390625
patch: switch ( Node CaMeL Util . get CaMeL Name ( variable ) ) {
rank: 299
score: 98.98394012451172
patch: case Token . AND : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ :
rank: 299
score: 98.95693734975961
patch: case Token . AND : case Token . AND : continue ;
rank: 299
score: 98.85495431082589
patch: case Token . HOOK : :
rank: 299
score: 98.80510864257812
patch: case Token . OR : / / break ;
rank: 299
score: 98.78499755859374
patch: / * / case Token . AND : /
rank: 299
score: 98.75824737548828
patch: case $STRING$ : : case 1 :
rank: 299
score: 98.58144124348958
patch: case Token . AND : Token $NUMBER$ :
rank: 300
score: 99.1531982421875
patch: case Token . OR : case Token . AND : case Token . OR :
rank: 300
score: 98.95686848958333
patch: return Token . AND ;
rank: 300
score: 98.85735529119319
patch: case Exception . AND : case Node . AND :
rank: 300
score: 98.80470275878906
patch: case Token . OR : } }
rank: 300
score: 98.78314208984375
patch: return Node CaMeL Util . KILL ;
rank: 300
score: 98.75623914930556
patch: return Token . AND : : : :
rank: 300
score: 98.57984415690105
patch: case Token . IF :
rank: 301
score: 98.9838155110677
patch: case Token . NULL : case Token . NAME : :
rank: 301
score: 98.95630900065105
patch: case Token . AND : case Token . FORMAT : :
rank: 301
score: 98.8571444424716
patch: case Type . AND : case Object . AND :
rank: 301
score: 98.80457414899554
patch: case Token . HOOK finally {
rank: 301
score: 98.78020477294922
patch: case Token . AND / * /
rank: 301
score: 98.75582122802734
patch: else { case Token . AND :
rank: 301
score: 98.57952880859375
patch: case Token . SIZE :
rank: 302
score: 99.15146309988839
patch: case Token . HOOK = n . get CaMeL Next ( ) ;
rank: 302
score: 99.04589029947917
patch: if ( n . get CaMeL Type ( ) == Token . NO )
rank: 302
score: 98.98350219726562
patch: if ( Token . NULL . equals ( n . get CaMeL String ( Token . AND ) :
rank: 302
score: 98.95602416992188
patch: case Token . AND : case Token . class : :
rank: 302
score: 98.85610129616477
patch: case Token . AND : final Token . AND :
rank: 302
score: 98.85353440504808
patch: case Token . Exception . AND : case Token . HOOK :
rank: 302
score: 98.80424669053819
patch: case Token . AND : / * else
rank: 302
score: 98.77943929036458
patch: case Token . AND ;
rank: 302
score: 98.57913547092014
patch: case new Token . AND : : :
rank: 303
score: 98.9832051595052
patch: case Token . NULL : : case Token . NULL :
rank: 303
score: 98.95601712740384
patch: case Token . AND : break ; case Token . NO :
rank: 303
score: 98.85445149739583
patch: / * Token case Token . AND :
rank: 303
score: 98.57852608816964
patch: case Token . NONE : :
rank: 304
score: 99.14986979166666
patch: if ( ! n . get CaMeL First CaMeL Child ( ) ) {
rank: 304
score: 98.95599365234375
patch: case Token . AND : case Token . OR : :
rank: 304
score: 98.854150390625
patch: case Token . AND : case Number : }
rank: 304
score: 98.8505147298177
patch: case Token . HOOK : return Token . HOOK ; }
rank: 304
score: 98.80133819580078
patch: case Token . OR : break ;
rank: 304
score: 98.75469292534723
patch: case Token . TRUE : : Token {
rank: 304
score: 98.57851833767361
patch: case Token . AND : : / }
rank: 305
score: 99.1492691040039
patch: case Token . OR : case Token . AND : case Token . HOOK :
rank: 305
score: 99.04530686598558
patch: case Node CaMeL Util . is CaMeL Lhs ( n ) ;
rank: 305
score: 98.98279622395833
patch: case Token . AND : case Token . TYPE || Token . TYPE :
rank: 305
score: 98.85392761230469
patch: if Token case Type . AND :
rank: 305
score: 98.80089111328125
patch: case Token . AND : / * / ;
rank: 305
score: 98.77647908528645
patch: case Node . HOOK :
rank: 305
score: 98.75433349609375
patch: this . case Token . AND : :
rank: 305
score: 98.5772705078125
patch: case Token . AND : . : :
rank: 306
score: 99.14798736572266
patch: case Token . OR : case Token . OR : case Token . OR :
rank: 306
score: 98.98234049479167
patch: if ( Token . AND && Token . AND . equals ( Token . AND ) )
rank: 306
score: 98.95416814630681
patch: case Token . AND : case Token . EQ :
rank: 306
score: 98.8538485440341
patch: if case Token . AND ? Token . AND :
rank: 306
score: 98.84984241832386
patch: case Token . AND : break Token . HOOK :
rank: 306
score: 98.75360107421875
patch: case Token . : : case $STRING$ {
rank: 306
score: 98.57704162597656
patch: case Token . AND . AND :
rank: 307
score: 99.14739520733173
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n )
rank: 307
score: 99.0431659405048
patch: case Token . AND : / / case Token . AND :
rank: 307
score: 98.98229041466347
patch: if ( Token . AND . equals ( Token . AND :
rank: 307
score: 98.84972205528847
patch: case Token . HOOK : return Node CaMeL Util . HOOK ;
rank: 307
score: 98.79793294270833
patch: case Token . ) :
rank: 307
score: 98.7535171508789
patch: case Token . AND : else {
rank: 307
score: 98.57658555772569
patch: case Token . AND : : if .
rank: 308
score: 99.14652506510417
patch: switch ( parent . get CaMeL Type ( ) ) {
rank: 308
score: 99.04306265024039
patch: case Token . HOOK : case Token . HOOK : break ;
rank: 308
score: 98.98150634765625
patch: case Token . TYPE : case Token . TYPE : case Token . AND :
rank: 308
score: 98.84972034801136
patch: case Token . AND : case Number . AND :
rank: 308
score: 98.8496844951923
patch: case Token . AND : return Node CaMeL Util . EMPTY ;
rank: 308
score: 98.79786512586806
patch: case Token . OR : case ) :
rank: 308
score: 98.77395629882812
patch: case Token . AND : { / * /
rank: 308
score: 98.75263129340277
patch: case Token . AND : case : {
rank: 308
score: 98.57650417751736
patch: case Integer . AND : break : :
rank: 309
score: 99.04249674479166
patch: if ( n . get CaMeL Type ( ) == String . HOOK )
rank: 309
score: 98.9529520670573
patch: case Token . AND : case Token . NEW : :
rank: 309
score: 98.84846801757813
patch: case Token . AND : : break : }
rank: 309
score: 98.75236680772569
patch: case Token . AND ? Token . :
rank: 309
score: 98.57633209228516
patch: case 0 : Token . AND :
rank: 310
score: 99.14353942871094
patch: } switch ( Node CaMeL Util . is CaMeL Name ( n ) ) {
rank: 310
score: 98.98126983642578
patch: if ( n . get CaMeL Type ( ) == Token . EMPTY ) {
rank: 310
score: 98.95266488882211
patch: case Token . AND : case Token . ALL : break ;
rank: 310
score: 98.77247111002605
patch: case Token . class :
rank: 310
score: 98.57571072048611
patch: case Token . AND : case * /
rank: 311
score: 99.1422607421875
patch: if ( Node CaMeL Util . is CaMeL Name ( name ) ) {
rank: 311
score: 98.98095703125
patch: case Token . AND : case Token . AND : Token . EMPTY :
rank: 311
score: 98.9521484375
patch: case Token . TYPE : case Token . AND : break ;
rank: 311
score: 98.84782270951705
patch: return Token . AND : case Object . AND :
rank: 311
score: 98.8469989483173
patch: case Token . AND : return Node CaMeL Util . TRUE ;
rank: 311
score: 98.77207641601562
patch: case Token . AND : / * / first
rank: 311
score: 98.75109185112848
patch: case Integer { case Token . AND :
rank: 311
score: 98.575439453125
patch: case Token . AND | null :
rank: 312
score: 99.04060872395833
patch: if ( n . get CaMeL Type ( ) != Token . LINE )
rank: 312
score: 98.97996690538194
patch: if ( Token . AND . equals ( n . get CaMeL Type ( ) ) :
rank: 312
score: 98.84771118164062
patch: case Token . AND : break : break :
rank: 312
score: 98.84660508897569
patch: case Token . HOOK : return variable ;
rank: 312
score: 98.78607177734375
patch: case Token . HOOK : case ) :
rank: 312
score: 98.75010850694444
patch: case String case : Token . AND :
rank: 312
score: 98.57477484809027
patch: case Token . AND : : / *
rank: 313
score: 99.14170485276442
patch: / / case Token . HOOK : case Token . AND :
rank: 313
score: 98.979736328125
patch: case Token . NULL : case Token . NULL : case Token . NULL :
rank: 313
score: 98.84578080610795
patch: return Token . AND : case Number . AND :
rank: 313
score: 98.78421359592014
patch: case Token . HOOK : return n ;
rank: 313
score: 98.76918538411458
patch: case Token . AND : case Token {
rank: 313
score: 98.57451520647321
patch: case Token . MIN : :
rank: 314
score: 99.14083158052884
patch: switch ( n . get CaMeL Type ( ) ) { else
rank: 314
score: 98.9789794921875
patch: case Token . NULL : case Token . AND : Token . AND :
rank: 314
score: 98.95099346454327
patch: case Token . AND : case Token . intern ( ) :
rank: 314
score: 98.8454922762784
patch: case Token . MAX : case Token . AND :
rank: 314
score: 98.84498948317308
patch: expression = n . get CaMeL First CaMeL Child ( ) ;
rank: 314
score: 98.78158133370536
patch: if ( variable == null )
rank: 314
score: 98.74857330322266
patch: case $STRING$ case Token . : :
rank: 315
score: 99.13923645019531
patch: case Token . OR : case Token . OR : case Token . HOOK :
rank: 315
score: 99.03863932291667
patch: Token . HOOK : case Token . HOOK : case Token . AND :
rank: 315
score: 98.97886657714844
patch: case Token . TYPE : case Token . TYPE : case Token . TYPE :
rank: 315
score: 98.9504864032452
patch: case Token . AND : case Token . AND : case :
rank: 315
score: 98.84447021484375
patch: / * * * case Token . AND :
rank: 315
score: 98.78019205729167
patch: case Token . READ : / * /
rank: 315
score: 98.74851989746094
patch: case 0 : : case 0 :
rank: 315
score: 98.573486328125
patch: case Token . abs :
rank: 316
score: 99.13912760416666
patch: case Node CaMeL Util . is CaMeL Lhs ( n , variable ) :
rank: 316
score: 98.97859191894531
patch: case Token . AND : case Token . AND : case Token . NOT :
rank: 316
score: 98.84429376775569
patch: case Token . AND / case Token . AND :
rank: 316
score: 98.8441390991211
patch: case ? ? Token . AND :
rank: 316
score: 98.74846733940973
patch: case Token . NONE : case $STRING$ :
rank: 316
score: 98.57339913504464
patch: case case Token . AND :
rank: 317
score: 99.1389872233073
patch: / case Token . OR : case Token . AND :
rank: 317
score: 99.0375507061298
patch: return Node CaMeL Util . is CaMeL Lhs ( variable ) ;
rank: 317
score: 98.97800806949013
patch: if ( Token . AND . AND . equals ( n . get CaMeL String ( ) :
rank: 317
score: 98.95035807291667
patch: if ( Token . AND ) break ;
rank: 317
score: 98.84423828125
patch: c = n . get CaMeL First CaMeL Child ( ) ;
rank: 317
score: 98.84379438920455
patch: case Token . AND : case Var . AND :
rank: 317
score: 98.77829996744792
patch: case Token . HOOK : / * }
rank: 317
score: 98.74795193142361
patch: case Token . parse ( case ) :
rank: 317
score: 98.57269287109375
patch: case Token . AND : : _
rank: 318
score: 98.9772061434659
patch: if ( Token . AND || Token . NULL . equals ( n . get CaMeL String ( ) ) :
rank: 318
score: 98.95031127929687
patch: System . out . println ( $STRING$ ) ;
rank: 318
score: 98.84415980747768
patch: n . get CaMeL Parent ( ) . get CaMeL Type ( )
rank: 318
score: 98.84255981445312
patch: case Node . AND || Token . AND :
rank: 318
score: 98.74782307942708
patch: case Token . AND : : . {
rank: 318
score: 98.57238006591797
patch: case Token . AND : null :
rank: 319
score: 99.03699544270833
patch: if ( n . get CaMeL Type ( ) == String . AND )
rank: 319
score: 98.84385986328125
patch: case Token . HOOK case Token . AND :
rank: 319
score: 98.84209594726562
patch: break Token . AND : Token . AND :
rank: 319
score: 98.57227325439453
patch: case Token . AND , null :
rank: 320
score: 99.13705240885416
patch: switch ( Node CaMeL Util . is CaMeL Lhs ( variable ) ) {
rank: 320
score: 99.0366943359375
patch: if ( n . get CaMeL Type ( ) == Token . NAME )
rank: 320
score: 98.97606482872597
patch: case Token . AND : : : case Token . AND :
rank: 320
score: 98.94853071732955
patch: case Token . AND : case Token . EOC :
rank: 320
score: 98.843505859375
patch: Token node = n . get CaMeL Last CaMeL Child ( ) ;
rank: 320
score: 98.77381591796875
patch: case Node CaMeL Util . AND : / /
rank: 320
score: 98.75607299804688
patch: / * case Token . OR :
rank: 320
score: 98.74673122829861
patch: case Token . TRUE : case $STRING$ ;
rank: 320
score: 98.5722147623698
patch: case Type . TRUE :
rank: 321
score: 99.13685825892857
patch: switch ( n . get CaMeL String ( ) ) { * /
rank: 321
score: 99.03662109375
patch: return check CaMeL Hook CaMeL Branch CaMeL Read CaMeL Before CaMeL Kill ( }
rank: 321
score: 98.84175872802734
patch: } Token case Type . AND :
rank: 321
score: 98.77316284179688
patch: return Token . HOOK ;
rank: 321
score: 98.74593098958333
patch: case Token . : : case : {
rank: 322
score: 99.13573201497395
patch: / case Token . OR : case Token . OR :
rank: 322
score: 98.97548217773438
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n . get CaMeL Message ( ) ) ;
rank: 322
score: 98.9477069561298
patch: case Token . AND : case Token . RIGHT : break ;
rank: 322
score: 98.84144422743056
patch: case $STRING$ : case Node . AND :
rank: 322
score: 98.77278442382813
patch: case Token . AND : / * * :
rank: 322
score: 98.75444200303819
patch: case Token . || Token . AND :
rank: 322
score: 98.74506293402777
patch: case Token . TRUE : : : :
rank: 322
score: 98.57009548611111
patch: case Token . AND : : : }
rank: 323
score: 99.13533841646634
patch: } switch ( n . get CaMeL String ( ) ) {
rank: 323
score: 98.97522735595703
patch: case Token . AND : case Token . AND : Token . AND : :
rank: 323
score: 98.94766845703126
patch: case Token . AND : default : break ;
rank: 323
score: 98.84143676757813
patch: case Token . AND ++ Token . AND :
rank: 323
score: 98.8408203125
patch: n = n . get CaMeL Next ( ) ;
rank: 323
score: 98.77029079861111
patch: case Token . AND : case String :
rank: 323
score: 98.56985134548611
patch: case Token . AND : break : if
rank: 324
score: 99.1353251139323
patch: switch ( null . get CaMeL Type ( ) ) {
rank: 324
score: 98.97389526367188
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + n . get CaMeL Message ( ) ) ;
rank: 324
score: 98.9471435546875
patch: case Token . NOT : case Token . NONE :
rank: 324
score: 98.841357421875
patch: case Token . AND , Token . AND :
rank: 324
score: 98.83963716947116
patch: case Token . Token . OR : case Token . OR :
rank: 324
score: 98.76948852539063
patch: case Token . AND : case Token . OR
rank: 324
score: 98.74209255642361
patch: case Token . AND : : case $STRING$
rank: 324
score: 98.56966145833333
patch: case Type . NONE :
rank: 325
score: 99.13486891526442
patch: switch ( ! n . get CaMeL Type ( ) ) {
rank: 325
score: 98.97332208806819
patch: case Token . AND : case Token . REGEXP :
rank: 325
score: 98.84123229980469
patch: / * * Token . AND :
rank: 325
score: 98.8382098858173
patch: line = n . get CaMeL Last CaMeL Child ( ) ;
rank: 325
score: 98.76908111572266
patch: case Token . OR : / ?
rank: 325
score: 98.74136352539062
patch: case Token . : case : :
rank: 326
score: 99.13477434430804
patch: switch ( n . get CaMeL Type ( ) ) { else {
rank: 326
score: 98.97274780273438
patch: case Token . TYPE : case Token . AND : case Token . AND :
rank: 326
score: 98.94540405273438
patch: Token . AND : case Token . AND : break ;
rank: 326
score: 98.84087262834821
patch: / * Token . AND :
rank: 326
score: 98.74508056640624
patch: case Token . HOOK : / / * /
rank: 326
score: 98.74045138888889
patch: case Boolean . AND : case $STRING$ :
rank: 326
score: 98.56832122802734
patch: case * case Token . AND :
rank: 327
score: 99.13448079427083
patch: switch ( current . get CaMeL Type ( ) ) {
rank: 327
score: 99.03374774639423
patch: case Token . HOOK : case Token . AND : break ;
rank: 327
score: 98.97262573242188
patch: case Token . AND : case Token . NULL : case Token . EMPTY :
rank: 327
score: 98.9449462890625
patch: case Char CaMeL Sequence . AND : case Token . AND :
rank: 327
score: 98.83950805664062
patch: / * * * * Token . AND :
rank: 327
score: 98.83744812011719
patch: case Token . Token . HOOK :
rank: 327
score: 98.74076625279018
patch: if ( n != null )
rank: 327
score: 98.73970794677734
patch: case $STRING$ : case - 1 :
rank: 327
score: 98.56697591145833
patch: case Token . AND : . * /
rank: 328
score: 99.1341083233173
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n ,
rank: 328
score: 99.03365885416666
patch: if ( n . get CaMeL Type ( ) == Token . NOT )
rank: 328
score: 98.97235107421875
patch: case Token . AND : Token . AND : case Token . AND : :
rank: 328
score: 98.76832885742188
patch: case Token . OR : case Token . AND
rank: 328
score: 98.73619079589844
patch: case 0 : : case $STRING$ ;
rank: 328
score: 98.56679280598958
patch: case Token . NUMBER :
rank: 329
score: 98.97219848632812
patch: case Token . AND : case Token . AND : case Token . LEFT :
rank: 329
score: 98.94415752704327
patch: case Token . AND : case Token . UNKNOWN : break ;
rank: 329
score: 98.7666259765625
patch: if ( variable . equals ( this ) )
rank: 329
score: 98.73931884765625
patch: case Token . AND : Token . OR :
rank: 329
score: 98.73584856305804
patch: case $STRING$ : case : {
rank: 329
score: 98.5667495727539
patch: case Token . Mode . AND :
rank: 330
score: 99.13262939453125
patch: switch ( Node CaMeL Util . is CaMeL Lhs ( n ) )
rank: 330
score: 99.033447265625
patch: case Token . HOOK : case Token . LINE :
rank: 330
score: 98.97213309151786
patch: if ( Token . AND || Token . EMPTY . equals ( n . get CaMeL String ( ) :
rank: 330
score: 98.94366924579327
patch: case Token . AND : case Token . DEFAULT : break ;
rank: 330
score: 98.83734685724431
patch: case Property . AND : case Node . AND :
rank: 330
score: 98.83672626201923
patch: type = n . get CaMeL Last CaMeL Child ( ) ;
rank: 330
score: 98.73912963867187
patch: case Token . HOOK : Token . AND :
rank: 330
score: 98.73529052734375
patch: case : case Token . FALSE : :
rank: 330
score: 98.56668090820312
patch: case byte . AND :
rank: 331
score: 99.13100179036458
patch: switch ( n . get CaMeL Method ( ) ) {
rank: 331
score: 99.0330098470052
patch: Node type = n . get CaMeL Parent ( ) ;
rank: 331
score: 98.83664957682292
patch: if ( type == Token . AND :
rank: 331
score: 98.76526750837054
patch: } switch ( variable ) {
rank: 331
score: 98.73524983723958
patch: case Token . TRUE : : case :
rank: 331
score: 98.56661551339286
patch: case Type . TYPE : :
rank: 332
score: 99.13030598958333
patch: switch ( n . get CaMeL Type ( ) ) { * * /
rank: 332
score: 99.03242710658482
patch: case Token . AND : case Token . HOOK : / * /
rank: 332
score: 98.97177605879934
patch: if ( Token . AND . equals ( n . get CaMeL Type ( ) ) ) {
rank: 332
score: 98.836181640625
patch: code = n . get CaMeL First CaMeL Child ( ) ;
rank: 332
score: 98.76423950195313
patch: case Token . AND : switch ( variable )
rank: 332
score: 98.73521592881944
patch: case Token . AND : : case String
rank: 332
score: 98.56627061631944
patch: case Node case Token . AND : :
rank: 333
score: 99.03199869791666
patch: case Token . HOOK : Token . AND : case Token . HOOK :
rank: 333
score: 98.97171783447266
patch: if ( n . get CaMeL Type ( ) == Token . TYPE ) {
rank: 333
score: 98.94264729817708
patch: case Token . AND | Token . AND : break ;
rank: 333
score: 98.8358154296875
patch: text = n . get CaMeL First CaMeL Child ( ) ;
rank: 333
score: 98.83553466796874
patch: break : if ( case Type . AND :
rank: 333
score: 98.73497178819444
patch: case $STRING$ . case Token . FALSE :
rank: 333
score: 98.73175048828125
patch: case Token . AND finally
rank: 333
score: 98.56529235839844
patch: case 1 : if case AND :
rank: 334
score: 99.12997233072916
patch: case Token . OR : case Token . AND || Token . OR :
rank: 334
score: 98.8352801983173
patch: o = n . get CaMeL First CaMeL Child ( ) ;
rank: 334
score: 98.83504638671874
patch: / * * * Token . AND : /
rank: 334
score: 98.7599609375
patch: case Token . AND : / * } }
rank: 334
score: 98.73169623480902
patch: case Token . AND : , * /
rank: 334
score: 98.56522623697917
patch: case Token . AND : case null /
rank: 335
score: 99.12973257211539
patch: / / case Token . HOOK : case Token . OR :
rank: 335
score: 98.94013006036931
patch: case Token . BLOCK : case Token . AND :
rank: 335
score: 98.8342041015625
patch: case Token . AND : : / : }
rank: 335
score: 98.7595703125
patch: if ( variable . equals ( READ ) )
rank: 335
score: 98.73381890190973
patch: case Token . AND : : AND :
rank: 335
score: 98.73070678710937
patch: case Token . AND : if ( variable )
rank: 335
score: 98.5648193359375
patch: case Type . AND : . /
rank: 336
score: 99.03061147836539
patch: case Token . HOOK : return Node CaMeL Util . READ ;
rank: 336
score: 98.97108369715073
patch: if ( n . get CaMeL Type ( ) == Token . AND ) { :
rank: 336
score: 98.93861897786458
patch: case Token . AND : : break Token . AND ;
rank: 336
score: 98.8336669921875
patch: case Token . HOOK | Token . HOOK :
rank: 336
score: 98.83345947265624
patch: case Token . AND : case Integer : }
rank: 336
score: 98.75761108398437
patch: return n . get CaMeL Cfg ( ) ;
rank: 336
score: 98.73288981119792
patch: case Token . TRUE | Token . :
rank: 336
score: 98.72943725585938
patch: case Token . AND case Token . HOOK :
rank: 336
score: 98.56480577256944
patch: case Integer case Token . AND : :
rank: 337
score: 99.1293212890625
patch: case Token . OR : case Token . OR || Token . AND :
rank: 337
score: 98.97069091796875
patch: if ( Token . AND . AND . equals ( n . get CaMeL Type ( ) ) :
rank: 337
score: 98.9383036295573
patch: case Token . AND : case Token . STAR : :
rank: 337
score: 98.83330829326923
patch: document = n . get CaMeL First CaMeL Child ( ) ;
rank: 337
score: 98.8329833984375
patch: / * * : case Token . AND :
rank: 337
score: 98.73213195800781
patch: case Token . : : AND :
rank: 337
score: 98.72772827148438
patch: case Token . AND : if ( true )
rank: 337
score: 98.56452094184027
patch: case Integer . AND : case 0 :
rank: 338
score: 98.96964888139205
patch: case Token . NULL : case Token . TARGET :
rank: 338
score: 98.93822132457386
patch: case Token . NULL : case Token . NO :
rank: 338
score: 98.83253062855114
patch: case Token . AND ? ? Token . AND :
rank: 338
score: 98.83245380108173
patch: case Token . OR : case Token . Token . OR :
rank: 338
score: 98.73124186197917
patch: case Token . NULL : case $STRING$ :
rank: 338
score: 98.56388854980469
patch: : case Token . AND : :
rank: 339
score: 99.12776692708333
patch: case Token . OR : case Token . AND || Token . AND :
rank: 339
score: 99.0284423828125
patch: } else switch ( n . get CaMeL Type ( ) ) {
rank: 339
score: 98.83238807091347
patch: case Token . AND : return Node CaMeL Util . AND ;
rank: 339
score: 98.75645616319444
patch: case Token . HOOK : / * else
rank: 339
score: 98.73081970214844
patch: case $STRING$ . : case $STRING$ :
rank: 339
score: 98.72321166992188
patch: case Token . AND : switch ( ) {
rank: 339
score: 98.56283569335938
patch: case Token . UNKNOWN :
rank: 340
score: 99.0277811686198
patch: case Token . HOOK : case Token . AND : case
rank: 340
score: 98.9694091796875
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 340
score: 98.93798828125
patch: case Token . AND : : case Token . TRUE :
rank: 340
score: 98.83165283203125
patch: break : / * case Token . AND :
rank: 340
score: 98.75042114257812
patch: case Token . HOOK : { / * /
rank: 340
score: 98.7306900024414
patch: case Token . TRUE : AND :
rank: 340
score: 98.56257629394531
patch: case Token . AND : : ?
rank: 341
score: 99.1267578125
patch: case Token . OR : case Token . OR || Token . OR :
rank: 341
score: 98.96872780539773
patch: if ( Token . AND == Token . AND )
rank: 341
score: 98.83177771935097
patch: type = n . get CaMeL First CaMeL Child ( ) ;
rank: 341
score: 98.8304110440341
patch: case E . AND : case Token . AND :
rank: 341
score: 98.75010172526042
patch: case Token . HOOK : / / /
rank: 341
score: 98.73061116536458
patch: return Token . AND : : . ;
rank: 341
score: 98.71478271484375
patch: return Node CaMeL Util . MAYBE _ LIVE ;
rank: 342
score: 99.02516682942708
patch: / case Token . AND : case Token . HOOK :
rank: 342
score: 98.96867819393383
patch: if ( n . get CaMeL Type ( ) == Token . Token . AND )
rank: 342
score: 98.93678792317708
patch: expr = Token . AND ; case Token . AND :
rank: 342
score: 98.83106407752403
patch: case Token . AND : return Node CaMeL Util . FALSE ;
rank: 342
score: 98.74985758463542
patch: case Token . n :
rank: 342
score: 98.7296142578125
patch: case $STRING$ : case Token . NONE :
rank: 342
score: 98.56174723307292
patch: case Math . AND :
rank: 343
score: 99.1238037109375
patch: if ( Node CaMeL Util . is CaMeL Name ( id ) ) {
rank: 343
score: 98.96702473958334
patch: return Token . AND || Token . AND ; case Token . AND :
rank: 343
score: 98.93678792317708
patch: case Token . AND : case Token . PARAMETER : :
rank: 343
score: 98.74885864257813
patch: case Token . HOOK : / * / ;
rank: 343
score: 98.72949896918402
patch: case Token . AND : case Integer {
rank: 343
score: 98.56103515625
patch: case ( Token . AND : / /
rank: 344
score: 99.1235595703125
patch: if ( Node CaMeL Util . is CaMeL Lhs ( node ) ) {
rank: 344
score: 98.96630045572917
patch: if ( node . get CaMeL Type ( ) == Token . EMPTY )
rank: 344
score: 98.82947887073864
patch: case Character . AND : case Token . AND :
rank: 344
score: 98.74867553710938
patch: switch ( variable . length ( ) ) {
rank: 344
score: 98.72915310329861
patch: case $STRING$ || case Token . AND :
rank: 344
score: 98.5609130859375
patch: case ( Token . AND : ?
rank: 345
score: 98.96605160361842
patch: if ( Token . AND . AND . equals ( n . get CaMeL Type ( ) :
rank: 345
score: 98.93531383167614
patch: case Token . AND : case Token . CASE :
rank: 345
score: 98.827880859375
patch: case Token . AND : case Token . AND : return variable ;
rank: 345
score: 98.74833170572917
patch: case Node . AND : / * /
rank: 345
score: 98.72904459635417
patch: case : : case Token . : :
rank: 345
score: 98.56083679199219
patch: : if case Token . AND :
rank: 346
score: 99.0234883626302
patch: case Token . HOOK : / * Token . HOOK :
rank: 346
score: 98.96602630615234
patch: case Token . NULL : case Token . NULL : case Token . AND :
rank: 346
score: 98.93439398871527
patch: break ; case Token . AND : :
rank: 346
score: 98.8289306640625
patch: case ? ? : case Token . AND :
rank: 346
score: 98.82784329927884
patch: case Token . OR : case Token . Token . HOOK :
rank: 346
score: 98.72883436414931
patch: case Token . AND : case Integer ;
rank: 346
score: 98.7097412109375
patch: case Control CaMeL Flow CaMeL Graph . AND :
rank: 346
score: 98.55948638916016
patch: case Type . TYPE . AND :
rank: 347
score: 99.12281087239583
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n , variable ,
rank: 347
score: 99.02317301432292
patch: case Token . AND : case Token . AND : case
rank: 347
score: 98.9658954326923
patch: case Token . AND : case Token . Token . NULL :
rank: 347
score: 98.93379350142045
patch: case Token . AND : case Token . DELIMITER :
rank: 347
score: 98.82879028320312
patch: case Token . AND : : / : :
rank: 347
score: 98.82718599759616
patch: case Token . AND : return Node CaMeL Util . AND :
rank: 347
score: 98.74721950954861
patch: case Token . AND : / * ?
rank: 347
score: 98.72822570800781
patch: case $STRING$ : case ? ) :
rank: 347
score: 98.7094497680664
patch: return Node CaMeL Util . READ ;
rank: 347
score: 98.55611843532986
patch: case Token . AND : case AND :
rank: 348
score: 98.96588134765625
patch: case Token . AND : case Token . NULL
rank: 348
score: 98.93360484730114
patch: case Token . TRUE : case Token . TYPE :
rank: 348
score: 98.82838948567708
patch: case Token . AND : case Node :
rank: 348
score: 98.74609375
patch: case Token . OR : / * }
rank: 348
score: 98.72726440429688
patch: case Token . : case $STRING$ ;
rank: 348
score: 98.7089599609375
patch: Token . HOOK : case Token . HOOK :
rank: 348
score: 98.55611165364583
patch: case Integer . AND : . / /
rank: 349
score: 98.96586470170455
patch: if ( Token . AND || Token . EMPTY . equals ( n . get CaMeL String ( ) ) :
rank: 349
score: 98.93314985795455
patch: case Token . AND : break Token . TRUE ;
rank: 349
score: 98.82816938920455
patch: case Token . AND + Token . AND : :
rank: 349
score: 98.82557091346153
patch: case Token . AND : case Node CaMeL Util . READ :
rank: 349
score: 98.74555969238281
patch: case Token . AND : / ;
rank: 349
score: 98.70895724826389
patch: / * case Token . AND : /
rank: 349
score: 98.55514962332589
patch: case Type . NAME : :
rank: 350
score: 98.96563165838069
patch: if ( Token . AND || Token . TRUE . equals ( n . get CaMeL Message ( ) ) )
rank: 350
score: 98.93135209517045
patch: case Token . AND : case Token . Enum :
rank: 350
score: 98.82811279296875
patch: } else / / * Token . AND :
rank: 350
score: 98.74022216796875
patch: case Token . AND : return null ; }
rank: 350
score: 98.72513834635417
patch: case Token . AND : . . {
rank: 350
score: 98.70736083984374
patch: case Token . AND : } / * /
rank: 350
score: 98.55462646484375
patch: case ? if Token . AND :
rank: 351
score: 98.9654296875
patch: if ( Token . AND || Token . AND == Token . AND )
rank: 351
score: 98.9313077059659
patch: case Token . AND : case Token . INDENT :
rank: 351
score: 98.827880859375
patch: case Token . AND ? Token . AND : :
rank: 351
score: 98.82504507211539
patch: idx = n . get CaMeL First CaMeL Child ( ) ;
rank: 351
score: 98.73975481305804
patch: case Token . ASSIGN : {
rank: 351
score: 98.72405133928571
patch: case $STRING$ . case 0 :
rank: 351
score: 98.55360921223958
patch: case Token . AND : : : {
rank: 352
score: 99.0184326171875
patch: case Token . HOOK : case Token . AND : }
rank: 352
score: 98.93044211647727
patch: case Token . AND : case Token . DOT :
rank: 352
score: 98.82781427556819
patch: case Token . AND : case Token . AND ?
rank: 352
score: 98.82369290865384
patch: ret = n . get CaMeL First CaMeL Child ( ) ;
rank: 352
score: 98.73915608723958
patch: case Token . OR : / / /
rank: 352
score: 98.72260199652777
patch: if null : case Token . AND :
rank: 352
score: 98.55292510986328
patch: case Type . AND : case ?
rank: 353
score: 99.10914611816406
patch: if ( Token . OR ) {
rank: 353
score: 98.9647216796875
patch: case Token . NULL : case Token . NOT :
rank: 353
score: 98.92931019176136
patch: case Token . AND : case Token . OFF :
rank: 353
score: 98.82724609375
patch: / Token . AND : Token . AND :
rank: 353
score: 98.82268817608173
patch: case Token . AND : case Token . HOOK : / :
rank: 353
score: 98.72231038411458
patch: Token { case Token . AND : :
rank: 353
score: 98.55194091796875
patch: case ( Token != Node . AND :
rank: 354
score: 99.0172119140625
patch: case Token . AND : case Token . HOOK : else
rank: 354
score: 98.96378326416016
patch: if ( n . get CaMeL Type ( ) == Token . STRING ) {
rank: 354
score: 98.92873313210227
patch: case Token . RETURN : case Token . AND :
rank: 354
score: 98.82659912109375
patch: return Token . AND + Token . AND :
rank: 354
score: 98.82246537642045
patch: node = n . get CaMeL First ( ) ;
rank: 354
score: 98.736865234375
patch: case Token . AND : / * / else
rank: 354
score: 98.72215270996094
patch: case Token . : . AND :
rank: 354
score: 98.70552825927734
patch: case Node CaMeL Util . KILL :
rank: 354
score: 98.55177525111607
patch: case Token . CHECK : :
rank: 355
score: 99.10896809895833
patch: / case Token . OR : case Token . HOOK :
rank: 355
score: 98.96269298735119
patch: if ( Token . AND . AND . equals ( n . get CaMeL Type ( ) ) ) {
rank: 355
score: 98.92784534801136
patch: case Token . AND : case Token . ceil :
rank: 355
score: 98.8256503018466
patch: case Node CaMeL Util . Token . AND : :
rank: 355
score: 98.82164588341347
patch: case Token . AND : case Token . Definition . AND :
rank: 355
score: 98.72172546386719
patch: case : case Token . TYPE :
rank: 355
score: 98.70375366210938
patch: case Token . AND : if ( false )
rank: 355
score: 98.5516586303711
patch: case 1 : Token . AND :
rank: 356
score: 99.10569254557292
patch: switch ( this . get CaMeL Name ( ) ) {
rank: 356
score: 98.96244049072266
patch: case Token . TYPE : case Token . AND : case Token . TYPE :
rank: 356
score: 98.82466430664063
patch: final Token . AND : Token . AND :
rank: 356
score: 98.81926935369319
patch: val = n . get CaMeL Next ( ) ;
rank: 356
score: 98.70087280273438
patch: case Token . AND case Token . OR :
rank: 356
score: 98.55100504557292
patch: if case Token . AND : : :
rank: 357
score: 98.96237664473684
patch: case Token . AND : case Token . decode ( n . get CaMeL String ( ) :
rank: 357
score: 98.82416534423828
patch: / . case Token . AND :
rank: 357
score: 98.81893216646634
patch: case Token . HOOK : case Token . Token . OR :
rank: 357
score: 98.73413696289063
patch: case Node CaMeL Util . HOOK : / /
rank: 357
score: 98.72075059678819
patch: if : : case Token . AND :
rank: 357
score: 98.69936116536458
patch: case Node . OR :
rank: 357
score: 98.55086844308036
patch: case Token . AND : /
rank: 358
score: 99.01580810546875
patch: if ( n . get CaMeL Type ( ) == String . )
rank: 358
score: 98.92665100097656
patch: case Token . NULL : break ;
rank: 358
score: 98.8239413174716
patch: case Token . AND > case Node . AND :
rank: 358
score: 98.8179931640625
patch: case Token . Token . AND : return Token . HOOK ;
rank: 358
score: 98.55084228515625
patch: case Integer . AND : case null :
rank: 359
score: 99.10183715820312
patch: switch ( n . get CaMeL Line ( ) ) {
rank: 359
score: 99.0153096516927
patch: Node variable = n . get CaMeL Parent ( ) ;
rank: 359
score: 98.8228759765625
patch: case Token . AND : return Object . AND :
rank: 359
score: 98.8177020733173
patch: case Token . AND : return Node CaMeL Util . READ ;
rank: 359
score: 98.72880859375
patch: case Token . AND : / * finally {
rank: 359
score: 98.72024197048611
patch: case $STRING$ : case Token . EMPTY :
rank: 359
score: 98.6947265625
patch: case Token . AND : / * OR :
rank: 359
score: 98.5507583618164
patch: case Token . NULL : : :
rank: 360
score: 98.96114309210526
patch: if ( Token . AND . equals ( n . get CaMeL String ( : ) ) )
rank: 360
score: 98.81766357421876
patch: case Token . OR ( Token . AND :
rank: 360
score: 98.72844780815973
patch: case Token . OR : return n ;
rank: 360
score: 98.72018432617188
patch: case Token . : case 0 :
rank: 360
score: 98.69398716517857
patch: case Token . AND : else
rank: 360
score: 98.55018107096355
patch: case Token . 0 :
rank: 361
score: 99.09536508413461
patch: if ( variable . equals ( Token . HOOK ) ) {
rank: 361
score: 98.96113586425781
patch: case Token . AND : case Token . AND : case Token . STRING :
rank: 361
score: 98.92427201704545
patch: case Token . AND : case Token . match :
rank: 361
score: 98.82219904119319
patch: if Token . AND && case Token . AND :
rank: 361
score: 98.817578125
patch: case Token . AND = Token . AND ;
rank: 361
score: 98.72808837890625
patch: case Token . MAYBE _ LIVE :
rank: 361
score: 98.72000461154514
patch: if false : case Token . AND :
rank: 361
score: 98.69384765625
patch: / * / / case Token . HOOK :
rank: 361
score: 98.55007934570312
patch: case String = Token . AND :
rank: 362
score: 99.09446716308594
patch: / / case Token . OR :
rank: 362
score: 98.96070445667614
patch: case Token . AND : case Token . SEMI :
rank: 362
score: 98.9207430752841
patch: case Token . NOT : case Token . TYPE :
rank: 362
score: 98.82022094726562
patch: final Token case Type . AND :
rank: 362
score: 98.7257080078125
patch: case Token . AND : / }
rank: 362
score: 98.71944427490234
patch: else : case Token . AND :
rank: 362
score: 98.6922607421875
patch: case Token . AND : case FUNCTION :
rank: 362
score: 98.54833984375
patch: case Token . AND : : super .
rank: 363
score: 99.0907451923077
patch: : switch ( n . get CaMeL Type ( ) ) {
rank: 363
score: 98.96023559570312
patch: case Token . AND : case Token . decode ( n . get CaMeL String ( ) ) :
rank: 363
score: 98.81832885742188
patch: case Token . AND : * :
rank: 363
score: 98.81508225661058
patch: idx = n . get CaMeL Last CaMeL Child ( ) ;
rank: 363
score: 98.71852329799107
patch: case $STRING$ : case $STRING$ :
rank: 363
score: 98.54818386501736
patch: case Integer . AND : case / :
rank: 364
score: 99.09053548177083
patch: case Token . OR : : case Token . AND :
rank: 364
score: 99.013671875
patch: case Token . HOOK : return Token . ASSIGN ;
rank: 364
score: 98.95859596946023
patch: case Token . NAME : case Token . NULL :
rank: 364
score: 98.81760864257812
patch: case Token . AND : Token . AND ?
rank: 364
score: 98.81446533203125
patch: break n . get CaMeL Next ( ) ;
rank: 364
score: 98.7211201985677
patch: case Token . KILL :
rank: 364
score: 98.71849229600694
patch: case $STRING$ . case : case $STRING$ ;
rank: 364
score: 98.54810333251953
patch: case Type . TYPE : break :
rank: 365
score: 98.9575927734375
patch: case Token . AND : case Token . TYPE : Token . AND :
rank: 365
score: 98.81745062934027
patch: * * * * Token . AND :
rank: 365
score: 98.81366521661931
patch: n . get CaMeL First CaMeL Child ( ) .
rank: 365
score: 98.71832953559027
patch: case 0 case Token . AND : :
rank: 365
score: 98.68330891927083
patch: case Token . NAME : / * /
rank: 365
score: 98.54795328776042
patch: case Type . AND : . / :
rank: 366
score: 99.08892352764423
patch: / / case Token . AND : case Token . OR :
rank: 366
score: 99.01315307617188
patch: Node node = n . get CaMeL First ( ) ;
rank: 366
score: 98.95751190185547
patch: if ( n . get CaMeL Type ( ) == Token . AND ) :
rank: 366
score: 98.91544966264205
patch: case Token . TYPE : case Token . NONE :
rank: 366
score: 98.71761322021484
patch: case 0 : : case 1 :
rank: 366
score: 98.68120574951172
patch: } else case Token . AND :
rank: 366
score: 98.54764811197917
patch: case Integer . RIGHT :
rank: 367
score: 98.9571533203125
patch: case Token . AND : case Token . flow :
rank: 367
score: 98.91503295898437
patch: break ; case Token . AND : break ;
rank: 367
score: 98.81613159179688
patch: super . case Token . AND :
rank: 367
score: 98.81343587239583
patch: case Token . AND : / / :
rank: 367
score: 98.7173080444336
patch: case Token . parse : : :
rank: 367
score: 98.71598985460069
patch: case Token . OR : case String :
rank: 367
score: 98.68051147460938
patch: case Token . ALL :
rank: 367
score: 98.54751247829861
patch: case Token . AND : . * :
rank: 368
score: 99.08743990384616
patch: if ( variable . equals ( Name . ASSIGN ) ) {
rank: 368
score: 99.00882975260417
patch: else case Token . HOOK : case Token . HOOK :
rank: 368
score: 98.8139892578125
patch: } else { if ( Token . AND :
rank: 368
score: 98.71690538194444
patch: case Token . FALSE : case $STRING$ ;
rank: 368
score: 98.7159423828125
patch: case Token . AND : / - :
rank: 368
score: 98.68037245008681
patch: case Token . AND : case Token ;
rank: 368
score: 98.54463195800781
patch: case null + Token . AND :
rank: 369
score: 98.95648600260417
patch: if ( n . get CaMeL Type ( ) == Token . LINE )
rank: 369
score: 98.91361860795455
patch: case Token . match ( Token . AND ) :
rank: 369
score: 98.71588134765625
patch: case $STRING$ : : case 0 ;
rank: 369
score: 98.71583387586806
patch: case Node . HOOK : / * /
rank: 369
score: 98.67945353190105
patch: case Token . NEW :
rank: 369
score: 98.54379272460938
patch: case Integer . AND : / /
rank: 370
score: 99.0862325032552
patch: switch ( n . get CaMeL Style ( ) ) {
rank: 370
score: 99.00867716471355
patch: Node name = n . get CaMeL Parent ( ) ;
rank: 370
score: 98.95643028846153
patch: case Token . AND : : case Token . NULL : :
rank: 370
score: 98.81205749511719
patch: break : if Token . AND :
rank: 370
score: 98.71535237630208
patch: case Token . OR : / * else
rank: 370
score: 98.7132568359375
patch: Token : case Token . AND :
rank: 370
score: 98.67794460720486
patch: case Token . | Token . AND :
rank: 370
score: 98.54325866699219
patch: case Token . TYPE : break :
rank: 371
score: 99.0857645670573
patch: case Token . OR : : case Token . OR :
rank: 371
score: 99.00738994891827
patch: if ( null != n . get CaMeL Type ( ) )
rank: 371
score: 98.9560546875
patch: case Token . AND : case Token . AND : case Token . TARGET :
rank: 371
score: 98.9119873046875
patch: case Token . AND : Token . FALSE :
rank: 371
score: 98.71486409505208
patch: case Token . HOOK : return ) ;
rank: 371
score: 98.71113586425781
patch: case $STRING$ : case 0 : :
rank: 371
score: 98.67634412977431
patch: case Token . || Token . HOOK :
rank: 371
score: 98.54302978515625
patch: case Token . IN : : :
rank: 372
score: 99.08409627278645
patch: case Token . OR : case Token . OR * :
rank: 372
score: 98.95519205729167
patch: if ( node . get CaMeL Type ( ) == Token . FUNCTION )
rank: 372
score: 98.91170654296874
patch: break Token . AND | Token . AND :
rank: 372
score: 98.81081717354911
patch: if ( Token . AND :
rank: 372
score: 98.81051635742188
patch: case Token . AND : return Token . KILL ; }
rank: 372
score: 98.71436309814453
patch: case Token . HOOK : default :
rank: 372
score: 98.71092987060547
patch: } : case Token . TRUE :
rank: 372
score: 98.67282443576389
patch: case Token . AND ; / * /
rank: 372
score: 98.54208809988839
patch: case Token . YES : :
rank: 373
score: 98.95475463867187
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 373
score: 98.810498046875
patch: case Token . AND : case char : :
rank: 373
score: 98.81000225360577
patch: case Token . OR : return Node CaMeL Util . HOOK ;
rank: 373
score: 98.71376255580357
patch: / case Token . HOOK :
rank: 373
score: 98.70613606770833
patch: case String case ) :
rank: 373
score: 98.54188537597656
patch: case Token . RIGHT : : :
rank: 374
score: 99.08368389423077
patch: / / case Token . AND : case Token . AND :
rank: 374
score: 98.90971235795455
patch: case Token . TRUE : case Token . FALSE :
rank: 374
score: 98.80965482271634
patch: loop = n . get CaMeL First CaMeL Child ( ) ;
rank: 374
score: 98.80943603515625
patch: case Token . AND : Token : / :
rank: 374
score: 98.71109347873264
patch: case Token . AND : } } }
rank: 374
score: 98.70582580566406
patch: case Token . : case String :
rank: 374
score: 98.67157660590277
patch: case Token . AND : } else {
rank: 374
score: 98.54187689887152
patch: case Type . AND : case / :
rank: 375
score: 99.08360877403847
patch: / / case Token . AND : case Token . HOOK :
rank: 375
score: 98.95367986505681
patch: case Token . NULL : case Token . NAME :
rank: 375
score: 98.80955810546875
patch: case Token . AND |= Token . AND :
rank: 375
score: 98.80906982421875
patch: case Token . AND : case Token : }
rank: 375
score: 98.54095458984375
patch: case Token . NAME : : :
rank: 376
score: 99.0811298076923
patch: / * case Token . OR : case Token . AND :
rank: 376
score: 98.95295984604779
patch: case Token . AND : : case Token . AND : case Token . AND :
rank: 376
score: 98.90889115767045
patch: case Token . AND : case Token . UNSUPPORTED :
rank: 376
score: 98.80861253004808
patch: case Token . HOOK : case Token . AND : / :
rank: 376
score: 98.70455593532986
patch: case Token . AND : return this ;
rank: 376
score: 98.70198059082031
patch: case Token . AND ? AND :
rank: 376
score: 98.66975402832031
patch: case ) case Token . AND :
rank: 376
score: 98.53949846540179
patch: case Type . RIGHT : :
rank: 377
score: 99.0806884765625
patch: switch ( n . get CaMeL Scope ( ) ) {
rank: 377
score: 98.80859375
patch: case Token . OR : return Token . AND ; }
rank: 377
score: 98.80735270182292
patch: / * * Token . AND : /
rank: 377
score: 98.70424107142857
patch: case Token . AND : ;
rank: 377
score: 98.70175170898438
patch: case Token . AND | $STRING$ .
rank: 377
score: 98.53909301757812
patch: case Type . AND : break /
rank: 378
score: 99.00181995738636
patch: case Token . HOOK : case Token . NUMBER :
rank: 378
score: 98.95002885298295
patch: case Token . AND : case Token . DO :
rank: 378
score: 98.90855823863636
patch: case Token . AND : break Token . EMPTY :
rank: 378
score: 98.80693359375
patch: break : this . case Token . AND :
rank: 378
score: 98.69950103759766
patch: case Token . AND case $STRING$ :
rank: 378
score: 98.53749302455357
patch: case Integer . 0 : :
rank: 379
score: 99.07846069335938
patch: switch ( variable . get CaMeL Next ( ) ) {
rank: 379
score: 99.00077311197917
patch: case Token . AND : case Token . HOOK : case
rank: 379
score: 98.94981282552084
patch: case Token . AND : case Token . AND : Token . NULL :
rank: 379
score: 98.80686442057292
patch: / Token . AND :
rank: 379
score: 98.7020263671875
patch: case Token . AND : / / }
rank: 379
score: 98.6993179321289
patch: case $STRING$ || Token . AND :
rank: 379
score: 98.53694152832031
patch: case Token . STRING : : :
rank: 380
score: 99.07833158052884
patch: / * switch ( n . get CaMeL Type ( ) )
rank: 380
score: 98.9067715731534
patch: case Token . STAR : case Token . AND :
rank: 380
score: 98.80799449573864
patch: binding = n . get CaMeL Next ( ) ;
rank: 380
score: 98.80628662109375
patch: case Token . AND : case Token : :
rank: 380
score: 98.70150320870536
patch: case Token . HOOK : ;
rank: 380
score: 98.66067165798611
patch: case Node CaMeL Util . AND : {
rank: 380
score: 98.53675842285156
patch: case Token . AND + $NUMBER$ :
rank: 381
score: 98.949169921875
patch: if ( node . get CaMeL Type ( ) == Token . STRING )
rank: 381
score: 98.80612417367789
patch: x = n . get CaMeL First CaMeL Child ( ) ;
rank: 381
score: 98.6998519897461
patch: case Token . ASSIGN : / /
rank: 381
score: 98.69829559326172
patch: case $STRING$ . case ? ) :
rank: 381
score: 98.53670501708984
patch: case Integer . AND : . /
rank: 382
score: 99.0774676983173
patch: / : case Token . OR : case Token . AND :
rank: 382
score: 98.94812825520833
patch: case Token . decode ( n . get CaMeL String ( ) ) :
rank: 382
score: 98.90480735085227
patch: case Token . INSTANCEOF : case Token . AND :
rank: 382
score: 98.69860161675348
patch: case Token . AND : case ) ;
rank: 382
score: 98.69804382324219
patch: return : case Token . AND :
rank: 382
score: 98.65497504340277
patch: case ) : case Token . AND :
rank: 383
score: 98.94801330566406
patch: case Token . AND : case Token . NOT : case Token . AND :
rank: 383
score: 98.90378639914773
patch: case Token . NOT : case Token . NOT :
rank: 383
score: 98.80574951171874
patch: case Token . AND : case $STRING$ : }
rank: 383
score: 98.80553260216347
patch: p = n . get CaMeL First CaMeL Child ( ) ;
rank: 383
score: 98.69853379991319
patch: case Token . HOOK : / * ?
rank: 383
score: 98.6973164876302
patch: case int case ) :
rank: 383
score: 98.53509521484375
patch: case Token . START :
rank: 384
score: 99.07582600911458
patch: switch ( n . get CaMeL Symbol ( ) ) {
rank: 384
score: 98.99770883413461
patch: Node CaMeL Util . is CaMeL Lhs ( n , variable )
rank: 384
score: 98.94757843017578
patch: case Token . AND : case Token . NAME : case Token . AND :
rank: 384
score: 98.90288751775569
patch: case Token . concat ( Token . AND ) :
rank: 384
score: 98.80504150390625
patch: case Token . AND / Token . AND :
rank: 384
score: 98.69852701822917
patch: case Token . OR : case $STRING$ :
rank: 384
score: 98.69438171386719
patch: case Token . AND : { :
rank: 384
score: 98.53413391113281
patch: case Token . AND : . *
rank: 385
score: 98.94729817708334
patch: case Token . AND : case Token . TYPE | Token . AND :
rank: 385
score: 98.80510919744319
patch: case Token . HOOK : = Token . AND ;
rank: 385
score: 98.69397735595703
patch: case Token . : ( : :
rank: 385
score: 98.53281075613839
patch: case Token . AND : try
rank: 386
score: 99.0747821514423
patch: case Node CaMeL Util . is CaMeL Name ( n ) :
rank: 386
score: 98.9967510516827
patch: if ( n . get CaMeL Type ( ) instanceof Node )
rank: 386
score: 98.90113414417614
patch: case Token . AND : case Token . RC :
rank: 386
score: 98.80503336588542
patch: case Token . AND : return Token . READ ; }
rank: 386
score: 98.80372450086806
patch: Token case Token . AND : break :
rank: 386
score: 98.69384002685547
patch: case Token . AND : / finally
rank: 386
score: 98.69338989257812
patch: case $STRING$ : case : { :
rank: 386
score: 98.53238932291667
patch: case Token . STATEMENT :
rank: 387
score: 99.07355205829327
patch: / * case Token . OR : case Token . OR :
rank: 387
score: 98.99661020132211
patch: if ( n . get CaMeL Parent ( ) == null )
rank: 387
score: 98.94710286458333
patch: switch ( n . get CaMeL Type ( ) == Token . AND )
rank: 387
score: 98.90065696022727
patch: case Token . NOT : case Token . TRUE :
rank: 387
score: 98.69223022460938
patch: case Token . : : : .
rank: 387
score: 98.69093831380208
patch: case Node CaMeL Util . HOOK : {
rank: 387
score: 98.65258026123047
patch: case ( Token . AND ) :
rank: 387
score: 98.53181457519531
patch: case Type . State . AND :
rank: 388
score: 99.07310994466145
patch: case Token . OR * : case Token . AND :
rank: 388
score: 98.94684392755681
patch: if ( Token . AND || Token . AND . equals ( n . get CaMeL String ( ) ) :
rank: 388
score: 98.9001797762784
patch: case Token . NULL : case Token . code :
rank: 388
score: 98.80381266276042
patch: case Token . HOOK : case Token . HOOK : :
rank: 388
score: 98.80148315429688
patch: if Token case Token . AND :
rank: 388
score: 98.69149780273438
patch: case $STRING$ : case : / :
rank: 388
score: 98.69002956814236
patch: case Token . AND : System . else
rank: 388
score: 98.65193176269531
patch: / * /
rank: 388
score: 98.53160095214844
patch: case Type . NOT : : :
rank: 389
score: 99.07173665364583
patch: case Token . OR : : case Token . HOOK :
rank: 389
score: 98.99349271334134
patch: if ( null != n . get CaMeL Parent ( ) )
rank: 389
score: 98.94648742675781
patch: case Token . NOT : case Token . AND : case Token . AND :
rank: 389
score: 98.80050998263889
patch: break : if case Token . AND :
rank: 389
score: 98.69144694010417
patch: case : case $STRING$ :
rank: 389
score: 98.65126546223958
patch: / * / case Node . AND :
rank: 389
score: 98.53143310546875
patch: case Token . COMMA :
rank: 390
score: 99.06905423677884
patch: / : case Token . OR : case Token . OR :
rank: 390
score: 98.94607062088816
patch: case Token . AND : case Token . decode ( n . get CaMeL String ( ) )
rank: 390
score: 98.79789225260417
patch: case Token . AND : case Long :
rank: 390
score: 98.68717447916667
patch: case Token . AND : return ) ;
rank: 390
score: 98.53035481770833
patch: case Token . EXPRESSION :
rank: 391
score: 98.94535827636719
patch: case Token . AND : case Token . AND : case Token . NAME :
rank: 391
score: 98.79749891493056
patch: case Token . AND : case Object :
rank: 391
score: 98.69131469726562
patch: case $STRING$ . case 0 : :
rank: 391
score: 98.68630981445312
patch: case Token . AND : { {
rank: 391
score: 98.52896554129464
patch: case Token . ERROR : :
rank: 392
score: 99.06748453776042
patch: case Token . OR : case Token . OR : :
rank: 392
score: 98.94501287286931
patch: case Token . TYPE : case Token . NULL :
rank: 392
score: 98.8961514559659
patch: case Token . NONE : case Token . EMPTY :
rank: 392
score: 98.80150257457386
patch: case Token . AND : case String . HOOK :
rank: 392
score: 98.79740142822266
patch: if Token . AND : break :
rank: 392
score: 98.69087982177734
patch: case $STRING$ .
rank: 393
score: 99.06472778320312
patch: switch ( n . get CaMeL Types ( ) ) {
rank: 393
score: 98.98958646334134
patch: case Token . HOOK : case Token . AND : / /
rank: 393
score: 98.80042613636364
patch: finally ( n . get CaMeL Type ( ) )
rank: 393
score: 98.79720458984374
patch: Token . AND : case Node . AND :
rank: 393
score: 98.6906229654948
patch: case : : : :
rank: 393
score: 98.52723185221355
patch: case Integer . NULL :
rank: 394
score: 98.9893086751302
patch: case Token . HOOK : / / Token . HOOK :
rank: 394
score: 98.9442138671875
patch: case Token . AND : case Token . NULL : case Token . NONE :
rank: 394
score: 98.89588512073864
patch: case Token . AND : case Token . references :
rank: 394
score: 98.79705200195312
patch: break : break : case Token . AND :
rank: 394
score: 98.68950653076172
patch: case Token . : : : }
rank: 394
score: 98.68473815917969
patch: / : case Token . HOOK :
rank: 394
score: 98.6447245279948
patch: case Token . error :
rank: 394
score: 98.52686309814453
patch: case String case Token . AND :
rank: 395
score: 98.9881591796875
patch: case Node CaMeL Util . READ : case Token . HOOK :
rank: 395
score: 98.9439697265625
patch: case Token . AND : case Token . concat ( Token . AND ) :
rank: 395
score: 98.8956298828125
patch: throw new Assertion CaMeL Error ( $STRING$ ) ;
rank: 395
score: 98.79611206054688
patch: Token n = n . get CaMeL Next ( ) ;
rank: 395
score: 98.68946838378906
patch: case : return Token . AND :
rank: 395
score: 98.68459065755208
patch: if ( n . get CaMeL Child CaMeL
rank: 396
score: 98.94375465029762
patch: if ( Token . AND || Token . AND . equals ( n . get CaMeL String ( ) :
rank: 396
score: 98.8951748934659
patch: case Token . NULL : case Token . class :
rank: 396
score: 98.79536576704545
patch: case Token . AND : return Type . AND :
rank: 396
score: 98.79347446986607
patch: { case Token . AND :
rank: 396
score: 98.68942260742188
patch: case $STRING$ : case - : :
rank: 396
score: 98.64450412326389
patch: case Token . NOT : / * /
rank: 396
score: 98.52641296386719
patch: case new Token . AND : .
rank: 397
score: 99.06214317908653
patch: if ( variable . equals ( Name . OR ) ) {
rank: 397
score: 98.94349888392857
patch: if ( Token . AND . equals ( n . get CaMeL String ( Token . AND ) ) )
rank: 397
score: 98.89511940696023
patch: case Token . AND : case Token . concat :
rank: 397
score: 98.79518636067708
patch: break n . get CaMeL First CaMeL Child ( ) {
rank: 397
score: 98.68780517578125
patch: case Token . TRUE : break :
rank: 397
score: 98.68235778808594
patch: case Token . AND : / *
rank: 397
score: 98.64409044053819
patch: case Node CaMeL Util . OR : {
rank: 397
score: 98.524169921875
patch: case Type . IN : :
rank: 398
score: 99.06063842773438
patch: case Token . OR : case Token . AND * :
rank: 398
score: 98.98719200721153
patch: case Token . AND : case Token . HOOK : / /
rank: 398
score: 98.94330797697368
patch: if ( Token . EMPTY . equals ( n . get CaMeL String ( : ) ) )
rank: 398
score: 98.89476429332386
patch: case Token . AND : case Token . CATCH :
rank: 398
score: 98.68155924479167
patch: if ( Node CaMeL Util != null )
rank: 398
score: 98.52410888671875
patch: case Token . AND , :
rank: 399
score: 99.05923461914062
patch: switch ( n . get CaMeL Root ( ) ) {
rank: 399
score: 98.98567708333333
patch: else case Token . HOOK : case Token . AND :
rank: 399
score: 98.94324544270833
patch: if ( Token . AND || Token . AND || Token . AND )
rank: 399
score: 98.89438698508523
patch: case Token . AND : case Token . warning :
rank: 399
score: 98.79384358723958
patch: case Token . AND : case Token . AND / :
rank: 399
score: 98.79195149739583
patch: case Long : case Token . AND :
rank: 399
score: 98.68550872802734
patch: case : case Token . NONE :
rank: 399
score: 98.64036342075893
patch: case Token . AND * /
rank: 399
score: 98.52383422851562
patch: case Token . LT :
rank: 400
score: 99.05907264122597
patch: / . case Token . OR : case Token . AND :
rank: 400
score: 98.98499474158653
patch: case Token . HOOK : case Node CaMeL Util . KILL :
rank: 400
score: 98.94291759672619
patch: if ( Token . AND . AND . equals ( n . get CaMeL String ( : ) ) )
rank: 400
score: 98.79299094460227
patch: case Token . AND : = Token . HOOK ;
rank: 400
score: 98.79097493489583
patch: / * Token . AND : * /
rank: 400
score: 98.6850814819336
patch: case Token . : : { :
rank: 400
score: 98.52347564697266
patch: case ( Token . AND : .
rank: 401
score: 99.05740966796876
patch: case Token . OR || Token . OR :
rank: 401
score: 98.9426602450284
patch: case Token . AND : case Token . MAIN :
rank: 401
score: 98.89324951171875
patch: case Token . NONE : break ;
rank: 401
score: 98.7899658203125
patch: } else { if case Token . AND :
rank: 401
score: 98.6827163696289
patch: case Token . AND : continue :
rank: 401
score: 98.67848036024306
patch: case Token . AND : / * finally
rank: 401
score: 98.63789198133681
patch: case Token . AND : return Token ;
rank: 401
score: 98.52255249023438
patch: case Token . SUB :
rank: 402
score: 99.0565185546875
patch: switch ( variable . get CaMeL Name ( ) ) {
rank: 402
score: 98.9426040649414
patch: case Token . NULL : case Token . TYPE : case Token . AND :
rank: 402
score: 98.89295654296875
patch: case Token . AND : Token . NULL :
rank: 402
score: 98.79076131184895
patch: case Token . HOOK : return Token . AND ; }
rank: 402
score: 98.78944091796875
patch: case Token . AND : } / * :
rank: 402
score: 98.67829132080078
patch: case Token . AND : { }
rank: 402
score: 98.67703247070312
patch: } case Token . AND : :
rank: 402
score: 98.5225118001302
patch: case Type . 0 :
rank: 403
score: 99.05596923828125
patch: case Token . AND : : case Token . OR :
rank: 403
score: 98.94208441840277
patch: if ( Token . NULL . equals ( n . get CaMeL String ( : ) :
rank: 403
score: 98.79060502485795
patch: name = n . get CaMeL String ( ) ;
rank: 403
score: 98.67660522460938
patch: case Token . : : break :
rank: 403
score: 98.63690863715277
patch: case Token . IN : / * /
rank: 403
score: 98.52210235595703
patch: case Token . TYPE . AND :
rank: 404
score: 99.05567423502605
patch: / case Token . AND : case Token . OR :
rank: 404
score: 98.98346416766827
patch: if ( null == n . get CaMeL Type ( ) )
rank: 404
score: 98.94163602941177
patch: case Token . NULL : case Token . NULL : case Token . NULL : :
rank: 404
score: 98.8915127840909
patch: if ( n . get CaMeL Type ( ) :
rank: 404
score: 98.79051624644886
patch: case Token . HOOK : = Token . HOOK ;
rank: 404
score: 98.78816528320313
patch: / * case Token . AND : break :
rank: 404
score: 98.63575962611607
patch: else case Token . AND :
rank: 404
score: 98.52147420247395
patch: case Type . MIN :
rank: 405
score: 99.05433146158855
patch: switch ( n . get CaMeL Code ( ) ) {
rank: 405
score: 98.98324819711539
patch: case Token . OR : / / case Token . HOOK :
rank: 405
score: 98.94153941761364
patch: case Token . NO : case Token . NULL :
rank: 405
score: 98.8912686434659
patch: break Token . TRUE ; case Token . AND :
rank: 405
score: 98.787109375
patch: case Token . AND : break AND : }
rank: 405
score: 98.63471815321181
patch: case Token . case Token . HOOK :
rank: 405
score: 98.52140590122768
patch: case Type . STRING : :
rank: 406
score: 99.05421956380208
patch: case Token . AND : : case Token . HOOK :
rank: 406
score: 98.89119096235795
patch: case Token . AND : case Token . abs :
rank: 406
score: 98.79030539772727
patch: case Exception . AND : case Token . HOOK :
rank: 406
score: 98.67479705810547
patch: case $STRING$ ? Token . AND :
rank: 406
score: 98.67109510633681
patch: case Token . HOOK : case $STRING$ :
rank: 406
score: 98.52094268798828
patch: case Type . AND || null :
rank: 407
score: 99.05350952148437
patch: switch ( get CaMeL Name ( ) ) {
rank: 407
score: 98.98247736150569
patch: case Token . HOOK : case Token . PREFIX :
rank: 407
score: 98.79017223011364
patch: case Token . AND : return Token . NOT ;
rank: 407
score: 98.78642272949219
patch: { Token case Token . AND :
rank: 407
score: 98.51888275146484
patch: case Type . AND : AND :
rank: 408
score: 98.94036310369319
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Class CaMeL Name ( ) ) ;
rank: 408
score: 98.79008345170455
patch: case Token . ) : case Token . AND :
rank: 408
score: 98.6731185913086
patch: case Token . : : case :
rank: 408
score: 98.66864691840277
patch: case Token . AND : / / else
rank: 408
score: 98.63177490234375
patch: case Token . length ( ) :
rank: 408
score: 98.51845877511161
patch: if case Integer . AND :
rank: 409
score: 99.0509745279948
patch: case Token . OR * : case Token . OR :
rank: 409
score: 98.98202749399039
patch: case Token . AND : case Token . HOOK : break ;
rank: 409
score: 98.88844992897727
patch: case Token . AND : break Token . NONE :
rank: 409
score: 98.51734924316406
patch: case Token . AND = null :
rank: 410
score: 98.98172701322116
patch: case Node CaMeL Util . KILL : case Token . AND :
rank: 410
score: 98.93910845588235
patch: if ( Token . NULL . equals ( n . get CaMeL Type ( ) :
rank: 410
score: 98.88823908025569
patch: break Token . AND : break Token . AND ;
rank: 410
score: 98.7872802734375
patch: case Token . AND = Token . HOOK ;
rank: 410
score: 98.785888671875
patch: } else * / case Token . AND :
rank: 410
score: 98.66678195529514
patch: case Token . HOOK : / - :
rank: 411
score: 98.938916015625
patch: if ( Token . AND . equals ( n . get CaMeL String ( Token . AND ) :
rank: 411
score: 98.78683471679688
patch: Token node = n . get CaMeL Next ( ) ;
rank: 411
score: 98.78553466796875
patch: case Token . AND : case ? : :
rank: 411
score: 98.67164611816406
patch: case 0 : : case : :
rank: 411
score: 98.6663818359375
patch: case Token . OR finally {
rank: 411
score: 98.62604437934027
patch: / * else case Token . AND :
rank: 411
score: 98.51664733886719
patch: case Result . AND : : :
rank: 412
score: 98.8876953125
patch: case Token . AND : case Token . decode :
rank: 412
score: 98.67153930664062
patch: case Token . : ? : :
rank: 412
score: 98.51538848876953
patch: case += Token . AND : :
rank: 413
score: 98.9788348858173
patch: if ( n . get CaMeL Type ( ) instanceof Token )
rank: 413
score: 98.93721147017045
patch: if ( Token . AND || Token . TRUE . equals ( n . get CaMeL Boolean ( ) ) )
rank: 413
score: 98.78520063920455
patch: break ( n . get CaMeL Type ( ) )
rank: 413
score: 98.78353881835938
patch: switch ( case Type . AND :
rank: 413
score: 98.6700668334961
patch: case $STRING$ : : case : :
rank: 413
score: 98.6650390625
patch: case Token . STRING : / * /
rank: 414
score: 98.97761674360795
patch: case Token . PREFIX : case Token . HOOK :
rank: 414
score: 98.93685913085938
patch: case Token . NAME : case Token . AND : case Token . AND :
rank: 414
score: 98.78516734730114
patch: case Token . AND : return Type . AND ;
rank: 414
score: 98.66877746582031
patch: case Token . : ( Token :
rank: 414
score: 98.66461859809027
patch: case Token . AND : case ) {
rank: 414
score: 98.61968315972223
patch: case FUNCTION : case Token . AND :
rank: 414
score: 98.51487731933594
patch: case Integer . AND : this .
rank: 415
score: 99.04761759440105
patch: switch ( n . get CaMeL Result ( ) ) {
rank: 415
score: 98.9366455078125
patch: case Token . CHECK : case Token . TRUE :
rank: 415
score: 98.88640802556819
patch: case Token . AND : case Token . CONTROL :
rank: 415
score: 98.66653442382812
patch: case Token . AND + : :
rank: 415
score: 98.66453552246094
patch: case Token . HOOK : / ;
rank: 415
score: 98.61651611328125
patch: case Token . AND : . break ;
rank: 415
score: 98.51327514648438
patch: case Token . AND , : :
rank: 416
score: 98.93658126027961
patch: if ( Token . NULL . equals ( n . get CaMeL String ( ) : ) )
rank: 416
score: 98.88618607954545
patch: case Token . TYPE : case Token . class :
rank: 416
score: 98.78358968098958
patch: case Token . OR : return Token . HOOK ; }
rank: 416
score: 98.78101806640625
patch: break Token . AND ? Token . AND :
rank: 416
score: 98.66613006591797
patch: case : : : : : :
rank: 416
score: 98.61598714192708
patch: / * * case Token . HOOK :
rank: 416
score: 98.51261901855469
patch: case byte case Token . AND :
rank: 417
score: 98.93647317325367
patch: case Token . NULL : case Token . AND : case Token . AND : :
rank: 417
score: 98.78346946022727
patch: case Token . AND : return Token . READ :
rank: 417
score: 98.66436767578125
patch: case $STRING$ : case Token . :
rank: 417
score: 98.65901692708333
patch: case Token . AND : / } }
rank: 417
score: 98.61588541666667
patch: case Token { case Token . AND :
rank: 417
score: 98.51190185546875
patch: case Token . NO : :
rank: 418
score: 99.04665120442708
patch: : case Token . OR : case Token . AND :
rank: 418
score: 98.9752705891927
patch: Node parent = n . get CaMeL Next ( ) ;
rank: 418
score: 98.93645881204044
patch: case Token . AND : case Token . AND : case Token . EMPTY : :
rank: 418
score: 98.88494318181819
patch: case Token . AND : case Token . VERBOSE :
rank: 418
score: 98.77836100260417
patch: / * * * Token . AND /
rank: 418
score: 98.6641616821289
patch: case $STRING$ . case - 1 :
rank: 418
score: 98.65769449869792
patch: case Token . ERROR : / * /
rank: 418
score: 98.61562771267361
patch: case Token . HOOK : , * /
rank: 418
score: 98.51072184244792
patch: case Token . DEFAULT :
rank: 419
score: 98.97518920898438
patch: return Node CaMeL Util . is CaMeL Lhs ( variable )
rank: 419
score: 98.93614612926136
patch: case Token . AND : case Token . visit :
rank: 419
score: 98.88472123579545
patch: case Token . EMPTY : case Token . NO :
rank: 419
score: 98.7821377840909
patch: case Token . AND : return Type . HOOK ;
rank: 419
score: 98.77794731987848
patch: Token . AND ? Token . AND :
rank: 419
score: 98.6632080078125
patch: case Token . TRUE : Token {
rank: 419
score: 98.65665690104167
patch: case Token . OR : / * ?
rank: 419
score: 98.61502414279514
patch: case Token ; case Token . AND :
rank: 419
score: 98.5094502766927
patch: case Token . INCLUDE :
rank: 420
score: 99.04290771484375
patch: case Token . OR : case Token . AND * /
rank: 420
score: 98.93580932617188
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 420
score: 98.6626205444336
patch: case 0 : : case 0 ;
rank: 420
score: 98.5072250366211
patch: case Token . NONE : : :
rank: 421
score: 99.04269409179688
patch: if ( null . is CaMeL Name ( ) ) {
rank: 421
score: 98.93562455610795
patch: case Token . TARGET : case Token . FUNCTION :
rank: 421
score: 98.883056640625
patch: case Token . NULL : case Token . DEFAULT :
rank: 421
score: 98.7811612215909
patch: case Token . TRUE : case Token . HOOK :
rank: 421
score: 98.77688598632812
patch: case Token . AND : break : : }
rank: 421
score: 98.66211700439453
patch: case Token . AND ? . :
rank: 421
score: 98.65225558810764
patch: case Token . n : / * /
rank: 421
score: 98.50621032714844
patch: case Integer . AND : if :
rank: 422
score: 99.041748046875
patch: switch ( n . get CaMeL Property ( ) ) {
rank: 422
score: 98.9354248046875
patch: case Token . SWITCH : case Token . AND :
rank: 422
score: 98.77647569444444
patch: case Token . AND : case Float :
rank: 422
score: 98.66078186035156
patch: Token . AND : case $STRING$ :
rank: 422
score: 98.60786946614583
patch: case Token . AND : / * first
rank: 422
score: 98.50600760323661
patch: case Character . AND : :
rank: 423
score: 98.93537139892578
patch: if ( n . get CaMeL Type ( ) == Token . TRUE ) {
rank: 423
score: 98.775732421875
patch: case Token . AND : : break : :
rank: 423
score: 98.66035970052083
patch: case int case : :
rank: 423
score: 98.5054702758789
patch: case switch case Token . AND :
rank: 424
score: 98.97289021809895
patch: else case Token . AND : case Token . AND :
rank: 424
score: 98.93448638916016
patch: if ( node . get CaMeL Type ( ) == Token . NONE ) {
rank: 424
score: 98.88194691051136
patch: case Token . AND : case Token . EOL :
rank: 424
score: 98.6600570678711
patch: case Token . value CaMeL Of :
rank: 424
score: 98.64785766601562
patch: case Token . HOOK : { }
rank: 424
score: 98.50518798828125
patch: case Type . AND : : {
rank: 425
score: 98.93446350097656
patch: case Token . EMPTY : case Token . AND : case Token . AND :
rank: 425
score: 98.88023071289062
patch: case Token . AND : Token . code :
rank: 425
score: 98.77245415581598
patch: case Token . AND : Token : :
rank: 425
score: 98.6590576171875
patch: case : : : case $STRING$ :
rank: 426
score: 99.04043579101562
patch: case Token . OR : case Token . HOOK * /
rank: 426
score: 98.86916775173611
patch: case Token . AND : break ; :
rank: 426
score: 98.65882873535156
patch: case Token . : : Token :
rank: 426
score: 98.64506022135417
patch: case Token . HOOK : } } }
rank: 426
score: 98.60648345947266
patch: case Token = Token . AND ;
rank: 426
score: 98.50416564941406
patch: case case Token . AND : :
rank: 427
score: 99.03968302408855
patch: switch ( n . to CaMeL String ( ) ) {
rank: 427
score: 98.9717508951823
patch: Node check = n . get CaMeL Next ( ) ;
rank: 427
score: 98.93330522017045
patch: case Token . AND : case Token . exec :
rank: 427
score: 98.86326293945312
patch: if Token . AND || Token . AND )
rank: 427
score: 98.77147827148437
patch: return Token . AND | Token . AND :
rank: 427
score: 98.65803527832031
patch: case $STRING$ case Token . FALSE :
rank: 427
score: 98.64378526475694
patch: case Token . HOOK : return this ;
rank: 427
score: 98.60565185546875
patch: * / case Token . AND :
rank: 427
score: 98.50350952148438
patch: case * * Token . AND :
rank: 428
score: 98.97171724759616
patch: case Token . HOOK : case Node CaMeL Util . READ :
rank: 428
score: 98.85793050130208
patch: case Token . AND : break ; }
rank: 428
score: 98.77694702148438
patch: case n . get CaMeL Type ( ) :
rank: 428
score: 98.77026977539063
patch: case Token . AND || Token . AND ?
rank: 428
score: 98.65440368652344
patch: case Node CaMeL Util . : :
rank: 428
score: 98.64259338378906
patch: case Token . OR : / ;
rank: 428
score: 98.6052474975586
patch: case Token . Driver . AND :
rank: 428
score: 98.50239562988281
patch: case Token . NOT : break :
rank: 429
score: 98.93316095525569
patch: case Token . EMPTY : case Token . FUNCTION :
rank: 429
score: 98.85411376953125
patch: case Token . AND : Token . NONE :
rank: 429
score: 98.77557927911931
patch: case State . AND : case Token . AND :
rank: 429
score: 98.76973470052083
patch: break Token : case Token . AND :
rank: 429
score: 98.6541519165039
patch: } : if Token . AND :
rank: 429
score: 98.64155409071181
patch: case Token . OR : case ) ;
rank: 429
score: 98.60491180419922
patch: case Token . HOOK / * /
rank: 430
score: 98.97043081430289
patch: case Token . HOOK : / / case Token . OR :
rank: 430
score: 98.93254852294922
patch: if ( node . get CaMeL Type ( ) == Token . TARGET ) {
rank: 430
score: 98.85111236572266
patch: throw new Error ( $STRING$ ) ;
rank: 430
score: 98.7754794034091
patch: result = n . get CaMeL First ( ) ;
rank: 430
score: 98.65264892578125
patch: case Token . TRUE : / :
rank: 430
score: 98.64040798611111
patch: case Token . OR : return this ;
rank: 430
score: 98.60472954644098
patch: case Token . case Token . OR :
rank: 430
score: 98.50031280517578
patch: case null : Token . AND :
rank: 431
score: 99.03786214192708
patch: case Token . OR : case Token . OR : {
rank: 431
score: 98.9702617938702
patch: case String variable = n . get CaMeL First ( ) ;
rank: 431
score: 98.93148983226104
patch: case Token . AND : case Token . NULL : case Token . EMPTY : :
rank: 431
score: 98.84951782226562
patch: sb . append ( Token . AND ) ;
rank: 431
score: 98.7750577059659
patch: case Token . OR : case Token . TRUE :
rank: 431
score: 98.7690658569336
patch: final Token case Token . AND :
rank: 431
score: 98.63855658637152
patch: case Node . OR : / * /
rank: 431
score: 98.60470581054688
patch: case Token . AND : - :
rank: 431
score: 98.49878692626953
patch: case Integer . AND : . :
rank: 432
score: 98.93104553222656
patch: if ( n . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 432
score: 98.84658813476562
patch: if Token . AND && Token . AND )
rank: 432
score: 98.77394409179688
patch: case Token . HOOK | Token . OR :
rank: 432
score: 98.76846313476562
patch: case Token . AND : switch :
rank: 432
score: 98.65219116210938
patch: case : case Token . NULL :
rank: 432
score: 98.6370620727539
patch: case Token . HOOK : / }
rank: 432
score: 98.49758911132812
patch: case Type . AND : / :
rank: 433
score: 98.93098588423295
patch: case Token . AND : case Token . Assignment :
rank: 433
score: 98.84025268554687
patch: case Token . TYPE | Token . AND :
rank: 433
score: 98.76809692382812
patch: / * * * * Token . AND /
rank: 433
score: 98.63635932074652
patch: case Token . OR : return ) ;
rank: 433
score: 98.60318756103516
patch: case Token case Token . AND :
rank: 433
score: 98.49681854248047
patch: case / * Token . AND :
rank: 434
score: 98.96985880533855
patch: case Node CaMeL Util . is CaMeL Name ( n )
rank: 434
score: 98.9305419921875
patch: case Token . NULL : case Token . TYPE : case Token . TYPE :
rank: 434
score: 98.8394287109375
patch: case Token . NOT | Token . AND :
rank: 434
score: 98.76725006103516
patch: case Token . AND : else :
rank: 434
score: 98.65052795410156
patch: case Token . TRUE . AND :
rank: 434
score: 98.63558197021484
patch: case Token . HOOK : / *
rank: 434
score: 98.49672154017857
patch: case Type . WARNING : :
rank: 435
score: 99.0348612467448
patch: switch ( value . get CaMeL Type ( ) ) {
rank: 435
score: 98.93033599853516
patch: case Token . AND : case Token . EMPTY : case Token . NULL :
rank: 435
score: 98.83818817138672
patch: case Token . TRUE : break ;
rank: 435
score: 98.76672973632813
patch: case Token . AND : case Exception : :
rank: 435
score: 98.64981842041016
patch: case $STRING$ . case : { :
rank: 435
score: 98.63480377197266
patch: case Token . HOOK : else {
rank: 435
score: 98.496337890625
patch: case Token . Var . AND :
rank: 436
score: 99.034423828125
patch: case Token . OR * : case Token . HOOK :
rank: 436
score: 98.93018687855114
patch: case Token . NAME : case Token . NAME :
rank: 436
score: 98.8294906616211
patch: case Token . EMPTY : break ;
rank: 436
score: 98.77065207741477
patch: case Token . AND : case Token . Exception :
rank: 436
score: 98.76627807617187
patch: if Token . AND : Token . AND :
rank: 436
score: 98.64815266927083
patch: case int case 0 :
rank: 436
score: 98.63250732421875
patch: case Type . HOOK :
rank: 436
score: 98.59571668836806
patch: case Token . AND / * / /
rank: 436
score: 98.49598185221355
patch: case Enum . AND :
rank: 437
score: 98.96922889122597
patch: case Node CaMeL Util . KILL : case Token . HOOK :
rank: 437
score: 98.9299649325284
patch: if ( Token . AND || Token . AND . equals ( n . get CaMeL Value ( ) ) )
rank: 437
score: 98.82752685546875
patch: case Token . AND : Token . NOT :
rank: 437
score: 98.76875443892045
patch: case Token . AND : return Type . OR ;
rank: 437
score: 98.76621704101562
patch: case Token . AND : { / * :
rank: 437
score: 98.64811706542969
patch: case Token . out : : :
rank: 437
score: 98.63096400669643
patch: / case Token . OR :
rank: 437
score: 98.5953877766927
patch: case Token . PARAMETER :
rank: 437
score: 98.49513244628906
patch: case Token . AND , AND :
rank: 438
score: 98.92866443452381
patch: if ( Token . AND || Token . TRUE . equals ( n . get CaMeL Type ( ) :
rank: 438
score: 98.827197265625
patch: case Token . NULL : Token . AND :
rank: 438
score: 98.76864013671874
patch: case Token . HOOK case Token . HOOK :
rank: 438
score: 98.76529269748264
patch: case Token . AND : case T :
rank: 438
score: 98.59530300564236
patch: case Token . OR : case Token {
rank: 438
score: 98.4949951171875
patch: case 1 : : case AND :
rank: 439
score: 98.92843191964286
patch: if ( Token . AND || Token . TRUE . equals ( n . get CaMeL Value ( ) :
rank: 439
score: 98.82601928710938
patch: case Token . NOT : Token . AND :
rank: 439
score: 98.76758922230114
patch: case Token . AND : | Token . AND :
rank: 439
score: 98.7640380859375
patch: case Token : case Node . AND :
rank: 439
score: 98.6462173461914
patch: case Token . : : / :
rank: 439
score: 98.62956407335069
patch: if ( Node CaMeL Util == null )
rank: 439
score: 98.59476047092014
patch: case Token . AND : throw null ;
rank: 439
score: 98.49405343191964
patch: case Token . TYPE : .
rank: 440
score: 99.03285725911458
patch: case Token . AND : case Token . OR * :
rank: 440
score: 98.9674784342448
patch: case Token . OR : case Token . AND : else
rank: 440
score: 98.92730422247024
patch: if ( Token . AND || Token . AND . equals ( n . get CaMeL Type ( ) :
rank: 440
score: 98.76384819878473
patch: if ( Token . AND : break :
rank: 440
score: 98.49362182617188
patch: case Token . AND ||
rank: 441
score: 99.03246053059895
patch: switch ( variable . is CaMeL Name ( ) ) {
rank: 441
score: 98.966796875
patch: case Token . HOOK : case Token . LABEL :
rank: 441
score: 98.92642974853516
patch: case Token . AND : case Token . EMPTY : case Token . AND :
rank: 441
score: 98.82110595703125
patch: case Token . TYPE : Token . AND :
rank: 441
score: 98.76740056818181
patch: case Token . AND : return Type . KILL ;
rank: 441
score: 98.64602661132812
patch: case Token . : case 1 :
rank: 441
score: 98.62925211588542
patch: case Token . OR : } } }
rank: 441
score: 98.5892333984375
patch: case Token . WINDOW :
rank: 441
score: 98.49350411551339
patch: case Token . AND : null
rank: 442
score: 99.03144975142045
patch: case Name . OR : case Token . OR :
rank: 442
score: 98.96678577769886
patch: case Node . HOOK : return Token . HOOK ;
rank: 442
score: 98.92573686079545
patch: case Token . NULL : case Token . LABEL :
rank: 442
score: 98.81974283854167
patch: case Token . AND : if ( :
rank: 442
score: 98.76728959517045
patch: case Token . AND private case Token . AND :
rank: 442
score: 98.64535522460938
patch: case $STRING$ + case ? ) :
rank: 442
score: 98.62786102294922
patch: case Token . HOOK : { {
rank: 442
score: 98.49259185791016
patch: case Type . FUNCTION : : :
rank: 443
score: 99.03115844726562
patch: switch ( this . get CaMeL String ( ) ) {
rank: 443
score: 98.76161024305556
patch: case Token . AND : . . :
rank: 443
score: 98.64522879464286
patch: case $STRING$ . case : {
rank: 443
score: 98.62767876519098
patch: case Token . FUNCTION : / * /
rank: 443
score: 98.49220275878906
patch: case Type . AND : null :
rank: 444
score: 99.03110758463542
patch: switch ( n . get CaMeL Count ( ) ) {
rank: 444
score: 98.9651211825284
patch: case Node . OR : case Node . AND :
rank: 444
score: 98.76133422851562
patch: break : if ( case Token . AND :
rank: 444
score: 98.49193572998047
patch: case Token . AND : . ?
rank: 445
score: 99.03014119466145
patch: : case Token . OR : case Token . OR :
rank: 445
score: 98.92514377170139
patch: if ( n . get CaMeL Type ( ) == Token . Token . AND ) {
rank: 445
score: 98.76584694602273
patch: case Token . HOOK : break Token . HOOK :
rank: 445
score: 98.64387512207031
patch: case Token . AND * : :
rank: 445
score: 98.62371826171875
patch: case Token . OR : default :
rank: 445
score: 98.5846455891927
patch: case Token . WITH :
rank: 445
score: 98.49044799804688
patch: case Token . AND : n .
rank: 446
score: 99.0297518643466
patch: case Name . OR : case Token . AND :
rank: 446
score: 98.92509460449219
patch: case Token . AND : case Token . FUNCTION : case Token . FUNCTION :
rank: 446
score: 98.81121826171875
patch: case Token . AND : : if ( :
rank: 446
score: 98.6435317993164
patch: case $STRING$ : case $STRING$ : :
rank: 446
score: 98.49032156808036
patch: case Token . MAX : :
rank: 447
score: 98.96414888822116
patch: if ( n . get CaMeL Node ( ) != null )
rank: 447
score: 98.7639493075284
patch: block = n . get CaMeL Next ( ) ;
rank: 447
score: 98.76051161024306
patch: case ? ? case Token . AND :
rank: 447
score: 98.64351654052734
patch: case Token . : / : :
rank: 447
score: 98.62254333496094
patch: case Token . OR : / }
rank: 447
score: 98.49025472005208
patch: case Type . CHECK :
rank: 448
score: 99.02435857599431
patch: switch ( variable . get CaMeL Type ( ) )
rank: 448
score: 98.9622090657552
patch: return n . get CaMeL Last CaMeL Child ( ) ;
rank: 448
score: 98.8065673828125
patch: case Token . decode ( Token . AND :
rank: 448
score: 98.76341663707386
patch: case Token . HOOK : case String . AND :
rank: 448
score: 98.76047973632812
patch: case Token . AND : Token : / /
rank: 448
score: 98.64331817626953
patch: case Token . AND / : :
rank: 448
score: 98.61107635498047
patch: case Token . READ : / /
rank: 448
score: 98.48951721191406
patch: case Type . AND , null :
rank: 449
score: 98.96173565204327
patch: case Token . AND : case Token . AND : / /
rank: 449
score: 98.92478434244792
patch: if ( Token . AND || Token . AND . equals ( Token . AND ) :
rank: 449
score: 98.8031494140625
patch: case Token . consume ( Token . AND )
rank: 449
score: 98.76300048828125
patch: case Token . OR case Token . AND :
rank: 449
score: 98.75983344184027
patch: case Token . AND : { break :
rank: 449
score: 98.64299011230469
patch: case Token . FALSE : AND :
rank: 449
score: 98.58069610595703
patch: case Token . AND * * /
rank: 449
score: 98.48783111572266
patch: case Type . AND : if :
rank: 450
score: 98.96159224076705
patch: case Token . LINE : case Token . HOOK :
rank: 450
score: 98.92442737926136
patch: if ( Token . AND || Token . NULL . equals ( n . get CaMeL Value ( ) ) )
rank: 450
score: 98.80290985107422
patch: case Token . AND : continue ;
rank: 450
score: 98.76249186197917
patch: case Type . OR :
rank: 450
score: 98.75907389322917
patch: / * : case Node . AND :
rank: 450
score: 98.64268275669643
patch: case 0 : : : :
rank: 450
score: 98.608154296875
patch: case Token . HOOK : else
rank: 450
score: 98.57811628069196
patch: case Token . HOOK : .
rank: 450
score: 98.48768615722656
patch: case Token . CHECK : : :
rank: 451
score: 98.92427825927734
patch: return Token . AND ; case Token . AND : case Token . AND :
rank: 451
score: 98.80284966362848
patch: case Token . AND : : default :
rank: 451
score: 98.75823364257812
patch: case Token . AND : . break : }
rank: 451
score: 98.60069274902344
patch: case Token . OR / * /
rank: 451
score: 98.57564290364583
patch: case Token . TRY :
rank: 451
score: 98.48755645751953
patch: case Integer . AND : : .
rank: 452
score: 99.0158203125
patch: case Token . HOOK || Token . OR :
rank: 452
score: 98.92409446022727
patch: if ( Token . AND || Token . AND . equals ( n . get CaMeL Type ( ) ) :
rank: 452
score: 98.80056762695312
patch: if ( Token . AND ) :
rank: 452
score: 98.76194069602273
patch: type = n . get CaMeL Type ( ) ;
rank: 452
score: 98.75738525390625
patch: / Token . AND : / * /
rank: 452
score: 98.48683166503906
patch: case Token . MIN : : :
rank: 453
score: 98.79772338867187
patch: case Token . AND : break : break ;
rank: 453
score: 98.64096505301339
patch: case 0 : case 0 :
rank: 453
score: 98.48668670654297
patch: case Token . AND : null /
rank: 454
score: 98.92291814630681
patch: case Token . OTHER : case Token . AND :
rank: 454
score: 98.76017622514205
patch: n = n . get CaMeL First ( ) ;
rank: 454
score: 98.75674438476562
patch: / * Token . AND : / * /
rank: 454
score: 98.6407470703125
patch: case $STRING$ : : : :
rank: 454
score: 98.59816196986607
patch: case Token . HOOK : )
rank: 454
score: 98.56496175130208
patch: case Token . PREFIX :
rank: 454
score: 98.48583984375
patch: case $NUMBER$ :
rank: 455
score: 98.96029897836539
patch: case String variable = n . get CaMeL String ( ) ;
rank: 455
score: 98.92289011101974
patch: if ( Token . AND . equals ( n . get CaMeL String ( ) : ) )
rank: 455
score: 98.79329833984374
patch: case Token . AND : : break ; :
rank: 455
score: 98.75599670410156
patch: this . case Node . AND :
rank: 455
score: 98.59626007080078
patch: case Token . OR : else {
rank: 455
score: 98.48556518554688
patch: case Type . PROPERTY :
rank: 456
score: 98.960205078125
patch: Node name = n . get CaMeL First ( ) ;
rank: 456
score: 98.92252974076705
patch: case Token . STRING : case Token . STRING :
rank: 456
score: 98.792724609375
patch: case Token . AND || Token . NULL :
rank: 456
score: 98.7593994140625
patch: xsp = n . get CaMeL Next ( ) ;
rank: 456
score: 98.5957260131836
patch: case Token . OR : / finally
rank: 456
score: 98.48529052734375
patch: case Token . AND + : /
rank: 457
score: 99.00990988991477
patch: case Token . OR ? case Token . AND :
rank: 457
score: 98.96019568810097
patch: if ( n . get CaMeL Next ( ) != null )
rank: 457
score: 98.79113159179687
patch: case Token . AND : Token . EMPTY :
rank: 457
score: 98.75832297585227
patch: case Exception . OR : case Token . AND :
rank: 457
score: 98.63826751708984
patch: else : return Token . AND :
rank: 457
score: 98.59546661376953
patch: case Node . AND : / /
rank: 457
score: 98.56288146972656
patch: default : case Token . AND :
rank: 457
score: 98.48483276367188
patch: case Token . AND : break .
rank: 458
score: 98.9601717862216
patch: case Node . OR : case Node . HOOK :
rank: 458
score: 98.92181755514706
patch: case Token . NULL : case Token . NULL : case Token . AND : :
rank: 458
score: 98.75806773792614
patch: case Token . FALSE : case Token . HOOK :
rank: 458
score: 98.75505981445312
patch: if Token . AND > Token . AND :
rank: 458
score: 98.63825334821429
patch: return : Token . AND :
rank: 458
score: 98.48480987548828
patch: case Type . Mode . AND :
rank: 459
score: 98.92172420726104
patch: case Token . AND : case Token . TYPE : case Token . AND : :
rank: 459
score: 98.7898681640625
patch: case Token . AND | Token . TRUE :
rank: 459
score: 98.75777435302734
patch: case Token . Exception . AND :
rank: 459
score: 98.75484619140624
patch: case Token . AND : Token : * /
rank: 459
score: 98.63784790039062
patch: case Token . iterator ( : :
rank: 459
score: 98.59175109863281
patch: if ( n == null ) {
rank: 459
score: 98.55705915178571
patch: case Node . AND : {
rank: 459
score: 98.48440551757812
patch: case Type . YES :
rank: 460
score: 98.95950082632211
patch: if ( n . get CaMeL Type ( ) instanceof String )
rank: 460
score: 98.92146809895833
patch: if ( Token . NULL . equals ( n . get CaMeL Type ( ) ) :
rank: 460
score: 98.78795030381944
patch: case Token . AND : default : :
rank: 460
score: 98.75722045898438
patch: case Token . OR = Token . AND :
rank: 460
score: 98.75452338324652
patch: case Token . AND : Token break :
rank: 460
score: 98.59062194824219
patch: case Token . HOOK : / finally
rank: 460
score: 98.48400115966797
patch: case Token . Generator . AND :
rank: 461
score: 98.78748779296875
patch: if ( Token . AND ) { break ;
rank: 461
score: 98.754248046875
patch: if ( case Type . AND : break :
rank: 461
score: 98.63674490792411
patch: case Token . parse : :
rank: 461
score: 98.58821868896484
patch: case Token . OR : / *
rank: 461
score: 98.4836654663086
patch: case Token . AND || break :
rank: 462
score: 98.95917302911931
patch: case Token . HOOK : case Token . DEFAULT :
rank: 462
score: 98.91948009672619
patch: if ( Token . NULL . equals ( n . get CaMeL String ( Token . NULL ) ) )
rank: 462
score: 98.7855712890625
patch: case Token . TRUE : Token . TRUE :
rank: 462
score: 98.75550426136364
patch: buf = n . get CaMeL Next ( ) ;
rank: 462
score: 98.75245496961806
patch: } else * * Token . AND :
rank: 462
score: 98.63543701171875
patch: case $STRING$ . case - $STRING$ :
rank: 462
score: 98.5881118774414
patch: if ( Token . HOOK ) {
rank: 462
score: 98.48318045479911
patch: case Integer . TYPE : :
rank: 463
score: 99.00205688476562
patch: case Token . AND || Token . OR :
rank: 463
score: 98.95913696289062
patch: case Token . OR : case Token . HOOK : else
rank: 463
score: 98.9182990579044
patch: case Token . AND : case Token . TYPE : case Token . TYPE : :
rank: 463
score: 98.78375854492188
patch: if ( : case Token . AND ) {
rank: 463
score: 98.75192599826389
patch: case Short : case Node . AND :
rank: 463
score: 98.63528442382812
patch: case Token . AND ? ) :
rank: 463
score: 98.58769008091518
patch: case Token . READ : {
rank: 463
score: 98.54885864257812
patch: case Token . TARGET :
rank: 463
score: 98.48298863002232
patch: case Token . WARNING : .
rank: 464
score: 98.9590555826823
patch: case Token . HOOK : case Token . HOOK : try
rank: 464
score: 98.91639293323864
patch: if ( Token . AND || Token . EMPTY . equals ( n . get CaMeL Message ( ) ) )
rank: 464
score: 98.7792236328125
patch: case Token . AND | Token . NULL :
rank: 464
score: 98.75396118164062
patch: case Node CaMeL Util . AND : / :
rank: 464
score: 98.75189819335938
patch: case Token . AND : / * : /
rank: 464
score: 98.63510131835938
patch: case Token . AND | $STRING$ {
rank: 464
score: 98.58704630533855
patch: case Token . OR ;
rank: 464
score: 98.54744466145833
patch: case Token . SET :
rank: 464
score: 98.48238372802734
patch: case Token . AND : try /
rank: 465
score: 98.99989013671875
patch: case Token . OR || Token . AND :
rank: 465
score: 98.91594780815973
patch: if ( : case Token . AND :
rank: 465
score: 98.778564453125
patch: case Token . AND : : : break ;
rank: 465
score: 98.75168185763889
patch: } else : case Token . AND :
rank: 465
score: 98.63463592529297
patch: case Token . parse ( ) ;
rank: 465
score: 98.48110961914062
patch: case Result . AND : break :
rank: 466
score: 98.95853365384616
patch: case String variable = n . get CaMeL Next ( ) ;
rank: 466
score: 98.91578433388158
patch: if ( Token . NULL . equals ( n . get CaMeL String ( ) ) ) :
rank: 466
score: 98.63182067871094
patch: case : case Token . WARNING :
rank: 466
score: 98.58629353841145
patch: return Token . KILL ;
rank: 466
score: 98.53905232747395
patch: case Token . BOTH :
rank: 466
score: 98.48006184895833
patch: case Token . RETURN :
rank: 467
score: 98.95819091796875
patch: case Node CaMeL Util . is CaMeL Name ( variable )
rank: 467
score: 98.91486150568181
patch: if ( Token . AND && Token . AND . equals ( n . get CaMeL String ( ) ) :
rank: 467
score: 98.75145721435547
patch: ? Token case Token . AND :
rank: 467
score: 98.75084092881944
patch: case Token . OR : . HOOK :
rank: 467
score: 98.58319854736328
patch: / : case Token . OR :
rank: 467
score: 98.53868103027344
patch: } else case Token . HOOK :
rank: 467
score: 98.47969055175781
patch: case Type . NOT : break :
rank: 468
score: 98.91347142269737
patch: if ( Token . NULL . equals ( n . get CaMeL Type ( ) ) ) {
rank: 468
score: 98.77249908447266
patch: case Char CaMeL Sequence . AND :
rank: 468
score: 98.75145128038194
patch: } else { if Token . AND :
rank: 468
score: 98.75032958984374
patch: case Token . AND ( Token . HOOK :
rank: 468
score: 98.63131713867188
patch: case Token . : case : {
rank: 468
score: 98.53787231445312
patch: case Token [ ] . AND :
rank: 468
score: 98.47933959960938
patch: case Token . FORMAT :
rank: 469
score: 98.998046875
patch: if ( n . get CaMeL Next ( ) ;
rank: 469
score: 98.9578857421875
patch: if ( n . get CaMeL Type ( ) != )
rank: 469
score: 98.91263253348214
patch: if ( Token . EMPTY . equals ( n . get CaMeL String ( Token . AND ) ) )
rank: 469
score: 98.76875
patch: case Token . NONE : Token . AND :
rank: 469
score: 98.750244140625
patch: case Token . AND : else / * /
rank: 469
score: 98.63079071044922
patch: case $STRING$ : case - $STRING$ :
rank: 469
score: 98.53704833984375
patch: / * case Node . AND :
rank: 469
score: 98.478515625
patch: case Type . AND + AND :
rank: 470
score: 98.99714799360795
patch: if ( n . get CaMeL First ( ) ;
rank: 470
score: 98.91212222450658
patch: if ( Token . NULL . equals ( n . get CaMeL String ( AND ) ) )
rank: 470
score: 98.76870727539062
patch: case Token . EMPTY : Token . AND :
rank: 470
score: 98.7495450106534
patch: case Token . OR : = Token . AND ;
rank: 470
score: 98.74912109375
patch: case Token . AND : / / : }
rank: 470
score: 98.62914276123047
patch: case $STRING$ . case - AND :
rank: 470
score: 98.5746078491211
patch: case Token . OR : { {
rank: 470
score: 98.47770690917969
patch: case ( Token . AND : {
rank: 471
score: 98.91126069568452
patch: if ( Token . NULL . equals ( n . get CaMeL String ( Token . AND ) ) :
rank: 471
score: 98.74879964192708
patch: return null : case Token . AND :
rank: 471
score: 98.74146728515625
patch: case Token . OR | Token . HOOK :
rank: 471
score: 98.62866821289063
patch: case 0 : :
rank: 471
score: 98.57414245605469
patch: case Token . OR : { }
rank: 471
score: 98.47702462332589
patch: case Token . EMPTY : :
rank: 472
score: 98.91035600142045
patch: if ( Token . AND . AND . equals ( n . get CaMeL String ( Token . AND ) :
rank: 472
score: 98.76268853081598
patch: case Token . AND : break false :
rank: 472
score: 98.74859619140625
patch: * Token case Token . AND :
rank: 472
score: 98.62830352783203
patch: case Token . Var case $STRING$ :
rank: 472
score: 98.57057407924107
patch: case Token . AND : )
rank: 472
score: 98.53136444091797
patch: case Token = Token . AND :
rank: 472
score: 98.47591727120536
patch: case Token . AND : if
rank: 473
score: 98.9099480124081
patch: if ( node . get CaMeL Type ( ) == Token . AND ) { :
rank: 473
score: 98.760009765625
patch: case Token . NOT : break ;
rank: 473
score: 98.74734157986111
patch: / * : * Token . AND :
rank: 473
score: 98.62812151227679
patch: case : Token . AND :
rank: 473
score: 98.52869415283203
patch: case Token . AND : } else
rank: 473
score: 98.47541809082031
patch: case Token . AND : : try
rank: 474
score: 98.9084805575284
patch: if ( Token . AND && Token . AND . equals ( n . get CaMeL Value ( ) ) )
rank: 474
score: 98.75614166259766
patch: if ( Token . NONE ) {
rank: 474
score: 98.74700249565973
patch: case Node CaMeL Util . AND : :
rank: 474
score: 98.73626708984375
patch: case Token . AND : return Token . :
rank: 474
score: 98.5687255859375
patch: return Token . READ ;
rank: 474
score: 98.52800641741071
patch: case Token . AND : ,
rank: 474
score: 98.47480773925781
patch: case Token . IN : break :
rank: 475
score: 98.95252574573864
patch: case Token . NUMBER : case Token . HOOK :
rank: 475
score: 98.9082390280331
patch: case Token . NULL : case Token . AND : case Token . NULL : :
rank: 475
score: 98.74564615885417
patch: case Exception . AND :
rank: 475
score: 98.73088836669922
patch: case Token . OR : HOOK :
rank: 475
score: 98.62751770019531
patch: case $STRING$ . case - : :
rank: 475
score: 98.5269063313802
patch: if ( variable ) {
rank: 475
score: 98.47454833984375
patch: case Token . AND || :
rank: 476
score: 98.9516934481534
patch: case Token . HOOK : case Number . HOOK :
rank: 476
score: 98.90816824776786
patch: case Token . AND : case Token . AND : case Token . AND : case Token . AND :
rank: 476
score: 98.74905056423611
patch: if ( Token . AND ) { :
rank: 476
score: 98.74561225043402
patch: case Token . AND : break : }
rank: 476
score: 98.73050689697266
patch: case Token == Token . AND :
rank: 476
score: 98.6270751953125
patch: return Token . AND : AND :
rank: 476
score: 98.568359375
patch: case Token . AND / /
rank: 476
score: 98.47374725341797
patch: case Integer . AND : AND :
rank: 477
score: 98.9064608487216
patch: if ( Token . AND || Token . EMPTY . equals ( n . get CaMeL Value ( ) ) )
rank: 477
score: 98.74550374348958
patch: case Node . AND : : break :
rank: 477
score: 98.5677490234375
patch: case Token . OR : ;
rank: 477
score: 98.47255452473958
patch: case Integer . IN :
rank: 478
score: 98.99015669389205
patch: case Token . OR ? case Token . OR :
rank: 478
score: 98.90630026424633
patch: this . Token . AND : case Token . AND : case Token . NULL :
rank: 478
score: 98.74539523654514
patch: } else if ( Token . AND :
rank: 478
score: 98.62625885009766
patch: state . case Token . AND :
rank: 478
score: 98.56759207589286
patch: case Token . OR : else
rank: 478
score: 98.47186279296875
patch: case Integer case Type . AND :
rank: 479
score: 98.906005859375
patch: if ( Token . NULL . equals ( n . get CaMeL String ( : ) ) :
rank: 479
score: 98.74543762207031
patch: case Token . TYPE : break ;
rank: 479
score: 98.74488067626953
patch: switch Token case Token . AND :
rank: 479
score: 98.72650146484375
patch: case Token . AND = Token . OR :
rank: 479
score: 98.62460763113839
patch: } case Token . : :
rank: 479
score: 98.56551361083984
patch: case Token . AND finally { }
rank: 479
score: 98.4708251953125
patch: case Type . TYPE : : :
rank: 480
score: 98.90589488636364
patch: if ( Token . AND || Token . AND . equals ( n . get CaMeL Name ( ) ) )
rank: 480
score: 98.7444580078125
patch: case Token . AND > Token . AND ?
rank: 480
score: 98.72505493164063
patch: case Token . OR | Token . OR :
rank: 480
score: 98.62444305419922
patch: case Token . parse ( : {
rank: 480
score: 98.56443277994792
patch: case Token . HOOK ;
rank: 480
score: 98.47077941894531
patch: case Token . AND ++ AND :
rank: 481
score: 98.98398659446023
patch: switch ( n . get CaMeL Value ( ) )
rank: 481
score: 98.90540132068452
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Message ( ) ) ; }
rank: 481
score: 98.74349975585938
patch: case Property . AND :
rank: 481
score: 98.73707580566406
patch: case Token . MIN _ VALUE :
rank: 481
score: 98.72343139648437
patch: case Token . HOOK ( Token . AND :
rank: 481
score: 98.62275695800781
patch: case Token . : case $STRING$ .
rank: 481
score: 98.51909637451172
patch: case Token . AND catch ( ?
rank: 481
score: 98.46998596191406
patch: case Type . AND , break :
rank: 482
score: 98.90537396599265
patch: case Token . AND : case Token . AND : case Token . FUNCTION : :
rank: 482
score: 98.74314371744792
patch: case Token . AND : case int :
rank: 482
score: 98.73045518663194
patch: case Token . NULL : : break ;
rank: 482
score: 98.72145385742188
patch: case Token . OR : Token . OR :
rank: 482
score: 98.62213134765625
patch: if : case Token . : :
rank: 482
score: 98.5627212524414
patch: if ( null == variable ) {
rank: 482
score: 98.51698303222656
patch: / * Token . HOOK * /
rank: 483
score: 98.98110129616477
patch: case Token . OR : case Token . FORMAT :
rank: 483
score: 98.90471857244319
patch: if ( Token . AND || Token . AND . equals ( n . get CaMeL Message ( ) ) )
rank: 483
score: 98.74205932617187
patch: case Token . AND : : * * /
rank: 483
score: 98.73024495442708
patch: Token . AND | Token . AND :
rank: 483
score: 98.5607401529948
patch: return Token . OR ;
rank: 483
score: 98.4684066772461
patch: case 1 : if case 1 :
rank: 484
score: 98.90380859375
patch: if ( Token . AND . equals ( n . get CaMeL String ( : ) :
rank: 484
score: 98.74126434326172
patch: case Token . AND : while :
rank: 484
score: 98.72627766927083
patch: if ( Token . AND : break ;
rank: 484
score: 98.6211166381836
patch: case $STRING$ . : : : :
rank: 484
score: 98.46820068359375
patch: case int case Token . AND :
rank: 485
score: 98.97993607954545
patch: case Name . OR : case Token . HOOK :
rank: 485
score: 98.9036506204044
patch: case Token . TARGET : case Token . AND : case Token . AND : :
rank: 485
score: 98.7411376953125
patch: case Token . AND : case int : }
rank: 485
score: 98.72274780273438
patch: break ; case Token . NULL :
rank: 485
score: 98.72015380859375
patch: case Token . AND || Token . HOOK :
rank: 485
score: 98.62078857421875
patch: case $STRING$ ? : case $STRING$ :
rank: 485
score: 98.55218505859375
patch: case Token . AND : / else
rank: 485
score: 98.51393127441406
patch: case Token . ) . AND :
rank: 485
score: 98.46470424107143
patch: case Type . NONE : :
rank: 486
score: 98.73999633789063
patch: case Token . AND : while / * /
rank: 486
score: 98.62007141113281
patch: case Token . TRUE : : .
rank: 486
score: 98.46443176269531
patch: case Type . NAME : : :
rank: 487
score: 98.94279174804687
patch: case Token . HOOK : case Token . AND
rank: 487
score: 98.90230102539063
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Type ( ) ) ;
rank: 487
score: 98.7393798828125
patch: case Node CaMeL Util . Token . AND ?
rank: 487
score: 98.61903381347656
patch: case $STRING$ . : case 0 :
rank: 487
score: 98.55004119873047
patch: } else switch ( variable ) {
rank: 487
score: 98.51307678222656
patch: default : case Token . HOOK :
rank: 488
score: 98.90221557617187
patch: if ( Token . EMPTY . equals ( n . get CaMeL String ( Token . AND ) :
rank: 488
score: 98.73779296875
patch: } case Node CaMeL Util . AND :
rank: 488
score: 98.71924506293402
patch: if ( ! Token . AND ) {
rank: 488
score: 98.61878967285156
patch: case Token . AND ] : :
rank: 488
score: 98.51298522949219
patch: case ( Token . OR ) :
rank: 488
score: 98.46241106305804
patch: case Type . NULL : :
rank: 489
score: 98.90179734002976
patch: if ( Token . AND || Token . EMPTY . equals ( n . get CaMeL Type ( ) :
rank: 489
score: 98.73768310546875
patch: this . case Token . AND : : :
rank: 489
score: 98.71822102864583
patch: this . Token = Token . AND ;
rank: 489
score: 98.70563354492188
patch: case Token . AND = Token . HOOK :
rank: 489
score: 98.61796569824219
patch: case 0 : : : case :
rank: 489
score: 98.54756927490234
patch: case Token . Token . ASSIGN :
rank: 489
score: 98.5115966796875
patch: case Node CaMeL Util . AND ;
rank: 489
score: 98.4614766438802
patch: case Integer . WARNING :
rank: 490
score: 98.9751220703125
patch: case Token . HOOK || Token . AND :
rank: 490
score: 98.90175559303977
patch: if ( Token . AND || Token . TRUE . equals ( n . get CaMeL String ( : ) :
rank: 490
score: 98.73707275390625
patch: case Token . AND : case Number : :
rank: 490
score: 98.6178970336914
patch: case : Token . AND : :
rank: 490
score: 98.54391479492188
patch: case Token . HOOK finally { }
rank: 490
score: 98.46090698242188
patch: case Type . IN : break :
rank: 491
score: 98.90151079963235
patch: case Token . AND : case Token . AND : case Token . TYPE : :
rank: 491
score: 98.73706817626953
patch: / * Token . AND * /
rank: 491
score: 98.71813201904297
patch: case Token . VOID : break ;
rank: 491
score: 98.61781311035156
patch: case Token . FALSE : break :
rank: 491
score: 98.5083516438802
patch: case Token . LABEL :
rank: 491
score: 98.4608866373698
patch: case Token . LOCAL :
rank: 492
score: 98.90136000689338
patch: case Token . AND : case Token . AND : case Token . TRUE : :
rank: 492
score: 98.73694610595703
patch: / else case Token . AND :
rank: 492
score: 98.7119369506836
patch: break ; case Token . NOT :
rank: 492
score: 98.61624145507812
patch: case Token . EMPTY : : :
rank: 492
score: 98.54032679966518
patch: case Token . HOOK * /
rank: 492
score: 98.460693359375
patch: case 0 : if case AND :
rank: 493
score: 98.9713134765625
patch: case Token . OR : case Token . UNKNOWN :
rank: 493
score: 98.90093439275569
patch: if ( Token . AND || Token . NULL . equals ( n . get CaMeL Message ( ) ) )
rank: 493
score: 98.73687744140625
patch: case Token . AND : case Short : }
rank: 493
score: 98.71149553571429
patch: expr = Token . AND ;
rank: 493
score: 98.70213623046875
patch: break n . get CaMeL Type ( ) :
rank: 493
score: 98.61620221819196
patch: case 0 : case : {
rank: 493
score: 98.45991734095982
patch: case Token . FUNCTION : .
rank: 494
score: 98.90083618164063
patch: return Token . AND || Token . AND ;
rank: 494
score: 98.73656548394098
patch: case Token . AND : break Token :
rank: 494
score: 98.69986572265626
patch: break n . get CaMeL First ( ) ;
rank: 494
score: 98.61612701416016
patch: } : case Token . : :
rank: 494
score: 98.50111389160156
patch: case Token . AND : - right
rank: 494
score: 98.45942905970982
patch: case Token . LINE : :
rank: 495
score: 98.89962429470486
patch: if ( Token . NULL . equals ( n . get CaMeL String ( ) : :
rank: 495
score: 98.6936264038086
patch: case Token . OR : OR :
rank: 495
score: 98.61562093098958
patch: case int case $NUMBER$ :
rank: 495
score: 98.45911407470703
patch: case Token . AND | 0 :
rank: 496
score: 98.89764694940476
patch: if ( Token . AND . AND . equals ( n . get CaMeL String ( ) : ) )
rank: 496
score: 98.69270324707031
patch: if ( node != null ) {
rank: 496
score: 98.68926323784723
patch: case Token . AND : return false ;
rank: 496
score: 98.61396026611328
patch: case Token . value ( : :
rank: 496
score: 98.52925109863281
patch: case Node . HOOK : / /
rank: 496
score: 98.4591064453125
patch: case Token . VOID : :
rank: 497
score: 98.8976162997159
patch: if ( Token . AND || Token . TRUE . equals ( n . get CaMeL Type ( ) ) :
rank: 497
score: 98.73338012695312
patch: case Token . AND : case Integer : :
rank: 497
score: 98.61214447021484
patch: Token . AND : case $STRING$ ;
rank: 497
score: 98.52882385253906
patch: case Token . AND : finally {
rank: 497
score: 98.49227142333984
patch: / * / Token . HOOK :
rank: 497
score: 98.45871407645089
patch: case Object . AND : :
rank: 498
score: 98.96535034179688
patch: if ( variable == Token . OR ) {
rank: 498
score: 98.89757719494048
patch: if ( Token . NULL . equals ( n . get CaMeL String ( Token . EMPTY ) ) )
rank: 498
score: 98.52757263183594
patch: / } switch ( variable ) {
rank: 498
score: 98.49050903320312
patch: switch ( Token . AND ) {
rank: 498
score: 98.45814514160156
patch: case Token . ERROR : : :
rank: 499
score: 98.96424449573864
patch: case Token . AND ? case Token . OR :
rank: 499
score: 98.89718191964286
patch: if ( Token . AND || Token . NULL . equals ( n . get CaMeL Type ( ) :
rank: 499
score: 98.73175659179688
patch: case Token . AND : : * * :
rank: 499
score: 98.69165910993304
patch: if ( Token . NONE )
rank: 499
score: 98.45765904017857
patch: case Token . AND : AND
rank: 500
score: 98.73167114257812
patch: case Node . AND : : / * :
rank: 500
score: 98.67954508463542
patch: case HOOK : case Token . AND :
rank: 500
score: 98.61138916015625
patch: case $STRING$ case Token . NONE :
rank: 500
score: 98.4575424194336
patch: case Token . NOT : : /
rank: 501
score: 98.93189586292614
patch: case Token . HOOK : case Token . FORMAT :
rank: 501
score: 98.89532470703125
patch: this . case Token . AND : case Token . AND : case Token . AND :
rank: 501
score: 98.61068725585938
patch: case Token . : : . {
rank: 501
score: 98.52092633928571
patch: case Token . OR : .
rank: 501
score: 98.45580182756696
patch: switch case Token . AND :
rank: 502
score: 98.96355590820312
patch: case Token . OR || Token . HOOK :
rank: 502
score: 98.89398193359375
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Class ( ) ) ;
rank: 502
score: 98.73101806640625
patch: case Token . AND : Token AND :
rank: 502
score: 98.60951232910156
patch: } : :
rank: 502
score: 98.51777648925781
patch: case Token . HOOK : continue ;
rank: 502
score: 98.45457458496094
patch: case Token . YES : : :
rank: 503
score: 98.96265758167614
patch: case Token . OR : case Token . HOOK ?
rank: 503
score: 98.92974298650569
patch: case Token . DEFAULT : case Token . HOOK :
rank: 503
score: 98.89337713068181
patch: if ( Token . AND || Token . AND . equals ( n . get CaMeL Node ( ) ) )
rank: 503
score: 98.7303955078125
patch: if Token . AND + Token . AND :
rank: 503
score: 98.67923990885417
patch: case Token . code :
rank: 503
score: 98.67549133300781
patch: case Token . AND / / :
rank: 503
score: 98.60826619466145
patch: case Token . : ?
rank: 503
score: 98.45355224609375
patch: case Token . PROPERTY : :
rank: 504
score: 98.9293212890625
patch: case Token . HOOK : case Token . PROPERTY :
rank: 504
score: 98.89307996961806
patch: if ( Token . AND && Token . AND . equals ( Token . AND ) :
rank: 504
score: 98.73011016845703
patch: / * * Token . AND /
rank: 504
score: 98.67874145507812
patch: break ; case Token . NONE :
rank: 504
score: 98.672119140625
patch: case Token . AND : return true ;
rank: 504
score: 98.60509236653645
patch: case Token . LEFT :
rank: 504
score: 98.51071602957589
patch: case Token . AND : private
rank: 504
score: 98.48396809895833
patch: case Token . ADD :
rank: 504
score: 98.4530029296875
patch: case Token . round :
rank: 505
score: 98.89070268110795
patch: if ( Token . AND && Token . AND . equals ( n . get CaMeL Type ( ) ) :
rank: 505
score: 98.72999877929688
patch: if ( * : case Token . AND :
rank: 505
score: 98.67218017578125
patch: if ( State . AND ) {
rank: 505
score: 98.67116001674107
patch: case Token . AND / :
rank: 505
score: 98.4837646484375
patch: case else case Token . AND :
rank: 505
score: 98.45029994419643
patch: case Type . TRUE : :
rank: 506
score: 98.88881613991477
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n . get CaMeL Class CaMeL Name ( ) ) ;
rank: 506
score: 98.67192840576172
patch: case Token . NO : break ;
rank: 506
score: 98.60401153564453
patch: case $STRING$ : case / 1 :
rank: 506
score: 98.48175048828125
patch: case ) case Token . HOOK :
rank: 506
score: 98.45010375976562
patch: case Number . AND :
rank: 507
score: 98.9588290127841
patch: case Name . AND : case Token . OR :
rank: 507
score: 98.9251376065341
patch: case Token . HOOK : case Number . AND :
rank: 507
score: 98.88862047697368
patch: if ( Token . EMPTY . equals ( n . get CaMeL String ( ) : ) )
rank: 507
score: 98.72776285807292
patch: / * * Token . AND * /
rank: 507
score: 98.60233154296876
patch: case : : :
rank: 507
score: 98.50629425048828
patch: case Token . AND : try {
rank: 507
score: 98.44938151041667
patch: case E . AND :
rank: 508
score: 98.95824085582386
patch: case Token . OR : case Token . PREFIX :
rank: 508
score: 98.88857886904762
patch: if ( Token . AND && Token . AND . equals ( n . get CaMeL String ( ) :
rank: 508
score: 98.72746276855469
patch: * * * Token . AND :
rank: 508
score: 98.66634792751736
patch: case Token . HOOK : return false ;
rank: 508
score: 98.66551208496094
patch: case Token . NULL : break :
rank: 508
score: 98.60181427001953
patch: return false : Token . AND :
rank: 508
score: 98.5058364868164
patch: case Token . HOOK : ) {
rank: 508
score: 98.44888305664062
patch: case Type . RIGHT : : :
rank: 509
score: 98.92237437855114
patch: case Token . OR : case Token . NUMBER :
rank: 509
score: 98.88848266601562
patch: case Token . NULL || Token . AND :
rank: 509
score: 98.72708468967014
patch: / * Token . AND : / /
rank: 509
score: 98.60074615478516
patch: case : case $STRING$ : : :
rank: 509
score: 98.44876098632812
patch: case Type . AND - AND :
rank: 510
score: 98.92015491832386
patch: case Node . HOOK : case Node . OR :
rank: 510
score: 98.88845825195312
patch: if ( Token . AND . AND . equals ( n . get CaMeL String ( : ) :
rank: 510
score: 98.663818359375
patch: case Token . AND : case HOOK :
rank: 510
score: 98.6596450805664
patch: return Token . AND : break ;
rank: 510
score: 98.6003646850586
patch: case 0 || Token . AND :
rank: 510
score: 98.50471496582031
patch: return null ;
rank: 510
score: 98.4776382446289
patch: case Token . ) . HOOK :
rank: 510
score: 98.44797770182292
patch: case Type . SIZE :
rank: 511
score: 98.88795055042614
patch: if ( Token . AND || Token . TRUE . equals ( n . get CaMeL Value ( ) ) :
rank: 511
score: 98.724365234375
patch: case Token . AND : case while :
rank: 511
score: 98.66264512803819
patch: case Token . HOOK : return true ;
rank: 511
score: 98.59818812779018
patch: case 0 : : case :
rank: 511
score: 98.50458635602679
patch: case Token . ASSIGN : }
rank: 512
score: 98.8876065340909
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + n . get CaMeL Class CaMeL Name ( ) ) ;
rank: 512
score: 98.72430419921875
patch: break Token case Type . AND :
rank: 512
score: 98.64999389648438
patch: break ; case Token . TRUE :
rank: 512
score: 98.50281524658203
patch: case Token . HOOK : - :
rank: 512
score: 98.44749232700893
patch: case Type . AND : null
rank: 513
score: 98.8851318359375
patch: if ( Token . NULL . equals ( n . get CaMeL String ( Token . NULL ) :
rank: 513
score: 98.64959716796875
patch: case Token . AND : case :
rank: 513
score: 98.59537353515626
patch: case $STRING$ : :
rank: 513
score: 98.50038146972656
patch: / else case Token . HOOK :
rank: 513
score: 98.44627162388393
patch: case Token . AND ++ :
rank: 514
score: 98.9535245028409
patch: case Name . AND : case Token . AND :
rank: 514
score: 98.88462611607143
patch: case Token . AND : case Token . decode ( n . get CaMeL String CaMeL Value ( ) )
rank: 514
score: 98.72178141276042
patch: Token case Type . AND : break :
rank: 514
score: 98.64627838134766
patch: break ; case Token . EMPTY :
rank: 514
score: 98.5948486328125
patch: Token { case $STRING$ :
rank: 514
score: 98.49980163574219
patch: case Token . OR : - :
rank: 514
score: 98.44609069824219
patch: case Token . NO : : :
rank: 515
score: 98.91831665039062
patch: case Token . HOOK : case Token . HOOK
rank: 515
score: 98.88447709517045
patch: if ( Token . AND && Token . AND . equals ( n . get CaMeL Name ( ) ) )
rank: 515
score: 98.72011893136161
patch: } if Token . AND :
rank: 515
score: 98.64461517333984
patch: case Token . NONE : break :
rank: 515
score: 98.59352620442708
patch: case String case ) ?
rank: 515
score: 98.4949951171875
patch: case Node CaMeL Util . OR ;
rank: 515
score: 98.47360229492188
patch: case Token . ) {
rank: 515
score: 98.44567108154297
patch: case Token . AND || : :
rank: 516
score: 98.88273790147569
patch: case Token . AND : case Token . AND : case Token . Na CaMeL N :
rank: 516
score: 98.6404037475586
patch: if ( ! Token . AND )
rank: 516
score: 98.4728012084961
patch: case Node CaMeL Util . IN :
rank: 516
score: 98.4453125
patch: case 1 : case - AND :
rank: 517
score: 98.91745827414773
patch: case Node . HOOK : return Token . AND ;
rank: 517
score: 98.88120339133523
patch: if ( Token . AND || Token . EMPTY . equals ( n . get CaMeL Type ( ) ) :
rank: 517
score: 98.64974975585938
patch: case Token . HOOK : HOOK :
rank: 517
score: 98.58839925130208
patch: case int case 1 :
rank: 517
score: 98.49024200439453
patch: case Token . n . HOOK :
rank: 517
score: 98.44482421875
patch: case Integer . NOT : :
rank: 518
score: 98.88056098090277
patch: if ( Token . AND . equals ( n . get CaMeL String ( ) : :
rank: 518
score: 98.71595764160156
patch: case Node CaMeL Util . Token :
rank: 518
score: 98.649658203125
patch: case Token . OR : . AND :
rank: 518
score: 98.63513946533203
patch: if ( Node . AND ) {
rank: 518
score: 98.58805338541667
patch: case Token . err :
rank: 518
score: 98.48944091796875
patch: case Token . / * /
rank: 518
score: 98.47205352783203
patch: case Token . HOOK : OR :
rank: 518
score: 98.44420623779297
patch: case Token . AND | 1 :
rank: 519
score: 98.94985129616477
patch: case Token . OR : case Token . HOOK {
rank: 519
score: 98.87973458426339
patch: case Token . TARGET : :
rank: 519
score: 98.71540832519531
patch: } Token case Node . AND :
rank: 519
score: 98.64647081163194
patch: case Token . OR : / / :
rank: 519
score: 98.63444519042969
patch: if Token . AND : break ;
rank: 519
score: 98.4712142944336
patch: } else case Token . OR :
rank: 519
score: 98.44330596923828
patch: case Integer . AND - AND :
rank: 520
score: 98.94937133789062
patch: Token . OR : case Token . AND :
rank: 520
score: 98.87953879616477
patch: if ( Token . AND || Token . AND . equals ( n . get CaMeL Parent ( ) ) )
rank: 520
score: 98.71471405029297
patch: while Token case Token . AND :
rank: 520
score: 98.64520263671875
patch: case Type ( Token . AND :
rank: 520
score: 98.63314819335938
patch: case Token . FALSE : break ;
rank: 520
score: 98.57423909505208
patch: case $STRING$ . : :
rank: 520
score: 98.48564147949219
patch: case Token . HOOK : } else
rank: 520
score: 98.44319915771484
patch: case Type . STRING : : :
rank: 521
score: 98.91281960227273
patch: case Token . HOOK : case Token . EXPRESSION :
rank: 521
score: 98.8790347450658
patch: if ( Token . AND . equals ( n . get CaMeL String ( ) ) ) :
rank: 521
score: 98.64335801866319
patch: case OR : case Token . AND :
rank: 521
score: 98.63116455078125
patch: if ( Token . NULL ) {
rank: 521
score: 98.48301696777344
patch: case Token . ) / * /
rank: 521
score: 98.4692891438802
patch: case Symbol . AND :
rank: 522
score: 98.91227583451705
patch: case Node . HOOK : case Token . ASSIGN :
rank: 522
score: 98.87657581676136
patch: if ( Token . AND || Token . NULL . equals ( n . get CaMeL Type ( ) ) :
rank: 522
score: 98.57237897600446
patch: case $STRING$ : case - :
rank: 522
score: 98.46905517578125
patch: case Token . AND : FUNCTION :
rank: 522
score: 98.4420674641927
patch: case Type . VOID :
rank: 523
score: 98.94848022460937
patch: Token . OR : case Token . OR :
rank: 523
score: 98.87547718394886
patch: if ( Token . AND || Token . TRUE . equals ( n . get CaMeL String ( ) : :
rank: 523
score: 98.71207682291667
patch: } case Token . AND : break :
rank: 523
score: 98.57235281808036
patch: Token . AND : : :
rank: 523
score: 98.44203186035156
patch: case Token . AND : . }
rank: 524
score: 98.94844193892045
patch: case Token . OR ? case Token . HOOK :
rank: 524
score: 98.7120361328125
patch: case Token . AND : case Byte :
rank: 524
score: 98.62861633300781
patch: case Token . interrupt ( ) :
rank: 524
score: 98.57218715122768
patch: case $STRING$ : : case :
rank: 524
score: 98.48157755533855
patch: case Token . ) ;
rank: 524
score: 98.4662094116211
patch: case Token . Driver . OR :
rank: 525
score: 98.87482561383929
patch: if ( Token . AND || Token . TRUE . equals ( n . get CaMeL Message ( ) :
rank: 525
score: 98.71189371744792
patch: / / * case Token . AND :
rank: 525
score: 98.639501953125
patch: case Token . :
rank: 525
score: 98.62652587890625
patch: if ( Token . AND : :
rank: 525
score: 98.56947544642857
patch: case $STRING$ : case 1 :
rank: 525
score: 98.44134521484375
patch: case Type case Type . AND :
rank: 526
score: 98.71121215820312
patch: final Token . AND :
rank: 526
score: 98.63949245876736
patch: case Token . OR : return variable ;
rank: 526
score: 98.62605285644531
patch: case Token . RIGHT : break ;
rank: 526
score: 98.5680643717448
patch: Token . AND : :
rank: 527
score: 98.90192205255681
patch: case Token . AND : case Token . 1 :
rank: 527
score: 98.8734463778409
patch: if ( Token . AND || Token . EMPTY . equals ( n . get CaMeL Name ( ) ) )
rank: 527
score: 98.71102566189236
patch: case ? : case Node . AND :
rank: 527
score: 98.63809204101562
patch: case Node CaMeL Util . ASSIGN :
rank: 527
score: 98.62224578857422
patch: if ( Context . AND ) {
rank: 527
score: 98.47845458984375
patch: case Token . Token . READ :
rank: 527
score: 98.440185546875
patch: case Token . AND + :
rank: 528
score: 98.87317657470703
patch: switch ( case Token . AND )
rank: 528
score: 98.71090359157986
patch: case Token . AND : : . :
rank: 528
score: 98.63700358072917
patch: case Token . AND : / : :
rank: 528
score: 98.56456647600446
patch: case $STRING$ : case / :
rank: 528
score: 98.47843933105469
patch: case Token . STRING : / /
rank: 528
score: 98.46425083705357
patch: case Token . NOT : {
rank: 528
score: 98.43968200683594
patch: case Type case Node . AND :
rank: 529
score: 98.946484375
patch: case Token . HOOK , Token . AND :
rank: 529
score: 98.87227957589286
patch: if ( Token . AND . AND . equals ( n . get CaMeL String ( ) ) ) :
rank: 529
score: 98.70886993408203
patch: case synchronized ( Token . AND :
rank: 529
score: 98.56182861328125
patch: case Token . AND ] :
rank: 529
score: 98.47806549072266
patch: case Token . AND : return ;
rank: 529
score: 98.46392059326172
patch: case Node CaMeL Util . READ ;
rank: 529
score: 98.43860626220703
patch: case Token . TYPE : : /
rank: 530
score: 98.87129350142045
patch: if ( Token . AND || Token . NULL . equals ( n . get CaMeL Name ( ) ) )
rank: 530
score: 98.70855712890625
patch: this . . case Token . AND :
rank: 530
score: 98.61647251674107
patch: Token . AND : break ;
rank: 530
score: 98.56070382254464
patch: case String Token . AND :
rank: 530
score: 98.47783551897321
patch: case Node . HOOK : {
rank: 530
score: 98.46233367919922
patch: case Token . AND . HOOK :
rank: 530
score: 98.4382832845052
patch: case Type . $NUMBER$ :
rank: 531
score: 98.94458685980902
patch: / / / case Token . HOOK :
rank: 531
score: 98.87068684895833
patch: if ( Token . AND && Token . AND . equals ( n . get CaMeL Type ( ) :
rank: 531
score: 98.63107299804688
patch: case Token . OR : break :
rank: 531
score: 98.559619140625
patch: else { : :
rank: 531
score: 98.43729073660714
patch: case Node . AND : .
rank: 532
score: 98.90064586292614
patch: case Token . FORMAT : case Token . HOOK :
rank: 532
score: 98.87026832217262
patch: if ( Token . AND . equals ( n . get CaMeL String ( Token . AND ) ) :
rank: 532
score: 98.63079833984375
patch: case Token . AND : code :
rank: 532
score: 98.55856323242188
patch: case int case ) ?
rank: 532
score: 98.475830078125
patch: case Token . ASSIGN : } }
rank: 532
score: 98.43714904785156
patch: case Type . AND : System .
rank: 533
score: 98.89909224076705
patch: case Token . HOOK : case Token . MIN :
rank: 533
score: 98.869873046875
patch: if ( Token . AND || Token . AND || Token . AND . equals ( :
rank: 533
score: 98.70490180121527
patch: } else : case Node . AND :
rank: 533
score: 98.6054916381836
patch: if ( Token . NOT ) {
rank: 533
score: 98.5546162923177
patch: case $STRING$ case : :
rank: 533
score: 98.43650817871094
patch: case Token . AND : println :
rank: 534
score: 98.93838500976562
patch: / / if ( Token . OR ) {
rank: 534
score: 98.8698397549716
patch: if ( Token . AND || Token . TRUE . equals ( n . get CaMeL Name ( ) ) )
rank: 534
score: 98.70480782645089
patch: / * Token . AND /
rank: 534
score: 98.62920464409723
patch: n . get CaMeL Next ( ) ;
rank: 534
score: 98.60337829589844
patch: if ( Node CaMeL Util . :
rank: 534
score: 98.47504425048828
patch: case Token . AND : { )
rank: 534
score: 98.43597412109375
patch: case Token . AND , break /
rank: 535
score: 98.869189453125
patch: if ( Token . AND . AND . equals ( n . get CaMeL String ( ) : :
rank: 535
score: 98.55014474051339
patch: case 0 : case $STRING$ :
rank: 535
score: 98.47364044189453
patch: case Node . OR : / /
rank: 535
score: 98.43508911132812
patch: case 1 : case - 1 :
rank: 536
score: 98.89821555397727
patch: case Token . SIZE : case Token . AND :
rank: 536
score: 98.70474582248264
patch: case Token . AND : case EOF :
rank: 536
score: 98.54904174804688
patch: case Token . : _
rank: 536
score: 98.47296142578125
patch: case Token . HOOK + $STRING$ :
rank: 536
score: 98.45818328857422
patch: case Token . AND : case )
rank: 537
score: 98.93553466796875
patch: Token . OR : case Token . HOOK :
rank: 537
score: 98.86851917613636
patch: if ( Token . NULL . equals ( n . get CaMeL String ( Token . AND ) ) ) {
rank: 537
score: 98.70417785644531
patch: break . case Node . AND :
rank: 537
score: 98.62550862630208
patch: case Token . ~ Token . AND :
rank: 537
score: 98.5970458984375
patch: do { case Token . AND :
rank: 537
score: 98.53945486886161
patch: case Token . parse ( :
rank: 537
score: 98.43466186523438
patch: case Type . AND : this :
rank: 538
score: 98.93167114257812
patch: case Token . HOOK , Token . OR :
rank: 538
score: 98.86851671006944
patch: if ( : case Token . AND )
rank: 538
score: 98.70310974121094
patch: } . case Token . AND :
rank: 538
score: 98.53920200892857
patch: return case Token . AND :
rank: 538
score: 98.46977996826172
patch: case Token . ASSIGN : break ;
rank: 538
score: 98.43389129638672
patch: case switch case Type . AND :
rank: 539
score: 98.868408203125
patch: if ( Token . AND || Token . TRUE . equals ( n . get CaMeL String ( ) )
rank: 539
score: 98.70079210069444
patch: case Token . AND : : else :
rank: 539
score: 98.624267578125
patch: case Token . OR : AND :
rank: 539
score: 98.59258270263672
patch: if ( : Token . AND )
rank: 539
score: 98.53812953404018
patch: case Token . AND * :
rank: 539
score: 98.46881103515625
patch: case Node CaMeL Util . ERROR :
rank: 539
score: 98.43356759207589
patch: case Token . AND $NUMBER$ :
rank: 540
score: 98.86739951685855
patch: if ( Token . NULL . equals ( n . get CaMeL String ( ) ) : :
rank: 540
score: 98.58936309814453
patch: case Token . Na CaMeL N :
rank: 540
score: 98.53803362165179
patch: return : Token . AND ;
rank: 540
score: 98.4687271118164
patch: case Token . HOOK : / else
rank: 540
score: 98.45608520507812
patch: switch ( child CaMeL Value ) {
rank: 540
score: 98.43296595982143
patch: case Token . ANNOTATION : :
rank: 541
score: 98.89324396306819
patch: case Token . AND : case Token . SIZE :
rank: 541
score: 98.86734619140626
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n . get CaMeL Type ( ) ) ;
rank: 541
score: 98.61974419487848
patch: case AND : case Token . AND :
rank: 541
score: 98.58857727050781
patch: break ; case Token . TYPE :
rank: 541
score: 98.53711547851563
patch: else : : :
rank: 541
score: 98.43100411551339
patch: case * Token . AND :
rank: 542
score: 98.9295654296875
patch: / * * * case Token . HOOK :
rank: 542
score: 98.89244495738636
patch: if ( n . get CaMeL Type ( ) instanceof
rank: 542
score: 98.8672207919034
patch: if ( Token . AND && Token . AND . equals ( n . get CaMeL Message ( ) ) )
rank: 542
score: 98.61901177300348
patch: case Token . AND : return AND :
rank: 542
score: 98.53662109375
patch: case Token . out :
rank: 542
score: 98.46550641741071
patch: case Token . HOOK : ,
rank: 542
score: 98.45185089111328
patch: case ( Token . HOOK ) :
rank: 542
score: 98.43019612630208
patch: case Type . ERROR :
rank: 543
score: 98.92534790039062
patch: case Token . HOOK || Token . HOOK :
rank: 543
score: 98.89197887073864
patch: case Token . EXPRESSION : case Token . HOOK :
rank: 543
score: 98.86681019176136
patch: if ( Token . AND || Token . AND . equals ( n . get CaMeL Next ( ) ) )
rank: 543
score: 98.69784884982639
patch: case Token . AND : * * /
rank: 543
score: 98.58457946777344
patch: throw new Exception ( $STRING$ ) ;
rank: 543
score: 98.53322347005208
patch: case 1 : case :
rank: 543
score: 98.45114135742188
patch: case / case Token . AND :
rank: 544
score: 98.86677381727431
patch: if ( Token . EMPTY . equals ( n . get CaMeL String ( : ) :
rank: 544
score: 98.69743347167969
patch: / Token case Node . AND :
rank: 544
score: 98.61792670355902
patch: case Token . AND : . OR :
rank: 544
score: 98.52999441964286
patch: case 1 : case : :
rank: 544
score: 98.46198381696429
patch: case Token . AND 1 :
rank: 544
score: 98.44747488839286
patch: else case Token . HOOK :
rank: 545
score: 98.91856689453125
patch: case Token . HOOK = Token . OR ;
rank: 545
score: 98.89182350852273
patch: case Token . AND : case Number . HOOK :
rank: 545
score: 98.86641845703124
patch: if ( Token . NULL . equals ( n . get CaMeL String ( : ) ) ) {
rank: 545
score: 98.69742160373264
patch: } else if case Node . AND :
rank: 545
score: 98.61417388916016
patch: case Token . HOOK : break :
rank: 545
score: 98.52618408203125
patch: case Token . value :
rank: 545
score: 98.46092006138393
patch: if ( Token . HOOK )
rank: 545
score: 98.44638061523438
patch: case ] case Token . AND :
rank: 545
score: 98.42753092447917
patch: case Type . NUMBER :
rank: 546
score: 98.8659732216283
patch: if ( Token . AND || Token . AND . equals ( Token . AND ) ) {
rank: 546
score: 98.69584825303819
patch: case Token . AND : switch : :
rank: 546
score: 98.57756042480469
patch: this . return Token . AND ;
rank: 546
score: 98.4589335123698
patch: case String . HOOK :
rank: 546
score: 98.4268798828125
patch: case final Token . AND :
rank: 547
score: 98.91505940755208
patch: / * * case Token . OR :
rank: 547
score: 98.69549560546875
patch: case String : case Node . AND :
rank: 547
score: 98.60544162326389
patch: case Token . AND : return AND ;
rank: 547
score: 98.57733154296875
patch: case Token . EMPTY : break :
rank: 547
score: 98.52435302734375
patch: case String . AND : :
rank: 547
score: 98.45875767299107
patch: case Token . ERROR : {
rank: 547
score: 98.44509887695312
patch: case Token . HOOK : * /
rank: 548
score: 98.91484375
patch: / * * * case Token . OR :
rank: 548
score: 98.86574485085227
patch: case Token . AND : case Token . decode ( n . get CaMeL String CaMeL Value ( ) ) :
rank: 548
score: 98.60539245605469
patch: case Token . OR : : :
rank: 548
score: 98.45702253069196
patch: case Token . HOOK 1 :
rank: 548
score: 98.42619105747768
patch: case Token . NOT : .
rank: 549
score: 98.86473388671875
patch: if ( Token . NULL . equals ( n . get CaMeL String ( ) ) ) { :
rank: 549
score: 98.60337829589844
patch: break { case Token . AND :
rank: 549
score: 98.57472229003906
patch: case Token . NAME : break ;
rank: 549
score: 98.51729910714286
patch: case Token . AND ? :
rank: 549
score: 98.42616780598958
patch: case Token . BLOCK :
rank: 550
score: 98.86363636363636
patch: if ( Token . AND && Token . AND . equals ( n . get CaMeL Parent ( ) ) )
rank: 550
score: 98.69506157769098
patch: if case Token . AND : break :
rank: 550
score: 98.60324096679688
patch: case Token . AND : case Token
rank: 550
score: 98.5742416381836
patch: case Token . DEFAULT : break ;
rank: 550
score: 98.51626586914062
patch: case $STRING$ case 0 :
rank: 550
score: 98.45435442243304
patch: case Token . FUNCTION : {
rank: 550
score: 98.42574637276786
patch: case Integer . 1 : :
rank: 551
score: 98.8883056640625
patch: case Token . NE : case Token . AND :
rank: 551
score: 98.86358642578125
patch: case Token . AND : case Token . ?
rank: 551
score: 98.69408501519098
patch: case Node . AND : case Token :
rank: 551
score: 98.51484026227679
patch: case $STRING$ + case : :
rank: 551
score: 98.42542521158855
patch: case Type . NO :
rank: 552
score: 98.9123046875
patch: case Token . HOOK , Token . HOOK :
rank: 552
score: 98.86337425595238
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ; }
rank: 552
score: 98.69316101074219
patch: if ( Token . AND : {
rank: 552
score: 98.59518771701389
patch: n . get CaMeL Type ( ) .
rank: 552
score: 98.51412527901786
patch: case $STRING$ : case : }
rank: 552
score: 98.4537353515625
patch: case Token . OR : )
rank: 552
score: 98.43738555908203
patch: * / case Token . HOOK :
rank: 552
score: 98.42438616071429
patch: case Token . IF : :
rank: 553
score: 98.88620827414773
patch: case Token . EXPRESSION : case Token . AND :
rank: 553
score: 98.86289760044643
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n . get CaMeL Message ( ) ) ; }
rank: 553
score: 98.69306098090277
patch: / * / * Token . AND :
rank: 553
score: 98.59346008300781
patch: case Token . Exception . OR :
rank: 553
score: 98.51272583007812
patch: Token . AND * :
rank: 553
score: 98.44475446428571
patch: case Token . AND } }
rank: 553
score: 98.43701934814453
patch: case ) case Token . OR :
rank: 553
score: 98.42357381184895
patch: case Token . EQ :
rank: 554
score: 98.86261541193181
patch: if ( Token . AND && Token . AND . equals ( n . get CaMeL Node ( ) ) )
rank: 554
score: 98.69280327690973
patch: case Short : return Token . AND :
rank: 554
score: 98.59297688802083
patch: case Node CaMeL Util . AND / :
rank: 554
score: 98.51158650716145
patch: case int . AND :
rank: 554
score: 98.44156319754464
patch: case Token . OR / /
rank: 554
score: 98.43447440011161
patch: case Token . IN : {
rank: 554
score: 98.42266845703125
patch: case - $NUMBER$ : break :
rank: 555
score: 98.89990234375
patch: case Token . OR : / / * /
rank: 555
score: 98.8858642578125
patch: case Token . OR : case Token . DEFAULT :
rank: 555
score: 98.86223493303571
patch: if ( Token . NULL . equals ( n . get CaMeL String ( Token . NONE ) ) )
rank: 555
score: 98.59174262152777
patch: case Token . HOOK : / / :
rank: 555
score: 98.56696319580078
patch: case Token . class : break ;
rank: 555
score: 98.51053292410714
patch: case $STRING$ : case 0 ;
rank: 556
score: 98.8838223544034
patch: case Token . HOOK : case Token . 1 :
rank: 556
score: 98.86113048735119
patch: if ( Token . AND . AND . equals ( n . get CaMeL Type ( : ) ) )
rank: 556
score: 98.69158257378473
patch: { case Token . AND : break :
rank: 556
score: 98.56558990478516
patch: case Token . WARNING : break ;
rank: 556
score: 98.50843302408855
patch: else { case $STRING$ :
rank: 556
score: 98.43477085658482
patch: case Token . HOOK / /
rank: 556
score: 98.43353271484375
patch: case Token . NAME : {
rank: 556
score: 98.42031424386161
patch: case Integer . $NUMBER$ : :
rank: 557
score: 98.89755249023438
patch: case Token . OR , Token . OR :
rank: 557
score: 98.88365589488636
patch: case Token . NONE : case Token . HOOK :
rank: 557
score: 98.86088634672619
patch: if ( Token . AND . AND . equals ( n . get CaMeL Type ( ) ) ) :
rank: 557
score: 98.6904067993164
patch: break : case Type . AND :
rank: 557
score: 98.43313162667411
patch: case Token . HOOK : private
rank: 557
score: 98.41965157645089
patch: case Token . abs : :
rank: 558
score: 98.89401245117188
patch: / * if ( Token . OR ) {
rank: 558
score: 98.883544921875
patch: case Token . HOOK : case Token . SIZE :
rank: 558
score: 98.86077325994319
patch: if ( Token . AND || Token . NULL . equals ( n . get CaMeL String ( : ) :
rank: 558
score: 98.58775499131944
patch: case Token . AND : / OR :
rank: 558
score: 98.50582449776786
patch: case Token . : : {
rank: 558
score: 98.43303833007812
patch: switch ( variable )
rank: 558
score: 98.41807047526042
patch: case Integer . STRING :
rank: 559
score: 98.86052911931819
patch: if ( Token . AND || Token . TRUE . equals ( n . get CaMeL Class ( ) ) )
rank: 559
score: 98.56283569335938
patch: case Token . signum ( ) :
rank: 559
score: 98.50284249441964
patch: case Token . : ? :
rank: 559
score: 98.41555350167411
patch: case 1 : case AND :
rank: 560
score: 98.89078097873264
patch: case Token . HOOK : } else {
rank: 560
score: 98.88283469460227
patch: case Token . OR : case Token . LABEL :
rank: 560
score: 98.86018880208333
patch: if ( Token . EMPTY . equals ( n . get CaMeL String ( Token . EMPTY ) ) )
rank: 560
score: 98.68809678819444
patch: / / : case Token . AND :
rank: 560
score: 98.58401150173611
patch: case Token . HOOK : break ; }
rank: 560
score: 98.5556411743164
patch: case Token . ALL : break ;
rank: 560
score: 98.50111607142857
patch: case : case $STRING$ : :
rank: 560
score: 98.41448974609375
patch: case Token . Void :
rank: 561
score: 98.88789672851563
patch: case Token . OR , Token . AND :
rank: 561
score: 98.85946655273438
patch: if ( Token . NULL . equals ( n . get CaMeL String ( ) ) ) break ;
rank: 561
score: 98.57447645399306
patch: case Token . HOOK : return Token ;
rank: 561
score: 98.554931640625
patch: if ( Token . NULL )
rank: 561
score: 98.41299002511161
patch: case Type . 0 : :
rank: 562
score: 98.88250732421875
patch: case Token . HOOK : / / .
rank: 562
score: 98.85819868607955
patch: if ( Token . AND || Token . TRUE . equals ( n . get CaMeL Message ( ) ) :
rank: 562
score: 98.57402886284723
patch: case Token . AND : return $STRING$ ;
rank: 562
score: 98.55355834960938
patch: case Char CaMeL Sequence . NONE :
rank: 562
score: 98.49964250837054
patch: Token . AND * : :
rank: 562
score: 98.42677815755208
patch: for Token . HOOK :
rank: 562
score: 98.41279820033482
patch: case Token . UNKNOWN : :
rank: 562
score: 98.41239420572917
patch: case Token == AND :
rank: 563
score: 98.85675048828125
patch: case Token . AND : Token . AND : case Token . AND : case Token . AND :
rank: 563
score: 98.68396674262152
patch: case Token . AND : Token : else
rank: 563
score: 98.54988098144531
patch: if ( scope != null ) {
rank: 563
score: 98.49741036551339
patch: return Token . AND ; :
rank: 563
score: 98.42476981026786
patch: case Token . ASSIGN finally {
rank: 563
score: 98.41209920247395
patch: case Integer . FUNCTION :
rank: 564
score: 98.8832763671875
patch: if ( variable == Token . AND ) {
rank: 564
score: 98.8561779203869
patch: if ( Token . EMPTY . equals ( n . get CaMeL String ( Token . NULL ) ) )
rank: 564
score: 98.68377007378473
patch: / * if case Token . AND :
rank: 564
score: 98.57270050048828
patch: case Token . Exception . HOOK :
rank: 564
score: 98.54650115966797
patch: case Token . YES : break ;
rank: 564
score: 98.49587576729911
patch: Token { case $STRING$ : :
rank: 564
score: 98.40982055664062
patch: case Integer . NONE :
rank: 565
score: 98.8803955078125
patch: if ( is CaMeL Name ( ) ) {
rank: 565
score: 98.68363444010417
patch: case Node : case Node . AND :
rank: 565
score: 98.56995391845703
patch: case Token . AND ( HOOK :
rank: 565
score: 98.4957784016927
patch: case String case : :
rank: 565
score: 98.41033935546875
patch: case Token . VERBOSE :
rank: 565
score: 98.40973772321429
patch: case Token . TRUE : .
rank: 565
score: 98.40896170479911
patch: case Token . OR : ,
rank: 566
score: 98.85581568667763
patch: if ( Token . AND . equals ( n . get CaMeL String ( : ) ) :
rank: 566
score: 98.68251037597656
patch: while Token case Type . AND :
rank: 566
score: 98.5693359375
patch: case Token . AND : return HOOK ;
rank: 566
score: 98.53910827636719
patch: if ( Type . AND ) {
rank: 566
score: 98.40992954799107
patch: case Token . NO : {
rank: 566
score: 98.40397135416667
patch: case Token . variable :
rank: 567
score: 98.85546875
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + n . get CaMeL Message ( ) ) ; }
rank: 567
score: 98.68137613932292
patch: / AND : case Token . AND :
rank: 567
score: 98.56850179036458
patch: case HOOK : case Token . HOOK :
rank: 567
score: 98.53751918247768
patch: if ( node != null )
rank: 567
score: 98.49521309988839
patch: else : : : : :
rank: 567
score: 98.40373883928571
patch: case Token . NONE : {
rank: 568
score: 98.87842407226563
patch: case Token . HOOK : Token . OR :
rank: 568
score: 98.86144409179687
patch: case Token . HOOK : / / / /
rank: 568
score: 98.85533558238636
patch: if ( Token . AND && Token . AND . equals ( n . get CaMeL Next ( ) ) )
rank: 568
score: 98.53557586669922
patch: case Token . IN : break ;
rank: 568
score: 98.40643310546875
patch: case Token . RAW :
rank: 569
score: 98.87810668945312
patch: case n . get CaMeL First ( ) :
rank: 569
score: 98.860986328125
patch: case Token . HOOK : case Token . )
rank: 569
score: 98.8552181846217
patch: if ( Token . AND && Token . AND . equals ( Token . AND ) ) {
rank: 569
score: 98.6807861328125
patch: case Token . AND : default * /
rank: 569
score: 98.53515625
patch: case Token . READ : break ;
rank: 569
score: 98.48992047991071
patch: case Token . : : .
rank: 569
score: 98.40594482421875
patch: case Token . $NUMBER$ :
rank: 570
score: 98.87770385742188
patch: if ( variable == Token . ASSIGN ) {
rank: 570
score: 98.86054144965277
patch: case Token . HOOK : / / }
rank: 570
score: 98.85405939275569
patch: if ( Token . AND || Token . AND . equals ( n . get CaMeL Key ( ) ) )
rank: 570
score: 98.68041229248047
patch: break : return Token . AND :
rank: 570
score: 98.53473772321429
patch: if ( Node . AND )
rank: 570
score: 98.48990304129464
patch: if : Token . AND :
rank: 570
score: 98.4051513671875
patch: case Double . AND : :
rank: 570
score: 98.39865112304688
patch: case Token . THIS :
rank: 570
score: 98.39594377790179
patch: case Token . n : {
rank: 571
score: 98.87689208984375
patch: case Token . OR , Token . HOOK :
rank: 571
score: 98.84877707741477
patch: if ( Token . AND || Token . AND . equals ( n . get CaMeL Id ( ) ) )
rank: 571
score: 98.68038601345486
patch: case Token . AND : } / :
rank: 571
score: 98.53438895089286
patch: ret = Token . AND ;
rank: 571
score: 98.48946707589286
patch: case $STRING$ : case ? :
rank: 571
score: 98.40375627790179
patch: case Token . SIZE : :
rank: 571
score: 98.39860026041667
patch: case Token . EOF :
rank: 572
score: 98.87655029296874
patch: switch ( Node CaMeL Util != null ) {
rank: 572
score: 98.84856622869319
patch: if ( Token . AND || Token . EMPTY . equals ( n . get CaMeL String ( : ) :
rank: 572
score: 98.679931640625
patch: case Long : case Node . AND :
rank: 572
score: 98.52999877929688
patch: case Char CaMeL Sequence . EMPTY :
rank: 572
score: 98.40366908482143
patch: case 1 : case $NUMBER$ :
rank: 572
score: 98.38930838448661
patch: case Token . KILL : {
rank: 573
score: 98.8753662109375
patch: switch ( Token . OR ) {
rank: 573
score: 98.85726318359374
patch: case Token . AND : case Token . HOOK
rank: 573
score: 98.8484119233631
patch: if ( Token . AND . equals ( n . get CaMeL String ( Token . NULL ) ) )
rank: 573
score: 98.67965698242188
patch: switch Token case Type . AND :
rank: 573
score: 98.56474304199219
patch: case Token != Token . AND :
rank: 573
score: 98.52920532226562
patch: continue ; case Token . AND :
rank: 573
score: 98.48726109095982
patch: case : : : : :
rank: 573
score: 98.40313720703125
patch: case Type . MIN : :
rank: 573
score: 98.38140869140625
patch: case Token . OR : private
rank: 574
score: 98.87526245117188
patch: / / if ( Token . HOOK ) {
rank: 574
score: 98.84776088169643
patch: if ( Token . AND . AND . equals ( n . get CaMeL String ( : ) ) :
rank: 574
score: 98.67959255642361
patch: break : case Token . AND : :
rank: 574
score: 98.52872467041016
patch: while ( Token . AND ) {
rank: 574
score: 98.4871826171875
patch: } case Token . TRUE :
rank: 574
score: 98.40213012695312
patch: case Type . MAX :
rank: 574
score: 98.38048444475446
patch: return Token . HOOK ; }
rank: 575
score: 98.87330322265625
patch: / * * : case Token . HOOK :
rank: 575
score: 98.84760131835938
patch: case Token . AND : case Token . decode ( n . get CaMeL String ( : ) )
rank: 575
score: 98.67859649658203
patch: break Token case Node . AND :
rank: 575
score: 98.48713902064732
patch: case Token . : / :
rank: 575
score: 98.40192522321429
patch: case Token . START : :
rank: 575
score: 98.37843540736607
patch: case Token . OR * /
rank: 576
score: 98.84685724431819
patch: if ( Token . AND || Token . TRUE . equals ( n . get CaMeL Integer ( ) ) )
rank: 576
score: 98.67852783203125
patch: if . case Token . AND :
rank: 576
score: 98.52825927734375
patch: case Token . STRING : break ;
rank: 576
score: 98.4869384765625
patch: case 1 : : :
rank: 576
score: 98.37581089564732
patch: case Token . HOOK : /
rank: 577
score: 98.8693115234375
patch: / * * : case Token . OR :
rank: 577
score: 98.84644839638158
patch: if ( Token . NULL . equals ( n . get CaMeL String ( ) ) && :
rank: 577
score: 98.67698669433594
patch: case Token . AND : } :
rank: 577
score: 98.52789306640625
patch: break Token . AND ;
rank: 577
score: 98.40065220424107
patch: case Token . 0 : :
rank: 577
score: 98.37556675502232
patch: case Token . AND else {
rank: 578
score: 98.866943359375
patch: case Token . HOOK : break ; * /
rank: 578
score: 98.8464022549716
patch: if ( Token . AND . equals ( n . get CaMeL String ( Token . AND ) ) ) {
rank: 578
score: 98.83819580078125
patch: case Token . AND : / / .
rank: 578
score: 98.67685953776042
patch: this . Token case Token . AND :
rank: 578
score: 98.55223083496094
patch: case Token . HOOK : code :
rank: 578
score: 98.52788543701172
patch: if ( Symbol . AND ) {
rank: 578
score: 98.4857177734375
patch: case $STRING$ . case 0 ;
rank: 578
score: 98.39892578125
patch: if case Type . AND :
rank: 578
score: 98.39013671875
patch: case Token . CATCH :
rank: 579
score: 98.86454467773437
patch: case Token . HOOK = Token . OR :
rank: 579
score: 98.84517996651786
patch: case Token . AND : case Token . AND : case Token . AND : case Token . NULL :
rank: 579
score: 98.67499457465277
patch: / / * * Token . AND :
rank: 579
score: 98.55029296875
patch: case Token . HOOK / :
rank: 579
score: 98.48032052176339
patch: case 1 : case 0 :
rank: 579
score: 98.39755249023438
patch: case Type . ANNOTATION :
rank: 579
score: 98.37500871930804
patch: case Token . HOOK break ;
rank: 580
score: 98.86208767361111
patch: / / / case Token . OR :
rank: 580
score: 98.84488075657895
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Message ( ) :
rank: 580
score: 98.67438422309027
patch: break AND : case Token . AND :
rank: 580
score: 98.4778544108073
patch: case Token . println :
rank: 580
score: 98.39673723493304
patch: case char . AND : :
rank: 580
score: 98.38885498046875
patch: case Token . $STRING$ :
rank: 580
score: 98.37453206380208
patch: case Token . AND }
rank: 581
score: 98.86174926757812
patch: / * / . case Token . OR :
rank: 581
score: 98.84416760896382
patch: if ( Token . EMPTY . equals ( n . get CaMeL String ( ) ) ) :
rank: 581
score: 98.67407904730902
patch: * * : case Token . AND :
rank: 581
score: 98.52664620535714
patch: break Token . AND : :
rank: 581
score: 98.4773457845052
patch: case int case : ?
rank: 581
score: 98.39598737444196
patch: case Token . RIGHT : .
rank: 581
score: 98.38851928710938
patch: case Token . FOR :
rank: 582
score: 98.8439697265625
patch: if ( Token . NULL . equals ( n . get CaMeL String ( Token . EMPTY ) :
rank: 582
score: 98.67403157552083
patch: case Token . AND : else * /
rank: 582
score: 98.39519391741071
patch: case Token . NUMBER : :
rank: 582
score: 98.38553292410714
patch: case Token . AND : right
rank: 583
score: 98.84306255139802
patch: if ( Token . AND . equals ( n . get CaMeL Type ( ) ) ) :
rank: 583
score: 98.67390272352431
patch: case Token . AND : case Throwable :
rank: 583
score: 98.52550506591797
patch: break ; case Token . NO :
rank: 583
score: 98.39426095145089
patch: case - AND : break :
rank: 583
score: 98.38009643554688
patch: case Token . HOOK finally
rank: 583
score: 98.36466761997768
patch: case Node . OR : {
rank: 584
score: 98.85878295898438
patch: case Token . HOOK = Token . AND ;
rank: 584
score: 98.84266246448864
patch: if ( Token . AND || Token . TRUE . equals ( n . get CaMeL Node ( ) ) )
rank: 584
score: 98.8222412109375
patch: case Token . AND : / / / /
rank: 584
score: 98.6737060546875
patch: type . case Token . AND :
rank: 584
score: 98.52486746651786
patch: state = Token . AND ;
rank: 584
score: 98.47450474330357
patch: case int case : : :
rank: 584
score: 98.39384242466518
patch: case Integer . NAME : :
rank: 584
score: 98.37969098772321
patch: else case Token . OR :
rank: 585
score: 98.85650024414062
patch: if ( n == Token . OR ) {
rank: 585
score: 98.84224853515624
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n . get CaMeL Class ( ) ) ;
rank: 585
score: 98.67361450195312
patch: else Token case Token . AND :
rank: 585
score: 98.54422760009766
patch: case Token == Token . OR :
rank: 585
score: 98.52426147460938
patch: case Token . UNKNOWN : break ;
rank: 585
score: 98.47235979352679
patch: else { : : : :
rank: 585
score: 98.37728445870536
patch: : case Token . HOOK :
rank: 586
score: 98.84212239583333
patch: if ( Token . AND . AND . equals ( n . get CaMeL Type ( ) : ) )
rank: 586
score: 98.67298041449652
patch: case Token . AND : case Void :
rank: 586
score: 98.52323150634766
patch: case Token . COMMA : break ;
rank: 586
score: 98.37667846679688
patch: case Token . XML :
rank: 586
score: 98.35666910807292
patch: case Token . consume :
rank: 587
score: 98.84072730654762
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ; }
rank: 587
score: 98.67281087239583
patch: case Token . AND : { else {
rank: 587
score: 98.46860758463542
patch: case String case $NUMBER$ :
rank: 587
score: 98.39126586914062
patch: case Short . AND :
rank: 587
score: 98.3763936360677
patch: case Token . OTHER :
rank: 587
score: 98.35573904854911
patch: return new Token ( ) ;
rank: 588
score: 98.85399780273437
patch: Token . HOOK : case Token . OR :
rank: 588
score: 98.84040178571429
patch: case Token . AND : case Token . decode ( n . get CaMeL String CaMeL Value ( ) :
rank: 588
score: 98.52169799804688
patch: expr = Token . AND ; :
rank: 588
score: 98.46670532226562
patch: case : case : :
rank: 588
score: 98.3909912109375
patch: case byte . AND : :
rank: 588
score: 98.35521589006696
patch: } switch ( n ) {
rank: 589
score: 98.85368041992187
patch: / / / / case Token . HOOK :
rank: 589
score: 98.83983154296875
patch: case Token . AND : case Token . decode ( n . get CaMeL String ( ) , :
rank: 589
score: 98.80889282226562
patch: case Token . HOOK : case Token . OR
rank: 589
score: 98.67026095920139
patch: * * * case Token . AND :
rank: 589
score: 98.46661376953125
patch: case $STRING$ . AND :
rank: 589
score: 98.38866170247395
patch: case Token . DOT :
rank: 590
score: 98.83970240542763
patch: case Token . AND : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 590
score: 98.8086669921875
patch: case Token . HOOK : / catch ( )
rank: 590
score: 98.66999816894531
patch: } if case Token . AND :
rank: 590
score: 98.53390502929688
patch: case Token . HOOK / / :
rank: 590
score: 98.46543375651042
patch: case Type . : :
rank: 590
score: 98.35167585100446
patch: case Token . READ : }
rank: 591
score: 98.83839053199405
patch: if ( Token . NULL . equals ( n . get CaMeL String ( Token . AND ) : :
rank: 591
score: 98.66943359375
patch: this Token case Token . AND :
rank: 591
score: 98.46433512369792
patch: Token . AND * else
rank: 591
score: 98.38832310267857
patch: case Token . NULL : .
rank: 591
score: 98.37342180524554
patch: case Token . AND break ;
rank: 591
score: 98.35103934151786
patch: case Type . HOOK : {
rank: 592
score: 98.85231323242188
patch: switch ( Node CaMeL Util . Name ) {
rank: 592
score: 98.83828590029762
patch: if ( Token . AND . AND . equals ( n . get CaMeL Type ( ) AND ) )
rank: 592
score: 98.53282819475446
patch: break case Token . OR :
rank: 592
score: 98.5196762084961
patch: break ; case Token . FALSE :
rank: 592
score: 98.46428571428571
patch: case int Token . AND :
rank: 592
score: 98.38815743582589
patch: case Token . SUB : :
rank: 592
score: 98.37257893880208
patch: case Token . exit :
rank: 593
score: 98.84989013671876
patch: case Token . OR & Token . OR :
rank: 593
score: 98.83804481907895
patch: if ( Token . AND . equals ( n . get CaMeL String ( ) ) : :
rank: 593
score: 98.66921657986111
patch: case Node : case Token . AND :
rank: 593
score: 98.5320053100586
patch: case Token . AND : $STRING$ :
rank: 593
score: 98.46397908528645
patch: Token { case $STRING$ ;
rank: 593
score: 98.38772147042411
patch: case Type . CHECK : :
rank: 593
score: 98.36696370442708
patch: case Token . VAR :
rank: 593
score: 98.34574381510417
patch: case T . AND :
rank: 594
score: 98.849365234375
patch: case Token . HOOK += Token . OR :
rank: 594
score: 98.83763485863095
patch: if ( Token . EMPTY . equals ( n . get CaMeL String ( Token . AND ) ) :
rank: 594
score: 98.66853332519531
patch: try { case Type . AND :
rank: 594
score: 98.52664184570312
patch: break ; case Token . OR :
rank: 594
score: 98.51797485351562
patch: case Char CaMeL Sequence . NULL :
rank: 595
score: 98.8376220703125
patch: if ( Token . AND . equals ( n . get CaMeL String ( ) ) ) { :
rank: 595
score: 98.66756863064236
patch: if Token : case Token . AND :
rank: 595
score: 98.46037946428571
patch: case Token . err : :
rank: 595
score: 98.38691929408482
patch: case ( $NUMBER$ : break :
rank: 595
score: 98.34531947544643
patch: case Node . AND : }
rank: 596
score: 98.83604213169643
patch: if ( Token . AND || Token . NULL . equals ( n . get CaMeL Value ( ) :
rank: 596
score: 98.5233154296875
patch: n . case Token . AND :
rank: 596
score: 98.51765659877232
patch: pos = Token . AND ;
rank: 596
score: 98.38557942708333
patch: case Type . START :
rank: 596
score: 98.34468296595982
patch: case Token . OR : /
rank: 597
score: 98.83519345238095
patch: if ( Token . AND || Token . AND . equals ( n . get CaMeL Value ( ) :
rank: 597
score: 98.79532877604167
patch: case Token . HOOK : / / first
rank: 597
score: 98.66699896918402
patch: case Integer : case Node . AND :
rank: 597
score: 98.45901489257812
patch: case 0 + : :
rank: 597
score: 98.38424246651786
patch: case Type . AND : /
rank: 597
score: 98.36189488002232
patch: case Token . TYPE : {
rank: 597
score: 98.34461321149554
patch: case Type . AND : {
rank: 598
score: 98.83452758789062
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + n . get CaMeL Type ( ) ) ;
rank: 598
score: 98.51399230957031
patch: case Token . decode ( $STRING$ )
rank: 598
score: 98.38360595703125
patch: case Token . INCLUDE : :
rank: 598
score: 98.3616434733073
patch: case Token . OR finally
rank: 598
score: 98.33855329241071
patch: case Token . HOOK else {
rank: 599
score: 98.83448486328125
patch: case Token . TYPE || Token . AND :
rank: 599
score: 98.793603515625
patch: case Token . OR : case Token . HOOK
rank: 599
score: 98.52021135602679
patch: case ~ Token . AND :
rank: 599
score: 98.51296997070312
patch: if ( line != null ) {
rank: 599
score: 98.45545305524554
patch: case Token . value ( :
rank: 599
score: 98.38100760323661
patch: case Math . AND : :
rank: 599
score: 98.35659354073661
patch: / * Token . HOOK :
rank: 599
score: 98.33852713448661
patch: if ( ! false ) {
rank: 600
score: 98.84742736816406
patch: case Token . OR : * /
rank: 600
score: 98.83370535714286
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Message ( : ) ) ;
rank: 600
score: 98.66514587402344
patch: } if ( Token . AND :
rank: 600
score: 98.51889038085938
patch: case Token . AND / OR :
rank: 600
score: 98.51158142089844
patch: if : return Token . AND ;
rank: 600
score: 98.45424107142857
patch: case $STRING$ case : : :
rank: 600
score: 98.38051060267857
patch: case Token . RETURN : :
rank: 600
score: 98.33788045247395
patch: case Name . HOOK :
rank: 601
score: 98.846484375
patch: switch ( Token . OR ) { * /
rank: 601
score: 98.83350771949405
patch: if ( Token . NULL . equals ( n . get CaMeL String ( Token . NULL ) ) :
rank: 601
score: 98.5105972290039
patch: case Token . code : break ;
rank: 601
score: 98.37808663504464
patch: case Type . YES : :
rank: 601
score: 98.3532206217448
patch: case Token . DO :
rank: 601
score: 98.33672223772321
patch: case Token . ) : }
rank: 602
score: 98.84536743164062
patch: case Token . OR = Token . OR ;
rank: 602
score: 98.83169555664062
patch: if ( Token . NULL . equals ( n . get CaMeL String ( Token . NONE ) :
rank: 602
score: 98.6611328125
patch: / Token : case Token . AND :
rank: 602
score: 98.51752471923828
patch: case Context . Token . AND :
rank: 602
score: 98.50973510742188
patch: if ( Style . AND ) {
rank: 602
score: 98.4512939453125
patch: case $STRING$ + case :
rank: 602
score: 98.37789916992188
patch: case Integer . TRUE :
rank: 602
score: 98.35291399274554
patch: case Token . class : {
rank: 602
score: 98.3359375
patch: case Token . HOOK } }
rank: 603
score: 98.84536743164062
patch: / * * * * Token . HOOK :
rank: 603
score: 98.83112127130681
patch: if ( Token . AND && Token . AND . equals ( n . get CaMeL Key ( ) ) )
rank: 603
score: 98.78033447265625
patch: case Token . HOOK : / / } else
rank: 603
score: 98.6600112915039
patch: return Token . AND : break :
rank: 603
score: 98.51580047607422
patch: case Token . HOOK : try {
rank: 603
score: 98.50935363769531
patch: if ( node == null ) {
rank: 603
score: 98.44889613560268
patch: case $STRING$ . case $STRING$ :
rank: 603
score: 98.37704031808036
patch: case Token . NAME : .
rank: 603
score: 98.35289510091145
patch: case Token == HOOK :
rank: 603
score: 98.33176676432292
patch: case Token . PI :
rank: 604
score: 98.83104705810547
patch: if ( case Token . AND )
rank: 604
score: 98.77655707465277
patch: case Token . AND : / / first
rank: 604
score: 98.65986463758681
patch: case Token . AND : if : {
rank: 604
score: 98.51470184326172
patch: break ; case Token . HOOK :
rank: 604
score: 98.44701276506696
patch: case $STRING$ . case 1 :
rank: 604
score: 98.3766377766927
patch: case Integer . NO :
rank: 604
score: 98.34989013671876
patch: / * * /
rank: 604
score: 98.32876150948661
patch: } case Token . HOOK :
rank: 605
score: 98.83103434244792
patch: / * : case Token . HOOK :
rank: 605
score: 98.83101029829545
patch: if ( Token . AND || Token . AND . equals ( n . get CaMeL Integer ( ) ) )
rank: 605
score: 98.51315307617188
patch: case Token . AND : KILL :
rank: 605
score: 98.50792585100446
patch: switch ( Token . AND )
rank: 605
score: 98.44573974609375
patch: case String case ) : :
rank: 606
score: 98.83050827752976
patch: if ( Token . AND . AND . equals ( n . get CaMeL String ( ) ) : :
rank: 606
score: 98.65909830729167
patch: case T : case Node . AND :
rank: 606
score: 98.5077133178711
patch: sb . append ( $STRING$ ) ;
rank: 606
score: 98.44359334309895
patch: } : case $STRING$ :
rank: 606
score: 98.3734639485677
patch: case Integer . MIN :
rank: 606
score: 98.34620884486607
patch: case Token . EMPTY : {
rank: 606
score: 98.32747395833333
patch: case String . OR :
rank: 607
score: 98.83013916015625
patch: case Token . AND : case Token . TYPE
rank: 607
score: 98.65884060329861
patch: / * Token . AND * * /
rank: 607
score: 98.44126383463542
patch: case Token . arraycopy :
rank: 607
score: 98.37287902832031
patch: case 1 :
rank: 607
score: 98.34564208984375
patch: / * Token . OR :
rank: 608
score: 98.82993861607143
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ; }
rank: 608
score: 98.65789794921875
patch: Token case Token . AND : / :
rank: 608
score: 98.44102260044643
patch: case $STRING$ . case : }
rank: 608
score: 98.37167794363839
patch: case Token . STATEMENT : :
rank: 608
score: 98.34110514322917
patch: case Token . CALL :
rank: 608
score: 98.32705688476562
patch: case n . HOOK :
rank: 609
score: 98.8297119140625
patch: if ( Token . AND . equals ( n . get CaMeL String ( : ) ) ) {
rank: 609
score: 98.51158142089844
patch: case Token . HOOK : AND :
rank: 609
score: 98.44096156529018
patch: case int case 0 : :
rank: 609
score: 98.3407491048177
patch: case Token . BYTES :
rank: 610
score: 98.8296786221591
patch: if ( Token . AND || Token . AND . equals ( n . get CaMeL Class ( ) ) )
rank: 610
score: 98.82126193576389
patch: / * * * Token . HOOK :
rank: 610
score: 98.65439181857639
patch: break : if ( Token . AND :
rank: 610
score: 98.50967407226562
patch: break check case Token . AND :
rank: 610
score: 98.49931117466518
patch: if ( Token . NOT )
rank: 610
score: 98.43860880533855
patch: Token { case 0 :
rank: 610
score: 98.3686014811198
patch: case Type . UNKNOWN :
rank: 610
score: 98.33936418805804
patch: case Token . . AND :
rank: 611
score: 98.81776258680556
patch: / / if ( Token . OR )
rank: 611
score: 98.65382893880208
patch: case Node . AND : break : :
rank: 611
score: 98.50420379638672
patch: case Token == Token . HOOK :
rank: 611
score: 98.4959945678711
patch: case Token . INSTANCEOF : break ;
rank: 611
score: 98.43763950892857
patch: case $STRING$ + case : {
rank: 611
score: 98.33717854817708
patch: break ; / * /
rank: 611
score: 98.32232666015625
patch: if ( true ) {
rank: 612
score: 98.82883911132812
patch: if ( Token . NULL . equals ( n . get CaMeL String ( ) ) ) continue ;
rank: 612
score: 98.81309678819444
patch: / / else case Token . HOOK :
rank: 612
score: 98.75712280273437
patch: case Node CaMeL Util . Token . ASSIGN :
rank: 612
score: 98.65321180555556
patch: / . : case Token . AND :
rank: 612
score: 98.49538748604911
patch: type = Token . AND ;
rank: 612
score: 98.36637660435268
patch: case Token . LT : :
rank: 613
score: 98.82774769176136
patch: if ( Token . AND || Token . NULL . equals ( n . get CaMeL Integer ( ) ) )
rank: 613
score: 98.81109619140625
patch: / * : case Token . OR :
rank: 613
score: 98.65303548177083
patch: * * * Token . AND : /
rank: 613
score: 98.43692452566964
patch: case $STRING$ . case $STRING$ ;
rank: 613
score: 98.36513264973958
patch: case Type . LT :
rank: 613
score: 98.32061767578125
patch: case Name . AND :
rank: 614
score: 98.82765502929688
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Message ( ) ) :
rank: 614
score: 98.65273030598958
patch: break : : case Token . AND :
rank: 614
score: 98.4996337890625
patch: case Token . AND : return
rank: 614
score: 98.4368184407552
patch: case $STRING$ ? : :
rank: 614
score: 98.36344691685268
patch: case Token . AND : token
rank: 614
score: 98.335693359375
patch: case Token . STAR :
rank: 614
score: 98.31944056919643
patch: case Node . HOOK : }
rank: 615
score: 98.827490234375
patch: case Token . Type . AND : case Token . Type . AND : case Token . AND :
rank: 615
score: 98.80646430121527
patch: / * else case Token . HOOK :
rank: 615
score: 98.74771457248264
patch: case Token . HOOK : / / ;
rank: 615
score: 98.65203179253473
patch: case ? ? case Node . AND :
rank: 615
score: 98.49848937988281
patch: case Token . AND : break ?
rank: 615
score: 98.36295166015626
patch: case Integer : :
rank: 615
score: 98.33445521763393
patch: case Token . WARNING : {
rank: 616
score: 98.82711791992188
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + n . get CaMeL Class ( ) ) ;
rank: 616
score: 98.6493428548177
patch: case Long . AND :
rank: 616
score: 98.49760437011719
patch: case Token . AND : break {
rank: 616
score: 98.48970031738281
patch: case Type . AND : break ;
rank: 616
score: 98.3339131673177
patch: case Symbol . HOOK :
rank: 617
score: 98.82695978338069
patch: if ( Token . AND || Token . NULL . equals ( n . get CaMeL String ( ) : :
rank: 617
score: 98.80168914794922
patch: / * * Token . HOOK :
rank: 617
score: 98.64808654785156
patch: { Token case Type . AND :
rank: 617
score: 98.49752807617188
patch: case Token . AND : , :
rank: 617
score: 98.48863220214844
patch: case Token . intern ( ) :
rank: 617
score: 98.42432657877605
patch: if ( case ) {
rank: 618
score: 98.82647094726562
patch: Token . AND : case Token . AND : case Token . AND : case Token . AND :
rank: 618
score: 98.74593505859374
patch: case Token . AND : case Token . )
rank: 618
score: 98.48753138950893
patch: expr = Token . AND :
rank: 618
score: 98.42298380533855
patch: case : / : :
rank: 618
score: 98.36090959821429
patch: case Enum . AND : :
rank: 618
score: 98.32700602213542
patch: case Token . RP :
rank: 618
score: 98.3159688313802
patch: case Token . / /
rank: 619
score: 98.82600541548295
patch: if ( Token . AND && Token . AND . equals ( n . get CaMeL Id ( ) ) )
rank: 619
score: 98.49677385602679
patch: break case Token . HOOK :
rank: 619
score: 98.48359680175781
patch: Token . AND : : break ;
rank: 619
score: 98.42036946614583
patch: case Token . TRUE ?
rank: 619
score: 98.36056954520089
patch: case Token . STRING : .
rank: 619
score: 98.32636369977679
patch: case extends Token . AND :
rank: 619
score: 98.31451416015625
patch: case T . HOOK :
rank: 620
score: 98.82569580078125
patch: if ( Token . AND . equals ( n . get CaMeL String ( ) ) ) break ;
rank: 620
score: 98.63834926060268
patch: Token case Node . AND :
rank: 620
score: 98.3597412109375
patch: case Token . COMMA : :
rank: 620
score: 98.32553100585938
patch: case Token . CONTINUE :
rank: 620
score: 98.31401715959821
patch: return Token . AND ; }
rank: 621
score: 98.8243741122159
patch: if ( Token . AND || Token . AND . equals ( n . get CaMeL Symbol ( ) ) )
rank: 621
score: 98.63737269810268
patch: switch ( Token . AND :
rank: 621
score: 98.4957046508789
patch: case Token . AND / HOOK :
rank: 621
score: 98.4183349609375
patch: case Node . : :
rank: 621
score: 98.32155354817708
patch: case Token . 1 :
rank: 621
score: 98.31388636997768
patch: if ( Token . OR )
rank: 622
score: 98.8243075284091
patch: if ( Token . AND || Token . EMPTY . equals ( n . get CaMeL Class ( ) ) )
rank: 622
score: 98.74035034179687
patch: case Token . HOOK : / / OR :
rank: 622
score: 98.63626098632812
patch: / : case Node . AND :
rank: 622
score: 98.48223876953125
patch: case Token . NOT : default :
rank: 622
score: 98.35814557756696
patch: case Token . EXPRESSION : :
rank: 622
score: 98.31360880533855
patch: case Token . HOOK ?
rank: 623
score: 98.8232666015625
patch: if ( Token . AND . AND . equals ( n . get CaMeL Type ( ) : :
rank: 623
score: 98.4153340657552
patch: case Token . equals :
rank: 623
score: 98.35301862444196
patch: case Token . AND : this
rank: 623
score: 98.31890869140625
patch: case Token . default :
rank: 624
score: 98.82283158735795
patch: if ( Token . AND || Token . TRUE . equals ( n . get CaMeL Key ( ) ) )
rank: 624
score: 98.79222954644098
patch: / * else case Token . OR :
rank: 624
score: 98.73116048177083
patch: case Token . OR : / / .
rank: 624
score: 98.63413492838542
patch: switch Token . AND :
rank: 624
score: 98.49163818359375
patch: case Token . AND * OR :
rank: 624
score: 98.47754669189453
patch: if Token . AND ) break ;
rank: 624
score: 98.41357421875
patch: case Token . iterator :
rank: 624
score: 98.35230509440105
patch: case Type . LINE :
rank: 624
score: 98.31095377604167
patch: break Token . HOOK :
rank: 625
score: 98.8225430575284
patch: if ( Token . AND || Token . AND . equals ( n . get CaMeL Value ( ) ) :
rank: 625
score: 98.79114641462054
patch: case Token . OR * :
rank: 625
score: 98.63324737548828
patch: { if case Token . AND :
rank: 625
score: 98.47612762451172
patch: case Token . FUNCTION : break ;
rank: 625
score: 98.41072591145833
patch: case int case ) {
rank: 625
score: 98.3174336751302
patch: case Token . DELIMITER :
rank: 625
score: 98.31008911132812
patch: if ( false ) {
rank: 626
score: 98.82230224609376
patch: case Token . AND : if ( n . get CaMeL Type ( ) == Token . AND )
rank: 626
score: 98.63201904296875
patch: case Token . AND > break :
rank: 626
score: 98.48768615722656
patch: case Token . AND : / )
rank: 626
score: 98.47611236572266
patch: case Token . Assertion CaMeL Error :
rank: 626
score: 98.41001383463542
patch: case 0 case : :
rank: 626
score: 98.34913853236607
patch: case Token . AND : type
rank: 626
score: 98.31650797526042
patch: case Token . FINALLY :
rank: 626
score: 98.30988420758929
patch: case Token . OR } }
rank: 627
score: 98.8216885653409
patch: if ( Token . AND || Token . AND . equals ( n . get CaMeL String ( : ) :
rank: 627
score: 98.63181849888393
patch: break case Node . AND :
rank: 627
score: 98.4758071899414
patch: case Token . PREFIX : break ;
rank: 627
score: 98.34904261997768
patch: case Token . LOCAL : :
rank: 627
score: 98.31636265345982
patch: : case Token . OR :
rank: 627
score: 98.30645751953125
patch: case Token . ASSIGN : ;
rank: 628
score: 98.82151100852273
patch: if ( Token . NULL . equals ( n . get CaMeL String ( ) . trim ( ) ) )
rank: 628
score: 98.63180541992188
patch: * Token . AND :
rank: 628
score: 98.48552703857422
patch: case Token . HOOK : : :
rank: 628
score: 98.47538757324219
patch: if ( Token . NO ) {
rank: 628
score: 98.4000956217448
patch: case Token . EOL :
rank: 628
score: 98.34864153180804
patch: case Result . AND : .
rank: 628
score: 98.31371198381696
patch: case Token . << * /
rank: 628
score: 98.30563790457589
patch: if ( ! null ) {
rank: 629
score: 98.82144165039062
patch: case Token . AND : case Token . AND : Token . AND : case Token . AND :
rank: 629
score: 98.71063232421875
patch: case Token . HOOK : case
rank: 629
score: 98.63035583496094
patch: / Token . AND : * /
rank: 629
score: 98.47474888392857
patch: if ( State . AND )
rank: 629
score: 98.39865112304688
patch: case byte case 0 :
rank: 630
score: 98.8205233487216
patch: if ( Token . AND . AND . equals ( n . get CaMeL String ( : ) ) ) {
rank: 630
score: 98.78773328993056
patch: case Token . HOOK : * * /
rank: 630
score: 98.70671251085069
patch: case Token . OR : / / }
rank: 630
score: 98.6294174194336
patch: try { case Node . AND :
rank: 630
score: 98.47271728515625
patch: case Token . interrupt ( ) ;
rank: 630
score: 98.39571126302083
patch: case Token . next :
rank: 630
score: 98.34752546037946
patch: case Token . AND : name
rank: 631
score: 98.82045676491477
patch: case Token . Type . AND : case Token . Type . AND : case Token . Type . AND :
rank: 631
score: 98.6286849975586
patch: / * * * * / /
rank: 631
score: 98.48162078857422
patch: case Token . AND : false :
rank: 631
score: 98.47264099121094
patch: case Token . CONTINUE : break ;
rank: 631
score: 98.34735979352679
patch: case Token . DEFAULT : :
rank: 631
score: 98.30279541015625
patch: case Token . STRING : {
rank: 632
score: 98.8185302734375
patch: case Token . AND : case Token . decode ( n . get CaMeL Node ( ) ) :
rank: 632
score: 98.78464762369792
patch: case Token . OR : } else {
rank: 632
score: 98.48133087158203
patch: case Token . AND : READ :
rank: 632
score: 98.4723129272461
patch: if ( Token . TRUE ) {
rank: 632
score: 98.39284261067708
patch: Token { case 1 :
rank: 632
score: 98.34719412667411
patch: case Token . IN : .
rank: 632
score: 98.30288696289062
patch: case Token . ELSE :
rank: 632
score: 98.30264718191964
patch: case Token . AND ; }
rank: 633
score: 98.81755719866071
patch: if ( Token . AND || Token . EMPTY . equals ( n . get CaMeL Value ( ) :
rank: 633
score: 98.70304361979167
patch: case Token . HOOK : case 0 :
rank: 633
score: 98.62701416015625
patch: else if case Token . AND :
rank: 633
score: 98.48065948486328
patch: case Token . AND : true :
rank: 633
score: 98.47117614746094
patch: if ( Token . AND . :
rank: 633
score: 98.34619140625
patch: case Type . 1 :
rank: 633
score: 98.30228678385417
patch: } switch ( variable )
rank: 633
score: 98.30174037388393
patch: case Node n . AND :
rank: 634
score: 98.8172607421875
patch: if ( Token . AND . AND . equals ( n . get CaMeL String ( ) ) ) { :
rank: 634
score: 98.62557220458984
patch: if ( ? Token . AND :
rank: 634
score: 98.47040557861328
patch: case Token . BLOCK : break ;
rank: 634
score: 98.39159138997395
patch: Token . AND / :
rank: 634
score: 98.30126953125
patch: { case Token . HOOK :
rank: 634
score: 98.2987060546875
patch: if ( ! true ) {
rank: 635
score: 98.81653941761364
patch: if ( Token . AND || Token . AND . equals ( n . get CaMeL Boolean ( ) ) )
rank: 635
score: 98.77958679199219
patch: / * * * * * /
rank: 635
score: 98.62360491071429
patch: } case Node . AND :
rank: 635
score: 98.47003173828125
patch: case Token . decode ( $STRING$ :
rank: 635
score: 98.39124552408855
patch: final Token case 0 :
rank: 635
score: 98.34532819475446
patch: case Token . AND : set
rank: 635
score: 98.29615275065105
patch: case Token . interrupt :
rank: 635
score: 98.29521833147321
patch: / ( Token . HOOK )
rank: 636
score: 98.81621759588069
patch: if ( Token . AND || Token . NULL . equals ( n . get CaMeL Node ( ) ) )
rank: 636
score: 98.62138148716518
patch: { if Token . AND :
rank: 636
score: 98.46835763113839
patch: case Token . OR / :
rank: 636
score: 98.46798706054688
patch: if ( Mode . AND ) {
rank: 636
score: 98.34461669921875
patch: case $NUMBER$ : :
rank: 636
score: 98.29485212053571
patch: if ( n == null )
rank: 636
score: 98.29435511997768
patch: case + Token . AND :
rank: 637
score: 98.8160400390625
patch: if ( Token . AND . equals ( n . get CaMeL String ( Token . NULL ) :
rank: 637
score: 98.46683502197266
patch: if ( Token . AND && :
rank: 637
score: 98.45882742745536
patch: case Token . AND : case
rank: 637
score: 98.38446044921875
patch: case ? 1 : :
rank: 637
score: 98.34397670200893
patch: case -= Token . AND :
rank: 637
score: 98.29480997721355
patch: case Token . AND else
rank: 638
score: 98.8158947172619
patch: if ( Token . AND || Token . EMPTY . equals ( n . get CaMeL Message ( ) :
rank: 638
score: 98.77241346571181
patch: / / else case Token . OR :
rank: 638
score: 98.46426827566964
patch: result = Token . AND ;
rank: 638
score: 98.34293910435268
patch: case Type . VOID : :
rank: 638
score: 98.29444231305804
patch: } case Token . OR :
rank: 638
score: 98.29090372721355
patch: switch ( n ) {
rank: 639
score: 98.81566273082386
patch: if ( Token . AND || Token . EMPTY . equals ( n . get CaMeL Parent ( ) ) )
rank: 639
score: 98.77239312065973
patch: / / / case Token . AND :
rank: 639
score: 98.69434271918402
patch: case Token . AND : / / ;
rank: 639
score: 98.61660766601562
patch: * * case Token . AND :
rank: 639
score: 98.46310424804688
patch: break ; case Token . IN :
rank: 639
score: 98.38295491536458
patch: case Boolean . TRUE :
rank: 639
score: 98.294189453125
patch: if ( null == variable )
rank: 639
score: 98.29087320963542
patch: case Token . COLON :
rank: 640
score: 98.81565348307292
patch: switch ( : case Token . AND )
rank: 640
score: 98.61598205566406
patch: if ( case Token . AND :
rank: 640
score: 98.341796875
patch: case Integer . PROPERTY :
rank: 640
score: 98.29061279296874
patch: Token . HOOK :
rank: 641
score: 98.81552956321023
patch: if ( Token . AND || Token . NULL . equals ( n . get CaMeL Next ( ) ) )
rank: 641
score: 98.76854790581598
patch: / * if ( Token . OR )
rank: 641
score: 98.69120958116319
patch: case OR : case Token . HOOK :
rank: 641
score: 98.61293538411458
patch: case Function . AND :
rank: 641
score: 98.46292114257812
patch: case Token . VOID : break :
rank: 641
score: 98.44814627511161
patch: case ( Token . HOOK :
rank: 641
score: 98.38072713216145
patch: case $STRING$ case $STRING$ :
rank: 641
score: 98.34153529575893
patch: case Integer . RIGHT : :
rank: 641
score: 98.29165213448661
patch: else switch ( variable ) {
rank: 641
score: 98.28807721819196
patch: default case Token . AND :
rank: 642
score: 98.8155029296875
patch: if ( Token . EMPTY . equals ( n . get CaMeL String ( Token . NULL ) :
rank: 642
score: 98.76412527901786
patch: case Token . HOOK * :
rank: 642
score: 98.4470926920573
patch: case Exception . HOOK :
rank: 642
score: 98.37921905517578
patch: / : :
rank: 642
score: 98.340576171875
patch: case Token . NE :
rank: 642
score: 98.28774588448661
patch: if ( n . get CaMeL
rank: 642
score: 98.28602294921875
patch: case Token . )
rank: 643
score: 98.81501908735795
patch: if ( Token . AND . AND . equals ( n . get CaMeL String ( ) ) ) break ;
rank: 643
score: 98.75984022352431
patch: case Token . OR : * * /
rank: 643
score: 98.68436008029514
patch: case Token . HOOK : / * first
rank: 643
score: 98.45363362630208
patch: case Token . INSTANCEOF :
rank: 643
score: 98.34022739955357
patch: case Type . FUNCTION : .
rank: 643
score: 98.28578404017857
patch: case Token . OR 1 :
rank: 644
score: 98.8149646577381
patch: if ( Token . AND || Token . NULL . equals ( n . get CaMeL String ( ) )
rank: 644
score: 98.68146430121527
patch: case Token . HOOK : / / else
rank: 644
score: 98.61068725585938
patch: / Token case Type . AND :
rank: 644
score: 98.45322672526042
patch: break Token . TRUE ;
rank: 644
score: 98.36998494466145
patch: case Token . FALSE ?
rank: 644
score: 98.3392333984375
patch: case Type . NO : :
rank: 644
score: 98.28409830729167
patch: case Token . WHILE :
rank: 645
score: 98.814697265625
patch: if ( Token . AND || Token . TRUE . equals ( n . get CaMeL Next ( ) ) )
rank: 645
score: 98.75306047712054
patch: / * * * * /
rank: 645
score: 98.60901896158855
patch: } Token . AND :
rank: 645
score: 98.367431640625
patch: case : int case :
rank: 645
score: 98.27964564732143
patch: { case Token . OR :
rank: 646
score: 98.81454467773438
patch: return Token . AND | Token . AND ;
rank: 646
score: 98.67364501953125
patch: case Token . OR : / / first
rank: 646
score: 98.60893903459821
patch: / case Node . AND :
rank: 646
score: 98.45254516601562
patch: case Token . mode :
rank: 646
score: 98.43813069661458
patch: case State . AND :
rank: 646
score: 98.36700439453125
patch: case 0 . : :
rank: 646
score: 98.3373514811198
patch: case Token . AND /
rank: 646
score: 98.28175571986607
patch: With case Token . AND :
rank: 647
score: 98.81376509232955
patch: case Token . AND : case Token . AND : case Token . AND : case Token . AND : :
rank: 647
score: 98.36575317382812
patch: case Token . : (
rank: 647
score: 98.33730061848958
patch: case Token . SWITCH :
rank: 647
score: 98.28082275390625
patch: case Token . ) / /
rank: 648
score: 98.81316583806819
patch: if ( Token . AND || Token . EMPTY . equals ( n . get CaMeL Message ( ) ) :
rank: 648
score: 98.74821641710069
patch: / / case Token . HOOK : {
rank: 648
score: 98.60728454589844
patch: switch . case Token . AND :
rank: 648
score: 98.42265101841518
patch: case Token . AND private :
rank: 648
score: 98.36483764648438
patch: case String case 0 :
rank: 648
score: 98.33625139508929
patch: case Type . ERROR : :
rank: 649
score: 98.8124112215909
patch: if ( Token . AND || Token . NULL . equals ( n . get CaMeL Value ( ) ) :
rank: 649
score: 98.33535766601562
patch: case Node . NOT :
rank: 649
score: 98.28019205729167
patch: case Token . HOOK }
rank: 649
score: 98.27464948381696
patch: case Token . ALL : {
rank: 650
score: 98.81214488636364
patch: if ( Token . AND || Token . EMPTY . equals ( n . get CaMeL Node ( ) ) )
rank: 650
score: 98.44384765625
patch: case Token . ALL : :
rank: 650
score: 98.36392211914062
patch: case String case :
rank: 650
score: 98.33477783203125
patch: case n . AND :
rank: 650
score: 98.27942911783855
patch: for Token . AND :
rank: 651
score: 98.8121004971591
patch: if ( Token . AND || Token . NULL . equals ( n . get CaMeL Class ( ) ) )
rank: 651
score: 98.74414825439453
patch: case Token . HOOK * * /
rank: 651
score: 98.60231018066406
patch: : Token case Token . AND :
rank: 651
score: 98.35934448242188
patch: case String case ) ;
rank: 651
score: 98.33414132254464
patch: case Type . PROPERTY : :
rank: 651
score: 98.27843366350446
patch: case Token . STRING : }
rank: 651
score: 98.27333286830357
patch: case Token . AND ; :
rank: 652
score: 98.74030897352431
patch: case Token . HOOK * * * /
rank: 652
score: 98.5985107421875
patch: this . case Type . AND :
rank: 652
score: 98.44316755022321
patch: t = Token . AND ;
rank: 652
score: 98.33241780598958
patch: case Type . IF :
rank: 652
score: 98.27222696940105
patch: case Token . Format :
rank: 653
score: 98.81207830255681
patch: if ( Token . AND || Token . AND . equals ( n . get CaMeL First ( ) ) )
rank: 653
score: 98.73820495605469
patch: / . case Token . OR :
rank: 653
score: 98.5981674194336
patch: callback . case Token . AND :
rank: 653
score: 98.40239606584821
patch: loop case Token . AND :
rank: 653
score: 98.35631306966145
patch: case 0 case 0 :
rank: 653
score: 98.27571323939732
patch: / ( Token . AND )
rank: 653
score: 98.27133178710938
patch: case Token . Scope :
rank: 654
score: 98.81086869673295
patch: if ( Token . AND || Token . TRUE . equals ( n . get CaMeL Boolean ( ) ) :
rank: 654
score: 98.59784698486328
patch: / if case Token . AND :
rank: 654
score: 98.43608747209821
patch: case Token . class : :
rank: 654
score: 98.35413614908855
patch: case int case ) ;
rank: 654
score: 98.33207484654018
patch: case Type . AND : }
rank: 655
score: 98.81020285866477
patch: case Token . AND : case Token . decode ( n . get CaMeL First CaMeL Child ( ) ) :
rank: 655
score: 98.73675537109375
patch: / * * * /
rank: 655
score: 98.66063774956598
patch: case Token . HOOK : / / {
rank: 655
score: 98.59668731689453
patch: break ; case Node . AND :
rank: 655
score: 98.34945678710938
patch: case : case 0 :
rank: 655
score: 98.27328055245536
patch: case Token . ERROR : }
rank: 655
score: 98.265869140625
patch: case Node n . HOOK :
rank: 656
score: 98.8098477450284
patch: if ( Token . AND || Token . EMPTY . equals ( n . get CaMeL String ( ) : :
rank: 656
score: 98.43546840122768
patch: if ( Type . AND )
rank: 656
score: 98.34641520182292
patch: case Token . length :
rank: 656
score: 98.26904296875
patch: / case Token . ASSIGN :
rank: 657
score: 98.80740792410714
patch: if ( Token . NULL . equals ( n . get CaMeL String ( Token . EMPTY ) ) :
rank: 657
score: 98.59567260742188
patch: default Token case Token . AND :
rank: 657
score: 98.34069213867187
patch: case $STRING$ . :
rank: 657
score: 98.32741292317708
patch: case / * : /
rank: 657
score: 98.26853724888393
patch: case Token . n : }
rank: 657
score: 98.26457868303571
patch: switch ( n != null )
rank: 658
score: 98.8068615141369
patch: if ( Token . AND || Token . TRUE . equals ( n . get CaMeL String : ) )
rank: 658
score: 98.73220825195312
patch: / . case Token . HOOK :
rank: 658
score: 98.4326680501302
patch: return Token . EMPTY ;
rank: 658
score: 98.38720703125
patch: case Exception . OR :
rank: 658
score: 98.34053548177083
patch: case - 1 : :
rank: 658
score: 98.26579938616071
patch: case Token . AND - :
rank: 658
score: 98.26179722377232
patch: case Token ; / * /
rank: 659
score: 98.80608258928571
patch: if ( Token . AND . AND . equals ( n . get CaMeL Type ( ) ) : :
rank: 659
score: 98.59529113769531
patch: } else * Token . AND :
rank: 659
score: 98.38481794084821
patch: case ( Token . OR :
rank: 659
score: 98.33949788411458
patch: case : ? : :
rank: 659
score: 98.32718912760417
patch: case Integer . START :
rank: 659
score: 98.25850132533482
patch: case Token . LINE : {
rank: 660
score: 98.80357142857143
patch: case Token . AND : case Token . TYPE : case Token . TYPE : case Token . AND :
rank: 660
score: 98.59442901611328
patch: / * * * : * /
rank: 660
score: 98.25845772879464
patch: case Token . NEW : {
rank: 661
score: 98.59396362304688
patch: m . case Token . AND :
rank: 661
score: 98.33670043945312
patch: case String case new :
rank: 661
score: 98.32681710379464
patch: case Type . $NUMBER$ : :
rank: 661
score: 98.25804646809895
patch: case Token . CASE :
rank: 662
score: 98.80296688988095
patch: case Token . AND : case Token . TYPE : case Token . TYPE : case Token . TYPE :
rank: 662
score: 98.59268951416016
patch: } else return Token . AND :
rank: 662
score: 98.3329569498698
patch: else { : : :
rank: 662
score: 98.32638549804688
patch: case Type . STATEMENT :
rank: 662
score: 98.25787353515625
patch: case Token != AND :
rank: 662
score: 98.249755859375
patch: return Token . ASSIGN ;
rank: 663
score: 98.80169677734375
patch: if ( case Token . AND ) {
rank: 663
score: 98.72141520182292
patch: switch ( case Token . OR ) {
rank: 663
score: 98.65176052517361
patch: case Token . HOOK : case OR :
rank: 663
score: 98.42308553059895
patch: synchronized ( this ) {
rank: 663
score: 98.32614571707589
patch: case Integer . NULL : :
rank: 663
score: 98.25732421875
patch: case Token . false :
rank: 664
score: 98.80114164806548
patch: if ( Token . AND || Token . TRUE . equals ( n . get CaMeL Boolean ( ) :
rank: 664
score: 98.32785034179688
patch: } : : case :
rank: 664
score: 98.32513427734375
patch: case Integer : break :
rank: 664
score: 98.25557454427083
patch: case Token . Comparable :
rank: 665
score: 98.8010021391369
patch: if ( Token . AND . AND . equals ( n . get CaMeL String ( ) ) && :
rank: 665
score: 98.7116928100586
patch: switch ( variable ) { * /
rank: 665
score: 98.5921630859375
patch: * Token . AND : * /
rank: 665
score: 98.37761579241071
patch: type = Token . OR ;
rank: 665
score: 98.32674153645833
patch: Token . AND * /
rank: 666
score: 98.80089750744048
patch: if ( Token . AND || Token . AND . equals ( n . get CaMeL Message ( ) :
rank: 666
score: 98.59187316894531
patch: * else case Token . AND :
rank: 666
score: 98.3251444498698
patch: case String case false :
rank: 666
score: 98.32464599609375
patch: case Token . MOD :
rank: 667
score: 98.79976981026786
patch: if ( Token . AND || Token . EMPTY . equals ( n . get CaMeL String ( ) )
rank: 667
score: 98.59175327845982
patch: else if Token . AND :
rank: 667
score: 98.41899762834821
patch: while ( Token . AND )
rank: 667
score: 98.32460530598958
patch: case Integer . AND ,
rank: 667
score: 98.32373046875
patch: case int case $STRING$ :
rank: 667
score: 98.22927856445312
patch: case Token . ) }
rank: 668
score: 98.79288330078126
patch: case Token . NULL || Token . NULL :
rank: 668
score: 98.37332589285714
patch: case Token . HOOK : return
rank: 668
score: 98.32439313616071
patch: case Token . PREFIX : :
rank: 668
score: 98.32020060221355
patch: Token . AND / else
rank: 668
score: 98.24960327148438
patch: case Token . GT :
rank: 669
score: 98.7926513671875
patch: case Token . NO || Token . AND :
rank: 669
score: 98.70212809244792
patch: case Token . HOOK {
rank: 669
score: 98.59144592285156
patch: this : case Token . AND :
rank: 669
score: 98.41537911551339
patch: if ( node == null )
rank: 669
score: 98.32412283761161
patch: case Type . SIZE : :
rank: 669
score: 98.32002766927083
patch: case Token . FALSE .
rank: 669
score: 98.22688802083333
patch: case Token . OR }
rank: 670
score: 98.79218207465277
patch: if ( : case Token . NULL )
rank: 670
score: 98.5877456665039
patch: / AND case Token . AND :
rank: 670
score: 98.3228047688802
patch: case Location . AND :
rank: 670
score: 98.31930541992188
patch: case ? ) : :
rank: 671
score: 98.7916259765625
patch: if ( Token . AND . equals ( :
rank: 671
score: 98.69441223144531
patch: case Token . OR : finally {
rank: 671
score: 98.40644182477679
patch: match case Token . AND :
rank: 671
score: 98.37118530273438
patch: case Result . HOOK :
rank: 671
score: 98.322607421875
patch: case - AND :
rank: 672
score: 98.79129028320312
patch: if ( Token . NULL . equals ( :
rank: 672
score: 98.69110870361328
patch: / / for Token . HOOK :
rank: 672
score: 98.5857925415039
patch: break : * Token . AND :
rank: 672
score: 98.40250069754464
patch: var = Token . AND ;
rank: 672
score: 98.32152303059895
patch: case Type . SUB :
rank: 672
score: 98.31648763020833
patch: case $STRING$ . . :
rank: 672
score: 98.24331229073661
patch: case Token . AND Error :
rank: 673
score: 98.79053955078125
patch: return Token . AND || Token . TRUE ;
rank: 673
score: 98.68671417236328
patch: default : case Token . OR :
rank: 673
score: 98.58549499511719
patch: / * Token . AND : /
rank: 673
score: 98.3207499186198
patch: case Type . EMPTY :
rank: 673
score: 98.31273396809895
patch: case Token . sleep :
rank: 673
score: 98.242919921875
patch: case Token != HOOK :
rank: 674
score: 98.78748779296875
patch: switch ( n . get CaMeL Type ( :
rank: 674
score: 98.58535766601562
patch: case Token . AND * * :
rank: 674
score: 98.39761788504464
patch: if ( scope != null )
rank: 674
score: 98.31840006510417
patch: case Integer . EMPTY :
rank: 674
score: 98.30968221028645
patch: } : case $STRING$ ;
rank: 674
score: 98.24191284179688
patch: case Token {
rank: 675
score: 98.786083984375
patch: case Token . decode ( Token . AND )
rank: 675
score: 98.68032836914062
patch: if ( Type . OR ) {
rank: 675
score: 98.58509826660156
patch: / / * Token . AND :
rank: 675
score: 98.30861409505208
patch: case : : case :
rank: 675
score: 98.24124581473214
patch: case Token . AND break :
rank: 675
score: 98.2117207845052
patch: final Token . HOOK :
rank: 676
score: 98.66978454589844
patch: if ( null != variable ) {
rank: 676
score: 98.39057268415179
patch: node = Token . AND ;
rank: 676
score: 98.35641915457589
patch: case case Token . HOOK :
rank: 676
score: 98.31631033761161
patch: case 1 : case 1 :
rank: 676
score: 98.30618286132812
patch: }
rank: 676
score: 98.20880126953125
patch: for Token . OR :
rank: 677
score: 98.38657052176339
patch: case Token . code : :
rank: 677
score: 98.31596156529018
patch: case Type . AND : try
rank: 677
score: 98.3059590657552
patch: case Boolean . AND ?
rank: 677
score: 98.23907470703125
patch: case Token . NULL : {
rank: 678
score: 98.38652692522321
patch: if ( Token . TRUE )
rank: 678
score: 98.35177612304688
patch: case Throwable . AND :
rank: 678
score: 98.31539481026786
patch: case Token . FORMAT : :
rank: 678
score: 98.30546061197917
patch: case Boolean . : :
rank: 678
score: 98.23871721540179
patch: case Token . AND catch (
rank: 679
score: 98.77303059895833
patch: default : case Token . AND : :
rank: 679
score: 98.5787582397461
patch: case Node . AND : break ;
rank: 679
score: 98.30392456054688
patch: case Token . AND ]
rank: 679
score: 98.20212809244792
patch: / Token . HOOK :
rank: 680
score: 98.57849993024554
patch: / * * * / /
rank: 680
score: 98.38426862444196
patch: if ( Token . NO )
rank: 680
score: 98.2349344889323
patch: case Token . SCRIPT :
rank: 680
score: 98.19701538085937
patch: if ( variable )
rank: 681
score: 98.57843017578125
patch: case Node . AND : * /
rank: 681
score: 98.38313511439732
patch: case Token . decode ( :
rank: 681
score: 98.34620012555804
patch: case ~ Token . HOOK :
rank: 681
score: 98.31425258091518
patch: case Token . NONE : .
rank: 681
score: 98.30110677083333
patch: case Node case : :
rank: 681
score: 98.23482259114583
patch: case Token . exec :
rank: 681
score: 98.19692993164062
patch: switch ( this ) {
rank: 682
score: 98.6576919555664
patch: case Token != Token . OR :
rank: 682
score: 98.578369140625
patch: case Token . AND ? break :
rank: 682
score: 98.37936837332589
patch: case Token . READ : :
rank: 682
score: 98.30089314778645
patch: case Token . ceil :
rank: 682
score: 98.19512939453125
patch: case Object . HOOK :
rank: 683
score: 98.57820129394531
patch: break . case Type . AND :
rank: 683
score: 98.31162806919643
patch: case Integer Token . AND :
rank: 684
score: 98.65224202473958
patch: case Name . OR :
rank: 684
score: 98.59308624267578
patch: case Token . HOOK : case )
rank: 684
score: 98.37803431919643
patch: if ( Token . TYPE )
rank: 684
score: 98.3355204264323
patch: case Token . T :
rank: 684
score: 98.29931640625
patch: Token . AND ++ :
rank: 685
score: 98.57449340820312
patch: * : case Token . AND :
rank: 685
score: 98.37690080915179
patch: case Token . intern ( :
rank: 685
score: 98.33528645833333
patch: case Token , HOOK :
rank: 685
score: 98.30918666294643
patch: case Type . NOT : .
rank: 685
score: 98.298095703125
patch: case 0 case $STRING$ :
rank: 685
score: 98.22671508789062
patch: case Token == OR :
rank: 686
score: 98.74837239583333
patch: / * case Token . AND : :
rank: 686
score: 98.65101623535156
patch: / * * Token . OR :
rank: 686
score: 98.5716552734375
patch: } else / * * * /
rank: 686
score: 98.33503941127232
patch: case Token . AND : ?
rank: 686
score: 98.30906168619792
patch: case Reference . AND :
rank: 686
score: 98.2973124186198
patch: case Token . min :
rank: 687
score: 98.30897216796875
patch: case - $NUMBER$ :
rank: 687
score: 98.29567464192708
patch: case $STRING$ * : :
rank: 687
score: 98.22418212890625
patch: case Token . RESET :
rank: 688
score: 98.74601236979167
patch: if ( Token . AND . equals :
rank: 688
score: 98.6443862915039
patch: switch ( variable ) { finally {
rank: 688
score: 98.56940460205078
patch: break Token return Token . AND :
rank: 688
score: 98.3087158203125
patch: case Token . BLOCK : :
rank: 688
score: 98.2946268717448
patch: case 0 || : :
rank: 688
score: 98.2238057454427
patch: case Token . LE :
rank: 689
score: 98.56885528564453
patch: if ( ! Token . AND :
rank: 689
score: 98.3663330078125
patch: if Token . AND : :
rank: 689
score: 98.30739920479911
patch: case Token . AND : add
rank: 689
score: 98.2903544108073
patch: case Token . append :
rank: 690
score: 98.74418809678819
patch: case Token ( Token . AND ) :
rank: 690
score: 98.56842803955078
patch: / . case Node . AND :
rank: 690
score: 98.33033098493304
patch: case Token . HOOK private :
rank: 690
score: 98.30597795758929
patch: case Token . Void : :
rank: 690
score: 98.21419270833333
patch: case Token . AND )
rank: 691
score: 98.63755798339844
patch: case Token . HOOK * * :
rank: 691
score: 98.56613159179688
patch: } Token case Integer . AND :
rank: 691
score: 98.32890101841518
patch: case case Token . OR :
rank: 691
score: 98.30499267578125
patch: case Integer . ERROR :
rank: 691
score: 98.28818766276042
patch: case $STRING$ ? case :
rank: 691
score: 98.18032836914062
patch: case Token . break :
rank: 692
score: 98.56587219238281
patch: m Token case Token . AND :
rank: 692
score: 98.55424499511719
patch: case Token = Token . HOOK ;
rank: 692
score: 98.30499267578125
patch: case Node . RIGHT :
rank: 692
score: 98.28788248697917
patch: / : case $STRING$ :
rank: 692
score: 98.17552693684895
patch: case Token . GET :
rank: 693
score: 98.6297378540039
patch: switch ( Type . OR ) {
rank: 693
score: 98.56320190429688
patch: case Token . AND / * :
rank: 693
score: 98.32602945963542
patch: case Context . HOOK :
rank: 693
score: 98.30411202566964
patch: case Token . AND : String
rank: 693
score: 98.16978963216145
patch: switch ( $STRING$ ) {
rank: 694
score: 98.56256103515625
patch: case Short case Token . AND :
rank: 694
score: 98.30410330636161
patch: case Type . NUMBER : :
rank: 694
score: 98.21183268229167
patch: case Token . signum :
rank: 694
score: 98.1692403157552
patch: case Token . check :
rank: 695
score: 98.72696940104167
patch: case Token . decode ( $STRING$ ) :
rank: 695
score: 98.30276925223214
patch: case Type . START : :
rank: 695
score: 98.28517659505208
patch: case Boolean . TYPE :
rank: 695
score: 98.20944213867188
patch: case Token . Exception :
rank: 696
score: 98.55960845947266
patch: case Node CaMeL Util . AND ?
rank: 696
score: 98.30268205915179
patch: case Token . ERROR : .
rank: 696
score: 98.28379313151042
patch: case int case ) ||
rank: 696
score: 98.1631571451823
patch: case T . OR :
rank: 697
score: 98.62332916259766
patch: case Token . HOOK : finally {
rank: 697
score: 98.5567398071289
patch: / * * * / / /
rank: 697
score: 98.35609654017857
patch: if ( line != null )
rank: 697
score: 98.30242047991071
patch: case Token . round : :
rank: 697
score: 98.20700073242188
patch: case Token . GE :
rank: 697
score: 98.155419921875
patch: case Token . AND
rank: 698
score: 98.70664978027344
patch: case Token . decode ( ) :
rank: 698
score: 98.55579485212054
patch: break : Token . AND :
rank: 698
score: 98.30110386439732
patch: case Token . ADD : :
rank: 698
score: 98.28204345703125
patch: else { case $STRING$ ;
rank: 699
score: 98.5521748860677
patch: case Byte . AND :
rank: 699
score: 98.54042053222656
patch: case Token . HOOK : case ?
rank: 699
score: 98.32035609654018
patch: case == Token . AND :
rank: 699
score: 98.30092075892857
patch: case ? Token . AND :
rank: 699
score: 98.28143310546875
patch: finally { case $STRING$ :
rank: 700
score: 98.35154506138393
patch: if ( Style . AND )
rank: 700
score: 98.30078125
patch: case 0 + AND :
rank: 700
score: 98.28067016601562
patch: else : case $STRING$ :
rank: 700
score: 98.1968994140625
patch: / * / /
rank: 701
score: 98.61583709716797
patch: switch ( Token . HOOK ) {
rank: 701
score: 98.54111153738839
patch: * * Token . AND :
rank: 701
score: 98.35118756975446
patch: kind = Token . AND ;
rank: 701
score: 98.3175557454427
patch: case n . OR :
rank: 701
score: 98.2770284016927
patch: case : Token . :
rank: 702
score: 98.53087506975446
patch: } case Type . AND :
rank: 702
score: 98.34952218191964
patch: case Token . WITH : :
rank: 702
score: 98.31615339006696
patch: type = Token . AND :
rank: 702
score: 98.30015345982143
patch: case Token . CHECK : .
rank: 702
score: 98.27444458007812
patch: case int case :
rank: 702
score: 98.14356486002605
patch: case Token . ASSIGN ;
rank: 703
score: 98.61231994628906
patch: case Token . OR . HOOK :
rank: 703
score: 98.52748616536458
patch: return Type . AND :
rank: 703
score: 98.3155517578125
patch: case Context . AND :
rank: 703
score: 98.29917689732143
patch: case Token . MIN : .
rank: 704
score: 98.31534830729167
patch: case Character . HOOK :
rank: 704
score: 98.29917399088542
patch: case Token . REGEXP :
rank: 704
score: 98.27369181315105
patch: if ( case ) :
rank: 705
score: 98.66998291015625
patch: if case Token . NULL :
rank: 705
score: 98.60879516601562
patch: / / return Token . HOOK ;
rank: 705
score: 98.34391276041667
patch: return Token . NONE ;
rank: 705
score: 98.27356974283855
patch: case ? $NUMBER$ : :
rank: 705
score: 98.18701171875
patch: case Symbol . OR :
rank: 706
score: 98.52462332589286
patch: boolean case Token . AND :
rank: 706
score: 98.29827008928571
patch: case Token . EQ : :
rank: 706
score: 98.27084350585938
patch: return Token . TRUE :
rank: 706
score: 98.18641153971355
patch: case Token . AND throw
rank: 706
score: 98.1400655110677
patch: case Token . HOOK else
rank: 707
score: 98.60675048828125
patch: case Token . HOOK . HOOK :
rank: 707
score: 98.52365548270089
patch: result = Token . AND :
rank: 707
score: 98.33987862723214
patch: task = Token . AND ;
rank: 707
score: 98.31447347005208
patch: case State . OR :
rank: 707
score: 98.18433634440105
patch: case Token . LOOP :
rank: 708
score: 98.33888753255208
patch: if Token . AND )
rank: 708
score: 98.31402587890625
patch: case Token . Override :
rank: 708
score: 98.29507446289062
patch: case Type . INCLUDE :
rank: 708
score: 98.1820576985677
patch: case Token . MAIN :
rank: 709
score: 98.60176849365234
patch: case Token . OR * * :
rank: 709
score: 98.51950509207589
patch: this case Token . AND :
rank: 709
score: 98.51777648925781
patch: case Node . HOOK : break ;
rank: 709
score: 98.33819580078125
patch: case Token . STAR : :
rank: 709
score: 98.31336466471355
patch: case Character . OR :
rank: 709
score: 98.29495675223214
patch: case Type . MAX : :
rank: 709
score: 98.26771240234375
patch: Token case 0 :
rank: 709
score: 98.1815897623698
patch: case Token = null ;
rank: 710
score: 98.59590148925781
patch: / , case Token . HOOK :
rank: 710
score: 98.51683698381696
patch: / Token . AND * /
rank: 710
score: 98.31263078962054
patch: case Token . . HOOK :
rank: 710
score: 98.2940165201823
patch: case Node . FUNCTION :
rank: 711
score: 98.33720179966518
patch: if ( Symbol . AND )
rank: 711
score: 98.30888148716518
patch: type = Token . HOOK ;
rank: 711
score: 98.29282924107143
patch: case Token . AND && :
rank: 711
score: 98.26449584960938
patch: case Token . TRUE .
rank: 711
score: 98.17750040690105
patch: case Token . Double :
rank: 712
score: 98.63916015625
patch: switch ( case Token . NULL )
rank: 712
score: 98.51170131138393
patch: String case Token . AND :
rank: 712
score: 98.33516148158482
patch: line = Token . AND ;
rank: 712
score: 98.29196166992188
patch: case Integer . CHECK :
rank: 712
score: 98.26083374023438
patch: try { case $STRING$ :
rank: 713
score: 98.51151820591518
patch: { case Node . AND :
rank: 713
score: 98.50432477678571
patch: case Token . OR : case
rank: 713
score: 98.3045654296875
patch: case Result . OR :
rank: 713
score: 98.29032389322917
patch: case Type . EXPRESSION :
rank: 713
score: 98.25946807861328
patch: case $STRING$ ?
rank: 714
score: 98.51136997767857
patch: / * * * : /
rank: 714
score: 98.2889912923177
patch: case Token . Priority :
rank: 714
score: 98.25844319661458
patch: case - AND : :
rank: 714
score: 98.1239013671875
patch: case Object . OR :
rank: 715
score: 98.2882080078125
patch: case Type . NAME : .
rank: 715
score: 98.25794474283855
patch: Token : case $STRING$ :
rank: 716
score: 98.5884017944336
patch: HOOK : case Token . OR :
rank: 716
score: 98.50707135881696
patch: return Token . AND : }
rank: 716
score: 98.29342215401786
patch: case Token . ASSIGN : :
rank: 716
score: 98.28818969726562
patch: case 1 : :
rank: 716
score: 98.25625610351562
patch: this . case 0 :
rank: 716
score: 98.17037963867188
patch: case Token . OFF :
rank: 717
score: 98.32954624720982
patch: value = Token . AND ;
rank: 717
score: 98.29024832589286
patch: finally case Token . AND :
rank: 717
score: 98.28778076171875
patch: case Integer . WARNING : :
rank: 717
score: 98.25599161783855
patch: case $STRING$ / : :
rank: 717
score: 98.16963704427083
patch: case Token . AND {
rank: 718
score: 98.5879135131836
patch: switch ( Token . ASSIGN ) {
rank: 718
score: 98.49498748779297
patch: case Token . HOOK : case String
rank: 718
score: 98.28776332310268
patch: case Type . TYPE : .
rank: 718
score: 98.28758021763393
patch: ] case Token . AND :
rank: 718
score: 98.25540161132812
patch: Token . AND : .
rank: 718
score: 98.16764322916667
patch: case Token . name :
rank: 718
score: 98.11871337890625
patch: case Token . } }
rank: 719
score: 98.61163330078125
patch: switch ( case Token . AND :
rank: 719
score: 98.58740997314453
patch: case Token . OR : out .
rank: 719
score: 98.49883161272321
patch: } else / * * /
rank: 719
score: 98.2874043782552
patch: case * * : /
rank: 719
score: 98.2841796875
patch: case Token . Definition :
rank: 719
score: 98.25401000976562
patch: / : : :
rank: 719
score: 98.16697184244792
patch: case Token . continue :
rank: 720
score: 98.58585030691964
patch: HOOK case Token . OR :
rank: 720
score: 98.28485979352679
patch: case Type . RIGHT : .
rank: 720
score: 98.28358968098958
patch: case State . HOOK :
rank: 720
score: 98.25241088867188
patch: case 0 ? : :
rank: 721
score: 98.59193638392857
patch: if case Token . EMPTY :
rank: 721
score: 98.49574584960938
patch: } else * /
rank: 721
score: 98.49052211216518
patch: case Token . HOOK : try
rank: 721
score: 98.28476969401042
patch: case Integer . UNKNOWN :
rank: 721
score: 98.25240071614583
patch: case : 1 : :
rank: 722
score: 98.3220723470052
patch: case Token . GLOBAL :
rank: 722
score: 98.28299386160714
patch: case Token Type . AND :
rank: 722
score: 98.24789428710938
patch: case Token . warning :
rank: 722
score: 98.15811157226562
patch: case Token . ELLIPSIS :
rank: 723
score: 98.28292410714286
patch: case ~ Token . OR :
rank: 723
score: 98.24771118164062
patch: case : ?
rank: 723
score: 98.15804036458333
patch: case Token . DIRECT :
rank: 724
score: 98.58299037388393
patch: case Token . LABEL : :
rank: 724
score: 98.57094900948661
patch: case Token . HOOK ) {
rank: 724
score: 98.494140625
patch: case Token . AND >
rank: 724
score: 98.24668375651042
patch: ( case $STRING$ ) :
rank: 724
score: 98.1576639811198
patch: case Token . reduce :
rank: 724
score: 98.1066182454427
patch: case Token . OR else
rank: 725
score: 98.31889997209821
patch: break ( Token . AND )
rank: 725
score: 98.2821553548177
patch: case Type . abs :
rank: 725
score: 98.24649047851562
patch: } case $STRING$ : :
rank: 725
score: 98.15743001302083
patch: case Token . start :
rank: 725
score: 98.10635986328126
patch: if ( variable .
rank: 726
score: 98.28209431966145
patch: case ( $NUMBER$ : :
rank: 726
score: 98.10592651367188
patch: case Type . ASSIGN :
rank: 727
score: 98.31600516183036
patch: case Token . INSTANCEOF : :
rank: 727
score: 98.28200276692708
patch: case Node . TYPE :
rank: 727
score: 98.24619547526042
patch: case $STRING$ : case String
rank: 727
score: 98.15531412760417
patch: switch ( name ) {
rank: 728
score: 98.48200334821429
patch: try { Token . AND :
rank: 728
score: 98.31568254743304
patch: action = Token . AND ;
rank: 728
score: 98.2811787923177
patch: case Integer . MAX :
rank: 728
score: 98.24576416015626
patch: } case $STRING$ :
rank: 728
score: 98.15482584635417
patch: case Token . Readable :
rank: 728
score: 98.10219319661458
patch: case Scope . AND :
rank: 729
score: 98.31564767020089
patch: match = Token . AND ;
rank: 729
score: 98.28067016601562
patch: case Type . DEFAULT :
rank: 729
score: 98.24574788411458
patch: case String case 1 :
rank: 730
score: 98.57101440429688
patch: return case Token . AND : :
rank: 730
score: 98.47572835286458
patch: case Mode . AND :
rank: 730
score: 98.27377319335938
patch: case Integer : : :
rank: 730
score: 98.25062561035156
patch: case HOOK :
rank: 730
score: 98.24569091796874
patch: case ? ) :
rank: 730
score: 98.09613037109375
patch: case Token . INDENT :
rank: 731
score: 98.56881713867188
patch: if case Token . NULL : :
rank: 731
score: 98.47522989908855
patch: case Float . AND :
rank: 731
score: 98.27168782552083
patch: case Type . COMMA :
rank: 731
score: 98.24563598632812
patch: else { case 0 :
rank: 731
score: 98.09591674804688
patch: switch ( null ) {
rank: 732
score: 98.54090372721355
patch: case Token . OR {
rank: 732
score: 98.46906389508929
patch: } else * * * /
rank: 732
score: 98.14984130859375
patch: case Token == ASSIGN :
rank: 733
score: 98.46861921037946
patch: break Token . AND : }
rank: 733
score: 98.30916922433036
patch: case Token . CONTINUE : :
rank: 733
score: 98.2704366048177
patch: case Token . type :
rank: 733
score: 98.23703002929688
patch: case 0 + 0 :
rank: 734
score: 98.46267264229911
patch: Token case Integer . AND :
rank: 734
score: 98.26942952473958
patch: case Type . RETURN :
rank: 734
score: 98.2437235514323
patch: case Runnable . HOOK :
rank: 734
score: 98.1483866373698
patch: case Token . yield :
rank: 735
score: 98.55853271484375
patch: if ( Token . NULL == :
rank: 735
score: 98.46063232421875
patch: state = Token . AND :
rank: 735
score: 98.30647495814732
patch: match ( Token . AND )
rank: 735
score: 98.26774088541667
patch: case Type . AND ,
rank: 735
score: 98.14811197916667
patch: case Token . visit :
rank: 736
score: 98.55511474609375
patch: if ( case Token . NULL )
rank: 736
score: 98.30543736049107
patch: this . Token . AND :
rank: 736
score: 98.1449686686198
patch: case Token . concat :
rank: 737
score: 98.4552001953125
patch: / * : * / /
rank: 737
score: 98.3050028483073
patch: case Token . EOC :
rank: 737
score: 98.26259358723958
patch: case Type . PREFIX :
rank: 737
score: 98.2385965983073
patch: case Runnable . AND :
rank: 737
score: 98.23319498697917
patch: case Token . trim :
rank: 737
score: 98.07830810546875
patch: case Token . READ ;
rank: 738
score: 98.45515659877232
patch: Token . AND : * /
rank: 738
score: 98.30377197265625
patch: case Token . SEMI :
rank: 738
score: 98.2330830891927
patch: case int case false :
rank: 738
score: 98.14468383789062
patch: case Token . BREAK :
rank: 739
score: 98.55060577392578
patch: default : case Token . NULL :
rank: 739
score: 98.45477294921875
patch: m case Token . AND :
rank: 739
score: 98.22479248046875
patch: case Context . OR :
rank: 739
score: 98.14415486653645
patch: case Token . Redirect :
rank: 740
score: 98.51369803292411
patch: case Token . HOOK $NUMBER$ :
rank: 740
score: 98.30193219866071
patch: int case Token . AND :
rank: 740
score: 98.25946044921875
patch: case Integer . NUMBER :
rank: 740
score: 98.23281860351562
patch: case : / :
rank: 740
score: 98.22286987304688
patch: case Token . / :
rank: 741
score: 98.54149627685547
patch: if : case Token . NULL :
rank: 741
score: 98.51318359375
patch: case Token . HOOK ++ :
rank: 741
score: 98.29820033482143
patch: ret = Token . AND :
rank: 741
score: 98.23095703125
patch: case $STRING$ { case :
rank: 741
score: 98.14163208007812
patch: case Token . finally :
rank: 741
score: 98.06751505533855
patch: for ( Node child CaMeL
rank: 742
score: 98.451171875
patch: / * : * * /
rank: 742
score: 98.29581996372768
patch: block = Token . AND ;
rank: 742
score: 98.2583516438802
patch: case Type . DOT :
rank: 742
score: 98.23094685872395
patch: case : $NUMBER$ : :
rank: 742
score: 98.14065551757812
patch: case Token . break ;
rank: 742
score: 98.0613301595052
patch: } switch ( ) {
rank: 743
score: 98.29552350725446
patch: if ( Mode . AND )
rank: 743
score: 98.2571309407552
patch: case Node . NAME :
rank: 743
score: 98.23082478841145
patch: break : case $STRING$ :
rank: 744
score: 98.53363800048828
patch: this . case Token . NULL :
rank: 744
score: 98.4495849609375
patch: / * * : * /
rank: 744
score: 98.2567647298177
patch: case Type . EQ :
rank: 744
score: 98.2283223470052
patch: } case Token . :
rank: 744
score: 98.21255493164062
patch: case Token . match :
rank: 744
score: 98.13914998372395
patch: case Token . << /
rank: 745
score: 98.4478251139323
patch: while Token . AND :
rank: 745
score: 98.25338745117188
patch: case Integer . YES :
rank: 745
score: 98.22830810546876
patch: Token . AND *
rank: 745
score: 98.13904825846355
patch: return null ; default :
rank: 746
score: 98.52736990792411
patch: case Token . EOF : :
rank: 746
score: 98.44266183035714
patch: break : / * * /
rank: 746
score: 98.28816441127232
patch: in case Token . AND :
rank: 746
score: 98.2279561360677
patch: case int case : {
rank: 746
score: 98.13568115234375
patch: case Token . Error :
rank: 747
score: 98.43816266741071
patch: while case Token . AND :
rank: 747
score: 98.22784423828125
patch: return Token . NONE :
rank: 747
score: 98.13411458333333
patch: case Token . vars :
rank: 747
score: 98.05606079101562
patch: this Token . HOOK :
rank: 748
score: 98.52581787109375
patch: result = case Token . AND :
rank: 748
score: 98.28647867838542
patch: case Token . UNSUPPORTED :
rank: 748
score: 98.2518310546875
patch: case char . $NUMBER$ :
rank: 748
score: 98.05393473307292
patch: case Node . READ :
rank: 749
score: 98.52479771205357
patch: case Token . LEFT : :
rank: 749
score: 98.4962158203125
patch: HOOK case Token . HOOK :
rank: 749
score: 98.42765299479167
patch: case Node . AND ?
rank: 749
score: 98.34324428013393
patch: case Token . OR : try
rank: 749
score: 98.2498270670573
patch: case $NUMBER$ + AND :
rank: 749
score: 98.2081069946289
patch: : : :
rank: 749
score: 98.0537109375
patch: if ( ! false )
rank: 750
score: 98.52315521240234
patch: case Token . TARGET : : :
rank: 750
score: 98.48885091145833
patch: switch ( false ) {
rank: 750
score: 98.24981689453125
patch: case Type . RAW :
rank: 750
score: 98.19830322265625
patch: case String case )
rank: 750
score: 98.05257161458333
patch: case Number . HOOK :
rank: 751
score: 98.52088928222656
patch: / * case Token . NULL :
rank: 751
score: 98.42511858258929
patch: while ( Token . AND :
rank: 751
score: 98.32523018973214
patch: case Token . HOOK ; }
rank: 751
score: 98.28123256138393
patch: equals ( Token . AND )
rank: 751
score: 98.249755859375
patch: case Type . FORMAT :
rank: 751
score: 98.19734700520833
patch: case Token . make :
rank: 751
score: 98.19381103515624
patch: case ? 1 :
rank: 752
score: 98.2493387858073
patch: case Node . IN :
rank: 752
score: 98.1897964477539
patch: / * :
rank: 752
score: 98.1302998860677
patch: case Token . floor :
rank: 752
score: 98.04988606770833
patch: case Type . READ :
rank: 753
score: 98.28037806919643
patch: binding = Token . AND ;
rank: 753
score: 98.18885498046875
patch: Token . : :
rank: 754
score: 98.47865513392857
patch: HOOK case Token . AND :
rank: 754
score: 98.41947719029018
patch: * case Token . AND :
rank: 754
score: 98.18704833984376
patch: Token case $STRING$ :
rank: 755
score: 98.51460266113281
patch: case Token . code . AND :
rank: 755
score: 98.41798618861607
patch: else case Node . AND :
rank: 755
score: 98.27742513020833
patch: if ( : break ;
rank: 755
score: 98.24298095703125
patch: case - $NUMBER$ : :
rank: 755
score: 98.1847900390625
patch: Token . AND else
rank: 755
score: 98.12816365559895
patch: case Token . tracker :
rank: 756
score: 98.47219848632812
patch: case Token . HOOK )
rank: 756
score: 98.27378627232143
patch: val = Token . AND ;
rank: 756
score: 98.18463745117188
patch: case - 1 :
rank: 756
score: 98.12734985351562
patch: case Token . FAST :
rank: 757
score: 98.47042410714286
patch: case Token . OR $NUMBER$ :
rank: 757
score: 98.41329520089286
patch: { return Token . AND :
rank: 757
score: 98.2421366373698
patch: case Integer . DEFAULT :
rank: 757
score: 98.18432006835937
patch: case : 1 :
rank: 757
score: 98.17635091145833
patch: case Token . private :
rank: 757
score: 98.12540690104167
patch: switch ( type ) {
rank: 758
score: 98.4678955078125
patch: / / Token . HOOK :
rank: 758
score: 98.4127197265625
patch: return Token . EMPTY :
rank: 758
score: 98.27251325334821
patch: Set case Token . AND :
rank: 758
score: 98.17787475585938
patch: case : ? :
rank: 758
score: 98.12488810221355
patch: case Token . E :
rank: 758
score: 98.03818359375
patch: for ( Node child
rank: 759
score: 98.41173444475446
patch: case Exception . AND : :
rank: 759
score: 98.24117024739583
patch: case Node . STRING :
rank: 759
score: 98.175537109375
patch: break :
rank: 759
score: 98.1736348470052
patch: case Throwable . OR :
rank: 759
score: 98.12457275390625
patch: case Token . ARGUMENTS :
rank: 760
score: 98.50386810302734
patch: case Token . NULL : default :
rank: 760
score: 98.46002197265625
patch: / * * * * :
rank: 760
score: 98.40544782366071
patch: / if Token . AND :
rank: 760
score: 98.23942057291667
patch: case Integer . STATEMENT :
rank: 760
score: 98.17486572265625
patch: if : :
rank: 760
score: 98.12436930338542
patch: switch ( 0 ) {
rank: 760
score: 98.03751627604167
patch: case Token != null :
rank: 761
score: 98.45725795200893
patch: Conditionals case Token . OR :
rank: 761
score: 98.30523681640625
patch: if ( null != variable )
rank: 761
score: 98.27049037388393
patch: case Token . OTHER : :
rank: 761
score: 98.23924763997395
patch: case System . AND :
rank: 761
score: 98.16713460286458
patch: case Visitor . AND :
rank: 761
score: 98.1490234375
patch: case : ) :
rank: 761
score: 98.0372823079427
patch: case Token . OR ?
rank: 762
score: 98.27006312779018
patch: key = Token . AND ;
rank: 762
score: 98.1478500366211
patch: else { :
rank: 762
score: 98.03666178385417
patch: case Short . HOOK :
rank: 763
score: 98.40280587332589
patch: type case Token . AND :
rank: 763
score: 98.26695033482143
patch: if ( Token . EMPTY )
rank: 763
score: 98.23696899414062
patch: case Type . FALSE :
rank: 763
score: 98.14693196614583
patch: else :
rank: 763
score: 98.03584798177083
patch: ( Token . HOOK )
rank: 764
score: 98.49505615234375
patch: case Token . stats . AND :
rank: 764
score: 98.266845703125
patch: success = Token . AND ;
rank: 764
score: 98.2368876139323
patch: case Token . AND &&
rank: 764
score: 98.14608154296874
patch: case $STRING$ . .
rank: 764
score: 98.11929321289062
patch: case Token . level :
rank: 764
score: 98.03495279947917
patch: case Scope . HOOK :
rank: 765
score: 98.49494171142578
patch: default : return Token . AND ;
rank: 765
score: 98.43670654296875
patch: case Token . OR )
rank: 765
score: 98.39930071149554
patch: / * : * : /
rank: 765
score: 98.23529052734375
patch: case char : break :
rank: 765
score: 98.14471435546875
patch: case : $NUMBER$ :
rank: 765
score: 98.11722819010417
patch: case Token . PIPE :
rank: 766
score: 98.4938735961914
patch: if case Token . EMPTY : :
rank: 766
score: 98.43263462611607
patch: case Token . OR ) {
rank: 766
score: 98.39888218470982
patch: break Token : / * /
rank: 766
score: 98.26137869698661
patch: if ( Token . UNKNOWN )
rank: 766
score: 98.23195393880208
patch: case Token . Type :
rank: 766
score: 98.14380645751953
patch: case : _
rank: 767
score: 98.39761788504464
patch: case Exception . AND : {
rank: 767
score: 98.29068429129464
patch: case Node . HOOK : else
rank: 767
score: 98.2601318359375
patch: case Token . NEW : :
rank: 767
score: 98.23080444335938
patch: case $NUMBER$ : break :
rank: 767
score: 98.14136505126953
patch: Token { :
rank: 767
score: 98.03209431966145
patch: case Integer . OR :
rank: 768
score: 98.4925308227539
patch: break case Token . AND : :
rank: 768
score: 98.39652506510417
patch: ? Token . AND :
rank: 768
score: 98.22981770833333
patch: case Integer . LINE :
rank: 768
score: 98.13284301757812
patch: case $STRING$ ? :
rank: 768
score: 98.11433919270833
patch: case Token . superclass :
rank: 769
score: 98.49024200439453
patch: case Token . decode ( : :
rank: 769
score: 98.42924281529018
patch: HOOK = Token . OR ;
rank: 769
score: 98.39517211914062
patch: case Task . AND :
rank: 769
score: 98.11334228515625
patch: case Token . DEBUGGER :
rank: 769
score: 98.10537109375
patch: Token . AND .
rank: 769
score: 98.027490234375
patch: return null ; }
rank: 770
score: 98.42330932617188
patch: switch ( true ) {
rank: 770
score: 98.22895050048828
patch: case n .
rank: 770
score: 98.16222127278645
patch: case Throwable . HOOK :
rank: 770
score: 98.11142985026042
patch: case Token . scope :
rank: 771
score: 98.42130824497768
patch: switch ( ! null ) {
rank: 771
score: 98.24722290039062
patch: return Token . NULL ;
rank: 771
score: 98.22726440429688
patch: case Generator . AND :
rank: 771
score: 98.11133829752605
patch: case Token . refs :
rank: 771
score: 98.10054524739583
patch: / :
rank: 771
score: 98.02602132161458
patch: break Token . OR :
rank: 772
score: 98.48249816894531
patch: case Token . AND : return :
rank: 772
score: 98.39173380533855
patch: case Style . AND :
rank: 772
score: 98.27586146763393
patch: case Token . ASSIGN : else
rank: 772
score: 98.2272237141927
patch: case Type . BLOCK :
rank: 772
score: 98.111328125
patch: case Token . Warnings :
rank: 772
score: 98.095458984375
patch: case : .
rank: 773
score: 98.48184640066964
patch: case Token . COLON : :
rank: 773
score: 98.41793387276786
patch: if ( Token . OR :
rank: 773
score: 98.24073282877605
patch: if Token . AND ;
rank: 773
score: 98.22706095377605
patch: case Type . AND ?
rank: 773
score: 98.08860473632812
patch: : : : :
rank: 773
score: 98.02450561523438
patch: / /
rank: 774
score: 98.47334289550781
patch: return Token . AND ; default :
rank: 774
score: 98.2255350748698
patch: case 0 : break :
rank: 774
score: 98.1077168782552
patch: case Token . EQUALS :
rank: 775
score: 98.1544189453125
patch: case Token , AND :
rank: 775
score: 98.10459391276042
patch: case Token . inline :
rank: 775
score: 98.07565307617188
patch: break : :
rank: 776
score: 98.46932547433036
patch: if case Token . TARGET :
rank: 776
score: 98.41176932198661
patch: state = Token . OR ;
rank: 776
score: 98.38926478794643
patch: / Token . AND : }
rank: 776
score: 98.22519938151042
patch: case char . 1 :
rank: 776
score: 98.15334065755208
patch: case Token . AND >>
rank: 776
score: 98.1039326985677
patch: case Token . AND --
rank: 776
score: 98.07177124023437
patch: case ? $NUMBER$ :
rank: 777
score: 98.40599568684895
patch: switch ( index ) {
rank: 777
score: 98.38924153645833
patch: case Token . MULTILINE :
rank: 777
score: 98.22354125976562
patch: case char . 0 :
rank: 777
score: 98.10349527994792
patch: case Token . Number :
rank: 777
score: 98.06953430175781
patch: else : :
rank: 778
score: 98.40559605189732
patch: Conditionals = Token . OR ;
rank: 778
score: 98.1406758626302
patch: case Token . public :
rank: 778
score: 98.10011800130208
patch: switch ( id ) {
rank: 778
score: 98.06334838867187
patch: Token { : :
rank: 779
score: 98.22109985351562
patch: case n . break :
rank: 779
score: 98.21810913085938
patch: throw Token . AND ;
rank: 779
score: 98.14053344726562
patch: case String . TRUE :
rank: 779
score: 98.06138305664062
patch: if case $STRING$ :
rank: 780
score: 98.40433175223214
patch: switch ( Token . OR )
rank: 780
score: 98.38589041573661
patch: / / Token . AND :
rank: 780
score: 98.21847534179688
patch: case Type . ADD :
rank: 780
score: 98.09915161132812
patch: / * / {
rank: 780
score: 98.06095581054687
patch: break : case :
rank: 780
score: 98.01749674479167
patch: case Node . ASSIGN :
rank: 781
score: 98.38578578404018
patch: if Token . AND : {
rank: 781
score: 98.21514892578125
patch: case Integer . VOID :
rank: 781
score: 98.13783772786458
patch: case Token . >> :
rank: 781
score: 98.09911092122395
patch: case Token . Assignment :
rank: 781
score: 98.06052856445312
patch: if : : :
rank: 781
score: 98.015625
patch: case Short . OR :
rank: 782
score: 98.4547119140625
patch: switch : case Token . AND :
rank: 782
score: 98.38282121930804
patch: Token case State . AND :
rank: 782
score: 98.214111328125
patch: case Integer . ANNOTATION :
rank: 782
score: 98.21409098307292
patch: case Token . RC :
rank: 782
score: 98.0963846842448
patch: case Token . Strings :
rank: 782
score: 98.04795837402344
patch: case 0 .
rank: 782
score: 98.01535034179688
patch: case Token . finally {
rank: 783
score: 98.45120239257812
patch: consume ( Token . AND ) ;
rank: 783
score: 98.39724295479911
patch: / * / } else {
rank: 783
score: 98.3828125
patch: case Class . AND :
rank: 783
score: 98.2133280436198
patch: case Token . errors :
rank: 783
score: 98.21104939778645
patch: case Error . AND :
rank: 783
score: 98.095947265625
patch: case Token . Generated :
rank: 783
score: 98.04771118164062
patch: case 0 . :
rank: 784
score: 98.2131856282552
patch: case ( Token ) :
rank: 784
score: 98.03706359863281
patch: if false :
rank: 785
score: 98.44963727678571
patch: if case Token . NONE :
rank: 785
score: 98.38065883091518
patch: : if Token . AND :
rank: 785
score: 98.03228759765625
patch: / * : :
rank: 786
score: 98.37872314453125
patch: else return Token . AND :
rank: 786
score: 98.21280924479167
patch: case Type . Void :
rank: 786
score: 98.13161214192708
patch: case Token . * :
rank: 786
score: 98.09505208333333
patch: case Token . Var :
rank: 786
score: 98.03128051757812
patch: System . AND ;
rank: 786
score: 98.01102905273437
patch: } return null ;
rank: 787
score: 98.37726702008929
patch: ? case Token . AND :
rank: 787
score: 98.21262613932292
patch: case Integer . FALSE :
rank: 787
score: 98.0928446451823
patch: case Token . destroy :
rank: 787
score: 98.02939453125
patch: case 0 || :
rank: 787
score: 98.0100809733073
patch: case Integer . HOOK :
rank: 788
score: 98.209716796875
patch: case byte . $NUMBER$ :
rank: 788
score: 98.089794921875
patch: break ; default :
rank: 788
score: 98.0242431640625
patch: case $STRING$ * :
rank: 788
score: 98.00958251953125
patch: if ( ! true )
rank: 789
score: 98.19661458333333
patch: break Token . TRUE :
rank: 789
score: 98.02310180664062
patch: case int : :
rank: 789
score: 98.00764973958333
patch: ( Token . AND )
rank: 790
score: 98.37224469866071
patch: throw case Token . AND :
rank: 790
score: 98.20688883463542
patch: case Token . Subset :
rank: 790
score: 98.01181030273438
patch: case 0 ?
rank: 791
score: 98.43949672154018
patch: case Token . SEMI : :
rank: 791
score: 98.37184651692708
patch: / / / * /
rank: 791
score: 98.37165178571429
patch: { case Type . AND :
rank: 791
score: 98.20485432942708
patch: case Integer . SIZE :
rank: 791
score: 98.0877685546875
patch: case Token . precedence :
rank: 791
score: 98.00830078125
patch: ( case $STRING$ :
rank: 792
score: 98.43568638392857
patch: case Token . SWITCH : :
rank: 792
score: 98.37111990792411
patch: } else / / * /
rank: 792
score: 98.20461018880208
patch: case Token . intern :
rank: 792
score: 98.08755493164062
patch: case Token . chars :
rank: 792
score: 98.0072021484375
patch: int case 0 :
rank: 792
score: 98.00282796223958
patch: case Node . ) :
rank: 793
score: 98.36534627278645
patch: case Process . AND :
rank: 793
score: 98.1085205078125
patch: case Runnable . OR :
rank: 793
score: 98.00213623046875
patch: case Scope . OR :
rank: 793
score: 97.99320983886719
patch: case $STRING$ ;
rank: 794
score: 98.20284016927083
patch: case Integer . PREFIX :
rank: 794
score: 98.0873311360677
patch: case Token . replacement :
rank: 794
score: 97.99127197265625
patch: case 0 + :
rank: 795
score: 98.35512288411458
patch: continue Token . AND :
rank: 795
score: 98.2063496907552
patch: case Node . HOOK ;
rank: 795
score: 98.1996358235677
patch: case Compiler . AND :
rank: 795
score: 98.17599487304688
patch: if ( this . :
rank: 795
score: 98.10416666666667
patch: case Number . OR :
rank: 795
score: 98.0855204264323
patch: case Node . AND ;
rank: 795
score: 97.99840087890625
patch: switch ( ) {
rank: 795
score: 97.986328125
patch: case : ) {
rank: 796
score: 98.19810994466145
patch: case Integer . EXPRESSION :
rank: 796
score: 97.99810791015625
patch: case Token . format :
rank: 796
score: 97.98551025390626
patch: case int case )
rank: 797
score: 98.35268147786458
patch: final Node . AND :
rank: 797
score: 98.3487548828125
patch: / * * * :
rank: 797
score: 98.19789632161458
patch: case Integer . $STRING$ :
rank: 797
score: 98.17495727539062
patch: return Boolean . TRUE ;
rank: 797
score: 98.1013692220052
patch: case Token . delete :
rank: 797
score: 97.997900390625
patch: case Token . OR
rank: 797
score: 97.98423767089844
patch: Token . :
rank: 798
score: 98.35193888346355
patch: case Thread . AND :
rank: 798
score: 98.17149861653645
patch: case Token . CONTROL :
rank: 798
score: 97.984130859375
patch: Token . : _
rank: 799
score: 98.19605509440105
patch: case byte . 0 :
rank: 799
score: 97.98307495117187
patch: Token . AND ;
rank: 800
score: 98.34410603841145
patch: / * : * /
rank: 800
score: 98.19559733072917
patch: case 1 + AND :
rank: 800
score: 98.16697184244792
patch: continue Token . AND ;
rank: 800
score: 98.07432047526042
patch: if ( n ) {
rank: 800
score: 97.97901611328125
patch: } case $STRING$ ;
rank: 801
score: 98.40348597935268
patch: if case Token . NOT :
rank: 801
score: 98.3433125813802
patch: case boolean . AND :
rank: 801
score: 98.1619873046875
patch: case Token . Deprecated :
rank: 801
score: 98.07373046875
patch: case Token . line :
rank: 801
score: 97.9782958984375
patch: case $STRING$ / :
rank: 802
score: 98.3375244140625
patch: case Hash . AND :
rank: 802
score: 97.97768147786458
patch: } :
rank: 803
score: 98.3332763671875
patch: / * * :
rank: 803
score: 98.19275919596355
patch: case String . $NUMBER$ :
rank: 803
score: 98.1848856608073
patch: case Token . flow :
rank: 803
score: 98.08896891276042
patch: case String . NOT :
rank: 803
score: 98.06967163085938
patch: case Token . traverse :
rank: 803
score: 97.973583984375
patch: case ? : :
rank: 804
score: 98.19200642903645
patch: case Type . LOCAL :
rank: 804
score: 98.1583760579427
patch: case Token . sin :
rank: 804
score: 98.06907145182292
patch: / * Token . HOOK
rank: 804
score: 97.99076334635417
patch: / * / } }
rank: 804
score: 97.9715576171875
patch: case - : :
rank: 805
score: 98.32645670572917
patch: case Var . AND :
rank: 805
score: 98.0858662923177
patch: case Definition . AND :
rank: 805
score: 98.06784057617188
patch: case Token . suspend :
rank: 805
score: 97.97150268554688
patch: case : * :
rank: 806
score: 98.0676778157552
patch: case Token . REGULAR :
rank: 806
score: 97.97500610351562
patch: if ( true )
rank: 806
score: 97.9705322265625
patch: if false : :
rank: 807
score: 98.38628278459821
patch: return case Token . NULL :
rank: 807
score: 98.3243179321289
patch: } else {
rank: 807
score: 98.3071797688802
patch: if ( null ) {
rank: 807
score: 98.153076171875
patch: if ( : :
rank: 807
score: 98.06424967447917
patch: case Token . stop :
rank: 807
score: 97.97158203125
patch: System . else {
rank: 807
score: 97.9667739868164
patch: Token : :
rank: 808
score: 98.14817301432292
patch: break Token . FALSE ;
rank: 808
score: 98.07972208658855
patch: case Token . compare :
rank: 808
score: 97.96856689453125
patch: if ( ) {
rank: 808
score: 97.96608276367188
patch: return case $STRING$ :
rank: 809
score: 98.3163553873698
patch: case Node . EMPTY :
rank: 809
score: 98.30235799153645
patch: / / * * /
rank: 809
score: 98.18613688151042
patch: case Integer . type :
rank: 809
score: 98.14785766601562
patch: if ( node . :
rank: 809
score: 98.06134033203125
patch: case Token . compiler :
rank: 809
score: 97.96359252929688
patch: case 0 ? :
rank: 809
score: 97.9626693725586
patch: / finally {
rank: 810
score: 97.96123657226562
patch: System . AND :
rank: 810
score: 97.95245971679688
patch: if ( false )
rank: 811
score: 98.29934692382812
patch: / * * / {
rank: 811
score: 98.1448974609375
patch: case Token . DEC :
rank: 811
score: 98.06022135416667
patch: case Token . sum :
rank: 811
score: 97.9583984375
patch: Token . AND /
rank: 811
score: 97.9518051147461
patch: case String :
rank: 812
score: 98.31165568033855
patch: case Token . LP :
rank: 812
score: 98.18444061279297
patch: case null :
rank: 812
score: 98.0596923828125
patch: case Token . halt :
rank: 812
score: 97.95623168945312
patch: case int AND :
rank: 813
score: 98.1825663248698
patch: case Integer . null :
rank: 813
score: 98.14071655273438
patch: case Token . Enum :
rank: 813
score: 98.05933634440105
patch: case Token . - :
rank: 813
score: 97.95536804199219
patch: case int :
rank: 813
score: 97.948046875
patch: case Token . HOOK
rank: 814
score: 98.3067626953125
patch: } else / * /
rank: 814
score: 98.18191528320312
patch: case Token . null :
rank: 814
score: 97.9491455078125
patch: } case 0 :
rank: 814
score: 97.9461181640625
patch: case Token . }
rank: 815
score: 98.3010762532552
patch: return Node . AND :
rank: 815
score: 98.29517822265625
patch: / / * /
rank: 815
score: 98.18155924479167
patch: case 1 : break :
rank: 815
score: 98.1363525390625
patch: case Token . decode :
rank: 815
score: 97.94456176757812
patch: Token . AND ?
rank: 815
score: 97.94110717773438
patch: / } else {
rank: 816
score: 98.33649553571429
patch: if case Token . TRUE :
rank: 816
score: 97.93983154296875
patch: Token : : :
rank: 816
score: 97.90791015625
patch: / * / }
rank: 817
score: 98.30006917317708
patch: } else * * /
rank: 817
score: 98.18018595377605
patch: case / * / /
rank: 817
score: 98.0476582845052
patch: case Token . resume :
rank: 817
score: 97.93961181640626
patch: case 1 . :
rank: 818
score: 98.3338623046875
patch: case Token . PARAMETER : :
rank: 818
score: 98.06477864583333
patch: case Visitor . HOOK :
rank: 818
score: 98.04712931315105
patch: for ( Node 1 )
rank: 818
score: 97.9388427734375
patch: else {
rank: 818
score: 97.89974365234374
patch: for ( Node )
rank: 819
score: 98.28530883789062
patch: case Node . NULL :
rank: 819
score: 98.17920939127605
patch: case Integer . AND ?
rank: 819
score: 98.0640869140625
patch: case Token . changed :
rank: 819
score: 97.93638305664062
patch: case : 1 ;
rank: 819
score: 97.88618774414063
patch: Token . OR :
rank: 820
score: 98.28260294596355
patch: String case . AND :
rank: 820
score: 98.28143310546875
patch: switch ( 1 ) {
rank: 820
score: 98.17671712239583
patch: case Type . BOTH :
rank: 820
score: 98.063232421875
patch: case String . FALSE :
rank: 820
score: 98.04563395182292
patch: case Token . console :
rank: 820
score: 97.93636322021484
patch: case ? :
rank: 821
score: 98.32380022321429
patch: case Token . arraycopy ( :
rank: 821
score: 98.27553304036458
patch: if Token . AND ?
rank: 821
score: 98.17453002929688
patch: case $NUMBER$ - AND :
rank: 821
score: 98.12489827473958
patch: / / Token . HOOK
rank: 821
score: 98.11883544921875
patch: if ( n . :
rank: 821
score: 98.04371134440105
patch: / * * / /
rank: 821
score: 97.93524169921875
patch: case : || :
rank: 821
score: 97.8697509765625
patch: fail ( ) ;
rank: 822
score: 98.320556640625
patch: case Token . REGEXP : :
rank: 822
score: 98.17439778645833
patch: case Result . TYPE :
rank: 822
score: 98.11808268229167
patch: return Token . TRUE ;
rank: 822
score: 98.042236328125
patch: throw null ; default :
rank: 822
score: 97.93495178222656
patch: ( : :
rank: 822
score: 97.865966796875
patch: for / * /
rank: 823
score: 98.11731974283855
patch: if Token . NULL :
rank: 823
score: 98.04114786783855
patch: case Token . BANG :
rank: 823
score: 97.932373046875
patch: / else :
rank: 823
score: 97.85552978515625
patch: return n ;
rank: 824
score: 98.31253487723214
patch: case Token . AND AND :
rank: 824
score: 98.05038452148438
patch: case Token . catch :
rank: 824
score: 98.04050699869792
patch: case Token . locale :
rank: 824
score: 97.92886352539062
patch: } : : :
rank: 824
score: 97.85511779785156
patch: return this ;
rank: 825
score: 98.31178501674107
patch: break case Token . NULL :
rank: 825
score: 98.26719156901042
patch: case Node . TRUE :
rank: 825
score: 98.1123046875
patch: if Token . NOT :
rank: 825
score: 98.03976440429688
patch: case Token . AND ++
rank: 825
score: 97.9244384765625
patch: case : break :
rank: 825
score: 97.84473876953125
patch: return throw null ;
rank: 826
score: 98.17098999023438
patch: case Result . NOT :
rank: 826
score: 98.11184692382812
patch: case Token . DIV :
rank: 826
score: 98.03884887695312
patch: case Token . AND &
rank: 826
score: 97.8440185546875
patch: } } else {
rank: 827
score: 98.04508463541667
patch: case Mode . HOOK :
rank: 827
score: 97.92029418945313
patch: / : / :
rank: 827
score: 97.84342041015626
patch: case String } }
rank: 828
score: 98.30756487165179
patch: return case Token . EMPTY :
rank: 828
score: 98.03772989908855
patch: case Token . referenced :
rank: 828
score: 97.911572265625
patch: break : : :
rank: 828
score: 97.84257202148437
patch: / / } }
rank: 829
score: 98.30093819754464
patch: if ( node instanceof Token )
rank: 829
score: 98.03428141276042
patch: case Token . connect :
rank: 829
score: 97.908935546875
patch: int case $NUMBER$ :
rank: 829
score: 97.84044799804687
patch: System . finally {
rank: 830
score: 98.1658426920573
patch: case $NUMBER$ : : :
rank: 830
score: 98.0335184733073
patch: case Token = n ;
rank: 831
score: 98.03345743815105
patch: case Node != null ?
rank: 831
score: 97.89939575195312
patch: else { : else
rank: 831
score: 97.79326782226562
patch: for ( int )
rank: 832
score: 98.09998575846355
patch: case Token . LEGACY :
rank: 832
score: 98.03310139973958
patch: case Token . ASSIGN finally
rank: 832
score: 97.89698028564453
patch: } : {
rank: 833
score: 98.16396077473958
patch: case ? . AND :
rank: 833
score: 98.02576700846355
patch: case Token . NO ;
rank: 833
score: 97.89595947265624
patch: case ? ) {
rank: 833
score: 97.77372436523437
patch: Type . HOOK :
rank: 834
score: 98.29555838448661
patch: if ( Token . NULL :
rank: 834
score: 98.09696960449219
patch: if ( :
rank: 834
score: 97.89071044921874
patch: case : 1 .
rank: 834
score: 97.77255249023438
patch: case FUNCTION :
rank: 835
score: 98.29410226004464
patch: case Token . EOL : :
rank: 835
score: 98.19671630859375
patch: case short . OR :
rank: 835
score: 98.09637451171875
patch: get CaMeL Parent ( :
rank: 835
score: 98.0772705078125
patch: case Token . LINE ;
rank: 835
score: 98.03792317708333
patch: case Token . matches :
rank: 835
score: 97.88999633789062
patch: else case $STRING$ :
rank: 835
score: 97.76822662353516
patch: / / /
rank: 836
score: 98.09450276692708
patch: case Token . main :
rank: 836
score: 97.88953399658203
patch: case false :
rank: 836
score: 97.74876708984375
patch: / / break ;
rank: 837
score: 98.16085815429688
patch: case Integer + AND :
rank: 837
score: 98.01590983072917
patch: case Token . capacity :
rank: 837
score: 97.86465454101562
patch: case T :
rank: 837
score: 97.74734497070312
patch: case ) :
rank: 838
score: 98.01588948567708
patch: case Token . Stat :
rank: 838
score: 97.8358154296875
patch: case ? )
rank: 838
score: 97.7269775390625
patch: / * / ;
rank: 839
score: 98.15995279947917
patch: case Type . LEFT :
rank: 839
score: 98.01399739583333
patch: case Token [ ] :
rank: 839
score: 97.83111572265625
patch: case * :
rank: 839
score: 97.7225830078125
patch: case Token != null
rank: 840
score: 98.28254917689732
patch: if case Token . FUNCTION :
rank: 840
score: 98.18562825520833
patch: return Token . OR :
rank: 840
score: 98.15899658203125
patch: case Node . WARNING :
rank: 840
score: 97.82218933105469
patch: case Integer ;
rank: 841
score: 98.2248026529948
patch: case Package . AND :
rank: 841
score: 98.15570068359375
patch: case Type . PARAMETER :
rank: 841
score: 98.0785420735677
patch: |= Token . AND ;
rank: 841
score: 98.06294759114583
patch: case Token . counter :
rank: 841
score: 98.0309346516927
patch: case Token . AND private
rank: 841
score: 98.01180013020833
patch: case Token . init :
rank: 841
score: 97.79359436035156
patch: if null :
rank: 841
score: 97.70934448242187
patch: / finally { }
rank: 842
score: 98.18361409505208
patch: switch ( $NUMBER$ ) {
rank: 842
score: 98.15499877929688
patch: case Type . class :
rank: 842
score: 98.0587158203125
patch: case Node . OR ;
rank: 842
score: 98.030029296875
patch: case Type . KILL :
rank: 842
score: 97.78263854980469
patch: case ] :
rank: 842
score: 97.70528564453124
patch: case $STRING$ : {
rank: 843
score: 98.27811976841518
patch: || case Token . AND :
rank: 843
score: 98.22189331054688
patch: / Token . AND ?
rank: 843
score: 98.0291748046875
patch: case Token . replace :
rank: 843
score: 97.7774658203125
patch: * : :
rank: 843
score: 97.69442138671874
patch: if ( variable CaMeL
rank: 844
score: 98.2218017578125
patch: = Token . AND :
rank: 844
score: 98.15317789713542
patch: case String . 1 :
rank: 844
score: 98.07798258463542
patch: return Token . NO ;
rank: 844
score: 98.00130208333333
patch: case Token . Branch :
rank: 844
score: 97.7678451538086
patch: case : )
rank: 844
score: 97.69419352213542
patch: break ;
rank: 845
score: 98.15214029947917
patch: case Integer . AND ||
rank: 845
score: 97.7490463256836
patch: case / :
rank: 845
score: 97.68492126464844
patch: case ) {
rank: 846
score: 98.15086873372395
patch: case Strings . AND :
rank: 846
score: 98.07216389973958
patch: break State . AND :
rank: 846
score: 97.74400329589844
patch: case - :
rank: 846
score: 97.680908203125
patch: for ( Token child
rank: 847
score: 98.17026774088542
patch: / * * / }
rank: 847
score: 98.14767456054688
patch: case Integer . AND /
rank: 847
score: 98.07180786132812
patch: case Token . TYPED :
rank: 847
score: 98.0213623046875
patch: case String . KILL :
rank: 847
score: 97.73657989501953
patch: case $STRING$ {
rank: 847
score: 97.678955078125
patch: break ; / /
rank: 848
score: 98.27175467354911
patch: case Token . NULL || :
rank: 848
score: 98.14762369791667
patch: case / * * /
rank: 848
score: 98.06985473632812
patch: return Token . AND )
rank: 848
score: 98.05018107096355
patch: return Token . HOOK :
rank: 848
score: 97.72463989257812
patch: this . :
rank: 848
score: 97.67593383789062
patch: / } }
rank: 849
score: 98.16995239257812
patch: switch ( count ) {
rank: 849
score: 98.14680989583333
patch: case Type . LABEL :
rank: 849
score: 98.06976318359375
patch: break Token . NOT :
rank: 849
score: 98.02080535888672
patch: case OR :
rank: 849
score: 97.71698760986328
patch: default : :
rank: 849
score: 97.67538452148438
patch: / / }
rank: 850
score: 98.04951985677083
patch: return FUNCTION . READ ;
rank: 850
score: 98.01901245117188
patch: case String . READ :
rank: 850
score: 97.9658203125
patch: case Token [ ]
rank: 850
score: 97.67070922851562
patch: / * } }
rank: 851
score: 98.26925223214286
patch: case Token . Assignment : :
rank: 851
score: 98.2056884765625
patch: case Character . EMPTY :
rank: 851
score: 97.95957641601562
patch: case / * /
rank: 851
score: 97.68963623046875
patch: case : {
rank: 851
score: 97.65741729736328
patch: case Token ;
rank: 852
score: 98.20457967122395
patch: case Node . NONE :
rank: 852
score: 98.14530436197917
patch: case * * * :
rank: 852
score: 97.6680679321289
patch: case true :
rank: 852
score: 97.65375366210938
patch: case String * /
rank: 853
score: 98.26768275669643
patch: @ case Token . AND :
rank: 853
score: 98.1626485188802
patch: / / } else {
rank: 853
score: 98.1446024576823
patch: case String . 0 :
rank: 853
score: 97.65403238932292
patch: if :
rank: 853
score: 97.651611328125
patch: case String - :
rank: 854
score: 98.26107352120536
patch: case Token . RAW : :
rank: 854
score: 98.20254516601562
patch: break : } else {
rank: 854
score: 97.64700317382812
patch: if : .
rank: 855
score: 98.25995744977679
patch: case Token . Branch : :
rank: 855
score: 98.19786580403645
patch: case Node . AND >
rank: 855
score: 98.15976969401042
patch: / * / break ;
rank: 855
score: 97.640380859375
patch: :
rank: 855
score: 97.62684936523438
patch: case $STRING$ : }
rank: 856
score: 98.19517008463542
patch: case Short : break :
rank: 856
score: 97.64015197753906
patch: catch : :
rank: 856
score: 97.6186767578125
patch: case Token . ?
rank: 857
score: 98.1416727701823
patch: case Type . T :
rank: 857
score: 97.8816162109375
patch: / * / .
rank: 857
score: 97.63833618164062
patch: case : 1
rank: 857
score: 97.61597900390625
patch: / * else {
rank: 858
score: 98.15205891927083
patch: switch ( key ) {
rank: 858
score: 98.14158121744792
patch: case Result . FUNCTION :
rank: 858
score: 97.63829803466797
patch: case 0 ||
rank: 858
score: 97.61582946777344
patch: case ) ;
rank: 859
score: 97.63290405273438
patch: / / :
rank: 859
score: 97.60779418945313
patch: if ( child CaMeL
rank: 860
score: 98.25182233537946
patch: return case Token . NONE :
rank: 860
score: 98.19085693359375
patch: { Token . AND :
rank: 860
score: 98.00739288330078
patch: case AND :
rank: 860
score: 97.62814331054688
patch: } else :
rank: 860
score: 97.607568359375
patch: System . break ;
rank: 861
score: 98.25110735212054
patch: case Token . decode ( )
rank: 861
score: 98.18874104817708
patch: } else * * :
rank: 861
score: 98.13855997721355
patch: case Type . TARGET :
rank: 861
score: 98.00731404622395
patch: case String . EMPTY :
rank: 861
score: 97.81634521484375
patch: case Node {
rank: 861
score: 97.61674499511719
patch: ( : .
rank: 861
score: 97.60722351074219
patch: / else {
rank: 862
score: 98.14752197265625
patch: / * / else {
rank: 862
score: 98.13816324869792
patch: case Integer . COMMA :
rank: 862
score: 98.0519510904948
patch: break Token . NULL :
rank: 862
score: 97.60984802246094
patch: case : $NUMBER$
rank: 862
score: 97.60088500976562
patch: } / * /
rank: 863
score: 98.18692016601562
patch: case Comparable . AND :
rank: 863
score: 98.13541666666667
patch: case ( $NUMBER$ : ?
rank: 863
score: 98.05125935872395
patch: break Token . NULL ;
rank: 863
score: 97.60888671875
patch: int : :
rank: 863
score: 97.58871459960938
patch: switch ( n )
rank: 864
score: 98.18587239583333
patch: / * / * /
rank: 864
score: 97.7795654296875
patch: case Token ) :
rank: 864
score: 97.60728454589844
patch: Node case :
rank: 864
score: 97.58802032470703
patch: return false ;
rank: 865
score: 98.1832987467448
patch: return Token . NULL :
rank: 865
score: 97.77638549804688
patch: for ( Node {
rank: 865
score: 97.5764404296875
patch: case Token . MAYBE
rank: 866
score: 98.14326985677083
patch: / * * / else
rank: 866
score: 98.1332499186198
patch: case Integer . LT :
rank: 866
score: 98.04483032226562
patch: return Token . NOT ;
rank: 866
score: 98.00267537434895
patch: case Token . annotation :
rank: 866
score: 97.60108947753906
patch: case 1 .
rank: 866
score: 97.57489776611328
patch: } } }
rank: 867
score: 98.17694091796875
patch: case $STRING$ : break :
rank: 867
score: 98.04295857747395
patch: case Token . SURROGATE :
rank: 867
score: 98.00258382161458
patch: | Token . AND :
rank: 867
score: 97.76929931640625
patch: case Token ) {
rank: 867
score: 97.59759521484375
patch: case 1 ?
rank: 867
score: 97.57425537109376
patch: / * finally {
rank: 868
score: 98.22512817382812
patch: if ( case $NUMBER$ )
rank: 868
score: 98.13137817382812
patch: case * * ? /
rank: 868
score: 98.042724609375
patch: break Token . NONE ;
rank: 868
score: 98.0211181640625
patch: case Token . << :
rank: 868
score: 98.00254313151042
patch: case Token ( HOOK :
rank: 868
score: 97.59632110595703
patch: if true :
rank: 868
score: 97.573486328125
patch: / * else
rank: 869
score: 98.1297607421875
patch: case Token . WARNING ,
rank: 869
score: 97.5934829711914
patch: if 0 :
rank: 870
score: 98.17135620117188
patch: case Node . FALSE :
rank: 870
score: 98.13212076822917
patch: / * * * ;
rank: 870
score: 97.92916259765624
patch: case Token ; :
rank: 870
score: 97.75161743164062
patch: case Node [ ]
rank: 870
score: 97.58656311035156
patch: case static :
rank: 870
score: 97.56372833251953
patch: case String }
rank: 871
score: 98.03953043619792
patch: continue Token . TRUE ;
rank: 871
score: 97.5851058959961
patch: case 0 )
rank: 871
score: 97.56304931640625
patch: try {
rank: 872
score: 98.122314453125
patch: case / * ? /
rank: 872
score: 98.03830973307292
patch: case Token . repeat :
rank: 872
score: 97.85103759765624
patch: case . AND :
rank: 872
score: 97.5838114420573
patch: : :
rank: 872
score: 97.54377746582031
patch: return true ;
rank: 873
score: 98.12101236979167
patch: case / * * :
rank: 873
score: 98.03422037760417
patch: break Token . EMPTY ;
rank: 873
score: 97.81414794921875
patch: case . HOOK :
rank: 873
score: 97.72872314453124
patch: case Node $NUMBER$ :
rank: 873
score: 97.53031921386719
patch: System . else
rank: 874
score: 98.16477457682292
patch: return Token . RIGHT :
rank: 874
score: 98.12057495117188
patch: case Integer . abs :
rank: 874
score: 97.69444580078125
patch: / * / first
rank: 874
score: 97.57891082763672
patch: finally { :
rank: 874
score: 97.52888488769531
patch: try { }
rank: 875
score: 98.16393025716145
patch: final Type . AND :
rank: 875
score: 98.03067016601562
patch: switch ( n . :
rank: 875
score: 97.680078125
patch: case String FUNCTION :
rank: 875
score: 97.57804870605469
patch: while : :
rank: 876
score: 98.11812337239583
patch: case Type . OTHER :
rank: 876
score: 97.7055892944336
patch: case Token :
rank: 876
score: 97.57295989990234
patch: case Long :
rank: 876
score: 97.5224838256836
patch: return $STRING$ ;
rank: 877
score: 98.11782836914062
patch: case char :
rank: 877
score: 97.6576171875
patch: case Token check :
rank: 877
score: 97.55628204345703
patch: int case :
rank: 878
score: 97.94749145507812
patch: / * / else
rank: 878
score: 97.90634765625
patch: if : break ;
rank: 878
score: 97.64332885742188
patch: case String name :
rank: 878
score: 97.55240631103516
patch: null : :
rank: 878
score: 97.5066909790039
patch: / } else
rank: 879
score: 98.11524454752605
patch: case Token . AND *
rank: 879
score: 97.94030151367187
patch: / * * ;
rank: 879
score: 97.86067504882813
patch: break - 1 ;
rank: 879
score: 97.55059051513672
patch: false : :
rank: 879
score: 97.50186157226562
patch: case String {
rank: 880
score: 98.11480712890625
patch: case * : break :
rank: 880
score: 97.85496826171875
patch: Token . TRUE :
rank: 880
score: 97.54460906982422
patch: case 0 ;
rank: 880
score: 97.50125122070312
patch: return variable ;
rank: 881
score: 98.1129659016927
patch: case Type . SWITCH :
rank: 881
score: 97.853515625
patch: expr . AND :
rank: 881
score: 97.54148864746094
patch: / : /
rank: 882
score: 97.99568684895833
patch: case Token . POS :
rank: 882
score: 97.90693359375
patch: / / try {
rank: 882
score: 97.84762573242188
patch: if ( break )
rank: 882
score: 97.68480834960937
patch: case Type . :
rank: 882
score: 97.61321258544922
patch: case Token )
rank: 882
score: 97.53856658935547
patch: Token { Token
rank: 882
score: 97.47798156738281
patch: if ( }
rank: 883
score: 98.15304565429688
patch: * Token . AND /
rank: 883
score: 97.9039306640625
patch: / * * {
rank: 883
score: 97.68458557128906
patch: case finally :
rank: 883
score: 97.59866333007812
patch: if ( n )
rank: 883
score: 97.53839111328125
patch: case : ||
rank: 883
score: 97.47615051269531
patch: / break ;
rank: 884
score: 97.89674682617188
patch: / / / /
rank: 884
score: 97.7841796875
patch: case Token $NUMBER$ :
rank: 884
score: 97.68026123046874
patch: NS . HOOK :
rank: 884
score: 97.53425598144531
patch: next : :
rank: 884
score: 97.45980834960938
patch: throw null ;
rank: 885
score: 98.15191650390625
patch: break : / * /
rank: 885
score: 98.11037190755208
patch: case ( 1 : :
rank: 885
score: 97.781787109375
patch: this . AND :
rank: 885
score: 97.67393188476562
patch: case HOOK : :
rank: 885
score: 97.53108978271484
patch: case byte :
rank: 885
score: 97.45600891113281
patch: / * }
rank: 886
score: 98.14536539713542
patch: case Node . VOID :
rank: 886
score: 98.109130859375
patch: case Type . round :
rank: 886
score: 97.85504150390625
patch: default :
rank: 886
score: 97.75819091796875
patch: synchronized ( this )
rank: 886
score: 97.45299530029297
patch: / / else
rank: 887
score: 98.12039184570312
patch: if ( case 1 )
rank: 887
score: 98.10875447591145
patch: case Integer . FORMAT :
rank: 887
score: 97.848876953125
patch: / * * *
rank: 887
score: 97.74814453125
patch: if ( case )
rank: 887
score: 97.63473510742188
patch: result = null ;
rank: 887
score: 97.52898406982422
patch: } : .
rank: 887
score: 97.44046020507812
patch: / / {
rank: 888
score: 98.10824584960938
patch: case * * * /
rank: 888
score: 97.82750244140625
patch: Token . HOOK {
rank: 888
score: 97.62994384765625
patch: case . OR :
rank: 888
score: 97.5134506225586
patch: } * :
rank: 888
score: 97.42110443115234
patch: / : {
rank: 889
score: 98.14354451497395
patch: / * * : /
rank: 889
score: 97.7447509765625
patch: Token . code :
rank: 889
score: 97.56015625
patch: case OR : :
rank: 889
score: 97.50642395019531
patch: case Double :
rank: 889
score: 97.43984985351562
patch: case Node ;
rank: 889
score: 97.4152603149414
patch: if ( )
rank: 890
score: 98.10242716471355
patch: case * * : :
rank: 890
score: 98.09920247395833
patch: default Token . AND :
rank: 890
score: 97.80096435546875
patch: default / * /
rank: 890
score: 97.70394287109374
patch: this . : :
rank: 890
score: 97.55439453125
patch: case AND : :
rank: 890
score: 97.50392150878906
patch: case else :
rank: 890
score: 97.43822479248047
patch: case else {
rank: 890
score: 97.3998514811198
patch: } }
rank: 891
score: 98.13819376627605
patch: } else / * :
rank: 891
score: 97.97928873697917
patch: case Token . compile :
rank: 891
score: 97.80072021484375
patch: / * * else
rank: 891
score: 97.69730834960937
patch: switch ( : :
rank: 891
score: 97.54766845703125
patch: Constants . HOOK :
rank: 891
score: 97.49186706542969
patch: * * :
rank: 891
score: 97.39923858642578
patch: break ; }
rank: 892
score: 98.13766479492188
patch: return Token . FALSE :
rank: 892
score: 98.1006571451823
patch: case Type . DO :
rank: 892
score: 97.69700927734375
patch: break false * /
rank: 892
score: 97.48741149902344
patch: case Node :
rank: 892
score: 97.38818359375
patch: case String ;
rank: 893
score: 98.13720703125
patch: case Boolean . EMPTY :
rank: 893
score: 98.09989013671876
patch: case null : :
rank: 893
score: 97.696826171875
patch: default : break ;
rank: 893
score: 97.529638671875
patch: case String private :
rank: 893
score: 97.48640950520833
patch: case :
rank: 894
score: 98.09932454427083
patch: case / * : :
rank: 894
score: 97.78408203125
patch: / * if /
rank: 894
score: 97.69317626953125
patch: Token . AND ,
rank: 894
score: 97.5103515625
patch: result = false ;
rank: 894
score: 97.48418426513672
patch: case ++ :
rank: 894
score: 97.41329193115234
patch: / * first
rank: 894
score: 97.36582946777344
patch: case ) }
rank: 895
score: 97.77810668945312
patch: / / else {
rank: 895
score: 97.6788330078125
patch: break : break ;
rank: 895
score: 97.48100280761719
patch: case : }
rank: 895
score: 97.40727233886719
patch: } } else
rank: 895
score: 97.35879516601562
patch: / : }
rank: 896
score: 98.12874348958333
patch: case Token : break :
rank: 896
score: 97.7767578125
patch: / * try {
rank: 896
score: 97.66978149414062
patch: Token . NOT :
rank: 896
score: 97.4991943359375
patch: case String . :
rank: 896
score: 97.46975708007812
patch: case : (
rank: 896
score: 97.356201171875
patch: / / ;
rank: 897
score: 98.0947774251302
patch: case Token . build :
rank: 897
score: 97.66033325195312
patch: break . AND :
rank: 897
score: 97.49481964111328
patch: case Boolean :
rank: 897
score: 97.46355438232422
patch: do { :
rank: 897
score: 97.39498901367188
patch: case / /
rank: 897
score: 97.33358001708984
patch: case Token .
rank: 898
score: 98.12716674804688
patch: break : break :
rank: 898
score: 97.64254760742188
patch: switch ( :
rank: 898
score: 97.4912109375
patch: expr = null ;
rank: 898
score: 97.46285247802734
patch: case Integer {
rank: 899
score: 98.09007771809895
patch: case Token . callback :
rank: 899
score: 97.76890869140625
patch: / / * :
rank: 899
score: 97.63033447265624
patch: if ( match )
rank: 899
score: 97.46238708496094
patch: case NAME :
rank: 899
score: 97.32160186767578
patch: for / /
rank: 900
score: 98.12164306640625
patch: } else * :
rank: 900
score: 97.62867431640625
patch: Symbol . AND :
rank: 900
score: 97.44068145751953
patch: throw null :
rank: 900
score: 97.31694030761719
patch: case private :
rank: 901
score: 97.61988525390625
patch: Token . NULL :
rank: 901
score: 97.43496704101562
patch: / : else
rank: 901
score: 97.35954284667969
patch: case break :
rank: 901
score: 97.31376647949219
patch: case Token ,
rank: 902
score: 98.08406575520833
patch: case Type . PI :
rank: 902
score: 97.74135131835938
patch: / / default :
rank: 902
score: 97.42716979980469
patch: case Number :
rank: 902
score: 97.35929361979167
patch: finally {
rank: 903
score: 98.03126831054688
patch: case * : :
rank: 903
score: 97.73304443359375
patch: / / / :
rank: 903
score: 97.42015075683594
patch: case 0 {
rank: 903
score: 97.35745239257812
patch: case Node )
rank: 903
score: 97.32213592529297
patch: case LINE :
rank: 904
score: 98.03636474609375
patch: } else if :
rank: 904
score: 98.02923583984375
patch: case char : :
rank: 904
score: 97.41949462890625
patch: String case :
rank: 904
score: 97.34849548339844
patch: case Token !
rank: 904
score: 97.30355834960938
patch: case Character :
rank: 904
score: 97.2787857055664
patch: for ( int
rank: 905
score: 97.67890167236328
patch: / * {
rank: 905
score: 97.49443054199219
patch: break false :
rank: 905
score: 97.41320037841797
patch: Token { else
rank: 905
score: 97.29915618896484
patch: break HOOK :
rank: 905
score: 97.26469421386719
patch: for 1 :
rank: 906
score: 98.0479227701823
patch: if ( case AND :
rank: 906
score: 98.01168823242188
patch: * * * /
rank: 906
score: 97.99559326171875
patch: case n . .
rank: 906
score: 97.47740173339844
patch: false * /
rank: 906
score: 97.4125747680664
patch: start : :
rank: 906
score: 97.2628173828125
patch: case ) /
rank: 907
score: 97.47213745117188
patch: loop * /
rank: 907
score: 97.41192626953125
patch: case Short :
rank: 907
score: 97.3115234375
patch: for * /
rank: 907
score: 97.25656127929688
patch: finally { }
rank: 908
score: 98.04564412434895
patch: case Token . generator :
rank: 908
score: 97.97919921875
patch: case * : /
rank: 908
score: 97.40950012207031
patch: case : ,
rank: 908
score: 97.30264282226562
patch: case )
rank: 908
score: 97.26030731201172
patch: if ( variable
rank: 909
score: 97.6339823404948
patch: } else
rank: 909
score: 97.43356323242188
patch: expr . :
rank: 909
score: 97.40749104817708
patch: / else
rank: 909
score: 97.25626373291016
patch: break } }
rank: 909
score: 97.23844909667969
patch: case NOT :
rank: 910
score: 98.04243977864583
patch: if ( : default :
rank: 910
score: 97.9726318359375
patch: case $NUMBER$ : .
rank: 910
score: 97.96759033203125
patch: } else break :
rank: 910
score: 97.60174560546875
patch: case READ :
rank: 910
score: 97.40431213378906
patch: case : /
rank: 911
score: 97.59993489583333
patch: / *
rank: 911
score: 97.40135955810547
patch: Token . AND
rank: 911
score: 97.40103912353516
patch: default * /
rank: 911
score: 97.22624206542969
patch: case Type :
rank: 912
score: 97.9609130859375
patch: break : * /
rank: 912
score: 97.39907836914062
patch: boolean case :
rank: 912
score: 97.3650894165039
patch: Token . TRUE
rank: 912
score: 97.28900909423828
patch: switch * /
rank: 912
score: 97.24219512939453
patch: for n .
rank: 912
score: 97.21708679199219
patch: case IF :
rank: 913
score: 97.95690307617187
patch: } else / :
rank: 913
score: 97.94707489013672
patch: case ? {
rank: 913
score: 97.57083892822266
patch: default : {
rank: 913
score: 97.33555603027344
patch: break AND :
rank: 913
score: 97.27073669433594
patch: / / first
rank: 913
score: 97.22685241699219
patch: } try {
rank: 914
score: 97.95361938476563
patch: / * : /
rank: 914
score: 97.93967895507812
patch: case * * :
rank: 914
score: 97.3142318725586
patch: break false ;
rank: 914
score: 97.24603271484375
patch: * :
rank: 914
score: 97.2096176147461
patch: case check :
rank: 914
score: 97.1846694946289
patch: default else {
rank: 915
score: 97.93341064453125
patch: case 0 : .
rank: 915
score: 97.908251953125
patch: break AND * /
rank: 915
score: 97.74188842773438
patch: / / } else
rank: 915
score: 97.30696868896484
patch: super . :
rank: 915
score: 97.16953531901042
patch: null :
rank: 916
score: 98.02071126302083
patch: this Token . AND :
rank: 916
score: 97.918115234375
patch: case -- : :
rank: 916
score: 97.90288696289062
patch: break . break :
rank: 916
score: 97.73909301757813
patch: Token . HOOK .
rank: 916
score: 97.2807388305664
patch: break ; :
rank: 916
score: 97.16693115234375
patch: } default :
rank: 916
score: 97.15096028645833
patch: catch :
rank: 917
score: 97.91298828125
patch: case false : :
rank: 917
score: 97.24063873291016
patch: / / .
rank: 917
score: 97.16454315185547
patch: case String ,
rank: 917
score: 97.13944498697917
patch: Token :
rank: 918
score: 97.49501037597656
patch: / * ;
rank: 918
score: 97.22766876220703
patch: case variable :
rank: 918
score: 97.20158386230469
patch: case ASSIGN :
rank: 918
score: 97.15251922607422
patch: if ( {
rank: 919
score: 97.88076171875
patch: case 1 : .
rank: 919
score: 97.71857299804688
patch: case Token 1 :
rank: 919
score: 97.4546890258789
patch: / * *
rank: 919
score: 97.22045135498047
patch: / * finally
rank: 919
score: 97.20256042480469
patch: break false ?
rank: 919
score: 97.1875
patch: break check :
rank: 919
score: 97.14846801757812
patch: System . }
rank: 919
score: 97.05617268880208
patch: ( :
rank: 920
score: 97.8802734375
patch: case * * /
rank: 920
score: 97.69276123046875
patch: case Token . LINE
rank: 920
score: 97.17703247070312
patch: p . :
rank: 920
score: 97.05403645833333
patch: false :
rank: 921
score: 97.87264404296874
patch: case $STRING$ : .
rank: 921
score: 97.86734771728516
patch: break Token :
rank: 921
score: 97.66905517578125
patch: / Token . HOOK
rank: 921
score: 97.21586608886719
patch: case COMMA :
rank: 921
score: 97.16812133789062
patch: * /
rank: 921
score: 97.15945434570312
patch: break / :
rank: 922
score: 97.85965576171876
patch: case / * :
rank: 922
score: 97.8587890625
patch: break AND * :
rank: 922
score: 97.42993927001953
patch: * * /
rank: 922
score: 97.20606231689453
patch: { try {
rank: 922
score: 97.15779113769531
patch: case STRING :
rank: 922
score: 97.15272013346355
patch: this .
rank: 922
score: 97.13485717773438
patch: return ) ;
rank: 922
score: 97.03805541992188
patch: while :
rank: 923
score: 98.00923665364583
patch: case Token . Loop :
rank: 923
score: 97.85281982421876
patch: / AND * /
rank: 923
score: 97.40145874023438
patch: HOOK * /
rank: 923
score: 97.1561050415039
patch: break OR :
rank: 923
score: 97.02825927734375
patch: finally :
rank: 924
score: 97.20152282714844
patch: case break ;
rank: 924
score: 97.11277770996094
patch: return KILL ;
rank: 924
score: 96.94659423828125
patch: continue :
rank: 925
score: 97.854345703125
patch: case / : :
rank: 925
score: 97.19807434082031
patch: { else {
rank: 925
score: 97.11431121826172
patch: a AND :
rank: 925
score: 96.86978149414062
patch: continue ;
rank: 925
score: 96.85835774739583
patch: next :
rank: 926
score: 97.8463623046875
patch: case null * :
rank: 926
score: 97.840087890625
patch: break Token * /
rank: 926
score: 97.19713338216145
patch: case ?
rank: 926
score: 97.09703063964844
patch: case NO :
rank: 926
score: 96.85739135742188
patch: break false
rank: 926
score: 96.8455098470052
patch: int :
rank: 927
score: 97.99234008789062
patch: case Token . Throwable :
rank: 927
score: 97.8378173828125
patch: case Short : :
rank: 927
score: 97.8302490234375
patch: case ( ) :
rank: 927
score: 97.09317016601562
patch: case String .
rank: 927
score: 97.09029134114583
patch: / }
rank: 927
score: 96.80208333333333
patch: true :
rank: 928
score: 97.82258911132813
patch: case Integer : }
rank: 928
score: 97.18272399902344
patch: case Node CaMeL
rank: 928
score: 96.79831949869792
patch: loop :
rank: 928
score: 96.7745361328125
patch: start :
rank: 929
score: 97.83123779296875
patch: break : }
rank: 929
score: 97.61995849609374
patch: / / / }
rank: 929
score: 97.08589172363281
patch: throw this ;
rank: 929
score: 96.76085662841797
patch: else
rank: 929
score: 96.71155802408855
patch: match :
rank: 930
score: 97.82618408203125
patch: Node . AND :
rank: 930
score: 97.79581298828126
patch: case Number : :
rank: 930
score: 97.07784271240234
patch: } finally {
rank: 930
score: 96.75059000651042
patch: break .
rank: 931
score: 97.81510620117187
patch: case Token : :
rank: 931
score: 97.7915771484375
patch: case String : :
rank: 931
score: 97.325927734375
patch: if ( ;
rank: 931
score: 97.0850601196289
patch: try { {
rank: 931
score: 96.68665568033855
patch: Token {
rank: 932
score: 97.9769795735677
patch: case Token . gc :
rank: 932
score: 97.78939056396484
patch: case -- :
rank: 932
score: 97.58497314453125
patch: case Node . HOOK
rank: 932
score: 97.08351135253906
patch: try { else
rank: 932
score: 96.61222330729167
patch: false ,
rank: 932
score: 96.57737223307292
patch: do {
rank: 933
score: 97.96871948242188
patch: if ( case $NUMBER$ :
rank: 933
score: 97.80054321289063
patch: break . break ;
rank: 933
score: 97.1636962890625
patch: case * /
rank: 933
score: 97.08097076416016
patch: return code ;
rank: 933
score: 96.59510294596355
patch: default ?
rank: 933
score: 96.55912272135417
patch: else .
rank: 934
score: 97.78778076171875
patch: case $NUMBER$ : }
rank: 934
score: 97.162353515625
patch: case ) .
rank: 934
score: 97.01139831542969
patch: case finally {
rank: 934
score: 96.54566446940105
patch: $NUMBER$ :
rank: 935
score: 97.78714599609376
patch: case ? * /
rank: 935
score: 97.78413696289063
patch: } else { :
rank: 935
score: 97.55860595703125
patch: / / / .
rank: 935
score: 97.25843811035156
patch: default : }
rank: 935
score: 97.06710052490234
patch: / continue ;
rank: 935
score: 96.4971415201823
patch: L :
rank: 936
score: 97.77814331054688
patch: * else * /
rank: 936
score: 97.75281372070313
patch: case $NUMBER$ * :
rank: 936
score: 97.55374145507812
patch: return n ; }
rank: 936
score: 97.2474365234375
patch: cfw . {
rank: 936
score: 97.15568542480469
patch: { break ;
rank: 936
score: 97.00726318359375
patch: case FALSE :
rank: 936
score: 96.49542236328125
patch: catch false
rank: 936
score: 96.41402180989583
patch: match .
rank: 937
score: 97.77235717773438
patch: Set . * /
rank: 937
score: 97.53248596191406
patch: return FUNCTION ;
rank: 937
score: 97.23934936523438
patch: : break ;
rank: 937
score: 97.06431579589844
patch: for ( )
rank: 937
score: 96.48469543457031
patch: (
rank: 937
score: 96.38950602213542
patch: AST :
rank: 938
score: 97.75064697265626
patch: case null : .
rank: 938
score: 97.06292724609375
patch: for check .
rank: 938
score: 96.4832763671875
patch: ? :
rank: 938
score: 96.37890625
patch: http :
rank: 939
score: 97.76466064453125
patch: String . * /
rank: 939
score: 96.95849609375
patch: case Token
rank: 939
score: 96.47988891601562
patch: / ?
rank: 939
score: 96.3499755859375
patch: AND :
rank: 940
score: 97.76129150390625
patch: String . AND :
rank: 940
score: 97.51885986328125
patch: Node . HOOK :
rank: 940
score: 96.82520548502605
patch: e .
rank: 940
score: 96.46714274088542
patch: $STRING$ :
rank: 941
score: 97.759033203125
patch: String . * :
rank: 941
score: 97.73837280273438
patch: case void :
rank: 941
score: 96.68558756510417
patch: / .
rank: 941
score: 96.46426391601562
patch: m :
rank: 941
score: 96.34165445963542
patch: if (
rank: 942
score: 97.84593505859375
patch: if ( node :
rank: 942
score: 97.75582275390624
patch: case Short : }
rank: 942
score: 97.50927734375
patch: case Node . )
rank: 942
score: 96.62864176432292
patch: / ,
rank: 942
score: 96.42184448242188
patch: Integer :
rank: 943
score: 97.81661376953124
patch: case Token . NULL
rank: 943
score: 97.7053451538086
patch: case LT :
rank: 943
score: 97.50430908203126
patch: return Token . AND
rank: 943
score: 97.18354034423828
patch: switch ( ;
rank: 943
score: 96.6206766764323
patch: default .
rank: 943
score: 96.40401204427083
patch: Node :
rank: 943
score: 96.26087443033855
patch: NIL :
rank: 944
score: 97.75541381835937
patch: this . break :
rank: 944
score: 97.67339324951172
patch: case EOF :
rank: 944
score: 97.500244140625
patch: case Token . FLAG
rank: 944
score: 97.09676106770833
patch: / {
rank: 944
score: 96.8321533203125
patch: / ;
rank: 944
score: 96.40183512369792
patch: String :
rank: 944
score: 96.25187174479167
patch: end :
rank: 945
score: 97.75498046875
patch: * * * :
rank: 945
score: 97.05153401692708
patch: HOOK :
rank: 945
score: 96.8235371907552
patch: case String
rank: 945
score: 96.61880493164062
patch: code :
rank: 945
score: 96.5433858235677
patch: / finally
rank: 945
score: 96.33720397949219
patch: ?
rank: 946
score: 97.71657104492188
patch: switch ( n :
rank: 946
score: 97.48562622070312
patch: / / } first
rank: 946
score: 96.79117838541667
patch: System .
rank: 946
score: 96.17059326171875
patch: /
rank: 947
score: 97.74783935546876
patch: case ? ? :
rank: 947
score: 97.6782958984375
patch: switch ( node )
rank: 947
score: 97.62492370605469
patch: case name :
rank: 947
score: 96.77501424153645
patch: for 1
rank: 947
score: 96.507568359375
patch: case ;
rank: 947
score: 96.23740641276042
patch: expr :
rank: 947
score: 96.10200500488281
patch: next
rank: 948
score: 97.6551513671875
patch: case Token . code
rank: 948
score: 97.48177490234374
patch: return null ; default
rank: 948
score: 96.46506754557292
patch: / first
rank: 948
score: 95.8072509765625
patch: default
rank: 949
score: 97.73925170898437
patch: ? else * /
rank: 949
score: 97.65372314453126
patch: switch ( node :
rank: 949
score: 97.47608642578125
patch: case Token . NO
rank: 949
score: 96.55570475260417
patch: result ;
rank: 949
score: 95.7047348022461
patch: null
rank: 950
score: 97.7371826171875
patch: / . * /
rank: 950
score: 96.8498026529948
patch: default {
rank: 950
score: 96.19996134440105
patch: fail :
rank: 950
score: 95.69834899902344
patch: _
rank: 951
score: 97.7371826171875
patch: break Token : else
rank: 951
score: 97.6328125
patch: if . AND :
rank: 951
score: 97.58806610107422
patch: case type :
rank: 951
score: 96.72043863932292
patch: for null
rank: 951
score: 95.58236694335938
patch: Node
rank: 952
score: 97.73693237304687
patch: switch ( type :
rank: 952
score: 97.52981567382812
patch: case E :
rank: 952
score: 96.40723673502605
patch: attribute :
rank: 952
score: 96.3885498046875
patch: / Null
rank: 952
score: 95.41450500488281
patch: String
rank: 953
score: 97.73582763671875
patch: default else * /
rank: 953
score: 97.52225494384766
patch: case null *
rank: 953
score: 96.5911356608073
patch: break }
rank: 953
score: 96.35758463541667
patch: case else
rank: 953
score: 96.3108418782552
patch: text :
rank: 953
score: 96.15679931640625
patch: break )
rank: 953
score: 95.2781753540039
patch: in
rank: 954
score: 95.2236328125
patch: to
rank: 955
score: 97.56409301757813
patch: this . . :
rank: 955
score: 97.35128021240234
patch: return check ;
rank: 955
score: 96.2837422688802
patch: case ]
rank: 955
score: 96.14395141601562
patch: false .
rank: 955
score: 95.22080993652344
patch: false
rank: 956
score: 97.5625732421875
patch: case Token . EMPTY
rank: 956
score: 97.45977783203125
patch: case n :
rank: 956
score: 97.32632446289062
patch: return Control CaMeL
rank: 956
score: 96.56837972005208
patch: HOOK {
rank: 956
score: 96.45290120442708
patch: logger .
rank: 956
score: 96.26760864257812
patch: switch ++
rank: 956
score: 96.25803629557292
patch: RULE :
rank: 956
score: 96.12856038411458
patch: found :
rank: 956
score: 95.19325256347656
patch: Object
rank: 957
score: 97.45223999023438
patch: case null {
rank: 957
score: 96.55636596679688
patch: out .
rank: 957
score: 96.4473876953125
patch: for 0
rank: 957
score: 96.23267618815105
patch: EMPTY :
rank: 957
score: 96.12699381510417
patch: do :
rank: 957
score: 95.19316101074219
patch: if
rank: 958
score: 97.60914611816406
patch: switch Token :
rank: 958
score: 97.53724365234375
patch: case Token . Throwable
rank: 958
score: 97.44940185546875
patch: case $STRING$ *
rank: 958
score: 96.549560546875
patch: / default
rank: 958
score: 96.21807861328125
patch: for ++
rank: 958
score: 96.10894775390625
patch: check :
rank: 958
score: 95.16771697998047
patch: .
rank: 959
score: 97.5337646484375
patch: if ( Node :
rank: 959
score: 96.53717041015625
patch: READ :
rank: 959
score: 96.43667602539062
patch: for (
rank: 959
score: 96.22864786783855
patch: TYPE :
rank: 959
score: 96.10481770833333
patch: pos :
rank: 959
score: 95.12722778320312
patch: {
rank: 960
score: 97.5407943725586
patch: if Token :
rank: 960
score: 97.40939331054688
patch: case null /
rank: 960
score: 96.52683512369792
patch: ) {
rank: 960
score: 96.10245768229167
patch: break null
rank: 960
score: 95.11651611328125
patch: int
rank: 961
score: 96.4994405110677
patch: HOOK .
rank: 961
score: 96.22179158528645
patch: TEXT :
rank: 961
score: 96.07881673177083
patch: it .
rank: 961
score: 95.11183166503906
patch: char
rank: 962
score: 97.39131164550781
patch: case try {
rank: 962
score: 97.28146362304688
patch: cfw . :
rank: 962
score: 96.39168294270833
patch: switch (
rank: 962
score: 95.1034927368164
patch: m
rank: 963
score: 97.51005554199219
patch: case Byte :
rank: 963
score: 96.06490071614583
patch: search :
rank: 963
score: 95.09159851074219
patch: first
rank: 964
score: 97.47528839111328
patch: if : {
rank: 964
score: 97.38923645019531
patch: case code :
rank: 964
score: 96.35929361979167
patch: LOG .
rank: 964
score: 96.20159912109375
patch: name :
rank: 964
score: 96.05397542317708
patch: true ,
rank: 964
score: 95.03024291992188
patch: Integer
rank: 965
score: 97.38860321044922
patch: case line :
rank: 965
score: 96.43418375651042
patch: break {
rank: 965
score: 96.16624959309895
patch: , :
rank: 965
score: 96.05078125
patch: break else
rank: 965
score: 95.02349090576172
patch: do
rank: 966
score: 97.1891860961914
patch: return 0 ;
rank: 966
score: 96.42771402994792
patch: OR :
rank: 966
score: 96.33917236328125
patch: default else
rank: 966
score: 96.15575154622395
patch: result :
rank: 966
score: 96.08102416992188
patch: Type :
rank: 966
score: 96.0422871907552
patch: ok :
rank: 966
score: 94.98015594482422
patch: before
rank: 967
score: 97.3707275390625
patch: case this :
rank: 967
score: 96.07651774088542
patch: break check
rank: 967
score: 96.04031372070312
patch: this :
rank: 967
score: 94.95906066894531
patch: *
rank: 968
score: 97.36797332763672
patch: case name {
rank: 968
score: 97.05180358886719
patch: if AND :
rank: 968
score: 96.27186075846355
patch: log .
rank: 968
score: 96.10687255859375
patch: TRUE :
rank: 968
score: 96.07527669270833
patch: for child
rank: 968
score: 96.03692626953125
patch: update :
rank: 968
score: 94.92247772216797
patch: true
rank: 969
score: 97.45154571533203
patch: } Token :
rank: 969
score: 97.36283874511719
patch: case double :
rank: 969
score: 96.37501017252605
patch: default ;
rank: 969
score: 96.22969563802083
patch: for iterator
rank: 969
score: 96.0745849609375
patch: STRING :
rank: 969
score: 96.03497314453125
patch: init :
rank: 969
score: 94.91500854492188
patch: the
rank: 970
score: 97.43294525146484
patch: } . {
rank: 970
score: 97.34054565429688
patch: case ? /
rank: 970
score: 96.43986002604167
patch: return :
rank: 970
score: 96.06125895182292
patch: abort :
rank: 970
score: 96.02685546875
patch: import :
rank: 970
score: 94.89846801757812
patch: boolean
rank: 971
score: 97.33636474609375
patch: case index :
rank: 971
score: 97.05723571777344
patch: return value ;
rank: 971
score: 96.17958577473958
patch: do .
rank: 971
score: 96.04336547851562
patch: Node {
rank: 971
score: 96.02337646484375
patch: COMMA :
rank: 971
score: 94.89181518554688
patch: $STRING$
rank: 972
score: 97.42253875732422
patch: break Token }
rank: 972
score: 96.16680908203125
patch: Asserts .
rank: 972
score: 96.04933675130208
patch: prefix :
rank: 972
score: 94.833984375
patch: AND
rank: 973
score: 97.40049743652344
patch: case Exception :
rank: 973
score: 96.15828450520833
patch: check .
rank: 973
score: 96.03976440429688
patch: case
rank: 973
score: 96.01881917317708
patch: break ?
rank: 973
score: 96.00082397460938
patch: { else
rank: 973
score: 94.76998901367188
patch: expected
rank: 974
score: 97.39241790771484
patch: break : else
rank: 974
score: 97.32202911376953
patch: case / ?
rank: 974
score: 96.1522725423177
patch: depth :
rank: 974
score: 96.0367431640625
patch: finally private
rank: 974
score: 95.99920654296875
patch: for ;
rank: 974
score: 94.7607650756836
patch: while
rank: 975
score: 97.37077331542969
patch: ? else {
rank: 975
score: 96.3035176595052
patch: Conditionals .
rank: 975
score: 96.14744059244792
patch: Assert .
rank: 975
score: 96.14578247070312
patch: throw :
rank: 975
score: 96.0361328125
patch: namespace :
rank: 975
score: 96.01285807291667
patch: TODO :
rank: 975
score: 94.74652862548828
patch: TRUE
rank: 976
score: 97.36788177490234
patch: } else }
rank: 976
score: 96.24436442057292
patch: / OR
rank: 976
score: 96.03153483072917
patch: expr ;
rank: 976
score: 96.00296020507812
patch: parse :
rank: 976
score: 95.97491455078125
patch: case Node
rank: 976
score: 94.7406997680664
patch: name
rank: 977
score: 97.34251403808594
patch: return null :
rank: 977
score: 96.08937581380208
patch: check null
rank: 977
score: 96.01898193359375
patch: Boolean :
rank: 977
score: 95.96256510416667
patch: switch --
rank: 977
score: 94.72607421875
patch: $NUMBER$
rank: 978
score: 96.20200602213542
patch: Conditionals :
rank: 978
score: 96.00777180989583
patch: type :
rank: 978
score: 96.00050862630208
patch: finished :
rank: 978
score: 95.9525655110677
patch: case /
rank: 978
score: 94.66847229003906
patch: class
rank: 979
score: 97.32021077473958
patch: break Token
rank: 979
score: 96.39718627929688
patch: : .
rank: 979
score: 96.0662129720052
patch: return ;
rank: 979
score: 95.99789428710938
patch: null ,
rank: 979
score: 94.65303039550781
patch: from
rank: 980
score: 96.16514078776042
patch: m {
rank: 980
score: 96.0565694173177
patch: switch 1
rank: 980
score: 95.99723307291667
patch: ! :
rank: 980
score: 95.99141438802083
patch: case Type
rank: 980
score: 95.944091796875
patch: for variable
rank: 980
score: 94.64625549316406
patch: error
rank: 981
score: 96.13895670572917
patch: HOOK ;
rank: 981
score: 95.97951253255208
patch: line :
rank: 981
score: 94.56053161621094
patch: byte
rank: 982
score: 96.2661844889323
patch: case FUNCTION
rank: 982
score: 96.19706217447917
patch: . :
rank: 982
score: 96.1388448079427
patch: / +
rank: 982
score: 95.98541259765625
patch: IAST :
rank: 982
score: 95.93654378255208
patch: throw {
rank: 982
score: 94.49382019042969
patch: Expression
rank: 983
score: 96.13525390625
patch: Conditionals {
rank: 983
score: 95.7057596842448
patch: I :
rank: 983
score: 94.49209594726562
patch: ||
rank: 984
score: 96.07726033528645
patch: try .
rank: 984
score: 95.9461669921875
patch: EXCEPTION :
rank: 984
score: 95.93412272135417
patch: case &
rank: 984
score: 95.68204752604167
patch: Set :
rank: 984
score: 94.45980834960938
patch: constructor
rank: 985
score: 96.12766520182292
patch: evaluated .
rank: 985
score: 96.01576741536458
patch: switch .
rank: 985
score: 95.97857666015625
patch: default }
rank: 985
score: 95.94217936197917
patch: s .
rank: 985
score: 95.64988199869792
patch: super :
rank: 985
score: 94.45855712890625
patch: string
rank: 986
score: 94.45576477050781
patch: level
rank: 987
score: 95.93021647135417
patch: trim :
rank: 987
score: 95.9268290201823
patch: : {
rank: 987
score: 95.6452128092448
patch: switch :
rank: 987
score: 95.07369995117188
patch: loop
rank: 987
score: 94.4263916015625
patch: )
rank: 988
score: 95.92630004882812
patch: params :
rank: 988
score: 95.64186604817708
patch: b :
rank: 988
score: 95.12910461425781
patch: HOOK
rank: 988
score: 94.419921875
patch: &&
rank: 989
score: 95.91813151041667
patch: NO :
rank: 989
score: 95.63956705729167
patch: target :
rank: 989
score: 94.60797119140625
patch: this
rank: 990
score: 95.89410400390625
patch: attribute .
rank: 990
score: 94.39041137695312
patch: ,
rank: 990
score: 93.78170776367188
patch: try
rank: 991
score: 94.66677856445312
patch: depth
rank: 991
score: 94.36843872070312
patch: end
rank: 992
score: 95.8709208170573
patch: return variable
rank: 992
score: 95.60184733072917
patch: COLON :
rank: 992
score: 94.3501205444336
patch: R
rank: 992
score: 93.35536193847656
patch: finally
rank: 993
score: 94.33560180664062
patch: text
rank: 993
score: 94.26304626464844
patch: break
rank: 994
score: 94.34207916259766
patch: match
rank: 994
score: 94.31263732910156
patch: VM
rank: 994
score: 94.1960678100586
patch: MAYBE
rank: 994
score: 93.19662475585938
patch: throw
rank: 995
score: 94.28280639648438
patch: selected
rank: 995
score: 94.18579864501953
patch: READ
rank: 995
score: 94.08531951904297
patch: return
rank: 995
score: 93.75181579589844
patch: found
rank: 995
score: 93.1908950805664
patch: Token
rank: 996
score: 94.273193359375
patch: 1
rank: 996
score: 94.25804138183594
patch: type
rank: 996
score: 94.23666381835938
patch: Phase
rank: 997
score: 94.26206970214844
patch: Key
rank: 997
score: 93.583984375
patch: @
rank: 998
score: 94.54965209960938
patch: ;
rank: 998
score: 94.25210571289062
patch: !
rank: 998
score: 94.23831176757812
patch: token
rank: 998
score: 94.11311340332031
patch: so
rank: 999
score: 94.22186279296875
patch: long
rank: 999
score: 94.19027709960938
patch: buffer
rank: 999
score: 93.93789672851562
patch: OR
rank: 999
score: 93.82830047607422
patch: t
rank: 1000
score: 94.396240234375
patch: ]
rank: 1000
score: 94.21785736083984
patch: Exception
